
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[4]);

  var _Main = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  _miot.PackageEvent.packageAuthorizationCancel.addListener(function () {
    _miot.Package.exit();
  });

  var defaultFontFamily = (0, _objectSpread2.default)({}, _reactNative.Platform.select({
    android: {
      fontFamily: ''
    }
  }));
  var oldRender = _reactNative.Text.render;

  _reactNative.Text.render = function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var origin = oldRender.call.apply(oldRender, [this].concat(args));
    return _react.default.cloneElement(origin, {
      style: [defaultFontFamily, origin.props.style]
    });
  };

  switch (_miot.Package.entrance) {
    case _miot.Entrance.Scene:
      _miot.Package.entry(Scene, function (_) {});

      break;

    default:
      _miot.Package.entry(_Main.default, function (_) {});

      break;
  }

  console.disableYellowBox = function () {};
},10001,[14305,14314,10297,10074,10033,10004]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[10]);

  var _Host = _$$_REQUIRE(_dependencyMap[11]);

  var _HealthMode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _TimeSetting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _GuestWifi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _WPS = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _RestartPlan = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _RestartTimeSetting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _ResetPassword = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _HomePage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _DeviceIndex = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _ContentDetail = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _ContentInfoStatus = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var _ContentInfoStatusData = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var _wifisetting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var _RestarRouter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

  var _MpkWebPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26]));

  var _MpkToolPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27]));

  var _QosMode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28]));

  var _QosGuest = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29]));

  var _NetworkOptimize = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[30]));

  var _GeneralSettings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[31]));

  var Screens = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[32]));

  var _NetworkMode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[33]));

  var _NetModeWireRelay = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[34]));

  var _NetModePppoe = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[35]));

  var _NetModeDhcp = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[36]));

  var _NetModeStaticIP = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[37]));

  var _NetModeWirelessRelay = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[38]));

  var _ToolBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[39]));

  var _ChildProtect = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[40]));

  var _CPDeviceList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[41]));

  var _CPDLAddDevice = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[42]));

  var _CommonSetting = _$$_REQUIRE(_dependencyMap[43]);

  var _RouterPluginCommonSetting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[44]));

  var _RouterSetting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[45]));

  var _NetworkModeWirelessSelectWifi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[46]));

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[47]));

  var _Set = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[48]));

  var _DeviceAccessControl = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[49]));

  var _WebsiteAccessControl = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[50]));

  var _TimerSetting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[51]));

  var _WebsiteFilter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[52]));

  var _DeviceTimerList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[53]));

  var _MeshAddChildTips = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[54]));

  var _MeshTree = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[55]));

  var _MeshContentDetails = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[56]));

  var _MeshSearchChild = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[57]));

  var _MeshSearchChildTips = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[58]));

  var _AddMeshSelectLocate = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[59]));

  var _MeshExtend = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[60]));

  var _MeshExtendResult = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[61]));

  var _BlackListStatus = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[62]));

  var _BlackList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[63]));

  var _BlackListAddDevice = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[64]));

  var _BlockRecords = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[65]));

  var _LedRGB = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[66]));

  var _Storage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[67]));

  var _WebView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[68]));

  var _USB = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[69]));

  var _miot = _$$_REQUIRE(_dependencyMap[70]);

  var _Upgrade = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[71]));

  var _Detail = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[72]));

  var _UpgradeSetting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[73]));

  var RootStack = (0, _reactNavigation.createStackNavigator)({
    Home: _HomePage.default,
    Devices: _DeviceIndex.default,
    DevicesDetails: _ContentDetail.default,
    DevicesInfoStatus: _ContentInfoStatus.default,
    DevicesInfoStatusData: _ContentInfoStatusData.default,
    WiFiSetting: _wifisetting.default,
    TimeSetting: _TimeSetting.default,
    RestartPlan: _RestartPlan.default,
    GuestWifi: _GuestWifi.default,
    WPS: _WPS.default,
    ResetPassword: _ResetPassword.default,
    MpkWebPage: _MpkWebPage.default,
    MpkToolPage: _MpkToolPage.default,
    QosEntry: _QosMode.default,
    QosGuest: _QosGuest.default,
    NetworkOptimizeTool: _NetworkOptimize.default,
    RestartTimeSetting: _RestartTimeSetting.default,
    RestarRouter: _RestarRouter.default,
    HealthMode: _HealthMode.default,
    GeneralSettings: _GeneralSettings.default,
    DeviceName: Screens.DeviceName,
    DeviceShare: Screens.DeviceShare,
    LocationManage: Screens.LocationManage,
    FirmwareUpdate: Screens.FirmwareUpdate,
    UsingHelp: Screens.UsingHelp,
    LawInfo: Screens.LawInfo,
    Feedback: Screens.Feedback,
    TimeZone: Screens.TimeZone,
    ZoneList: Screens.ZoneList,
    MoreSettings: Screens.MoreSettings,
    ProblemType: Screens.ProblemType,
    SelectProblem: Screens.SelectProblem,
    NetworkMode: _NetworkMode.default,
    ToolBox: _ToolBox.default,
    NetModeWireRelay: _NetModeWireRelay.default,
    NetModePppoe: _NetModePppoe.default,
    NetModeDhcp: _NetModeDhcp.default,
    NetModeStaticIP: _NetModeStaticIP.default,
    NetModeWirelessRelay: _NetModeWirelessRelay.default,
    ChildProtectHomePage: _ChildProtect.default,
    CPDeviceList: _CPDeviceList.default,
    CPDLAddDevice: _CPDLAddDevice.default,
    RouterPluginCommonSetting: _RouterPluginCommonSetting.default,
    FirmwareUpgrade: _CommonSetting.FirmwareUpgrade,
    MoreSetting: _CommonSetting.MoreSetting,
    RouterSetting: _RouterSetting.default,
    NetworkModeWirelessSelectWifi: _NetworkModeWirelessSelectWifi.default,
    RouterSetWifiAndNetmode: _Set.default,
    DeviceAccessControl: _DeviceAccessControl.default,
    WebsiteAccessControl: _WebsiteAccessControl.default,
    TimerSetting: _TimerSetting.default,
    WebsiteFilter: _WebsiteFilter.default,
    DeviceTimerList: _DeviceTimerList.default,
    MeshAddChildTips: _MeshAddChildTips.default,
    MeshTree: _MeshTree.default,
    MeshContentDetails: _MeshContentDetails.default,
    MeshSearchChild: _MeshSearchChild.default,
    MeshSearchChildTips: _MeshSearchChildTips.default,
    AddMeshSelectLocate: _AddMeshSelectLocate.default,
    MeshExtend: _MeshExtend.default,
    MeshExtendResult: _MeshExtendResult.default,
    BlackListStatus: _BlackListStatus.default,
    BlackList: _BlackList.default,
    BlockRecords: _BlockRecords.default,
    BlackListAddDevice: _BlackListAddDevice.default,
    LedRGB: _LedRGB.default,
    Storage: _Storage.default,
    WebView: _WebView.default,
    USB30: _USB.default,
    RouterUpgrade: _Upgrade.default,
    UpgradeDetail: _Detail.default,
    UpgradeSetting: _UpgradeSetting.default
  }, {
    initialRouteName: 'Home',
    navigationOptions: function navigationOptions(_ref) {
      var navigation = _ref.navigation;
      return {
        header: _react.default.createElement(_TitleBar.default, {
          title: navigation.state.params ? navigation.state.params.title : '',
          type: "dark",
          onPressLeft: function onPressLeft() {
            navigation.goBack();
          }
        })
      };
    },
    transitionConfig: function transitionConfig() {
      return {
        screenInterpolator: interpolator
      };
    }
  });

  function interpolator(props) {
    var layout = props.layout,
        position = props.position,
        scene = props.scene;

    if (!layout.isMeasured) {
      return function (props) {
        var navigation = props.navigation,
            scene = props.scene;
        var focused = navigation.state.index === scene.index;
        var opacity = focused ? 1 : 0;
        var translate = focused ? 0 : 1000000;
        return {
          opacity: opacity,
          transform: [{
            translateX: translate
          }, {
            translateY: translate
          }]
        };
      };
    }

    var interpolate = function interpolate(props) {
      var scene = props.scene,
          scenes = props.scenes;
      var index = scene.index;
      var lastSceneIndexInScenes = scenes.length - 1;
      var isBack = !scenes[lastSceneIndexInScenes].isActive;

      if (isBack) {
        var currentSceneIndexInScenes = scenes.findIndex(function (item) {
          return item === scene;
        });
        var targetSceneIndexInScenes = scenes.findIndex(function (item) {
          return item.isActive;
        });
        var targetSceneIndex = scenes[targetSceneIndexInScenes].index;
        var lastSceneIndex = scenes[lastSceneIndexInScenes].index;

        if (index !== targetSceneIndex && currentSceneIndexInScenes === lastSceneIndexInScenes) {
          return {
            first: Math.min(targetSceneIndex, index - 1),
            last: index + 1
          };
        } else if (index === targetSceneIndex && currentSceneIndexInScenes === targetSceneIndexInScenes) {
          return {
            first: index - 1,
            last: Math.max(lastSceneIndex, index + 1)
          };
        } else if (index === targetSceneIndex || currentSceneIndexInScenes > targetSceneIndexInScenes) {
          return null;
        } else {
          return {
            first: index - 1,
            last: index + 1
          };
        }
      } else {
        return {
          first: index - 1,
          last: index + 1
        };
      }
    };

    if (!interpolate) return {
      opacity: 0
    };
    var p = interpolate(props);
    if (!p) return;
    var first = p.first,
        last = p.last;
    var index = scene.index;
    var opacity = position.interpolate({
      inputRange: [first, first + 0.01, index, last - 0.01, last],
      outputRange: [0, 1, 1, 0.85, 0]
    });
    var width = layout.initWidth;
    var translateX = position.interpolate({
      inputRange: [first, index, last],
      outputRange: [width, 0, width * -0.3]
    });
    var translateY = 0;
    return {
      opacity: opacity,
      transform: [{
        translateX: translateX
      }, {
        translateY: translateY
      }]
    };
  }

  ;

  var App = function (_React$Component) {
    (0, _inherits2.default)(App, _React$Component);

    function App() {
      (0, _classCallCheck2.default)(this, App);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(App).apply(this, arguments));
    }

    (0, _createClass2.default)(App, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var routerInfoManager, gatewayIp, response;
        return _regenerator.default.async(function componentDidMount$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                routerInfoManager = _RouterInfoHelper.default.sharedInstance();
                routerInfoManager.refreshRouterToken();
                routerInfoManager.requestLocalWifiInfo();
                routerInfoManager.requestCurrentRouterInfo();
                gatewayIp = '0.0.0.0';
                _context.next = 7;
                return _regenerator.default.awrap(_miot.System.network.getGatewayIpAddress().then(function (res) {
                  return res;
                }).catch(function (res) {
                  return res;
                }));

              case 7:
                response = _context.sent;

                if (response.code === 0) {
                  gatewayIp = response.data.ipAddress;
                }

                routerInfoManager.requestRelayRouterInitInfo(gatewayIp);

                _Host.HostEvent.cellPhoneNetworkStateChanged.addListener(function (networkInfo) {
                  routerInfoManager.refreshRouterToken();
                  routerInfoManager.requestLocalWifiInfo();
                  routerInfoManager.requestCurrentRouterInfo();
                  routerInfoManager.requestRelayRouterInitInfo(gatewayIp);
                });

              case 11:
              case "end":
                return _context.stop();
            }
          }
        });
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(RootStack, null);
      }
    }]);
    return App;
  }(_react.default.Component);

  exports.default = App;
},10004,[14308,14305,14674,14320,14323,14371,14377,14386,10284,10297,10918,10035,10007,10049,10052,10154,10172,10175,10178,10181,10334,10349,10385,10388,10391,10415,10427,10433,10436,10442,10445,10457,10460,10625,10631,10634,10643,10646,10649,10652,10718,10724,10730,10353,10733,10736,10745,10076,10754,10775,10787,10790,10793,10796,10799,10805,10817,10823,10832,10835,10871,10874,10883,10364,10892,10895,10907,10919,11132,11135,10074,11138,11222,11225]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _MessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _HealthMode_RestartPlan = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[13]);

  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _RestartPlan_HealthMode = _$$_REQUIRE(_dependencyMap[16]);

  var HealthMode = function (_React$Component) {
    (0, _inherits2.default)(HealthMode, _React$Component);

    function HealthMode(props) {
      var _this;

      (0, _classCallCheck2.default)(this, HealthMode);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HealthMode).call(this, props));

      _this.deleteHandler = function () {
        _this.setState({
          'isShowLoading': true,
          loadingText: '正在保存设置'
        });

        (0, _RestartPlan_HealthMode.deleteItem)(_this.state.deleteItemId, function (res) {
          _this.setState({
            'isShowLoading': false
          });

          if (res.code == 0) {
            var copyList = _this.state.dataSource.filter(function (v, i) {
              return v.id != _this.state.deleteItemId;
            });

            _this.setState({
              dataSource: copyList
            });
          }
        });
      };

      _this.state = {
        dataSource: [],
        isShowDeleteDialog: false,
        isShowLoading: false,
        loadingText: ''
      };
      return _this;
    }

    (0, _createClass2.default)(HealthMode, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.setState({
          'isShowLoading': true,
          loadingText: '加载数据中...'
        });
        (0, _RestartPlan_HealthMode.getInitData)({
          start_id: 30000,
          end_id: 30009
        }, function (res) {
          _this2.setState({
            dataSource: (0, _RestartPlan_HealthMode.formatDataList)(res.scene_list),
            isShowLoading: false
          });
        }, this.props.navigation.goBack);
      }
    }, {
      key: "openTimeSetting",
      value: function openTimeSetting() {
        var _this3 = this;

        if (this.state.dataSource.length >= 9) {
          _index.default.show("最多只能添加9个定时哦~");

          return;
        }

        this.props.navigation.navigate("TimeSetting", {
          type: 'add',
          callback: function callback(item) {
            item.id = (0, _RestartPlan_HealthMode.generateID)(_this3.state.dataSource, 'normal_wifi_down');
            item.enabled = true;
            var duration = (0, _RestartPlan_HealthMode.calDurationTime)(item.selectedWifiCloseRawString, item.selectedWifiOpenRawString);
            var utc_time = (0, _RestartPlan_HealthMode.timeStringToUtcTime)(item.selectedWifiCloseArray);
            var data = (0, _RestartPlan_HealthMode.generateXHRData)({
              id: item.id,
              command: "scene_setting",
              enabled: true,
              repeat: item.repeatArray,
              time: item.selectedWifiCloseRawString + ':00',
              duration: duration,
              utc_time: utc_time,
              type: 'normal_wifi_down'
            });
            (0, _RestartPlan_HealthMode.sendData)(data, function (res) {
              if (res.code == 0) {
                var list = _this3.state.dataSource;
                list.push(item);

                _this3.setState({
                  dataSource: list
                });

                _CommonUtils.default.ShowToastBottom('数据添加成功');
              }
            });
          }
        });
      }
    }, {
      key: "editItem",
      value: function editItem(rowData) {
        var _this4 = this;

        this.props.navigation.navigate('TimeSetting', {
          type: 'edit',
          info: rowData,
          callback: function callback(info) {
            var duration = (0, _RestartPlan_HealthMode.calDurationTime)(info.selectedWifiCloseRawString, info.selectedWifiOpenRawString);
            var utc_time = (0, _RestartPlan_HealthMode.timeStringToUtcTime)(info.selectedWifiCloseArray);
            var data = (0, _RestartPlan_HealthMode.generateXHRData)({
              id: info.id,
              command: "scene_update",
              enabled: info.enabled,
              repeat: info.repeatArray,
              time: info.selectedWifiCloseRawString + ':00',
              duration: duration,
              utc_time: utc_time,
              type: 'normal_wifi_down'
            });
            (0, _RestartPlan_HealthMode.sendData)(data, function (res) {
              if (res.code == 0) {
                _this4.state.dataSource.map(function (item, index) {
                  if (item.id == rowData.id) {
                    item = rowData;
                  }
                });

                _this4.setState({
                  dataSource: _this4.state.dataSource
                });

                _CommonUtils.default.ShowToastBottom('编辑成功');
              }
            });
          }
        });
      }
    }, {
      key: "switchChange",
      value: function switchChange(value, rowData) {
        var _this5 = this;

        this.setState({
          'isShowLoading': true,
          loadingText: '正在保存设置'
        });
        var duration = (0, _RestartPlan_HealthMode.calDurationTime)(rowData.selectedWifiCloseRawString, rowData.selectedWifiOpenRawString);
        var utc_time = (0, _RestartPlan_HealthMode.timeStringToUtcTime)(rowData.selectedWifiCloseArray);
        var data = (0, _RestartPlan_HealthMode.generateXHRData)({
          id: rowData.id,
          command: "scene_update",
          enabled: value,
          repeat: rowData.repeatArray,
          time: rowData.selectedWifiCloseRawString + ':00',
          duration: duration,
          utc_time: utc_time,
          type: 'normal_wifi_down'
        });
        (0, _RestartPlan_HealthMode.sendData)(data, function (res) {
          _this5.setState({
            'isShowLoading': false
          });

          if (res.code == 0) {
            _this5.state.dataSource.map(function (item, index) {
              if (item.id == rowData.id) {
                item.enabled = value;
              }
            });

            _this5.setState({
              dataSource: _this5.state.dataSource
            });
          }
        });
      }
    }, {
      key: "_renderRow",
      value: function _renderRow(rowData, sectionID, rowID) {
        var _this6 = this;

        var spellTitle = rowData.selectedWifiCloseRawString + '关闭WiFi，' + rowData.selectedWifiOpenRawString + '开启WiFi';
        var repeatSubtitle;

        if (_RestartPlan_HealthMode.selectedRepeatTextArray[rowData.repeatType]) {
          repeatSubtitle = _RestartPlan_HealthMode.selectedRepeatTextArray[rowData.repeatType];
        } else {
          repeatSubtitle = (0, _RestartPlan_HealthMode.alignRepeatDay)(rowData.repeatArray).map(function (o) {
            return _RestartPlan_HealthMode.selectedRepeatDayTextArray[o];
          }).join(",");
        }

        return _react.default.createElement(_reactNative.TouchableHighlight, {
          key: rowID,
          underlayColor: "rgba(0,0,0,.05)",
          onLongPress: function onLongPress(_) {
            _this6.setState({
              isShowDeleteDialog: true,
              deleteItemId: rowData.id
            });
          },
          onPress: function onPress(_) {
            _this6.editItem(rowData, sectionID, rowID);
          }
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: _HealthMode_RestartPlan.default.innerContainer
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: _HealthMode_RestartPlan.default.innerTitle,
          numberOfLines: 1
        }, spellTitle), _react.default.createElement(_reactNative.Text, {
          style: _HealthMode_RestartPlan.default.innersubTitle,
          numberOfLines: 1
        }, repeatSubtitle)), _react.default.createElement(_Switch.default, {
          style: {
            width: 46,
            height: 24
          },
          onTintColor: "#32BAC0",
          tintColor: "#F0F0F0",
          value: rowData.enabled,
          onValueChange: function onValueChange(value) {
            _this6.switchChange(value, rowData);
          }
        })), _react.default.createElement(_Separator.default, null)));
      }
    }, {
      key: "render",
      value: function render() {
        var _this7 = this;

        return _react.default.createElement(_reactNative.View, {
          style: _HealthMode_RestartPlan.default.container
        }, _react.default.createElement(_reactNative.Text, {
          style: _HealthMode_RestartPlan.default.titleText
        }, "\u5B9A\u65F6\u5173\u95EDWiFi\uFF0C\u907F\u514D\u71AC\u591C\u4E0A\u7F51\uFF0C\u5065\u5EB7\u751F\u6D3B"), _react.default.createElement(_reactNative.FlatList, {
          style: _HealthMode_RestartPlan.default.list,
          data: this.state.dataSource,
          renderItem: function renderItem(_ref) {
            var item = _ref.item,
                index = _ref.index;
            return _this7._renderRow(item, index);
          }
        }), _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.TouchableHighlight, {
          underlayColor: "rgba(0,0,0,.05)",
          onPress: function onPress(_) {
            return _this7.openTimeSetting();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: _HealthMode_RestartPlan.default.addcont
        }, _react.default.createElement(_reactNative.Image, {
          style: _HealthMode_RestartPlan.default.addIcon,
          resizeMode: "contain",
          source: _$$_REQUIRE(_dependencyMap[17])
        }), _react.default.createElement(_reactNative.Text, {
          style: _HealthMode_RestartPlan.default.addText
        }, "\u6DFB\u52A0\u5B9A\u65F6"))), _react.default.createElement(_LoadingDialog.default, {
          visible: this.state.isShowLoading,
          message: this.state.loadingText
        }), _react.default.createElement(_MessageDialog.default, {
          visible: this.state.isShowDeleteDialog,
          message: '确认删除此定时？',
          buttons: [{
            text: '取消',
            style: {
              color: '#666666'
            },
            callback: function callback(_) {
              _this7.setState({
                isShowDeleteDialog: false,
                deleteItemId: null
              });
            }
          }, {
            text: '确定',
            style: {
              color: '#2C7DFA'
            },
            callback: function callback(_) {
              _this7.setState({
                isShowDeleteDialog: false
              });

              _this7.deleteHandler();
            }
          }],
          onDismiss: function onDismiss(_) {
            _this7.setState({
              isShowDeleteDialog: false
            });
          }
        }));
      }
    }]);
    return HealthMode;
  }(_react.default.Component);

  exports.default = HealthMode;

  HealthMode.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: '定时关闭WiFi',
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };
},10007,[14305,14320,14323,14371,14377,14386,10284,10347,10743,10740,10332,10297,10010,10033,10013,10040,10043,10046]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _default = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      flex: 1
    },
    icon: {
      width: 100,
      height: 100,
      margin: 40
    },
    list: {
      flex: 1
    },
    header: {
      backgroundColor: '#1a1b2a',
      alignItems: 'center',
      height: 280
    },
    innerContainer: {
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center',
      padding: 15
    },
    innerTitle: {
      color: '#000'
    },
    innersubTitle: {
      fontSize: 12
    },
    titleText: {
      color: '#ccc',
      textAlign: 'center'
    },
    addcont: {
      alignItems: 'center',
      justifyContent: 'center',
      height: 60,
      marginTop: 10,
      marginBottom: 10
    },
    addIcon: {
      width: 40,
      height: 40
    },
    addText: {
      marginTop: 5
    },
    separator: {
      backgroundColor: '#000',
      marginTop: 20
    }
  });

  exports.default = _default;
},10010,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {
    ToastContainer: true
  };
  Object.defineProperty(exports, "ToastContainer", {
    enumerable: true,
    get: function get() {
      return _ToastContainer.default;
    }
  });
  exports.default = undefined;

  var _Toast = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  Object.keys(_Toast).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _Toast[key];
      }
    });
  });

  var _ToastContainer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _default = _Toast.default;
  exports.default = _default;
},10013,[14305,14308,10016,10037]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Manager", {
    enumerable: true,
    get: function get() {
      return _reactNativeRootSiblings.default;
    }
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeRootSiblings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _ToastContainer = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var Toast = function (_Component) {
    (0, _inherits2.default)(Toast, _Component);

    function Toast() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Toast);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Toast)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this._toast = null;

      _this.componentWillMount = function () {
        _this._toast = new _reactNativeRootSiblings.default(_react.default.createElement(_ToastContainer.default, (0, _extends2.default)({}, _this.props, {
          duration: 0
        })));
      };

      _this.componentWillReceiveProps = function (nextProps) {
        _this._toast.update(_react.default.createElement(_ToastContainer.default, (0, _extends2.default)({}, nextProps, {
          duration: 0
        })));
      };

      _this.componentWillUnmount = function () {
        _this._toast.destroy();
      };

      return _this;
    }

    (0, _createClass2.default)(Toast, [{
      key: "render",
      value: function render() {
        return null;
      }
    }]);
    return Toast;
  }(_react.Component);

  Toast.displayName = 'Toast';
  Toast.propTypes = _ToastContainer.default.propTypes;
  Toast.positions = _ToastContainer.positions;
  Toast.durations = _ToastContainer.durations;

  Toast.show = function (message) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
      position: _ToastContainer.positions.BOTTOM,
      duration: _ToastContainer.durations.SHORT
    };
    return new _reactNativeRootSiblings.default(_react.default.createElement(_ToastContainer.default, (0, _extends2.default)({}, options, {
      visible: true
    }), message));
  };

  Toast.hide = function (toast) {
    if (toast instanceof _reactNativeRootSiblings.default) {
      toast.destroy();
    } else {}
  };

  var _default = Toast;
  exports.default = _default;
},10016,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10019,10037]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.setSiblingWrapper = setSiblingWrapper;
  exports.RootSiblingParent = RootSiblingParent;
  exports.RootSiblingPortal = RootSiblingPortal;
  exports.default = undefined;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _ChildrenWrapper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _wrapRootComponent3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var siblingWrapper = function siblingWrapper(sibling) {
    return sibling;
  };

  function renderSibling(sibling) {
    return siblingWrapper(sibling);
  }

  if (!global.__rootSiblingsInjected && !global.__rootSiblingsDisabled) {
    _reactNative.AppRegistry.setWrapperComponentProvider(function () {
      return Root;
    });

    global.__rootSiblingsInjected = true;
  }

  function setSiblingWrapper(wrapper) {
    siblingWrapper = wrapper;
  }

  var _wrapRootComponent = (0, _wrapRootComponent3.default)(_ChildrenWrapper.default, renderSibling),
      Root = _wrapRootComponent.Root,
      defaultManager = _wrapRootComponent.manager;

  var uuid = 0;
  var managerStack = [defaultManager];
  var inactiveManagers = new Set();

  function getActiveManager() {
    for (var i = managerStack.length - 1; i >= 0; i--) {
      var manager = managerStack[i];

      if (!inactiveManagers.has(manager)) {
        return manager;
      }
    }

    return defaultManager;
  }

  var RootSiblingsManager = function () {
    function RootSiblingsManager(element, callback) {
      (0, _classCallCheck2.default)(this, RootSiblingsManager);
      this.id = "root-sibling-" + (uuid + 1);
      this.manager = getActiveManager();
      this.manager.update(this.id, element, callback);
      uuid++;
    }

    (0, _createClass2.default)(RootSiblingsManager, [{
      key: "update",
      value: function update(element, callback) {
        this.manager.update(this.id, element, callback);
      }
    }, {
      key: "destroy",
      value: function destroy(callback) {
        this.manager.destroy(this.id, callback);
      }
    }]);
    return RootSiblingsManager;
  }();

  exports.default = RootSiblingsManager;

  function RootSiblingParent(props) {
    var inactive = props.inactive;

    var _useState = (0, _react.useState)(function () {
      var _wrapRootComponent2 = (0, _wrapRootComponent3.default)(_ChildrenWrapper.default, renderSibling),
          parentRoot = _wrapRootComponent2.Root,
          parentManager = _wrapRootComponent2.manager;

      managerStack.push(parentManager);

      if (inactive) {
        inactiveManagers.add(parentManager);
      }

      return {
        Root: parentRoot,
        manager: parentManager
      };
    }),
        _useState2 = (0, _slicedToArray2.default)(_useState, 1),
        sibling = _useState2[0];

    (0, _react.useEffect)(function () {
      return function () {
        if (sibling) {
          var index = managerStack.indexOf(sibling.manager);

          if (index > 0) {
            managerStack.splice(index, 1);
          }
        }
      };
    }, [sibling]);

    if (inactive && sibling && !inactiveManagers.has(sibling.manager)) {
      inactiveManagers.add(sibling.manager);
    } else if (!inactive && sibling && inactiveManagers.has(sibling.manager)) {
      inactiveManagers.delete(sibling.manager);
    }

    var Parent = sibling.Root;
    return _react.default.createElement(Parent, null, props.children);
  }

  function RootSiblingPortal(props) {
    var _useState3 = (0, _react.useState)(function () {
      return new RootSiblingsManager(null);
    }),
        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),
        sibling = _useState4[0];

    sibling.update(props.children);
    (0, _react.useEffect)(function () {
      if (sibling) {
        return function () {
          return sibling.destroy();
        };
      }
    }, [sibling]);
    return null;
  }
},10019,[14308,14305,14347,14320,14323,10297,10033,10022,10025]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = ChildrenWrapper;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  function ChildrenWrapper(props) {
    return _react.default.createElement(_react.default.Fragment, null, props.children);
  }
},10022,[14305,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = wrapRootComponent;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _RootController = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _RootSiblings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  function wrapRootComponent(_Root, renderSibling) {
    var controller = new _RootController.default();
    return {
      Root: function Root(props) {
        return _react.default.createElement(_RootSiblings.default, {
          controller: controller,
          renderSibling: renderSibling
        }, _react.default.createElement(_Root, props));
      },
      manager: {
        update: function update(id, element, callback) {
          controller.update(id, element, callback);
        },
        destroy: function destroy(id, callback) {
          controller.destroy(id, callback);
        }
      }
    };
  }
},10025,[14305,10297,10028,10031]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.RootControllerChanges = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var RootControllerChanges;
  exports.RootControllerChanges = RootControllerChanges;

  (function (RootControllerChanges) {
    RootControllerChanges[RootControllerChanges["Insert"] = 0] = "Insert";
    RootControllerChanges[RootControllerChanges["Update"] = 1] = "Update";
    RootControllerChanges[RootControllerChanges["Remove"] = 2] = "Remove";
  })(RootControllerChanges || (exports.RootControllerChanges = RootControllerChanges = {}));

  var RootController = function () {
    function RootController() {
      (0, _classCallCheck2.default)(this, RootController);
      this.siblings = new Set();
      this.pendingActions = [];
      this.callback = null;
    }

    (0, _createClass2.default)(RootController, [{
      key: "update",
      value: function update(id, element, callback) {
        if (!this.siblings.has(id)) {
          this.emit(id, {
            change: RootControllerChanges.Insert,
            element: element,
            updateCallback: callback
          });
          this.siblings.add(id);
        } else {
          this.emit(id, {
            change: RootControllerChanges.Update,
            element: element,
            updateCallback: callback
          });
        }
      }
    }, {
      key: "destroy",
      value: function destroy(id, callback) {
        if (this.siblings.has(id)) {
          this.emit(id, {
            change: RootControllerChanges.Remove,
            element: null,
            updateCallback: callback
          });
          this.siblings.delete(id);
        } else if (callback) {
          callback();
        }
      }
    }, {
      key: "setCallback",
      value: function setCallback(callback) {
        this.callback = callback;
        this.pendingActions.forEach(function (_ref) {
          var id = _ref.id,
              action = _ref.action;
          callback(id, action);
        });
      }
    }, {
      key: "emit",
      value: function emit(id, action) {
        if (this.callback) {
          this.callback(id, action);
        } else {
          this.pendingActions.push({
            action: action,
            id: id
          });
        }
      }
    }]);
    return RootController;
  }();

  exports.default = RootController;
},10028,[14305,14320,14323]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _staticContainer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _RootController = _$$_REQUIRE(_dependencyMap[9]);

  var _default = function (_Component) {
    (0, _inherits2.default)(_default, _Component);

    function _default(props) {
      var _this;

      (0, _classCallCheck2.default)(this, _default);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(_default).call(this, props));
      _this.updatedSiblings = new Set();
      _this.siblingsPool = [];
      _this.state = {
        siblings: []
      };
      return _this;
    }

    (0, _createClass2.default)(_default, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.props.controller.setCallback(function (id, change) {
          setImmediate(function () {
            return _this2.commitChange(id, change);
          });
        });
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        this.updatedSiblings.clear();
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_react.default.Fragment, null, this.props.children, this.renderSiblings());
      }
    }, {
      key: "commitChange",
      value: function commitChange(id, _ref) {
        var _this3 = this;

        var change = _ref.change,
            element = _ref.element,
            updateCallback = _ref.updateCallback;
        var siblings = Array.from(this.siblingsPool);
        var index = siblings.findIndex(function (sibling) {
          return sibling.id === id;
        });

        if (change === _RootController.RootControllerChanges.Remove) {
          if (index > -1) {
            siblings.splice(index, 1);
          } else {
            this.invokeCallback(updateCallback);
            return;
          }
        } else if (change === _RootController.RootControllerChanges.Update) {
          if (index > -1) {
            siblings.splice(index, 1, {
              element: element,
              id: id
            });
            this.updatedSiblings.add(id);
          } else {
            this.invokeCallback(updateCallback);
            return;
          }
        } else {
          if (index > -1) {
            siblings.splice(index, 1);
          }

          siblings.push({
            element: element,
            id: id
          });
          this.updatedSiblings.add(id);
        }

        this.siblingsPool = siblings;
        this.setState({
          siblings: siblings
        }, function () {
          return _this3.invokeCallback(updateCallback);
        });
      }
    }, {
      key: "invokeCallback",
      value: function invokeCallback(callback) {
        if (callback) {
          callback();
        }
      }
    }, {
      key: "renderSiblings",
      value: function renderSiblings() {
        var _this4 = this;

        return this.state.siblings.map(function (_ref2) {
          var id = _ref2.id,
              element = _ref2.element;
          return _react.default.createElement(_staticContainer.default, {
            key: "root-sibling-" + id,
            shouldUpdate: _this4.updatedSiblings.has(id)
          }, _this4.wrapSibling(element));
        });
      }
    }, {
      key: "wrapSibling",
      value: function wrapSibling(element) {
        var renderSibling = this.props.renderSibling;

        if (renderSibling) {
          return renderSibling(element);
        } else {
          return element;
        }
      }
    }]);
    return _default;
  }(_react.Component);

  exports.default = _default;
},10031,[14308,14305,14320,14323,14371,14377,14386,10297,10034,10028]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _$$_REQUIRE(_dependencyMap[6]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _default = function (_Component) {
    (0, _inherits2.default)(_default, _Component);

    function _default() {
      (0, _classCallCheck2.default)(this, _default);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(_default).apply(this, arguments));
    }

    (0, _createClass2.default)(_default, [{
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate(nextProps) {
        return nextProps.shouldUpdate;
      }
    }, {
      key: "render",
      value: function render() {
        var child = this.props.children;
        return child === null || child === false ? null : _react.Children.only(child);
      }
    }]);
    return _default;
  }(_react.Component);

  exports.default = _default;
  _default.propTypes = {
    shouldUpdate: _propTypes.default.bool.isRequired
  };
},10034,[14305,14320,14323,14371,14377,14386,10297,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var validateFormat = function validateFormat(format) {};

  function invariant(condition, format, a, b, c, d, e, f) {
    validateFormat(format);

    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return args[argIndex++];
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1;
      throw error;
    }
  }

  module.exports = invariant;
},10036,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.durations = exports.positions = exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var TOAST_MAX_WIDTH = 0.8;
  var TOAST_ANIMATION_DURATION = 200;
  var positions = {
    TOP: 20,
    BOTTOM: -20,
    CENTER: 0
  };
  exports.positions = positions;
  var durations = {
    LONG: 3500,
    SHORT: 2000
  };
  exports.durations = durations;

  var styles = _reactNative.StyleSheet.create({
    defaultStyle: {
      position: 'absolute',
      left: 0,
      right: 0,
      justifyContent: 'center',
      alignItems: 'center'
    },
    containerStyle: {
      padding: 10,
      backgroundColor: '#000',
      opacity: 0.8,
      borderRadius: 5
    },
    shadowStyle: {
      shadowColor: '#000',
      shadowOffset: {
        width: 4,
        height: 4
      },
      shadowOpacity: 0.8,
      shadowRadius: 6,
      elevation: 10
    },
    textStyle: {
      fontSize: 16,
      color: '#fff',
      textAlign: 'center'
    }
  });

  var ToastContainer = function (_Component) {
    (0, _inherits2.default)(ToastContainer, _Component);

    function ToastContainer() {
      var _this;

      (0, _classCallCheck2.default)(this, ToastContainer);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToastContainer).apply(this, arguments));

      _this.componentDidMount = function () {
        _reactNative.Dimensions.addEventListener('change', _this._windowChanged);

        if (_this.props.keyboardAvoiding) {
          _reactNative.Keyboard.addListener('keyboardDidChangeFrame', _this._keyboardDidChangeFrame);
        }

        if (_this.state.visible) {
          _this._showTimeout = setTimeout(function () {
            return _this._show();
          }, _this.props.delay);
        }
      };

      _this.componentDidUpdate = function (prevProps) {
        if (_this.props.visible !== prevProps.visible) {
          if (_this.props.visible) {
            clearTimeout(_this._showTimeout);
            clearTimeout(_this._hideTimeout);
            _this._showTimeout = setTimeout(function () {
              return _this._show();
            }, _this.props.delay);
          } else {
            _this._hide();
          }

          _this.setState({
            visible: _this.props.visible
          });
        }
      };

      _this.componentWillUnmount = function () {
        _this._hide();

        _reactNative.Dimensions.removeEventListener('change', _this._windowChanged);

        _reactNative.Keyboard.removeListener('keyboardDidChangeFrame', _this._keyboardDidChangeFrame);
      };

      _this._animating = false;
      _this._root = null;
      _this._hideTimeout = null;
      _this._showTimeout = null;
      _this._keyboardHeight = 0;

      _this._windowChanged = function (_ref) {
        var window = _ref.window;

        _this.setState({
          windowWidth: window.width,
          windowHeight: window.height
        });
      };

      _this._keyboardDidChangeFrame = function (_ref2) {
        var endCoordinates = _ref2.endCoordinates;

        _this.setState({
          keyboardScreenY: endCoordinates.screenY
        });
      };

      _this._show = function () {
        clearTimeout(_this._showTimeout);

        if (!_this._animating) {
          clearTimeout(_this._hideTimeout);
          _this._animating = true;

          _this._root.setNativeProps({
            pointerEvents: 'auto'
          });

          _this.props.onShow && _this.props.onShow(_this.props.siblingManager);

          _reactNative.Animated.timing(_this.state.opacity, {
            toValue: _this.props.opacity,
            duration: _this.props.animation ? TOAST_ANIMATION_DURATION : 0,
            easing: _reactNative.Easing.out(_reactNative.Easing.ease)
          }).start(function (_ref3) {
            var finished = _ref3.finished;

            if (finished) {
              _this._animating = !finished;
              _this.props.onShown && _this.props.onShown(_this.props.siblingManager);

              if (_this.props.duration > 0) {
                _this._hideTimeout = setTimeout(function () {
                  return _this._hide();
                }, _this.props.duration);
              }
            }
          });
        }
      };

      _this._hide = function () {
        clearTimeout(_this._showTimeout);
        clearTimeout(_this._hideTimeout);

        if (!_this._animating) {
          if (_this._root) {
            _this._root.setNativeProps({
              pointerEvents: 'none'
            });
          }

          if (_this.props.onHide) {
            _this.props.onHide(_this.props.siblingManager);
          }

          _reactNative.Animated.timing(_this.state.opacity, {
            toValue: 0,
            duration: _this.props.animation ? TOAST_ANIMATION_DURATION : 0,
            easing: _reactNative.Easing.in(_reactNative.Easing.ease)
          }).start(function (_ref4) {
            var finished = _ref4.finished;

            if (finished) {
              _this._animating = false;
              _this.props.onHidden && _this.props.onHidden(_this.props.siblingManager);
            }
          });
        }
      };

      var _window = _reactNative.Dimensions.get('window');

      _this.state = {
        visible: _this.props.visible,
        opacity: new _reactNative.Animated.Value(0),
        windowWidth: _window.width,
        windowHeight: _window.height,
        keyboardScreenY: _window.height
      };
      return _this;
    }

    (0, _createClass2.default)(ToastContainer, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var props = this.props;
        var windowWidth = this.state.windowWidth;
        var offset = props.position;
        var _this$state = this.state,
            windowHeight = _this$state.windowHeight,
            keyboardScreenY = _this$state.keyboardScreenY;
        var keyboardHeight = Math.max(windowHeight - keyboardScreenY, 0);
        var position = offset ? (0, _defineProperty2.default)({}, offset < 0 ? 'bottom' : 'top', offset < 0 ? keyboardHeight - offset : offset) : {
          top: 0,
          bottom: keyboardHeight
        };
        return this.state.visible || this._animating ? _react.default.createElement(_reactNative.View, {
          style: [styles.defaultStyle, position],
          pointerEvents: "box-none"
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: function onPress() {
            typeof _this2.props.onPress === 'function' ? _this2.props.onPress() : null;
            _this2.props.hideOnPress ? _this2._hide() : null;
          }
        }, _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.containerStyle, {
            marginHorizontal: windowWidth * 0.09999999999999998
          }, props.containerStyle, props.backgroundColor && {
            backgroundColor: props.backgroundColor
          }, {
            opacity: this.state.opacity
          }, props.shadow && styles.shadowStyle, props.shadowColor && {
            shadowColor: props.shadowColor
          }],
          pointerEvents: "none",
          ref: function ref(ele) {
            return _this2._root = ele;
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.textStyle, props.textStyle, props.textColor && {
            color: props.textColor
          }]
        }, this.props.children)))) : null;
      }
    }]);
    return ToastContainer;
  }(_react.Component);

  ToastContainer.displayName = 'ToastContainer';
  ToastContainer.propTypes = (0, _objectSpread2.default)({}, _reactNative.ViewPropTypes, {
    containerStyle: _reactNative.ViewPropTypes.style,
    duration: _propTypes.default.number,
    visible: _propTypes.default.bool,
    position: _propTypes.default.number,
    animation: _propTypes.default.bool,
    shadow: _propTypes.default.bool,
    keyboardAvoiding: _propTypes.default.bool,
    backgroundColor: _propTypes.default.string,
    opacity: _propTypes.default.number,
    shadowColor: _propTypes.default.string,
    textColor: _propTypes.default.string,
    textStyle: _reactNative.Text.propTypes.style,
    delay: _propTypes.default.number,
    hideOnPress: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    onHide: _propTypes.default.func,
    onHidden: _propTypes.default.func,
    onShow: _propTypes.default.func,
    onShown: _propTypes.default.func
  });
  ToastContainer.defaultProps = {
    visible: false,
    duration: durations.SHORT,
    animation: true,
    shadow: true,
    position: positions.BOTTOM,
    opacity: 0.8,
    delay: 0,
    hideOnPress: true,
    keyboardAvoiding: true
  };
  var _default = ToastContainer;
  exports.default = _default;
},10037,[14308,14305,14314,14317,14320,14323,14371,14377,14386,10297,10318,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var CommonUtils = function () {
    function CommonUtils() {
      (0, _classCallCheck2.default)(this, CommonUtils);
    }

    (0, _createClass2.default)(CommonUtils, null, [{
      key: "isTextEmpty",
      value: function isTextEmpty(text) {
        try {
          if (text === undefined || text === null || text.trim() === "") {
            return true;
          }

          return false;
        } catch (e) {
          return false;
        }
      }
    }, {
      key: "isNull",
      value: function isNull(object) {
        if (object === undefined || object === null) {
          return true;
        }

        return false;
      }
    }, {
      key: "arrayIsEmpty",
      value: function arrayIsEmpty(array) {
        if (this.isNull(array) || array.length === 0) {
          return true;
        }

        return false;
      }
    }, {
      key: "arrayPushWithoutEmpty",
      value: function arrayPushWithoutEmpty(item, array) {
        if (!this.isTextEmpty(item)) {
          array.push(item);
        }

        return array;
      }
    }, {
      key: "getArrayPosition",
      value: function getArrayPosition(array, arr) {
        var position = -1;

        if (this.arrayIsEmpty(array)) {
          position = -1;
        }

        for (var i = 0; i < array.length; i++) {
          if (array[i] == arr) {
            position = i;
          }
        }

        return position;
      }
    }, {
      key: "parserDateString",
      value: function parserDateString(dateString) {
        if (dateString) {
          var regEx = new RegExp("\\-", "gi");
          var validDateStr = dateString.replace(regEx, "/");
          var milliseconds = Date.parse(validDateStr);
          return new Date(milliseconds);
        }
      }
    }, {
      key: "getCurrentTimeStr",
      value: function getCurrentTimeStr() {
        var date = new Date();
        var y = date.getFullYear();
        var m = date.getMonth() + 1;
        m = m < 10 ? '0' + m : m;
        var d = date.getDate();
        d = d < 10 ? '0' + d : d;
        var h = date.getHours();
        h = h < 10 ? '0' + h : h;
        var minute = date.getMinutes();
        var second = date.getSeconds();
        minute = minute < 10 ? '0' + minute : minute;
        second = second < 10 ? '0' + second : second;
        return y + '' + m + '' + d + '' + h + '' + minute + '' + second;
      }
    }, {
      key: "isEmojiCharacterInString",
      value: function isEmojiCharacterInString(substring) {
        for (var i = 0; i < substring.length; i++) {
          var hs = substring.charCodeAt(i);

          if (0xd800 <= hs && hs <= 0xdbff) {
            if (substring.length > 1) {
              var ls = substring.charCodeAt(i + 1);
              var uc = (hs - 0xd800) * 0x400 + (ls - 0xdc00) + 0x10000;

              if (0x1d000 <= uc && uc <= 0x1f77f) {
                return true;
              }
            }
          } else if (substring.length > 1) {
            var ls = substring.charCodeAt(i + 1);

            if (ls == 0x20e3) {
              return true;
            }
          } else {
            if (0x2100 <= hs && hs <= 0x27ff) {
              return true;
            } else if (0x2B05 <= hs && hs <= 0x2b07) {
              return true;
            } else if (0x2934 <= hs && hs <= 0x2935) {
              return true;
            } else if (0x3297 <= hs && hs <= 0x3299) {
              return true;
            } else if (hs == 0xa9 || hs == 0xae || hs == 0x303d || hs == 0x3030 || hs == 0x2b55 || hs == 0x2b1c || hs == 0x2b1b || hs == 0x2b50) {
              return true;
            }
          }
        }
      }
    }, {
      key: "isValidIp",
      value: function isValidIp(ip) {
        var reg = /^(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$/;
        return reg.test(ip);
      }
    }, {
      key: "ShowToastBottom",
      value: function ShowToastBottom(string) {
        _reactNativeRootToast.default.show(string, {
          duration: _reactNativeRootToast.default.durations.SHORT,
          position: _reactNativeRootToast.default.positions.BOTTOM,
          shadow: true,
          animation: true
        });
      }
    }, {
      key: "ShowToastCenter",
      value: function ShowToastCenter(string) {
        _reactNativeRootToast.default.show(string, {
          duration: _reactNativeRootToast.default.durations.SHORT,
          position: _reactNativeRootToast.default.positions.CENTER,
          shadow: true,
          animation: true
        });
      }
    }, {
      key: "ShowToastLongCenter",
      value: function ShowToastLongCenter(string) {
        _reactNativeRootToast.default.show(string, {
          duration: _reactNativeRootToast.default.durations.LONG,
          position: _reactNativeRootToast.default.positions.CENTER,
          shadow: true,
          animation: true
        });
      }
    }, {
      key: "isObjectKindofArray",
      value: function isObjectKindofArray(object) {
        return Object.prototype.toString.call(object) === '[object Array]';
      }
    }, {
      key: "transformSpeedData",
      value: function transformSpeedData(speed) {
        var response = {
          transformedSpeed: '0',
          transformedUnit: 'KB/s'
        };

        if (speed >= 0 && speed < 1000000) {
          response.transformedSpeed = (speed / 1000).toFixed(0);
          response.transformedUnit = 'KB/S';
        }

        if (speed >= 1000000) {
          response.transformedSpeed = (speed / 1000000).toFixed(0);
          response.transformedUnit = 'MB/S';
        }

        return response;
      }
    }, {
      key: "formatBytes",
      value: function formatBytes(bytes) {
        if (bytes === 0) return '0 B/s';
        var k = 1000,
            sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],
            i = Math.floor(Math.log(bytes) / Math.log(k));
        return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];
      }
    }, {
      key: "isWIFI6",
      value: function isWIFI6(model) {
        return ['xiaomi.router.ra69', 'xiaomi.router.ra67', 'xiaomi.router.r3600', 'xiaomi.router.rm1800'].includes(model);
      }
    }, {
      key: "getSpeedByMbps",
      value: function getSpeedByMbps(Mbps) {
        if (Mbps == 0) {
          return '未知';
        }

        return this.getFloat(Mbps / 8, 1);
      }
    }, {
      key: "getFloat",
      value: function getFloat(num, n) {
        n = n ? parseInt(n) : 0;

        if (n <= 0) {
          return Math.round(num);
        }

        num = Math.round(num * Math.pow(10, n)) / Math.pow(10, n);
        num = Number(num).toFixed(n);
        return num;
      }
    }, {
      key: "isNonPositiveBand",
      value: function isNonPositiveBand(band) {
        return band < 1;
      }
    }, {
      key: "isOutofMaxRouterBand",
      value: function isOutofMaxRouterBand(band) {
        return band > 10000;
      }
    }, {
      key: "isOutofMaxDeviceBand",
      value: function isOutofMaxDeviceBand(band) {
        return band > 1000000;
      }
    }, {
      key: "isOutofMaxDownloadBand",
      value: function isOutofMaxDownloadBand(band) {
        return band > 2048;
      }
    }, {
      key: "isNonPositiveDownloadBand",
      value: function isNonPositiveDownloadBand(band) {
        return band < 8;
      }
    }, {
      key: "getQosBandWarnInfo",
      value: function getQosBandWarnInfo(uploadBand, downloadBand) {
        if (this.isTextEmpty(uploadBand)) {
          return '上传带宽不能为空';
        }

        if (this.isTextEmpty(downloadBand)) {
          return '下载带宽不能为空';
        }

        if (this.isNonPositiveBand(uploadBand)) {
          return '上传带宽需要大于1 ';
        }

        if (this.isOutofMaxRouterBand(uploadBand)) {
          return '上传带宽太大（超过了10000）';
        }

        if (this.isOutofMaxDownloadBand(downloadBand)) {
          return '下载带宽过大，最大值允许2048 ';
        }

        if (this.isNonPositiveDownloadBand(downloadBand)) {
          return '下载带宽需要大于8 ';
        }

        if (!this.isMathForNumber(uploadBand)) {
          return '请输入正确的上传带宽';
        }

        if (!this.isMathForNumber(downloadBand)) {
          return '请输入正确的下载带宽';
        }

        return null;
      }
    }, {
      key: "isValidDomain",
      value: function isValidDomain(url) {
        var reg = /^[A-Za-z0-9]+(.[A-Za-z0-9-:;\?#_]+)+$/;
        return reg.test(url);
      }
    }, {
      key: "removeContainString",
      value: function removeContainString(itemString, containDtring) {
        if (itemString.indexOf(containDtring) > -1) {
          return itemString.split(containDtring).join("");
        } else {
          return itemString;
        }
      }
    }, {
      key: "isMathForNumber",
      value: function isMathForNumber(value) {
        var reg = /(^[1-9]([0-9]+)?(\.[0-9]{1,2})?$)|(^(0){1}$)|(^[0-9]\.[0-9]([0-9])?$)/;

        if (reg.test(value)) {
          return true;
        } else {
          return false;
        }

        ;
      }
    }, {
      key: "isContainSomeString",
      value: function isContainSomeString(value, target) {
        if (typeof value != 'string') {
          value = String(value);
        }

        return value.indexOf(target) != -1;
      }
    }, {
      key: "isValidMac",
      value: function isValidMac(mac) {
        var expre = /[A-F\d]{2}:[A-F\d]{2}:[A-F\d]{2}:[A-F\d]{2}:[A-F\d]{2}:[A-F\d]{2}/;
        var regexp = new RegExp(expre);

        if (!regexp.test(mac.toUpperCase())) {
          return false;
        }

        return true;
      }
    }]);
    return CommonUtils;
  }();

  exports.default = CommonUtils;
},10040,[14305,14320,14323,10013]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.selectedRepeatDayTextArray = exports.selectedRepeatTextArray = exports.alignRepeatDayToString = exports.alignRepeatDay = exports.sendData = exports.generateXHRData = exports.deleteItem = exports.timeStringToUtcTime = exports.calDurationTime = exports.generateID = exports.secTotime = exports.calEndTime = exports.formatDataList = exports.getInitData = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _miot = _$$_REQUIRE(_dependencyMap[2]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var url = '/appgateway/third/miwifi/app/r/api/xqsmarthome/request_smartcontroller';

  var deviceId = _miot.Device.deviceID.replace("miwifi.", "");

  var getInitData = function getInitData(parm, callback, goBack) {
    var payloadDic = {
      command: 'get_multiple_scene_setting',
      start_id: parm.start_id,
      end_id: parm.end_id
    };
    var payload = JSON.stringify(payloadDic);
    var method = 'GET';
    var paramsDic = {
      method: method,
      params: {
        deviceId: deviceId,
        payload: payload
      }
    };

    _miot.Service.callSmartHomeAPI(url, paramsDic).then(function (res) {
      if (res.code == 0) {
        callback(res);
      }
    }).catch(function (e) {
      goBack();
    });
  };

  exports.getInitData = getInitData;

  var formatDataList = function formatDataList(origin) {
    var newList = [];
    origin.map(function (v, i) {
      var id = v.id;

      if (v.launch) {
        var enabled = v.launch.timer.enabled;
        var repeatArray = v.launch.timer.repeat ? v.launch.timer.repeat.split(',') : [];
        var time = v.launch.timer.time;
        var selectedWifiCloseRawString = time.substring(0, 5);
        var selectedWifiCloseArray = selectedWifiCloseRawString.split(':');
        var duration = v.action_list[0].extra.duration;
        var selectedWifiOpenRawString = calEndTime(selectedWifiCloseArray, duration);
        var selectedWifiOpenArray = selectedWifiOpenRawString.split(':');
        repeatArray = repeatArray.map(function (item, index) {
          return item - 0;
        });
        var repeatType;
        var resultStr = v.launch.timer.repeat;

        if (resultStr) {
          if (resultStr === '1,2,3,4,5,6,0' || resultStr === '0,1,2,3,4,5,6') {
            repeatType = 1;
          } else if (resultStr === '1,2,3,4,5') {
            repeatType = 2;
          } else {
            repeatType = 3;
          }
        } else {
          repeatType = 0;
        }

        newList.push({
          id: id,
          selectedWifiCloseRawString: selectedWifiCloseRawString,
          selectedWifiCloseArray: selectedWifiCloseArray,
          selectedWifiOpenRawString: selectedWifiOpenRawString,
          repeatArray: repeatArray,
          repeatType: repeatType,
          selectedWifiOpenArray: selectedWifiOpenArray,
          enabled: enabled,
          duration: duration
        });
      } else {
        newList.push({
          id: id,
          selectedWifiCloseRawString: '00:00',
          selectedWifiCloseArray: ["00", "00"],
          selectedWifiOpenRawString: '08:00',
          repeatArray: [],
          repeatType: 0,
          selectedWifiOpenArray: ["08", "00"],
          enabled: false,
          duration: 28800000
        });
      }
    });
    return newList;
  };

  exports.formatDataList = formatDataList;

  var calEndTime = function calEndTime(startTimeArray, duration) {
    var startHour = startTimeArray[0];
    var startMinute = startTimeArray[1];
    var startMilliSecond = (Number(startHour * 3600) + Number(startMinute * 60)) * 1000;
    var endMilliSecond = startMilliSecond + duration;
    var endTime = secTotime(endMilliSecond);
    return endTime;
  };

  exports.calEndTime = calEndTime;

  var secTotime = function secTotime(s) {
    var t;
    s = s / 1000;

    if (s > -1) {
      var hour = Math.floor(s / 3600);
      var min = Math.floor(s / 60) % 60;
      hour = hour >= 24 ? hour - 24 : hour;
      min = min >= 60 ? min - 60 : min;

      if (hour < 10) {
        t = '0' + hour + ":";
      } else {
        t = hour + ":";
      }

      if (min < 10) {
        t += "0";
      }

      t += min;
    }

    return t;
  };

  exports.secTotime = secTotime;

  var generateID = function generateID(stateList, type) {
    var idList = [],
        arr1;
    stateList.map(function (v, i) {
      idList.push(v.id);
    });

    if (type === 'normal_reboot') {
      arr1 = [30010, 30011, 30012, 30013, 30014, 30015, 30016, 30017, 30018, 30019];
    } else {
      arr1 = [30000, 30001, 30002, 30003, 30004, 30005, 30006, 30007, 30008, 30009];
    }

    var arr2 = (0, _toConsumableArray2.default)(arr1).filter(function (x) {
      return [].concat(idList).every(function (y) {
        return y !== x;
      });
    });
    return arr2[0];
  };

  exports.generateID = generateID;

  var calDurationTime = function calDurationTime(startTime, endTime) {
    var startTimeArray = startTime.split(':');
    var startHour = startTimeArray[0];
    var startMinute = startTimeArray[1];
    var startMilliSecond = (Number(startHour * 3600) + Number(startMinute * 60)) * 1000;
    var duration;

    if (endTime) {
      var endTimeArray = endTime.split(':');
      var endHour = endTimeArray[0];
      var endMinute = endTimeArray[1];
      var endMilliSecond = (Number(endHour * 3600) + Number(endMinute * 60)) * 1000;
      duration = endMilliSecond - startMilliSecond;
    } else {
      duration = new Date().getTime() - startMilliSecond;
    }

    if (duration < 0) {
      duration = duration + 86400000;
    }

    return duration;
  };

  exports.calDurationTime = calDurationTime;

  var timeStringToUtcTime = function timeStringToUtcTime(startTimeArray) {
    var h = startTimeArray[0];
    var m = startTimeArray[1];
    var todayOOO = new Date(new Date(new Date().toLocaleDateString()).getTime()).getTime();
    var utc_time = todayOOO + Number(h) * 3600 * 1000 + Number(m) * 60 * 1000;

    if (utc_time < new Date().getTime()) {
      utc_time += 86400000;
    }

    return utc_time;
  };

  exports.timeStringToUtcTime = timeStringToUtcTime;

  var deleteItem = function deleteItem(deleteItemId, callback) {
    var data = {
      id: deleteItemId,
      command: "scene_delete"
    };
    var payload = JSON.stringify(data);
    var method = 'POST';
    var paramsDic = {
      method: method,
      params: {
        deviceId: deviceId,
        payload: payload
      }
    };

    _miot.Service.callSmartHomeAPI(url, paramsDic).then(function (res) {
      callback(res);
    }).catch(function (e) {
      return undefined;
    });
  };

  exports.deleteItem = deleteItem;

  var generateXHRData = function generateXHRData(_ref) {
    var id = _ref.id,
        command = _ref.command,
        enabled = _ref.enabled,
        duration = _ref.duration,
        repeat = _ref.repeat,
        time = _ref.time,
        utc_time = _ref.utc_time,
        type = _ref.type;
    var obj = {
      "id": type === 'normal_reboot' ? 30010 : 30000,
      "command": "scene_setting",
      "name": type === 'normal_reboot' ? "重启计划" : "健康模式",
      "action_list": [{
        "block": 1,
        "delay": 0,
        "extra": {
          "duration": 28800000,
          "total_length": 0
        },
        "keyName": type === 'normal_reboot' ? "重启计划" : "健康模式",
        "name": "小米路由器",
        "thirdParty": "xmrouter",
        "type": type
      }],
      "launch": {
        "timer": {
          "enabled": true,
          "time": "00:00:00",
          "repeat": "1,2,3,4,5",
          "utc_time": 0
        }
      }
    };
    if (id) obj.id = id;
    if (command) obj.command = command;
    obj.launch.timer.enabled = enabled;
    if (time) obj.launch.timer.time = time;

    if (repeat && repeat.length > 0) {
      obj.launch.timer.repeat = repeat.join(',');
    } else {
      delete obj.launch.timer.repeat;
      obj.launch.timer.utc_time = utc_time;
    }

    if (duration) obj.action_list[0].extra.duration = duration;
    return obj;
  };

  exports.generateXHRData = generateXHRData;

  var sendData = function sendData(data, callback) {
    var payload = JSON.stringify(data);
    var method = 'POST';
    var paramsDic = {
      method: method,
      params: {
        deviceId: deviceId,
        payload: payload
      }
    };

    _miot.Service.callSmartHomeAPI(url, paramsDic).then(function (res) {
      callback(res);
    }).catch(function (e) {
      _CommonUtils.default.ShowToastBottom('数据添加失败');
    });
  };

  exports.sendData = sendData;

  var alignRepeatDay = function alignRepeatDay(array) {
    return array.map(function (item) {
      if (item === 0) {
        return 6;
      } else {
        return item - 1;
      }
    });
  };

  exports.alignRepeatDay = alignRepeatDay;

  var alignRepeatDayToString = function alignRepeatDayToString(array) {
    return array.map(function (item) {
      if (item === 6) {
        return 0;
      } else {
        return item + 1;
      }
    });
  };

  exports.alignRepeatDayToString = alignRepeatDayToString;
  var selectedRepeatTextArray = ["执行一次", "每天", "周一至周五"];
  exports.selectedRepeatTextArray = selectedRepeatTextArray;
  var selectedRepeatDayTextArray = ["星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"];
  exports.selectedRepeatDayTextArray = selectedRepeatDayTextArray;
},10043,[14305,14359,10074,10040]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources",
    "width": 51,
    "height": 51,
    "scales": [1],
    "hash": "685b32c440bd38f0c00a888e19199c75",
    "name": "add",
    "type": "png"
  });
},10046,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _ChoiceDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _MHDatePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[13]);

  var _MessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _ui = _$$_REQUIRE(_dependencyMap[15]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[16]);

  var _RestartPlan_HealthMode = _$$_REQUIRE(_dependencyMap[17]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var selectedRepeatTextArray = ["执行一次", "每天", "周一至周五"];
  var selectedRepeatDayTextArray = ["星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"];
  var that;

  var TimeSetting = function (_React$Component) {
    (0, _inherits2.default)(TimeSetting, _React$Component);

    function TimeSetting(props) {
      var _this;

      (0, _classCallCheck2.default)(this, TimeSetting);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TimeSetting).call(this, props));

      _this.customHandler = function (result) {
        var info = _this.state.info;

        if (result.length === 0) {
          _this.setState({
            isShowEmptyTip: true
          });
        } else {
          info.repeatArray = (0, _RestartPlan_HealthMode.alignRepeatDayToString)(result);
          var resultStr = info.repeatArray.join(',');

          if (resultStr === '1,2,3,4,5,6,0') {
            info.repeatType = 1;
          } else if (resultStr === '1,2,3,4,5') {
            info.repeatType = 2;
          } else {
            info.repeatType = 3;
          }

          _this.setState({
            isShowCustomDialog: false,
            isShowRepeatType: false,
            info: info
          });
        }
      };

      that = (0, _assertThisInitialized2.default)(_this);
      _this.state = {
        isShowRepeatType: false,
        isOpenPicker: false,
        isClosePicker: false,
        isShowCustomDialog: false,
        isShowEmptyTip: false,
        info: {
          selectedWifiOpenArray: ["08", "00"],
          selectedWifiOpenRawString: "08:00",
          selectedWifiCloseArray: ["00", "00"],
          selectedWifiCloseRawString: "00:00",
          repeatArray: [],
          repeatType: 0
        },
        openTimeHour: {
          newValue: 8
        },
        openTimeMin: {
          newValue: 0
        },
        closeTimeHour: {
          newValue: 0
        },
        closeTimeMin: {
          newValue: 0
        }
      };
      return _this;
    }

    (0, _createClass2.default)(TimeSetting, [{
      key: "_repeatSetting",
      value: function _repeatSetting() {
        this.setState({
          isShowRepeatType: true
        });
      }
    }, {
      key: "_openWifiTime",
      value: function _openWifiTime() {
        this.setState({
          isOpenPicker: true
        });
      }
    }, {
      key: "_closeWifiTime",
      value: function _closeWifiTime() {
        this.setState({
          isClosePicker: true
        });
      }
    }, {
      key: "_pressComplete",
      value: function _pressComplete() {
        var param = this.state.info;
        this.props.navigation.state.params.callback(param);
        this.props.navigation.navigate('HealthMode');
      }
    }, {
      key: "onDismiss",
      value: function onDismiss(param) {
        this.setState({
          isShowRepeatType: false,
          isShowCustomDialog: false,
          isOpenPicker: false,
          isClosePicker: false
        });
      }
    }, {
      key: "onSelect",
      value: function onSelect(type) {
        var info = this.state.info;
        var hv, mv;

        if (type === 'open') {
          hv = this.state.openTimeHour.newValue;
          mv = this.state.openTimeMin.newValue;
          var h = hv < 10 ? '0' + hv : hv;
          var m = mv < 10 ? '0' + mv : mv;
          info.selectedWifiOpenRawString = h + ':' + m;
          info.selectedWifiOpenArray = [h, m];
        } else if (type === 'close') {
          hv = this.state.closeTimeHour.newValue;
          mv = this.state.closeTimeMin.newValue;

          var _h = hv < 10 ? '0' + hv : hv;

          var _m = mv < 10 ? '0' + mv : mv;

          info.selectedWifiCloseRawString = _h + ':' + _m;
          info.selectedWifiCloseArray = [_h, _m];
        }

        this.setState({
          info: info
        });
      }
    }, {
      key: "selectedRepeatHandler",
      value: function selectedRepeatHandler(result) {
        var _this$state = this.state,
            info = _this$state.info,
            isShowCustomDialog = _this$state.isShowCustomDialog,
            isShowRepeatType = _this$state.isShowRepeatType;
        var index = result.join('') - 0;
        var repeatArrayString = info.repeatArray.join(',');
        info.repeatType = index;

        if (index === 0) {
          info.repeatArray = [];
        } else if (index === 1) {
          info.repeatArray = [0, 1, 2, 3, 4, 5, 6];
        } else if (index === 2) {
          info.repeatArray = [1, 2, 3, 4, 5];
        } else if (index === 3) {
          info.repeatArray = info.repeatArray.length > 0 ? info.repeatArray : [0, 6];
          isShowCustomDialog = true;

          if (repeatArrayString === '0,1,2,3,4,5,6') {
            info.repeatType = 1;
          } else if (repeatArrayString === '1,2,3,4,5') {
            info.repeatType = 2;
          }
        }

        this.setState({
          info: info,
          isShowCustomDialog: isShowCustomDialog,
          isShowRepeatType: false
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        if (this.props.navigation.state.params.type == 'edit') {
          var info = this.props.navigation.state.params.info;
          this.setState({
            info: info,
            closeTimeHour: {
              newValue: info.selectedWifiCloseArray[0] - 0
            },
            closeTimeMin: {
              newValue: info.selectedWifiCloseArray[1] - 0
            },
            openTimeHour: {
              newValue: info.selectedWifiOpenArray[0] - 0
            },
            openTimeMin: {
              newValue: info.selectedWifiOpenArray[1] - 0
            }
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var repeatSubtitle;
        var info = this.state.info;

        if (selectedRepeatTextArray[info.repeatType]) {
          repeatSubtitle = selectedRepeatTextArray[info.repeatType];
        } else {
          repeatSubtitle = (0, _RestartPlan_HealthMode.alignRepeatDay)(info.repeatArray).map(function (o) {
            return selectedRepeatDayTextArray[o];
          }).join(",");
        }

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_ListItem.default, {
          title: "\u91CD\u590D",
          subtitle: repeatSubtitle,
          containerStyle: {
            width: width
          },
          subtitleStyle: {
            color: '#a4aaae'
          },
          onPress: function onPress(_) {
            return _this2._repeatSetting();
          },
          separator: _react.default.createElement(_Separator.default, {
            style: styles.separator
          })
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.timeText
        }, "\u65F6\u95F4\u8BBE\u7F6E"), _react.default.createElement(_Separator.default, {
          style: styles.separator
        }), _react.default.createElement(_ListItem.default, {
          title: "WiFi\u5173\u95ED\u65F6\u95F4",
          subtitle: info.selectedWifiCloseRawString,
          subtitleStyle: {
            color: '#a4aaae'
          },
          onPress: function onPress(_) {
            return _this2._closeWifiTime();
          },
          separator: _react.default.createElement(_Separator.default, {
            style: styles.separator
          })
        }), _react.default.createElement(_ListItem.default, {
          title: "WiFi\u5F00\u542F\u65F6\u95F4",
          subtitle: info.selectedWifiOpenRawString,
          subtitleStyle: {
            color: '#a4aaae'
          },
          onPress: function onPress(_) {
            return _this2._openWifiTime();
          },
          separator: _react.default.createElement(_Separator.default, {
            style: styles.separator
          })
        }), _react.default.createElement(_ChoiceDialog.default, {
          visible: this.state.isShowRepeatType,
          title: '重复时间设置',
          options: [{
            title: '执行一次'
          }, {
            title: '每天'
          }, {
            title: '周一至周五'
          }, {
            title: '自定义'
          }],
          selectedIndexArray: [info.repeatType],
          onDismiss: function onDismiss(_) {
            return _this2.onDismiss('1');
          },
          onSelect: function onSelect(result) {
            return _this2.selectedRepeatHandler(result);
          }
        }), _react.default.createElement(_reactNative.TouchableHighlight, {
          underlayColor: "transparent",
          onPress: function onPress(_) {
            return _this2._pressComplete();
          },
          style: styles.buttonWrapper
        }, _react.default.createElement(_reactNative.View, {
          style: styles.button
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.compleText
        }, "\u786E\u8BA4"))), _react.default.createElement(_ChoiceDialog.default, {
          type: _ChoiceDialog.default.TYPE.MULTIPLE,
          visible: this.state.isShowCustomDialog,
          title: '重复',
          style: styles.choiceDialog,
          options: [{
            title: '星期一'
          }, {
            title: '星期二'
          }, {
            title: '星期三'
          }, {
            title: '星期四'
          }, {
            title: '星期五'
          }, {
            title: '星期六'
          }, {
            title: '星期日'
          }],
          selectedIndexArray: (0, _RestartPlan_HealthMode.alignRepeatDay)(info.repeatArray),
          color: "#f0ac3d",
          buttons: [{
            text: '保存',
            style: {
              color: 'lightblue'
            },
            callback: function callback(result) {
              return _this2.customHandler(result);
            }
          }],
          onDismiss: function onDismiss(_) {
            return _this2.onDismiss();
          }
        }), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.isClosePicker,
          showTitle: true,
          title: "\u5173\u95ED\u65F6\u95F4",
          canDismiss: true,
          buttons: [{
            text: '取消',
            style: styles.detailBtn,
            callback: function callback(_) {
              return _this2.setState({
                isClosePicker: false
              });
            }
          }, {
            text: '确定',
            style: styles.detailBtn,
            callback: function callback() {
              _this2.setState({
                isClosePicker: false
              });

              _this2.onSelect('close');
            }
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.datePicker
        }, _react.default.createElement(_ui.NumberSpinner, {
          style: styles.timerPickerItem,
          maxValue: 23,
          minValue: 0,
          interval: 1,
          defaultValue: this.state.closeTimeHour['newValue'],
          valueFormat: "%1.0f",
          unit: "时",
          onNumberChanged: function onNumberChanged(data) {
            _this2.setState({
              closeTimeHour: data
            });
          }
        }), _react.default.createElement(_ui.NumberSpinner, {
          style: styles.timerPickerItem,
          maxValue: 59,
          minValue: 0,
          interval: 1,
          defaultValue: this.state.closeTimeMin['newValue'],
          valueFormat: "%1.0f",
          unit: "分",
          onNumberChanged: function onNumberChanged(data) {
            _this2.setState({
              closeTimeMin: data
            });
          }
        }))), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.isOpenPicker,
          showTitle: true,
          title: "\u5F00\u542F\u65F6\u95F4",
          canDismiss: true,
          buttons: [{
            text: '取消',
            style: styles.detailBtn,
            callback: function callback(_) {
              return _this2.setState({
                isOpenPicker: false
              });
            }
          }, {
            text: '确定',
            style: styles.detailBtn,
            callback: function callback() {
              _this2.setState({
                isOpenPicker: false
              });

              _this2.onSelect('open');
            }
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.datePicker
        }, _react.default.createElement(_ui.NumberSpinner, {
          style: styles.timerPickerItem,
          maxValue: 23,
          minValue: 0,
          interval: 1,
          defaultValue: this.state.openTimeHour['newValue'],
          valueFormat: "%1.0f",
          unit: "时",
          onNumberChanged: function onNumberChanged(data) {
            _this2.setState({
              openTimeHour: data
            });
          }
        }), _react.default.createElement(_ui.NumberSpinner, {
          style: styles.timerPickerItem,
          maxValue: 59,
          minValue: 0,
          interval: 1,
          defaultValue: this.state.openTimeMin['newValue'],
          valueFormat: "%1.0f",
          unit: "分",
          onNumberChanged: function onNumberChanged(data) {
            _this2.setState({
              openTimeMin: data
            });
          }
        }))), _react.default.createElement(_MessageDialog.default, {
          visible: this.state.isShowEmptyTip,
          message: "\u8BF7\u81F3\u5C11\u9009\u62E9\u4E00\u9879",
          buttons: [{
            text: '确认',
            style: {
              color: '#2C7DFA'
            },
            callback: function callback(_) {
              return _this2.setState({
                isShowEmptyTip: false
              });
            }
          }],
          onDismiss: function onDismiss(_) {
            return _this2.onDismiss('4');
          }
        }));
      }
    }]);
    return TimeSetting;
  }(_react.default.Component);

  exports.default = TimeSetting;

  TimeSetting.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: '时间设置',
        onPressLeft: function onPressLeft(_) {
          return navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#ffffff'
    },
    buttonWrapper: {
      position: "absolute",
      width: width,
      bottom: 20,
      alignItems: "center",
      justifyContent: "center"
    },
    button: {
      alignItems: "center",
      justifyContent: "center",
      backgroundColor: '#4778FF',
      height: 44,
      width: width * 0.9,
      borderRadius: 22
    },
    compleText: {
      color: '#fff'
    },
    timeText: {
      padding: 5,
      fontSize: 12,
      marginLeft: 20,
      color: '#a4aaae'
    },
    separator: {
      height: 1 / _reactNative.PixelRatio.get(),
      marginLeft: 20,
      marginRight: 20
    },
    datePicker: {
      flexDirection: 'row'
    },
    timerPickerItem: {
      flex: 1,
      height: 200
    }
  });
},10049,[14305,14320,14323,14371,14377,14374,14386,10297,10284,10329,10734,10716,10332,10033,10743,10230,10755,10043]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _ListItem = _$$_REQUIRE(_dependencyMap[10]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[12]);

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[13]);

  var _common_password_toggle_visible = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _common_password_toggle_invisible = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _miot = _$$_REQUIRE(_dependencyMap[16]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _device = _$$_REQUIRE(_dependencyMap[18]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _ui = _$$_REQUIRE(_dependencyMap[20]);

  var _WifiSettingHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _WifiSettingConstant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var LABEL = ['名称', '密码'];
  var PLACEHOLDER = ['ssid', '填写密码'];
  var wifiItemName = ['2.4G WiFi', '5G WiFi', _RouterLocalizedStringUtil.localStrings.wifiSsidText, _RouterLocalizedStringUtil.localStrings.wifiEncryptionMode, _RouterLocalizedStringUtil.localStrings.wifiSignalIntensity, _RouterLocalizedStringUtil.localStrings.wifiPwdTitle, _RouterLocalizedStringUtil.localStrings.wifiHideTitle];
  var dialogButtonName = [_RouterLocalizedStringUtil.localStrings.alertOKTitle, _RouterLocalizedStringUtil.localStrings.alertCancelTitle, _RouterLocalizedStringUtil.localStrings.alertTipText];
  var dialogTip = _RouterLocalizedStringUtil.localStrings.wifiChangeAlertContent;
  var dialogTipWPA3 = _RouterLocalizedStringUtil.localStrings.wifiWPA3AlertContent;

  var HealthMode = function (_React$Component) {
    (0, _inherits2.default)(HealthMode, _React$Component);

    function HealthMode(props) {
      var _this;

      (0, _classCallCheck2.default)(this, HealthMode);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HealthMode).call(this, props));

      _this.getData = function () {
        _this.setState({
          'isShowLoading': true,
          loadingText: '加载数据中...'
        });

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var paramsDic = {
          method: 'get',
          params: {
            routerId: deviceId
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.wifi_share_info, paramsDic).then(function (res) {
          if (res.code === 0) {
            _this.setState({
              info: res.info,
              gsmEncripString: _WifiSettingHelper.default.getEncryptionStringBySingle(res.info.data.encryption),
              gsmWifiName: res.info.data.ssid,
              gsmPwd: res.info.data.encryption !== 'none' ? res.info.data.password : '',
              switch: res.info.guest === 1,
              isShowLoading: false
            });

            _this.firstSwitch = res.info.guest === 1;
          }
        }).catch(function (res) {
          _this.props.navigation.goBack();
        }).finally(function (res) {});
      };

      _this.checkChangeContainWPA3 = function () {
        return _this.state.gsmEncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA3 || _this.state.gsmEncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2_WPA3;
      };

      _this.switchHandler = function () {
        _this.setState({
          switch: !_this.state.switch
        }, function () {
          if (!_this.state.switch) {
            if (_this.checkChangeContainWPA3()) {
              _this.setState({
                'WPA3Open': true
              });
            } else if (_this.firstSwitch) {
              _this.setState({
                'sueChangeVisible': true
              });
            }
          }
        });
      };

      _this.ChangeSetting = function () {
        var info = _this.state.info;
        info.data.ssid = _this.state.gsmWifiName;
        info.data.password = _this.state.gsmPwd;
        info.data.encryption = _WifiSettingHelper.default.getEncryptionStringValue(_this.state.gsmEncripString);
        info.guest = _this.state.switch ? 1 : 0;
        info.share = 0;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var paramsDic = {
          method: 'post',
          params: {
            routerId: deviceId,
            info: JSON.stringify(info)
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.wifi_share_switch, paramsDic).then(function (res) {
          if (res.code === 0) {
            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeSuccess);

            _this.props.navigation.goBack();
          }
        }).catch(function (res) {}).finally(function (res) {});
      };

      _this.submitHandler = function () {
        var tips = _this._GetInputMessage();

        if (_CommonUtils.default.isTextEmpty(tips)) {
          if (_this.checkChangeContainWPA3()) {
            _this.setState({
              'WPA3Open': true
            });
          } else {
            _this.setState({
              'sueChangeVisible': true
            });
          }
        } else {
          _CommonUtils.default.ShowToastBottom(tips);
        }
      };

      _this.changeSecureHandler = function () {
        var status = _this.state.secure;

        _this.setState({
          'secure': !status
        });
      };

      _this.UNSAFE_componentWillMount = function () {
        var encripDataSource = _WifiSettingHelper.default.getCapbilityIsWiFi6() ? [_WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA3, _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2_WPA3, _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2, _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA_WPA2, _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE] : [_WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2, _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA_WPA2, _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE];

        _this.setState({
          encripDataSource: encripDataSource
        });
      };

      _this._GetInputMessage = function () {
        return _WifiSettingHelper.default.getWifiSetiingInputErrorMessage(_this.state.gsmWifiName, _this.state.gsmPwd, _this.state.gsmEncripString);
      };

      _this.state = {
        secure: false,
        isShowLoading: false,
        loadingText: '',
        switch: false,
        confirmDisabled: false,
        encripTypeIsGSM: true,
        gsmEncripString: '',
        encripDataSource: [],
        encripSingle: false,
        gsmWifiName: '',
        gsmPwd: '',
        sueChangeVisible: false,
        WPA3Open: false,
        info: {
          guest: 0,
          data: {
            encryption: '',
            password: '',
            ssid: ''
          }
        }
      };
      return _this;
    }

    (0, _createClass2.default)(HealthMode, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.getData();
      }
    }, {
      key: "componentWillMount",
      value: function componentWillMount() {}
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: '访客WiFi开关',
          value: this.state.switch,
          showSeparator: false,
          titleStyle: styles.titleStyle,
          containerStyle: styles.containerStyle,
          onValueChange: function onValueChange(value) {
            return _this2.switchHandler(value);
          }
        }), _react.default.createElement(_Separator.default, null), this.state.switch ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: styles.content
        }, _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, LABEL[0]), _react.default.createElement(_reactNative.TextInput, {
          style: styles.input,
          defaultValue: this.state.gsmWifiName,
          placeholder: PLACEHOLDER[0],
          placeholderTextColor: '#989898',
          underlineColorAndroid: 'transparent',
          onChangeText: function onChangeText(text) {
            return _this2.setState({
              gsmWifiName: text
            });
          }
        })), this.state.gsmEncripString !== _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE ? [_react.default.createElement(_Separator.default, {
          key: 0
        }), _react.default.createElement(_reactNative.View, {
          key: 1,
          style: styles.item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, LABEL[1]), _react.default.createElement(_reactNative.TextInput, {
          style: styles.input,
          secureTextEntry: !this.state.secure,
          defaultValue: this.state.gsmPwd,
          placeholder: PLACEHOLDER[1],
          placeholderTextColor: '#989898',
          underlineColorAndroid: 'transparent',
          onChangeText: function onChangeText(text) {
            return _this2.setState({
              gsmPwd: text
            });
          }
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: this.changeSecureHandler
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.showPwdBtn,
          source: this.state.secure ? _common_password_toggle_visible.default : _common_password_toggle_invisible.default
        })))] : null), _react.default.createElement(_ListItem.ListItem, {
          title: wifiItemName[3],
          showSeparator: false,
          containerStyle: styles.encryptionContainerStyle,
          value: this.state.gsmEncripString,
          hideArrow: false,
          onPress: function onPress() {
            _this2.setState({
              encripSingle: true
            });
          }
        })) : null), _react.default.createElement(_ui.SingleChoseDialog, {
          title: wifiItemName[3],
          dataSource: this.state.encripDataSource,
          cancel: dialogButtonName[1],
          confirm: dialogButtonName[0],
          cancelable: false,
          timeout: 0,
          check: _CommonUtils.default.getArrayPosition(this.state.encripDataSource, this.state.gsmEncripString),
          onCancel: function onCancel(e) {},
          onConfirm: function onConfirm(e) {
            _this2.setState({
              gsmEncripString: _this2.state.encripDataSource[e.position]
            });
          },
          onCheck: function onCheck(e) {},
          onDismiss: function onDismiss() {
            _this2.setState({
              encripSingle: false
            });
          },
          visible: this.state.encripSingle
        }), _react.default.createElement(_LoadingDialog.default, {
          visible: this.state.isShowLoading,
          message: this.state.loadingText
        }), _react.default.createElement(_ui.MessageDialog, {
          title: dialogButtonName[2],
          message: dialogTip,
          cancelable: false,
          cancel: dialogButtonName[1],
          confirm: dialogButtonName[0],
          onCancel: function onCancel(e) {
            _this2.setState({
              sueChangeVisible: false,
              switch: true
            });
          },
          onConfirm: function onConfirm(e) {
            _this2.setState({
              isShowLoading: true
            });

            _this2.ChangeSetting();
          },
          onDismiss: function onDismiss() {
            _this2.setState({
              sueChangeVisible: false
            });
          },
          visible: this.state.sueChangeVisible
        }), _react.default.createElement(_ui.MessageDialog, {
          title: dialogButtonName[2],
          message: dialogTipWPA3,
          cancelable: false,
          cancel: dialogButtonName[1],
          confirm: dialogButtonName[0],
          onCancel: function onCancel(e) {
            _this2.setState({
              WPA3Open: false,
              switch: true
            });
          },
          onConfirm: function onConfirm(e) {
            _this2.setState({
              isShowLoading: true
            });

            _this2.ChangeSetting();
          },
          onDismiss: function onDismiss() {
            _this2.setState({
              WPA3Open: false
            });
          },
          visible: this.state.WPA3Open
        }), _react.default.createElement(_reactNative.View, {
          style: styles.rkbuttonItem
        }, this.state.switch ? _react.default.createElement(_reactNativeUiKitten.RkButton, {
          rkType: "rounded",
          onPress: this.submitHandler,
          disabled: this.state.confirmDisabled,
          style: styles.viewRkButton
        }, _RouterLocalizedStringUtil.localStrings.buttonConfirmTitle) : null));
      }
    }]);
    return HealthMode;
  }(_react.default.Component);

  exports.default = HealthMode;

  HealthMode.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: '访客WiFi',
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      flex: 1,
      paddingRight: 24,
      paddingLeft: 24,
      justifyContent: 'space-between'
    },
    titleStyle: {
      fontWeight: 'bold'
    },
    containerStyle: {
      paddingLeft: 0,
      paddingRight: 50,
      marginTop: 20
    },
    encryptionContainerStyle: {
      paddingLeft: 0,
      paddingRight: 50
    },
    viewRkButton: {
      width: '100%'
    },
    rkbuttonItem: {
      alignItems: 'center',
      paddingBottom: 24
    },
    item: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-between',
      padding: 10
    },
    text: {
      fontSize: 15,
      color: '#000'
    },
    input: {
      color: '#989898',
      flex: 1,
      marginLeft: 10,
      marginRight: 10,
      paddingVertical: 0
    },
    showPwdBtn: {
      width: 20,
      height: 20,
      resizeMode: 'contain'
    },
    content: {
      marginTop: 20,
      backgroundColor: '#F5F5F5',
      borderRadius: 10,
      marginBottom: 20
    }
  });
},10052,[14305,14320,14323,14371,14377,14386,10284,10740,10297,10033,10338,10332,11251,10055,10058,10061,10074,10064,10935,10040,10230,10070,10073]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.localStrings = exports.strings = undefined;

  var _miot = _$$_REQUIRE(_dependencyMap[1]);

  var _LocalizedStrings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var strings = {
    "en": {
      homePageDeviceTab: "Devices",
      homePageToolTab: "Plug-ins",
      homePageNetConnecting: "Connecting",
      homePageNetNormal: "Network Normal",
      homePageRouterOffline: "Router is offline",
      homePagePhoneNetError: "Phone network error",
      homePagePhoneNetErrorDesc: "Check your phone's network connection",
      homePageNetError: "Network error",
      homePageCurrentConnectedDevice: "Current connected devices",
      homePageSigalStrong: "Strong",
      homePageSigalMiddle: "Mid",
      homePageSigalWeak: "Weak",
      homePageUploadText: "Upload speed",
      homePageDownloadText: "Download speed",
      homePageSigalSource: "Network signal:",
      commonSettingTitle: "Common settings",
      alertOKTitle: "OK",
      alertCancelTitle: "Cancel",
      alertTipText: "Attention",
      devicePhoneTitle: "Phones & computers",
      deviceIntelligent: "Smart devices",
      deviceOffline: "Offline",
      deviceChildProtect: "Child protection",
      deviceWanForbidden: "Deny Internet access",
      deviceParentControlTimer: "Scheduled disconnection",
      deviceCannotInternet: "Deny Internet access",
      deviceParentControl: "Parental controls",
      deviceQos: "Speed limit",
      deviceFilterBlack: "URL blocklist",
      deviceFilterWhite: "URL exceptions",
      deviceGuestDevices: "Guest devices",
      deviceOnlineDevices: "Online devices",
      deviceofflineDevices: "Offline devices",
      deviceRiskDevices: "Unsafe devices",
      tiedToConnectNetWork: 'tried to connect to network',
      tiedToConnectRouter: 'Tried to break in to router',
      tiedToConnectCell: 'times per minute',
      tiedToConnectCellStop: 'times per minute，Device blocked',
      deviceBlockDevices: "No blocklist",
      common_mins_ago: "min ago",
      common_hours_ago: "hrs ago",
      common_just_now: "Just now",
      loadingText: "Just a sec…",
      resstartRouterAlertContent: "All devices will be disconnected temporarily while router is rebooting. You may need to reconnect some devices manually after router has finished rebooting",
      recoverRouterAlertContent: "Restore router to its factory settings? You can't reverse this action!",
      wifiSettingTitle: "WiFi settings",
      restartRouterTitle: "Reboot router",
      recoverRouterTitle: "Recover router",
      restartRouterSuccess: "Router rebooted",
      recoverRouterFail: "Couldn't restore router to factory settings.",
      recoverRouterSuccess: "Router restored to factory settings",
      restartRouterLoading: "Rebooting…",
      recoverRouterLoading: "Restoring to factory settings",
      wifiSignalThroughwall: "High",
      wifiSignalStandard: "Standard",
      wifiSignalEnergysaving: "Low",
      wifiMergeTitle: "Smart connect",
      wifiMergeDescText: "Merged 2.4G and 5G to choose best channel",
      wifiSsidText: "Name",
      wifiEncryptionMode: "Encryption",
      wifiSignalIntensity: "Signal strength",
      wifiPwdTitle: "Password",
      wifiHideTitle: "Hide this network",
      wifiSignalIntensity2d4g: "2.4G Signal strength",
      wifiSignalIntensity5g: "5G Signal strength",
      wifiChangeAlertContent: "This modification will restart WiFi and disconnect the device from WiFi network temporarily",
      wifiChangeAlertContent0: "1.该修改将重启WiFi并导致WiFi下设备暂时失去连接；\n2.关闭WiFi，将无法添加子Mesh节点。\n是否确认？",
      wifiChangeAlertContent2: "1.该修改将重启WiFi并导致WiFi下设备暂时失去连接；\n2.关闭5GHz Wi-Fi，将无法添加子Mesh节点。\n是否确认？",
      wifiChangeAlertContent3: "1.该修改将重启WiFi并导致WiFi下设备暂时失去连接；\n2.关闭5GHz/5G Game Hz WiFi，将无法添加子Mesh节点。\n是否确认？",
      wifiReconnectTipContent: "Set up successfully, please manually reconnect WiFi on the phone settings page, and re-enter the application",
      wifiMergeAlertContent: "When the feature is on, 2.4G and 5G networks will share a name (use 2.4G configuration by default). The router will choose the best available signal. Brief interruptions may occur during the switch. Turn it on now?",
      wifiMergeOffAlertContent: "Dual-band WiFi off. WiFi 5G network name (with suffix _5G) and password is the same as 2.4G by default, you can change that in the settings.",
      wifiMergeAlertContentTridBand: "When the feature is on, 2.4G,5G and 5G Game networks will share a name (use 2.4G configuration by default). The router will choose the best available signal. Brief interruptions may occur during the switch. Turn it on now?",
      wifiMergeOffAlertContentTridBand: "When the feature is off. WiFi 5G and 5G Game network name (with suffix _5G/5G Game) and password is the same as 2.4G by default, you can change that in the settings.",
      wifiWPA3AlertContent: "WPA3 is a new generation encryption technology, which greatly enhances the security, but some old devices may be incompatible and thus cannot be accessed if WPA3 is selected.",
      wifiSsidInputPlaceholder: "Enter WiFi name",
      wifiInfoChangeLoading: "Changing...",
      waitingLoading: "Just a sec…",
      wifiInfoChangeFail: "Setup failed",
      wifiInfoChangeSuccess: "Setup success",
      wifiRequestInfoFail: "Couldn't get WiFi info",
      wifiEncryptionWPA3: "WPA3",
      wifiEncryptionMixStrong: "WPA3/WPA2",
      wifiEncryptionWPA2: "WPA2",
      wifiEncryptionMix: "WPA/WPA2",
      wifiEncryptionNone: "Not encrypted",
      wifiNameCannootEmpty: "Enter WiFi network name",
      wifiPwdLenthMinTip: "Password must be at least 8 characters long",
      wifiNameContainsIllegalCharacters: "WiFi ssid contains unsupported characters",
      wifiPwdContainsIllegalCharacters: "Password contains unsupported characters",
      wifiNameTooLong: "Name can contain up to 28 characters",
      wifiNameTooLongTridBand: "Name can contain up to 23 characters",
      wifiPwdTooLong: "Password can contain up to 63 characters",
      wifiPwdInvalid: "Password can't contain non-English characters",
      buttonConfirmTitle: "Confirm",
      notConnectRouter: "Please connect to current router, and then setup",
      commonAuto: "Auto",
      BandWidth: "BandWidth(MHz)",
      WireLessChannel: "WireLess channel",
      common_refreshing_retry: "Couldn't load",
      mesh_device_finish_delete: "删除Mesh设备完成",
      mesh_device_err_delete: "删除Mesh设备失败",
      mesh_local_tip: "请先选择Mesh放置的位置",
      mesh_change_location_error_tip: "Mesh路由离线，修改失败",
      tool_not_support_relay: "中继模式下暂不支持此功能"
    },
    "zh": {
      homePageDeviceTab: "设备",
      homePageToolTab: "工具箱",
      homePageNetConnecting: "连接中",
      homePageNetNormal: "网络正常",
      homePageRouterOffline: "路由器已离线",
      homePagePhoneNetError: "手机网络异常",
      homePagePhoneNetErrorDesc: "请检查您的手机网络",
      homePageNetError: "网络异常",
      homePageCurrentConnectedDevice: "当前连接设备数",
      homePageSigalStrong: "强",
      homePageSigalMiddle: "中",
      homePageSigalWeak: "弱",
      homePageUploadText: "上传速度",
      homePageDownloadText: "下载速度",
      homePageSigalSource: "信号源:",
      commonSettingTitle: "通用设置",
      alertOKTitle: "确定",
      alertCancelTitle: "取消",
      alertTipText: "提示",
      devicePhoneTitle: "手机电脑",
      deviceIntelligent: "智能家居",
      deviceOffline: "离线",
      deviceChildProtect: "儿童上网",
      deviceWanForbidden: "禁止联网",
      deviceParentControlTimer: "定时断网",
      deviceCannotInternet: "禁止联网",
      deviceParentControl: "家长控制",
      deviceQos: "限速",
      deviceFilterBlack: "网址黑名单",
      deviceFilterWhite: "网址白名单",
      deviceGuestDevices: "访客设备",
      deviceOnlineDevices: "在线设备",
      deviceofflineDevices: "离线设备",
      deviceRiskDevices: "风险设备",
      tiedToConnectNetWork: '尝试接入网络',
      tiedToConnectRouter: '尝试破解路由器',
      tiedToConnectCell: '次/分钟',
      tiedToConnectCellStop: '次/分钟，已被拦截',
      deviceBlockDevices: "黑名单",
      common_mins_ago: "分钟前",
      common_hours_ago: "小时前",
      common_just_now: "刚刚",
      loadingText: "加载中...",
      resstartRouterAlertContent: "重启后将会中断当前所有连接，需要约1分钟恢复重启后可能需要手工连接WiFi",
      recoverRouterAlertContent: "如果恢复路由器出厂设置，小米/Redmi路由器将清空当前所有设置回到初始状态",
      wifiSettingTitle: "WiFi设置",
      restartRouterTitle: "重启路由器",
      recoverRouterTitle: "恢复出厂设置",
      restartRouterSuccess: "重启成功",
      recoverRouterFail: "恢复路由器出厂失败",
      recoverRouterSuccess: "恢复路由器出厂成功",
      restartRouterLoading: "重启中",
      recoverRouterLoading: "正在恢复路由器出厂设置",
      wifiSignalThroughwall: "穿墙",
      wifiSignalStandard: "标准",
      wifiSignalEnergysaving: "节能",
      wifiMergeTitle: "WiFi双频合一",
      wifiMergeDescText: "2.4G和5G合并，自动为你切换至最佳WiFi网络",
      wifiSsidText: "名称",
      wifiEncryptionMode: "加密方式",
      wifiSignalIntensity: "信号强度",
      wifiPwdTitle: "密码",
      wifiHideTitle: "隐藏网络不被发现",
      wifiSignalIntensity2d4g: "2.4G信号强度",
      wifiSignalIntensity5g: "5G信号强度",
      wifiChangeAlertContent: "该修改将重启WiFi并导致WiFi下设备暂时失去连接",
      wifiChangeAlertContent0: "1.该修改将重启WiFi并导致WiFi下设备暂时失去连接；\n2.关闭WiFi，将无法添加子Mesh节点。\n是否确认？",
      wifiChangeAlertContent2: "1.该修改将重启WiFi并导致WiFi下设备暂时失去连接；\n2.关闭5GHz WiFi，将无法添加子Mesh节点。\n是否确认？",
      wifiChangeAlertContent3: "1.该修改将重启WiFi并导致WiFi下设备暂时失去连接；\n2.关闭5GHz/5G Game Hz WiFi，将无法添加子Mesh节点。\n是否确认？",
      wifiReconnectTipContent: "设置成功，请在手机设置页手动重连WiFi，并重新进入应用",
      wifiMergeAlertContent: "开启后，2.4G和5G会使用同一名称（默认使用2.4G相关配置），路由器会自动为终端选择最佳WiFi网络，但由于终端设备存在差异，可能存在：自动切换信号源时网络会短暂中断，甚至频繁掉线等问题，确认开启么？",
      wifiMergeOffAlertContent: "WiFi双频合一关闭,5G会默认使用2.4G相同的网络名称（加后缀_5G）和密码,如需设成不一样,请进行修改.",
      wifiMergeAlertContentTridBand: "开启后，2.4G、5G和5G Game会使用同一名称（默认使用2.4G相关配置），路由器会自动为终端选择最佳WiFi网络，但由于终端设备存在差异，可能存在：自动切换信号源时网络会短暂中断，甚至频繁掉线等问题，确认开启么？",
      wifiMergeOffAlertContentTridBand: "关闭后,5G和5G Game会默认使用2.4G相同的网络名称（加后缀_5G/_5G game）和密码,如需设成不一样,请进行修改.",
      wifiWPA3AlertContent: "WPA3为新一代加密技术，可使安全性大大加强，但选择该选项后部分旧设备会存在兼容性问题而无法接入。",
      wifiSsidInputPlaceholder: "请输入WiFi名称",
      wifiInfoChangeLoading: "修改中",
      waitingLoading: "请稍后...",
      wifiInfoChangeFail: "设置失败",
      wifiInfoChangeSuccess: "设置成功",
      wifiRequestInfoFail: "获取WiFi信息失败",
      wifiEncryptionWPA3: "超强加密(WPA3)",
      wifiEncryptionMixStrong: "强混合加密(WPA3/WPA2)",
      wifiEncryptionWPA2: "强加密(WPA2)",
      wifiEncryptionMix: "混合加密(WPA/WPA2)",
      wifiEncryptionNone: "无加密 (允许所有人连接)",
      wifiNameCannootEmpty: "WiFi名称不能为空",
      wifiPwdLenthMinTip: "密码长度不得少于8位",
      wifiNameContainsIllegalCharacters: "WiFi名称包含非法字符",
      wifiPwdContainsIllegalCharacters: "WiFi密码包含非法字符",
      wifiNameTooLong: "WiFi名称长度不能超过28位",
      wifiNameTooLongTridBand: "WiFi名称长度不能超过23位",
      wifiPwdTooLong: "WiFi密码长度不能多于63位",
      wifiPwdInvalid: "密码不能包含中文和特殊字符",
      buttonConfirmTitle: "确认",
      notConnectRouter: "请连上当前路由器WiFi后，再进行设置",
      commonAuto: "自动",
      BandWidth: "频段带宽(MHz)",
      WireLessChannel: "无线信道",
      common_refreshing_retry: "加载失败，请重试",
      mesh_device_finish_delete: "删除Mesh设备完成",
      mesh_device_err_delete: "删除Mesh设备失败",
      mesh_local_tip: "请先选择Mesh放置的位置",
      mesh_change_location_error_tip: "Mesh路由离线，修改失败",
      tool_not_support_relay: "中继模式下暂不支持此功能"
    }
  };
  exports.strings = strings;
  var localStrings = new _LocalizedStrings.default(strings);
  exports.localStrings = localStrings;
},10055,[14305,10074,10209]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
    "width": 58,
    "height": 38,
    "scales": [1],
    "hash": "92bd3f704d5a1cd4391e2e73adb7190b",
    "name": "common_password_toggle_visible",
    "type": "png"
  });
},10058,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
    "width": 58,
    "height": 38,
    "scales": [1],
    "hash": "b67423263d4335e9883c1880697779b2",
    "name": "common_password_toggle_invisible",
    "type": "png"
  });
},10061,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.getApiCommonLocalPath = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _miot = _$$_REQUIRE(_dependencyMap[2]);

  var _Devices = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var getApiCommonLocalPath = function getApiCommonLocalPath() {
    return _regenerator.default.async(function getApiCommonLocalPath$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            return _context.abrupt("return", _miot.Service.getServerName().then(function (server) {
              if (server.countryCode.toLowerCase() === 'cn') {
                return 'http://miwifi.com/cgi-bin/luci';
              } else {
                return 'http://router.miwifi.com/cgi-bin/luci';
              }
            }));

          case 1:
          case "end":
            return _context.stop();
        }
      }
    });
  };

  exports.getApiCommonLocalPath = getApiCommonLocalPath;
  var apiPath = '/appgateway/third/miwifi/app';
  var localPath = 'http://miwifi.com/cgi-bin/luci';
  var API = {
    common_base_path: {
      MIWIFI_S_SERVER: 'https://s.miwifi.com'
    },
    common_local_path: 'http://miwifi.com/cgi-bin/luci',
    router: {
      init_info: "/appgateway/third/miwifi/app/r/api/xqsystem/init_info",
      init_info_inner: "http://miwifi.com/cgi-bin/luci/api/xqsystem/init_info"
    },
    devices: {
      ignore_risk_device: "/appgateway/third/miwifi/app/s/api/ignore_risk_device",
      edit_device: "/appgateway/third/miwifi/app/r/api/xqnetwork/edit_device",
      device_list: "/appgateway/third/miwifi/app/s/api/device_list",
      device_netacctl_status: {
        remote: "/appgateway/third/miwifi/app/r/api/misystem/netacctl_status"
      },
      device_website_list: {
        remote: "/appgateway/third/miwifi/app/r/api/misystem/parctl_get_url"
      },
      device_website_singleUrl: {
        remote: "/appgateway/third/miwifi/app/r/api/misystem/parctl_set_url"
      },
      device_websitt_mode_set: {
        remote: "/appgateway/third/miwifi/app/r/api/misystem/parctl_set_filter",
        local: '/api/misystem/parctl_set_filter'
      },
      device_websitt_mode_get: {
        remote: "/appgateway/third/miwifi/app/r/api/misystem/parctl_get_filter",
        local: '/api/misystem/parctl_get_filter'
      },
      device_parent_control_set: {
        remote: "/appgateway/third/miwifi/app/r/api/misystem/netacctl_set"
      },
      device_parent_control_items: {
        remote: "/appgateway/third/miwifi/app/r/api/misystem/parctl_info"
      },
      device_parent_control_items_add: {
        remote: "/appgateway/third/miwifi/app/r/api/misystem/parctl_add"
      },
      device_parent_control_items_update: {
        remote: "/appgateway/third/miwifi/app/r/api/misystem/parctl_update"
      },
      device_parent_control_items_delete: {
        remote: "/appgateway/third/miwifi/app/r/api/misystem/parctl_delete"
      }
    },
    wifi_setting: {
      wifi_detail_all: {
        remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/wifi_detail_all",
        local: '/api/xqnetwork/wifi_detail_all'
      },
      set_all_wifi: {
        remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/set_all_wifi",
        local: '/api/xqnetwork/set_all_wifi'
      },
      set_wifi: {
        remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/set_wifi",
        local: '/api/xqnetwork/set_wifi'
      },
      set_aiot_switch: {
        remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/miscan_switch",
        local: '/api/xqnetwork/miscan_switch'
      },
      get_aiot_switch: {
        remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/get_miscan_switch",
        local: '/api/xqnetwork/get_miscan_switch'
      },
      set_miot_relay_switch: {
        remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/miotrelay_switch",
        local: '/api/xqnetwork/miotrelay_switch'
      },
      get_miot_relay_switch: {
        remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/get_miotrelay_switch",
        local: '/api/xqnetwork/get_miotrelay_switch'
      }
    },
    net_work_mode: {
      swapWanPort: {
        remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/set_wan_lan_swap",
        local: '/api/xqnetwork/set_wan_lan_swap'
      },
      getWanPort: {
        remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/get_wan_lan_mode",
        local: '/api/xqnetwork/get_wan_lan_mode'
      },
      getWanPortStatus: {
        remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/get_wan_port_status",
        local: '/api/xqnetwork/get_wan_port_status'
      },
      wan_info: {
        remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/wan_info",
        local: '/api/xqnetwork/wan_info'
      },
      set_wan: {
        remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/set_wan",
        local: '/api/xqnetwork/set_wan'
      },
      set_lan_ap: {
        remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/set_lan_ap",
        local: '/api/xqnetwork/set_lan_ap'
      },
      set_wifi_ap: {
        remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/set_wifi_ap",
        local: '/api/xqnetwork/set_wifi_ap'
      },
      router_scan_wifi_list: {
        remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/wifi_list",
        local: '/api/xqnetwork/wifi_list'
      },
      router_pppoe_status: {
        remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/pppoe_status",
        local: '/api/xqnetwork/pppoe_status'
      },
      router_pppoe_stop: {
        remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/pppoe_stop",
        local: '/api/xqnetwork/pppoe_stop'
      },
      disable_lan_ap: {
        remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/disable_lan_ap",
        local: '/api/xqnetwork/disable_lan_ap'
      },
      disable_wifi_ap: {
        remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/disable_ap",
        local: '/api/xqnetwork/disable_ap'
      }
    },
    reboot_router: {
      remote: "/appgateway/third/miwifi/app/r/api/xqsystem/reboot",
      local: '/api/xqsystem/reboot'
    },
    router_unbind: {
      remote: "/appgateway/third/miwifi/app/s/admin/dismiss"
    },
    recover_router: {
      remote: "/appgateway/third/miwifi/app/r/api/xqsystem/reset",
      local: '/api/xqsystem/reset'
    },
    router_list: {
      remote: "/appgateway/third/miwifi/app/s/admin/deviceList"
    },
    router_token: {
      remote: "/appgateway/third/miwifi/app/r/api/xqsystem/renew_token"
    },
    router_led: {
      remote: "/appgateway/third/miwifi/app/r/api/misystem/led",
      local: '/api/misystem/led'
    },
    router_rgb: {
      remote: "/appgateway/third/miwifi/app/r/api/misystem/effect_light",
      local: '/api/misystem/effect_light'
    },
    changePassword: {
      remote: "/appgateway/third/miwifi/app/r/api/misystem/password",
      local: '/api/misystem/password'
    },
    network_diagnostics: {
      check: '/api/misystem/net_diagnose_start',
      result: '/api/misystem/net_diagnose_result'
    },
    device_qos_limit_flag: {
      remote: "/appgateway/third/miwifi/app/r/api/misystem/qos_limit_flag",
      local: '/api/misystem/qos_limit_flag'
    },
    device_qos_set_dev_info: {
      remote: "/appgateway/third/miwifi/app/r/api/misystem/qos_set_dev_info",
      local: '/api/misystem/qos_set_dev_info '
    },
    device_qos_dev_info: {
      remote: "/appgateway/third/miwifi/app/r/api/misystem/qos_dev_info",
      local: '/api/misystem/qos_dev_info'
    },
    get_qos_info: {
      remote: "/appgateway/third/miwifi/app/r/api/misystem/qos_info_new",
      local: '/api/misystem/qos_info_new'
    },
    set_qos_mode: {
      remote: "/appgateway/third/miwifi/app/r/api/misystem/qos_mode",
      local: '/api/misystem/qos_mode'
    },
    set_qos_switch: {
      remote: "/appgateway/third/miwifi/app/r/api/misystem/qos_switch",
      local: '/api/misystem/qos_switch'
    },
    set_qos_band: {
      remote: "/appgateway/third/miwifi/app/r/api/misystem/set_band",
      local: '/api/misystem/set_band'
    },
    set_qos_guest: {
      remote: "/appgateway/third/miwifi/app/r/api/misystem/qos_guest",
      local: '/api/misystem/qos_guest'
    },
    getToken: "http://miwifi.com/cgi-bin/luci/api/xqsystem/token",
    get_device_display_config: "/appgateway/third/miwifi/app/s/api/device_display_config",
    update_device_setting: "/appgateway/third/miwifi/app/s/api/update_device_setting",
    meshTopology: "/appgateway/third/miwifi/app/s/admin/meshTopology",
    dismissChildMesh: "/appgateway/third/miwifi/app/s/admin/dismissChildMesh",
    set_router_name: {
      remote: "/appgateway/third/miwifi/app/r/api/misystem/set_router_name",
      local: '/api/misystem/set_router_name'
    },
    mesh: {
      search_child: {
        remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/scan_mesh_node",
        local: '/api/xqnetwork/scan_mesh_node'
      },
      start_extend_mesh: {
        remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/add_mesh_node",
        local: '/api/xqnetwork/add_mesh_node'
      },
      extend_mesh_status: {
        remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/get_addnode_status",
        local: '/api/xqnetwork/get_addnode_status'
      }
    },
    wifi_share_info: "/appgateway/third/miwifi/app/s/sns/wifi_share_info",
    wifi_share_switch: "/appgateway/third/miwifi/app/s/sns/wifi_share_switch",
    plugin_v3_install_list: "/appgateway/third/miwifi/app/s/plugin/v3/install/list",
    plugin_v3_list: "/appgateway/third/miwifi/app/s/plugin/v3/list",
    arn: {
      black_list_status: {
        remote: "/appgateway/third/miwifi/app/r/api/misystem/arn_status",
        local: '/api/misystem/arn_status'
      },
      protect_status: {
        remote: "/appgateway/third/miwifi/app/s/api/get_protection_status"
      },
      changeSwitch: {
        remote: "/appgateway/third/miwifi/app/r/api/misystem/arn_switch",
        local: '/api/misystem/arn_switch'
      },
      mac_filter: {
        remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/wifi_macfilter_info"
      },
      risk_device_log: "/appgateway/third/miwifi/app/s/risk_device_log",
      edit_risk_device: {
        remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/edit_device",
        local: '/api/xqnetwork/edit_device'
      },
      ignore_risk_device: "/appgateway/third/miwifi/app/s/api/ignore_risk_device"
    },
    device_mac: {
      remote: "/appgateway/third/miwifi/app/r/api/xqsystem/device_mac",
      local: '/api/xqsystem/device_mac'
    },
    device_display_info: {
      remote: "/appgateway/third/miwifi/app/s/api/get_device_display_info"
    },
    wifi_optimize: {
      start_channel_scan: {
        remote: "/appgateway/third/miwifi/app/r/api/misystem/channel_scan_start",
        local: '/api/misystem/channel_scan_start'
      },
      get_channel_scan_result: {
        remote: "/appgateway/third/miwifi/app/r/api/misystem/channel_scan_result",
        local: '/api/misystem/channel_scan_result'
      },
      set_channel: {
        remote: "/appgateway/third/miwifi/app/r/api/misystem/set_channel",
        local: '/api/misystem/set_channel'
      },
      remote: "/appgateway/third/miwifi/app/r/api/xqnetwork/wifi_detail_all"
    },
    wps: "/appgateway/third/miwifi/app/r/api/xqsystem/wps",
    wps_cancel: "/appgateway/third/miwifi/app/r/api/xqsystem/wps_cancel",
    wps_status: "/appgateway/third/miwifi/app/r/api/xqsystem/wps_status",
    plugin_v3_recommend_list: "/appgateway/third/miwifi/app/s/plugin/v3/recommend/list",
    plugin_request: "/appgateway/third/miwifi/app/r/api/xqdatacenter/request",
    get_usb_u3: "/appgateway/third/miwifi/app/r/api/misystem/get_usb_u2",
    set_usb_u3: "/appgateway/third/miwifi/app/r/api/misystem/usb_u2",
    device_detail: "/appgateway/third/miwifi/app/r/api/misystem/device_detail",
    set_mac_filter: "/appgateway/third/miwifi/app/r/api/xqsystem/set_mac_filter",
    router_upgrade_list: "/appgateway/third/miwifi/app/s/upgrade",
    upgrade_check_status: "/appgateway/third/miwifi/app/r/api/xqsystem/upgrade_status",
    upgrade_flash_rom: "/appgateway/third/miwifi/app/r/api/xqsystem/flash_permission",
    upgrade_new_rom: "/appgateway/third/miwifi/app/r/api/xqsystem/upgrade_rom",
    ota_info: "/appgateway/third/miwifi/app/r/api/misystem/ota",
    ota_set: "/appgateway/third/miwifi/app/r/api/misystem/set_ota",
    request: "/appgateway/third/miwifi/app/r/api/xqdatacenter/request"
  };
  var _default = API;
  exports.default = _default;
},10064,[14305,14674,10074,10067]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.isiPhoneX = exports.android = exports.ios = exports.OS = exports.ScreenScale = exports.ScreenH = exports.ScreenW = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var ScreenW = _reactNative.Dimensions.get('window').width;

  exports.ScreenW = ScreenW;

  var ScreenH = _reactNative.Dimensions.get('window').height;

  exports.ScreenH = ScreenH;

  var ScreenScale = _reactNative.Dimensions.get('window').scale;

  exports.ScreenScale = ScreenScale;
  var OS = _reactNative.Platform.OS;
  exports.OS = OS;
  var ios = OS == 'ios';
  exports.ios = ios;
  var android = OS == 'android';
  exports.android = android;
  var deviceIsIphoneX = false;

  if (ios && (ScreenH === 812 || ScreenH === 896 || ScreenH === 844 || ScreenH === 780 || ScreenH === 926)) {
    deviceIsIphoneX = true;
  }

  var isiPhoneX = deviceIsIphoneX;
  exports.isiPhoneX = isiPhoneX;
},10067,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _WifiSettingConstant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _RouterInfoHelper = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6]));

  var _device = _$$_REQUIRE(_dependencyMap[7]);

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[8]);

  var WifiSettingHelper = function () {
    function WifiSettingHelper() {
      (0, _classCallCheck2.default)(this, WifiSettingHelper);
    }

    (0, _createClass2.default)(WifiSettingHelper, null, [{
      key: "getSSIDString",
      value: function getSSIDString(obj, type) {
        if (_CommonUtils.default.isNull(obj.info[type])) {
          return '';
        }

        if (_CommonUtils.default.isNull(obj) || _CommonUtils.default.isNull(obj.info[type].ssid)) {
          return '';
        }

        return obj.info[type].ssid;
      }
    }, {
      key: "getPWDString",
      value: function getPWDString(obj, type) {
        if (_CommonUtils.default.isNull(obj.info[type])) {
          return '';
        }

        if (_CommonUtils.default.isNull(obj) || _CommonUtils.default.isNull(obj.info[type].password)) {
          return '';
        }

        return obj.info[type].password;
      }
    }, {
      key: "getSwitchHidden",
      value: function getSwitchHidden(obj, type) {
        if (_CommonUtils.default.isNull(obj.info[type])) {
          return 0;
        }

        if (_CommonUtils.default.isNull(obj) || _CommonUtils.default.isNull(obj.info[type].hidden)) {
          return 0;
        }

        return obj.info[type].hidden;
      }
    }, {
      key: "getShowRadar",
      value: function getShowRadar(obj, fiveBandWidthString, five2BandWidthString) {
        var index = this.isSupportTriBand() ? 2 : 1;

        if (_CommonUtils.default.isNull(obj)) {
          return false;
        }

        if (_CommonUtils.default.isNull(obj.info[index])) {
          return false;
        }

        if (_CommonUtils.default.isNull(obj.info[index].channelInfo.channel) || _CommonUtils.default.isNull(obj.info[index].channelInfo.bandwidth)) {
          return false;
        }

        var channel = obj.info[index].channelInfo.channel;
        var currentChangeBandWidth = this.isSupportTriBand() ? five2BandWidthString : fiveBandWidthString;
        currentChangeBandWidth = _CommonUtils.default.isContainSomeString(currentChangeBandWidth, '/') ? 0 : currentChangeBandWidth;
        return (this.checkChannelNeedShowRadar(channel) || this.checkBandWidthNeedShowRadar(currentChangeBandWidth)) && _RouterInfoHelper.default.sharedInstance().isSupport160Band();
      }
    }, {
      key: "checkChannelNeedShowRadar",
      value: function checkChannelNeedShowRadar(channel) {
        if (_WifiSettingConstant.default.CHANNEL_52 == channel || _WifiSettingConstant.default.CHANNEL_56 == channel || _WifiSettingConstant.default.CHANNEL_60 == channel || _WifiSettingConstant.default.CHANNEL_64 == channel) {
          return true;
        }

        return false;
      }
    }, {
      key: "checkBandWidthNeedShowRadar",
      value: function checkBandWidthNeedShowRadar(currentChangeBandWidth) {
        if (_WifiSettingConstant.default.BAND_WIDTH_160 == currentChangeBandWidth) {
          return true;
        }

        return false;
      }
    }, {
      key: "isNotSupportShowBandWidthOrChannel",
      value: function isNotSupportShowBandWidthOrChannel() {
        return _RouterInfoHelper.default.sharedInstance().currenWorkModeIsRelayWireless() || this.isSupportTriBand();
      }
    }, {
      key: "getSwitchStatus",
      value: function getSwitchStatus(obj, type) {
        if (_CommonUtils.default.isNull(obj.info[type])) {
          return 1;
        }

        if (_CommonUtils.default.isNull(obj) || _CommonUtils.default.isNull(obj.info[type].status)) {
          return 1;
        }

        return obj.info[type].status;
      }
    }, {
      key: "getAX",
      value: function getAX(obj) {
        if (_CommonUtils.default.isNull(obj) || _CommonUtils.default.isNull(obj.info[0].status)) {
          return 0;
        }

        return obj.info[0].ax;
      }
    }, {
      key: "getMUMIMO",
      value: function getMUMIMO(obj) {
        if (_CommonUtils.default.isNull(obj) || _CommonUtils.default.isNull(obj.info[0].txbf)) {
          return 0;
        }

        return obj.info[0].txbf;
      }
    }, {
      key: "getEncryptionString",
      value: function getEncryptionString(obj, type) {
        if (_CommonUtils.default.isNull(obj.info[type])) {
          return _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA_WPA2;
        }

        if (_CommonUtils.default.isNull(obj) || _CommonUtils.default.isNull(obj.info[type].encryption)) {
          return _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA_WPA2;
        }

        var mEncyptionType = obj.info[type].encryption;

        if (mEncyptionType == _WifiSettingConstant.default.ENCRYPTION_WPA2) {
          return _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2;
        } else if (mEncyptionType == _WifiSettingConstant.default.ENCRYPTION_MIX) {
          return _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA_WPA2;
        } else if (mEncyptionType == _WifiSettingConstant.default.ENCRYPTION_WPA3) {
          return _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA3;
        } else if (mEncyptionType == _WifiSettingConstant.default.ENCRYPTION_MIX_WPA2_WPA3) {
          return _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2_WPA3;
        } else if (mEncyptionType == _WifiSettingConstant.default.ENCRYPTION_NONE) {
          return _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE;
        } else {
          return this.getCapbilityIsWiFi6() ? _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2_WPA3 : _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA_WPA2;
        }
      }
    }, {
      key: "getEncryptionStringBySingle",
      value: function getEncryptionStringBySingle(obj) {
        var mEncyptionType = obj;

        if (mEncyptionType == _WifiSettingConstant.default.ENCRYPTION_WPA2) {
          return _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2;
        } else if (mEncyptionType == _WifiSettingConstant.default.ENCRYPTION_MIX) {
          return _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA_WPA2;
        } else if (mEncyptionType == _WifiSettingConstant.default.ENCRYPTION_WPA3) {
          return _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA3;
        } else if (mEncyptionType == _WifiSettingConstant.default.ENCRYPTION_MIX_WPA2_WPA3) {
          return _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2_WPA3;
        } else if (mEncyptionType == _WifiSettingConstant.default.ENCRYPTION_NONE) {
          return _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE;
        } else {
          return this.getCapbilityIsWiFi6() ? _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2_WPA3 : _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA_WPA2;
        }
      }
    }, {
      key: "getBandWidthDataSource",
      value: function getBandWidthDataSource(type, selectedChannel) {
        if (selectedChannel == 165) {
          return [20];
        }

        var isHave160 = this.getIsSupport160Band();
        var bandList = ['40/20', '20', '40'];

        if (type > 0) {
          if (isHave160) {
            bandList = ['160/80/40/20', '20', '40', '80'];
          } else {
            bandList = ['80/40/20', '20', '40', '80'];
          }
        }

        return bandList;
      }
    }, {
      key: "getBandWidthString",
      value: function getBandWidthString(obj, type) {
        if (_CommonUtils.default.isNull(obj.info[type])) {
          return '';
        }

        var BandWidth = obj.info[type].bandwidth;

        if (BandWidth == 0 || BandWidth == 'nil') {
          var array = this.getBandWidthDataSource(type);
          return array[0];
        }

        return BandWidth;
      }
    }, {
      key: "shouldShowWifiSwitchCloseTip",
      value: function shouldShowWifiSwitchCloseTip(bsd, type) {
        var isRelayBy5G = _RouterInfoHelper.default.sharedInstance().isRelayBy5G();

        var isRelayBy24G = _RouterInfoHelper.default.sharedInstance().isRelayBy24G();

        var isRelayBy5GGame = _RouterInfoHelper.default.sharedInstance().isRelayBy5GGame();

        if (_RouterInfoHelper.default.sharedInstance().isWorkingInWirelessRelayMode()) {
          if (bsd > 0) {
            return isRelayBy24G || isRelayBy5G || isRelayBy5GGame && this.isSupportTriBand();
          }

          return type == 0 && isRelayBy24G || type == 1 && isRelayBy5G || type == 2 && isRelayBy5GGame && this.isSupportTriBand();
        } else {
          return false;
        }
      }
    }, {
      key: "getCannelString",
      value: function getCannelString(obj, type) {
        if (_CommonUtils.default.isNull(obj.info[type])) {
          return '';
        }

        var channel = obj.info[type].channel;
        var innerChannel = obj.info[type].channelInfo.channel;
        var isAuto = _CommonUtils.default.isNull(channel) ? false : channel == 0;

        var auto = _RouterLocalizedStringUtil.localStrings.commonAuto.concat("(").concat(_CommonUtils.default.isNull(innerChannel) || innerChannel == 0 ? '' : innerChannel).concat(")");

        if (isAuto) {
          return auto;
        } else {
          if (_CommonUtils.default.isNull(obj.info[type].channelInfo.channel)) {
            return '';
          }

          return obj.info[type].channelInfo.channel;
        }
      }
    }, {
      key: "getCannelArray",
      value: function getCannelArray(type, obj) {
        if (_CommonUtils.default.isNull(obj.info[type])) {
          return [];
        }

        var channel = obj.info[type].channel;
        var innerChannel = obj.info[type].channelInfo.channel;
        return _RouterInfoHelper.default.sharedInstance().getCannelArray(type, channel, innerChannel);
      }
    }, {
      key: "isSupportShowWifiMerge",
      value: function isSupportShowWifiMerge(data) {
        if (this.isD01()) {
          return false;
        }

        if (this.isFrequncyMerged(data) || _RouterInfoHelper.default.sharedInstance().isisRouterCanShowMergeSwitchByDefault()) {
          if (!this.isSupportWithout5G() && _RouterInfoHelper.default.sharedInstance().isSupportFrequencyMerge()) {
            return true;
          }

          return false;
        }

        return false;
      }
    }, {
      key: "isFrequncyMerged",
      value: function isFrequncyMerged(data) {
        return data.bsd > 0;
      }
    }, {
      key: "isD01",
      value: function isD01() {
        return _RouterInfoHelper.default.sharedInstance().isD01();
      }
    }, {
      key: "isSupportTriBand",
      value: function isSupportTriBand() {
        return _RouterInfoHelper.default.sharedInstance().isSupportTriBand();
      }
    }, {
      key: "isSupportWithout5G",
      value: function isSupportWithout5G() {
        return _RouterInfoHelper.default.sharedInstance().isRouterWithout5G();
      }
    }, {
      key: "getCapbilityIsWiFi6",
      value: function getCapbilityIsWiFi6() {
        return _RouterInfoHelper.default.sharedInstance().isSupportWifi6();
      }
    }, {
      key: "getCapbilityIsAiotScan",
      value: function getCapbilityIsAiotScan() {
        return _RouterInfoHelper.default.sharedInstance().isSupportAiotScan();
      }
    }, {
      key: "getCapbilityIsEasyConnect",
      value: function getCapbilityIsEasyConnect() {
        return _RouterInfoHelper.default.sharedInstance().isSupportEasyConnect();
      }
    }, {
      key: "getCapbilityIsMUMIMO",
      value: function getCapbilityIsMUMIMO() {
        return _RouterInfoHelper.default.sharedInstance().isSupportMUMIMO();
      }
    }, {
      key: "getIsSupport160Band",
      value: function getIsSupport160Band() {
        return _RouterInfoHelper.default.sharedInstance().isSupport160Band();
      }
    }, {
      key: "getEncryptionStringValue",
      value: function getEncryptionStringValue(obj) {
        if (obj == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2) {
          return _WifiSettingConstant.default.ENCRYPTION_WPA2;
        } else if (obj == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA_WPA2) {
          return _WifiSettingConstant.default.ENCRYPTION_MIX;
        } else if (obj == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA3) {
          return _WifiSettingConstant.default.ENCRYPTION_WPA3;
        } else if (obj == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2_WPA3) {
          return _WifiSettingConstant.default.ENCRYPTION_MIX_WPA2_WPA3;
        } else if (obj == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE) {
          return _WifiSettingConstant.default.ENCRYPTION_NONE;
        } else {
          return this.getCapbilityIsWiFi6() ? _WifiSettingConstant.default.ENCRYPTION_MIX_WPA2_WPA3 : _WifiSettingConstant.default.ENCRYPTION_MIX;
        }
      }
    }, {
      key: "getSignalString",
      value: function getSignalString(obj, type) {
        if (_CommonUtils.default.isNull(obj.info[type])) {
          return _WifiSettingConstant.default.SETTING_WIFI_SIGNAL_STRENGTH_MIN;
        }

        if (_CommonUtils.default.isNull(obj) || _CommonUtils.default.isNull(obj.info[type].txpwr)) {
          return _WifiSettingConstant.default.SETTING_WIFI_SIGNAL_STRENGTH_MIN;
        }

        var txpwr = obj.info[type].txpwr;

        if (txpwr == _WifiSettingConstant.default.STRENGTH_MAX) {
          return _WifiSettingConstant.default.SETTING_WIFI_SIGNAL_STRENGTH_MAX;
        } else if (txpwr == _WifiSettingConstant.default.STRENGTH_MID) {
          return _WifiSettingConstant.default.SETTING_WIFI_SIGNAL_STRENGTH_MID;
        } else if (txpwr == _WifiSettingConstant.default.STRENGTH_MIN) {
          return _WifiSettingConstant.default.SETTING_WIFI_SIGNAL_STRENGTH_MIN;
        } else {
          return _WifiSettingConstant.default.SETTING_WIFI_SIGNAL_STRENGTH_MIN;
        }
      }
    }, {
      key: "getSignalStringValue",
      value: function getSignalStringValue(obj) {
        if (obj == _WifiSettingConstant.default.SETTING_WIFI_SIGNAL_STRENGTH_MAX) {
          return _WifiSettingConstant.default.STRENGTH_MAX;
        } else if (obj == _WifiSettingConstant.default.SETTING_WIFI_SIGNAL_STRENGTH_MID) {
          return _WifiSettingConstant.default.STRENGTH_MID;
        } else if (obj == _WifiSettingConstant.default.SETTING_WIFI_SIGNAL_STRENGTH_MIN) {
          return _WifiSettingConstant.default.STRENGTH_MIN;
        } else {
          return _WifiSettingConstant.default.STRENGTH_MIN;
        }
      }
    }, {
      key: "containsEmoji",
      value: function containsEmoji(source) {
        var reg = /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F|\uD83D\uDC68(?:\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83D[\uDC66\uDC67]|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708])\uFE0F|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C[\uDFFB-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)\uD83C\uDFFB|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB\uDFFC])|\uD83D\uDC69(?:\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB-\uDFFD])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620)\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDF6\uD83C\uDDE6|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDB5\uDDB6\uDDBB\uDDD2-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5\uDEEB\uDEEC\uDEF4-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD]|[\u2660-\u2767]\u0020)/g;
        var r = reg.test(source);
        return r;
      }
    }, {
      key: "getWifiSetiingInputErrorMessage",
      value: function getWifiSetiingInputErrorMessage(ssid, pwd, encriptionString) {
        var isSupportTridBand = WifiSettingHelper.isSupportTriBand();
        var maxlengthSSID = isSupportTridBand ? 23 : 28;
        var encripyinNone = encriptionString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE;
        var reg = /^[\u0000-\u007F]+$/;
        var face_reg = /ω|⊙|з|ȏ|๑|⌓|☆̈|☆|´|•|ᴥ|`|ૅ|ू|⚆|ɞ|⚗︎/;

        if (_CommonUtils.default.isTextEmpty(ssid.replace(/(^\s*)|(\s*$)/g, ""))) {
          return _RouterLocalizedStringUtil.localStrings.wifiNameCannootEmpty;
        }

        if (pwd.replace(/(^\s*)|(\s*$)/g, "").length < 8 && !encripyinNone) {
          return _RouterLocalizedStringUtil.localStrings.wifiPwdLenthMinTip;
        }

        if (this.containsEmoji(ssid) || face_reg.test(ssid)) {
          return _RouterLocalizedStringUtil.localStrings.wifiNameContainsIllegalCharacters;
        }

        if (this.containsEmoji(pwd)) {
          return _RouterLocalizedStringUtil.localStrings.wifiPwdContainsIllegalCharacters;
        }

        if (this.StringWithCNLength(ssid) > maxlengthSSID) {
          return isSupportTridBand ? _RouterLocalizedStringUtil.localStrings.wifiNameTooLongTridBand : _RouterLocalizedStringUtil.localStrings.wifiNameTooLong;
        }

        if (this.StringWithCNLength(pwd) > 63 && !encripyinNone) {
          return _RouterLocalizedStringUtil.localStrings.wifiPwdTooLong;
        }

        if (reg.test(pwd) == false && !encripyinNone) {
          return _RouterLocalizedStringUtil.localStrings.wifiPwdInvalid;
        }

        if (this.checkTextContainsNotSupportedCharact(ssid, false)) {
          return _RouterLocalizedStringUtil.localStrings.wifiNameContainsIllegalCharacters;
        }

        if (this.checkTextContainsNotSupportedCharact(pwd, true)) {
          return _RouterLocalizedStringUtil.localStrings.wifiPwdContainsIllegalCharacters;
        }

        return '';
      }
    }, {
      key: "checkTextContainsNotSupportedCharact",
      value: function checkTextContainsNotSupportedCharact(input, isPwd) {
        var allowSomeSpecialCharact = false;

        if (_RouterInfoHelper.default.sharedInstance().isRouterAllowSomeSpecialCharater()) {
          allowSomeSpecialCharact = true;
        }

        var reg = RegExp();
        var notSupportedCharact = [];

        if (allowSomeSpecialCharact) {
          if (isPwd) {
            notSupportedCharact = ['[', ']', '；', '｜', '｛', '｝', '｀', '＼', '！', '？', '，', '。', '（', '）', '、', '...', '＆', '＄'];
          } else {
            return false;
          }
        } else {
          if (isPwd) {
            notSupportedCharact = ['[', ']', '［', '］', '`', '｀', ';', '；', '|', '｜', '$', '＄', '＆', '&', '\\', '{', '}', '｛', '｝', '＼', '！', '？', '，', '。', '（', '）', '、', '...'];
          } else {
            notSupportedCharact = ['[', ']', '［', '］', '`', '｀', ';', '；', '|', '｜', '$', '＄', '＆', '&', '\\', '{', '}', '｛', '｝', '\＼', '（', '）'];
          }
        }

        var find = false;

        for (var i = 0; i < notSupportedCharact.length; i++) {
          var item = notSupportedCharact[i];

          if (_CommonUtils.default.isContainSomeString(input, item)) {
            find = true;
            break;
          }
        }

        return find;
      }
    }, {
      key: "getWifiPwdInputErrorMessage",
      value: function getWifiPwdInputErrorMessage(pwd) {
        var reg = /^[\u0000-\u007F]+$/;

        if (pwd.replace(/(^\s*)|(\s*$)/g, "").length < 8) {
          return _RouterLocalizedStringUtil.localStrings.wifiPwdLenthMinTip;
        }

        if (this.containsEmoji(pwd)) {
          return _RouterLocalizedStringUtil.localStrings.wifiPwdContainsIllegalCharacters;
        }

        if (this.StringWithCNLength(pwd) > 63) {
          return _RouterLocalizedStringUtil.localStrings.wifiPwdTooLong;
        }

        if (reg.test(pwd) == false) {
          return _RouterLocalizedStringUtil.localStrings.wifiPwdInvalid;
        }

        return '';
      }
    }, {
      key: "StringWithCNLength",
      value: function StringWithCNLength(str) {
        var realLength = 0,
            len = str.length,
            charCode = -1;

        for (var i = 0; i < len; i++) {
          charCode = str.charCodeAt(i);
          if (charCode >= 0 && charCode <= 128) realLength += 1;else realLength += 3;
        }

        return realLength;
      }
    }, {
      key: "getChangeWifiReStartTip",
      value: function getChangeWifiReStartTip(switchStatus5, switchStatus5Game, bsd, gsmStatus) {
        if (_RouterInfoHelper.default.sharedInstance().isSupportMesh()) {
          if (bsd == 1 && gsmStatus == 0) {
            return _RouterLocalizedStringUtil.localStrings.wifiChangeAlertContent0;
          }

          if (this.isSupportTriBand() && (switchStatus5 == 0 || switchStatus5Game == 0)) {
            return _RouterLocalizedStringUtil.localStrings.wifiChangeAlertContent3;
          }

          if (switchStatus5 == 0) {
            return _RouterLocalizedStringUtil.localStrings.wifiChangeAlertContent2;
          }
        }

        return _RouterLocalizedStringUtil.localStrings.wifiChangeAlertContent;
      }
    }]);
    return WifiSettingHelper;
  }();

  exports.default = WifiSettingHelper;
},10070,[14308,14305,14320,14323,10040,10073,10076,10935,10055]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[0]);

  var WifiSettingConstant = {
    ENCRYPTION_WPA3: 'ccmp',
    ENCRYPTION_MIX_WPA2_WPA3: 'psk2+ccmp',
    ENCRYPTION_WPA2: 'psk2',
    ENCRYPTION_MIX: 'mixed-psk',
    ENCRYPTION_NONE: 'none',
    SETTING_WIFI_ENCYPTION_WPA3: _RouterLocalizedStringUtil.localStrings.wifiEncryptionWPA3,
    SETTING_WIFI_ENCYPTION_WPA2_WPA3: _RouterLocalizedStringUtil.localStrings.wifiEncryptionMixStrong,
    SETTING_WIFI_ENCYPTION_WPA2: _RouterLocalizedStringUtil.localStrings.wifiEncryptionWPA2,
    SETTING_WIFI_ENCYPTION_WPA_WPA2: _RouterLocalizedStringUtil.localStrings.wifiEncryptionMix,
    SETTING_WIFI_ENCYPTION_NONE: _RouterLocalizedStringUtil.localStrings.wifiEncryptionNone,
    STRENGTH_MAX: 'max',
    STRENGTH_MID: 'mid',
    STRENGTH_MIN: 'min',
    SETTING_WIFI_SIGNAL_STRENGTH_MAX: _RouterLocalizedStringUtil.localStrings.wifiSignalThroughwall,
    SETTING_WIFI_SIGNAL_STRENGTH_MID: _RouterLocalizedStringUtil.localStrings.wifiSignalStandard,
    SETTING_WIFI_SIGNAL_STRENGTH_MIN: _RouterLocalizedStringUtil.localStrings.wifiSignalEnergysaving,
    CHANNEL_52: "52",
    CHANNEL_56: "56",
    CHANNEL_60: "60",
    CHANNEL_64: "64",
    BAND_WIDTH_160: "0"
  };
  var _default = WifiSettingConstant;
  exports.default = _default;
},10073,[10055]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.MeshRouterInfoManager = exports.MeshRouterModel = exports.RouterWorkMode = exports.RouterType = exports.RouterCapality = exports.RouterInfoManager = exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _device = _$$_REQUIRE(_dependencyMap[4]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _miot = _$$_REQUIRE(_dependencyMap[6]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _resolve = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[9]);

  var _MacAddressManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _RelayRouterHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var instance = null;
  var routerList = [];
  var ClientMessageList = [];
  var RequestingFns = [];
  var CachedRouterInfo = null;
  var isRequesting = false;

  var RouterInfoHelper = function () {
    function RouterInfoHelper() {
      (0, _classCallCheck2.default)(this, RouterInfoHelper);

      if (!instance) {
        instance = this;
      }

      return instance;
    }

    (0, _createClass2.default)(RouterInfoHelper, [{
      key: "getRouterList",
      value: function getRouterList() {
        return this.routerList;
      }
    }, {
      key: "setRouterList",
      value: function setRouterList(routerList) {
        this.routerList = routerList;
      }
    }, {
      key: "getClientMessageList",
      value: function getClientMessageList() {
        return this.ClientMessageList;
      }
    }, {
      key: "setClientMessageList",
      value: function setClientMessageList(ClientMessageList) {
        this.ClientMessageList = ClientMessageList;
      }
    }, {
      key: "refreshRouterList",
      value: function refreshRouterList() {
        var _this = this;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            showStatus: 'true'
          }
        };
        var api = _API.default.router_list.remote;

        _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
          if (res.code == 0) {
            var _routerList = res.deviceList;

            if (_CommonUtils.default.isObjectKindofArray(_routerList)) {
              if (_routerList.length > 0) {
                alert(JSON.stringify(_routerList));

                _this.setRouterList(_routerList);
              } else {}
            } else {}
          } else {}
        }).catch(function (e) {});
      }
    }, {
      key: "getCurrentRouterInfo",
      value: function getCurrentRouterInfo() {
        var routerInfo = {};
        this.routerList.map(function (item) {
          var routerId = item.id;

          if (!_CommonUtils.default.isNull(routerId) && _CommonUtils.default.isTextEmpty(routerId)) {
            if (routerId == _device.Device.deviceID.replace("miwifi.", "")) {
              routerInfo = item;
            }
          }
        });
        return routerInfo;
      }
    }, {
      key: "getCurrentRouterWorkMode",
      value: function getCurrentRouterWorkMode() {
        return this.workMode;
      }
    }, {
      key: "currenWorkModeIsRelayWireless",
      value: function currenWorkModeIsRelayWireless() {
        return this.workMode == RouterWorkMode.RelayWireless;
      }
    }, {
      key: "refreshRouterToken",
      value: function refreshRouterToken() {
        var _this2 = this;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceId: deviceId
          }
        };
        var api = _API.default.router_token.remote;

        _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
          if (res.code == 0) {
            _this2.routerToken = res.token;
          }
        }).catch(function (e) {
          _this2.tryToRefreshToken(1);
        });
      }
    }, {
      key: "tryToRefreshToken",
      value: function tryToRefreshToken(count) {
        var _this3 = this;

        if (count > 6) {
          return;
        }

        if (_CommonUtils.default.isNull(this.routerToken)) {
          var deviceId = _device.Device.deviceID.replace("miwifi.", "");

          var method = 'GET';
          var paramsDic = {
            method: method,
            params: {
              deviceId: deviceId
            }
          };
          var api = _API.default.router_token.remote;

          _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
            if (res.code == 0) {
              _this3.routerToken = res.token;
            }
          }).catch(function (e) {
            _this3.tryToRefreshToken(count + 1);
          });
        }
      }
    }, {
      key: "synGetRouterToken",
      value: function synGetRouterToken() {
        var _this4 = this;

        var deviceId, method, paramsDic, api;
        return _regenerator.default.async(function synGetRouterToken$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                deviceId = _device.Device.deviceID.replace("miwifi.", "");
                method = 'GET';
                paramsDic = {
                  method: method,
                  params: {
                    deviceId: deviceId
                  }
                };
                api = _API.default.router_token.remote;
                return _context.abrupt("return", _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                  if (res.code == 0) {
                    _this4.routerToken = res.token;
                    return res.token;
                  } else {
                    return '';
                  }
                }).catch(function (e) {
                  return '';
                }));

              case 5:
              case "end":
                return _context.stop();
            }
          }
        });
      }
    }, {
      key: "requestLocalWifiInfo",
      value: function requestLocalWifiInfo() {
        var _this5 = this;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        _miot.Service.callSpecificAPI(_API.default.router.init_info_inner, 'get', {
          "deviceId": deviceId
        }).then(function (res) {
          var routerId = typeof res === "object" ? res.routerId : JSON.parse(res).routerId;

          if (routerId === deviceId) {
            _this5.isConnectCurrentRouter = true;
          } else {
            _this5.requestCurrentRouterInfo();
          }

          _this5.requestCurMac();
        }).catch(function (error) {
          _this5.isConnectCurrentRouter = false;
        });
      }
    }, {
      key: "requestCurMac",
      value: function requestCurMac() {
        var mac;
        return _regenerator.default.async(function requestCurMac$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return _regenerator.default.awrap(_MacAddressManager.default.syncGetMac());

              case 2:
                mac = _context2.sent;

                if (_CommonUtils.default.isTextEmpty(mac)) {
                  _MacAddressManager.default.requestMac();
                }

              case 4:
              case "end":
                return _context2.stop();
            }
          }
        });
      }
    }, {
      key: "syncGetCurRouterData",
      value: function syncGetCurRouterData() {
        var _this6 = this;

        return new Promise(function (resolve, reject) {
          if (isRequesting) {
            RequestingFns.push({
              resolve: resolve,
              reject: reject
            });
            return;
          }

          isRequesting = true;

          _miot.Service.callSmartHomeAPI(_API.default.router_list.remote, {
            method: 'GET',
            params: {
              deviceId: _device.Device.deviceID.replace("miwifi.", "")
            }
          }).then(function (res) {
            isRequesting = false;

            if (res.code == 0 && _CommonUtils.default.isObjectKindofArray(res.deviceList) && res.deviceList.length > 0) {
              _this6.routerInfo = res.deviceList[0];
              _this6.workMode = res.deviceList[0].work_mode;
              _this6.relayMode = res.deviceList[0].active_apcli_mode;
              resolve(_this6.routerInfo);

              for (var i = 0, l = RequestingFns.length; i < l; i++) {
                var fn = RequestingFns[i] ? RequestingFns[i].resolve : null;

                if (typeof fn === 'function') {
                  fn(_this6.routerInfo);
                }
              }

              return;
            }

            reject(res);
          }).catch(function (error) {
            isRequesting = false;

            for (var i = 0, l = RequestingFns.length; i < l; i++) {
              var fn = RequestingFns[i] ? RequestingFns[i].reject : null;

              if (typeof fn === 'function') {
                fn(error);
              }
            }

            reject(error);
          });
        });
      }
    }, {
      key: "requestCurrentRouterInfo",
      value: function requestCurrentRouterInfo() {
        var _this7 = this;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceId: deviceId
          }
        };
        var api = _API.default.router_list.remote;

        _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
          if (res.code == 0) {
            if (_CommonUtils.default.isObjectKindofArray(res.deviceList)) {
              if (res.deviceList.length > 0) {
                _this7.routerInfo = res.deviceList[0];
                _this7.workMode = res.deviceList[0].work_mode;
                _this7.relayMode = res.deviceList[0].active_apcli_mode;

                if (_this7.workMode == RouterWorkMode.RelayWired || _this7.workMode == RouterWorkMode.RelayWireless) {
                  _this7.refreshRelayIp(res.deviceList[0].serial);
                }
              }
            }
          }
        }).catch(function (e) {});
      }
    }, {
      key: "refreshRelayIp",
      value: function refreshRelayIp(routerId) {
        var _this8 = this;

        var relayHelper = new _RelayRouterHelper.default();
        relayHelper.searchRelay(routerId, function (ip) {
          if (!_CommonUtils.default.isTextEmpty(ip)) {
            _this8.relayIp = ip;

            _this8.requestRelayRouterInitInfo(ip);
          } else {}
        });
      }
    }, {
      key: "requestRelayRouterInitInfo",
      value: function requestRelayRouterInitInfo(ip) {
        var _this9 = this;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        _miot.Service.callSpecificAPI('http://' + ip + '/cgi-bin/luci/api/xqsystem/init_info', 'get', {
          "deviceId": deviceId
        }).then(function (res) {
          var routerId = typeof res === "object" ? res.routerId : JSON.parse(res).routerId;

          if (routerId === deviceId) {
            _this9.isConnectCurrentRouter = true;
          } else {
            _this9.isConnectCurrentRouter = false;
          }

          _this9.requestCurMac();
        }).catch(function (error) {
          _this9.isConnectCurrentRouter = false;
        });
      }
    }, {
      key: "getCurRelayIp",
      value: function getCurRelayIp() {
        return _CommonUtils.default.isNull(this.relayIp) ? '' : this.relayIp;
      }
    }, {
      key: "getCurrentRouterToken",
      value: function getCurrentRouterToken() {
        if (!_CommonUtils.default.isTextEmpty(this.routerToken)) {
          return this.routerToken;
        } else {
          return "";
        }
      }
    }, {
      key: "isConnectCurrentManagedRouter",
      value: function isConnectCurrentManagedRouter() {
        return this.isConnectCurrentRouter;
      }
    }, {
      key: "getCurrentConnectApSSID",
      value: function getCurrentConnectApSSID() {
        if (this.isConnectCurrentManagedRouter()) {
          return _miot.Host.getWifiInfo().then(function (res) {
            if (!_CommonUtils.default.isTextEmpty(res.SSID)) {
              var array = res.SSID.split('"');
              return array[1];
            }
          }).catch(function (error) {
            return '';
          });
        }

        return '';
      }
    }, {
      key: "setIsConnectCurrentManagedRouter",
      value: function setIsConnectCurrentManagedRouter(connect) {
        this.isConnectCurrentRouter = connect;
      }
    }, {
      key: "currentRouterInfo",
      value: function currentRouterInfo() {
        return this.routerInfo;
      }
    }, {
      key: "synCheckCurrentCapality",
      value: function synCheckCurrentCapality(capality) {
        var _this10 = this;

        return new Promise(function (resolve, reject) {
          _this10.syncGetCurRouterData().then(function (res) {
            var routerInfo = res;

            if (routerInfo.capabilities.hasOwnProperty(capality) && routerInfo.capabilities[capality] === 1) {
              resolve(true);
            } else {
              resolve(false);
            }
          }).catch(function () {
            resolve(false);
          });
        });
      }
    }, {
      key: "synCheckCurrentWorkModeIsRelay",
      value: function synCheckCurrentWorkModeIsRelay() {
        var _this11 = this;

        return new Promise(function (resolve, reject) {
          _this11.syncGetCurRouterData().then(function (res) {
            var routerInfo = res;

            if (_this11.workMode == RouterWorkMode.RelayWired || _this11.workMode == RouterWorkMode.RelayWireless) {
              resolve(true);
              return;
            }

            resolve(false);
          }).catch(function () {
            resolve(false);
          });
        });
      }
    }, {
      key: "synCheckCurrentWorkModeIsRelayWireless",
      value: function synCheckCurrentWorkModeIsRelayWireless() {
        var _this12 = this;

        return new Promise(function (resolve, reject) {
          _this12.syncGetCurRouterData().then(function (res) {
            var routerInfo = res;

            if (_this12.workMode == RouterWorkMode.RelayWireless) {
              resolve({
                is: true,
                ip: routerInfo.ip
              });
              return;
            } else {
              resolve({
                is: false
              });
            }
          }).catch(function () {
            reject();
          });
        });
      }
    }, {
      key: "synCheckCurrentWorkModeIsRelayWired",
      value: function synCheckCurrentWorkModeIsRelayWired() {
        var _this13 = this;

        return new Promise(function (resolve, reject) {
          _this13.syncGetCurRouterData().then(function (res) {
            var routerInfo = res;

            if (_this13.workMode == RouterWorkMode.RelayWired) {
              resolve({
                is: true,
                ip: routerInfo.ip
              });
              return;
            } else {
              resolve({
                is: false
              });
            }
          }).catch(function () {
            reject();
          });
        });
      }
    }, {
      key: "synGetRouterIp",
      value: function synGetRouterIp() {
        var _this14 = this;

        return new Promise(function (resolve, reject) {
          _this14.syncGetCurRouterData().then(function (res) {
            _this14.gatewayIp = res.ip;
            resolve(res.ip);
          }).catch(function () {
            reject();
          });
        });
      }
    }, {
      key: "synCheckRouterIsMeshMode",
      value: function synCheckRouterIsMeshMode() {
        var _this15 = this;

        return new Promise(function (resolve, reject) {
          _this15.syncGetCurRouterData().then(function (res) {
            var routerInfo = res;

            if (!_CommonUtils.default.isNull(routerInfo.whc_role) && routerInfo.whc_role === '0') {
              resolve(true);
              return;
            }

            resolve(false);
          }).catch(function () {
            resolve(false);
          });
        });
      }
    }, {
      key: "synCheckConnRouter",
      value: function synCheckConnRouter() {
        var _this16 = this;

        var gatewayIp, response;
        return _regenerator.default.async(function synCheckConnRouter$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                gatewayIp = '0.0.0.0';
                _context3.next = 3;
                return _regenerator.default.awrap(_miot.System.network.getGatewayIpAddress().then(function (res) {
                  return res;
                }).catch(function (res) {
                  return res;
                }));

              case 3:
                response = _context3.sent;

                if (response.code === 0) {
                  gatewayIp = response.data.ipAddress;
                }

                return _context3.abrupt("return", new Promise(function (resolve, reject) {
                  var deviceId = _device.Device.deviceID.replace("miwifi.", "");

                  _miot.Service.callSpecificAPI('http://' + gatewayIp + '/cgi-bin/luci/api/xqsystem/init_info', 'get', {
                    "deviceId": deviceId
                  }).then(function (res) {
                    var routerId = typeof res === "object" ? res.routerId : JSON.parse(res).routerId;

                    if (routerId === deviceId) {
                      resolve(true);
                    } else {
                      resolve(false);
                    }

                    _this16.requestCurMac();
                  }).catch(function (error) {
                    resolve(false);
                  });
                }));

              case 6:
              case "end":
                return _context3.stop();
            }
          }
        });
      }
    }, {
      key: "syncCheckRelayConnectRouter",
      value: function syncCheckRelayConnectRouter() {
        var _this17 = this;

        return new Promise(function (resolve, reject) {
          var deviceId = _device.Device.deviceID.replace("miwifi.", "");

          _miot.Service.callSpecificAPI('http://' + _this17.relayIp + '/cgi-bin/luci/api/xqsystem/init_info', 'get', {
            "deviceId": deviceId
          }).then(function (res) {
            var routerId = typeof res === "object" ? res.routerId : JSON.parse(res).routerId;

            if (routerId === deviceId) {
              resolve(true);
            } else {
              resolve(false);
            }
          }).catch(function (error) {
            resolve(false);
          });
        });
      }
    }, {
      key: "checkCurrentCapality",
      value: function checkCurrentCapality(capality) {
        if (_CommonUtils.default.isNull(this.routerInfo)) {
          return false;
        }

        if (this.routerInfo.capabilities.hasOwnProperty(capality) && this.routerInfo.capabilities[capality] == 1) {
          return true;
        }

        return false;
      }
    }, {
      key: "checkCurrentCapality",
      value: function checkCurrentCapality(capality) {
        if (_CommonUtils.default.isNull(this.routerInfo)) {
          return false;
        }

        if (_CommonUtils.default.isNull(this.routerInfo.capabilities)) {
          return false;
        }

        if (this.routerInfo.capabilities.hasOwnProperty(capality) && this.routerInfo.capabilities[capality] == 1) {
          return true;
        }

        return false;
      }
    }, {
      key: "isSupportMesh",
      value: function isSupportMesh() {
        if (_CommonUtils.default.isNull(this.routerInfo)) {
          return false;
        }

        return this.checkCurrentCapality(RouterCapality.isSupportMiMesh) || this.checkCurrentCapality(RouterCapality.isSupportMiMesh_Rom);
      }
    }, {
      key: "isMeshMode",
      value: function isMeshMode() {
        if (_CommonUtils.default.isNull(this.routerInfo)) {
          return false;
        }

        if (!_CommonUtils.default.isNull(this.routerInfo.whc_role) && this.routerInfo.whc_role === '0') {
          return true;
        }

        return false;
      }
    }, {
      key: "isSupport5G",
      value: function isSupport5G() {
        if (_CommonUtils.default.isNull(this.routerInfo)) {
          return false;
        }

        return !RouterInfoManager.isR1CL() && !RouterInfoManager.isR3L() && !RouterInfoManager.isR4C() && !RouterInfoManager.isR4CM();
      }
    }, {
      key: "isSupportMeshNetByCap",
      value: function isSupportMeshNetByCap() {
        return this.isSupportMesh() && this.routerInfo.whc_role == '0';
      }
    }, {
      key: "getCannelArray",
      value: function getCannelArray(type, channel, innerChannel) {
        var isAuto = _CommonUtils.default.isNull(channel) ? false : channel == 0;
        var auto = '自动'.concat("(").concat(innerChannel).concat(")");
        var autoOnly = '自动';
        var channel5GArrayNomal = this.isSupportMeshNetByCap() ? [isAuto ? auto : autoOnly, '36', '40', '44', '48'] : [isAuto ? auto : autoOnly, '36', '40', '44', '48', '149', '153', '157', '161', '165'];
        var channel5GArray = this.isSupportMeshNetByCap() ? [isAuto ? auto : autoOnly, '36', '40', '44', '48'] : [isAuto ? auto : autoOnly, '36', '40', '44', '48', '52', '56', '60', '64', '149', '153', '157', '161', '165'];

        if (type == 0) {
          if (isAuto) {
            return [auto, '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13'];
          } else {
            return [autoOnly, '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13'];
          }
        } else if (type == 1) {
          if (RouterInfoManager.isR3600() || RouterInfoManager.isRA70() || RouterInfoManager.isRA72() || RouterInfoManager.isRA74()) {
            return channel5GArray;
          } else {
            return channel5GArrayNomal;
          }
        } else {
          if (RouterInfoManager.isR3600() || RouterInfoManager.isRA70() || RouterInfoManager.isRA72() || RouterInfoManager.isRA74()) {
            return channel5GArray;
          } else {
            if (isAuto) {
              return [auto, '36', '40', '44', '48', '149', '153', '157', '161', '165'];
            } else {
              return [autoOnly, '36', '40', '44', '48', '149', '153', '157', '161', '165'];
            }
          }
        }
      }
    }, {
      key: "getVersion",
      value: function getVersion() {
        if (this.checkCurrentCapality(RouterCapality.isSupportParentControlV3)) {
          return 3;
        } else if (this.checkCurrentCapality(RouterCapality.isSupportParentControlV2)) {
          return 2;
        } else if (this.checkCurrentCapality(RouterCapality.isSupportParentControl)) {
          return 1;
        } else {
          return 0;
        }
      }
    }, {
      key: "isSupportWifi6",
      value: function isSupportWifi6() {
        if (_CommonUtils.default.isNull(this.routerInfo)) {
          return false;
        }

        return this.checkCurrentCapality(RouterCapality.isSupportWifi6);
      }
    }, {
      key: "isSupportFrequencyMerge",
      value: function isSupportFrequencyMerge() {
        if (_CommonUtils.default.isNull(this.routerInfo)) {
          return false;
        }

        return this.checkCurrentCapality(RouterCapality.isSupportFrequencyMerge);
      }
    }, {
      key: "isisRouterCanShowMergeSwitchByDefault",
      value: function isisRouterCanShowMergeSwitchByDefault() {
        return RouterInfoManager.isR3600() || RouterInfoManager.isRM1800() || RouterInfoManager.isR1350() || RouterInfoManager.isR2350() || RouterInfoManager.isRA67() || RouterInfoManager.isRA69() || RouterInfoManager.isRA70() || RouterInfoManager.isRA72() || RouterInfoManager.isRA74() || RouterInfoManager.isRA50() || RouterInfoManager.isRA80() || RouterInfoManager.isRA81() || RouterInfoManager.isRA82() || RouterInfoManager.isRA83();
      }
    }, {
      key: "isRouterAllowSomeSpecialCharater",
      value: function isRouterAllowSomeSpecialCharater() {
        return RouterInfoManager.isR3600() || RouterInfoManager.isRM1800() || RouterInfoManager.isR1350() || RouterInfoManager.isR2350() || RouterInfoManager.isRA67() || RouterInfoManager.isRA69() || RouterInfoManager.isR2100() || RouterInfoManager.isRM2100() || RouterInfoManager.isRA70() || RouterInfoManager.isRA72() || RouterInfoManager.isRA74() || RouterInfoManager.isRA50() || RouterInfoManager.isRA81();
      }
    }, {
      key: "isSupportLedSwitch",
      value: function isSupportLedSwitch() {
        if (['xiaomi.router.r4', 'xiaomi.router.r4ac', 'xiaomi.router.r4a', 'xiaomi.router.r4cm', 'xiaomi.router.r4c', 'xiaomi.router.v3', 'xiaomi.router.r3a', 'xiaomi.router.r3g', 'xiaomi.router.r3d', 'xiaomi.router.r3p', 'xiaomi.router.lv3', 'xiaomi.router.mv1', 'xiaomi.router.lv1', 'xiaomi.router.v2'].includes(_device.Device.model)) {
          return false;
        }

        return true;
      }
    }, {
      key: "isD01",
      value: function isD01() {
        return RouterInfoManager.isD01();
      }
    }, {
      key: "isSupportTriBand",
      value: function isSupportTriBand() {
        return RouterInfoManager.isRA70();
      }
    }, {
      key: "isRouterWithout5G",
      value: function isRouterWithout5G() {
        if (['xiaomi.router.lv1', 'xiaomi.router.r4cm', 'xiaomi.router.r4c', 'xiaomi.router.lv3'].includes(_device.Device.model)) {
          return true;
        }

        return false;
      }
    }, {
      key: "isWorkingInRelayMode",
      value: function isWorkingInRelayMode() {
        return this.workMode == RouterWorkMode.RelayWired || this.workMode == RouterWorkMode.RelayWireless;
      }
    }, {
      key: "isSupportAiotScan",
      value: function isSupportAiotScan() {
        if (_CommonUtils.default.isNull(this.routerInfo)) {
          return false;
        }

        return this.checkCurrentCapality(RouterCapality.isSupportWifiScan);
      }
    }, {
      key: "isSupportEasyConnect",
      value: function isSupportEasyConnect() {
        if (_CommonUtils.default.isNull(this.routerInfo)) {
          return false;
        }

        return this.checkCurrentCapality(RouterCapality.isSupportEasyConnect);
      }
    }, {
      key: "isSupportMUMIMO",
      value: function isSupportMUMIMO() {
        if (_CommonUtils.default.isNull(this.routerInfo)) {
          return false;
        }

        return this.checkCurrentCapality(RouterCapality.isSupportWiFiMuMiMo) && this.isSupport5G();
      }
    }, {
      key: "isSupport160Band",
      value: function isSupport160Band() {
        return (RouterInfoManager.isR3600() || RouterInfoManager.isRA69() || RouterInfoManager.isRA70() || RouterInfoManager.isRA72() || RouterInfoManager.isRA74() || RouterInfoManager.isRA80() || RouterInfoManager.isRA81() || RouterInfoManager.isRA82() || RouterInfoManager.isRA83()) && this.workMode != RouterWorkMode.RelayWireless;
      }
    }, {
      key: "isRelayBy24G",
      value: function isRelayBy24G() {
        return this.relayMode == '1';
      }
    }, {
      key: "isRelayBy5G",
      value: function isRelayBy5G() {
        return this.relayMode == '2';
      }
    }, {
      key: "isRelayBy5GGame",
      value: function isRelayBy5GGame() {
        return this.relayMode == '3';
      }
    }, {
      key: "isWorkingInRelayMode",
      value: function isWorkingInRelayMode() {
        return this.workMode == RouterWorkMode.RelayWired || this.workMode == RouterWorkMode.RelayWireless;
      }
    }, {
      key: "isWorkingInWireRelayMode",
      value: function isWorkingInWireRelayMode() {
        return this.workMode == RouterWorkMode.RelayWired;
      }
    }, {
      key: "isWorkingInWirelessRelayMode",
      value: function isWorkingInWirelessRelayMode() {
        return this.workMode == RouterWorkMode.RelayWireless;
      }
    }, {
      key: "hasCapabilityQosSwitch",
      value: function hasCapabilityQosSwitch() {
        return this.checkCurrentCapality(RouterCapality.isSupportQosDeviceSwitch);
      }
    }], [{
      key: "sharedInstance",
      value: function sharedInstance() {
        var singleton = new RouterInfoHelper();
        return singleton;
      }
    }]);
    return RouterInfoHelper;
  }();

  exports.default = RouterInfoHelper;

  var RouterInfoManager = function () {
    function RouterInfoManager() {
      (0, _classCallCheck2.default)(this, RouterInfoManager);
    }

    (0, _createClass2.default)(RouterInfoManager, null, [{
      key: "isRA70",
      value: function isRA70() {
        return _device.Device.model === RouterType.RA70;
      }
    }, {
      key: "isRA50",
      value: function isRA50() {
        return _device.Device.model === RouterType.RA50;
      }
    }, {
      key: "isRA72",
      value: function isRA72() {
        return _device.Device.model === RouterType.RA72;
      }
    }, {
      key: "isRA74",
      value: function isRA74() {
        return _device.Device.model === RouterType.RA74;
      }
    }, {
      key: "isD01",
      value: function isD01() {
        return _device.Device.model === RouterType.D01;
      }
    }, {
      key: "isR3600",
      value: function isR3600() {
        return _device.Device.model === RouterType.R3600;
      }
    }, {
      key: "isRM1800",
      value: function isRM1800() {
        return _device.Device.model === RouterType.RM1800;
      }
    }, {
      key: "isR1350",
      value: function isR1350() {
        return _device.Device.model === RouterType.R1350;
      }
    }, {
      key: "isR2350",
      value: function isR2350() {
        return _device.Device.model === RouterType.R2350;
      }
    }, {
      key: "isRA67",
      value: function isRA67() {
        return _device.Device.model === RouterType.RA67;
      }
    }, {
      key: "isRA69",
      value: function isRA69() {
        return _device.Device.model === RouterType.RA69;
      }
    }, {
      key: "isR1CL",
      value: function isR1CL() {
        return _device.Device.model === RouterType.R1CL;
      }
    }, {
      key: "isR3L",
      value: function isR3L() {
        return _device.Device.model === RouterType.R3L;
      }
    }, {
      key: "isR4C",
      value: function isR4C() {
        return _device.Device.model === RouterType.R4C;
      }
    }, {
      key: "isR4CM",
      value: function isR4CM() {
        return _device.Device.model === RouterType.R4CM;
      }
    }, {
      key: "isR2100",
      value: function isR2100() {
        return _device.Device.model === RouterType.R2100;
      }
    }, {
      key: "isRM2100",
      value: function isRM2100() {
        return _device.Device.model === RouterType.RM2100;
      }
    }, {
      key: "isRA80",
      value: function isRA80() {
        return _device.Device.model === RouterType.RA80;
      }
    }, {
      key: "isRA81",
      value: function isRA81() {
        return _device.Device.model === RouterType.RA81;
      }
    }, {
      key: "isRA82",
      value: function isRA82() {
        return _device.Device.model === RouterType.RA82;
      }
    }, {
      key: "isRA83",
      value: function isRA83() {
        return _device.Device.model === RouterType.RA83;
      }
    }]);
    return RouterInfoManager;
  }();

  exports.RouterInfoManager = RouterInfoManager;
  var RouterCapality = {
    isSupportGuestWifi: "guest_wifi",
    isSupportBlackList: "wifi_security",
    isSupportShareFolder: "share_folder",
    isSupportOpenSSID: "open_ssid",
    isSupportBarcodePlugin: "barcode_plugin",
    isSupportCategoryView: "category_view_ultimate",
    isSupportFileTunnel: "file_tunnel",
    hasBuiltinHDD: "builtin_hdd",
    isSupportDevOptions: "dev_options",
    isSupportFormatDiskAsync: "format_disk_async",
    isSupportWhiteList: "whitelist",
    isSupportMultipleTimers: "multiple_timers",
    isSupportParentControl: "parent_control",
    isSupportParentControlV2: "parent_control_v2",
    isSupportRemoteUploadFile: "remote_upload",
    isSupportSmartVpn: "smart_vpn",
    isSupportGuestWifiSns: "guest_wifi_sns",
    isSupportGuestWifiSnsV2: "guest_wifi_sns_v2",
    isSupportRiskDeviceLog: "blocked_record",
    isSupportResetAdminPwd: "reset_pwd_without_old",
    isSupportFrequencyMerge: "band_steering",
    isSupportDiskInfo: "routerdisk_scan",
    isSupportTaskManager: "task_manager",
    isSupportTaskManagerSpeed: "task_manager_netspeed",
    isSupportLedSwitch: "led_switch",
    isSupportSecurityCenter: "security_center",
    wiFiDelayTime: "wifi_restart_time",
    isSupportWiFiMuMiMo: "wifi_mu_mimo",
    isSupportParentControlV3: "parent_control_v3",
    isSupportGuestWifiBusiness: "guest_wifi_business",
    isSupportSteeringWhitelist: "band_steering_whitelist",
    isSupportWirelessRelay: "wireless_relay",
    isSupportGalleryAlbum: "gallery_album",
    isSupportQosService: "qos_service",
    isSupportQosDeviceSwitch: "qos_device_switch",
    isSupportReplacementAssistant: "replacement_assistant",
    isSupportWiFiScanConnect: "wifi_scan_and_connect",
    isSupportUsedAppState: "used_app_state",
    isSupportWeChatRedEnvelope: "guest_wifi_wx_pay",
    isSupportMiNet: "mi_net",
    isSupportRestartScene: "reboot_timer",
    isSupportWifiConfigSyncMiot: "wifi_config_sync_miot",
    isSupportInternalDiagnosis: "intranet_network_diagnosis",
    isSupportExternalDiagnosis: "external_network_diagnosis",
    isSupportIOTSecurityScan: "iot_security_scan",
    isSupportChildOnlineProtection: "child_online_protection",
    isSupportGuestWiFiOverSea: "guest_wifi_oversea",
    isSupportWifi6: "Wi-Fi_6",
    isSupportWifiScan: "Wi-Fi_scan",
    isSupportTimeZone2020: "2020_timezone",
    isSupportNewAboutRouter: "about_the_router_new",
    isSupportMiMesh: "MiMesh",
    isSupportMiMesh_Rom: "mimesh_rom",
    isSupportEasyConnect: "easy_connect",
    isSupportLedLight: 'led_light',
    isSupportUSB30: 'usb_30'
  };
  exports.RouterCapality = RouterCapality;
  var RouterType = {
    RA70: "xiaomi.router.ra70",
    RA72: "xiaomi.router.ra72",
    RA74: "xiaomi.router.ra74",
    D01: "xiaomi.router.d01",
    R3600: "xiaomi.router.r3600",
    RM1800: "xiaomi.router.rm1800",
    R1350: "xiaomi.router.r1350",
    R2350: "xiaomi.router.r2350",
    RA67: "xiaomi.router.ra67",
    RA69: "xiaomi.router.ra69",
    R1CL: "xiaomi.router.r1cl",
    R3L: "xiaomi.router.r3L",
    R4AC: "xiaomi.router.r4ac",
    R4CM: "xiaomi.router.r4cm",
    RM2100: "xiaomi.router.rm2100",
    R2100: "xiaomi.router.r2100",
    R4C: "xiaomi.router.r4c",
    RA80: "xiaomi.router.ra80",
    RA81: "xiaomi.router.ra81",
    RA82: "xiaomi.router.ra82",
    RA83: "xiaomi.router.ra83",
    RA50: "xiaomi.router.ra50"
  };
  exports.RouterType = RouterType;
  var RouterWorkMode = {
    Unknown: -1,
    Normal: 0,
    RelayWireless: 1,
    RelayWired: 2,
    Safe: 100
  };
  exports.RouterWorkMode = RouterWorkMode;
  var MeshRouterModel = {
    R3600: 'R3600',
    RM1800: 'RM1800',
    RA67: 'RA67',
    RA69: 'RA69',
    RA72: 'RA72',
    RA50: 'RA50',
    RA70: 'RA70',
    RA81: 'RA81'
  };
  exports.MeshRouterModel = MeshRouterModel;

  var MeshRouterInfoManager = function () {
    function MeshRouterInfoManager() {
      (0, _classCallCheck2.default)(this, MeshRouterInfoManager);
    }

    (0, _createClass2.default)(MeshRouterInfoManager, null, [{
      key: "getRouterModel",
      value: function getRouterModel(item) {
        if (item.model.toUpperCase() === MeshRouterModel.R3600) {
          return MeshRouterModel.R3600;
        } else if (item.model.toUpperCase() === MeshRouterModel.RM1800) {
          return MeshRouterModel.RM1800;
        } else if (item.model.toUpperCase() === MeshRouterModel.RA67) {
          return MeshRouterModel.RA67;
        } else if (item.model.toUpperCase() === MeshRouterModel.RA69) {
          return MeshRouterModel.RA69;
        } else {
          return MeshRouterModel.R3600;
        }
      }
    }, {
      key: "getChildMeshIcon",
      value: function getChildMeshIcon(item, isList) {
        if (item.model.toUpperCase() === MeshRouterModel.R3600) {
          if (isList) {
            return _$$_REQUIRE(_dependencyMap[12]);
          } else {
            return _$$_REQUIRE(_dependencyMap[13]);
          }
        } else if (item.model.toUpperCase() === MeshRouterModel.RM1800) {
          if (isList) {
            return _$$_REQUIRE(_dependencyMap[14]);
          } else {
            return _$$_REQUIRE(_dependencyMap[15]);
          }
        } else if (item.model.toUpperCase() === MeshRouterModel.RA67) {
          if (isList) {
            return _$$_REQUIRE(_dependencyMap[16]);
          } else {
            return _$$_REQUIRE(_dependencyMap[17]);
          }
        } else if (item.model.toUpperCase() === MeshRouterModel.RA69 || item.model.toUpperCase() === MeshRouterModel.RA50) {
          if (isList) {
            return _$$_REQUIRE(_dependencyMap[18]);
          } else {
            return _$$_REQUIRE(_dependencyMap[19]);
          }
        } else if (item.model.toUpperCase() === MeshRouterModel.RA72) {
          if (isList) {
            return _$$_REQUIRE(_dependencyMap[20]);
          } else {
            return _$$_REQUIRE(_dependencyMap[21]);
          }
        } else if (item.model.toUpperCase() === MeshRouterModel.RA70) {
          if (isList) {
            return _$$_REQUIRE(_dependencyMap[22]);
          } else {
            return _$$_REQUIRE(_dependencyMap[23]);
          }
        } else if (item.model.toUpperCase() === MeshRouterModel.RA81) {
          if (isList) {
            return _$$_REQUIRE(_dependencyMap[24]);
          } else {
            return _$$_REQUIRE(_dependencyMap[25]);
          }
        } else {
          if (isList) {
            return _$$_REQUIRE(_dependencyMap[26]);
          } else {
            return _$$_REQUIRE(_dependencyMap[26]);
          }
        }
      }
    }, {
      key: "getSignalIcon",
      value: function getSignalIcon(item) {
        if (item.rssi < -65) {
          return _$$_REQUIRE(_dependencyMap[27]);
        } else {
          return _$$_REQUIRE(_dependencyMap[28]);
        }
      }
    }]);
    return MeshRouterInfoManager;
  }();

  exports.MeshRouterInfoManager = MeshRouterInfoManager;
},10076,[14305,14674,14320,14323,10935,10064,10074,10040,10023,10055,10079,10082,10103,10106,10109,10112,10115,10118,10121,10124,10127,10130,10133,10136,10139,10142,10145,10148,10151]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _Host = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _miot = _$$_REQUIRE(_dependencyMap[8]);

  var _API = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _native = _$$_REQUIRE(_dependencyMap[10]);

  var _resolve = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var Current_Device_Mac_Address = 'Current_Device_Mac_Address';

  var MacAddressManager = function () {
    function MacAddressManager() {
      (0, _classCallCheck2.default)(this, MacAddressManager);
    }

    (0, _createClass2.default)(MacAddressManager, null, [{
      key: "requestMac",
      value: function requestMac() {
        var mac, paramsDic, commonLocalPath, api;
        return _regenerator.default.async(function requestMac$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return _regenerator.default.awrap(MacAddressManager.syncGetMac());

              case 2:
                mac = _context.sent;

                if (_CommonUtils.default.isTextEmpty(mac)) {
                  _context.next = 6;
                  break;
                }

                _context.next = 14;
                break;

              case 6:
                if (!_RouterInfoHelper.default.sharedInstance().isConnectCurrentManagedRouter()) {
                  _context.next = 14;
                  break;
                }

                paramsDic = {
                  deviceId: _miot.Device.deviceID.replace('miwifi.', '')
                };
                _context.next = 10;
                return _regenerator.default.awrap((0, _API.getApiCommonLocalPath)());

              case 10:
                commonLocalPath = _context.sent;
                api = commonLocalPath + "/;stok=" + _RouterInfoHelper.default.sharedInstance().getCurrentRouterToken() + _API.default.device_mac.local;

                if (_RouterInfoHelper.default.sharedInstance().isWorkingInRelayMode()) {
                  api = 'http://' + _RouterInfoHelper.default.sharedInstance().getCurRelayIp() + "/cgi-bin/luci/;stok=" + _RouterInfoHelper.default.sharedInstance().getCurrentRouterToken() + _API.default.device_mac.local;
                }

                _miot.Service.callSpecificAPI(api, 'get', paramsDic).then(function (res) {
                  var result = typeof res === "object" ? res : JSON.parse(res);

                  if (result.code === 0) {
                    _Host.default.storage.set(Current_Device_Mac_Address, result.mac);
                  }
                }).catch(function (error) {});

              case 14:
              case "end":
                return _context.stop();
            }
          }
        });
      }
    }, {
      key: "syncGetMac",
      value: function syncGetMac() {
        return _regenerator.default.async(function syncGetMac$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", _Host.default.storage.get(Current_Device_Mac_Address).then(function (res) {
                  return res;
                }).catch(function (error) {
                  return '';
                }));

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        });
      }
    }]);
    return MacAddressManager;
  }();

  exports.default = MacAddressManager;
},10079,[14308,14305,14674,14320,14323,10035,10040,10076,10074,10064,10005,10023]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _reactNativeUdp = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _miot = _$$_REQUIRE(_dependencyMap[6]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _Host = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var Message = 'Who?';
  var Port = 988;
  var Search_TimeOut = 5000;

  var RelayRouterHelper = function () {
    function RelayRouterHelper(props) {
      (0, _classCallCheck2.default)(this, RelayRouterHelper);
    }

    (0, _createClass2.default)(RelayRouterHelper, [{
      key: "getBroadcast",
      value: function getBroadcast() {
        return _regenerator.default.async(function getBroadcast$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", _miot.System.network.getWifiBroadcastAddress().then(function (res) {
                  return res.data.address;
                }).catch(function (error) {
                  return '';
                }));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        });
      }
    }, {
      key: "searchRelay",
      value: function searchRelay(routerId, callback) {
        var _this = this;

        var broadcast, message, socket;
        return _regenerator.default.async(function searchRelay$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return _regenerator.default.awrap(this.getBroadcast());

              case 2:
                broadcast = _context2.sent;
                message = Message + routerId;
                socket = _reactNativeUdp.default.createSocket('udp4');
                socket.bind(0, function (error) {
                  if (!_CommonUtils.default.isNull(error)) {}
                });
                socket.on('message', function (msg, rinfo) {
                  if (!_CommonUtils.default.isTextEmpty(msg.toString())) {
                    callback(msg.toString());
                  }
                });
                socket.on('listening', function () {
                  if (_Host.default.isIOS) {
                    socket.setBroadcast(true);
                  }

                  socket.send(message, 0, message.length, Port, broadcast, function (error) {
                    if (error) {} else {}

                    _this.timer = setTimeout(function () {
                      callback('');
                      clearTimeout(_this.timer);
                    }, Search_TimeOut);
                  });
                });

              case 8:
              case "end":
                return _context2.stop();
            }
          }
        }, null, this);
      }
    }], [{
      key: "receiveUdpMessage",
      value: function receiveUdpMessage(msg, rinfo) {}
    }]);
    return RelayRouterHelper;
  }();

  exports.default = RelayRouterHelper;
},10082,[14305,14674,14320,14323,10076,10085,10074,10040,10035]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _UdpSocket = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var UdpSockets = function () {
    function UdpSockets() {
      (0, _classCallCheck2.default)(this, UdpSockets);
    }

    (0, _createClass2.default)(UdpSockets, null, [{
      key: "createSocket",
      value: function createSocket(options, callback) {
        if (callback) {}

        if (typeof options === 'string') options = {
          type: options
        };
        return new _UdpSocket.default(options);
      }
    }]);
    return UdpSockets;
  }();

  UdpSockets.Socket = _UdpSocket.default;
  var _default = UdpSockets;
  exports.default = _default;
  module.exports = UdpSockets;
},10085,[14305,14320,14323,10088]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _events = _$$_REQUIRE(_dependencyMap[7]);

  var _buffer = _$$_REQUIRE(_dependencyMap[8]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _normalizeBindOptions2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var Sockets = _reactNative.NativeModules.UdpSockets;
  var instances = 0;
  var STATE = {
    UNBOUND: 0,
    BINDING: 1,
    BOUND: 2
  };

  var UdpSocket = function (_EventEmitter) {
    (0, _inherits2.default)(UdpSocket, _EventEmitter);

    function UdpSocket(options, onmessage) {
      var _this;

      (0, _classCallCheck2.default)(this, UdpSocket);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(UdpSocket).call(this));

      _events.EventEmitter.call((0, _assertThisInitialized2.default)(_this));

      if (typeof options === 'string') options = {
        type: options
      };

      if (options.type !== 'udp4' && options.type !== 'udp6') {
        throw new Error('invalid udp socket type');
      }

      _this.type = options.type;
      _this.reusePort = options && options.reusePort;
      _this.debugEnabled = options && options.debug;
      _this._destroyed = false;
      _this._id = instances++;
      _this._state = STATE.UNBOUND;
      _this._address = '';
      _this._port = -1;
      _this._subscription = _reactNative.DeviceEventEmitter.addListener("udp-" + _this._id + "-data", _this._onReceive.bind((0, _assertThisInitialized2.default)(_this)));
      if (onmessage) _this.on('message', onmessage);
      Sockets.createSocket(_this._id, {
        type: _this.type
      });
      return _this;
    }

    (0, _createClass2.default)(UdpSocket, [{
      key: "_debug",
      value: function _debug() {
        if (this.debugEnabled) {
          var args = [].slice.call(arguments);
          args.unshift("socket-" + this._id);
        }
      }
    }, {
      key: "bind",
      value: function bind() {
        var self = this;
        if (this._state !== STATE.UNBOUND) throw new Error('Socket is already bound');

        var _normalizeBindOptions = _normalizeBindOptions2.default.apply(undefined, arguments),
            port = _normalizeBindOptions.port,
            address = _normalizeBindOptions.address,
            callback = _normalizeBindOptions.callback;

        if (!address) address = '0.0.0.0';
        if (!port) port = 0;
        if (!callback) callback = function callback() {};
        this.once('listening', callback.bind(this));
        this._state = STATE.BINDING;

        this._debug('binding, address:', address, 'port:', port);

        Sockets.bind(this._id, port, address, {
          reusePort: this.reusePort
        }, function (err, addr) {
          err = normalizeError(err);

          if (err) {
            self._state = STATE.UNBOUND;

            self._debug('failed to bind', err);

            if (callback) callback(err);
            return self.emit('error', err);
          }

          self._debug('bound to address:', addr.address, 'port:', addr.port);

          self._address = addr.address;
          self._port = addr.port;
          self._state = STATE.BOUND;
          self.emit('listening');
        });
      }
    }, {
      key: "close",
      value: function close() {
        var _this2 = this;

        var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};
        if (this._destroyed) return setImmediate(callback);
        this.once('close', callback);

        this._debug('closing');

        this._subscription.remove();

        Sockets.close(this._id, function (err) {
          if (err) return _this2.emit('error', err);
          _this2._destroyed = true;

          _this2._debug('closed');

          _this2.emit('close');
        });
      }
    }, {
      key: "connect",
      value: function connect(port, address, callback) {}
    }, {
      key: "disconnect",
      value: function disconnect() {}
    }, {
      key: "_onReceive",
      value: function _onReceive(info) {
        var buf = _buffer.Buffer.from(info.data, 'base64');

        var rinfo = {
          address: info.address,
          port: info.port,
          family: 'IPv4',
          size: buf.length
        };
        this.emit('message', buf, rinfo);
      }
    }, {
      key: "send",
      value: function send(msg, offset, length, port, address, callback) {
        var _this3 = this;

        if (this._state === STATE.UNBOUND) throw new Error('ERR_SOCKET_BAD_PORT');

        if (!address) {
          if (this.type === 'udp4') address = '127.0.0.1';else address = '::1';
        }

        if (port === undefined || address === undefined) {
          throw new Error('socket.send(): address and port parameters must be provided');
        }

        if (Array.isArray(msg) && (offset !== undefined || length !== undefined)) {
          throw new Error('socket.send(): offset and length must be undefined for a msg of type Array');
        }

        var generatedBuffer = this._generateSendBuffer(msg).slice(offset, length);

        var str = generatedBuffer.toString('base64');
        Sockets.send(this._id, str, port, address, function (err) {
          err = normalizeError(err);

          if (err) {
            if (callback) callback(err);else _this3.emit('error', err);
          } else {
            if (callback) callback();
          }
        });
      }
    }, {
      key: "_generateSendBuffer",
      value: function _generateSendBuffer(msg) {
        var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'utf-8';

        if (typeof msg === 'string') {
          return _buffer.Buffer.from(msg, encoding);
        } else if (_buffer.Buffer.isBuffer(msg)) {
          return msg;
        } else if (msg instanceof Uint8Array || Array.isArray(msg)) {
          return _buffer.Buffer.from(msg);
        } else {
          throw new TypeError("Invalid type for msg, found " + typeof msg);
        }
      }
    }, {
      key: "address",
      value: function address() {
        if (this._state !== STATE.BOUND) throw new Error('socket is not bound yet');
        return {
          address: this._address,
          port: this._port,
          family: 'IPv4'
        };
      }
    }, {
      key: "setBroadcast",
      value: function setBroadcast(flag) {
        var self = this;
        if (this._state !== STATE.BOUND) throw new Error('EBADF');
        Sockets.setBroadcast(this._id, flag, function (err) {
          err = normalizeError(err);

          if (err) {
            self._debug('failed to set broadcast', err);

            self.emit('error', err);
          }
        });
      }
    }, {
      key: "setMulticastInterface",
      value: function setMulticastInterface(multicastInterface) {}
    }, {
      key: "setMulticastLoopback",
      value: function setMulticastLoopback(flag) {}
    }, {
      key: "setMulticastTTL",
      value: function setMulticastTTL(ttl) {}
    }, {
      key: "setRecvBufferSize",
      value: function setRecvBufferSize(size) {}
    }, {
      key: "setSendBufferSize",
      value: function setSendBufferSize(size) {}
    }, {
      key: "setTTL",
      value: function setTTL(ttl) {}
    }, {
      key: "unref",
      value: function unref() {}
    }, {
      key: "addMembership",
      value: function addMembership(multicastAddress, multicastInterface) {
        if (this._state !== STATE.BOUND) throw new Error('you must bind before addMembership()');

        if (multicastInterface) {}

        Sockets.addMembership(this._id, multicastAddress);
      }
    }, {
      key: "addSourceSpecificMembership",
      value: function addSourceSpecificMembership(sourceAddress, groupAddress, multicastInterface) {}
    }, {
      key: "dropMembership",
      value: function dropMembership(multicastAddress, multicastInterface) {
        if (this._state !== STATE.BOUND) throw new Error('you must bind before addMembership()');

        if (multicastInterface) {}

        Sockets.dropMembership(this._id, multicastAddress);
      }
    }, {
      key: "dropSourceSpecificMembership",
      value: function dropSourceSpecificMembership(sourceAddress, groupAddress, multicastInterface) {}
    }, {
      key: "getRecvBufferSize",
      value: function getRecvBufferSize() {}
    }, {
      key: "getSendBufferSize",
      value: function getSendBufferSize() {}
    }, {
      key: "ref",
      value: function ref() {}
    }, {
      key: "remoteAddress",
      value: function remoteAddress() {}
    }]);
    return UdpSocket;
  }(_events.EventEmitter);

  exports.default = UdpSocket;

  function normalizeError(err) {
    if (err) {
      if (typeof err === 'string') err = new Error(err);
      return err;
    }
  }
},10088,[14305,14320,14323,14371,14377,14374,14386,10091,10094,10033,10100]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var R = typeof Reflect === 'object' ? Reflect : null;
  var ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {
    return Function.prototype.apply.call(target, receiver, args);
  };
  var ReflectOwnKeys;

  if (R && typeof R.ownKeys === 'function') {
    ReflectOwnKeys = R.ownKeys;
  } else if (Object.getOwnPropertySymbols) {
    ReflectOwnKeys = function ReflectOwnKeys(target) {
      return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));
    };
  } else {
    ReflectOwnKeys = function ReflectOwnKeys(target) {
      return Object.getOwnPropertyNames(target);
    };
  }

  function ProcessEmitWarning(warning) {
    if (console && function () {}) {}
  }

  var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
    return value !== value;
  };

  function EventEmitter() {
    EventEmitter.init.call(this);
  }

  module.exports = EventEmitter;
  module.exports.once = once;
  EventEmitter.EventEmitter = EventEmitter;
  EventEmitter.prototype._events = undefined;
  EventEmitter.prototype._eventsCount = 0;
  EventEmitter.prototype._maxListeners = undefined;
  var defaultMaxListeners = 10;

  function checkListener(listener) {
    if (typeof listener !== 'function') {
      throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
    }
  }

  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
    enumerable: true,
    get: function get() {
      return defaultMaxListeners;
    },
    set: function set(arg) {
      if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
        throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
      }

      defaultMaxListeners = arg;
    }
  });

  EventEmitter.init = function () {
    if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {
      this._events = Object.create(null);
      this._eventsCount = 0;
    }

    this._maxListeners = this._maxListeners || undefined;
  };

  EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
      throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
    }

    this._maxListeners = n;
    return this;
  };

  function _getMaxListeners(that) {
    if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;
    return that._maxListeners;
  }

  EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
    return _getMaxListeners(this);
  };

  EventEmitter.prototype.emit = function emit(type) {
    var args = [];

    for (var i = 1; i < arguments.length; i++) {
      args.push(arguments[i]);
    }

    var doError = type === 'error';
    var events = this._events;
    if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false;

    if (doError) {
      var er;
      if (args.length > 0) er = args[0];

      if (er instanceof Error) {
        throw er;
      }

      var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
      err.context = er;
      throw err;
    }

    var handler = events[type];
    if (handler === undefined) return false;

    if (typeof handler === 'function') {
      ReflectApply(handler, this, args);
    } else {
      var len = handler.length;
      var listeners = arrayClone(handler, len);

      for (var i = 0; i < len; ++i) {
        ReflectApply(listeners[i], this, args);
      }
    }

    return true;
  };

  function _addListener(target, type, listener, prepend) {
    var m;
    var events;
    var existing;
    checkListener(listener);
    events = target._events;

    if (events === undefined) {
      events = target._events = Object.create(null);
      target._eventsCount = 0;
    } else {
      if (events.newListener !== undefined) {
        target.emit('newListener', type, listener.listener ? listener.listener : listener);
        events = target._events;
      }

      existing = events[type];
    }

    if (existing === undefined) {
      existing = events[type] = listener;
      ++target._eventsCount;
    } else {
      if (typeof existing === 'function') {
        existing = events[type] = prepend ? [listener, existing] : [existing, listener];
      } else if (prepend) {
        existing.unshift(listener);
      } else {
        existing.push(listener);
      }

      m = _getMaxListeners(target);

      if (m > 0 && existing.length > m && !existing.warned) {
        existing.warned = true;
        var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');
        w.name = 'MaxListenersExceededWarning';
        w.emitter = target;
        w.type = type;
        w.count = existing.length;
        ProcessEmitWarning(w);
      }
    }

    return target;
  }

  EventEmitter.prototype.addListener = function addListener(type, listener) {
    return _addListener(this, type, listener, false);
  };

  EventEmitter.prototype.on = EventEmitter.prototype.addListener;

  EventEmitter.prototype.prependListener = function prependListener(type, listener) {
    return _addListener(this, type, listener, true);
  };

  function onceWrapper() {
    if (!this.fired) {
      this.target.removeListener(this.type, this.wrapFn);
      this.fired = true;
      if (arguments.length === 0) return this.listener.call(this.target);
      return this.listener.apply(this.target, arguments);
    }
  }

  function _onceWrap(target, type, listener) {
    var state = {
      fired: false,
      wrapFn: undefined,
      target: target,
      type: type,
      listener: listener
    };
    var wrapped = onceWrapper.bind(state);
    wrapped.listener = listener;
    state.wrapFn = wrapped;
    return wrapped;
  }

  EventEmitter.prototype.once = function once(type, listener) {
    checkListener(listener);
    this.on(type, _onceWrap(this, type, listener));
    return this;
  };

  EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {
    checkListener(listener);
    this.prependListener(type, _onceWrap(this, type, listener));
    return this;
  };

  EventEmitter.prototype.removeListener = function removeListener(type, listener) {
    var list, events, position, i, originalListener;
    checkListener(listener);
    events = this._events;
    if (events === undefined) return this;
    list = events[type];
    if (list === undefined) return this;

    if (list === listener || list.listener === listener) {
      if (--this._eventsCount === 0) this._events = Object.create(null);else {
        delete events[type];
        if (events.removeListener) this.emit('removeListener', type, list.listener || listener);
      }
    } else if (typeof list !== 'function') {
      position = -1;

      for (i = list.length - 1; i >= 0; i--) {
        if (list[i] === listener || list[i].listener === listener) {
          originalListener = list[i].listener;
          position = i;
          break;
        }
      }

      if (position < 0) return this;
      if (position === 0) list.shift();else {
        spliceOne(list, position);
      }
      if (list.length === 1) events[type] = list[0];
      if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);
    }

    return this;
  };

  EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

  EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {
    var listeners, events, i;
    events = this._events;
    if (events === undefined) return this;

    if (events.removeListener === undefined) {
      if (arguments.length === 0) {
        this._events = Object.create(null);
        this._eventsCount = 0;
      } else if (events[type] !== undefined) {
        if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];
      }

      return this;
    }

    if (arguments.length === 0) {
      var keys = Object.keys(events);
      var key;

      for (i = 0; i < keys.length; ++i) {
        key = keys[i];
        if (key === 'removeListener') continue;
        this.removeAllListeners(key);
      }

      this.removeAllListeners('removeListener');
      this._events = Object.create(null);
      this._eventsCount = 0;
      return this;
    }

    listeners = events[type];

    if (typeof listeners === 'function') {
      this.removeListener(type, listeners);
    } else if (listeners !== undefined) {
      for (i = listeners.length - 1; i >= 0; i--) {
        this.removeListener(type, listeners[i]);
      }
    }

    return this;
  };

  function _listeners(target, type, unwrap) {
    var events = target._events;
    if (events === undefined) return [];
    var evlistener = events[type];
    if (evlistener === undefined) return [];
    if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];
    return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
  }

  EventEmitter.prototype.listeners = function listeners(type) {
    return _listeners(this, type, true);
  };

  EventEmitter.prototype.rawListeners = function rawListeners(type) {
    return _listeners(this, type, false);
  };

  EventEmitter.listenerCount = function (emitter, type) {
    if (typeof emitter.listenerCount === 'function') {
      return emitter.listenerCount(type);
    } else {
      return listenerCount.call(emitter, type);
    }
  };

  EventEmitter.prototype.listenerCount = listenerCount;

  function listenerCount(type) {
    var events = this._events;

    if (events !== undefined) {
      var evlistener = events[type];

      if (typeof evlistener === 'function') {
        return 1;
      } else if (evlistener !== undefined) {
        return evlistener.length;
      }
    }

    return 0;
  }

  EventEmitter.prototype.eventNames = function eventNames() {
    return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
  };

  function arrayClone(arr, n) {
    var copy = new Array(n);

    for (var i = 0; i < n; ++i) {
      copy[i] = arr[i];
    }

    return copy;
  }

  function spliceOne(list, index) {
    for (; index + 1 < list.length; index++) {
      list[index] = list[index + 1];
    }

    list.pop();
  }

  function unwrapListeners(arr) {
    var ret = new Array(arr.length);

    for (var i = 0; i < ret.length; ++i) {
      ret[i] = arr[i].listener || arr[i];
    }

    return ret;
  }

  function once(emitter, name) {
    return new Promise(function (resolve, reject) {
      function eventListener() {
        if (errorListener !== undefined) {
          emitter.removeListener('error', errorListener);
        }

        resolve([].slice.call(arguments));
      }

      ;
      var errorListener;

      if (name !== 'error') {
        errorListener = function errorListener(err) {
          emitter.removeListener(name, eventListener);
          reject(err);
        };

        emitter.once('error', errorListener);
      }

      emitter.once(name, eventListener);
    });
  }
},10091,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   */
  'use strict';

  var base64 = _$$_REQUIRE(_dependencyMap[0]);

  var ieee754 = _$$_REQUIRE(_dependencyMap[1]);

  var customInspectSymbol = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' ? Symbol['for']('nodejs.util.inspect.custom') : null;
  exports.Buffer = Buffer;
  exports.SlowBuffer = SlowBuffer;
  exports.INSPECT_MAX_BYTES = 50;
  var K_MAX_LENGTH = 0x7fffffff;
  exports.kMaxLength = K_MAX_LENGTH;
  Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();

  if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && true) {}

  function typedArraySupport() {
    try {
      var arr = new Uint8Array(1);
      var proto = {
        foo: function foo() {
          return 42;
        }
      };
      Object.setPrototypeOf(proto, Uint8Array.prototype);
      Object.setPrototypeOf(arr, proto);
      return arr.foo() === 42;
    } catch (e) {
      return false;
    }
  }

  Object.defineProperty(Buffer.prototype, 'parent', {
    enumerable: true,
    get: function get() {
      if (!Buffer.isBuffer(this)) return undefined;
      return this.buffer;
    }
  });
  Object.defineProperty(Buffer.prototype, 'offset', {
    enumerable: true,
    get: function get() {
      if (!Buffer.isBuffer(this)) return undefined;
      return this.byteOffset;
    }
  });

  function createBuffer(length) {
    if (length > K_MAX_LENGTH) {
      throw new RangeError('The value "' + length + '" is invalid for option "size"');
    }

    var buf = new Uint8Array(length);
    Object.setPrototypeOf(buf, Buffer.prototype);
    return buf;
  }

  function Buffer(arg, encodingOrOffset, length) {
    if (typeof arg === 'number') {
      if (typeof encodingOrOffset === 'string') {
        throw new TypeError('The "string" argument must be of type string. Received type number');
      }

      return allocUnsafe(arg);
    }

    return from(arg, encodingOrOffset, length);
  }

  Buffer.poolSize = 8192;

  function from(value, encodingOrOffset, length) {
    if (typeof value === 'string') {
      return fromString(value, encodingOrOffset);
    }

    if (ArrayBuffer.isView(value)) {
      return fromArrayView(value);
    }

    if (value == null) {
      throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
    }

    if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {
      return fromArrayBuffer(value, encodingOrOffset, length);
    }

    if (typeof SharedArrayBuffer !== 'undefined' && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {
      return fromArrayBuffer(value, encodingOrOffset, length);
    }

    if (typeof value === 'number') {
      throw new TypeError('The "value" argument must not be of type number. Received type number');
    }

    var valueOf = value.valueOf && value.valueOf();

    if (valueOf != null && valueOf !== value) {
      return Buffer.from(valueOf, encodingOrOffset, length);
    }

    var b = fromObject(value);
    if (b) return b;

    if (typeof Symbol !== 'undefined' && (typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive") != null && typeof value[typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive"] === 'function') {
      return Buffer.from(value[typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive"]('string'), encodingOrOffset, length);
    }

    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
  }

  Buffer.from = function (value, encodingOrOffset, length) {
    return from(value, encodingOrOffset, length);
  };

  Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);
  Object.setPrototypeOf(Buffer, Uint8Array);

  function assertSize(size) {
    if (typeof size !== 'number') {
      throw new TypeError('"size" argument must be of type number');
    } else if (size < 0) {
      throw new RangeError('The value "' + size + '" is invalid for option "size"');
    }
  }

  function alloc(size, fill, encoding) {
    assertSize(size);

    if (size <= 0) {
      return createBuffer(size);
    }

    if (fill !== undefined) {
      return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);
    }

    return createBuffer(size);
  }

  Buffer.alloc = function (size, fill, encoding) {
    return alloc(size, fill, encoding);
  };

  function allocUnsafe(size) {
    assertSize(size);
    return createBuffer(size < 0 ? 0 : checked(size) | 0);
  }

  Buffer.allocUnsafe = function (size) {
    return allocUnsafe(size);
  };

  Buffer.allocUnsafeSlow = function (size) {
    return allocUnsafe(size);
  };

  function fromString(string, encoding) {
    if (typeof encoding !== 'string' || encoding === '') {
      encoding = 'utf8';
    }

    if (!Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding);
    }

    var length = byteLength(string, encoding) | 0;
    var buf = createBuffer(length);
    var actual = buf.write(string, encoding);

    if (actual !== length) {
      buf = buf.slice(0, actual);
    }

    return buf;
  }

  function fromArrayLike(array) {
    var length = array.length < 0 ? 0 : checked(array.length) | 0;
    var buf = createBuffer(length);

    for (var i = 0; i < length; i += 1) {
      buf[i] = array[i] & 255;
    }

    return buf;
  }

  function fromArrayView(arrayView) {
    if (isInstance(arrayView, Uint8Array)) {
      var copy = new Uint8Array(arrayView);
      return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);
    }

    return fromArrayLike(arrayView);
  }

  function fromArrayBuffer(array, byteOffset, length) {
    if (byteOffset < 0 || array.byteLength < byteOffset) {
      throw new RangeError('"offset" is outside of buffer bounds');
    }

    if (array.byteLength < byteOffset + (length || 0)) {
      throw new RangeError('"length" is outside of buffer bounds');
    }

    var buf;

    if (byteOffset === undefined && length === undefined) {
      buf = new Uint8Array(array);
    } else if (length === undefined) {
      buf = new Uint8Array(array, byteOffset);
    } else {
      buf = new Uint8Array(array, byteOffset, length);
    }

    Object.setPrototypeOf(buf, Buffer.prototype);
    return buf;
  }

  function fromObject(obj) {
    if (Buffer.isBuffer(obj)) {
      var len = checked(obj.length) | 0;
      var buf = createBuffer(len);

      if (buf.length === 0) {
        return buf;
      }

      obj.copy(buf, 0, 0, len);
      return buf;
    }

    if (obj.length !== undefined) {
      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
        return createBuffer(0);
      }

      return fromArrayLike(obj);
    }

    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
      return fromArrayLike(obj.data);
    }
  }

  function checked(length) {
    if (length >= K_MAX_LENGTH) {
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + ' bytes');
    }

    return length | 0;
  }

  function SlowBuffer(length) {
    if (+length != length) {
      length = 0;
    }

    return Buffer.alloc(+length);
  }

  Buffer.isBuffer = function isBuffer(b) {
    return b != null && b._isBuffer === true && b !== Buffer.prototype;
  };

  Buffer.compare = function compare(a, b) {
    if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);
    if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);

    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
      throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
    }

    if (a === b) return 0;
    var x = a.length;
    var y = b.length;

    for (var i = 0, len = Math.min(x, y); i < len; ++i) {
      if (a[i] !== b[i]) {
        x = a[i];
        y = b[i];
        break;
      }
    }

    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
  };

  Buffer.isEncoding = function isEncoding(encoding) {
    switch (String(encoding).toLowerCase()) {
      case 'hex':
      case 'utf8':
      case 'utf-8':
      case 'ascii':
      case 'latin1':
      case 'binary':
      case 'base64':
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return true;

      default:
        return false;
    }
  };

  Buffer.concat = function concat(list, length) {
    if (!Array.isArray(list)) {
      throw new TypeError('"list" argument must be an Array of Buffers');
    }

    if (list.length === 0) {
      return Buffer.alloc(0);
    }

    var i;

    if (length === undefined) {
      length = 0;

      for (i = 0; i < list.length; ++i) {
        length += list[i].length;
      }
    }

    var buffer = Buffer.allocUnsafe(length);
    var pos = 0;

    for (i = 0; i < list.length; ++i) {
      var buf = list[i];

      if (isInstance(buf, Uint8Array)) {
        if (pos + buf.length > buffer.length) {
          Buffer.from(buf).copy(buffer, pos);
        } else {
          Uint8Array.prototype.set.call(buffer, buf, pos);
        }
      } else if (!Buffer.isBuffer(buf)) {
        throw new TypeError('"list" argument must be an Array of Buffers');
      } else {
        buf.copy(buffer, pos);
      }

      pos += buf.length;
    }

    return buffer;
  };

  function byteLength(string, encoding) {
    if (Buffer.isBuffer(string)) {
      return string.length;
    }

    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
      return string.byteLength;
    }

    if (typeof string !== 'string') {
      throw new TypeError("The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type " + typeof string);
    }

    var len = string.length;
    var mustMatch = arguments.length > 2 && arguments[2] === true;
    if (!mustMatch && len === 0) return 0;
    var loweredCase = false;

    for (;;) {
      switch (encoding) {
        case 'ascii':
        case 'latin1':
        case 'binary':
          return len;

        case 'utf8':
        case 'utf-8':
          return utf8ToBytes(string).length;

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return len * 2;

        case 'hex':
          return len >>> 1;

        case 'base64':
          return base64ToBytes(string).length;

        default:
          if (loweredCase) {
            return mustMatch ? -1 : utf8ToBytes(string).length;
          }

          encoding = ('' + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  }

  Buffer.byteLength = byteLength;

  function slowToString(encoding, start, end) {
    var loweredCase = false;

    if (start === undefined || start < 0) {
      start = 0;
    }

    if (start > this.length) {
      return '';
    }

    if (end === undefined || end > this.length) {
      end = this.length;
    }

    if (end <= 0) {
      return '';
    }

    end >>>= 0;
    start >>>= 0;

    if (end <= start) {
      return '';
    }

    if (!encoding) encoding = 'utf8';

    while (true) {
      switch (encoding) {
        case 'hex':
          return hexSlice(this, start, end);

        case 'utf8':
        case 'utf-8':
          return utf8Slice(this, start, end);

        case 'ascii':
          return asciiSlice(this, start, end);

        case 'latin1':
        case 'binary':
          return latin1Slice(this, start, end);

        case 'base64':
          return base64Slice(this, start, end);

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return utf16leSlice(this, start, end);

        default:
          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
          encoding = (encoding + '').toLowerCase();
          loweredCase = true;
      }
    }
  }

  Buffer.prototype._isBuffer = true;

  function swap(b, n, m) {
    var i = b[n];
    b[n] = b[m];
    b[m] = i;
  }

  Buffer.prototype.swap16 = function swap16() {
    var len = this.length;

    if (len % 2 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 16-bits');
    }

    for (var i = 0; i < len; i += 2) {
      swap(this, i, i + 1);
    }

    return this;
  };

  Buffer.prototype.swap32 = function swap32() {
    var len = this.length;

    if (len % 4 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 32-bits');
    }

    for (var i = 0; i < len; i += 4) {
      swap(this, i, i + 3);
      swap(this, i + 1, i + 2);
    }

    return this;
  };

  Buffer.prototype.swap64 = function swap64() {
    var len = this.length;

    if (len % 8 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 64-bits');
    }

    for (var i = 0; i < len; i += 8) {
      swap(this, i, i + 7);
      swap(this, i + 1, i + 6);
      swap(this, i + 2, i + 5);
      swap(this, i + 3, i + 4);
    }

    return this;
  };

  Buffer.prototype.toString = function toString() {
    var length = this.length;
    if (length === 0) return '';
    if (arguments.length === 0) return utf8Slice(this, 0, length);
    return slowToString.apply(this, arguments);
  };

  Buffer.prototype.toLocaleString = Buffer.prototype.toString;

  Buffer.prototype.equals = function equals(b) {
    if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');
    if (this === b) return true;
    return Buffer.compare(this, b) === 0;
  };

  Buffer.prototype.inspect = function inspect() {
    var str = '';
    var max = exports.INSPECT_MAX_BYTES;
    str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();
    if (this.length > max) str += ' ... ';
    return '<Buffer ' + str + '>';
  };

  if (customInspectSymbol) {
    Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;
  }

  Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
    if (isInstance(target, Uint8Array)) {
      target = Buffer.from(target, target.offset, target.byteLength);
    }

    if (!Buffer.isBuffer(target)) {
      throw new TypeError("The \"target\" argument must be one of type Buffer or Uint8Array. Received type " + typeof target);
    }

    if (start === undefined) {
      start = 0;
    }

    if (end === undefined) {
      end = target ? target.length : 0;
    }

    if (thisStart === undefined) {
      thisStart = 0;
    }

    if (thisEnd === undefined) {
      thisEnd = this.length;
    }

    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
      throw new RangeError('out of range index');
    }

    if (thisStart >= thisEnd && start >= end) {
      return 0;
    }

    if (thisStart >= thisEnd) {
      return -1;
    }

    if (start >= end) {
      return 1;
    }

    start >>>= 0;
    end >>>= 0;
    thisStart >>>= 0;
    thisEnd >>>= 0;
    if (this === target) return 0;
    var x = thisEnd - thisStart;
    var y = end - start;
    var len = Math.min(x, y);
    var thisCopy = this.slice(thisStart, thisEnd);
    var targetCopy = target.slice(start, end);

    for (var i = 0; i < len; ++i) {
      if (thisCopy[i] !== targetCopy[i]) {
        x = thisCopy[i];
        y = targetCopy[i];
        break;
      }
    }

    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
  };

  function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
    if (buffer.length === 0) return -1;

    if (typeof byteOffset === 'string') {
      encoding = byteOffset;
      byteOffset = 0;
    } else if (byteOffset > 0x7fffffff) {
      byteOffset = 0x7fffffff;
    } else if (byteOffset < -2147483648) {
      byteOffset = -2147483648;
    }

    byteOffset = +byteOffset;

    if (numberIsNaN(byteOffset)) {
      byteOffset = dir ? 0 : buffer.length - 1;
    }

    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;

    if (byteOffset >= buffer.length) {
      if (dir) return -1;else byteOffset = buffer.length - 1;
    } else if (byteOffset < 0) {
      if (dir) byteOffset = 0;else return -1;
    }

    if (typeof val === 'string') {
      val = Buffer.from(val, encoding);
    }

    if (Buffer.isBuffer(val)) {
      if (val.length === 0) {
        return -1;
      }

      return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
    } else if (typeof val === 'number') {
      val = val & 0xFF;

      if (typeof Uint8Array.prototype.indexOf === 'function') {
        if (dir) {
          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
        } else {
          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
        }
      }

      return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
    }

    throw new TypeError('val must be string, number or Buffer');
  }

  function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
    var indexSize = 1;
    var arrLength = arr.length;
    var valLength = val.length;

    if (encoding !== undefined) {
      encoding = String(encoding).toLowerCase();

      if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
        if (arr.length < 2 || val.length < 2) {
          return -1;
        }

        indexSize = 2;
        arrLength /= 2;
        valLength /= 2;
        byteOffset /= 2;
      }
    }

    function read(buf, i) {
      if (indexSize === 1) {
        return buf[i];
      } else {
        return buf.readUInt16BE(i * indexSize);
      }
    }

    var i;

    if (dir) {
      var foundIndex = -1;

      for (i = byteOffset; i < arrLength; i++) {
        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
          if (foundIndex === -1) foundIndex = i;
          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
        } else {
          if (foundIndex !== -1) i -= i - foundIndex;
          foundIndex = -1;
        }
      }
    } else {
      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;

      for (i = byteOffset; i >= 0; i--) {
        var found = true;

        for (var j = 0; j < valLength; j++) {
          if (read(arr, i + j) !== read(val, j)) {
            found = false;
            break;
          }
        }

        if (found) return i;
      }
    }

    return -1;
  }

  Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
    return this.indexOf(val, byteOffset, encoding) !== -1;
  };

  Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
  };

  Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
  };

  function hexWrite(buf, string, offset, length) {
    offset = Number(offset) || 0;
    var remaining = buf.length - offset;

    if (!length) {
      length = remaining;
    } else {
      length = Number(length);

      if (length > remaining) {
        length = remaining;
      }
    }

    var strLen = string.length;

    if (length > strLen / 2) {
      length = strLen / 2;
    }

    for (var i = 0; i < length; ++i) {
      var parsed = parseInt(string.substr(i * 2, 2), 16);
      if (numberIsNaN(parsed)) return i;
      buf[offset + i] = parsed;
    }

    return i;
  }

  function utf8Write(buf, string, offset, length) {
    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
  }

  function asciiWrite(buf, string, offset, length) {
    return blitBuffer(asciiToBytes(string), buf, offset, length);
  }

  function base64Write(buf, string, offset, length) {
    return blitBuffer(base64ToBytes(string), buf, offset, length);
  }

  function ucs2Write(buf, string, offset, length) {
    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
  }

  Buffer.prototype.write = function write(string, offset, length, encoding) {
    if (offset === undefined) {
      encoding = 'utf8';
      length = this.length;
      offset = 0;
    } else if (length === undefined && typeof offset === 'string') {
      encoding = offset;
      length = this.length;
      offset = 0;
    } else if (isFinite(offset)) {
      offset = offset >>> 0;

      if (isFinite(length)) {
        length = length >>> 0;
        if (encoding === undefined) encoding = 'utf8';
      } else {
        encoding = length;
        length = undefined;
      }
    } else {
      throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
    }

    var remaining = this.length - offset;
    if (length === undefined || length > remaining) length = remaining;

    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
      throw new RangeError('Attempt to write outside buffer bounds');
    }

    if (!encoding) encoding = 'utf8';
    var loweredCase = false;

    for (;;) {
      switch (encoding) {
        case 'hex':
          return hexWrite(this, string, offset, length);

        case 'utf8':
        case 'utf-8':
          return utf8Write(this, string, offset, length);

        case 'ascii':
        case 'latin1':
        case 'binary':
          return asciiWrite(this, string, offset, length);

        case 'base64':
          return base64Write(this, string, offset, length);

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return ucs2Write(this, string, offset, length);

        default:
          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
          encoding = ('' + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  };

  Buffer.prototype.toJSON = function toJSON() {
    return {
      type: 'Buffer',
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };

  function base64Slice(buf, start, end) {
    if (start === 0 && end === buf.length) {
      return base64.fromByteArray(buf);
    } else {
      return base64.fromByteArray(buf.slice(start, end));
    }
  }

  function utf8Slice(buf, start, end) {
    end = Math.min(buf.length, end);
    var res = [];
    var i = start;

    while (i < end) {
      var firstByte = buf[i];
      var codePoint = null;
      var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;

      if (i + bytesPerSequence <= end) {
        var secondByte, thirdByte, fourthByte, tempCodePoint;

        switch (bytesPerSequence) {
          case 1:
            if (firstByte < 0x80) {
              codePoint = firstByte;
            }

            break;

          case 2:
            secondByte = buf[i + 1];

            if ((secondByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;

              if (tempCodePoint > 0x7F) {
                codePoint = tempCodePoint;
              }
            }

            break;

          case 3:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];

            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;

              if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
                codePoint = tempCodePoint;
              }
            }

            break;

          case 4:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];
            fourthByte = buf[i + 3];

            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;

              if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
                codePoint = tempCodePoint;
              }
            }

        }
      }

      if (codePoint === null) {
        codePoint = 0xFFFD;
        bytesPerSequence = 1;
      } else if (codePoint > 0xFFFF) {
        codePoint -= 0x10000;
        res.push(codePoint >>> 10 & 0x3FF | 0xD800);
        codePoint = 0xDC00 | codePoint & 0x3FF;
      }

      res.push(codePoint);
      i += bytesPerSequence;
    }

    return decodeCodePointsArray(res);
  }

  var MAX_ARGUMENTS_LENGTH = 0x1000;

  function decodeCodePointsArray(codePoints) {
    var len = codePoints.length;

    if (len <= MAX_ARGUMENTS_LENGTH) {
      return String.fromCharCode.apply(String, codePoints);
    }

    var res = '';
    var i = 0;

    while (i < len) {
      res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
    }

    return res;
  }

  function asciiSlice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);

    for (var i = start; i < end; ++i) {
      ret += String.fromCharCode(buf[i] & 0x7F);
    }

    return ret;
  }

  function latin1Slice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);

    for (var i = start; i < end; ++i) {
      ret += String.fromCharCode(buf[i]);
    }

    return ret;
  }

  function hexSlice(buf, start, end) {
    var len = buf.length;
    if (!start || start < 0) start = 0;
    if (!end || end < 0 || end > len) end = len;
    var out = '';

    for (var i = start; i < end; ++i) {
      out += hexSliceLookupTable[buf[i]];
    }

    return out;
  }

  function utf16leSlice(buf, start, end) {
    var bytes = buf.slice(start, end);
    var res = '';

    for (var i = 0; i < bytes.length - 1; i += 2) {
      res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
    }

    return res;
  }

  Buffer.prototype.slice = function slice(start, end) {
    var len = this.length;
    start = ~~start;
    end = end === undefined ? len : ~~end;

    if (start < 0) {
      start += len;
      if (start < 0) start = 0;
    } else if (start > len) {
      start = len;
    }

    if (end < 0) {
      end += len;
      if (end < 0) end = 0;
    } else if (end > len) {
      end = len;
    }

    if (end < start) end = start;
    var newBuf = this.subarray(start, end);
    Object.setPrototypeOf(newBuf, Buffer.prototype);
    return newBuf;
  };

  function checkOffset(offset, ext, length) {
    if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');
    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');
  }

  Buffer.prototype.readUintLE = Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;

    while (++i < byteLength && (mul *= 0x100)) {
      val += this[offset + i] * mul;
    }

    return val;
  };

  Buffer.prototype.readUintBE = Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;

    if (!noAssert) {
      checkOffset(offset, byteLength, this.length);
    }

    var val = this[offset + --byteLength];
    var mul = 1;

    while (byteLength > 0 && (mul *= 0x100)) {
      val += this[offset + --byteLength] * mul;
    }

    return val;
  };

  Buffer.prototype.readUint8 = Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 1, this.length);
    return this[offset];
  };

  Buffer.prototype.readUint16LE = Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] | this[offset + 1] << 8;
  };

  Buffer.prototype.readUint16BE = Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] << 8 | this[offset + 1];
  };

  Buffer.prototype.readUint32LE = Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;
  };

  Buffer.prototype.readUint32BE = Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
  };

  Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;

    while (++i < byteLength && (mul *= 0x100)) {
      val += this[offset + i] * mul;
    }

    mul *= 0x80;
    if (val >= mul) val -= Math.pow(2, 8 * byteLength);
    return val;
  };

  Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    var i = byteLength;
    var mul = 1;
    var val = this[offset + --i];

    while (i > 0 && (mul *= 0x100)) {
      val += this[offset + --i] * mul;
    }

    mul *= 0x80;
    if (val >= mul) val -= Math.pow(2, 8 * byteLength);
    return val;
  };

  Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 1, this.length);
    if (!(this[offset] & 0x80)) return this[offset];
    return (0xff - this[offset] + 1) * -1;
  };

  Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    var val = this[offset] | this[offset + 1] << 8;
    return val & 0x8000 ? val | 0xFFFF0000 : val;
  };

  Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    var val = this[offset + 1] | this[offset] << 8;
    return val & 0x8000 ? val | 0xFFFF0000 : val;
  };

  Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
  };

  Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
  };

  Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, true, 23, 4);
  };

  Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, false, 23, 4);
  };

  Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, true, 52, 8);
  };

  Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, false, 52, 8);
  };

  function checkInt(buf, value, offset, ext, max, min) {
    if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
    if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
  }

  Buffer.prototype.writeUintLE = Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;

    if (!noAssert) {
      var maxBytes = Math.pow(2, 8 * byteLength) - 1;
      checkInt(this, value, offset, byteLength, maxBytes, 0);
    }

    var mul = 1;
    var i = 0;
    this[offset] = value & 0xFF;

    while (++i < byteLength && (mul *= 0x100)) {
      this[offset + i] = value / mul & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeUintBE = Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;

    if (!noAssert) {
      var maxBytes = Math.pow(2, 8 * byteLength) - 1;
      checkInt(this, value, offset, byteLength, maxBytes, 0);
    }

    var i = byteLength - 1;
    var mul = 1;
    this[offset + i] = value & 0xFF;

    while (--i >= 0 && (mul *= 0x100)) {
      this[offset + i] = value / mul & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeUint8 = Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
    this[offset] = value & 0xff;
    return offset + 1;
  };

  Buffer.prototype.writeUint16LE = Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    return offset + 2;
  };

  Buffer.prototype.writeUint16BE = Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
    return offset + 2;
  };

  Buffer.prototype.writeUint32LE = Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
    this[offset + 3] = value >>> 24;
    this[offset + 2] = value >>> 16;
    this[offset + 1] = value >>> 8;
    this[offset] = value & 0xff;
    return offset + 4;
  };

  Buffer.prototype.writeUint32BE = Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
    return offset + 4;
  };

  Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      var limit = Math.pow(2, 8 * byteLength - 1);
      checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }

    var i = 0;
    var mul = 1;
    var sub = 0;
    this[offset] = value & 0xFF;

    while (++i < byteLength && (mul *= 0x100)) {
      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
        sub = 1;
      }

      this[offset + i] = (value / mul >> 0) - sub & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      var limit = Math.pow(2, 8 * byteLength - 1);
      checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }

    var i = byteLength - 1;
    var mul = 1;
    var sub = 0;
    this[offset + i] = value & 0xFF;

    while (--i >= 0 && (mul *= 0x100)) {
      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
        sub = 1;
      }

      this[offset + i] = (value / mul >> 0) - sub & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -128);
    if (value < 0) value = 0xff + value + 1;
    this[offset] = value & 0xff;
    return offset + 1;
  };

  Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -32768);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    return offset + 2;
  };

  Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -32768);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
    return offset + 2;
  };

  Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    this[offset + 2] = value >>> 16;
    this[offset + 3] = value >>> 24;
    return offset + 4;
  };

  Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);
    if (value < 0) value = 0xffffffff + value + 1;
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
    return offset + 4;
  };

  function checkIEEE754(buf, value, offset, ext, max, min) {
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
    if (offset < 0) throw new RangeError('Index out of range');
  }

  function writeFloat(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
    }

    ieee754.write(buf, value, offset, littleEndian, 23, 4);
    return offset + 4;
  }

  Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
    return writeFloat(this, value, offset, true, noAssert);
  };

  Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
    return writeFloat(this, value, offset, false, noAssert);
  };

  function writeDouble(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157e+308);
    }

    ieee754.write(buf, value, offset, littleEndian, 52, 8);
    return offset + 8;
  }

  Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
    return writeDouble(this, value, offset, true, noAssert);
  };

  Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
    return writeDouble(this, value, offset, false, noAssert);
  };

  Buffer.prototype.copy = function copy(target, targetStart, start, end) {
    if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');
    if (!start) start = 0;
    if (!end && end !== 0) end = this.length;
    if (targetStart >= target.length) targetStart = target.length;
    if (!targetStart) targetStart = 0;
    if (end > 0 && end < start) end = start;
    if (end === start) return 0;
    if (target.length === 0 || this.length === 0) return 0;

    if (targetStart < 0) {
      throw new RangeError('targetStart out of bounds');
    }

    if (start < 0 || start >= this.length) throw new RangeError('Index out of range');
    if (end < 0) throw new RangeError('sourceEnd out of bounds');
    if (end > this.length) end = this.length;

    if (target.length - targetStart < end - start) {
      end = target.length - targetStart + start;
    }

    var len = end - start;

    if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
      this.copyWithin(targetStart, start, end);
    } else {
      Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);
    }

    return len;
  };

  Buffer.prototype.fill = function fill(val, start, end, encoding) {
    if (typeof val === 'string') {
      if (typeof start === 'string') {
        encoding = start;
        start = 0;
        end = this.length;
      } else if (typeof end === 'string') {
        encoding = end;
        end = this.length;
      }

      if (encoding !== undefined && typeof encoding !== 'string') {
        throw new TypeError('encoding must be a string');
      }

      if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
        throw new TypeError('Unknown encoding: ' + encoding);
      }

      if (val.length === 1) {
        var code = val.charCodeAt(0);

        if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {
          val = code;
        }
      }
    } else if (typeof val === 'number') {
      val = val & 255;
    } else if (typeof val === 'boolean') {
      val = Number(val);
    }

    if (start < 0 || this.length < start || this.length < end) {
      throw new RangeError('Out of range index');
    }

    if (end <= start) {
      return this;
    }

    start = start >>> 0;
    end = end === undefined ? this.length : end >>> 0;
    if (!val) val = 0;
    var i;

    if (typeof val === 'number') {
      for (i = start; i < end; ++i) {
        this[i] = val;
      }
    } else {
      var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);
      var len = bytes.length;

      if (len === 0) {
        throw new TypeError('The value "' + val + '" is invalid for argument "value"');
      }

      for (i = 0; i < end - start; ++i) {
        this[i + start] = bytes[i % len];
      }
    }

    return this;
  };

  var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;

  function base64clean(str) {
    str = str.split('=')[0];
    str = str.trim().replace(INVALID_BASE64_RE, '');
    if (str.length < 2) return '';

    while (str.length % 4 !== 0) {
      str = str + '=';
    }

    return str;
  }

  function utf8ToBytes(string, units) {
    units = units || Infinity;
    var codePoint;
    var length = string.length;
    var leadSurrogate = null;
    var bytes = [];

    for (var i = 0; i < length; ++i) {
      codePoint = string.charCodeAt(i);

      if (codePoint > 0xD7FF && codePoint < 0xE000) {
        if (!leadSurrogate) {
          if (codePoint > 0xDBFF) {
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
            continue;
          } else if (i + 1 === length) {
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
            continue;
          }

          leadSurrogate = codePoint;
          continue;
        }

        if (codePoint < 0xDC00) {
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
          leadSurrogate = codePoint;
          continue;
        }

        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
      } else if (leadSurrogate) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
      }

      leadSurrogate = null;

      if (codePoint < 0x80) {
        if ((units -= 1) < 0) break;
        bytes.push(codePoint);
      } else if (codePoint < 0x800) {
        if ((units -= 2) < 0) break;
        bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
      } else if (codePoint < 0x10000) {
        if ((units -= 3) < 0) break;
        bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
      } else if (codePoint < 0x110000) {
        if ((units -= 4) < 0) break;
        bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
      } else {
        throw new Error('Invalid code point');
      }
    }

    return bytes;
  }

  function asciiToBytes(str) {
    var byteArray = [];

    for (var i = 0; i < str.length; ++i) {
      byteArray.push(str.charCodeAt(i) & 0xFF);
    }

    return byteArray;
  }

  function utf16leToBytes(str, units) {
    var c, hi, lo;
    var byteArray = [];

    for (var i = 0; i < str.length; ++i) {
      if ((units -= 2) < 0) break;
      c = str.charCodeAt(i);
      hi = c >> 8;
      lo = c % 256;
      byteArray.push(lo);
      byteArray.push(hi);
    }

    return byteArray;
  }

  function base64ToBytes(str) {
    return base64.toByteArray(base64clean(str));
  }

  function blitBuffer(src, dst, offset, length) {
    for (var i = 0; i < length; ++i) {
      if (i + offset >= dst.length || i >= src.length) break;
      dst[i + offset] = src[i];
    }

    return i;
  }

  function isInstance(obj, type) {
    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
  }

  function numberIsNaN(obj) {
    return obj !== obj;
  }

  var hexSliceLookupTable = function () {
    var alphabet = '0123456789abcdef';
    var table = new Array(256);

    for (var i = 0; i < 16; ++i) {
      var i16 = i * 16;

      for (var j = 0; j < 16; ++j) {
        table[i16 + j] = alphabet[i] + alphabet[j];
      }
    }

    return table;
  }();
},10094,[10097,22402]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  exports.byteLength = byteLength;
  exports.toByteArray = toByteArray;
  exports.fromByteArray = fromByteArray;
  var lookup = [];
  var revLookup = [];
  var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;
  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

  for (var i = 0, len = code.length; i < len; ++i) {
    lookup[i] = code[i];
    revLookup[code.charCodeAt(i)] = i;
  }

  revLookup['-'.charCodeAt(0)] = 62;
  revLookup['_'.charCodeAt(0)] = 63;

  function getLens(b64) {
    var len = b64.length;

    if (len % 4 > 0) {
      throw new Error('Invalid string. Length must be a multiple of 4');
    }

    var validLen = b64.indexOf('=');
    if (validLen === -1) validLen = len;
    var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;
    return [validLen, placeHoldersLen];
  }

  function byteLength(b64) {
    var lens = getLens(b64);
    var validLen = lens[0];
    var placeHoldersLen = lens[1];
    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
  }

  function _byteLength(b64, validLen, placeHoldersLen) {
    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
  }

  function toByteArray(b64) {
    var tmp;
    var lens = getLens(b64);
    var validLen = lens[0];
    var placeHoldersLen = lens[1];
    var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
    var curByte = 0;
    var len = placeHoldersLen > 0 ? validLen - 4 : validLen;
    var i;

    for (i = 0; i < len; i += 4) {
      tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
      arr[curByte++] = tmp >> 16 & 0xFF;
      arr[curByte++] = tmp >> 8 & 0xFF;
      arr[curByte++] = tmp & 0xFF;
    }

    if (placeHoldersLen === 2) {
      tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
      arr[curByte++] = tmp & 0xFF;
    }

    if (placeHoldersLen === 1) {
      tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
      arr[curByte++] = tmp >> 8 & 0xFF;
      arr[curByte++] = tmp & 0xFF;
    }

    return arr;
  }

  function tripletToBase64(num) {
    return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];
  }

  function encodeChunk(uint8, start, end) {
    var tmp;
    var output = [];

    for (var i = start; i < end; i += 3) {
      tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);
      output.push(tripletToBase64(tmp));
    }

    return output.join('');
  }

  function fromByteArray(uint8) {
    var tmp;
    var len = uint8.length;
    var extraBytes = len % 3;
    var parts = [];
    var maxChunkLength = 16383;

    for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
      parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
    }

    if (extraBytes === 1) {
      tmp = uint8[len - 1];
      parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');
    } else if (extraBytes === 2) {
      tmp = (uint8[len - 2] << 8) + uint8[len - 1];
      parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');
    }

    return parts.join('');
  }
},10097,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = normalizeBindOptions;

  function normalizeBindOptions() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var arg1 = args[0],
        arg2 = args[1];
    var lastArg = args[args.length - 1];
    var options = {};
    if (typeof arg1 === 'object') options = arg1;else if (typeof arg1 === 'number') options.port = arg1;else if (typeof arg1 === 'string') options.address = arg1;
    if (typeof arg2 === 'string') options.address = arg2;
    if (typeof lastArg === 'function') options.callback = lastArg;
    return options;
  }
},10100,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 330,
    "height": 330,
    "scales": [1],
    "hash": "91c3fb9d18aef8a4cb19048b7ac7c156",
    "name": "search_mesh_list_r3600",
    "type": "png"
  });
},10103,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 660,
    "height": 660,
    "scales": [1],
    "hash": "956f4946e71d1caeefe19dd0cdcb6f59",
    "name": "extending_mesh_r3600",
    "type": "png"
  });
},10106,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 330,
    "height": 330,
    "scales": [1],
    "hash": "ce4398a84cc99e255ad2a51585366a83",
    "name": "search_mesh_list_rm1800",
    "type": "png"
  });
},10109,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 660,
    "height": 660,
    "scales": [1],
    "hash": "4d2da2648e035f69a0c776070b571329",
    "name": "extending_mesh_rm1800",
    "type": "png"
  });
},10112,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 330,
    "height": 330,
    "scales": [1],
    "hash": "cff68013b270c574bc2c21d087d73f06",
    "name": "search_mesh_list_ra67",
    "type": "png"
  });
},10115,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 660,
    "height": 660,
    "scales": [1],
    "hash": "dd324576069c9f3ebe09b8afc1054e1e",
    "name": "extending_mesh_ra67",
    "type": "png"
  });
},10118,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var start = Date.now();

  _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  _$$_REQUIRE(_dependencyMap[2]);

  _$$_REQUIRE(_dependencyMap[3]);

  _$$_REQUIRE(_dependencyMap[4]);

  _$$_REQUIRE(_dependencyMap[5]);

  _$$_REQUIRE(_dependencyMap[6]);

  _$$_REQUIRE(_dependencyMap[7]);

  _$$_REQUIRE(_dependencyMap[8]);

  _$$_REQUIRE(_dependencyMap[9]);

  _$$_REQUIRE(_dependencyMap[10]);

  var GlobalPerformanceLogger = _$$_REQUIRE(_dependencyMap[11]);

  GlobalPerformanceLogger.markPoint('initializeCore_start', GlobalPerformanceLogger.currentTimestamp() - (Date.now() - start));
  GlobalPerformanceLogger.markPoint('initializeCore_end');
},10120,[14449,14452,14455,14470,14479,14485,14500,14524,14533,14536,14560,14548]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 330,
    "height": 330,
    "scales": [1],
    "hash": "3e593a2289aa9e724ecead44ec085117",
    "name": "search_mesh_list_ra69",
    "type": "png"
  });
},10121,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 660,
    "height": 660,
    "scales": [1],
    "hash": "8d5ee2060827600209be362f1664d6b1",
    "name": "extending_mesh_ra69",
    "type": "png"
  });
},10124,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 330,
    "height": 330,
    "scales": [1],
    "hash": "cac119f872405faa3f528bff8857048b",
    "name": "search_mesh_list_ra72",
    "type": "png"
  });
},10127,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 660,
    "height": 660,
    "scales": [1],
    "hash": "4c89f9ca71d29d2f64eb544dc9d8d7bf",
    "name": "extending_mesh_ra72",
    "type": "png"
  });
},10130,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 660,
    "height": 660,
    "scales": [1],
    "hash": "7f6a8315c573d5be3157295e91f67a27",
    "name": "search_mesh_list_ra70",
    "type": "png"
  });
},10133,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/meshTree",
    "width": 660,
    "height": 660,
    "scales": [1],
    "hash": "7f6a8315c573d5be3157295e91f67a27",
    "name": "RA70",
    "type": "png"
  });
},10136,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/meshTree",
    "width": 168,
    "height": 168,
    "scales": [1],
    "hash": "6b0491cbd75a159374ee447b00cf0cad",
    "name": "ax3000_168",
    "type": "png"
  });
},10139,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/meshTree",
    "width": 480,
    "height": 480,
    "scales": [1],
    "hash": "7b5331001dd19fb4c15c976ba5bba5a0",
    "name": "ax3000_480",
    "type": "png"
  });
},10142,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/meshTree",
    "width": 330,
    "height": 330,
    "scales": [1],
    "hash": "67c416b31d2da02be71f045447174c99",
    "name": "common_realism_new",
    "type": "png"
  });
},10145,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 53,
    "height": 41,
    "scales": [1],
    "hash": "b48928c3a2a564dc05653d1c6d27a5b3",
    "name": "mesh_rssi_weak",
    "type": "png"
  });
},10148,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 53,
    "height": 41,
    "scales": [1],
    "hash": "15517c46d62bfae1d346ecbfa3d3a3b9",
    "name": "mesh_rssi_strong",
    "type": "png"
  });
},10151,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[10]);

  var _miot = _$$_REQUIRE(_dependencyMap[11]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _device = _$$_REQUIRE(_dependencyMap[13]);

  var Progress = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[14]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[15]);

  var HealthMode = function (_React$Component) {
    (0, _inherits2.default)(HealthMode, _React$Component);

    function HealthMode(props) {
      var _this;

      (0, _classCallCheck2.default)(this, HealthMode);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HealthMode).call(this, props));

      _this.startWPS = function () {
        _this.sec = 0;

        _this.setState({
          isShowProgress: true,
          progress: 0
        });

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var paramsDic = {
          method: 'get',
          params: {
            deviceID: deviceId,
            deviceId: deviceId
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.wps, paramsDic).then(function (res) {
          if (res.code === 0) {
            _this.runProgress();
          }
        }).catch(function (res) {}).finally(function (res) {});
      };

      _this.runProgress = function () {
        _this.sec = _this.sec + 1;
        var progress = _this.sec * 100 / _this.MAX_TIME / 100;

        _this.getStatus();

        if (_this.sec > _this.MAX_TIME) {
          clearTimeout(_this.timer);
          _this.sec = 0;

          _this.setState({
            'isShowProgress': false,
            progress: 0
          });

          if (_this.status === 1 || _this.status === 3) {
            _this.setState({
              'isShowFail': true
            });
          }
        } else {
          _this.setState({
            progress: progress
          }, function () {
            _this.timer = setTimeout(_this.runProgress, 1000);
          });
        }
      };

      _this.getStatus = function () {
        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var paramsDic = {
          method: 'get',
          params: {
            deviceID: deviceId,
            deviceId: deviceId
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.wps_status, paramsDic).then(function (res) {
          if (res.code === 0) {
            _this.status = res.status;

            if (_this.status === 0) {
              _this.setState({
                'isShowFail': true,
                'isShowProgress': false,
                'isShowSuccess': false
              });

              clearTimeout(_this.timer);
            } else if (_this.status === 2) {
              _this.setState({
                'isShowSuccess': true,
                'isShowProgress': false
              });

              clearTimeout(_this.timer);
            }
          }
        }).catch(function (res) {}).finally(function (res) {});
      };

      _this.submitHandler = function () {
        _this.startWPS();
      };

      _this.retryWPS = function () {
        _this.startWPS();

        _this.setState({
          'isShowFail': false
        });
      };

      _this.cancelWPS = function () {
        clearTimeout(_this.timer);

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var paramsDic = {
          method: 'get',
          params: {
            deviceID: deviceId,
            deviceId: deviceId
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.wps_cancel, paramsDic).then(function (res) {
          if (res.code === 0) {}
        }).catch(function (res) {}).finally(function (res) {});
      };

      _this.cancelHandler = function () {
        _this.sec = 0;

        _this.setState({
          'isShowProgress': false,
          'progress': 0
        });

        _this.cancelWPS();
      };

      _this.state = {
        isShowProgress: false,
        progress: 0,
        isShowFail: false,
        isShowSuccess: false
      };
      _this.sec = 0;
      _this.MAX_TIME = 120;
      _this.status = 1;
      return _this;
    }

    (0, _createClass2.default)(HealthMode, [{
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        clearTimeout(this.timer);
      }
    }, {
      key: "componentWillMount",
      value: function componentWillMount() {}
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[16])
        }), _react.default.createElement(_reactNative.View, {
          style: styles.infos
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, "\u7B2C\u4E00\u6B65"), _react.default.createElement(_reactNative.Text, {
          style: styles.subTitle
        }, "\u5F00\u542F\u8DEF\u7531\u5668WPS\u8FDE\u63A5\u670D\u52A1\uFF0C\u5728\u4E24\u5206\u949F\u5185\u53EF\u63A5\u53D7\u5176\u4ED6\u8BBE\u5907\u7684\u8054\u7F51\u8BF7\u6C42\uFF1B"))), _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[17])
        }), _react.default.createElement(_reactNative.View, {
          style: styles.infos
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, "\u7B2C\u4E8C\u6B65"), _react.default.createElement(_reactNative.Text, {
          style: styles.subTitle
        }, "\u5728\u8DEF\u7531\u5668\u9644\u8FD1\u9700\u8981\u8054\u7F51\u7684\u8BBE\u5907\u4E0A\u6309\u4E0BWPS\u6309\u94AE\uFF0C\u8BE5\u8BBE\u5907\u4F1A\u81EA\u52A8\u4E0E\u8DEF\u7531\u5668\u8FDE\u63A5\uFF1B"))), _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[18])
        }), _react.default.createElement(_reactNative.View, {
          style: styles.infos
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, "\u7B2C\u4E09\u6B65"), _react.default.createElement(_reactNative.Text, {
          style: styles.subTitle
        }, "\u8FDE\u63A5\u6210\u529F\u540E\uFF0C\u8BBE\u5907\u5373\u53EF\u901A\u8FC7\u8DEF\u7531\u5668\u8054\u7F51\u3002")))), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.isShowProgress,
          title: '正在等待设备接入',
          subtitle: '2分钟后将自动关闭',
          showTitle: true,
          showSubtitle: true,
          canDismiss: false,
          onDismiss: this.cancelHandler,
          buttons: [{
            text: '取消',
            style: {},
            callback: function callback(_) {
              return _this2.cancelHandler();
            }
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            alignItems: 'center',
            justifyContent: 'center'
          }
        }, _react.default.createElement(Progress.Bar, {
          progress: this.state.progress,
          color: '#32BAC0',
          unfilledColor: '#f1f1f1',
          width: 200,
          height: 10,
          borderRadius: 5,
          borderWidth: 0,
          borderColor: "#000000",
          useNativeDriver: true
        }))), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.isShowFail,
          showTitle: false,
          showSubtitle: false,
          canDismiss: false,
          onDismiss: function onDismiss() {
            _this2.setState({
              'isShowFail': false
            });
          },
          buttons: [{
            text: '取消',
            style: {},
            callback: function callback(_) {
              return _this2.setState({
                'isShowFail': false
              });
            }
          }, {
            text: '重试',
            style: {},
            callback: function callback(_) {
              return _this2.retryWPS();
            }
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            alignItems: 'center',
            justifyContent: 'center',
            paddingTop: 40,
            paddingBottom: 40,
            borderBottomStyle: 'solid',
            borderBottomColor: 'rgba(0,0,0,0.15)',
            borderBottomWidth: 0.3
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[19])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.successTips
        }, "\u672A\u8FDE\u63A5\u5230\u4EFB\u4F55\u8BBE\u5907"))), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.isShowSuccess,
          showTitle: false,
          showSubtitle: false,
          canDismiss: true,
          onDismiss: function onDismiss() {
            _this2.setState({
              'isShowSuccess': false
            });
          },
          buttons: [{
            text: '查看已连接设备',
            style: {},
            callback: function callback(_) {
              return _this2.setState({
                'isShowSuccess': false
              }, function () {
                _this2.props.navigation.navigate('Devices');
              });
            }
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            alignItems: 'center',
            justifyContent: 'center',
            paddingTop: 40,
            paddingBottom: 40,
            borderBottomStyle: 'solid',
            borderBottomColor: 'rgba(0,0,0,0.15)',
            borderBottomWidth: 0.3
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[20])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.successTips
        }, "\u8FDE\u63A5\u6210\u529F"))), _react.default.createElement(_reactNative.View, {
          style: styles.rkbuttonItem
        }, _react.default.createElement(_reactNativeUiKitten.RkButton, {
          rkType: "rounded",
          onPress: this.submitHandler,
          disabled: this.state.confirmDisabled,
          style: styles.viewRkButton
        }, "\u7ACB\u5373\u5F00\u542FWPS")));
      }
    }]);
    return HealthMode;
  }(_react.default.Component);

  exports.default = HealthMode;

  HealthMode.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: 'WPS',
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      justifyContent: 'space-between',
      flex: 1,
      paddingRight: 20,
      paddingLeft: 20
    },
    icon: {
      width: 120,
      height: 120,
      resizeMode: 'contain'
    },
    item: {
      flexDirection: 'row'
    },
    infos: {
      flex: 1,
      paddingTop: 20,
      paddingLeft: 20
    },
    title: {
      color: '#1782dd',
      fontSize: 16
    },
    subTitle: {
      color: '#000'
    },
    viewRkButton: {
      width: '100%'
    },
    rkbuttonItem: {
      alignItems: 'center',
      paddingBottom: 24
    },
    cancelBtn: {
      color: '#000',
      borderWidth: 1,
      borderColor: '#f1f1f1',
      borderRadius: 40,
      borderStyle: 'solid',
      width: 200,
      height: 40,
      alignItems: 'center',
      justifyContent: 'center'
    },
    successTips: {
      fontSize: 16,
      color: '#000',
      marginTop: 10
    }
  });
},10154,[14308,14305,14320,14323,14371,14377,14386,10284,10297,10033,11251,10074,10064,10935,13636,10755,10157,10160,10163,10166,10169]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/wps",
    "width": 300,
    "height": 270,
    "scales": [1],
    "hash": "6aff5a8be5489e03a28be317121d501a",
    "name": "wps_connect_step_1",
    "type": "png"
  });
},10157,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/wps",
    "width": 300,
    "height": 270,
    "scales": [1],
    "hash": "da104640f4e998babbde983b906ff249",
    "name": "wps_connect_step_2",
    "type": "png"
  });
},10160,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/wps",
    "width": 300,
    "height": 270,
    "scales": [1],
    "hash": "44e8508634a202bafec1bdeacad3166a",
    "name": "wps_connect_step_3",
    "type": "png"
  });
},10163,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/wps",
    "width": 293,
    "height": 293,
    "scales": [1],
    "hash": "52757dc3bade67e7caadcb3ad2e92ebd",
    "name": "quicklink_failed_icon",
    "type": "png"
  });
},10166,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/wps",
    "width": 319,
    "height": 319,
    "scales": [1],
    "hash": "4bb93c17fc6ae3cba78deedc1b398085",
    "name": "quicklink_success_icon",
    "type": "png"
  });
},10169,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _MessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _HealthMode_RestartPlan = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[13]);

  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _RestartPlan_HealthMode = _$$_REQUIRE(_dependencyMap[16]);

  var HealthMode = function (_React$Component) {
    (0, _inherits2.default)(HealthMode, _React$Component);

    function HealthMode(props) {
      var _this;

      (0, _classCallCheck2.default)(this, HealthMode);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HealthMode).call(this, props));

      _this.deleteHandler = function () {
        _this.setState({
          'isShowLoading': true,
          loadingText: '正在保存设置'
        });

        (0, _RestartPlan_HealthMode.deleteItem)(_this.state.deleteItemId, function (res) {
          _this.setState({
            'isShowLoading': false
          });

          if (res.code == 0) {
            var copyList = _this.state.dataSource.filter(function (v, i) {
              return v.id != _this.state.deleteItemId;
            });

            _this.setState({
              dataSource: copyList
            });
          }
        });
      };

      _this.state = {
        dataSource: [],
        isShowDeleteDialog: false,
        isShowLoading: false,
        loadingText: ''
      };
      return _this;
    }

    (0, _createClass2.default)(HealthMode, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.setState({
          'isShowLoading': true,
          loadingText: '加载数据中...'
        });
        (0, _RestartPlan_HealthMode.getInitData)({
          start_id: 30010,
          end_id: 30019
        }, function (res) {
          _this2.setState({
            dataSource: (0, _RestartPlan_HealthMode.formatDataList)(res.scene_list),
            isShowLoading: false
          });
        }, this.props.navigation.goBack);
      }
    }, {
      key: "openTimeSetting",
      value: function openTimeSetting() {
        var _this3 = this;

        if (this.state.dataSource.length >= 9) {
          _index.default.show("最多只能添加9个定时哦~");

          return;
        }

        this.props.navigation.navigate("RestartTimeSetting", {
          type: 'add',
          callback: function callback(item) {
            item.id = (0, _RestartPlan_HealthMode.generateID)(_this3.state.dataSource, 'normal_reboot');
            item.enabled = true;
            var duration = (0, _RestartPlan_HealthMode.calDurationTime)(item.selectedWifiCloseRawString);
            var utc_time = (0, _RestartPlan_HealthMode.timeStringToUtcTime)(item.selectedWifiCloseArray);
            var data = (0, _RestartPlan_HealthMode.generateXHRData)({
              id: item.id,
              command: "scene_setting",
              enabled: true,
              repeat: item.repeatArray,
              time: item.selectedWifiCloseRawString + ':00',
              duration: duration,
              utc_time: utc_time,
              type: 'normal_reboot'
            });
            (0, _RestartPlan_HealthMode.sendData)(data, function (res) {
              if (res.code == 0) {
                var list = _this3.state.dataSource;
                list.push(item);

                _this3.setState({
                  dataSource: list
                });

                _CommonUtils.default.ShowToastBottom('数据添加成功');
              }
            });
          }
        });
      }
    }, {
      key: "editItem",
      value: function editItem(rowData, sectionID, rowID) {
        var _this4 = this;

        this.props.navigation.navigate('RestartTimeSetting', {
          type: 'edit',
          info: rowData,
          callback: function callback(info) {
            var duration = (0, _RestartPlan_HealthMode.calDurationTime)(info.selectedWifiCloseRawString);
            var utc_time = (0, _RestartPlan_HealthMode.timeStringToUtcTime)(info.selectedWifiCloseArray);
            var data = (0, _RestartPlan_HealthMode.generateXHRData)({
              id: info.id,
              command: "scene_update",
              enabled: info.enabled,
              repeat: info.repeatArray,
              time: info.selectedWifiCloseRawString + ':00',
              duration: duration,
              utc_time: utc_time,
              type: 'normal_reboot'
            });
            (0, _RestartPlan_HealthMode.sendData)(data, function (res) {
              if (res.code == 0) {
                _this4.state.dataSource.map(function (item, index) {
                  if (item.id == rowData.id) {
                    item = rowData;
                  }
                });

                _this4.setState({
                  dataSource: _this4.state.dataSource
                });

                _CommonUtils.default.ShowToastBottom('编辑成功');
              }
            });
          }
        });
      }
    }, {
      key: "switchChange",
      value: function switchChange(value, rowData) {
        var _this5 = this;

        this.setState({
          'isShowLoading': true,
          loadingText: '正在保存设置'
        });
        var duration = (0, _RestartPlan_HealthMode.calDurationTime)(rowData.selectedWifiCloseRawString);
        var utc_time = (0, _RestartPlan_HealthMode.timeStringToUtcTime)(rowData.selectedWifiCloseArray);
        var data = (0, _RestartPlan_HealthMode.generateXHRData)({
          id: rowData.id,
          command: "scene_update",
          enabled: value,
          repeat: rowData.repeatArray,
          time: rowData.selectedWifiCloseRawString + ':00',
          duration: duration,
          utc_time: utc_time,
          type: 'normal_reboot'
        });
        (0, _RestartPlan_HealthMode.sendData)(data, function (res) {
          _this5.setState({
            'isShowLoading': false
          });

          if (res.code == 0) {
            _this5.state.dataSource.map(function (item, index) {
              if (item.id == rowData.id) {
                item.enabled = value;
              }
            });

            _this5.setState({
              dataSource: _this5.state.dataSource
            });
          }
        });
      }
    }, {
      key: "_renderRow",
      value: function _renderRow(rowData, sectionID, rowID) {
        var _this6 = this;

        var spellTitle = rowData.selectedWifiCloseRawString + '重启路由器';
        var repeatSubtitle;

        if (_RestartPlan_HealthMode.selectedRepeatTextArray[rowData.repeatType]) {
          repeatSubtitle = _RestartPlan_HealthMode.selectedRepeatTextArray[rowData.repeatType];
        } else {
          repeatSubtitle = (0, _RestartPlan_HealthMode.alignRepeatDay)(rowData.repeatArray).map(function (o) {
            return _RestartPlan_HealthMode.selectedRepeatDayTextArray[o];
          }).join(",");
        }

        return _react.default.createElement(_reactNative.TouchableHighlight, {
          underlayColor: "rgba(0,0,0,.05)",
          onLongPress: function onLongPress(_) {
            _this6.setState({
              isShowDeleteDialog: true,
              deleteItemId: rowData.id
            });
          },
          onPress: function onPress(_) {
            _this6.editItem(rowData, sectionID, rowID);
          }
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: _HealthMode_RestartPlan.default.innerContainer
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: _HealthMode_RestartPlan.default.innerTitle,
          numberOfLines: 1
        }, spellTitle), _react.default.createElement(_reactNative.Text, {
          style: _HealthMode_RestartPlan.default.innersubTitle,
          numberOfLines: 1
        }, repeatSubtitle)), _react.default.createElement(_Switch.default, {
          style: {
            width: 46,
            height: 24
          },
          onTintColor: "#32BAC0",
          tintColor: "#F0F0F0",
          value: rowData.enabled,
          onValueChange: function onValueChange(value) {
            _this6.switchChange(value, rowData);
          }
        })), _react.default.createElement(_Separator.default, null)));
      }
    }, {
      key: "render",
      value: function render() {
        var _this7 = this;

        return _react.default.createElement(_reactNative.View, {
          style: _HealthMode_RestartPlan.default.container
        }, _react.default.createElement(_reactNative.Text, {
          style: _HealthMode_RestartPlan.default.titleText
        }, "\u5B9A\u671F\u91CD\u542F\u53EF\u4EE5\u8BA9\u8DEF\u7531\u5668\u4FDD\u6301\u6700\u4F73\u72B6\u6001"), _react.default.createElement(_reactNative.FlatList, {
          style: _HealthMode_RestartPlan.default.list,
          data: this.state.dataSource,
          renderItem: function renderItem(_ref) {
            var item = _ref.item,
                index = _ref.index;
            return _this7._renderRow(item, index);
          }
        }), _react.default.createElement(_reactNative.TouchableHighlight, {
          underlayColor: "rgba(0,0,0,.05)",
          onPress: function onPress(_) {
            return _this7.openTimeSetting();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: _HealthMode_RestartPlan.default.addcont
        }, _react.default.createElement(_reactNative.Image, {
          style: _HealthMode_RestartPlan.default.addIcon,
          resizeMode: "contain",
          source: _$$_REQUIRE(_dependencyMap[17])
        }), _react.default.createElement(_reactNative.Text, {
          style: _HealthMode_RestartPlan.default.addText
        }, "\u6DFB\u52A0\u5B9A\u65F6"))), _react.default.createElement(_MessageDialog.default, {
          visible: this.state.isShowDeleteDialog,
          message: '确认删除此定时？',
          buttons: [{
            text: '取消',
            style: {
              color: '#666666'
            },
            callback: function callback(_) {
              _this7.setState({
                isShowDeleteDialog: false,
                deleteItemId: null
              });
            }
          }, {
            text: '确定',
            style: {
              color: '#2C7DFA'
            },
            callback: function callback(_) {
              _this7.setState({
                isShowDeleteDialog: false
              });

              _this7.deleteHandler();
            }
          }],
          onDismiss: function onDismiss(_) {
            _this7.setState({
              isShowDeleteDialog: false
            });
          }
        }), _react.default.createElement(_LoadingDialog.default, {
          visible: this.state.isShowLoading,
          message: this.state.loadingText
        }));
      }
    }]);
    return HealthMode;
  }(_react.default.Component);

  exports.default = HealthMode;

  HealthMode.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: '重启计划',
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };
},10172,[14305,14320,14323,14371,14377,14386,10284,10347,10743,10740,10332,10297,10010,10033,10013,10040,10043,10046]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _ChoiceDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _MessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _RestartPlan_HealthMode = _$$_REQUIRE(_dependencyMap[13]);

  var _ui = _$$_REQUIRE(_dependencyMap[14]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[15]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var selectedRepeatTextArray = ["执行一次", "每天", "周一至周五"];
  var selectedRepeatDayTextArray = ["星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"];

  var TimeSetting = function (_React$Component) {
    (0, _inherits2.default)(TimeSetting, _React$Component);

    function TimeSetting(props) {
      var _this;

      (0, _classCallCheck2.default)(this, TimeSetting);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TimeSetting).call(this, props));

      _this.customHandler = function (result) {
        var info = _this.state.info;

        if (result.length === 0) {
          _this.setState({
            isShowEmptyTip: true
          });
        } else {
          info.repeatArray = (0, _RestartPlan_HealthMode.alignRepeatDayToString)(result);
          var resultStr = info.repeatArray.join(',');

          if (resultStr === '1,2,3,4,5,6,0') {
            info.repeatType = 1;
          } else if (resultStr === '1,2,3,4,5') {
            info.repeatType = 2;
          } else {
            info.repeatType = 3;
          }

          _this.setState({
            isShowCustomDialog: false,
            isShowRepeatType: false,
            info: info
          });
        }
      };

      _this.state = {
        isShowRepeatType: false,
        isStartPicker: false,
        isShowCustomDialog: false,
        isShowEmptyTip: false,
        info: {
          selectedWifiCloseArray: ["00", "00"],
          selectedWifiCloseRawString: "00:00",
          repeatArray: [],
          repeatType: 0
        },
        startTimeHour: {
          newValue: 0
        },
        startTimeMin: {
          newValue: 0
        }
      };
      return _this;
    }

    (0, _createClass2.default)(TimeSetting, [{
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }, {
      key: "_repeatSetting",
      value: function _repeatSetting() {
        this.setState({
          isShowRepeatType: true
        });
      }
    }, {
      key: "_closeWifiTime",
      value: function _closeWifiTime() {
        this.setState({
          isStartPicker: true
        });
      }
    }, {
      key: "_pressComplete",
      value: function _pressComplete() {
        var param = this.state.info;
        this.props.navigation.state.params.callback(param);
        this.props.navigation.navigate('RestartPlan', {
          'param': param
        });
      }
    }, {
      key: "onDismiss",
      value: function onDismiss(param) {
        this.setState({
          isShowRepeatType: false,
          isShowCustomDialog: false,
          isStartPicker: false
        });
      }
    }, {
      key: "onSelect",
      value: function onSelect(res, param) {
        var info = this.state.info;
        var hv = this.state.startTimeHour.newValue;
        var mv = this.state.startTimeMin.newValue;
        var h = hv < 10 ? '0' + hv : hv;
        var m = mv < 10 ? '0' + mv : mv;
        info.selectedWifiCloseRawString = h + ':' + m;
        info.selectedWifiCloseArray = [h, m];
        this.setState({
          info: info
        });
      }
    }, {
      key: "selectedRepeatHandler",
      value: function selectedRepeatHandler(result) {
        var _this$state = this.state,
            info = _this$state.info,
            isShowCustomDialog = _this$state.isShowCustomDialog,
            isShowRepeatType = _this$state.isShowRepeatType;
        var index = result.join('') - 0;
        var repeatArrayString = info.repeatArray.join(',');
        info.repeatType = index;

        if (index === 0) {
          info.repeatArray = [];
        } else if (index === 1) {
          info.repeatArray = [0, 1, 2, 3, 4, 5, 6];
        } else if (index === 2) {
          info.repeatArray = [1, 2, 3, 4, 5];
        } else if (index === 3) {
          info.repeatArray = info.repeatArray.length > 0 ? info.repeatArray : [0, 6];
          isShowCustomDialog = true;

          if (repeatArrayString === '0,1,2,3,4,5,6') {
            info.repeatType = 1;
          } else if (repeatArrayString === '1,2,3,4,5') {
            info.repeatType = 2;
          }
        }

        this.setState({
          info: info,
          isShowCustomDialog: isShowCustomDialog,
          isShowRepeatType: false
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        if (this.props.navigation.state.params.type == 'edit') {
          var info = this.props.navigation.state.params.info;
          this.setState({
            info: info,
            startTimeHour: {
              newValue: info.selectedWifiCloseArray[0] - 0
            },
            startTimeMin: {
              newValue: info.selectedWifiCloseArray[1] - 0
            }
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var repeatSubtitle;
        var info = this.state.info;

        if (selectedRepeatTextArray[info.repeatType]) {
          repeatSubtitle = selectedRepeatTextArray[info.repeatType];
        } else {
          repeatSubtitle = (0, _RestartPlan_HealthMode.alignRepeatDay)(info.repeatArray).map(function (o) {
            return selectedRepeatDayTextArray[o];
          }).join(",");
        }

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_ListItem.default, {
          title: "\u91CD\u590D",
          subtitle: repeatSubtitle,
          containerStyle: {
            width: width
          },
          subtitleStyle: {
            color: '#a4aaae'
          },
          onPress: function onPress(_) {
            return _this2._repeatSetting();
          },
          separator: _react.default.createElement(_Separator.default, {
            style: styles.separator
          })
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.timeText
        }, "\u65F6\u95F4\u8BBE\u7F6E"), _react.default.createElement(_Separator.default, {
          style: styles.separator
        }), _react.default.createElement(_ListItem.default, {
          title: "\u8DEF\u7531\u5668\u91CD\u542F\u65F6\u95F4",
          subtitle: info.selectedWifiCloseRawString,
          subtitleStyle: {
            color: '#a4aaae'
          },
          onPress: function onPress(_) {
            return _this2._closeWifiTime();
          },
          separator: _react.default.createElement(_Separator.default, {
            style: styles.separator
          })
        }), _react.default.createElement(_ChoiceDialog.default, {
          visible: this.state.isShowRepeatType,
          title: '重复时间设置',
          options: [{
            title: '执行一次'
          }, {
            title: '每天'
          }, {
            title: '周一至周五'
          }, {
            title: '自定义'
          }],
          selectedIndexArray: [info.repeatType],
          onDismiss: function onDismiss(_) {
            return _this2.onDismiss('1');
          },
          onSelect: function onSelect(result) {
            return _this2.selectedRepeatHandler(result);
          }
        }), _react.default.createElement(_reactNative.TouchableHighlight, {
          underlayColor: "transparent",
          onPress: function onPress(_) {
            return _this2._pressComplete();
          },
          style: styles.buttonWrapper
        }, _react.default.createElement(_reactNative.View, {
          style: styles.button
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.compleText
        }, "\u786E\u8BA4"))), _react.default.createElement(_ChoiceDialog.default, {
          type: _ChoiceDialog.default.TYPE.MULTIPLE,
          visible: this.state.isShowCustomDialog,
          title: '重复',
          style: styles.choiceDialog,
          options: [{
            title: '星期一'
          }, {
            title: '星期二'
          }, {
            title: '星期三'
          }, {
            title: '星期四'
          }, {
            title: '星期五'
          }, {
            title: '星期六'
          }, {
            title: '星期日'
          }],
          selectedIndexArray: (0, _RestartPlan_HealthMode.alignRepeatDay)(info.repeatArray),
          color: "#f0ac3d",
          buttons: [{
            text: '保存',
            style: {
              color: 'lightblue'
            },
            callback: function callback(result) {
              return _this2.customHandler(result);
            }
          }],
          onDismiss: function onDismiss(_) {
            return _this2.onDismiss();
          }
        }), _react.default.createElement(_MessageDialog.default, {
          visible: this.state.isShowEmptyTip,
          message: "\u8BF7\u81F3\u5C11\u9009\u62E9\u4E00\u9879",
          buttons: [{
            text: '确认',
            style: {
              color: '#2C7DFA'
            },
            callback: function callback(_) {
              return _this2.setState({
                isShowEmptyTip: false
              });
            }
          }],
          onDismiss: function onDismiss(_) {
            return _this2.onDismiss('4');
          }
        }), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.isStartPicker,
          showTitle: true,
          title: "\u9009\u62E9\u65F6\u95F4",
          canDismiss: true,
          buttons: [{
            text: '取消',
            style: styles.detailBtn,
            callback: function callback(_) {
              return _this2.setState({
                isStartPicker: false
              });
            }
          }, {
            text: '确定',
            style: styles.detailBtn,
            callback: function callback() {
              _this2.setState({
                isStartPicker: false
              });

              _this2.onSelect();
            }
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.datePicker
        }, _react.default.createElement(_ui.NumberSpinner, {
          style: styles.timerPickerItem,
          maxValue: 23,
          minValue: 0,
          interval: 1,
          defaultValue: this.state.startTimeHour['newValue'],
          valueFormat: "%1.0f",
          unit: "时",
          onNumberChanged: function onNumberChanged(data) {
            _this2.setState({
              startTimeHour: data
            });
          }
        }), _react.default.createElement(_ui.NumberSpinner, {
          style: styles.timerPickerItem,
          maxValue: 59,
          minValue: 0,
          interval: 1,
          defaultValue: this.state.startTimeMin['newValue'],
          valueFormat: "%1.0f",
          unit: "分",
          onNumberChanged: function onNumberChanged(data) {
            _this2.setState({
              startTimeMin: data
            });
          }
        }))));
      }
    }]);
    return TimeSetting;
  }(_react.default.Component);

  exports.default = TimeSetting;

  TimeSetting.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: '时间设置',
        onPressLeft: function onPressLeft(_) {
          return navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#ffffff'
    },
    buttonWrapper: {
      position: "absolute",
      width: width,
      bottom: 20,
      alignItems: "center",
      justifyContent: "center"
    },
    button: {
      alignItems: "center",
      justifyContent: "center",
      backgroundColor: '#4778FF',
      height: 44,
      width: width * 0.9,
      borderRadius: 22
    },
    compleText: {
      color: '#fff'
    },
    timeText: {
      padding: 5,
      fontSize: 12,
      marginLeft: 20,
      color: '#a4aaae'
    },
    separator: {
      height: 1 / _reactNative.PixelRatio.get(),
      marginLeft: 20,
      marginRight: 20
    },
    datePicker: {
      flexDirection: 'row'
    },
    timerPickerItem: {
      flex: 1,
      height: 200
    }
  });
},10175,[14305,14320,14323,14371,14377,14386,10297,10284,10329,10734,10332,10033,10743,10043,10230,10755]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _device = _$$_REQUIRE(_dependencyMap[12]);

  var _common_password_toggle_invisible = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _common_password_toggle_visible = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _miot = _$$_REQUIRE(_dependencyMap[16]);

  var _WifiSettingHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[18]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var TITLE = '重置管理密码';
  var PLACEHOLDER = ['不得少于8位', '再次填写密码'];
  var LABEL = ['新密码', '确认新密码'];
  var BTN_TEXT = '确定';
  var TOAST_TEXT = ['长度不能少于8位', '两次输入的密码不一致', '密码修改成功'];

  var ToolBox = function (_React$Component) {
    (0, _inherits2.default)(ToolBox, _React$Component);

    function ToolBox(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ToolBox);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToolBox).call(this, props));

      _this.changeSecureHandler = function (id) {
        var status = _this.state['secure' + id];

        _this.setState((0, _defineProperty2.default)({}, 'secure' + id, !status));
      };

      _this.submitHandler = function () {
        var _this$state = _this.state,
            pwd1 = _this$state.pwd1,
            pwd2 = _this$state.pwd2;

        var errorMsg1 = _WifiSettingHelper.default.getWifiPwdInputErrorMessage(pwd1);

        var errorMsg2 = _WifiSettingHelper.default.getWifiPwdInputErrorMessage(pwd2);

        if (errorMsg1 !== '') {
          _CommonUtils.default.ShowToastLongCenter(errorMsg1);

          return false;
        } else if (errorMsg2 !== '') {
          _CommonUtils.default.ShowToastLongCenter('确认新' + errorMsg2);

          return false;
        } else if (pwd1 !== pwd2) {
          _CommonUtils.default.ShowToastLongCenter(TOAST_TEXT[1]);

          return false;
        }

        _this.setState({
          'btnDisable': true,
          isShowLoading: true
        }, function () {
          _this.changePassword();
        });
      };

      _this.changePassword = function () {
        var newPwd = {
          newPwd: _this.state.pwd1
        };
        var params = {
          params: (0, _objectSpread2.default)({}, _this.paramsDic.params, newPwd)
        };
        var paramsDic = (0, _objectSpread2.default)({}, _this.paramsDic, params);

        _miot.Service.callSmartHomeAPI(_this.api, paramsDic).then(function (res) {
          _this.setState({
            'btnDisable': false
          });

          if (res.code === 0) {
            _this.setState({
              'isShowLoading': false
            });

            _reactNativeRootToast.default.show(TOAST_TEXT[2], {
              position: _reactNativeRootToast.default.positions.CENTER
            });
          }
        }).catch(function (e) {
          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeFail);
        });
      };

      _this.state = {
        secure1: false,
        secure2: false,
        pwd1: '',
        pwd2: '',
        btnDisable: false,
        loadingText: '正在保存设置',
        isShowLoading: false
      };
      _this.api = _API.default.changePassword.remote;
      _this.deviceId = _device.Device.deviceID.replace('miwifi.', '');
      _this.paramsDic = {
        method: 'GET',
        params: {
          deviceId: _this.deviceId
        }
      };
      return _this;
    }

    (0, _createClass2.default)(ToolBox, [{
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.content
        }, _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, LABEL[0]), _react.default.createElement(_reactNative.TextInput, {
          style: styles.input,
          defaultValue: this.state.pwd1,
          placeholder: LABEL[0] + PLACEHOLDER[0],
          placeholderTextColor: '#989898',
          secureTextEntry: !this.state.secure1,
          underlineColorAndroid: 'transparent',
          onChangeText: function onChangeText(text) {
            return _this2.setState({
              pwd1: text
            });
          }
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          activeOpacity: 1,
          onPress: function onPress() {
            _this2.changeSecureHandler(1);
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.showPwdBtn,
          source: this.state.secure1 ? _common_password_toggle_visible.default : _common_password_toggle_invisible.default
        }))), _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, LABEL[1]), _react.default.createElement(_reactNative.TextInput, {
          style: styles.input,
          secureTextEntry: !this.state.secure2,
          defaultValue: this.state.pwd2,
          placeholder: PLACEHOLDER[1],
          placeholderTextColor: '#989898',
          underlineColorAndroid: 'transparent',
          onChangeText: function onChangeText(text) {
            return _this2.setState({
              pwd2: text
            });
          },
          onPress: function onPress() {
            _this2.changeSecureHandler(2);
          }
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          activeOpacity: 1,
          onPress: function onPress() {
            _this2.changeSecureHandler(2);
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.showPwdBtn,
          source: this.state.secure2 ? _common_password_toggle_visible.default : _common_password_toggle_invisible.default
        })))), _react.default.createElement(_LoadingDialog.default, {
          visible: this.state.isShowLoading,
          message: this.state.loadingText
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.submit,
          onPress: this.submitHandler,
          disabled: this.state.btnDisable
        }, BTN_TEXT));
      }
    }]);
    return ToolBox;
  }(_react.default.Component);

  exports.default = ToolBox;

  ToolBox.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: TITLE,
        onPressLeft: function onPressLeft() {
          return navigation.goBack();
        }
      })
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      flex: 1
    },
    content: {
      borderWidth: 1,
      borderColor: '#f1f1f1',
      margin: 10,
      padding: 10,
      borderRadius: 5,
      height: 100,
      justifyContent: 'space-between'
    },
    item: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-between'
    },
    text: {
      fontSize: 15,
      color: '#000'
    },
    input: {
      color: '#989898',
      flex: 1,
      marginLeft: 10,
      marginRight: 10,
      paddingVertical: 0
    },
    showPwdBtn: {
      width: 20,
      height: 20,
      resizeMode: 'contain'
    },
    submit: {
      borderWidth: 1,
      borderColor: '#f1f1f1',
      textAlign: 'center',
      borderRadius: 20,
      marginLeft: 10,
      marginRight: 10,
      marginTop: 20,
      padding: 10
    }
  });
},10178,[14305,14314,14317,14320,14323,14371,14377,14386,10033,10297,10284,10064,10935,10061,10058,10013,10074,10070,10055,10040,10740]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _miot = _$$_REQUIRE(_dependencyMap[8]);

  var _Host = _$$_REQUIRE(_dependencyMap[9]);

  var _device = _$$_REQUIRE(_dependencyMap[10]);

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _RouterStatus = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _DeviceManage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Led = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _WiFiPassword = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _RouterSet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _RouterApp = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[19]);

  var _API = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[20]));

  var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var _reactNativeIphoneXHelper = _$$_REQUIRE(_dependencyMap[23]);

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var _RouterOptimization = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var HomePage = function (_React$Component) {
    (0, _inherits2.default)(HomePage, _React$Component);

    function HomePage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, HomePage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HomePage).call(this, props));

      _this.refreshCurrentRouterInfoHandler = function () {
        _this.refreshRouterInfoTimer = setInterval(function () {
          _this.refreshRouterInfo();
        }, 3000);
      };

      _this.getOuterNetStatus = function () {
        _miot.Service.callSmartHomeAPI(_API.default.router.init_info, {
          method: 'POST',
          params: {
            "deviceId": _this.deviceId
          }
        }).then(function (res) {
          if (res.code === 0) {
            clearTimeout(_this.pollingTimer);

            if (_this.state.isWireless) {
              _this.setState({
                status: "wireless"
              }, _this.getDeviceList);
            } else if (_this.state.isWired) {
              _this.setState({
                status: "wired"
              }, _this.getDeviceList);
            } else {
              _this.setState({
                status: "ok"
              }, _this.getDeviceList);
            }

            _this.transTitleBarOpacity();
          } else if (res.code === 3012) {
            _this.getOuterNetStatus();
          }
        }).catch(function (error) {
          _this.isIntranetStatus();
        });
      };

      _this.isIntranetStatus = function _callee() {
        var commonLocalPath, api;
        return _regenerator.default.async(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return _regenerator.default.awrap((0, _API.getApiCommonLocalPath)());

              case 2:
                commonLocalPath = _context.sent;
                api = commonLocalPath + '/api/xqsystem/init_info';

                _miot.Service.callSpecificAPI(api, 'get', {
                  "deviceId": _this.deviceId
                }).then(function (res) {
                  if (JSON.parse(res).routerId === _this.deviceId) {
                    _this.setState({
                      status: 'error'
                    }, _this.reTryCheckNetStatus);
                  } else {
                    _this.setState({
                      status: 'offline'
                    }, _this.reTryCheckNetStatus);
                  }

                  _this.transTitleBarOpacity();
                }).catch(function (error) {
                  _this.phoneNetStatus();
                });

              case 5:
              case "end":
                return _context.stop();
            }
          }
        });
      };

      _this.phoneNetStatus = function () {
        fetch('http://www1.miwifi.com/connect/detect.json?t=' + new Date().getTime()).then(function _callee2(response) {
          return _regenerator.default.async(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  _context2.next = 2;
                  return _regenerator.default.awrap(response.json());

                case 2:
                  response = _context2.sent;

                  if (response.hasOwnProperty('msg') && response.msg === 'success') {
                    _this.setState({
                      status: 'offline'
                    }, _this.reTryCheckNetStatus);
                  } else {
                    _this.setState({
                      status: 'neterror'
                    });
                  }

                  _this.transTitleBarOpacity();

                case 5:
                case "end":
                  return _context2.stop();
              }
            }
          });
        }).catch(function (data) {
          _this.setState({
            status: 'neterror'
          });

          _this.transTitleBarOpacity();
        });
      };

      _this.reTryCheckNetStatus = function () {
        _this.pollingTimer = setTimeout(_this.getOuterNetStatus, 5000);
      };

      _this.getDeviceList = function () {
        var paramsDic = {
          method: 'GET',
          params: {
            routerID: _this.deviceId,
            locale: "zh_CN",
            v: "2",
            refresh: "1"
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.devices.device_list, paramsDic).then(function (res) {
          _RouterInfoHelper.default.sharedInstance().setClientMessageList(res.devices);

          _this.setState({
            'device_list': res
          });

          if (res.code === 0) {
            _miot.Host.storage.set('cachedDevices', res);
          }
        }).catch(function (res) {}).finally(function () {
          _this.timer = setTimeout(_this.getDeviceList, 10000);
        });
      };

      _this.scrollHandler = function (e) {
        _this.scrollTop = e.nativeEvent.contentOffset.y;

        _this.transTitleBarOpacity();
      };

      _this.transTitleBarOpacity = function () {
        var opacity = (_this.scrollTop - 130) / 130 * 3;
        var rgb = _this.topStatusMap[_this.state.status]['rgb'];

        if (_this.scrollTop > 130) {
          _this.setState({
            opacityTitle: {
              opacity: opacity
            },
            'opacityStyle': {
              backgroundColor: 'rgba(' + rgb + ',' + opacity + ')'
            }
          });
        } else {
          _this.setState({
            opacityTitle: {
              opacity: opacity
            },
            'opacityStyle': {
              backgroundColor: 'rgba(' + rgb + ',0)'
            }
          });
        }
      };

      _this.state = {
        connectionInfoType: 'unknown',
        device_list: {},
        status: 'check',
        curRouterName: _CommonUtils.default.isTextEmpty(_device.Device.name) ? '' : _device.Device.name,
        opacityStyle: {
          backgroundColor: 'transparent'
        },
        opacityTitle: 0,
        isWireless: false,
        isWired: false,
        ip: ''
      };
      _this.topStatusMap = {
        'check': {
          text: '正在检测网络，请稍候...',
          bg: _$$_REQUIRE(_dependencyMap[26]),
          rgb: '7,92,77'
        },
        'neterror': {
          text: '手机网络不可用',
          bg: _$$_REQUIRE(_dependencyMap[27]),
          rgb: '118,2,13'
        },
        'ok': {
          text: '网络连接正常',
          bg: _$$_REQUIRE(_dependencyMap[26]),
          rgb: '7,92,77'
        },
        'error': {
          text: '网络连接异常',
          bg: _$$_REQUIRE(_dependencyMap[27]),
          rgb: '118,2,13'
        },
        'offline': {
          text: '路由器已离线',
          bg: _$$_REQUIRE(_dependencyMap[28]),
          rgb: '38,41,53'
        },
        'wireless': {
          text: '网络连接正常',
          bg: _$$_REQUIRE(_dependencyMap[29]),
          rgb: '7,149,199'
        },
        'wired': {
          text: '网络连接正常',
          bg: _$$_REQUIRE(_dependencyMap[30]),
          rgb: '11,52,155'
        }
      };
      _this.deviceId = _device.Device.deviceID.replace("miwifi.", "");
      _this.scrollTop = 0;

      var wireless = _RouterInfoHelper.default.sharedInstance().synCheckCurrentWorkModeIsRelayWireless();

      var wired = _RouterInfoHelper.default.sharedInstance().synCheckCurrentWorkModeIsRelayWired();

      Promise.all([wireless, wired]).then(function (result) {
        _this.setState({
          isWireless: result[0].is,
          isWired: result[1].is,
          ip: !_this.state.ip ? result[0].ip || result[1].ip : _this.state.ip
        });
      }).catch(function (error) {});
      return _this;
    }

    (0, _createClass2.default)(HomePage, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.refreshRouterInfoNotification = _reactNative.DeviceEventEmitter.addListener('RefreshRouterInfoNotification', function () {
          _RouterInfoHelper.default.sharedInstance().requestCurrentRouterInfo();

          _this2.refreshCurrentRouterInfoHandler();
        });
        this._deviceNameChangedListener = _device.DeviceEvent.deviceNameChanged.addListener(function (device) {
          _this2.setState({
            curRouterName: _CommonUtils.default.isTextEmpty(device.name) ? '' : device.name
          });
        });

        this._checkPrivicyAgree();

        this.getOuterNetStatus();
        this.subscription = _Host.HostEvent.cellPhoneNetworkStateChanged.addListener(function (networkInfo) {
          clearTimeout(_this2.pollingTimer);
          setTimeout(_this2.getOuterNetStatus, 500);
        });
      }
    }, {
      key: "refreshRouterInfo",
      value: function refreshRouterInfo() {
        if (_RouterInfoHelper.default.sharedInstance().isMeshMode()) {
          clearInterval(this.refreshRouterInfoTimer);

          _reactNative.DeviceEventEmitter.emit('RouterModeChangeToMesh');
        } else {
          _RouterInfoHelper.default.sharedInstance().requestCurrentRouterInfo();
        }
      }
    }, {
      key: "_checkPrivicyAgree",
      value: function _checkPrivicyAgree() {
        var licenseURL = _$$_REQUIRE(_dependencyMap[31]);

        var privacyURL = _$$_REQUIRE(_dependencyMap[32]);

        var options = {};
        options.agreementURL = licenseURL;
        options.privacyURL = privacyURL;
        options.hideAgreement = false;
        options.hideUserExperiencePlan = true;

        _miot.Service.smarthome.batchGetDeviceDatas([{
          did: _device.Device.deviceID,
          props: ["prop.s_auth_config"]
        }]).then(function (res) {
          var alreadyAuthed = false;
          var result = res[_device.Device.deviceID];
          var config;

          if (result && result['prop.s_auth_config']) {
            config = result['prop.s_auth_config'];
          }

          if (config) {
            try {
              var authJson = JSON.parse(config);
              alreadyAuthed = authJson.privacyAuthed && true;
            } catch (err) {}
          }

          if (alreadyAuthed) {
            return new Promise.resolve("已经授权");
          } else {
            return _miot.Host.ui.alertLegalInformationAuthorization(options).then(function (res) {
              if (res) {
                return _miot.Service.smarthome.batchSetDeviceDatas([{
                  did: _device.Device.deviceID,
                  props: {
                    "prop.s_auth_config": JSON.stringify({
                      'privacyAuthed': 'true'
                    })
                  }
                }]);
              } else {
                return new Promise.reject("取消授权");
              }
            });
          }
        }).catch(function (err) {});
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.subscription) this.subscription.remove();
        clearTimeout(this.timer);
        clearTimeout(this.pollingTimer);
        clearInterval(this.refreshRouterInfoTimer);
        this._deviceNameChangedListener && this._deviceNameChangedListener.remove();
        this.refreshRouterInfoNotification && this.refreshRouterInfoNotification.remove();
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.wrapper
        }, _react.default.createElement(_reactNative.ImageBackground, {
          source: this.topStatusMap[this.state.status]['bg'],
          style: styles.bg
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
          style: [{
            backgroundColor: 'transparent'
          }, this.state.opacityStyle],
          onPressLeft: function onPressLeft(_) {
            return _miot.Package.exit();
          },
          onPressRight: function onPressRight() {
            _this3.props.navigation.navigate('RouterPluginCommonSetting');
          }
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.title_bar_text, this.state.opacityTitle]
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.topTitle
        }, this.state.curRouterName), _react.default.createElement(_reactNative.Text, {
          style: styles.topSubTitle
        }, this.topStatusMap[this.state.status]['text']))), _react.default.createElement(_reactNative.ScrollView, {
          scrollEventThrottle: 16,
          onScroll: function onScroll(e) {
            _this3.scrollHandler(e);
          },
          style: styles.sv
        }, _react.default.createElement(_reactNative.View, {
          style: styles.card_container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.top
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.name
        }, this.state.curRouterName, this.state.isWireless ? '(无线中继)' : '', this.state.isWired ? '(有线中继)' : ''), _react.default.createElement(_reactNative.Text, {
          style: styles.status
        }, this.topStatusMap[this.state.status]['text'])), _react.default.createElement(_RouterStatus.default, {
          value: this.state.device_list,
          apInfo: {
            ip: this.state.ip,
            isWireless: this.state.isWireless,
            isWired: this.state.isWired
          },
          navigation: this.props.navigation
        }), _react.default.createElement(_DeviceManage.default, {
          value: this.state.device_list,
          navigation: this.props.navigation
        }), _react.default.createElement(_WiFiPassword.default, null), _react.default.createElement(_RouterSet.default, {
          navigation: this.props.navigation
        }), _react.default.createElement(_RouterOptimization.default, {
          navigation: this.props.navigation
        }), _react.default.createElement(_RouterApp.default, {
          navigation: this.props.navigation
        }), _RouterInfoHelper.default.sharedInstance().isSupportLedSwitch() ? _react.default.createElement(_Led.default, null) : null))));
      }
    }]);
    return HomePage;
  }(_react.default.Component);

  exports.default = HomePage;

  HomePage.navigationOptions = function () {
    return {
      header: null
    };
  };

  var styles = _reactNative.StyleSheet.create({
    wrapper: {},
    title_bar_text: {
      position: 'absolute',
      top: (0, _reactNativeIphoneXHelper.getStatusBarHeight)(true),
      zIndex: 20000,
      justifyContent: 'center',
      alignItems: 'center',
      height: 55,
      width: width - 100,
      opacity: 0,
      left: 50
    },
    topTitle: {
      fontSize: 15,
      color: '#ffffff',
      fontFamily: ''
    },
    topSubTitle: {
      fontSize: 12,
      color: '#ffffff',
      fontFamily: ''
    },
    bg: {
      backgroundColor: '#e8eaed',
      resizeMode: 'cover',
      height: '100%'
    },
    top: {
      paddingTop: 180,
      paddingBottom: 25
    },
    sv: {},
    name: {
      fontSize: 18,
      marginLeft: 32,
      color: '#fff'
    },
    status: {
      fontSize: 30,
      marginLeft: 29,
      color: '#fff'
    },
    card_container: {
      paddingLeft: 12,
      paddingRight: 12,
      paddingBottom: 12
    }
  });
},10181,[14308,14305,14674,14320,14323,14371,14377,14386,10074,10035,10935,10284,10297,10184,10238,10247,10253,10256,10280,10033,10064,10013,10040,13696,10076,10307,10313,10316,10319,10322,10325,10328,10331]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _device = _$$_REQUIRE(_dependencyMap[7]);

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _RouterInfoHelper = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _Devices = _$$_REQUIRE(_dependencyMap[12]);

  var _MeshManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _ClientHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var HomePage = function (_React$Component) {
    (0, _inherits2.default)(HomePage, _React$Component);

    function HomePage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, HomePage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HomePage).call(this, props));
      _this.state = {
        wanRX: {
          transformedSpeed: "0",
          transformedUnit: 'KB/S'
        },
        wanTX: {
          transformedSpeed: "0",
          transformedUnit: 'KB/S'
        },
        status: ''
      };
      _this.isWIFI6 = _CommonUtils.default.isWIFI6(_device.Device.model);

      _RouterInfoHelper.default.sharedInstance().synCheckCurrentCapality(_RouterInfoHelper.RouterCapality.isSupportWifi6).then(function (res) {
        _this.setState({
          isSupportWifi6: true
        });
      }).catch(function () {
        _this.setState({
          isSupportWifi6: false
        });
      });

      _RouterInfoHelper.default.sharedInstance().synCheckCurrentCapality(_RouterInfoHelper.RouterCapality.isSupportMiMesh).then(function (res) {
        _this.setState({
          isSupportMesh: true
        });
      }).catch(function () {
        _this.setState({
          isSupportMesh: false
        });

        _this.checkMiMesh_Rom();
      });

      return _this;
    }

    (0, _createClass2.default)(HomePage, [{
      key: "checkMiMesh_Rom",
      value: function checkMiMesh_Rom() {
        var _this2 = this;

        _RouterInfoHelper.default.sharedInstance().synCheckCurrentCapality(_RouterInfoHelper.RouterCapality.isSupportMiMesh_Rom).then(function (res) {
          _this2.setState({
            isSupportMesh: true
          });
        }).catch(function () {
          _this2.setState({
            isSupportMesh: false
          });
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        this.setState({
          wanRX: _CommonUtils.default.transformSpeedData(nextProps.value.wanRX),
          wanTX: _CommonUtils.default.transformSpeedData(nextProps.value.wanTX),
          root_ssid: nextProps.value.root_ssid,
          root_wifi_quality: nextProps.value.root_wifi_quality,
          ip: nextProps.apInfo.ip,
          isWireless: nextProps.apInfo.isWireless,
          isWired: nextProps.apInfo.isWired
        });
      }
    }, {
      key: "render",
      value: function render() {
        var signalText = _ClientHelper.default.signalText(this.state.root_wifi_quality || 1);

        return _react.default.createElement(_reactNative.View, {
          style: styles.card
        }, _react.default.createElement(_reactNative.View, {
          style: styles.status_content
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: {
            uri: _device.Device.iconURL || ' '
          }
        }), _react.default.createElement(_reactNative.View, {
          style: styles.infos
        }, this.state.isWireless || this.state.isWired ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, {
          style: styles.ip
        }, "IP:", this.state.ip), this.state.isWireless ? _react.default.createElement(_reactNative.View, {
          style: styles.ap_info
        }, _react.default.createElement(_reactNative.Text, {
          style: styles['signal_' + (this.state.root_wifi_quality || 1)]
        }, signalText), _react.default.createElement(_reactNative.Text, {
          style: {
            fontFamily: ' '
          },
          numberOfLines: 1
        }, "\u4FE1\u53F7\u6E90:", this.state.root_ssid)) : null) : _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: styles.speed_info
        }, _react.default.createElement(_reactNative.View, {
          style: styles.speed
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.size
        }, this.state.wanTX.transformedSpeed), _react.default.createElement(_reactNative.Text, {
          style: styles.unit
        }, this.state.wanTX.transformedUnit), _react.default.createElement(_reactNative.View, {
          style: styles.triangle_up
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.speed, styles.speed_last]
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.size
        }, this.state.wanRX.transformedSpeed), _react.default.createElement(_reactNative.Text, {
          style: styles.unit
        }, this.state.wanRX.transformedUnit), _react.default.createElement(_reactNative.View, {
          style: styles.triangle_down
        }))), (this.state.isSupportWifi6 || this.state.isSupportMesh) && _react.default.createElement(_reactNative.View, {
          style: styles.wifi6_content
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.wifi6_content_label
        }, "\u8BE5\u8DEF\u7531\u5668\u652F\u6301"), this.state.isSupportWifi6 && _react.default.createElement(_reactNative.Image, {
          style: styles.icon_wifi6,
          source: _$$_REQUIRE(_dependencyMap[15])
        }), this.state.isSupportMesh && _react.default.createElement(_reactNative.Image, {
          style: styles.icon_wifi6,
          source: _$$_REQUIRE(_dependencyMap[16])
        }))))), this.state.isSupportMesh ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: styles.separator
        }), _react.default.createElement(_MeshManager.default, {
          navigation: this.props.navigation
        })) : null);
      }
    }]);
    return HomePage;
  }(_react.default.Component);

  exports.default = HomePage;

  HomePage.navigationOptions = function () {
    return {
      header: null
    };
  };

  var styles = _reactNative.StyleSheet.create({
    card: {
      backgroundColor: '#fff',
      borderRadius: 10,
      paddingTop: 10,
      paddingBottom: 10,
      marginBottom: 12,
      justifyContent: 'center'
    },
    status_content: {
      flexDirection: 'row',
      paddingLeft: 20,
      alignItems: 'center',
      paddingBottom: 10
    },
    icon: {
      resizeMode: 'contain',
      width: _Devices.ScreenW > 320 ? 85 : 55,
      height: 85
    },
    infos: {
      paddingLeft: 20
    },
    speed_info: {
      flexDirection: 'row',
      justifyContent: 'space-around'
    },
    speed: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    speed_last: {
      marginLeft: 20
    },
    size: {
      fontSize: 22,
      fontWeight: 'bold',
      color: '#031225',
      fontFamily: ''
    },
    unit: {
      fontSize: 18,
      color: '#031225',
      fontFamily: ''
    },
    wifi6_content: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    wifi6_content_label: {
      fontSize: 12,
      color: '#999',
      marginRight: 5
    },
    wifi6: {
      borderWidth: 1,
      borderColor: '#67BDFF',
      borderStyle: "solid",
      borderRadius: 4,
      paddingLeft: 5,
      paddingRight: 5,
      marginLeft: 5,
      alignItems: 'center',
      justifyContent: 'center'
    },
    wifi6_text: {
      color: '#48ABF1',
      fontFamily: '',
      fontSize: 10,
      fontWeight: 'bold'
    },
    triangle_up: {
      width: 0,
      height: 0,
      borderLeftWidth: 5,
      borderLeftColor: 'transparent',
      borderRightWidth: 5,
      borderRightColor: 'transparent',
      borderBottomWidth: 6,
      borderBottomColor: '#000',
      overflow: "hidden",
      alignSelf: 'flex-start'
    },
    triangle_down: {
      width: 0,
      height: 0,
      borderLeftWidth: 5,
      borderLeftColor: 'transparent',
      borderRightWidth: 5,
      borderRightColor: 'transparent',
      borderTopWidth: 6,
      borderTopColor: '#000',
      overflow: "hidden",
      alignSelf: 'flex-start'
    },
    separator: {
      marginLeft: 15,
      height: 0.5,
      backgroundColor: '#eee',
      width: _Devices.ScreenW - 24 - 30
    },
    meshContainer: {
      paddingTop: 15,
      paddingBottom: 5,
      flexDirection: 'row',
      paddingLeft: 20,
      alignItems: 'center'
    },
    meshIcon: {
      resizeMode: 'contain',
      width: 45,
      height: 45
    },
    meshContent: {
      paddingLeft: 15,
      width: _Devices.ScreenW - 24 - 20 - 45 - 15 - 14,
      flexDirection: 'column'
    },
    meshTitle: {
      fontSize: 16,
      fontWeight: 'bold',
      color: '#031225'
    },
    meshSubTitle: {
      fontSize: 13,
      color: '#666'
    },
    meshIndicator: {
      paddingLeft: 10,
      resizeMode: 'contain',
      width: 7,
      height: 14
    },
    ip: {
      fontWeight: 'bold',
      fontSize: 16,
      color: '#000'
    },
    ap_info: {
      flexDirection: 'row',
      width: _Devices.ScreenW - 200
    },
    signal_1: {
      marginRight: 10,
      color: '#0FC39C'
    },
    signal_2: {
      marginRight: 10,
      color: '#B56728'
    },
    signal_3: {
      marginRight: 10,
      color: '#FF746A'
    },
    icon_wifi6: {
      width: 50,
      height: 18,
      resizeMode: 'contain'
    }
  });
},10184,[14308,14305,14320,14323,14371,14377,14386,10935,10297,10033,10040,10076,10067,10187,10223,10232,10235]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _Devices = _$$_REQUIRE(_dependencyMap[9]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _device = _$$_REQUIRE(_dependencyMap[11]);

  var _miot = _$$_REQUIRE(_dependencyMap[12]);

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[13]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _MeshHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _RouterInfoHelper = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[16]));

  var Normal = 0;
  var RelayWireless = 1;
  var RelayWired = 2;

  var MeshManager = function (_React$Component) {
    (0, _inherits2.default)(MeshManager, _React$Component);

    function MeshManager(props) {
      var _this;

      (0, _classCallCheck2.default)(this, MeshManager);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MeshManager).call(this, props));
      _this.state = {
        num: 0,
        isSupportMesh_Rom: false
      };
      _this.WorkMode = _RouterInfoHelper.default.sharedInstance().getCurrentRouterWorkMode();
      return _this;
    }

    (0, _createClass2.default)(MeshManager, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        this._getMeshTree();
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        _RouterInfoHelper.default.sharedInstance().synCheckCurrentCapality(_RouterInfoHelper.RouterCapality.isSupportMiMesh_Rom).then(function (res) {
          _this2.setState({
            isSupportMesh_Rom: true
          });
        }).catch(function () {
          _this2.setState({
            isSupportMesh_Rom: false
          });
        });

        _reactNative.DeviceEventEmitter.addListener("update", function (params) {
          _this2._getMeshTree();
        });
      }
    }, {
      key: "_retryGetMeshTree",
      value: function _retryGetMeshTree() {
        var _this3 = this;

        var timeoutID = setTimeout(function () {
          _this3._getMeshTree();

          clearTimeout(timeoutID);
        }, 5000);
      }
    }, {
      key: "_getMeshTree",
      value: function _getMeshTree() {
        var _this4 = this;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceID: deviceId,
            deviceId: deviceId,
            refresh: 1
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.meshTopology, paramsDic).then(function (res) {
          if (res.code == 0) {
            _this4.setState({
              num: _CommonUtils.default.isNull(res.childMeshInfos) ? 0 : res.childMeshInfos.length
            });
          } else {
            _this4.setState({
              num: 0
            });

            _this4._retryGetMeshTree();
          }
        }).catch(function (e) {
          _this4._retryGetMeshTree();
        });
      }
    }, {
      key: "isNotSupportMeshForWireMode",
      value: function isNotSupportMeshForWireMode() {
        if (this.state.isSupportMesh_Rom) {
          if (this.WorkMode == RelayWireless) {
            return true;
          }

          if (this.WorkMode == RelayWired) {
            return false;
          }
        } else {
          if (this.WorkMode == RelayWireless || this.WorkMode == RelayWired) {
            return true;
          }
        }

        return false;
      }
    }, {
      key: "render",
      value: function render() {
        var _this5 = this;

        return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: styles.separator
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.meshContainer,
          onPress: function onPress(_) {
            if (_this5.isNotSupportMeshForWireMode()) {
              _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.tool_not_support_relay);
            } else {
              _this5.props.navigation.navigate('MeshTree', {
                title: 'Mesh设备管理'
              });
            }
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.meshIcon,
          source: _$$_REQUIRE(_dependencyMap[17])
        }), _react.default.createElement(_reactNative.View, {
          style: styles.meshContent
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.meshTitle
        }, 'Mesh网络设备'), !this.WorkMode ? _react.default.createElement(_reactNative.Text, {
          style: styles.meshSubTitle
        }, "\u5DF2\u8FDE ", _react.default.createElement(_reactNative.Text, null, this.state.num), "\u53F0Mesh\u8BBE\u5907") : null), _react.default.createElement(_reactNative.Image, {
          style: styles.meshIndicator,
          source: _$$_REQUIRE(_dependencyMap[18])
        })));
      }
    }]);
    return MeshManager;
  }(_react.default.Component);

  exports.default = MeshManager;

  MeshManager.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: null
    };
  };

  var styles = _reactNative.StyleSheet.create({
    meshContainer: {
      paddingTop: 15,
      paddingBottom: 5,
      flexDirection: 'row',
      paddingLeft: 20,
      alignItems: 'center'
    },
    meshIcon: {
      resizeMode: 'contain',
      width: 45,
      height: 45
    },
    meshContent: {
      paddingLeft: 15,
      width: _Devices.ScreenW - 24 - 20 - 45 - 15 - 14,
      flexDirection: 'column'
    },
    meshTitle: {
      fontSize: 16,
      fontWeight: 'bold',
      color: '#031225'
    },
    meshSubTitle: {
      fontSize: 13,
      color: '#666'
    },
    meshIndicator: {
      paddingLeft: 10,
      resizeMode: 'contain',
      width: 7,
      height: 14
    }
  });
},10187,[14308,14305,14320,14323,14371,14377,14386,10297,10033,10067,10064,10935,10074,10055,10040,10190,10076,10217,10220]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[4]);

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _device = _$$_REQUIRE(_dependencyMap[6]);

  var _it = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var MeshHelper = function () {
    function MeshHelper() {
      (0, _classCallCheck2.default)(this, MeshHelper);
    }

    (0, _createClass2.default)(MeshHelper, null, [{
      key: "getAllMeshInfos",
      value: function getAllMeshInfos(childMeshInfos) {
        var array = [];

        if (_CommonUtils.default.isNull(childMeshInfos) || childMeshInfos.length == 0) {
          array = this.getCapInfo();
        } else {
          array = this.getCapInfo().concat(childMeshInfos);
        }

        return array;
      }
    }, {
      key: "getCapInfo",
      value: function getCapInfo() {
        var CapArray = [];

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';

        var CapInfo = _RouterInfoHelper.default.sharedInstance().routerInfo;

        var gateway = '(网关)';
        var UK = '未知';
        var devid = _CommonUtils.default.isNull(CapInfo.id) ? deviceId : CapInfo.id;
        var wanmac = CapInfo.bssid_24G;
        var routerName = CapInfo.name;
        var backhauls = '8';
        var ip = CapInfo.ip;
        var upnode = '';
        var backhaulsQa = '1';
        var lan_mac = '';
        var locale = (_CommonUtils.default.isTextEmpty(CapInfo.router_locale) ? UK : CapInfo.router_locale) + gateway;
        var hardware = CapInfo.hardware;
        var status = CapInfo.status;
        var isCap = true;
        CapArray.push({
          devid: devid,
          wanmac: wanmac,
          routerName: routerName,
          devid: devid,
          backhauls: backhauls,
          ip: ip,
          upnode: upnode,
          backhaulsQa: backhaulsQa,
          lan_mac: lan_mac,
          locale: locale,
          hardware: hardware,
          status: status,
          isCap: isCap
        });
        return CapArray;
      }
    }, {
      key: "getLocationsArray",
      value: function getLocationsArray() {
        return ['客厅', '主卧', '次卧', '餐厅', '卫生间', '厨房', '办公室', '书房', '地下室', '阁楼', '阳台'];
      }
    }, {
      key: "getRealismMeshResource",
      value: function getRealismMeshResource(model) {
        var mode = String(model).toUpperCase();
        var R3600 = "R3600";
        var RA69 = "RA69";
        var RM1800 = "RM1800";
        var RM1800C = "RA67";
        var RA70 = "RA70";
        var RA72 = "RA72";
        var RA81 = "RA81";

        if (mode == R3600) {
          return _$$_REQUIRE(_dependencyMap[8]);
        } else if (mode == RM1800) {
          return _$$_REQUIRE(_dependencyMap[9]);
        } else if (mode == RM1800C) {
          return _$$_REQUIRE(_dependencyMap[10]);
        } else if (mode == RA69) {
          return _$$_REQUIRE(_dependencyMap[11]);
        } else if (mode == RA70) {
          return _$$_REQUIRE(_dependencyMap[12]);
        } else if (mode == RA72) {
          return _$$_REQUIRE(_dependencyMap[13]);
        } else if (mode === RA81) {
          return _$$_REQUIRE(_dependencyMap[14]);
        } else {
          return _$$_REQUIRE(_dependencyMap[15]);
        }
      }
    }, {
      key: "getMeshIsOnLine",
      value: function getMeshIsOnLine(item) {
        return item.status == 'online';
      }
    }, {
      key: "isBackHaulZero",
      value: function isBackHaulZero(item) {
        return 0 == item.backhauls;
      }
    }, {
      key: "isBackHaulQaGood",
      value: function isBackHaulQaGood(item) {
        var status;

        if (_CommonUtils.default.isNull(item.backhaulsQa)) {
          status = false;
        } else {
          status = item.backhaulsQa > 0;
        }

        return status;
      }
    }, {
      key: "getSignaleImageResource",
      value: function getSignaleImageResource(item) {
        if (this.isBackHaulQaGood(item)) {
          return _$$_REQUIRE(_dependencyMap[16]);
        } else {
          return _$$_REQUIRE(_dependencyMap[17]);
        }
      }
    }, {
      key: "shouldShowSignalIcon",
      value: function shouldShowSignalIcon(item) {
        return this.getMeshIsOnLine(item) && !this.isBackHaulZero(item) && !this.isCapMesh(item);
      }
    }, {
      key: "isCapMesh",
      value: function isCapMesh(item) {
        return item.isCap == true;
      }
    }, {
      key: "getUpnode",
      value: function getUpnode(item, mDateSet) {
        var length = mDateSet.length;
        var upnode = _CommonUtils.default.isTextEmpty(mDateSet[0].locale) ? "未知" : mDateSet[0].locale;

        if (this.isCapMesh(item)) {
          return '互联网';
        }

        if (_CommonUtils.default.isTextEmpty(item.upnode) || _CommonUtils.default.isTextEmpty(item.lan_mac)) {
          return upnode;
        }

        if (length <= 1) {
          return upnode;
        }

        for (var i = 0; i < length; i++) {
          if (item.upnode == mDateSet[i].lan_mac) {
            upnode = mDateSet[i].locale;
          }
        }

        return upnode;
      }
    }, {
      key: "getUpnodeString",
      value: function getUpnodeString(item, data) {
        var upnodeString = '离线';
        var temp = '上级节点:';

        if (this.getMeshIsOnLine(item)) {
          upnodeString = temp.concat(this.getUpnode(item, data));
        }

        return upnodeString;
      }
    }, {
      key: "CheckWhichConnet",
      value: function CheckWhichConnet(item) {
        if (this.isBackHaulZero(item)) {
          return '正在更新状态';
        }

        if (!this.getMeshIsOnLine(item)) {
          return '无法接入';
        }

        var backHauls = item.backhauls;
        var connect_24G = '';
        var connect_5G = '';
        var connect_wan = '';
        var connect_elect = '';
        var connectCacheDes = '';
        var arr = [];

        if ((backHauls & 1) == 1) {
          connect_24G = '无线2.4GHZ WiFi';
        }

        if ((backHauls & 2) == 2) {
          connect_5G = '无线5GHZ WiFi';
        }

        if ((backHauls & 4) == 4) {
          connect_elect = '电力';
        }

        if ((backHauls & 8) >= 8) {
          connect_wan = '网线';
        }

        arr = _CommonUtils.default.arrayPushWithoutEmpty(connect_24G, arr);
        arr = _CommonUtils.default.arrayPushWithoutEmpty(connect_5G, arr);
        arr = _CommonUtils.default.arrayPushWithoutEmpty(connect_wan, arr);
        arr = _CommonUtils.default.arrayPushWithoutEmpty(connect_elect, arr);
        connectCacheDes = arr.join('、');

        if (connectCacheDes.indexOf("网线") > -1) {
          return '网线';
        } else {
          return connectCacheDes;
        }
      }
    }, {
      key: "getBackHaulsQaString",
      value: function getBackHaulsQaString(item) {
        if (this.isBackHaulZero(item)) {
          return '正在更新状态…';
        }

        if (item.backhaulsQa > 0) {
          return '优';
        } else {
          return '差';
        }
      }
    }, {
      key: "getBackHaulsTip",
      value: function getBackHaulsTip(item) {
        return this.getBackHaulsQaString(item) == '差' ? '建议靠近上级节点' : '';
      }
    }]);
    return MeshHelper;
  }();

  exports.default = MeshHelper;
},10190,[14305,14320,14323,10040,10055,10076,10935,10107,10193,10196,10199,10202,10136,10205,10208,10145,10211,10214]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/meshTree",
    "width": 660,
    "height": 660,
    "scales": [1],
    "hash": "84092431318c07ee641ace1dea689908",
    "name": "mesh_realism_r3600",
    "type": "png"
  });
},10193,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/meshTree",
    "width": 660,
    "height": 660,
    "scales": [1],
    "hash": "d24cc1fb15cb4291883192f2c279e185",
    "name": "mesh_realism_rm1800",
    "type": "png"
  });
},10196,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/meshTree",
    "width": 660,
    "height": 660,
    "scales": [1],
    "hash": "939e46179a14e7452f5a8c78c77af931",
    "name": "mesh_realism_rm1800c",
    "type": "png"
  });
},10199,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/meshTree",
    "width": 660,
    "height": 660,
    "scales": [1],
    "hash": "7bb987c8f4d6616f62e121c234be0b4c",
    "name": "mesh_realism_ra69",
    "type": "png"
  });
},10202,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/meshTree",
    "width": 660,
    "height": 660,
    "scales": [1],
    "hash": "7a7a0925189e37b15175ff2a732d428e",
    "name": "RA72",
    "type": "png"
  });
},10205,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/meshTree",
    "width": 660,
    "height": 660,
    "scales": [1],
    "hash": "9081a3c2678a36c45c11e1795ac7f963",
    "name": "RA81",
    "type": "png"
  });
},10208,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/devices",
    "width": 56,
    "height": 56,
    "scales": [1],
    "hash": "ea0e9adb11e825b4fe9ea7058b4c90d3",
    "name": "client_device_list_icon_signal_strong",
    "type": "png"
  });
},10211,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/devices",
    "width": 56,
    "height": 56,
    "scales": [1],
    "hash": "5042f6ef354c047316da5953b1216c1e",
    "name": "client_device_list_icon_signal_week",
    "type": "png"
  });
},10214,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "b375906d70b8724e06747d3964c0a5fd",
    "name": "icon_mesh_add",
    "type": "png"
  });
},10217,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources",
    "width": 22,
    "height": 41,
    "scales": [1],
    "hash": "2a12f112e01f0379378b28ee14a04959",
    "name": "sub_arrow",
    "type": "png"
  });
},10220,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _Time = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _DevicesConstant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[6]);

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var EVENT_ID_AUTO_BLOCKED_FOR_INVADING_WIFI = "1002";
  var EVENT_ID_INVADING_WIFI_BUT_NOT_BLOCKED = "1001";
  var EVENT_ID_AUTO_BLOCKED_FOR_CRACKING_ROUTER_MANAGEMENT_PASSWORD = "1004";
  var EVENT_ID_CRACKING_ROUTER_MANAGEMENT_PASSWORD = "1003";

  var ClientHelper = function () {
    function ClientHelper() {
      (0, _classCallCheck2.default)(this, ClientHelper);
    }

    (0, _createClass2.default)(ClientHelper, null, [{
      key: "getDisplayName",
      value: function getDisplayName(obj) {
        if (!_CommonUtils.default.isTextEmpty(obj.name)) {
          return obj.name;
        } else if (!_CommonUtils.default.isTextEmpty(obj.originName)) {
          return obj.originName;
        } else if (!_CommonUtils.default.isTextEmpty(obj.mac)) {
          return obj.mac;
        }
      }
    }, {
      key: "getRiskDeviceDisplayName",
      value: function getRiskDeviceDisplayName(obj) {
        if (!_CommonUtils.default.isTextEmpty(obj.mac)) {
          return obj.mac;
        } else if (!_CommonUtils.default.isTextEmpty(obj.name)) {
          return obj.name;
        }

        return _RouterLocalizedStringUtil.localStrings.deviceRiskDevices;
      }
    }, {
      key: "riskDeviceIsYou",
      value: function riskDeviceIsYou(item, currenMac) {
        return item.mac == currenMac;
      }
    }, {
      key: "getRiskMessageText",
      value: function getRiskMessageText(item) {
        if (item.eventID == EVENT_ID_AUTO_BLOCKED_FOR_INVADING_WIFI) {
          return "" + _RouterLocalizedStringUtil.localStrings.tiedToConnectNetWork + item.count + _RouterLocalizedStringUtil.localStrings.tiedToConnectCellStop;
        }

        if (item.eventID == EVENT_ID_INVADING_WIFI_BUT_NOT_BLOCKED) {
          return "" + _RouterLocalizedStringUtil.localStrings.tiedToConnectNetWork + item.count + _RouterLocalizedStringUtil.localStrings.tiedToConnectCell;
        }

        if (item.eventID == EVENT_ID_AUTO_BLOCKED_FOR_CRACKING_ROUTER_MANAGEMENT_PASSWORD) {
          return "" + _RouterLocalizedStringUtil.localStrings.tiedToConnectRouter + item.count + _RouterLocalizedStringUtil.localStrings.tiedToConnectCellStop;
        }

        if (item.eventID == EVENT_ID_CRACKING_ROUTER_MANAGEMENT_PASSWORD) {
          return "" + _RouterLocalizedStringUtil.localStrings.tiedToConnectRouter + item.count + _RouterLocalizedStringUtil.localStrings.tiedToConnectCell;
        }

        return '';
      }
    }, {
      key: "shouldShowChildTag",
      value: function shouldShowChildTag(obj) {
        if (_CommonUtils.default.isTextEmpty(obj.childrenProtectionEnabled)) {
          return false;
        }

        return obj.childrenProtectionEnabled;
      }
    }, {
      key: "getEventText",
      value: function getEventText(obj) {
        var showText = '';
        var events = obj.events;

        if (!_CommonUtils.default.isNull(events)) {
          for (i = 0; i < events.length; i++) {
            showText += events[i].text;
          }
        }

        return showText;
      }
    }, {
      key: "getEvent",
      value: function getEvent(obj) {
        return obj.events[0];
      }
    }, {
      key: "getTimeDisplay",
      value: function getTimeDisplay(obj) {
        if (obj.events[0].timeDisplay == 1 && obj.events[0].originatedTime > 0) {
          return (0, _Time.default)('2019-11-05T15:32:19Z');
        }
      }
    }, {
      key: "isPhoneOrPCDevices",
      value: function isPhoneOrPCDevices(obj) {
        if (obj.userSpecified == true) {
          return _DevicesConstant.default.PRODUCT_TYPE_PHONE == obj.userSpecifyProduct || _DevicesConstant.default.PRODUCT_TYPE_COMPUTER == obj.userSpecifyProduct || _DevicesConstant.default.PRODUCT_TYPE_PAD == obj.userSpecifyProduct || obj.connectionType == _DevicesConstant.default.CONNECTION_TYPE_WIFI_GUEST;
        } else {
          if (!_CommonUtils.default.isTextEmpty(obj.product)) {
            return _DevicesConstant.default.PRODUCT_TYPE_PHONE == obj.product || _DevicesConstant.default.PRODUCT_TYPE_COMPUTER == obj.product || _DevicesConstant.default.PRODUCT_TYPE_PAD == obj.product || obj.connectionType == _DevicesConstant.default.CONNECTION_TYPE_WIFI_GUEST;
          } else {
            return this.isGuestDevice(obj);
          }
        }
      }
    }, {
      key: "isGuestDevice",
      value: function isGuestDevice(obj) {
        return obj.connectionType == _DevicesConstant.default.CONNECTION_TYPE_WIFI_GUEST;
      }
    }, {
      key: "isShowSpeed",
      value: function isShowSpeed(obj) {
        return this.isOnLine(obj) && obj.dSpeed != _DevicesConstant.default.D_SPEED_NONE;
      }
    }, {
      key: "isOnLine",
      value: function isOnLine(obj) {
        return obj.online == 1;
      }
    }, {
      key: "isOnLineExceptGuestDevices",
      value: function isOnLineExceptGuestDevices(obj) {
        return obj.online == 1 && !this.isGuestDevice(obj);
      }
    }, {
      key: "isOutLineExceptGuestDevices",
      value: function isOutLineExceptGuestDevices(obj) {
        return obj.online != 1 && !this.isGuestDevice(obj);
      }
    }, {
      key: "isLan",
      value: function isLan(obj) {
        return obj.connectionType == _DevicesConstant.default.CONNECTION_TYPE_WIFI_LAN;
      }
    }, {
      key: "signalImageIndex",
      value: function signalImageIndex(obj) {
        if (this.isLan(obj)) {
          return 3;
        } else if (obj.wifi_quality == _DevicesConstant.default.WIFI_QUALITY_MIDDLE) {
          return 1;
        } else if (obj.wifi_quality == _DevicesConstant.default.WIFI_QUALITY_BAD) {
          return 2;
        } else if (obj.wifi_quality == _DevicesConstant.default.WIFI_QUALITY_GOOD) {
          return 0;
        }
      }
    }, {
      key: "signalText",
      value: function signalText(n) {
        switch (n) {
          case _DevicesConstant.default.WIFI_QUALITY_GOOD - 0:
            return '强';
            break;

          case _DevicesConstant.default.WIFI_QUALITY_MIDDLE - 0:
            return '中';
            break;

          case _DevicesConstant.default.WIFI_QUALITY_BAD - 0:
            return '弱';
            break;
        }
      }
    }, {
      key: "getCustom",
      value: function getCustom(bytes) {
        if (bytes === 0) return '0 B/s';
        var k = 1000,
            sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],
            i = Math.floor(Math.log(bytes) / Math.log(k));
        return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i] + '/s';
      }
    }, {
      key: "getParentControlV2Mode",
      value: function getParentControlV2Mode(obj) {
        var mode = null;
        var parentControlInfoV2 = obj.netacctl;

        if (!_CommonUtils.default.isNull(parentControlInfoV2) && parentControlInfoV2.enable === 1) {
          mode = parentControlInfoV2.mode;
        }

        return mode;
      }
    }, {
      key: "getParentControlUrlFilterMode",
      value: function getParentControlUrlFilterMode(obj) {
        var mode = null;
        var parentControlUrlFilter = obj.urlfilter;

        if (!_CommonUtils.default.isNull(parentControlUrlFilter) && !_CommonUtils.default.isNull(parentControlUrlFilter.mode)) {
          mode = parentControlUrlFilter.mode;
        }

        return mode;
      }
    }, {
      key: "isParentControlEnabled",
      value: function isParentControlEnabled(obj) {
        var parentControlInfo = obj.pcontrol;
        return !_CommonUtils.default.isNull(parentControlInfo) && parentControlInfo.total > 0 && parentControlInfo.enabled > 0;
      }
    }, {
      key: "isWanEnabled",
      value: function isWanEnabled(obj) {
        return obj.wan == 1;
      }
    }, {
      key: "isDeviceQosOn",
      value: function isDeviceQosOn(obj) {
        if (_CommonUtils.default.isNull(obj)) {
          return false;
        } else if (_CommonUtils.default.isNull(obj.qos_info)) {
          return false;
        } else if (_CommonUtils.default.isNull(obj.qos_info.flag)) {
          return false;
        } else {
          return obj.qos_info.flag == 'on';
        }
      }
    }, {
      key: "isLimitValid",
      value: function isLimitValid(limit) {
        return Math.abs(limit) > 1E-6 && Math.abs(limit) <= 1;
      }
    }, {
      key: "getParentControlV2ModeText",
      value: function getParentControlV2ModeText(obj) {
        var eventText = null;

        var version = _RouterInfoHelper.default.sharedInstance().getVersion();

        var mode = this.getParentControlV2Mode(obj);

        if (version >= 2) {
          if (!_CommonUtils.default.isTextEmpty(mode)) {
            if (_DevicesConstant.default.MODE_FORBID === mode) {
              eventText = _RouterLocalizedStringUtil.localStrings.deviceWanForbidden;
            } else if (_DevicesConstant.default.MODE_TIMER === mode) {
              eventText = _RouterLocalizedStringUtil.localStrings.deviceParentControlTimer;
            } else {
              if (version == 3) {
                mode = this.getParentControlUrlFilterMode(obj);

                if (_DevicesConstant.default.FILTER_BLACK === mode) {
                  eventText = _RouterLocalizedStringUtil.localStrings.deviceFilterBlack;
                } else if (_DevicesConstant.default.FILTER_WHITE === mode) {
                  eventText = _RouterLocalizedStringUtil.localStrings.deviceFilterWhite;
                }
              }
            }
          }
        } else if (version == 1 && this.isParentControlEnabled(obj)) {
          eventText = _RouterLocalizedStringUtil.localStrings.deviceParentControl;
        } else if (version == 0 && !this.isWanEnabled(obj)) {
          eventText = _RouterLocalizedStringUtil.localStrings.deviceCannotInternet;
        }

        if (_CommonUtils.default.isTextEmpty(eventText)) {
          if (_RouterInfoHelper.default.sharedInstance().hasCapabilityQosSwitch() && !this.isGuestDevice(obj) && this.isDeviceQosOn(obj)) {
            eventText = _RouterLocalizedStringUtil.localStrings.deviceQos;
          }
        }

        return eventText;
      }
    }, {
      key: "isWifi6Devices",
      value: function isWifi6Devices(obj) {
        return obj.phymode === 'ax';
      }
    }, {
      key: "getTextByConnectionType",
      value: function getTextByConnectionType(connectionType) {
        if (connectionType == _DevicesConstant.default.CONNECTION_TYPE_WIFI_24G) {
          return 'WiFi-2.4G';
        } else if (connectionType == _DevicesConstant.default.CONNECTION_TYPE_WIFI_5G) {
          return 'WiFi-5G';
        } else if (connectionType == _DevicesConstant.default.CONNECTION_TYPE_WIFI_LAN) {
          return '有线';
        } else if (connectionType == _DevicesConstant.default.CONNECTION_TYPE_WIFI_GUEST) {
          return 'WiFi-Guest';
        } else if (connectionType == _DevicesConstant.default.CONNECTION_TYPE_WIFI_ZIGBEE) {
          return 'Zigbee';
        } else {
          return '接入';
        }
      }
    }, {
      key: "getRepeatDescFromFrequency",
      value: function getRepeatDescFromFrequency(frequency) {
        if (frequency.length === 1 && frequency[0] === 0) {
          return '执行一次';
        } else {
          if (frequency.length === 7) {
            return '每天';
          } else if (frequency.length === 5 && frequency.includes(1) && frequency.includes(2) && frequency.includes(3) && frequency.includes(4) && frequency.includes(5)) {
            return '工作日';
          } else {
            var temp = '';

            if (frequency.includes(1)) {
              temp = temp + '周一';
            }

            if (frequency.includes(2)) {
              temp = temp + '周二';
            }

            if (frequency.includes(3)) {
              temp = temp + '周三';
            }

            if (frequency.includes(4)) {
              temp = temp + '周四';
            }

            if (frequency.includes(5)) {
              temp = temp + '周五';
            }

            if (frequency.includes(6)) {
              temp = temp + '周六';
            }

            if (frequency.includes(7)) {
              temp = temp + '周日';
            }

            return temp;
          }
        }
      }
    }, {
      key: "getRepeatDesc",
      value: function getRepeatDesc(item) {
        var frequency = item.frequency;
        return ClientHelper.getRepeatDescFromFrequency(frequency);
      }
    }, {
      key: "isSameMac",
      value: function isSameMac(item, targetMac) {
        return !_CommonUtils.default.isNull(targetMac) && String(targetMac) == String(item.mac);
      }
    }]);
    return ClientHelper;
  }();

  exports.default = ClientHelper;
},10223,[14305,14320,14323,10040,10226,10229,10055,10076]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = time;

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[0]);

  function time(durationMillis, originatedTime) {
    var index = -1;
    var minute = 60000;
    var hour = 3600000;
    var day = 86400000;
    var MAX_DURATION_FORMAT = 18000000;
    var DURATION_UNITS = [day, hour, minute];
    var DURATION_UNITS_UNIT = ['0', _RouterLocalizedStringUtil.localStrings.common_hours_ago, _RouterLocalizedStringUtil.localStrings.common_mins_ago];

    if (durationMillis < 0) {
      durationMillis = 0;
    }

    var isLargeDuration = durationMillis >= MAX_DURATION_FORMAT;

    if (!isLargeDuration) {
      for (var i = 0; i < DURATION_UNITS.length; i++) {
        if (durationMillis >= DURATION_UNITS[i]) {
          index = i;
          break;
        }
      }
    }

    if (isLargeDuration || index != -1 && DURATION_UNITS_UNIT[index] == '0') {
      return format(originatedTime);
    }

    if (index == -1) {
      return _RouterLocalizedStringUtil.localStrings.common_just_now;
    } else {
      return parseInt(durationMillis / DURATION_UNITS[index]) + DURATION_UNITS_UNIT[index];
    }

    function format(date) {
      var dateNow = new Date();
      var YYNow = dateNow.getFullYear();
      var date = new Date(date);
      var YY = date.getFullYear() + '/';
      var MM = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '/';
      var DD = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();
      var hh = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();
      var mm = ':' + (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes());
      var ss = ':' + (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds());
      return YYNow = YY ? MM + DD + ' ' + hh + mm : YY + MM + DD + ' ' + hh + mm;
    }
  }
},10226,[10055]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var object = {
    PRODUCT_TYPE_CAMERA: 'camera',
    PRODUCT_TYPE_PHONE: 'phone',
    PRODUCT_TYPE_COMPUTER: 'computer',
    PRODUCT_TYPE_PAD: 'pad',
    PRODUCT_TYPE_LIGHT: 'light',
    COMPANY_YEE_LIGHT: 'yeelight',
    PRODUCT_TYPE_TV: 'tv',
    PRODUCT_TYPE_BOX: 'box',
    PRODUCT_TYPE_RELAY: 'relay',
    PRODUCT_TYPE_ROUTER: 'router',
    LOCALE_EN_US: 'en_US',
    LOCALE_ZH_CN: 'zh_CN',
    LOCALE_ZH_HK: 'zh_HK',
    LOCALE_ZH_TW: 'zh_TW',
    LOCALE_KO: 'ko',
    LOCALE_KO_KR: 'ko_KR',
    CONNECTION_TYPE_WIFI_24G: '1',
    CONNECTION_TYPE_WIFI_5G: '2',
    CONNECTION_TYPE_WIFI_GUEST: '3',
    CONNECTION_TYPE_WIFI_LAN: '4',
    CONNECTION_TYPE_WIFI_ZIGBEE: '5',
    WIFI_QUALITY_GOOD: '1',
    WIFI_QUALITY_MIDDLE: '2',
    WIFI_QUALITY_BAD: '3',
    D_SPEED_NONE: '-1',
    MODE_ALLOW: 'none',
    MODE_FORBID: 'limited',
    MODE_TIMER: 'time',
    FILTER_NONE: 'none',
    FILTER_BLACK: 'black',
    FILTER_WHITE: 'white',
    WEBSITE_FILTER_OPTION_ADD: '0',
    WEBSITE_FILTER_OPTION_DELETE: '1',
    WEBSITE_FILTER_OPTION_UPDATE: '2'
  };
  var _default = object;
  exports.default = _default;
},10229,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
    "width": 114,
    "height": 39,
    "scales": [1],
    "hash": "49479fd651f6a5cc0fc5e24da31aebc3",
    "name": "wifi6",
    "type": "png"
  });
},10232,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
    "width": 93,
    "height": 39,
    "scales": [1],
    "hash": "327ba7e064cbc3c82e27e56f2ccc02fb",
    "name": "mesh",
    "type": "png"
  });
},10235,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _ClientHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _PlaceholderImage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var HomePage = function (_React$Component) {
    (0, _inherits2.default)(HomePage, _React$Component);

    function HomePage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, HomePage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HomePage).call(this, props));

      _this._onPressContent = function (item) {
        _this.props.navigation.navigate('DevicesDetails', {
          item: item
        });
      };

      _this.state = {
        onlineCount: -1,
        list4: []
      };
      return _this;
    }

    (0, _createClass2.default)(HomePage, [{
      key: "componentWillMount",
      value: function componentWillMount() {}
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        if (Object.keys(nextProps.value).length !== 0 && !_CommonUtils.default.isNull(nextProps.value.devices)) {
          var onlineList = nextProps.value.devices.filter(function (item) {
            return item.online === 1;
          });

          if (onlineList.length > 4) {
            this.setState({
              'onlineCount': onlineList.length,
              'list4': onlineList.slice(0, 4)
            });
          } else {
            this.setState({
              'onlineCount': onlineList.length,
              'list4': onlineList
            });
          }
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.card
        }, _react.default.createElement(_reactNative.View, {
          style: styles.top
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, "\u8BBE\u5907\u7BA1\u7406"), this.state.onlineCount === -1 ? _react.default.createElement(_reactNative.Text, {
          style: styles.count
        }, "\u6B63\u5728\u83B7\u53D6\u8BBE\u5907\uFF0C\u8BF7\u7A0D\u5019...") : _react.default.createElement(_reactNative.Text, {
          style: styles.count
        }, "\u5F53\u524D", this.state.onlineCount !== 0 ? this.state.onlineCount + '台设备已连接' : '没有设备连接')), _react.default.createElement(_reactNative.View, {
          style: styles.devices_list
        }, this.state.list4.map(function (item, index) {
          var isSnsHeaderValid = !_CommonUtils.default.isTextEmpty(item.sns) && !_CommonUtils.default.isTextEmpty(item.sns_head_url);
          var image_uri = !_CommonUtils.default.isTextEmpty(item.neg480) ? item.neg480 : isSnsHeaderValid ? item.sns_head_url : _API.default.common_base_path.MIWIFI_S_SERVER + '/icon/' + item.iconUrl;

          var default_uri = _$$_REQUIRE(_dependencyMap[13]);

          return _react.default.createElement(_reactNative.TouchableOpacity, {
            key: index,
            style: styles.item,
            onPress: function onPress() {
              return _this2._onPressContent(item);
            }
          }, _react.default.createElement(_PlaceholderImage.default, {
            style: {
              width: 56,
              height: 56
            },
            placeholderSource: default_uri,
            source: {
              uri: image_uri
            }
          }), _react.default.createElement(_reactNative.View, {
            style: styles.name_content
          }, _react.default.createElement(_reactNative.Text, {
            numberOfLines: 2,
            style: styles.name
          }, _ClientHelper.default.getDisplayName(item))));
        })), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.bottom,
          onPress: function onPress() {
            _this2.props.navigation.navigate('Devices');
          }
        }, _react.default.createElement(_reactNative.Text, null, "\u67E5\u770B\u5168\u90E8\u8BBE\u5907")));
      }
    }]);
    return HomePage;
  }(_react.default.Component);

  exports.default = HomePage;

  HomePage.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "light",
        style: {
          backgroundColor: '#1a1b2a'
        },
        title: navigation.state.params.title,
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    card: {
      backgroundColor: '#fff',
      borderRadius: 10,
      paddingTop: 16,
      marginBottom: 12,
      justifyContent: 'center'
    },
    top: {
      paddingLeft: 20,
      paddingBottom: 16,
      flexDirection: 'row',
      alignItems: 'baseline'
    },
    title: {
      fontSize: 20,
      color: '#4C4C4C',
      fontWeight: 'bold'
    },
    count: {
      fontSize: 15,
      color: '#999',
      marginLeft: 10,
      paddingBottom: 1,
      fontFamily: ''
    },
    devices_list: {
      flexDirection: 'row'
    },
    item: {
      width: '25%',
      alignItems: 'center'
    },
    name_content: {
      justifyContent: 'center',
      alignItems: 'center',
      width: 62,
      height: 40
    },
    name: {
      fontSize: 12,
      textAlign: 'center',
      fontFamily: '',
      color: 'rgba(0, 0, 0, 0.5)',
      lineHeight: 15
    },
    bottom: {
      marginTop: 22,
      borderTopWidth: 1,
      borderColor: '#E5E5E5',
      justifyContent: 'center',
      alignItems: 'center',
      height: 47
    }
  });
},10238,[14305,14320,14323,14371,14377,14386,10297,10033,10223,10241,10040,10064,10284,10244]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var PlaceholderImage = function (_React$PureComponent) {
    (0, _inherits2.default)(PlaceholderImage, _React$PureComponent);

    function PlaceholderImage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, PlaceholderImage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PlaceholderImage).call(this, props));
      _this.state = {
        loading: true
      };
      return _this;
    }

    (0, _createClass2.default)(PlaceholderImage, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: this.props.style
        }, _react.default.createElement(_reactNative.Image, {
          style: [this.props.style, styles.imageStyle],
          source: this.props.source,
          onLoad: function onLoad() {
            return _this2.setState({
              loading: false
            });
          }
        }), this.state.loading ? _react.default.createElement(_reactNative.Image, {
          style: [this.props.style, styles.imageStyle],
          source: this.props.placeholderSource
        }) : null);
      }
    }]);
    return PlaceholderImage;
  }(_react.default.PureComponent);

  PlaceholderImage.propTypes = {
    source: _propTypes.default.object,
    style: _reactNative.ViewPropTypes.style,
    placeholderSource: _propTypes.default.number.isRequired
  };

  var styles = _reactNative.StyleSheet.create({
    imageStyle: {
      position: 'absolute',
      top: 0,
      right: 0,
      left: 0,
      bottom: 0
    }
  });

  var _default = PlaceholderImage;
  exports.default = _default;
},10241,[14305,14320,14323,14371,14377,14386,10297,10033,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/devices",
    "width": 160,
    "height": 160,
    "scales": [1],
    "hash": "325094178de952195c08467afab36daf",
    "name": "client_device_list_unknown",
    "type": "png"
  });
},10244,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _miot = _$$_REQUIRE(_dependencyMap[10]);

  var _device = _$$_REQUIRE(_dependencyMap[11]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[14]);

  var ToolBox = function (_React$Component) {
    (0, _inherits2.default)(ToolBox, _React$Component);

    function ToolBox(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ToolBox);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToolBox).call(this, props));

      _this.getStatus = function () {
        _miot.Service.callSmartHomeAPI(_this.api, _this.paramsDic).then(function (res) {
          if (res.code === 0) {
            _this.setState({
              'ledStatus': res.status === 1 ? true : false
            });
          }
        }).catch(function (e) {});
      };

      _this.changeStatusHandler = function () {
        var ledStatus = !_this.state.ledStatus;

        if (!ledStatus) {
          _this.setState({
            showCloseAlert: true
          });

          return;
        }

        _this.setState({
          'ledStatus': ledStatus,
          isShowLoading: true
        }, function () {
          _this.updateStatus();
        });
      };

      _this.updateStatus = function () {
        var on = {
          on: _this.state.ledStatus ? 1 : 0
        };
        var params = {
          params: (0, _objectSpread2.default)({}, _this.paramsDic.params, on)
        };
        var paramsDic = (0, _objectSpread2.default)({}, _this.paramsDic, params);

        _miot.Service.callSmartHomeAPI(_this.api, paramsDic).then(function (res) {
          _this.setState({
            isShowLoading: false
          });

          _CommonUtils.default.ShowToastBottom('设置成功');
        }).catch(function (e) {
          _this.setState({
            isShowLoading: false,
            ledStatus: true
          });

          _CommonUtils.default.ShowToastBottom('设置失败');
        });
      };

      _this.state = {
        ledStatus: true,
        loadingText: '正在保存设置',
        isShowLoading: false,
        showCloseAlert: false
      };
      _this.api = _API.default.router_led.remote;
      _this.deviceId = _device.Device.deviceID.replace("miwifi.", "");
      _this.paramsDic = {
        method: 'GET',
        params: {
          deviceId: _this.deviceId
        }
      };
      return _this;
    }

    (0, _createClass2.default)(ToolBox, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.getStatus();
      }
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {}
    }, {
      key: "closeLed",
      value: function closeLed() {
        var _this2 = this;

        this.setState({
          'ledStatus': false,
          isShowLoading: true
        }, function () {
          _this2.updateStatus();
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.card
        }, _react.default.createElement(_reactNative.View, {
          style: styles.led
        }, _react.default.createElement(_reactNative.View, {
          style: styles.left
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[15])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, "\u6307\u793A\u706F\u5F00\u5173")), _react.default.createElement(_Switch.default, {
          style: {
            width: 50,
            height: 30
          },
          onTintColor: "skyblue",
          tintColor: "#E5E5E5",
          value: this.state.ledStatus === true ? true : false,
          onValueChange: this.changeStatusHandler
        })), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: this.state.isShowLoading,
          message: this.state.loadingText
        }), _react.default.createElement(_Dialog.MessageDialog, {
          visible: this.state.showCloseAlert,
          title: '提示',
          message: '关闭指示灯后将无法根据指示灯的状态及时了解路由器的工作情况',
          buttons: [{
            text: '取消',
            style: {
              color: '#000'
            },
            callback: function callback() {
              _this3.setState({
                showCloseAlert: false,
                ledStatus: true
              });
            }
          }, {
            text: '确定',
            style: {
              color: '#000'
            },
            callback: function callback() {
              _this3.setState({
                showCloseAlert: false
              });

              _this3.closeLed();
            }
          }],
          onDismiss: function onDismiss() {
            _this3.setState({
              showCloseAlert: false
            });
          }
        }));
      }
    }]);
    return ToolBox;
  }(_react.default.Component);

  exports.default = ToolBox;

  ToolBox.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: null
    };
  };

  var styles = _reactNative.StyleSheet.create({
    card: {
      backgroundColor: '#fff',
      borderRadius: 10,
      paddingTop: 20,
      paddingBottom: 20,
      paddingLeft: 20,
      paddingRight: 20,
      justifyContent: 'center'
    },
    led: {
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center'
    },
    left: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    icon: {
      width: 45,
      height: 45,
      resizeMode: 'contain'
    },
    title: {
      fontSize: 18,
      color: '#000',
      fontWeight: 'bold',
      marginLeft: 13
    }
  });
},10247,[14305,14314,14320,14323,14371,14377,14386,10297,10033,10064,10074,10935,10347,10040,10755,10250]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "e442721a9105dae523a148a41bb9a14f",
    "name": "icon_led",
    "type": "png"
  });
},10250,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _miot = _$$_REQUIRE(_dependencyMap[9]);

  var _device = _$$_REQUIRE(_dependencyMap[10]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Devices = _$$_REQUIRE(_dependencyMap[13]);

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var TIPS = '无加密(允许所有人连接)';

  var PasswordItem = function PasswordItem(porps) {
    return _react.default.createElement(_reactNative.View, {
      style: styles.item
    }, _react.default.createElement(_reactNative.View, {
      style: styles.left
    }, _react.default.createElement(_reactNative.View, {
      style: styles.title_content
    }, _react.default.createElement(_reactNative.Text, {
      style: styles.title
    }, porps.text)), _react.default.createElement(_reactNative.Text, {
      numberOfLines: 1,
      style: styles.password
    }, porps.value)));
  };

  var ToolBox = function (_React$Component) {
    (0, _inherits2.default)(ToolBox, _React$Component);

    function ToolBox(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ToolBox);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToolBox).call(this, props));

      _this.getData = function () {
        var api = _API.default.wifi_setting.wifi_detail_all.remote;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceId: deviceId
          }
        };

        _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
          if (res.code === 0) {
            _this.setState({
              'bsd': res.bsd,
              'password': res.info[0]['password'],
              'password_5G': _CommonUtils.default.isNull(res.info[1]) ? '' : res.info[1]['password'],
              'password_5G_Game': _CommonUtils.default.isNull(res.info[2]) ? '' : res.info[2]['password']
            }, function () {
              var txt = _this.transformStar(_this.state.password, false);

              var txt_5G = _this.transformStar(_this.state.password_5G, false);

              var txt_5G_Game = _this.transformStar(_this.state.password_5G_Game, false);

              _this.setState({
                'passwordText': txt,
                'passwordText_5G': txt_5G,
                'passwordText_5G_Game': txt_5G_Game
              });
            });
          } else {
            _this.getData();
          }
        }).catch(function (e) {
          if (e.code === 607) {
            _this.getData();
          }
        });
      };

      _this.transformStar = function (txt, type, band) {
        if (type) {
          if (band === 'is5G') {
            return _this.state.password_5G || TIPS;
          } else if (band === 'is5G_Game') {
            return _this.state.password_5G_Game || TIPS;
          } else {
            return _this.state.password || TIPS;
          }
        } else {
          if (_CommonUtils.default.isTextEmpty(txt)) {
            return TIPS;
          } else {
            return txt.replace(/./g, '*');
          }
        }
      };

      _this.changeStatusHandler = function () {
        var show = !_this.state.show;

        _this.setState({
          'show': show
        }, function () {
          var txt = _this.transformStar(_this.state.password, show);

          var txt_5G = _this.transformStar(_this.state.password_5G, show, 'is5G');

          var txt_5G_Game = _this.transformStar(_this.state.password_5G_Game, show, 'is5G_Game');

          _this.setState({
            'passwordText': txt,
            'passwordText_5G': txt_5G,
            'passwordText_5G_Game': txt_5G_Game
          });
        });
      };

      _this.state = {
        show: false,
        bsd: -1,
        password: '',
        password_5G: '',
        password_5G_Game: '',
        passwordText: '',
        passwordText_5G: '',
        passwordText_5G_Game: ''
      };
      _this.api = _API.default.router_led.remote;
      _this.deviceId = _device.Device.deviceID.replace("miwifi.", "");
      _this.paramsDic = {
        method: 'GET',
        params: {
          deviceId: _this.deviceId
        }
      };
      return _this;
    }

    (0, _createClass2.default)(ToolBox, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.getData();
        this.deEmitter = _reactNative.DeviceEventEmitter.addListener('updatePassword', function (path) {
          _this2.getData();
        });
      }
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {}
    }, {
      key: "needShow5GInfo",
      value: function needShow5GInfo() {
        return this.state.bsd === 0 && !_RouterInfoHelper.default.sharedInstance().isRouterWithout5G();
      }
    }, {
      key: "needShow5G_GameInfo",
      value: function needShow5G_GameInfo() {
        return _RouterInfoHelper.default.sharedInstance().isSupportTriBand();
      }
    }, {
      key: "render",
      value: function render() {
        if (this.state.bsd === -1) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: styles.card
        }, this.state.bsd === 0 && _react.default.createElement(_reactNative.View, {
          style: styles.card_content
        }, _react.default.createElement(PasswordItem, {
          text: '2.4G WiFi密码',
          value: this.state.passwordText
        }), this.needShow5GInfo() ? _react.default.createElement(PasswordItem, {
          text: '5G WiFi密码',
          value: this.state.passwordText_5G
        }) : null, this.needShow5G_GameInfo() ? _react.default.createElement(PasswordItem, {
          text: '5G Game WiFi密码',
          value: this.state.passwordText_5G_Game
        }) : null), this.state.bsd === 1 && _react.default.createElement(_reactNative.View, {
          style: styles.card_content
        }, _react.default.createElement(PasswordItem, {
          text: 'WiFi密码',
          value: this.state.passwordText
        })), _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: this.changeStatusHandler,
          style: styles.passwordToggle
        }, this.state.show === true ? _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[15])
        }) : _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[16])
        })));
      }
    }]);
    return ToolBox;
  }(_react.default.Component);

  exports.default = ToolBox;

  ToolBox.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: null
    };
  };

  var styles = _reactNative.StyleSheet.create({
    card: {
      backgroundColor: '#fff',
      borderRadius: 10,
      paddingTop: 20,
      paddingBottom: 20,
      paddingLeft: 20,
      paddingRight: 20,
      marginBottom: 12
    },
    card_content: {},
    item: {
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    item_bsd: {
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    left: {},
    title_content: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    title: {
      fontSize: 18,
      color: '#000',
      fontWeight: 'bold',
      fontFamily: ''
    },
    level: {
      color: '#0FC39C',
      fontSize: 16,
      fontFamily: '',
      marginLeft: 10
    },
    password: {
      fontSize: 12,
      fontFamily: '',
      width: _Devices.ScreenW - 120
    },
    icon: {
      width: 30,
      height: 30,
      resizeMode: 'contain'
    },
    passwordToggle: {
      position: 'absolute',
      right: 20,
      top: 20
    }
  });
},10253,[14305,14320,14323,14371,14377,14386,10297,10033,10064,10074,10935,10347,10040,10067,10076,10058,10061]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _miot = _$$_REQUIRE(_dependencyMap[11]);

  var _device = _$$_REQUIRE(_dependencyMap[12]);

  var _ui = _$$_REQUIRE(_dependencyMap[13]);

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[14]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _RouterInfoHelper = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[16]));

  var _Devices = _$$_REQUIRE(_dependencyMap[17]);

  var _Package = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var dialogButtonName = [_RouterLocalizedStringUtil.localStrings.alertOKTitle, _RouterLocalizedStringUtil.localStrings.alertCancelTitle, _RouterLocalizedStringUtil.localStrings.alertTipText];
  var dialogTip = _RouterLocalizedStringUtil.localStrings.resstartRouterAlertContent;
  var resetDialogTip = _RouterLocalizedStringUtil.localStrings.recoverRouterAlertContent;

  var ToolBox = function (_React$Component) {
    (0, _inherits2.default)(ToolBox, _React$Component);

    function ToolBox(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ToolBox);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToolBox).call(this, props));
      _this.state = {
        rebootAlertVisible: false,
        resetAlertVisible: false,
        loading: false,
        isSupportLedLight: false
      };
      _this.api = _API.default.router_led.remote;
      _this.deviceId = _device.Device.deviceID.replace("miwifi.", "");
      _this.paramsDic = {
        method: 'GET',
        params: {
          deviceId: _this.deviceId
        }
      };
      _this.loadingMsg = _RouterLocalizedStringUtil.localStrings.restartRouterLoading;
      return _this;
    }

    (0, _createClass2.default)(ToolBox, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var isSupportLedLight, isSupportUSB30;
        return _regenerator.default.async(function componentDidMount$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return _regenerator.default.awrap(_RouterInfoHelper.default.sharedInstance().synCheckCurrentCapality(_RouterInfoHelper.RouterCapality.isSupportLedLight));

              case 2:
                isSupportLedLight = _context.sent;
                _context.next = 5;
                return _regenerator.default.awrap(_RouterInfoHelper.default.sharedInstance().synCheckCurrentCapality(_RouterInfoHelper.RouterCapality.isSupportUSB30));

              case 5:
                isSupportUSB30 = _context.sent;
                this.setState({
                  isSupportLedLight: isSupportLedLight,
                  isSupportUSB30: isSupportUSB30
                });

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {}
    }, {
      key: "_gotoRebootRouter",
      value: function _gotoRebootRouter() {
        var _this2 = this;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceId: deviceId
          }
        };
        this.setState({
          hasBeginStartRouter: false,
          hasEndStartRouter: false
        });
        var api = _API.default.reboot_router.remote;

        _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
          var code = res.code;

          if (code == 0) {
            _this2.timer = setInterval(function () {
              _this2._pingrouter();
            }, 3000);
          }
        }).catch(function (e) {
          _this2.setState({
            loading: false
          });
        });
      }
    }, {
      key: "_pingrouter",
      value: function _pingrouter() {
        var _this3 = this;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceId: deviceId
          }
        };
        var api = _API.default.router.init_info;

        _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
          if (res.code == 0) {
            if (!_this3.state.hasEndStartRouter && _this3.state.hasBeginStartRouter) {
              _this3.setState({
                hasEndStartRouter: true,
                loading: false
              });

              _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.restartRouterSuccess);

              _this3.props.navigation.popToTop();
            }
          } else {
            if (!_this3.state.hasBeginStartRouter) {
              _this3.setState({
                hasBeginStartRouter: true
              });
            }
          }
        }).catch(function (e) {
          if (!_this3.state.hasBeginStartRouter) {
            _this3.setState({
              hasBeginStartRouter: true
            });
          }
        });
      }
    }, {
      key: "_resetHandler",
      value: function _resetHandler() {
        this.setState({
          resetAlertVisible: true
        });
      }
    }, {
      key: "_resetRouter",
      value: function _resetRouter() {
        var _this4 = this;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceId: deviceId,
            format: '0'
          }
        };
        var api = _API.default.recover_router.remote;

        _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
          if (res.code == 0) {
            _this4._unbindRouter();
          } else {
            _CommonUtils.default.ShowToastBottom('操作失败');
          }
        }).catch(function (e) {
          _this4.setState({
            loading: false
          });

          _CommonUtils.default.ShowToastBottom('操作失败');
        });
      }
    }, {
      key: "_unbindRouter",
      value: function _unbindRouter() {
        var _this5 = this;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'POST';
        var paramsDic = {
          method: method,
          params: {
            deviceID: deviceId
          }
        };
        var api = _API.default.router_unbind.remote;

        _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
          if (res.code == 0) {
            _this5.resetTimer = setTimeout(function () {
              _this5.setState({
                loading: false
              });

              _CommonUtils.default.ShowToastBottom('操作成功，该设备已恢复出厂设置并解绑');

              _Package.default.exit();
            }, 10000);
          }
        }).catch(function (e) {
          _this5.setState({
            loading: false
          });
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this6 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.card
        }, _react.default.createElement(_reactNative.View, {
          style: styles.top
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, "\u8DEF\u7531\u8BBE\u7F6E")), _react.default.createElement(_reactNative.View, {
          style: styles.content
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.item,
          onPress: function onPress() {
            _this6.props.navigation.navigate('RouterSetWifiAndNetmode');
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[19])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.name
        }, "\u7F51\u7EDC\u8BBE\u7F6E")), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.item,
          onPress: function onPress() {
            _this6.props.navigation.navigate('RestartPlan');
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[20])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.name
        }, "\u5B9A\u65F6\u91CD\u542F")), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.item,
          onPress: function onPress() {
            _this6.props.navigation.navigate('ResetPassword');
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[21])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.name
        }, "\u7BA1\u7406\u5BC6\u7801")), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.item,
          onPress: function onPress() {
            _this6.setState({
              rebootAlertVisible: true
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[22])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.name
        }, "\u91CD\u542F\u8DEF\u7531")), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.item,
          onPress: function onPress() {
            _this6.props.navigation.navigate('RouterUpgrade');
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[23])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.name
        }, "\u5347\u7EA7\u52A9\u624B")), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.item,
          onPress: function onPress() {
            _this6._resetHandler();
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[24])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.name
        }, "\u6062\u590D\u8DEF\u7531\u5668\u51FA\u5382\u8BBE\u7F6E")), this.state.isSupportLedLight ? _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.item,
          onPress: function onPress() {
            _this6.props.navigation.navigate('LedRGB');
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[25])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.name
        }, "LED\u52A8\u6548\u706F")) : null, this.state.isSupportUSB30 ? _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.itemBody,
          onPress: function onPress() {
            _this6.props.navigation.navigate('USB30', {
              title: 'USB3.0'
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[26])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.name
        }, "USB3.0"))) : null), _react.default.createElement(_ui.MessageDialog, {
          title: dialogButtonName[2],
          message: dialogTip,
          cancelable: false,
          cancel: dialogButtonName[1],
          confirm: dialogButtonName[0],
          onCancel: function onCancel(e) {},
          onConfirm: function onConfirm(e) {
            _this6.setState({
              loading: true
            });

            _this6.loadingMsg = _RouterLocalizedStringUtil.localStrings.restartRouterLoading;

            _this6._gotoRebootRouter();
          },
          onDismiss: function onDismiss() {
            _this6.setState({
              rebootAlertVisible: false
            });
          },
          visible: this.state.rebootAlertVisible
        }), _react.default.createElement(_ui.MessageDialog, {
          title: dialogButtonName[2],
          message: resetDialogTip,
          cancelable: false,
          cancel: dialogButtonName[1],
          confirm: dialogButtonName[0],
          onCancel: function onCancel(e) {},
          onConfirm: function onConfirm(e) {
            _this6.setState({
              loading: true,
              resetAlertVisible: false
            });

            _this6.loadingMsg = _RouterLocalizedStringUtil.localStrings.recoverRouterLoading;

            _this6._resetRouter();
          },
          onDismiss: function onDismiss() {
            _this6.setState({
              resetAlertVisible: false
            });
          },
          visible: this.state.resetAlertVisible
        }), _react.default.createElement(_ui.LoadingDialog, {
          visible: this.state.loading,
          message: this.loadingMsg
        }));
      }
    }]);
    return ToolBox;
  }(_react.default.Component);

  exports.default = ToolBox;

  ToolBox.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: null
    };
  };

  var styles = _reactNative.StyleSheet.create({
    card: {
      backgroundColor: '#fff',
      borderRadius: 10,
      paddingTop: 16,
      marginBottom: 12,
      justifyContent: 'center'
    },
    top: {
      paddingLeft: 20,
      paddingBottom: 16,
      flexDirection: 'row',
      alignItems: 'baseline'
    },
    content: {
      flexDirection: 'row',
      flexWrap: 'wrap',
      paddingLeft: 12,
      paddingRight: 12
    },
    title: {
      fontSize: 20,
      color: '#4C4C4C',
      fontWeight: 'bold'
    },
    item: {
      width: '25%',
      alignItems: 'center',
      marginBottom: 20
    },
    icon: {
      width: 45,
      height: 45,
      resizeMode: 'contain',
      marginBottom: 10
    },
    name: {
      fontSize: 14,
      color: '#000',
      textAlign: 'center'
    }
  });
},10256,[14308,14305,14674,14320,14323,14371,14377,14386,10297,10033,10064,10074,10935,10230,10055,10040,10076,10067,10056,10259,10262,10265,10268,10271,10274,10250,10277]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "2f9626dc55502f86025552e96ba4c059",
    "name": "icon_set",
    "type": "png"
  });
},10259,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "29f08bbfa11ba319c9c3421ac03e304c",
    "name": "icon_reboot_time",
    "type": "png"
  });
},10262,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "c8607d77e8445d705a3f0c8dbd7371f1",
    "name": "icon_pwd",
    "type": "png"
  });
},10265,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "7274fbe96d4b8acf8ce3b3ac6127bfbc",
    "name": "icon_reboot",
    "type": "png"
  });
},10268,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
    "width": 132,
    "height": 132,
    "scales": [1],
    "hash": "87a38766dfaf154478e75ef384ddfd08",
    "name": "icon_upgrade",
    "type": "png"
  });
},10271,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/routerSetting",
    "width": 46,
    "height": 47,
    "scales": [1],
    "hash": "9bd7708936293337bb4ccf5a7c675736",
    "name": "setting_icon_restart",
    "type": "png"
  });
},10274,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "8b0a60385faa298606b2b1e46403eb4c",
    "name": "USB_3.0",
    "type": "png"
  });
},10277,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _miot = _$$_REQUIRE(_dependencyMap[11]);

  var _device = _$$_REQUIRE(_dependencyMap[12]);

  var _ui = _$$_REQUIRE(_dependencyMap[13]);

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[14]);

  var _RouterInfoHelper = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[15]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var dialogButtonName = [_RouterLocalizedStringUtil.localStrings.alertOKTitle, _RouterLocalizedStringUtil.localStrings.alertCancelTitle, _RouterLocalizedStringUtil.localStrings.alertTipText];
  var dialogTip = _RouterLocalizedStringUtil.localStrings.resstartRouterAlertContent;
  var NEED_COOKIE_PLUGIN = ['2882303761517675329', '2882303761518425162'];
  var NET_EASY_UU = '2882303761518031252';

  var REMOVE_ICON = _$$_REQUIRE(_dependencyMap[17]);

  var EDIT_ICON = _$$_REQUIRE(_dependencyMap[18]);

  var CLOSE_ICON = _$$_REQUIRE(_dependencyMap[19]);

  var MIWIFI_SERVER_RELEASE = "https://api.miwifi.com";
  var DISABLE_UNINSTALL = "disabled-uninstall";

  var ToolBox = function (_React$Component) {
    (0, _inherits2.default)(ToolBox, _React$Component);

    function ToolBox(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ToolBox);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToolBox).call(this, props));

      _this.getPluginRecommendData = function (filterAppIdArr) {
        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var paramsDic = {
          method: 'get',
          params: {
            deviceId: deviceId,
            platform: 'APP',
            countryCode: _device.Device.countryCode
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.plugin_v3_recommend_list, paramsDic).then(function (res) {
          if (res.code === 0) {
            var recommendAppList = res.data.list.filter(function (item) {
              return !filterAppIdArr.includes(item.appId);
            });

            _this.setState({
              'plugin_v3_recommend_list': recommendAppList
            });
          }
        }).catch(function (res) {}).finally(function (res) {});
      };

      _this.getPluginInstallData = function _callee() {
        var deviceId, paramsDic, installAppList;
        return _regenerator.default.async(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                deviceId = _device.Device.deviceID.replace("miwifi.", "");
                paramsDic = {
                  method: 'get',
                  params: {
                    deviceId: deviceId
                  }
                };
                _context.next = 4;
                return _regenerator.default.awrap(_miot.Service.callSmartHomeAPI(_API.default.plugin_v3_install_list, paramsDic).then(function (res) {
                  return Promise.resolve(res.data.list);
                }).catch(function (res) {
                  return Promise.reject(res);
                }).finally(function (res) {}));

              case 4:
                installAppList = _context.sent;

                _this.setState({
                  'plugin_v3_install_list': installAppList
                }, function () {
                  var appIdArr = [];
                  installAppList.map(function (item, index) {
                    appIdArr.push(item.appId);
                  });

                  _this.getPluginRecommendData(appIdArr);
                });

              case 6:
              case "end":
                return _context.stop();
            }
          }
        });
      };

      _this.authorize_ = function (redirectUrl, clientId) {
        var authorizeUrl_ = "http://account.xiaomi.com/oauth2/authorize";
        authorizeUrl_ += "?client_id=" + clientId;
        authorizeUrl_ += "&redirect_uri=" + encodeURIComponent(redirectUrl);
        authorizeUrl_ += "&response_type=token";
        return authorizeUrl_;
      };

      _this.updateHandler = function () {
        _this.installItem = _this.hasUpdatePlugin.upgradeInfo;
        _this.installItem.name = _this.hasUpdatePlugin.name;
        _this.installItem.isUpdate = true;

        _this.installHandler();
      };

      _this.jumpToPlugInHandler = function (item) {
        var isCanObj = _this.isCanUsePlugin(item.appId);

        if (!isCanObj.isCan) {
          if (isCanObj.txt) {
            _CommonUtils.default.ShowToastBottom(isCanObj.txt);
          }

          return false;
        }

        var controlUrl = item.controlUrl;

        if (item.appId === NET_EASY_UU) {
          var ts = new Date().getTime() / 1000 >> 0;
          var key = 'XZ4WgiggxhBEucvEywgQ3A0i2K';

          var gwSn = _RouterInfoHelper.default.sharedInstance().currentRouterInfo().serial;

          _miot.Host.crypto.encodeMD5(key + gwSn + ts).then(function (res) {
            var token = res.toLowerCase();
            var url = controlUrl + "#/login?redirect=acce&gwSn=" + gwSn + "&type=xiaomi-coop&token=" + token + "&ts=" + ts;

            _miot.Host.ui.openWebPage(url);
          }).catch(function (err) {});
        } else {
          var url = _this.authorize_(controlUrl + '?gatewayIp=' + _this.state.gatewayIp + '&model=' + _device.Device.model + '&deviceID=' + _device.Device.deviceID.replace("miwifi.", ""), item.appId);

          _miot.Host.ui.openWebPage(url);
        }
      };

      _this.installHandler = function _callee2() {
        var item, otherItem, _otherItem;

        return _regenerator.default.async(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                item = _this.installItem;

                if (!(_RouterInfoHelper.RouterInfoManager.isRA70() || _RouterInfoHelper.RouterInfoManager.isRA72() || _RouterInfoHelper.RouterInfoManager.isRA74())) {
                  _context2.next = 26;
                  break;
                }

                if (!(item.appId == '2882303761518031252')) {
                  _context2.next = 14;
                  break;
                }

                otherItem = _this.state.plugin_v3_install_list.find(function (item) {
                  return item.appId == '2882303761518425162';
                });

                if (!otherItem) {
                  _context2.next = 11;
                  break;
                }

                _this.deleteAppId = '2882303761518425162';
                _context2.next = 8;
                return _regenerator.default.awrap(_this.deletePluginHandler());

              case 8:
                _this.installHandler();

                _context2.next = 12;
                break;

              case 11:
                _this.startInstallPlugin(item);

              case 12:
                _context2.next = 24;
                break;

              case 14:
                if (!(item.appId == '2882303761518425162')) {
                  _context2.next = 24;
                  break;
                }

                _otherItem = _this.state.plugin_v3_install_list.find(function (item) {
                  return item.appId == '2882303761518031252';
                });

                if (!_otherItem) {
                  _context2.next = 23;
                  break;
                }

                _this.deleteAppId = '2882303761518031252';
                _context2.next = 20;
                return _regenerator.default.awrap(_this.deletePluginHandler());

              case 20:
                _this.installHandler();

                _context2.next = 24;
                break;

              case 23:
                _this.startInstallPlugin(item);

              case 24:
                _context2.next = 27;
                break;

              case 26:
                _this.startInstallPlugin(item);

              case 27:
              case "end":
                return _context2.stop();
            }
          }
        });
      };

      _this.startInstallPlugin = function (item) {
        _this.setState({
          loading: true,
          loadingText: "\u6B63\u5728" + (item.isUpdate ? '升级' : '安装') + ":" + item.name + "\u8BF7\u7A0D\u5019..."
        });

        var payloadDic = {
          api: item.isUpdate ? 609 : 603,
          pluginID: item.appId,
          url: item.mipkUrl
        };
        var paramsDic = {
          method: 'get',
          params: {
            deviceId: _device.Device.deviceID.replace("miwifi.", ""),
            payload: JSON.stringify(payloadDic)
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.plugin_request, paramsDic).then(function (res) {
          if (res.code === 0) {
            _this.installProgress(item.appId);
          }
        }).catch(function (res) {}).finally(function (res) {});
      };

      _this.installProgress = function (appId) {
        var payloadDic = {
          api: 604,
          ids: appId
        };
        var paramsDic = {
          method: 'get',
          params: {
            deviceId: _device.Device.deviceID.replace("miwifi.", ""),
            payload: JSON.stringify(payloadDic)
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.plugin_request, paramsDic).then(function (res) {
          if (res.code === 0) {
            if (res.data[0].status === 4) {
              clearTimeout(_this.installTimer);

              _this.setState({
                loading: false
              }, _this.getPluginInstallData);
            } else {
              _this.installTimer = setTimeout(function () {
                _this.installProgress(appId);
              }, 100);
            }
          }
        }).catch(function (res) {}).finally(function (res) {});
      };

      _this.deletePluginHandler = function () {
        _this.setState({
          loading: true,
          loadingText: '正在移除插件，请稍后...'
        });

        var payloadDic = {
          api: 605,
          pluginID: _this.deleteAppId
        };
        var paramsDic = {
          method: 'get',
          params: {
            deviceId: _device.Device.deviceID.replace("miwifi.", ""),
            payload: JSON.stringify(payloadDic)
          }
        };
        return _miot.Service.callSmartHomeAPI(_API.default.plugin_request, paramsDic).then(function (res) {
          if (res.code === 0) {
            _this.setState({
              loading: false,
              showPluginRemove: false
            }, _this.getPluginInstallData);
          }
        }).catch(function (res) {}).finally(function (res) {});
      };

      _this.itemStyle = function (isDisable) {
        if (isDisable) {
          return [styles.item, styles.disable];
        } else {
          return styles.item;
        }
      };

      _this.isCanUsePlugin = function (pluginId) {
        if (_this.state.showPluginRemove) {
          if (pluginId === '2882303761517675329' || pluginId === '2882303761517280984') {
            return {
              isCan: false
            };
          }

          return {
            isCan: true
          };
        } else if (_this.state.isInRelayMode) {
          if (pluginId === '2882303761517280984') {
            return {
              isCan: true
            };
          } else {
            return {
              isCan: false,
              txt: '中继模式下暂不支持此功能'
            };
          }
        } else if (pluginId === '2882303761518425162' && !_this.state.isConnRouter) {
          return {
            isCan: false,
            txt: '手机未连接当前路由器，请连接后重试'
          };
        } else {
          return {
            isCan: true
          };
        }
      };

      _this.state = {
        plugin_v3_install_list: [],
        plugin_v3_recommend_list: [],
        pluginName: '',
        pluginSummary: '',
        isShowInstallDialog: false,
        isShowDeleteDialog: false,
        loadingText: '',
        isSupportMesh: false,
        isMeshMode: false,
        WorkModeIsRelay: false,
        isSupportUSB30: false,
        showPluginRemove: false,
        hasUnInstallPlugin: false,
        isShowUpdateDialog: false
      };
      _this.api = _API.default.router_led.remote;
      _this.deviceId = _device.Device.deviceID.replace("miwifi.", "");
      _this.paramsDic = {
        method: 'GET',
        params: {
          deviceId: _this.deviceId
        }
      };
      _this.hasUpdatePlugin = null;
      return _this;
    }

    (0, _createClass2.default)(ToolBox, [{
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.routerModeChangedNotification && this.routerModeChangedNotification.remove();
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        var isSupportMesh, isMeshMode, isSupportUSB30, isInRelayMode, isInWirelessRelayMode, gatewayIp, response, isConnRouter;
        return _regenerator.default.async(function componentDidMount$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                this.routerModeChangedNotification = _reactNative.DeviceEventEmitter.addListener('RouterModeChangeToMesh', function () {
                  _this2.setState({
                    isMeshMode: _RouterInfoHelper.default.sharedInstance().isMeshMode()
                  });
                });
                _context3.next = 3;
                return _regenerator.default.awrap(_RouterInfoHelper.default.sharedInstance().synCheckCurrentCapality(_RouterInfoHelper.RouterCapality.isSupportMiMesh));

              case 3:
                isSupportMesh = _context3.sent;
                _context3.next = 6;
                return _regenerator.default.awrap(_RouterInfoHelper.default.sharedInstance().synCheckRouterIsMeshMode());

              case 6:
                isMeshMode = _context3.sent;
                _context3.next = 9;
                return _regenerator.default.awrap(_RouterInfoHelper.default.sharedInstance().synCheckCurrentCapality(_RouterInfoHelper.RouterCapality.isSupportUSB30));

              case 9:
                isSupportUSB30 = _context3.sent;
                _context3.next = 12;
                return _regenerator.default.awrap(_RouterInfoHelper.default.sharedInstance().synCheckCurrentWorkModeIsRelay());

              case 12:
                isInRelayMode = _context3.sent;
                _context3.next = 15;
                return _regenerator.default.awrap(_RouterInfoHelper.default.sharedInstance().synCheckCurrentWorkModeIsRelayWireless());

              case 15:
                isInWirelessRelayMode = _context3.sent.is;
                gatewayIp = '0.0.0.0';
                _context3.next = 19;
                return _regenerator.default.awrap(_miot.System.network.getGatewayIpAddress().then(function (res) {
                  return res;
                }).catch(function (res) {
                  return res;
                }));

              case 19:
                response = _context3.sent;

                if (response.code === 0) {
                  gatewayIp = response.data.ipAddress;
                }

                isConnRouter = true;

                if (!isInRelayMode) {
                  _context3.next = 28;
                  break;
                }

                _context3.next = 25;
                return _regenerator.default.awrap(_RouterInfoHelper.default.sharedInstance().syncCheckRelayConnectRouter());

              case 25:
                isConnRouter = _context3.sent;
                _context3.next = 31;
                break;

              case 28:
                _context3.next = 30;
                return _regenerator.default.awrap(_RouterInfoHelper.default.sharedInstance().synCheckConnRouter());

              case 30:
                isConnRouter = _context3.sent;

              case 31:
                this.setState({
                  isSupportMesh: isSupportMesh,
                  isMeshMode: isMeshMode,
                  isSupportUSB30: isSupportUSB30,
                  isInRelayMode: isInRelayMode,
                  isInWirelessRelayMode: isInWirelessRelayMode,
                  isConnRouter: isConnRouter,
                  gatewayIp: gatewayIp
                });
                if (!isSupportMesh) this.checkMiMesh_Rom();
                this.getPluginInstallData();
                this.getPluginV3List();

              case 35:
              case "end":
                return _context3.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "checkMiMesh_Rom",
      value: function checkMiMesh_Rom() {
        var isSupportMesh;
        return _regenerator.default.async(function checkMiMesh_Rom$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return _regenerator.default.awrap(_RouterInfoHelper.default.sharedInstance().synCheckCurrentCapality(_RouterInfoHelper.RouterCapality.isSupportMiMesh_Rom));

              case 2:
                isSupportMesh = _context4.sent;
                this.setState({
                  isSupportMesh: isSupportMesh
                });

              case 4:
              case "end":
                return _context4.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "getPluginV3List",
      value: function getPluginV3List() {
        var _this3 = this;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var paramsDic = {
          method: 'get',
          params: {
            deviceId: deviceId,
            platform: 'APP',
            category: 'tool',
            countryCode: 'CN'
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.plugin_v3_list, paramsDic).then(function (res) {
          var value = _CommonUtils.default.isNull(res.data.list) ? false : res.data.list.length > 0;

          _this3.setState({
            hasUnInstallPlugin: value
          });
        }).catch(function (res) {
          _this3.setState({
            hasUnInstallPlugin: false
          });
        });
      }
    }, {
      key: "showEdit",
      value: function showEdit() {
        return this.state.hasUnInstallPlugin;
      }
    }, {
      key: "getPluginIconUrl",
      value: function getPluginIconUrl(appId, width, height, updateTime) {
        var iconAddr = "/plugin/icon/" + appId + "/" + width + "x" + height + "/" + updateTime;
        return MIWIFI_SERVER_RELEASE.concat(iconAddr);
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {
          style: styles.card
        }, _react.default.createElement(_reactNative.View, {
          style: styles.top
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, "\u8DEF\u7531\u5E94\u7528"), this.showEdit() ? _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            _this4.setState({
              showPluginRemove: !_this4.state.showPluginRemove
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon_edit,
          source: this.state.showPluginRemove ? CLOSE_ICON : EDIT_ICON
        })) : null), _react.default.createElement(_reactNative.View, {
          style: styles.content
        }, _react.default.createElement(_reactNative.View, {
          style: this.itemStyle(this.state.isSupportMesh && this.state.isMeshMode || this.state.isInWirelessRelayMode || this.state.showPluginRemove)
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.itemBody,
          onPress: function onPress() {
            if (_this4.state.showPluginRemove) {
              return;
            } else if (_this4.state.isSupportMesh && _this4.state.isMeshMode || _this4.state.isInWirelessRelayMode) {
              if (_this4.state.isInWirelessRelayMode) {
                _CommonUtils.default.ShowToastBottom('无线中继模式下暂不支持该功能');
              } else {
                _CommonUtils.default.ShowToastBottom('mesh模式下暂不支持此功能');
              }
            } else {
              _this4.props.navigation.navigate('HealthMode');
            }
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[20])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.name
        }, "\u5B9A\u65F6\u5173\u95EDWiFi"))), _react.default.createElement(_reactNative.View, {
          style: this.itemStyle(this.state.isInRelayMode || this.state.showPluginRemove)
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.itemBody,
          onPress: function onPress() {
            if (_this4.state.showPluginRemove) {} else if (_this4.state.isInRelayMode) {
              _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.tool_not_support_relay);
            } else {
              _this4.props.navigation.navigate('GuestWifi');
            }
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[21])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.name
        }, "\u8BBF\u5BA2WiFi"))), _react.default.createElement(_reactNative.View, {
          style: this.itemStyle(this.state.isInRelayMode || this.state.showPluginRemove)
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.itemBody,
          onPress: function onPress() {
            if (_this4.state.showPluginRemove) {} else if (_this4.state.isInRelayMode) {
              _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.tool_not_support_relay);
            } else {
              _this4.props.navigation.navigate('BlackListStatus');
            }
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[22])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.name
        }, '防蹭网'))), _react.default.createElement(_reactNative.View, {
          style: !this.state.showPluginRemove ? styles.item : [styles.item, styles.disable]
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.itemBody,
          onPress: function onPress() {
            if (!_this4.state.showPluginRemove) {
              _this4.props.navigation.navigate('WPS', {
                title: 'WPS'
              });
            }
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[23])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.name
        }, "WPS"))), this.state.plugin_v3_recommend_list.map(function (item, index) {
          return _react.default.createElement(_reactNative.View, {
            style: !_this4.state.showPluginRemove ? styles.item : [styles.item, styles.disable],
            key: item.appId
          }, _react.default.createElement(_reactNative.TouchableOpacity, {
            style: styles.itemBody,
            onPress: function onPress() {
              if (!_this4.state.showPluginRemove) {
                _this4.installItem = item;
                var summary = item.summary;

                if (_RouterInfoHelper.RouterInfoManager.isRA70() || _RouterInfoHelper.RouterInfoManager.isRA72() || _RouterInfoHelper.RouterInfoManager.isRA74()) {
                  if (item.appId == '2882303761518031252') {
                    var otherItem = _this4.state.plugin_v3_install_list.find(function (item) {
                      return item.appId == '2882303761518425162';
                    });

                    if (otherItem) {
                      summary += '加速器双开将导致网络异常，安装此插件将会卸载腾讯网游加速器插件。';
                    }
                  } else if (item.appId == '2882303761518425162') {
                    var _otherItem2 = _this4.state.plugin_v3_install_list.find(function (item) {
                      return item.appId == '2882303761518031252';
                    });

                    if (_otherItem2) {
                      summary += '。加速器双开将导致网络异常，安装此插件将会卸载网易UU游戏加速插件。';
                    }
                  }
                }

                _this4.setState({
                  'isShowInstallDialog': true,
                  'pluginName': item.name,
                  'pluginSummary': summary
                });
              }
            }
          }, _react.default.createElement(_reactNative.Image, {
            style: styles.icon,
            source: {
              uri: item.marketIcon
            }
          }), _react.default.createElement(_reactNative.View, {
            style: styles.recommendTips
          }, _react.default.createElement(_reactNative.Text, {
            style: styles.recommendTipsText
          }, "\u63A8\u8350")), _react.default.createElement(_reactNative.Text, {
            style: styles.name
          }, item.name)));
        }), this.state.plugin_v3_install_list.map(function (item, index) {
          return _react.default.createElement(_reactNative.View, {
            style: _this4.isCanUsePlugin(item.appId).isCan ? styles.item : [styles.item, styles.disable],
            key: item.appId
          }, _react.default.createElement(_reactNative.TouchableOpacity, {
            style: styles.itemBody,
            onLongPress: function onLongPress() {
              _this4.setState({
                showPluginRemove: true
              });
            },
            onPress: function onPress() {
              if (_this4.state.showPluginRemove && !item.category.includes(DISABLE_UNINSTALL)) {
                _this4.deleteAppId = item.appId;

                _this4.setState({
                  'isShowDeleteDialog': true
                });
              } else {
                if (item.hasOwnProperty('upgradeInfo')) {
                  _this4.hasUpdatePlugin = item;

                  _this4.setState({
                    'isShowUpdateDialog': true
                  });
                } else {
                  _this4.jumpToPlugInHandler(item);
                }
              }
            }
          }, _react.default.createElement(_reactNative.Image, {
            style: styles.icon,
            source: {
              uri: _this4.getPluginIconUrl(item.appId, 144, 144, item.updateTime)
            }
          }), _this4.state.showPluginRemove && !item.category.includes(DISABLE_UNINSTALL) ? _react.default.createElement(_reactNative.Image, {
            style: styles.icon_remove,
            source: REMOVE_ICON
          }) : null, _react.default.createElement(_reactNative.Text, {
            style: styles.name
          }, item.name)));
        }), this.state.isSupportUSB30 ? _react.default.createElement(_reactNative.View, {
          style: !this.state.showPluginRemove ? styles.item : [styles.item, styles.disable]
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.itemBody,
          onPress: function onPress() {
            if (!_this4.state.showPluginRemove) {
              _this4.props.navigation.navigate('Storage', {
                title: '我的存储'
              });
            }
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[24])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.name
        }, "\u6211\u7684\u5B58\u50A8"))) : null), _react.default.createElement(_ui.MessageDialog, {
          title: '确认删除插件',
          message: '删除插件后，将不能使用，想要使用请重新安装',
          cancelable: false,
          cancel: dialogButtonName[1],
          confirm: dialogButtonName[0],
          onCancel: function onCancel(e) {},
          onConfirm: function onConfirm(e) {
            _this4.setState({
              loading: true
            });

            _this4.deletePluginHandler();
          },
          onDismiss: function onDismiss() {
            _this4.setState({
              isShowDeleteDialog: false
            });
          },
          visible: this.state.isShowDeleteDialog
        }), _react.default.createElement(_ui.MessageDialog, {
          title: this.state.pluginName,
          message: this.state.pluginSummary,
          cancelable: false,
          cancel: dialogButtonName[1],
          confirm: dialogButtonName[0],
          onCancel: function onCancel(e) {},
          onConfirm: function onConfirm(e) {
            _this4.setState({
              loading: true
            });

            _this4.installHandler();
          },
          onDismiss: function onDismiss() {
            _this4.setState({
              isShowInstallDialog: false
            });
          },
          visible: this.state.isShowInstallDialog
        }), _react.default.createElement(_ui.MessageDialog, {
          title: '更新提示',
          message: '插件有新版本，是否选择更新插件？',
          cancelable: false,
          cancel: dialogButtonName[1],
          confirm: dialogButtonName[0],
          onCancel: function onCancel(e) {
            _this4.jumpToPlugInHandler(_this4.hasUpdatePlugin);
          },
          onConfirm: function onConfirm(e) {
            _this4.setState({
              loading: true
            });

            _this4.updateHandler();
          },
          onDismiss: function onDismiss() {
            _this4.setState({
              isShowUpdateDialog: false
            });
          },
          visible: this.state.isShowUpdateDialog
        }), _react.default.createElement(_ui.LoadingDialog, {
          visible: this.state.loading,
          message: this.state.loadingText
        })), this.state.showPluginRemove && _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: function onPress() {
            _this4.setState({
              showPluginRemove: false
            });
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.mask
        })));
      }
    }]);
    return ToolBox;
  }(_react.default.Component);

  exports.default = ToolBox;

  ToolBox.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: null
    };
  };

  var styles = _reactNative.StyleSheet.create({
    card: {
      backgroundColor: '#fff',
      borderRadius: 10,
      paddingTop: 16,
      marginBottom: 12,
      justifyContent: 'center',
      zIndex: 100
    },
    top: {
      paddingLeft: 20,
      paddingBottom: 16,
      flexDirection: 'row',
      alignItems: 'baseline',
      justifyContent: 'space-between'
    },
    content: {
      flexDirection: 'row',
      paddingLeft: 12,
      paddingRight: 12,
      flexWrap: 'wrap'
    },
    title: {
      fontSize: 20,
      color: '#4C4C4C',
      fontWeight: 'bold'
    },
    item: {
      width: '25%',
      marginBottom: 20
    },
    disable: {
      opacity: 0.2
    },
    itemBody: {
      alignItems: 'center'
    },
    recommendTips: {
      backgroundColor: '#32BAC0',
      borderRadius: 10,
      paddingHorizontal: 5,
      position: 'absolute',
      right: 0,
      top: 0
    },
    recommendTipsText: {
      fontSize: 9,
      color: '#fff'
    },
    icon: {
      width: 45,
      height: 45,
      resizeMode: 'contain',
      marginBottom: 10
    },
    icon_remove: {
      width: 18,
      height: 18,
      resizeMode: 'contain',
      position: 'absolute',
      right: 0,
      top: 0
    },
    icon_edit: {
      width: 20,
      height: 20,
      resizeMode: 'contain',
      marginHorizontal: 20
    },
    plugin_content: {
      alignItems: 'center',
      flexDirection: 'row',
      marginBottom: 10,
      marginStart: 10
    },
    name: {
      fontSize: 14,
      color: '#000',
      textAlign: 'center'
    },
    mask: {
      position: 'absolute',
      zIndex: 99,
      top: 0,
      height: '105%',
      width: _reactNative.Dimensions.get('window').width,
      backgroundColor: 'rgba(0,0,0,0.5)'
    }
  });
},10280,[14308,14305,14674,14320,14323,14371,14377,14386,10297,10033,10064,10074,10935,10230,10055,10076,10040,10283,10286,10289,10292,10295,10298,10301,10304]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
    "width": 48,
    "height": 48,
    "scales": [1],
    "hash": "402602f53b36a9467b1ce2027cf1f4f9",
    "name": "icon_remove",
    "type": "png"
  });
},10283,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
    "width": 48,
    "height": 48,
    "scales": [1],
    "hash": "cbebd95988b6118f2422c30e9cae104a",
    "name": "icon_edit",
    "type": "png"
  });
},10286,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
    "width": 48,
    "height": 48,
    "scales": [1],
    "hash": "496b11e68626055a9a8b95d89fa5d956",
    "name": "icon_close",
    "type": "png"
  });
},10289,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "a52bb5fbcac1e03c660c09d39ce82368",
    "name": "icon_health",
    "type": "png"
  });
},10292,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "24275780522af4b4f700bf40fb62b066",
    "name": "icon_guest",
    "type": "png"
  });
},10295,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "2429857ee713c0877cb12fca38a7122b",
    "name": "black_list_status",
    "type": "png"
  });
},10298,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "bb7f66478422bac74225c8b4c694c19e",
    "name": "wps",
    "type": "png"
  });
},10301,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  */
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var getOwnPropertySymbols = Object.getOwnPropertySymbols;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var propIsEnumerable = Object.prototype.propertyIsEnumerable;

  function toObject(val) {
    if (val === null || val === undefined) {
      throw new TypeError('Object.assign cannot be called with null or undefined');
    }

    return Object(val);
  }

  function shouldUseNative() {
    try {
      if (!Object.assign) {
        return false;
      }

      var test1 = new String('abc');
      test1[5] = 'de';

      if (Object.getOwnPropertyNames(test1)[0] === '5') {
        return false;
      }

      var test2 = {};

      for (var i = 0; i < 10; i++) {
        test2['_' + String.fromCharCode(i)] = i;
      }

      var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
        return test2[n];
      });

      if (order2.join('') !== '0123456789') {
        return false;
      }

      var test3 = {};
      'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
        test3[letter] = letter;
      });

      if (Object.keys(_extends({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
        return false;
      }

      return true;
    } catch (err) {
      return false;
    }
  }

  module.exports = shouldUseNative() ? Object.assign : function (target, source) {
    var from;
    var to = toObject(target);
    var symbols;

    for (var s = 1; s < arguments.length; s++) {
      from = Object(arguments[s]);

      for (var key in from) {
        if (hasOwnProperty.call(from, key)) {
          to[key] = from[key];
        }
      }

      if (getOwnPropertySymbols) {
        symbols = getOwnPropertySymbols(from);

        for (var i = 0; i < symbols.length; i++) {
          if (propIsEnumerable.call(from, symbols[i])) {
            to[symbols[i]] = from[symbols[i]];
          }
        }
      }
    }

    return to;
  };
},10303,[14344]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "e2a84f9248bf51e81b679798c8ef5231",
    "name": "icon_qos",
    "type": "png"
  });
},10304,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var emptyObject = {};
  module.exports = emptyObject;
},10306,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _device = _$$_REQUIRE(_dependencyMap[10]);

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[11]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var RouterOptimization = function (_React$Component) {
    (0, _inherits2.default)(RouterOptimization, _React$Component);

    function RouterOptimization(props) {
      var _this;

      (0, _classCallCheck2.default)(this, RouterOptimization);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RouterOptimization).call(this, props));

      _this.itemStyle = function (isDisable) {
        if (isDisable) {
          return [styles.item, styles.disable];
        } else {
          return styles.item;
        }
      };

      _this.state = {
        isInRelayMode: false
      };
      return _this;
    }

    (0, _createClass2.default)(RouterOptimization, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var isInRelayMode;
        return _regenerator.default.async(function componentDidMount$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return _regenerator.default.awrap(_RouterInfoHelper.default.sharedInstance().synCheckCurrentWorkModeIsRelay());

              case 2:
                isInRelayMode = _context.sent;
                this.setState({
                  isInRelayMode: isInRelayMode
                });

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.card
        }, _react.default.createElement(_reactNative.View, {
          style: styles.top
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, "\u8DEF\u7531\u4F18\u5316")), _react.default.createElement(_reactNative.View, {
          style: styles.content
        }, _react.default.createElement(_reactNative.View, {
          style: this.itemStyle(this.state.isInRelayMode)
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.itemBody,
          onPress: function onPress() {
            if (_this2.state.isInRelayMode === true) {
              _CommonUtils.default.ShowToastBottom('中继模式下暂不支持此功能');
            } else {
              _this2.props.navigation.navigate('QosEntry', {
                title: 'Qos限速'
              });
            }
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[14])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.name
        }, "Qos\u9650\u901F"))), _react.default.createElement(_reactNative.View, {
          style: this.itemStyle(this.state.isInRelayMode)
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.itemBody,
          onPress: function onPress() {
            if (_this2.state.isInRelayMode === true) {
              _CommonUtils.default.ShowToastBottom('中继模式下暂不支持此功能');
            } else {
              _this2.props.navigation.navigate('NetworkOptimizeTool', {
                title: 'WiFi优化'
              });
            }
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[15])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.name
        }, "WiFi\u4F18\u5316")))));
      }
    }]);
    return RouterOptimization;
  }(_react.default.Component);

  exports.default = RouterOptimization;

  RouterOptimization.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: null
    };
  };

  var styles = _reactNative.StyleSheet.create({
    card: {
      backgroundColor: '#fff',
      borderRadius: 10,
      paddingTop: 16,
      marginBottom: 12,
      justifyContent: 'center'
    },
    top: {
      paddingLeft: 20,
      paddingBottom: 16,
      flexDirection: 'row',
      alignItems: 'baseline'
    },
    content: {
      flexDirection: 'row',
      paddingLeft: 12,
      paddingRight: 12
    },
    title: {
      fontSize: 20,
      color: '#4C4C4C',
      fontWeight: 'bold'
    },
    item: {
      width: '25%',
      alignItems: 'center',
      marginBottom: 20
    },
    disable: {
      opacity: 0.2
    },
    itemBody: {
      alignItems: 'center'
    },
    icon: {
      width: 45,
      height: 45,
      resizeMode: 'contain',
      marginBottom: 10
    },
    name: {
      fontSize: 14,
      width: '100%',
      color: '#000',
      textAlign: 'center'
    }
  });
},10307,[14305,14674,14320,14323,14371,14377,14386,10297,10033,10064,10935,10055,10040,10076,10304,10310]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "80890e27f4de930afc3e3da86f891600",
    "name": "wifi_optim.icon",
    "type": "png"
  });
},10310,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/bg",
    "width": 1080,
    "height": 2340,
    "scales": [1],
    "hash": "80858b526d6f0eb2305e48c552d37e47",
    "name": "1",
    "type": "png"
  });
},10313,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/bg",
    "width": 1080,
    "height": 2340,
    "scales": [1],
    "hash": "466d6af2d1d276763bf349ef30d08bdd",
    "name": "2",
    "type": "png"
  });
},10316,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  {
    module.exports = _$$_REQUIRE(_dependencyMap[0])();
  }
},10318,[10321]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/bg",
    "width": 1080,
    "height": 2340,
    "scales": [1],
    "hash": "a92f600731399a113d99d1516ad4171b",
    "name": "3",
    "type": "png"
  });
},10319,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactPropTypesSecret = _$$_REQUIRE(_dependencyMap[0]);

  function emptyFunction() {}

  function emptyFunctionWithReset() {}

  emptyFunctionWithReset.resetWarningCache = emptyFunction;

  module.exports = function () {
    function shim(props, propName, componentName, location, propFullName, secret) {
      if (secret === ReactPropTypesSecret) {
        return;
      }

      var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
      err.name = 'Invariant Violation';
      throw err;
    }

    ;
    shim.isRequired = shim;

    function getShim() {
      return shim;
    }

    ;
    var ReactPropTypes = {
      array: shim,
      bool: shim,
      func: shim,
      number: shim,
      object: shim,
      string: shim,
      symbol: shim,
      any: shim,
      arrayOf: getShim,
      element: shim,
      elementType: shim,
      instanceOf: getShim,
      node: shim,
      objectOf: getShim,
      oneOf: getShim,
      oneOfType: getShim,
      shape: getShim,
      exact: getShim,
      checkPropTypes: emptyFunctionWithReset,
      resetWarningCache: emptyFunction
    };
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
  };
},10321,[10324]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/bg",
    "width": 1080,
    "height": 2340,
    "scales": [1],
    "hash": "b28d907d55e035353de3af02f336334a",
    "name": "5",
    "type": "png"
  });
},10322,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
  module.exports = ReactPropTypesSecret;
},10324,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/bg",
    "width": 1080,
    "height": 2340,
    "scales": [1],
    "hash": "a2c248b3b7cc3cb06543c0454bda55dd",
    "name": "4",
    "type": "png"
  });
},10325,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/html",
    "scales": [1],
    "hash": "d13af5fa255a1080d6b7df10b58f7332",
    "name": "agreement_cn",
    "type": "html"
  });
},10328,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/html",
    "scales": [1],
    "hash": "84d96652fa91a61799420dda149cab0b",
    "name": "privacy_cn",
    "type": "html"
  });
},10331,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _miot = _$$_REQUIRE(_dependencyMap[9]);

  var _ui = _$$_REQUIRE(_dependencyMap[10]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _RiskItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[14]);

  var _ClientHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _device = _$$_REQUIRE(_dependencyMap[17]);

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      flex: 1
    },
    list_title: {
      height: 50,
      paddingTop: 10,
      paddingLeft: 20,
      textAlign: "left",
      textAlignVertical: 'center',
      backgroundColor: '#FFFFFF',
      color: '#8C93B0',
      fontSize: 13
    }
  });

  var DevicesList = function (_React$Component) {
    (0, _inherits2.default)(DevicesList, _React$Component);

    function DevicesList(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, DevicesList);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DevicesList).call(this, props, context));

      _this.componentWillMount = function () {
        _this.onRefreshing();
      };

      _this._onRemoveRisk = function () {
        var key = '风险设备';

        var arr = _this.state.dataSource.slice();

        var array = _this.getArrayPosition(arr, key, _this.itemMac);

        var length = array.length;

        for (var i = 0; i < length; i++) {
          if (array[i].key == key) {
            if (_CommonUtils.default.arrayIsEmpty(array[i].data)) {
              array.splice(i, 1);

              _this.setState({
                dataSource: array
              });

              return;
            }
          }
        }
      };

      _this._onPressRiskAction = function (type) {
        var itemMac = _this.itemMac;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'POST';
        var paramsDic = {
          method: method,
          params: {
            routerID: deviceId,
            mac: itemMac,
            erase: type == 0 ? "true" : "false"
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.devices.ignore_risk_device, paramsDic).then(function (res) {
          if (res.code == 0) {} else {
            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeFail);

            return;
          }
        }).catch(function (e) {});

        if (type == 1) {
          var paramsDic2 = {
            method: 'GET',
            params: {
              deviceId: deviceId,
              model: 0,
              option: "1",
              mac: itemMac
            }
          };

          _miot.Service.callSmartHomeAPI(_API.default.devices.edit_device, paramsDic2).then(function (res) {
            if (res.code == 0) {} else {
              _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeFail);

              return;
            }
          }).catch(function (e) {});
        }

        _CommonUtils.default.ShowToastBottom(type == 1 ? '拉黑成功，小米/Redmi路由器将自动拦截该设备' : '蹭网风险提示已解除');

        _this._onRemoveRisk();
      };

      _this._renderItem = function (info) {
        if (!_CommonUtils.default.isNull(info.item.riskLevel)) {
          return _react.default.createElement(_RiskItem.default, {
            item: info.item,
            onPressUser: _this._onPressUser,
            onPressContent: _this._onPressContent,
            onPressIgnore: _this._onPressIgnore,
            onPressBlock: _this._onPressBlock
          });
        } else {
          return _react.default.createElement(_ListItem.default, {
            item: info.item,
            onPressUser: _this._onPressUser,
            onPressContent: _this._onPressContent
          });
        }
      };

      _this._sectionComp = function (info) {
        var txt = info.section.key;
        return _react.default.createElement(_reactNative.Text, {
          style: styles.list_title
        }, txt);
      };

      _this.onRefreshing = function () {
        _this.setState({
          refreshing: true
        });

        var language = _miot.Host.locale.language;
        var locale = "zh_CN";

        if (language === "zh") {
          locale = "zh_CN";
        } else {
          locale = "en_US";
        }

        var _this$props = _this.props,
            api = _this$props.api,
            deviceType = _this$props.deviceType;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            routerID: deviceId,
            v: '2',
            locale: locale,
            refresh: '1'
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.devices.device_list, paramsDic).then(function (res) {
          if (!_CommonUtils.default.isNull(res)) {
            _RouterInfoHelper.default.sharedInstance().setClientMessageList(res.devices);

            var data = [];
            var onlineDevices = res.devices.filter(function (item) {
              return _ClientHelper.default.isOnLineExceptGuestDevices(item) == true;
            });
            var offlineDevices = res.devices.filter(function (item) {
              return _ClientHelper.default.isOutLineExceptGuestDevices(item) == true;
            });
            var guestDevices = res.devices.filter(function (item) {
              return _ClientHelper.default.isGuestDevice(item) == true;
            });
            var riskDevices = res.risk_devices;

            if (!_CommonUtils.default.isNull(riskDevices) && riskDevices.length > 0) {
              data.push({
                data: riskDevices,
                key: _RouterLocalizedStringUtil.localStrings.deviceRiskDevices
              });
            }

            if (!_CommonUtils.default.isNull(onlineDevices) && onlineDevices.length > 0) {
              data.push({
                data: onlineDevices,
                key: _RouterLocalizedStringUtil.localStrings.deviceOnlineDevices
              });
            }

            if (!_CommonUtils.default.isNull(guestDevices) && guestDevices.length > 0) {
              data.push({
                data: guestDevices,
                key: _RouterLocalizedStringUtil.localStrings.deviceGuestDevices
              });
            }

            if (!_CommonUtils.default.isNull(offlineDevices) && offlineDevices.length > 0) {
              data.push({
                data: offlineDevices,
                key: _RouterLocalizedStringUtil.localStrings.deviceofflineDevices
              });
            }

            _this.setState({
              refreshing: false,
              dataSource: data,
              loading: false
            });
          } else {
            _this.setState({
              refreshing: false,
              dataSource: null,
              loading: false
            });
          }
        }).catch(function (e) {
          _this.setState({
            refreshing: false
          });
        });
      };

      _this._onPressUser = function (user) {
        _this.props.navigation.navigate('Detail', {
          user: user
        });
      };

      _this._onPressContent = function (item) {
        if (!_CommonUtils.default.isNull(item.riskLevel)) {
          return;
        }

        _this.props.navigation.navigate('DevicesDetails', {
          item: item
        });
      };

      _this._onPressIgnore = function (item) {
        _this.itemMac = item.mac;

        _this._onPressRiskAction(0);
      };

      _this._onPressBlock = function (item) {
        _this.itemMac = item.mac;

        _this.setState({
          interceptShow: true
        });
      };

      _this.state = {
        refreshing: false,
        dataSource: null,
        loading: true,
        interceptShow: false
      };
      return _this;
    }

    (0, _createClass2.default)(DevicesList, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        _reactNative.DeviceEventEmitter.addListener("ref", function (params) {
          _this2.onRefreshing();
        });
      }
    }, {
      key: "getArrayPosition",
      value: function getArrayPosition(array, key, mac) {
        if (_CommonUtils.default.arrayIsEmpty(array)) {
          return array;
        }

        for (var i = 0; i < array.length; i++) {
          if (array[i].key == key) {
            if (_CommonUtils.default.arrayIsEmpty(array[i].data)) {
              return array;
            } else {
              var length = array[i].data.length;

              for (var i = 0; i < length; i++) {
                if (array[i].data[i].mac == mac) {
                  array[i].data.splice(array[i].data.findIndex(function (e) {
                    return e.id === i;
                  }), 1);
                  return array;
                }
              }
            }
          }
        }

        return array;
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        return _react.default.createElement(_reactNative.SafeAreaView, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            backgroundColor: '#F7F6F8'
          }
        }, _react.default.createElement(_reactNative.SectionList, {
          renderSectionHeader: this._sectionComp,
          showsVerticalScrollIndicator: false,
          stickySectionHeadersEnabled: true,
          renderItem: this._renderItem,
          refreshing: this.state.refreshing,
          onRefresh: this.onRefreshing,
          sections: this.state.dataSource
        }), _react.default.createElement(_ui.LoadingDialog, {
          visible: this.state.loading,
          message: _RouterLocalizedStringUtil.localStrings.waitingLoading
        }), _react.default.createElement(_ui.MessageDialog, {
          title: '拦截提示',
          message: '加入黑名单的设备,将无法连接路由器\n确定要把该设备加入黑名单吗？',
          cancelable: false,
          cancel: '取消',
          confirm: '确定',
          onCancel: function onCancel(e) {
            _this3.setState({
              interceptShow: false
            });
          },
          onConfirm: function onConfirm(e) {
            _this3._onPressRiskAction(1);

            _this3.setState({
              interceptShow: false
            });
          },
          onDismiss: function onDismiss() {
            _this3.setState({
              interceptShow: false
            });
          },
          visible: this.state.interceptShow
        })));
      }
    }, {
      key: "renderExpenseItem",
      value: function renderExpenseItem(item, i) {
        return _react.default.createElement(_ListItem.default, {
          item: item,
          onPressUser: this._onPressUser,
          onPressContent: this._onPressContent
        });
      }
    }]);
    return DevicesList;
  }(_react.default.Component);

  exports.default = DevicesList;

  DevicesList.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: _RouterLocalizedStringUtil.localStrings.homePageDeviceTab,
        style: {
          backgroundColor: '#fff'
        },
        onPressLeft: function onPressLeft(_) {
          return navigation.goBack();
        }
      })
    };
  };
},10334,[14305,14320,14323,14371,14377,14386,10284,10297,10033,10074,10230,10064,10337,10346,10055,10223,10040,10935,10076]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _device = _$$_REQUIRE(_dependencyMap[10]);

  var _Devices = _$$_REQUIRE(_dependencyMap[11]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _PlaceholderImage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _ClientHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _Time = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[18]);

  var _MacAddressManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var ListItem = function (_Component) {
    (0, _inherits2.default)(ListItem, _Component);

    function ListItem(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ListItem);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItem).call(this, props, context));

      _this._renderDevices = function () {
        var item = _this.props.item;
        var isSnsHeaderValid = !_CommonUtils.default.isTextEmpty(item.sns) && !_CommonUtils.default.isTextEmpty(item.sns_head_url);

        var childrenProtectionEnabled = _ClientHelper.default.shouldShowChildTag(item);

        var isWifi6Devices = _ClientHelper.default.isWifi6Devices(item);

        var eventRedTagShouldShow = !_CommonUtils.default.isNull(_ClientHelper.default.getParentControlV2ModeText(item)) && _ClientHelper.default.isOnLine(item) && !_ClientHelper.default.isGuestDevice(item) && !_RouterInfoHelper.default.sharedInstance().isWorkingInRelayMode();
        var image_uri = !_CommonUtils.default.isTextEmpty(item.neg480) ? item.neg480 : isSnsHeaderValid ? item.sns_head_url : _API.default.common_base_path.MIWIFI_S_SERVER + '/icon/' + item.iconUrl;

        var iconAdmin = _$$_REQUIRE(_dependencyMap[21]);

        var default_uri = _$$_REQUIRE(_dependencyMap[22]);

        {}

        var imageSpeedIndex = _ClientHelper.default.signalImageIndex(item);

        var isTimeDisplay = _ClientHelper.default.getEvent(item).originatedTime > 0 && _ClientHelper.default.getEvent(item).timeDisplay == 1;
        return _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            return _this._onPressContent(item);
          },
          style: styles.itemHeaderParents
        }, _react.default.createElement(_reactNative.View, {
          style: styles.itemHeader
        }, _react.default.createElement(_PlaceholderImage.default, {
          style: {
            width: 42,
            height: 42,
            opacity: _ClientHelper.default.isOnLine(item) ? 1 : 0.6,
            borderRadius: 10,
            marginHorizontal: 5
          },
          placeholderSource: default_uri,
          source: {
            uri: image_uri
          }
        }), _ClientHelper.default.isSameMac(item, _this.state.mac) ? _react.default.createElement(_reactNative.View, {
          style: {
            width: 20,
            height: 50,
            flexDirection: 'column',
            position: 'absolute',
            left: 5,
            top: 5
          }
        }, _react.default.createElement(_PlaceholderImage.default, {
          style: {
            width: 20,
            height: 20,
            opacity: 1,
            resizeMode: 'contain',
            borderRadius: 5
          },
          source: iconAdmin
        })) : null, _react.default.createElement(_reactNative.View, {
          style: styles.deviceContent
        }, _react.default.createElement(_reactNative.View, {
          style: styles.deviceContentRowParentView
        }, isWifi6Devices ? _react.default.createElement(_reactNative.View, {
          style: styles.deviceContentRowTopView
        }, _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: styles.deviceNameText
        }, _ClientHelper.default.getDisplayName(item)), _react.default.createElement(_reactNative.Text, {
          style: styles.wifi6_tag
        }, ' WiFi 6 ')) : _react.default.createElement(_reactNative.View, {
          style: styles.deviceContentRowTopView
        }, _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: styles.deviceNameTextMax
        }, _ClientHelper.default.getDisplayName(item)))), _react.default.createElement(_reactNative.View, {
          style: styles.deviceContentRowTopView
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.deviceConnectTypeText
        }, _ClientHelper.default.getEventText(item)), isTimeDisplay ? _react.default.createElement(_reactNative.Text, {
          style: styles.deviceConnectTimeText
        }, (0, _Time.default)(_ClientHelper.default.getEvent(item).duration * 1000, _ClientHelper.default.getEvent(item).originatedTime * 1000)) : null, childrenProtectionEnabled && _ClientHelper.default.isOnLine(item) ? _react.default.createElement(_reactNative.Text, {
          style: styles.child_tag
        }, _RouterLocalizedStringUtil.localStrings.deviceChildProtect) : null, eventRedTagShouldShow ? _react.default.createElement(_reactNative.Text, {
          style: styles.event_red_tag
        }, _ClientHelper.default.getParentControlV2ModeText(item)) : null)), _react.default.createElement(_reactNative.Image, {
          style: styles.detail,
          source: _$$_REQUIRE(_dependencyMap[23])
        })));
      };

      _this._onPressUser = function (user) {
        var onPressUser = _this.props.onPressUser;
        onPressUser && onPressUser(user);
      };

      _this._onPressContent = function (item) {
        var onPressContent = _this.props.onPressContent;
        onPressContent && onPressContent(item);
      };

      _this.state = {
        mac: ''
      };
      return _this;
    }

    (0, _createClass2.default)(ListItem, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, this._renderDevices());
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        return _regenerator.default.async(function componentDidMount$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.t0 = this;
                _context.next = 3;
                return _regenerator.default.awrap(_MacAddressManager.default.syncGetMac());

              case 3:
                _context.t1 = _context.sent;
                _context.t2 = {
                  mac: _context.t1
                };

                _context.t0.setState.call(_context.t0, _context.t2);

              case 6:
              case "end":
                return _context.stop();
            }
          }
        }, null, this);
      }
    }]);
    return ListItem;
  }(_react.Component);

  exports.default = ListItem;

  var styles = _reactNative.StyleSheet.create({
    item: {
      backgroundColor: '#fff',
      padding: 5
    },
    itemHeaderParents: {
      flex: 1,
      height: 60,
      flexDirection: 'row',
      alignItems: 'center',
      paddingRight: 10
    },
    itemHeader: {
      height: 60,
      flexDirection: 'row',
      alignItems: 'center',
      flex: 1
    },
    detail: {
      width: 20,
      height: 20,
      resizeMode: 'contain'
    },
    deviceIcon: {
      width: 50,
      height: 50,
      borderRadius: 10,
      marginHorizontal: 5
    },
    deviceSignalIcon: {
      width: 15,
      height: 15,
      marginHorizontal: 5
    },
    deviceNameText: {
      maxWidth: _Devices.ScreenW / 2,
      alignSelf: 'center',
      fontSize: 15,
      fontWeight: 'bold',
      color: '#000000'
    },
    deviceNameTextMax: {
      maxWidth: _Devices.ScreenW / 1.5,
      fontFamily: '',
      alignSelf: 'center',
      fontSize: 15,
      fontWeight: 'bold',
      color: '#000000'
    },
    deviceSignalText: {
      alignSelf: 'center',
      fontSize: 10,
      marginStart: 5,
      color: '#999999'
    },
    deviceConnectTypeText: {
      fontSize: 12,
      color: '#7F7F7F',
      marginTop: 2
    },
    deviceConnectTimeText: {
      fontSize: 12,
      color: '#7F7F7F',
      marginStart: 5,
      marginTop: 2
    },
    deviceConnectTagText: {
      fontSize: 11,
      color: '#F68A51',
      marginTop: 5,
      marginStart: 2
    },
    deviceContent: {
      marginTop: 10,
      marginHorizontal: 10,
      justifyContent: 'flex-start',
      height: 50,
      flex: 1
    },
    deviceContentRowSignalView: {
      flexDirection: 'row',
      marginBottom: 20
    },
    deviceContentRowTopView: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    deviceContentRowParentView: {
      flexDirection: 'row'
    },
    deviceContentColumView: {
      flexDirection: 'column',
      alignItems: 'flex-start'
    },
    child_tag: {
      fontSize: 10,
      color: '#47C9A9',
      paddingLeft: 2,
      paddingRight: 2,
      marginStart: 5,
      marginTop: 5,
      borderWidth: 0.5,
      borderRadius: 2,
      borderColor: '#D5FCF2',
      backgroundColor: '#D5FCF2'
    },
    event_red_tag: {
      fontSize: 10,
      color: '#FF746A',
      paddingLeft: 2,
      paddingRight: 2,
      marginStart: 5,
      marginTop: 5,
      borderWidth: 0.5,
      borderRadius: 2,
      borderColor: '#FFEDEC',
      backgroundColor: '#FFEDEC'
    },
    wifi6_tag: {
      fontSize: 8,
      color: '#48ABF1',
      fontWeight: 'bold',
      paddingHorizontal: 2,
      marginStart: 5,
      marginTop: 5,
      borderWidth: 0.5,
      borderRadius: 3,
      borderColor: '#48ABF1',
      backgroundColor: '#fff'
    }
  });

  ListItem.propTypes = {
    item: _propTypes.default.object.isRequired,
    onPressUser: _propTypes.default.func,
    onPressContent: _propTypes.default.func
  };
},10337,[14308,14305,14674,14320,14323,14371,14377,14386,10297,10033,10935,10067,10318,10064,10241,10040,10223,10226,10055,10079,10076,10340,10244,10343]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "90eedd1a0d5b9f6bbea59693b0b806e4",
    "name": "client_device_list_icon_admin",
    "type": "png"
  });
},10340,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/common",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "e7d83db230d068277bec34e67375fae5",
    "name": "icon_row",
    "type": "png"
  });
},10343,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _device = _$$_REQUIRE(_dependencyMap[10]);

  var _Devices = _$$_REQUIRE(_dependencyMap[11]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _miot = _$$_REQUIRE(_dependencyMap[13]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _PlaceholderImage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _ClientHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[18]);

  var RiskItem = function (_Component) {
    (0, _inherits2.default)(RiskItem, _Component);

    function RiskItem() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, RiskItem);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(RiskItem)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this._renderDevices = function () {
        var item = _this.props.item;
        var image_uri = _API.default.common_base_path.MIWIFI_S_SERVER + '/icon/' + item.bigIconUrl;

        var default_uri = _$$_REQUIRE(_dependencyMap[19]);

        return _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            return _this._onPressContent(item);
          },
          style: styles.itemHeaderParents
        }, _react.default.createElement(_reactNative.View, {
          style: styles.itemHeader
        }, _react.default.createElement(_PlaceholderImage.default, {
          style: {
            width: 42,
            height: 42,
            opacity: 1,
            borderRadius: 10,
            marginHorizontal: 5
          },
          placeholderSource: default_uri,
          source: {
            uri: image_uri
          }
        }), _react.default.createElement(_reactNative.View, {
          style: styles.deviceContent
        }, _react.default.createElement(_reactNative.View, {
          style: styles.deviceContentRowParentView
        }, _react.default.createElement(_reactNative.View, {
          style: styles.deviceContentRowTopView
        }, _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: styles.deviceNameTextMax
        }, _ClientHelper.default.getRiskDeviceDisplayName(item)))), _react.default.createElement(_reactNative.View, {
          style: styles.deviceContentRowTopView
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.deviceConnectTypeText
        }, _ClientHelper.default.getRiskMessageText(item)))), _ClientHelper.default.riskDeviceIsYou(item, _this.mac) ? null : _react.default.createElement(_reactNative.View, {
          style: styles.deviceContentRowTopView
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.event_red_tag,
          onPress: function onPress() {
            return _this._onPressRisk(0, item);
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.tagIgonreText
        }, "\u4FE1\u4EFB")), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.child_tag,
          onPress: function onPress() {
            return _this._onPressRisk(1, item);
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.tagBlockText
        }, "\u62C9\u9ED1")))));
      };

      _this._onPressRisk = function (type, item) {
        if (type == 1) {
          _this._onPressBlock(item);
        } else {
          _this._onPressIgnore(item);
        }
      };

      _this._onPressUser = function (user) {
        var onPressUser = _this.props.onPressUser;
        onPressUser && onPressUser(user);
      };

      _this._onPressContent = function (item) {
        var onPressContent = _this.props.onPressContent;
        onPressContent && onPressContent(item);
      };

      _this._onPressIgnore = function (item) {
        var onPressIgnore = _this.props.onPressIgnore;
        onPressIgnore && onPressIgnore(item);
      };

      _this._onPressBlock = function (item) {
        var onPressBlock = _this.props.onPressBlock;
        onPressBlock && onPressBlock(item);
      };

      return _this;
    }

    (0, _createClass2.default)(RiskItem, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, this._renderDevices());
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        return _regenerator.default.async(function componentDidMount$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return _regenerator.default.awrap(MacAddressManager.syncGetMac());

              case 2:
                this.mac = _context.sent;

              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, null, this);
      }
    }]);
    return RiskItem;
  }(_react.Component);

  exports.default = RiskItem;

  var styles = _reactNative.StyleSheet.create({
    item: {
      backgroundColor: '#fff',
      padding: 5
    },
    itemHeaderParents: {
      flex: 1,
      height: 60,
      flexDirection: 'row',
      alignItems: 'center',
      paddingRight: 10
    },
    itemHeader: {
      height: 60,
      flexDirection: 'row',
      alignItems: 'center',
      flex: 1
    },
    detail: {
      width: 20,
      height: 20,
      resizeMode: 'contain'
    },
    deviceIcon: {
      width: 50,
      height: 50,
      borderRadius: 10,
      marginHorizontal: 5
    },
    deviceSignalIcon: {
      width: 15,
      height: 15,
      marginHorizontal: 5
    },
    deviceNameText: {
      maxWidth: _Devices.ScreenW / 2,
      alignSelf: 'center',
      fontSize: 15,
      fontWeight: 'bold',
      color: '#000000'
    },
    deviceNameTextMax: {
      maxWidth: _Devices.ScreenW / 1.5,
      fontFamily: '',
      alignSelf: 'center',
      fontSize: 15,
      fontWeight: 'bold',
      color: 'red'
    },
    deviceSignalText: {
      alignSelf: 'center',
      fontSize: 10,
      marginStart: 5,
      color: '#999999'
    },
    deviceConnectTypeText: {
      fontSize: 12,
      color: '#7F7F7F',
      marginTop: 2
    },
    deviceConnectTimeText: {
      fontSize: 12,
      color: '#7F7F7F',
      marginStart: 5,
      marginTop: 2
    },
    deviceConnectTagText: {
      fontSize: 11,
      color: '#F68A51',
      marginTop: 5,
      marginStart: 2
    },
    deviceContent: {
      marginHorizontal: 10,
      marginTop: 10,
      justifyContent: 'flex-start',
      height: 50,
      flex: 1
    },
    deviceContentRowSignalView: {
      flexDirection: 'row',
      marginBottom: 20
    },
    deviceContentRowTopView: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    deviceContentRowParentView: {
      flexDirection: 'row'
    },
    deviceContentColumView: {
      flexDirection: 'column',
      alignItems: 'flex-start'
    },
    child_tag: {
      paddingHorizontal: 10,
      paddingVertical: 5,
      marginHorizontal: 3,
      marginTop: 5,
      borderWidth: 1,
      borderRadius: 20,
      borderColor: '#D5FCF2',
      backgroundColor: '#D5FCF2'
    },
    tagIgonreText: {
      fontSize: 12,
      color: '#47C9A9'
    },
    tagBlockText: {
      fontSize: 12,
      color: '#FF746A'
    },
    event_red_tag: {
      paddingHorizontal: 10,
      paddingVertical: 3,
      marginHorizontal: 5,
      marginTop: 5,
      borderWidth: 1,
      borderRadius: 20,
      borderColor: '#FFEDEC',
      backgroundColor: '#FFEDEC'
    },
    wifi6_tag: {
      fontSize: 8,
      color: '#48ABF1',
      fontWeight: 'bold',
      paddingHorizontal: 2,
      marginStart: 5,
      marginTop: 5,
      borderWidth: 0.5,
      borderRadius: 3,
      borderColor: '#48ABF1',
      backgroundColor: '#fff'
    }
  });

  RiskItem.propTypes = {
    item: _propTypes.default.object.isRequired,
    onPressUser: _propTypes.default.func,
    onPressContent: _propTypes.default.func,
    onPressIgnore: _propTypes.default.func,
    onPressBlock: _propTypes.default.func
  };
},10346,[14308,14305,14674,14320,14323,14371,14377,14386,10297,10033,10935,10067,10318,10074,10064,10241,10040,10223,10055,10244]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _ClientHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _PlaceholderImage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Time = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[16]);

  var _DevicesConstant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _DevicesQos = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _RouterInfoHelper = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[19]));

  var _miot = _$$_REQUIRE(_dependencyMap[20]);

  var _Devices = _$$_REQUIRE(_dependencyMap[21]);

  var _BlackList = _$$_REQUIRE(_dependencyMap[22]);

  var _mhuiRn = _$$_REQUIRE(_dependencyMap[23]);

  var _MacAddressManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var _DiskAccess = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

  var ContentDetail = function (_React$Component) {
    (0, _inherits2.default)(ContentDetail, _React$Component);

    function ContentDetail(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ContentDetail);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ContentDetail).call(this, props));

      _this.setValue = function (image_uri, product, company, model) {
        _this.setState({
          image_uri: _API.default.common_base_path.MIWIFI_S_SERVER + '/icon/' + image_uri,
          product: product,
          company: company,
          model: model
        });
      };

      _this.deviceInfoHandler = function (item) {
        _this.props.navigation.navigate('DevicesInfoStatus', {
          item: item,
          callback: _this.setValue,
          'company': _this.state.company,
          'product': _this.state.product,
          'model': _this.state.model
        });
      };

      _this.websiteCallback = function (mode, count) {
        var temNetAcctcl = _this.state.netacctl;
        var temUrlFilter = temNetAcctcl.urlfilter;

        if (!_CommonUtils.default.isNull(mode)) {
          temUrlFilter.mode = mode;
        }

        if (!_CommonUtils.default.isNull(count)) {
          temUrlFilter.mode = mode;
        }

        temNetAcctcl.urlfilter = temUrlFilter;

        _this.setState({
          netacctl: temNetAcctcl
        });

        _this.requestNetacctlStatus();
      };

      _this.parentCtlCallback = function (netacctl) {
        _this.setState({
          netacctl: netacctl
        });
      };

      _this.item = _this.props.navigation.state.params.item;
      var isSnsHeaderValid = !_CommonUtils.default.isTextEmpty(_this.item.sns) && !_CommonUtils.default.isTextEmpty(_this.item.sns_head_url);
      var _product = '',
          _company = '',
          _model = '';

      if (_this.item.userSpecified) {
        _product = _this.item.userSpecifyProduct;
        _company = _this.item.userSpecifyCompany;
        _model = _this.item.userSpecifyModel;
      } else {
        _product = _this.item.product;
        _company = _this.item.company;
        _model = _this.item.model;
      }

      _this.state = {
        'name': _ClientHelper.default.getDisplayName(_this.item),
        'image_uri': !_CommonUtils.default.isTextEmpty(_this.item.neg480) ? _this.item.neg480 : isSnsHeaderValid ? _this.item.sns_head_url : _API.default.common_base_path.MIWIFI_S_SERVER + '/icon/' + _this.item.iconUrl,
        company: _company,
        product: _product,
        model: _model,
        deviceItem: _this.item,
        filterInfo: null,
        noNeedAddToListAlert: false,
        showOpenArnAlert: false,
        confimAddListAlert: false,
        confirmRemoveFromListAlert: false,
        showLoading: false
      };
      _this.timerItmesApi = _API.default.devices.device_parent_control_items.remote;
      _this.netacctlStatusApi = _API.default.devices.device_netacctl_status.remote;
      _this.macFilterApi = _API.default.arn.mac_filter.remote;
      _this.noNeedAddToListAlertMsg = '该设备为有线设备，应该不会蹭到网吧……';
      _this.showOpenArnAlertMsg = '把设备拉入黑名单之前，需要开启防蹭网功能';
      _this.confimAddListAlertMsg = '确定拉黑此设备？如需恢复，可在防蹭网-拦截黑名单中删除。';
      _this.confirmRemoveFromListAlertMsg = '移除黑名单后，路由器将不再拦截该设备\n确定要将选中设备移除黑名单吗？';
      return _this;
    }

    (0, _createClass2.default)(ContentDetail, [{
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        _reactNative.DeviceEventEmitter.emit('ref', 'ContentDetail');

        this.openArnSuccessNotification.remove();
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        var isSupportUSB30;
        return _regenerator.default.async(function componentDidMount$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                this.requestNetacctlStatus();
                this.requestTimerItems();

                if (this.isBlackListRequired()) {
                  this.requestBlackList();
                }

                _context.next = 5;
                return _regenerator.default.awrap(_RouterInfoHelper.default.sharedInstance().synCheckCurrentCapality(_RouterInfoHelper.RouterCapality.isSupportUSB30));

              case 5:
                isSupportUSB30 = _context.sent;
                this.setState({
                  isSupportUSB30: isSupportUSB30
                });
                this.openArnSuccessNotification = _reactNative.DeviceEventEmitter.addListener('openArnSuccessNotification', function () {
                  var filterInfo = _this2.state.filterInfo;
                  filterInfo.enable = true;

                  _this2.setState({
                    filterInfo: filterInfo
                  });
                });

              case 8:
              case "end":
                return _context.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "requestNetacctlStatus",
      value: function requestNetacctlStatus() {
        var _this3 = this;

        var paramsDic = {
          method: 'GET',
          params: {
            mac: this.item.mac,
            deviceId: _miot.Device.deviceID.replace("miwifi.", "")
          }
        };

        _miot.Service.callSmartHomeAPI(this.netacctlStatusApi, paramsDic).then(function (res) {
          if (res.code === 0 && !_CommonUtils.default.isNull(res.status)) {
            _this3.setState({
              netacctl: res.status
            });
          }
        }).catch(function (error) {});
      }
    }, {
      key: "requestTimerItems",
      value: function requestTimerItems() {
        var _this4 = this;

        var paramsDic = {
          method: 'GET',
          params: {
            mac: this.item.mac,
            deviceId: _miot.Device.deviceID.replace("miwifi.", "")
          }
        };

        _miot.Service.callSmartHomeAPI(this.timerItmesApi, paramsDic).then(function (res) {
          if (res.code === 0) {
            var info = res['info'];

            if (!_CommonUtils.default.arrayIsEmpty(info)) {
              _this4.setState({
                timerItemList: info
              });
            }
          }
        }).catch(function (error) {});
      }
    }, {
      key: "getParentControlModeText",
      value: function getParentControlModeText() {
        var mode = this.getLimitMode();
        var text = null;

        if (!_CommonUtils.default.isTextEmpty(mode)) {
          if (mode === _DevicesConstant.default.MODE_FORBID) {
            text = '禁止联网';
          } else if (mode === _DevicesConstant.default.MODE_TIMER) {
            text = '定时断网';
          } else {
            text = '无设置';
          }
        } else {
          text = '无设置';
        }

        return text;
      }
    }, {
      key: "getWebsiteControlModeText",
      value: function getWebsiteControlModeText() {
        var mode = this.getUrlFilterMode();
        var text = null;

        if (!_CommonUtils.default.isTextEmpty(mode)) {
          if (mode === _DevicesConstant.default.FILTER_BLACK) {
            text = this.getUrlFilterNum() + '个黑名单网址';
          } else if (mode === _DevicesConstant.default.FILTER_WHITE) {
            text = this.getUrlFilterNum() + '个白名单网址';
          } else {
            text = '无设置';
          }
        } else {
          text = '无设置';
        }

        return text;
      }
    }, {
      key: "getUrlFilterNum",
      value: function getUrlFilterNum() {
        var count = null;
        var netacctl = this.state.netacctl;

        if (!_CommonUtils.default.isNull(netacctl) && !_CommonUtils.default.isNull(netacctl.urlfilter) && !_CommonUtils.default.isNull(netacctl.urlfilter.count)) {
          count = netacctl.urlfilter.count;
        }

        return count;
      }
    }, {
      key: "getUrlFilterMode",
      value: function getUrlFilterMode() {
        var mode = null;
        var netacctl = this.state.netacctl;

        if (!_CommonUtils.default.isNull(netacctl) && !_CommonUtils.default.isNull(netacctl.urlfilter) && !_CommonUtils.default.isNull(netacctl.urlfilter.mode)) {
          mode = netacctl.urlfilter.mode;
        }

        return mode;
      }
    }, {
      key: "getLimitMode",
      value: function getLimitMode() {
        var mode = null;
        var parentControlInfoV2 = this.state.netacctl;

        if (!_CommonUtils.default.isNull(parentControlInfoV2) && parentControlInfoV2.enable === 1) {
          mode = parentControlInfoV2.mode;
        }

        return mode;
      }
    }, {
      key: "isBlackListRequired",
      value: function isBlackListRequired() {
        return !_RouterInfoHelper.default.sharedInstance().isWorkingInRelayMode();
      }
    }, {
      key: "requestBlackList",
      value: function requestBlackList() {
        var _this5 = this;

        var deviceId = _miot.Device.deviceID.replace('miwifi.', '');

        var paramsDic = {
          method: 'GET',
          params: {
            deviceId: deviceId
          }
        };

        _miot.Service.callSmartHomeAPI(this.macFilterApi, paramsDic).then(function (res) {
          if (res.code === 0) {
            var macFilterModel = new _BlackList.MacFilterModel(res);

            _this5.setState({
              filterInfo: macFilterModel
            });
          }
        }).catch(function (error) {});
      }
    }, {
      key: "isInBlockList",
      value: function isInBlockList() {
        var filterInfo = this.state.filterInfo;

        if (!_CommonUtils.default.isNull(filterInfo)) {
          if (filterInfo.enable && !_CommonUtils.default.arrayIsEmpty(filterInfo.macfilter)) {
            for (var i = 0; i < filterInfo.macfilter.length; i++) {
              var obj = filterInfo.macfilter[i];

              if (obj.mac === this.item.mac) {
                return true;
              }
            }
          }
        }

        return false;
      }
    }, {
      key: "isBlackMode",
      value: function isBlackMode() {
        var filterInfo = this.state.filterInfo;

        if (!_CommonUtils.default.isNull(filterInfo)) {
          return filterInfo.model === 0;
        }

        return false;
      }
    }, {
      key: "bottomButtonTitle",
      value: function bottomButtonTitle() {
        if (this.isBlackMode()) {
          if (!this.isInBlockList()) {
            return '加入黑名单';
          } else {
            return '移除黑名单';
          }
        } else {
          if (!this.isInBlockList()) {
            return '加入白名单';
          } else {
            return '移除白名单';
          }
        }
      }
    }, {
      key: "changeBlackListStatus",
      value: function changeBlackListStatus() {
        var connectionType, curMac;
        return _regenerator.default.async(function changeBlackListStatus$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                connectionType = this.item.connectionType;

                if (!(connectionType === 4)) {
                  _context2.next = 5;
                  break;
                }

                if (this.isBlackMode()) {
                  this.noNeedAddToListAlertMsg = '该设备为有线设备，应该不会蹭到网吧……';
                } else {
                  this.noNeedAddToListAlertMsg = '该设备为有线设备，无需加入白名单';
                }

                this.setState({
                  noNeedAddToListAlert: true
                });
                return _context2.abrupt("return");

              case 5:
                if (this.state.filterInfo.enable) {
                  _context2.next = 8;
                  break;
                }

                this.setState({
                  showOpenArnAlert: true
                });
                return _context2.abrupt("return");

              case 8:
                _context2.next = 10;
                return _regenerator.default.awrap(_MacAddressManager.default.syncGetMac());

              case 10:
                curMac = _context2.sent;

                if (!(curMac === this.item.mac && this.item.online === 1 && !this.isBlackMode())) {
                  _context2.next = 14;
                  break;
                }

                _CommonUtils.default.ShowToastCenter('不可对当前设备进行此操作');

                return _context2.abrupt("return");

              case 14:
                if (!(curMac === this.item.mac && this.isBlackMode())) {
                  _context2.next = 17;
                  break;
                }

                _CommonUtils.default.ShowToastCenter('不可对当前设备进行此操作');

                return _context2.abrupt("return");

              case 17:
                if (this.isInBlockList()) {
                  _context2.next = 23;
                  break;
                }

                if (this.isBlackMode()) {
                  this.confimAddListAlertMsg = '确定拉黑此设备？如需恢复，可在防蹭网-拦截黑名单中删除。';
                } else {
                  this.confimAddListAlertMsg = '确定将此设备加入白名单?';
                }

                this.setState({
                  confimAddListAlert: true
                });
                return _context2.abrupt("return");

              case 23:
                if (this.isBlackMode()) {
                  this.confirmRemoveFromListAlertMsg = '移除黑名单后，路由器将不再拦截该设备\n确定要将选中设备移除黑名单吗？';
                } else {
                  this.confirmRemoveFromListAlertMsg = '移除白名单后，路由器将自动拦截该设备\n确定要将选中设备移除白名单吗？';
                }

                this.setState({
                  confirmRemoveFromListAlert: true
                });
                return _context2.abrupt("return");

              case 26:
              case "end":
                return _context2.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "addCurDeviceToList",
      value: function addCurDeviceToList() {
        var isAdd, isBlack, mac, result;
        return _regenerator.default.async(function addCurDeviceToList$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                isAdd = true;
                isBlack = this.isBlackMode();
                mac = this.item.mac;
                _context3.next = 5;
                return _regenerator.default.awrap(this.editFilterInfo(isAdd, isBlack, mac));

              case 5:
                result = _context3.sent;

                if (result) {
                  if (isBlack) {
                    _CommonUtils.default.ShowToastCenter('已加入黑名单');
                  } else {
                    _CommonUtils.default.ShowToastCenter('已加入白名单');
                  }

                  this.props.navigation.goBack();
                }

              case 7:
              case "end":
                return _context3.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "removeCurDeviceeFormList",
      value: function removeCurDeviceeFormList() {
        var isAdd, isBlack, mac, result;
        return _regenerator.default.async(function removeCurDeviceeFormList$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                isAdd = false;
                isBlack = this.isBlackMode();
                mac = this.item.mac;
                _context4.next = 5;
                return _regenerator.default.awrap(this.editFilterInfo(isAdd, isBlack, mac));

              case 5:
                result = _context4.sent;

                if (result) {
                  if (isBlack) {
                    _CommonUtils.default.ShowToastCenter('解除拉黑成功');
                  } else {
                    _CommonUtils.default.ShowToastCenter('移除白名单成功');
                  }

                  this.props.navigation.goBack();
                }

              case 7:
              case "end":
                return _context4.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "editFilterInfo",
      value: function editFilterInfo(isAdd, isBlack, mac) {
        var _this6 = this;

        var option, model, deviceId, paramsDic;
        return _regenerator.default.async(function editFilterInfo$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                this.setState({
                  showLoading: true
                });
                option = isAdd ? '0' : '1';
                model = isBlack ? '0' : '1';
                deviceId = _miot.Device.deviceID.replace('miwifi.', '');
                paramsDic = {
                  method: 'GET',
                  params: {
                    deviceId: deviceId,
                    deviceID: deviceId,
                    mac: mac,
                    option: option,
                    model: model
                  }
                };
                return _context5.abrupt("return", _miot.Service.callSmartHomeAPI(_API.default.arn.edit_risk_device.remote, paramsDic).then(function (res) {
                  _this6.setState({
                    showLoading: false
                  });

                  if (res.code === 0) {
                    return true;
                  } else {
                    if (res.code === 1591 && isAdd) {
                      _CommonUtils.default.ShowToastCenter('添加失败，最多只能添加32个设备');
                    } else {
                      if (isAdd) {
                        if (isBlack) {
                          _CommonUtils.default.ShowToastCenter('加入黑名单失败');
                        } else {
                          _CommonUtils.default.ShowToastCenter('加入白名单失败');
                        }
                      } else {
                        if (isBlack) {
                          _CommonUtils.default.ShowToastCenter('解除拉黑失败');
                        } else {
                          _CommonUtils.default.ShowToastCenter('移除白名单失败');
                        }
                      }
                    }

                    return false;
                  }
                }).catch(function (error) {
                  _this6.setState({
                    showLoading: false
                  });

                  if (isAdd) {
                    if (isBlack) {
                      _CommonUtils.default.ShowToastCenter('加入黑名单失败');
                    } else {
                      _CommonUtils.default.ShowToastCenter('加入白名单失败');
                    }
                  } else {
                    if (isBlack) {
                      _CommonUtils.default.ShowToastCenter('解除拉黑失败');
                    } else {
                      _CommonUtils.default.ShowToastCenter('移除白名单失败');
                    }
                  }

                  return false;
                }));

              case 6:
              case "end":
                return _context5.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "render",
      value: function render() {
        var _this7 = this;

        var item = this.state.deviceItem;
        var isRepeater = !_CommonUtils.default.isTextEmpty(item.miot_id);

        var default_uri = _$$_REQUIRE(_dependencyMap[26]);

        var isTimeDisplay = _ClientHelper.default.getEvent(item).originatedTime > 0 && _ClientHelper.default.getEvent(item).timeDisplay == 1;

        var upSpeed = _CommonUtils.default.transformSpeedData(item.uSpeed);

        var downSpeed = _CommonUtils.default.transformSpeedData(item.dSpeed);

        var signalText = _ClientHelper.default.signalText(item.wifi_quality);

        return _react.default.createElement(_reactNative.View, {
          style: styles.wrapper
        }, _react.default.createElement(_reactNative.ScrollView, {
          style: styles.sv
        }, _react.default.createElement(_reactNative.View, {
          style: styles.svContent
        }, _react.default.createElement(_PlaceholderImage.default, {
          style: {
            width: 76,
            height: 76,
            opacity: _ClientHelper.default.isOnLine(this.state.deviceItem) ? 1 : 0.6,
            marginBottom: 7,
            marginLeft: 15
          },
          placeholderSource: default_uri,
          source: {
            uri: this.state.image_uri
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.name
        }, this.state.name), isTimeDisplay ? _react.default.createElement(_reactNative.Text, {
          style: styles.deviceConnectTimeText
        }, (0, _Time.default)(_ClientHelper.default.getEvent(item).duration * 1000, _ClientHelper.default.getEvent(item).originatedTime * 1000)) : null, _react.default.createElement(_reactNative.View, {
          style: styles.box
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.boxbg,
          source: _$$_REQUIRE(_dependencyMap[27])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.boxTitle
        }, "\u6D41\u91CF\u6D88\u8017"), _react.default.createElement(_reactNative.Text, {
          style: styles.boxValue
        }, _CommonUtils.default.formatBytes(item.totalRX))), _react.default.createElement(_reactNative.View, {
          style: styles.threebox
        }, _react.default.createElement(_reactNative.View, {
          style: styles.threeboxItem
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.boxTitle
        }, "\u4E0A\u4F20\u901F\u5EA6", upSpeed['transformedUnit']), _react.default.createElement(_reactNative.Text, {
          style: styles.boxValue
        }, upSpeed['transformedSpeed'])), _react.default.createElement(_reactNative.View, {
          style: [styles.threeboxItem, styles.middle]
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.boxTitle
        }, "\u4E0B\u8F7D\u901F\u5EA6", downSpeed['transformedUnit']), _react.default.createElement(_reactNative.Text, {
          style: styles.boxValue
        }, downSpeed['transformedSpeed'])), _react.default.createElement(_reactNative.View, {
          style: styles.threeboxItem
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.boxTitle
        }, "\u4FE1\u53F7\u5F3A\u5EA6"), _react.default.createElement(_reactNative.Text, {
          style: styles.boxValue
        }, signalText))), this.state.isSupportUSB30 && !_ClientHelper.default.isGuestDevice(item) ? _react.default.createElement(_DiskAccess.default, {
          item: item
        }) : null, !_ClientHelper.default.isGuestDevice(item) && !_RouterInfoHelper.default.sharedInstance().isWorkingInRelayMode() ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_DevicesQos.default, {
          navigation: this.props.navigation,
          mac: item.mac
        }), !isRepeater && _react.default.createElement(_reactNative.View, null, _react.default.createElement(_ListItem.ListItem, {
          title: "\u7981\u6B62\u8054\u7F51",
          subtitle: "\u63A7\u5236\u8BBE\u5907\u8054\u7F51\u65F6\u95F4",
          value: this.getParentControlModeText(),
          hideArrow: false,
          titleStyle: styles.titleStyle,
          subtitleStyle: styles.subtitleStyle,
          valueStyle: styles.valueStyle,
          onPress: function onPress(_) {
            _this7.props.navigation.navigate('DeviceAccessControl', {
              titleText: '禁止联网',
              deviceItem: item,
              netacctl: _this7.state.netacctl,
              callback: _this7.parentCtlCallback
            });
          },
          showSeparator: false
        }), _react.default.createElement(_ListItem.ListItem, {
          title: "\u8BBF\u95EE\u63A7\u5236",
          subtitle: "\u63A7\u5236\u8BBE\u5907\u8054\u7F51\u884C\u4E3A",
          value: this.getWebsiteControlModeText(),
          hideArrow: false,
          titleStyle: styles.titleStyle,
          subtitleStyle: styles.subtitleStyle,
          valueStyle: styles.valueStyle,
          onPress: function onPress(_) {
            _this7.props.navigation.navigate('WebsiteAccessControl', {
              titleText: '访问控制',
              mac: item.mac,
              mode: _this7.getUrlFilterMode(),
              deviceItem: item,
              netacctl: _this7.state.netacctl,
              callback: _this7.websiteCallback
            });
          },
          showSeparator: false
        }))) : null, _react.default.createElement(_ListItem.ListItem, {
          title: "\u8BBE\u5907\u4FE1\u606F",
          subtitle: "\u8BBE\u5907\u8054\u7F51\u72B6\u6001\u548C\u8BE6\u7EC6\u4FE1\u606F",
          value: "",
          hideArrow: false,
          titleStyle: styles.titleStyle,
          subtitleStyle: styles.subtitleStyle,
          valueStyle: styles.valueStyle,
          onPress: function onPress() {
            _this7.deviceInfoHandler(item);
          },
          showSeparator: false
        }))), this.isBlackListRequired() && !_CommonUtils.default.isNull(this.state.filterInfo) ? _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.bottomContainer,
          onPress: function onPress() {
            _this7.changeBlackListStatus();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.bottomText
        }, this.bottomButtonTitle())) : null, _react.default.createElement(_mhuiRn.MessageDialog, {
          visible: this.state.noNeedAddToListAlert,
          title: '',
          message: this.noNeedAddToListAlertMsg,
          buttons: [{
            text: '知道了',
            style: {
              color: '#000'
            },
            callback: function callback() {
              _this7.setState({
                noNeedAddToListAlert: false
              });
            }
          }],
          onDismiss: function onDismiss() {
            _this7.setState({
              noNeedAddToListAlert: false
            });
          }
        }), _react.default.createElement(_mhuiRn.MessageDialog, {
          visible: this.state.showOpenArnAlert,
          title: '',
          message: this.showOpenArnAlertMsg,
          buttons: [{
            text: '取消',
            style: {
              color: '#000'
            },
            callback: function callback() {
              _this7.setState({
                showOpenArnAlert: false
              });
            }
          }, {
            text: '确定',
            style: {
              color: '#000'
            },
            callback: function callback() {
              _this7.setState({
                showOpenArnAlert: false
              });

              _this7.props.navigation.navigate('BlackListStatus');
            }
          }],
          onDismiss: function onDismiss() {
            _this7.setState({
              showOpenArnAlert: false
            });
          }
        }), _react.default.createElement(_mhuiRn.MessageDialog, {
          visible: this.state.confimAddListAlert,
          title: '',
          message: this.confimAddListAlertMsg,
          buttons: [{
            text: '取消',
            style: {
              color: '#000'
            },
            callback: function callback() {
              _this7.setState({
                confimAddListAlert: false
              });
            }
          }, {
            text: '确定',
            style: {
              color: '#000'
            },
            callback: function callback() {
              _this7.setState({
                confimAddListAlert: false
              });

              _this7.addCurDeviceToList();
            }
          }],
          onDismiss: function onDismiss() {
            _this7.setState({
              confimAddListAlert: false
            });
          }
        }), _react.default.createElement(_mhuiRn.MessageDialog, {
          visible: this.state.confirmRemoveFromListAlert,
          title: '',
          message: this.confirmRemoveFromListAlertMsg,
          buttons: [{
            text: '取消',
            style: {
              color: '#000'
            },
            callback: function callback() {
              _this7.setState({
                confirmRemoveFromListAlert: false
              });
            }
          }, {
            text: '确定',
            style: {
              color: '#000'
            },
            callback: function callback() {
              _this7.setState({
                confirmRemoveFromListAlert: false
              });

              _this7.removeCurDeviceeFormList();
            }
          }],
          onDismiss: function onDismiss() {
            _this7.setState({
              confirmRemoveFromListAlert: false
            });
          }
        }), _react.default.createElement(_mhuiRn.LoadingDialog, {
          visible: this.state.showLoading,
          message: ''
        }));
      }
    }]);
    return ContentDetail;
  }(_react.default.Component);

  exports.default = ContentDetail;

  ContentDetail.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: "\u8BBE\u5907\u8BE6\u60C5",
        style: {
          backgroundColor: '#fff'
        },
        onPressLeft: function onPressLeft(_) {
          return navigation.goBack();
        }
      })
    };
  };

  var styles = _reactNative.StyleSheet.create({
    wrapper: {
      backgroundColor: '#fff',
      flex: 1
    },
    sv: {
      flex: 1
    },
    svContent: {
      paddingTop: 60
    },
    name: {
      fontSize: 30,
      color: '#333',
      marginLeft: 24
    },
    deviceConnectTimeText: {
      fontSize: 16,
      color: '#333',
      paddingLeft: 1,
      paddingTop: 2,
      marginLeft: 24
    },
    box: {
      borderWidth: 1,
      borderColor: '#e5e5e5',
      borderRadius: 12,
      marginLeft: 15,
      marginRight: 15,
      paddingTop: 22,
      paddingBottom: 22,
      marginTop: 22,
      overflow: 'hidden'
    },
    boxbg: {
      position: 'absolute',
      left: 0,
      bottom: 0,
      width: '100%',
      resizeMode: 'cover',
      height: 40
    },
    boxTitle: {
      fontSize: 12,
      color: '#666',
      marginLeft: 9
    },
    boxValue: {
      fontSize: 24,
      color: '#333',
      marginLeft: 9
    },
    threebox: {
      flexDirection: 'row',
      justifyContent: 'space-between',
      marginLeft: 15,
      marginRight: 15,
      paddingTop: 12
    },
    threeboxItem: {
      borderWidth: 1,
      borderColor: '#e5e5e5',
      borderRadius: 12,
      paddingLeft: 12,
      paddingTop: 23,
      paddingBottom: 6,
      flex: 1
    },
    middle: {
      marginLeft: 12,
      marginRight: 12
    },
    titleStyle: {
      fontSize: 16,
      fontWeight: 'bold'
    },
    subtitleStyle: {
      fontSize: 13,
      color: '#7f7f7f'
    },
    valueStyle: {
      fontSize: 13,
      color: '#999'
    },
    bottomContainer: {
      backgroundColor: '#eee',
      height: 45,
      borderRadius: 22.5,
      marginLeft: 20,
      marginRight: 20,
      marginBottom: _Devices.isiPhoneX ? 50 : 15,
      justifyContent: 'center',
      alignItems: 'center'
    },
    bottomText: {
      color: 'red',
      fontSize: 16
    }
  });
},10349,[14308,14305,14674,14320,14323,14371,14377,14386,10284,10297,10033,10223,10241,10040,10064,10226,10338,10229,10352,10076,10074,10067,10364,22411,10079,10379,10244,10382]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[7]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _Devices = _$$_REQUIRE(_dependencyMap[9]);

  var _Slider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _ui = _$$_REQUIRE(_dependencyMap[12]);

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[13]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _device = _$$_REQUIRE(_dependencyMap[15]);

  var _miot = _$$_REQUIRE(_dependencyMap[16]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _QosHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _ClientHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var DevicesQos = function (_React$Component) {
    (0, _inherits2.default)(DevicesQos, _React$Component);

    function DevicesQos(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, DevicesQos);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DevicesQos).call(this, props, context));
      _this.state = {
        upload_value: 0,
        download_value: 0,
        upload_band: 0.0,
        download_band: 0.0,
        loading: false,
        isShow: true,
        on: false,
        remoteOn: false,
        upBand: 0.0,
        DownBand: 0.0,
        QosAlertVisible: false,
        qosFatherSwitchStatus: false
      };
      return _this;
    }

    (0, _createClass2.default)(DevicesQos, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.listener = _reactNative.DeviceEventEmitter.addListener("QosSwitch", function (params) {
          if (params == 1 && _this2.state.remoteOn == false) {
            _this2._QosSwitch(true);
          }
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.listener) {
          this.listener.remove();
        }
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        this.getQosInfoForSwitch();
      }
    }, {
      key: "_getQosInfoNo",
      value: function _getQosInfoNo() {
        if (_RouterInfoHelper.default.sharedInstance().isWorkingInRelayMode()) {
          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.tool_not_support_relay);
        }
      }
    }, {
      key: "getQosInfoForSwitch",
      value: function getQosInfoForSwitch() {
        var _this3 = this;

        this.setState({
          loading: true
        });

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var macList = _QosHelper.default.getQosMacParam();

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceID: deviceId,
            deviceId: deviceId,
            macs: macList
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.get_qos_info.remote, paramsDic).then(function (res) {
          _this3.setState({
            loading: false
          });

          if (res.code == 0) {
            _this3.setState({
              qosFatherSwitchStatus: res.status.on == 1
            });

            _this3._QosDevInfo();
          } else {
            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.common_refreshing_retry);

            _this3.props.navigation.goBack();
          }
        }).catch(function (e) {
          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.common_refreshing_retry);

          _this3.setState({
            loading: false
          });

          _this3.props.navigation.goBack();
        });
      }
    }, {
      key: "_getQosInfo",
      value: function _getQosInfo(value) {
        if (value && !this.state.qosFatherSwitchStatus) {
          this.setState({
            QosAlertVisible: true
          });
        } else {
          this._QosSwitch(value);
        }
      }
    }, {
      key: "_QosDevInfo",
      value: function _QosDevInfo() {
        var _this4 = this;

        this.setState({
          loading: true
        });

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceID: deviceId,
            deviceId: deviceId,
            mac: this.props.mac
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.device_qos_dev_info.remote, paramsDic).then(function (res) {
          if (res.code == 0) {
            var upload = res.band.upload;
            var download = res.band.download;
            var upmax = res.limit.upmax;
            var downmax = res.limit.downmax;

            var cacheUp1 = _CommonUtils.default.getFloat(upmax / 1024, 3);

            var cacheUp2 = _CommonUtils.default.getFloat(upload / 8, 3);

            var cacheDown1 = _CommonUtils.default.getFloat(downmax / 1024, 3);

            var cacheDown2 = _CommonUtils.default.getFloat(download / 8, 3);

            var percent_up = _ClientHelper.default.isLimitValid(_CommonUtils.default.getFloat(cacheUp1 / cacheUp2, 3)) ? _CommonUtils.default.getFloat(cacheUp1 / cacheUp2, 3) : 1;
            var percent = _ClientHelper.default.isLimitValid(_CommonUtils.default.getFloat(cacheDown1 / cacheDown2, 3)) ? _CommonUtils.default.getFloat(cacheDown1 / cacheDown2, 3) : 1;

            _this4.setState({
              loading: false,
              on: _CommonUtils.default.isNull(res.limit.flag) ? false : res.limit.flag == 'on',
              upload_value: percent_up > 1 ? 100 : percent_up * 100,
              download_value: percent > 1 ? 100 : percent * 100,
              upload_band: _CommonUtils.default.isNull(percent_up) ? 0.0 : _CommonUtils.default.getFloat(percent_up * cacheUp2, 3),
              download_band: _CommonUtils.default.isNull(percent) ? 0.0 : _CommonUtils.default.getFloat(percent * cacheDown2, 3),
              loading: false,
              upBand: cacheUp2,
              DownBand: cacheDown2
            });
          }
        }).catch(function (e) {
          _this4.setState({
            loading: false
          });

          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.common_refreshing_retry);
        });
      }
    }, {
      key: "_QosSwitch",
      value: function _QosSwitch(value) {
        var _this5 = this;

        this.setState({
          loading: true,
          qosFatherSwitchStatus: true
        });

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var mac = this.props.mac;
        var flag = value ? 'on' : 'off';
        var paramsDic = {
          method: method,
          params: {
            deviceID: deviceId,
            deviceId: deviceId,
            mac: mac,
            flag: flag
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.device_qos_limit_flag.remote, paramsDic).then(function (res) {
          if (res.code == 0) {
            _this5.setState({
              loading: false,
              on: value,
              remoteOn: value
            });

            _this5._QosDevInfo();

            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeSuccess);
          } else {
            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeFail);
          }
        }).catch(function (e) {
          _this5.setState({
            loading: false
          });

          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeFail);
        });
      }
    }, {
      key: "_fetchData",
      value: function _fetchData() {
        var _this6 = this;

        this.setState({
          loading: true
        });

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var percentChange = this.state.download_value / 100;
        var percentUpChange = this.state.upload_value / 100;
        var paramsDic = {
          method: method,
          params: {
            deviceID: deviceId,
            deviceId: deviceId,
            mac: this.props.mac,
            download: _CommonUtils.default.getFloat(this.state.download_band * 1024, 3),
            upload: _CommonUtils.default.getFloat(this.state.upload_band * 1024, 3)
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.device_qos_set_dev_info.remote, paramsDic).then(function (res) {
          if (res.code == 0) {
            _this6.setState({
              loading: false
            });

            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeSuccess);
          } else {
            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeFail);
          }
        }).catch(function (e) {
          _this6.setState({
            loading: false
          });

          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeFail);
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this7 = this;

        return _react.default.createElement(_reactNative.SafeAreaView, {
          style: styles.column_container
        }, !_RouterInfoHelper.default.sharedInstance().isWorkingInRelayMode() ? _react.default.createElement(_reactNative.View, {
          style: styles.column_container
        }, _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: '智能限速',
          titleStyle: styles.titleStyle,
          value: this.state.qosFatherSwitchStatus ? this.state.on : false,
          disabled: _RouterInfoHelper.default.sharedInstance().isWorkingInRelayMode(),
          showSeparator: false,
          onPress: function onPress(_) {
            return _this7._getQosInfoNo();
          },
          onValueChange: function onValueChange(value) {
            return _this7._getQosInfo(value);
          }
        }), (this.state.qosFatherSwitchStatus ? this.state.on : false) ? _react.default.createElement(_reactNative.View, {
          style: styles.parents
        }, _react.default.createElement(_reactNative.View, {
          style: styles.row_item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text_h3
        }, "\u4E0A\u4F20"), _react.default.createElement(_reactNative.Text, {
          style: styles.text_h4
        }, _QosHelper.default.formatBytesForRate(this.state.upload_band * 1024 * 1024, 2))), _react.default.createElement(_Slider.default, {
          minimumValue: 1,
          maximumValue: 100,
          trackStyle: styles.track,
          thumbStyle: styles.thumb,
          minimumTrackTintColor: "#1073ff",
          maximumTrackTintColor: "#b7b7b7",
          value: this.state.upload_value,
          step: 0.1,
          onSlidingComplete: function onSlidingComplete(value) {
            return _this7._fetchData();
          },
          onValueChange: function onValueChange(value) {
            return _this7.setState({
              upload_value: value,
              upload_band: _CommonUtils.default.getFloat(value / 100 * _this7.state.upBand, 3)
            });
          }
        }), _react.default.createElement(_reactNative.View, {
          style: styles.row_item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text_h3
        }, "\u4E0B\u8F7D"), _react.default.createElement(_reactNative.Text, {
          style: styles.text_h4
        }, _QosHelper.default.formatBytesForRate(this.state.download_band * 1024 * 1024, 2))), _react.default.createElement(_Slider.default, {
          minimumValue: 0.1,
          maximumValue: 100,
          trackStyle: styles.track,
          thumbStyle: styles.thumb,
          minimumTrackTintColor: "#1073ff",
          maximumTrackTintColor: "#b7b7b7",
          value: this.state.download_value,
          step: 1,
          onSlidingComplete: function onSlidingComplete(value) {
            return _this7._fetchData();
          },
          onValueChange: function onValueChange(value) {
            return _this7.setState({
              download_value: value,
              download_band: _CommonUtils.default.getFloat(value / 100 * _this7.state.DownBand, 3)
            });
          }
        })) : null, _react.default.createElement(_reactNative.View, {
          style: styles.parents
        })) : null, _react.default.createElement(_ui.LoadingDialog, {
          visible: this.state.loading,
          message: _RouterLocalizedStringUtil.localStrings.waitingLoading
        }), _react.default.createElement(_ui.MessageDialog, {
          title: _RouterLocalizedStringUtil.localStrings.alertTipText,
          message: '运行智能限速前，需要开启智能限速功能',
          cancelable: false,
          cancel: _RouterLocalizedStringUtil.localStrings.alertCancelTitle,
          confirm: _RouterLocalizedStringUtil.localStrings.alertOKTitle,
          onCancel: function onCancel(e) {
            _this7.setState({
              QosAlertVisible: false
            });
          },
          onConfirm: function onConfirm(e) {
            _this7.setState({
              QosAlertVisible: false
            });

            _this7.props.navigation.navigate('QosEntry', {
              title: 'Qos限速'
            });
          },
          onDismiss: function onDismiss() {
            _this7.setState({
              QosAlertVisible: false
            });
          },
          visible: this.state.QosAlertVisible
        }));
      }
    }]);
    return DevicesQos;
  }(_react.default.Component);

  exports.default = DevicesQos;
  DevicesQos.propTypes = {
    mac: _propTypes.default.string.isRequired
  };
  DevicesQos.defaultProps = {
    mac: ''
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      width: _Devices.ScreenW / 10 * 9,
      alignItems: "stretch",
      justifyContent: 'center'
    },
    parents: {
      flex: 1,
      width: _Devices.ScreenW / 10 * 8.8,
      marginLeft: 20,
      marginRight: 20,
      alignItems: "stretch",
      justifyContent: 'flex-start'
    },
    column_container: {
      flexDirection: 'column',
      alignItems: 'center',
      flex: 1,
      backgroundColor: 'white'
    },
    row_item: {
      marginTop: 10,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'flex-start'
    },
    track: {
      height: 18,
      borderRadius: 10
    },
    thumb: {
      width: 20,
      height: 20,
      borderRadius: 10,
      backgroundColor: 'white',
      shadowColor: 'black',
      shadowOffset: {
        width: 0,
        height: 2
      },
      shadowRadius: 2,
      shadowOpacity: 0.35
    },
    text_h1: {
      marginTop: 10,
      fontSize: 12,
      color: '#8C93B0'
    },
    text_h2: {
      marginVertical: 20,
      textAlign: 'center',
      fontSize: 14,
      color: '#000000'
    },
    text_h3: {
      marginVertical: 5,
      textAlign: 'center',
      fontSize: 14,
      fontWeight: 'bold',
      color: '#000000'
    },
    text_h4: {
      marginHorizontal: 20,
      width: 100,
      fontSize: 12,
      color: '#7F7F7F'
    },
    titleStyle: {
      fontSize: 16,
      fontWeight: 'bold'
    }
  });
},10352,[14305,14320,14323,14371,14377,14386,10297,10338,10033,10067,10355,10040,10230,10055,10064,10935,10074,10318,10332,10358,10076,10223]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var TRACK_SIZE = 4;
  var THUMB_SIZE = 20;

  function Rect(x, y, width, height) {
    this.x = x;
    this.y = y;
    this.width = width;
    this.height = height;
  }

  Rect.prototype.containsPoint = function (x, y) {
    return x >= this.x && y >= this.y && x <= this.x + this.width && y <= this.y + this.height;
  };

  var DEFAULT_ANIMATION_CONFIGS = {
    spring: {
      friction: 7,
      tension: 100
    },
    timing: {
      duration: 150,
      easing: _reactNative.Easing.inOut(_reactNative.Easing.ease),
      delay: 0
    }
  };

  var Slider = function (_PureComponent) {
    (0, _inherits2.default)(Slider, _PureComponent);

    function Slider() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Slider);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Slider)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        containerSize: {
          width: 0,
          height: 0
        },
        trackSize: {
          width: 0,
          height: 0
        },
        thumbSize: {
          width: 0,
          height: 0
        },
        allMeasured: false,
        value: new _reactNative.Animated.Value(_this.props.value)
      };

      _this._handleStartShouldSetPanResponder = function (e) {
        return _this._thumbHitTest(e);
      };

      _this._handlePanResponderGrant = function () {
        _this._previousLeft = _this._getThumbLeft(_this._getCurrentValue());

        _this._fireChangeEvent('onSlidingStart');
      };

      _this._handlePanResponderMove = function (e, gestureState) {
        if (_this.props.disabled) {
          return;
        }

        _this._setCurrentValue(_this._getValue(gestureState));

        _this._fireChangeEvent('onValueChange');
      };

      _this._handlePanResponderEnd = function (e, gestureState) {
        if (_this.props.disabled) {
          return;
        }

        _this._setCurrentValue(_this._getValue(gestureState));

        _this._fireChangeEvent('onSlidingComplete');
      };

      _this._measureContainer = function (x) {
        _this._handleMeasure('containerSize', x);
      };

      _this._measureTrack = function (x) {
        _this._handleMeasure('trackSize', x);
      };

      _this._measureThumb = function (x) {
        _this._handleMeasure('thumbSize', x);
      };

      _this._handleMeasure = function (name, x) {
        var _x$nativeEvent$layout = x.nativeEvent.layout,
            width = _x$nativeEvent$layout.width,
            height = _x$nativeEvent$layout.height;
        var size = {
          width: width,
          height: height
        };
        var storeName = "_" + name;
        var currentSize = _this[storeName];

        if (currentSize && width === currentSize.width && height === currentSize.height) {
          return;
        }

        _this[storeName] = size;

        if (_this._containerSize && _this._trackSize && _this._thumbSize) {
          _this.setState({
            containerSize: _this._containerSize,
            trackSize: _this._trackSize,
            thumbSize: _this._thumbSize,
            allMeasured: true
          });
        }
      };

      _this._getRatio = function (value) {
        return (value - _this.props.minimumValue) / (_this.props.maximumValue - _this.props.minimumValue);
      };

      _this._getThumbLeft = function (value) {
        var nonRtlRatio = _this._getRatio(value);

        var ratio = _reactNative.I18nManager.isRTL ? 1 - nonRtlRatio : nonRtlRatio;
        return ratio * (_this.state.containerSize.width - _this.state.thumbSize.width);
      };

      _this._getValue = function (gestureState) {
        var length = _this.state.containerSize.width - _this.state.thumbSize.width;
        var thumbLeft = _this._previousLeft + gestureState.dx;
        var nonRtlRatio = thumbLeft / length;
        var ratio = _reactNative.I18nManager.isRTL ? 1 - nonRtlRatio : nonRtlRatio;

        if (_this.props.step) {
          return Math.max(_this.props.minimumValue, Math.min(_this.props.maximumValue, _this.props.minimumValue + Math.round(ratio * (_this.props.maximumValue - _this.props.minimumValue) / _this.props.step) * _this.props.step));
        }

        return Math.max(_this.props.minimumValue, Math.min(_this.props.maximumValue, ratio * (_this.props.maximumValue - _this.props.minimumValue) + _this.props.minimumValue));
      };

      _this._getCurrentValue = function () {
        return _this.state.value.__getValue();
      };

      _this._setCurrentValue = function (value) {
        _this.state.value.setValue(value);
      };

      _this._setCurrentValueAnimated = function (value) {
        var animationType = _this.props.animationType;
        var animationConfig = (0, _extends2.default)({}, DEFAULT_ANIMATION_CONFIGS[animationType], _this.props.animationConfig, {
          toValue: value
        });

        _reactNative.Animated[animationType](_this.state.value, animationConfig).start();
      };

      _this._fireChangeEvent = function (event) {
        if (_this.props[event]) {
          _this.props[event](_this._getCurrentValue());
        }
      };

      _this._getTouchOverflowSize = function () {
        var state = _this.state;
        var props = _this.props;
        var size = {};

        if (state.allMeasured === true) {
          size.width = Math.max(0, props.thumbTouchSize.width - state.thumbSize.width);
          size.height = Math.max(0, props.thumbTouchSize.height - state.containerSize.height);
        }

        return size;
      };

      _this._getTouchOverflowStyle = function () {
        var _this$_getTouchOverfl = _this._getTouchOverflowSize(),
            width = _this$_getTouchOverfl.width,
            height = _this$_getTouchOverfl.height;

        var touchOverflowStyle = {};

        if (width !== undefined && height !== undefined) {
          var verticalMargin = -height / 2;
          touchOverflowStyle.marginTop = verticalMargin;
          touchOverflowStyle.marginBottom = verticalMargin;
          var horizontalMargin = -width / 2;
          touchOverflowStyle.marginLeft = horizontalMargin;
          touchOverflowStyle.marginRight = horizontalMargin;
        }

        if (_this.props.debugTouchArea === true) {
          touchOverflowStyle.backgroundColor = 'orange';
          touchOverflowStyle.opacity = 0.5;
        }

        return touchOverflowStyle;
      };

      _this._thumbHitTest = function (e) {
        var nativeEvent = e.nativeEvent;

        var thumbTouchRect = _this._getThumbTouchRect();

        return thumbTouchRect.containsPoint(nativeEvent.locationX, nativeEvent.locationY);
      };

      _this._getThumbTouchRect = function () {
        var state = _this.state;
        var props = _this.props;

        var touchOverflowSize = _this._getTouchOverflowSize();

        return new Rect(touchOverflowSize.width / 2 + _this._getThumbLeft(_this._getCurrentValue()) + (state.thumbSize.width - props.thumbTouchSize.width) / 2, touchOverflowSize.height / 2 + (state.containerSize.height - props.thumbTouchSize.height) / 2, props.thumbTouchSize.width, props.thumbTouchSize.height);
      };

      _this._renderDebugThumbTouchRect = function (thumbLeft) {
        var thumbTouchRect = _this._getThumbTouchRect();

        var positionStyle = {
          left: thumbLeft,
          top: thumbTouchRect.y,
          width: thumbTouchRect.width,
          height: thumbTouchRect.height
        };
        return _react.default.createElement(_reactNative.Animated.View, {
          style: [defaultStyles.debugThumbTouchArea, positionStyle],
          pointerEvents: "none"
        });
      };

      _this._renderThumbImage = function () {
        var thumbImage = _this.props.thumbImage;
        if (!thumbImage) return;
        return _react.default.createElement(_reactNative.Image, {
          source: thumbImage
        });
      };

      return _this;
    }

    (0, _createClass2.default)(Slider, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        this._panResponder = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: this._handleStartShouldSetPanResponder,
          onMoveShouldSetPanResponder: this._handleMoveShouldSetPanResponder,
          onPanResponderGrant: this._handlePanResponderGrant,
          onPanResponderMove: this._handlePanResponderMove,
          onPanResponderRelease: this._handlePanResponderEnd,
          onPanResponderTerminationRequest: this._handlePanResponderRequestEnd,
          onPanResponderTerminate: this._handlePanResponderEnd
        });
      }
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        var newValue = nextProps.value;

        if (this.props.value !== newValue) {
          if (this.props.animateTransitions) {
            this._setCurrentValueAnimated(newValue);
          } else {
            this._setCurrentValue(newValue);
          }
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            minimumValue = _this$props.minimumValue,
            maximumValue = _this$props.maximumValue,
            minimumTrackTintColor = _this$props.minimumTrackTintColor,
            maximumTrackTintColor = _this$props.maximumTrackTintColor,
            thumbTintColor = _this$props.thumbTintColor,
            thumbImage = _this$props.thumbImage,
            styles = _this$props.styles,
            style = _this$props.style,
            trackStyle = _this$props.trackStyle,
            thumbStyle = _this$props.thumbStyle,
            debugTouchArea = _this$props.debugTouchArea,
            onValueChange = _this$props.onValueChange,
            thumbTouchSize = _this$props.thumbTouchSize,
            animationType = _this$props.animationType,
            animateTransitions = _this$props.animateTransitions,
            other = (0, _objectWithoutProperties2.default)(_this$props, ["minimumValue", "maximumValue", "minimumTrackTintColor", "maximumTrackTintColor", "thumbTintColor", "thumbImage", "styles", "style", "trackStyle", "thumbStyle", "debugTouchArea", "onValueChange", "thumbTouchSize", "animationType", "animateTransitions"]);
        var _this$state = this.state,
            value = _this$state.value,
            containerSize = _this$state.containerSize,
            trackSize = _this$state.trackSize,
            thumbSize = _this$state.thumbSize,
            allMeasured = _this$state.allMeasured;
        var mainStyles = styles || defaultStyles;
        var thumbLeft = value.interpolate({
          inputRange: [minimumValue, maximumValue],
          outputRange: _reactNative.I18nManager.isRTL ? [0, -(containerSize.width - thumbSize.width)] : [0, containerSize.width - thumbSize.width]
        });
        var minimumTrackWidth = value.interpolate({
          inputRange: [minimumValue, maximumValue],
          outputRange: [0, containerSize.width - thumbSize.width]
        });
        var valueVisibleStyle = {};

        if (!allMeasured) {
          valueVisibleStyle.opacity = 0;
        }

        var minimumTrackStyle = (0, _objectSpread2.default)({
          position: 'absolute',
          width: _reactNative.Animated.add(minimumTrackWidth, thumbSize.width / 2),
          backgroundColor: minimumTrackTintColor
        }, valueVisibleStyle);

        var touchOverflowStyle = this._getTouchOverflowStyle();

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({}, other, {
          style: [mainStyles.container, style],
          onLayout: this._measureContainer
        }), _react.default.createElement(_reactNative.View, {
          style: [{
            backgroundColor: maximumTrackTintColor
          }, mainStyles.track, trackStyle],
          renderToHardwareTextureAndroid: true,
          onLayout: this._measureTrack
        }), _react.default.createElement(_reactNative.Animated.View, {
          renderToHardwareTextureAndroid: true,
          style: [mainStyles.track, trackStyle, minimumTrackStyle]
        }), _react.default.createElement(_reactNative.Animated.View, {
          onLayout: this._measureThumb,
          renderToHardwareTextureAndroid: true,
          style: [{
            backgroundColor: thumbTintColor
          }, mainStyles.thumb, thumbStyle, (0, _objectSpread2.default)({
            transform: [{
              translateX: thumbLeft
            }, {
              translateY: 0
            }]
          }, valueVisibleStyle)]
        }, this._renderThumbImage()), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          renderToHardwareTextureAndroid: true,
          style: [defaultStyles.touchArea, touchOverflowStyle]
        }, this._panResponder.panHandlers), debugTouchArea === true && this._renderDebugThumbTouchRect(minimumTrackWidth)));
      }
    }, {
      key: "_getPropsForComponentUpdate",
      value: function _getPropsForComponentUpdate(props) {
        var value = props.value,
            onValueChange = props.onValueChange,
            onSlidingStart = props.onSlidingStart,
            onSlidingComplete = props.onSlidingComplete,
            style = props.style,
            trackStyle = props.trackStyle,
            thumbStyle = props.thumbStyle,
            otherProps = (0, _objectWithoutProperties2.default)(props, ["value", "onValueChange", "onSlidingStart", "onSlidingComplete", "style", "trackStyle", "thumbStyle"]);
        return otherProps;
      }
    }, {
      key: "_handleMoveShouldSetPanResponder",
      value: function _handleMoveShouldSetPanResponder() {
        return false;
      }
    }, {
      key: "_handlePanResponderRequestEnd",
      value: function _handlePanResponderRequestEnd(e, gestureState) {
        return false;
      }
    }]);
    return Slider;
  }(_react.PureComponent);

  exports.default = Slider;
  Slider.propTypes = {
    value: _propTypes.default.number,
    disabled: _propTypes.default.bool,
    minimumValue: _propTypes.default.number,
    maximumValue: _propTypes.default.number,
    step: _propTypes.default.number,
    minimumTrackTintColor: _propTypes.default.string,
    maximumTrackTintColor: _propTypes.default.string,
    thumbTintColor: _propTypes.default.string,
    thumbTouchSize: _propTypes.default.shape({
      width: _propTypes.default.number,
      height: _propTypes.default.number
    }),
    onValueChange: _propTypes.default.func,
    onSlidingStart: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func,
    style: _reactNative.ViewPropTypes.style,
    trackStyle: _reactNative.ViewPropTypes.style,
    thumbStyle: _reactNative.ViewPropTypes.style,
    thumbImage: _reactNative.Image.propTypes.source,
    debugTouchArea: _propTypes.default.bool,
    animateTransitions: _propTypes.default.bool,
    animationType: _propTypes.default.oneOf(['spring', 'timing']),
    animationConfig: _propTypes.default.object
  };
  Slider.defaultProps = {
    value: 0,
    minimumValue: 0,
    maximumValue: 1,
    step: 0,
    minimumTrackTintColor: '#3f3f3f',
    maximumTrackTintColor: '#b3b3b3',
    thumbTintColor: '#343434',
    thumbTouchSize: {
      width: 40,
      height: 40
    },
    debugTouchArea: false,
    animationType: 'timing'
  };

  var defaultStyles = _reactNative.StyleSheet.create({
    container: {
      height: 40,
      justifyContent: 'center'
    },
    track: {
      height: TRACK_SIZE,
      borderRadius: 2
    },
    thumb: {
      position: 'absolute',
      width: THUMB_SIZE,
      height: THUMB_SIZE,
      borderRadius: 10
    },
    touchArea: {
      position: 'absolute',
      backgroundColor: 'transparent',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0
    },
    debugThumbTouchArea: {
      position: 'absolute',
      backgroundColor: 'green',
      opacity: 0.5
    }
  });
},10355,[14308,14305,14314,14407,14344,14320,14323,14371,14377,14386,10297,10033,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[4]);

  var _QosConstant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var QosHelper = function () {
    function QosHelper() {
      (0, _classCallCheck2.default)(this, QosHelper);
    }

    (0, _createClass2.default)(QosHelper, null, [{
      key: "getStatusResIdForMode",
      value: function getStatusResIdForMode(mode) {
        var resId = '';

        if (mode == _QosConstant.default.MODE_SERVICE_GAME) {
          resId = '游戏优先';
        }

        if (mode == _QosConstant.default.MODE_SERVICE_WEBPAGE) {
          resId = '网页优先';
        }

        if (mode == _QosConstant.default.MODE_SERVICE_AUTO) {
          resId = '自动分配';
        }

        if (mode == _QosConstant.default.MODE_SERVICE_VIDEO) {
          resId = '视频优先';
        }

        return resId;
      }
    }, {
      key: "getArrayPosition",
      value: function getArrayPosition(array, arrTitle) {
        if (_CommonUtils.default.arrayIsEmpty(array)) {
          return -1;
        }

        for (var i = 0; i < array.length; i++) {
          if (array[i].title == arrTitle) {
            return i;
          }
        }
      }
    }, {
      key: "getQosMacParam",
      value: function getQosMacParam() {
        var param = '';

        if (_CommonUtils.default.isNull(this.peekDevicesMacList())) {
          param = '';
        } else {
          param = this.peekDevicesMacList().join(";");
        }

        return param;
      }
    }, {
      key: "peekDevicesMacList",
      value: function peekDevicesMacList() {
        var maclist = [];

        var cacheList = _RouterInfoHelper.default.sharedInstance().getClientMessageList();

        if (_CommonUtils.default.isNull(cacheList)) {
          maclist = null;
        } else {
          var length = cacheList.length;

          for (var i = 0; i < length; i++) {
            maclist.push(cacheList[i].mac);
          }
        }

        return maclist;
      }
    }, {
      key: "getBandRateByMB",
      value: function getBandRateByMB(value) {
        var rate = _CommonUtils.default.getFloat(value / 8, 5);

        if (rate >= 1) {
          return String(_CommonUtils.default.getFloat(rate, 2)).concat("MB/s");
        } else {
          return String(_CommonUtils.default.getFloat(rate * 1024, 0)).concat("KB/s");
        }
      }
    }, {
      key: "formatBytes",
      value: function formatBytes(a, b) {
        if (0 == a) return "0 Bytes";
        var c = 1024,
            d = b || 2,
            e = ["Bytes", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"],
            f = Math.floor(Math.log(a) / Math.log(c));
        return parseFloat((a / Math.pow(c, f)).toFixed(d)) + " " + e[f];
      }
    }, {
      key: "formatBytesForRate",
      value: function formatBytesForRate(a, b) {
        if (0 == a) return "0 Bytes/s";
        var c = 1024,
            d = b || 2,
            e = ["Bytes/s", "KB/s", "MB/s", "GB/s", "TB/s", "PB/s", "EB/s", "ZB/s", "YB/s"],
            f = Math.floor(Math.log(a) / Math.log(c));
        return parseFloat((a / Math.pow(c, f)).toFixed(d)) + " " + e[f];
      }
    }]);
    return QosHelper;
  }();

  exports.default = QosHelper;
},10358,[14305,14320,14323,10040,10055,10361,10076]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var object = {
    MODE_INVALID: -1,
    MODE_AUTO: 0,
    MODE_PRIORITY: 1,
    MODE_MANUAL: 2,
    MODE_SERVICE_AUTO: 3,
    MODE_SERVICE_GAME: 4,
    MODE_SERVICE_WEBPAGE: 5,
    MODE_SERVICE_VIDEO: 6
  };
  var _default = object;
  exports.default = _default;
},10361,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.BlackListDeviceInfo = exports.MacFilterModel = exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _Devices = _$$_REQUIRE(_dependencyMap[9]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Service = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _miot = _$$_REQUIRE(_dependencyMap[12]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[15]);

  var _MacAddressManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[17]);

  var _CheckboxListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _PlaceholderImage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[21]);

  var BlackList = function (_React$Component) {
    (0, _inherits2.default)(BlackList, _React$Component);

    function BlackList(props) {
      var _this;

      (0, _classCallCheck2.default)(this, BlackList);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BlackList).call(this, props));

      _this.listItem = function (itemInfo) {
        var allList = _this.state.data.allDeviceList;

        var default_uri = _$$_REQUIRE(_dependencyMap[22]);

        var checkboxUrl = _$$_REQUIRE(_dependencyMap[23]);

        var uncheckboxUrl = _$$_REQUIRE(_dependencyMap[24]);

        var name = '';
        var iconUrl = '';
        var find = false;
        var needIcon = true;
        var hadIconUrl = true;
        var targetItem = null;

        for (var i = 0; i < allList.length; i++) {
          var deviceItem = allList[i];

          if (deviceItem.mac === itemInfo.mac) {
            find = true;

            if (!_CommonUtils.default.isTextEmpty(deviceItem.nickname)) {
              name = deviceItem.nickname;
            } else if (!_CommonUtils.default.isTextEmpty(deviceItem.name)) {
              name = deviceItem.name;
            } else {
              name = deviceItem.mac;
            }

            iconUrl = 'https://s.miwifi.com/icon/' + deviceItem.iconUrl;
            targetItem = deviceItem;
            break;
          }
        }

        if (!find) {
          name = _CommonUtils.default.isTextEmpty(itemInfo.name) ? itemInfo.mac : itemInfo.name;
          hadIconUrl = false;
          iconUrl = '';
        }

        if (!_this.state.isEditingList) {
          return _react.default.createElement(_reactNative.View, {
            style: {
              width: _Devices.ScreenW,
              height: 70,
              flexDirection: 'row'
            }
          }, _react.default.createElement(_reactNative.View, {
            style: {
              marginTop: 9,
              marginBottom: 9,
              marginLeft: 10,
              marginRight: 10
            }
          }, hadIconUrl ? _react.default.createElement(_PlaceholderImage.default, {
            style: {
              width: 52,
              height: 52,
              opacity: 1,
              borderRadius: 10
            },
            placeholderSource: default_uri,
            source: {
              uri: iconUrl
            }
          }) : null, !hadIconUrl ? _react.default.createElement(_reactNative.Image, {
            style: {
              width: 52,
              height: 52,
              opacity: 1,
              borderRadius: 10
            },
            source: default_uri
          }) : null), _react.default.createElement(_reactNative.View, {
            style: {
              width: _Devices.ScreenW - 62 - 20,
              height: 70,
              justifyContent: 'center'
            }
          }, _react.default.createElement(_reactNative.Text, {
            style: {
              fontSize: 16,
              color: '#000',
              textAlign: 'left'
            }
          }, name), _react.default.createElement(_reactNative.View, {
            style: {
              position: 'absolute',
              width: _Devices.ScreenW - 62 - 20,
              left: 0,
              height: 0.5,
              top: 69.5,
              backgroundColor: '#ddd'
            }
          })));
        } else {
          var isSelected = _this.containsItem(_this.state.selectedItems, itemInfo);

          return _react.default.createElement(_reactNative.TouchableOpacity, {
            style: {
              width: _Devices.ScreenW,
              height: 70,
              flexDirection: 'row'
            },
            onPress: function onPress() {
              var selectedList = _this.state.selectedItems;

              if (_this.containsItem(selectedList, itemInfo)) {
                var index = selectedList.indexOf(itemInfo);
                selectedList.splice(index, 1);
              } else {
                selectedList.push(itemInfo);
              }

              _this.setState({
                selectedItems: selectedList
              });

              _this.changeNavigationToEditMode(selectedList);
            }
          }, _react.default.createElement(_reactNative.Image, {
            style: {
              width: 20,
              height: 20,
              marginLeft: 10,
              marginTop: 25,
              marginRight: 10
            },
            source: isSelected ? checkboxUrl : uncheckboxUrl
          }), _react.default.createElement(_reactNative.View, {
            style: {
              marginTop: 9,
              marginBottom: 9,
              marginLeft: 10,
              marginRight: 10
            }
          }, hadIconUrl ? _react.default.createElement(_PlaceholderImage.default, {
            style: {
              width: 52,
              height: 52,
              opacity: 1,
              borderRadius: 10
            },
            placeholderSource: default_uri,
            source: {
              uri: iconUrl
            }
          }) : null, !hadIconUrl ? _react.default.createElement(_reactNative.Image, {
            style: {
              width: 52,
              height: 52,
              opacity: 1,
              borderRadius: 10
            },
            source: default_uri
          }) : null), _react.default.createElement(_reactNative.View, {
            style: {
              width: _Devices.ScreenW - 62 - 20,
              height: 70,
              justifyContent: 'center'
            }
          }, _react.default.createElement(_reactNative.Text, {
            style: {
              fontSize: 16,
              color: '#000',
              textAlign: 'left'
            }
          }, name), _react.default.createElement(_reactNative.View, {
            style: {
              position: 'absolute',
              width: _Devices.ScreenW - 62 - 20,
              left: 0,
              height: 0.5,
              top: 69.5,
              backgroundColor: '#ddd'
            }
          })));
        }
      };

      _this.deleteItemHandler = function () {
        _this.setState({
          showDeleteAlert: true
        });
      };

      _this.state = {
        itemList: [],
        isEditingList: false,
        selectedItems: [],
        showLoading: false,
        showRemoveLoading: false,
        data: null,
        showDeleteAlert: false,
        removeAllWhiteListAlert: false,
        showAddWhiteAlert: false,
        showInputWhiteMac: false,
        inputsText: ''
      };
      _this.isBlack = props.navigation.state.params.isBlack;
      _this.macFilterApi = _API.default.arn.mac_filter.remote;
      _this.deviceDisplayApi = _API.default.device_display_info.remote;
      _this.deleteAlertMsg = '移除黑名单后，路由器将不再拦截该设备\n确定要将选中设备移除黑名单吗？';

      if (!_this.isBlack) {
        _this.deleteAlertMsg = '移除白名单后，路由器将自动拦截该设备\r确定要将选中设备移除白名单吗？';
      }

      _this.deleteAlertTitle = _this.isBlack ? '移除黑名单' : '移除白名单';
      _this.removeAllWhiteListMsg = '当前白名单为空，会导致所有设备无法通过WiFi连接路由器';
      return _this;
    }

    (0, _createClass2.default)(BlackList, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.props.navigation.setParams({
          titleProps: {
            type: 'dark',
            onPressLeft: function onPressLeft(_) {
              return _this2.props.navigation.goBack();
            },
            title: this.isBlack ? '拦截黑名单' : '白名单'
          }
        });
        this.requestMacFilterData(true);
      }
    }, {
      key: "setNavigation",
      value: function setNavigation() {
        var _this3 = this;

        this.props.navigation.setParams({
          titleProps: {
            type: 'dark',
            onPressLeft: function onPressLeft(_) {
              return _this3.props.navigation.goBack();
            },
            title: this.isBlack ? '拦截黑名单' : '白名单'
          }
        });
      }
    }, {
      key: "changeNavigationToEditMode",
      value: function changeNavigationToEditMode(selectedList) {
        var _this4 = this;

        var itemCount = selectedList.length;
        var showAll = true;

        if (itemCount === this.state.itemList.length) {
          showAll = false;
        }

        this.props.navigation.setParams({
          titleProps: {
            type: 'dark',
            leftText: showAll ? '全选' : '全不选',
            leftTextStyle: {
              width: 60,
              color: '#000',
              fontSize: 16
            },
            onPressLeft: function onPressLeft() {
              return _this4.leftEditNaviItemHandler(showAll);
            },
            rightText: '取消',
            rightTextStyle: {
              width: 60,
              color: '#000',
              fontSize: 16
            },
            onPressRight: function onPressRight() {
              _this4.setNavigation(), _this4.setState({
                isEditingList: false,
                selectedItems: []
              });
            },
            title: itemCount > 0 ? '已选择' + itemCount + '项' : '请选择'
          }
        });
      }
    }, {
      key: "leftEditNaviItemHandler",
      value: function leftEditNaviItemHandler(showAll) {
        if (showAll === true) {
          var allList = [];
          this.state.itemList.forEach(function (item) {
            allList.push(item);
          });
          this.setState({
            selectedItems: allList
          });
          this.changeNavigationToEditMode(allList);
        } else {
          this.setState({
            selectedItems: []
          });
          this.changeNavigationToEditMode([]);
        }
      }
    }, {
      key: "containsItem",
      value: function containsItem(list, item) {
        if (_CommonUtils.default.arrayIsEmpty(list)) {
          return false;
        }

        var find = false;

        for (var i = 0; i < list.length; i++) {
          var obj = list[i];

          if (item.mac === obj.mac) {
            find = true;
            break;
          }
        }

        return find;
      }
    }, {
      key: "render",
      value: function render() {
        var _this5 = this;

        var listHeight = _Devices.ScreenH - 200 - 60;
        var isiPhoneX = false;

        if (_Devices.ios && (_Devices.ScreenH === 812 || _Devices.ScreenH === 896 || _Devices.ScreenH === 844 || _Devices.ScreenH === 780 || _Devices.ScreenH === 926)) {
          isiPhoneX = true;
        }

        var naviBarHeight = isiPhoneX ? _reactNavigation.Header.HEIGHT + 24 : _reactNavigation.Header.HEIGHT;
        var statusBarHeight = _reactNative.StatusBar.currentHeight;
        var naviAndStatusBarHeight = _Devices.ios ? naviBarHeight : naviBarHeight + statusBarHeight;
        listHeight = (_Devices.ios ? _Devices.ScreenH : _reactNative.Dimensions.get('screen').height) - naviAndStatusBarHeight - 100 - (isiPhoneX ? 54 : _Devices.ios ? 30 : 20);
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, this.state.itemList.length === 0 ? _react.default.createElement(EmptyView, {
          isBlack: this.isBlack
        }) : null, _react.default.createElement(_reactNative.FlatList, {
          style: {
            maxHeight: listHeight
          },
          data: this.state.itemList,
          renderItem: function renderItem(_ref) {
            var item = _ref.item;
            return _this5.listItem(item);
          }
        }), this.state.isEditingList ? _react.default.createElement(_reactNative.View, {
          style: styles.bottomContainer
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: this.state.selectedItems.length === 0 ? [styles.deleteButton, {
            opacity: 0.3
          }] : styles.deleteButton,
          disabled: this.state.selectedItems.length === 0 ? true : false,
          onPress: function onPress() {
            _this5.deleteItemHandler();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.bottomButtonTitle
        }, '删除'))) : null, !this.state.isEditingList ? _react.default.createElement(_reactNative.View, {
          style: styles.editAndAddContainer
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.addButton,
          onPress: function onPress() {
            if (_this5.isBlack) {
              _this5.props.navigation.navigate('BlackListAddDevice', {
                data: _this5.state.data,
                callback: function callback() {
                  _this5.requestMacFilterData(true);
                }
              });
            } else {
              _this5.setState({
                showAddWhiteAlert: true
              });
            }
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.bottomButtonTitle
        }, '添加')), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: this.canEdit() ? styles.editButtonNormal : styles.editButtonDisable,
          disabled: this.canEdit() ? false : true,
          onPress: function onPress() {
            _this5.setState({
              isEditingList: true,
              selectedItems: []
            });

            _this5.changeNavigationToEditMode(_this5.state.selectedItems);
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: this.canEdit() ? styles.editTitleNormal : styles.editTitleDiable
        }, '编辑'))) : null, _react.default.createElement(_Dialog.LoadingDialog, {
          visible: this.state.showLoading,
          message: ''
        }), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: this.state.showRemoveLoading,
          message: '处理中'
        }), _react.default.createElement(_Dialog.MessageDialog, {
          visible: this.state.showDeleteAlert,
          title: this.deleteAlertTitle,
          message: this.deleteAlertMsg,
          buttons: [{
            text: '取消',
            style: {
              color: '#000'
            },
            callback: function callback() {
              _this5.setState({
                showDeleteAlert: false
              });
            }
          }, {
            text: '确定',
            style: {
              color: '#000'
            },
            callback: function callback() {
              _this5.setState({
                showDeleteAlert: false
              });

              _this5.removeSelectedItems();
            }
          }],
          onDismiss: function onDismiss() {
            _this5.setState({
              showDeleteAlert: false
            });
          }
        }), _react.default.createElement(_Dialog.MessageDialog, {
          visible: this.state.removeAllWhiteListAlert,
          title: '提示',
          message: this.removeAllWhiteListMsg,
          buttons: [{
            text: '知道了',
            style: {
              color: '#000'
            },
            callback: function callback() {
              _this5.setState({
                removeAllWhiteListAlert: false
              });
            }
          }],
          onDismiss: function onDismiss() {
            _this5.setState({
              removeAllWhiteListAlert: false
            });
          }
        }), _react.default.createElement(_Dialog.MessageDialog, {
          visible: this.state.showAddWhiteAlert,
          title: '选择添加方式',
          message: '',
          buttons: [{
            text: '从设备列表添加',
            style: {
              color: '#000'
            },
            callback: function callback() {
              _this5.setState({
                showAddWhiteAlert: false
              });

              _this5.props.navigation.navigate('BlackListAddDevice', {
                data: _this5.state.data,
                callback: function callback() {
                  _this5.requestMacFilterData(true);
                }
              });
            }
          }, {
            text: '手动输入添加',
            style: {
              color: '#000'
            },
            callback: function callback() {
              _this5.setState({
                showAddWhiteAlert: false,
                showInputWhiteMac: true
              });
            }
          }],
          onDismiss: function onDismiss() {
            _this5.setState({
              showAddWhiteAlert: false
            });
          }
        }), _react.default.createElement(_Dialog.InputDialog, {
          visible: this.state.showInputWhiteMac,
          title: "\u8BF7\u8F93\u5165Mac\u5730\u5740",
          onDismiss: function onDismiss(_) {
            _this5.setState({
              showInputWhiteMac: false
            });
          },
          inputs: [{
            placeholder: '格式为AA:BB:CC:DD:EE:FF',
            defaultValue: '',
            textInputProps: {
              autoFocus: true
            },
            onChangeText: function onChangeText(text) {
              _this5.state.inputsText = text;
            }
          }],
          buttons: [{
            text: '取消',
            style: {
              color: '#000'
            },
            callback: function callback(_) {
              _this5.setState({
                showInputWhiteMac: false
              });
            }
          }, {
            text: '确定',
            style: {
              color: '#000'
            },
            callback: function callback(result) {
              _this5.inputsDoneHandler();

              _this5.setState({
                showInputWhiteMac: false
              });
            }
          }]
        }));
      }
    }, {
      key: "inputsDoneHandler",
      value: function inputsDoneHandler() {
        var macAddr, result;
        return _regenerator.default.async(function inputsDoneHandler$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                macAddr = this.state.inputsText;

                if (_CommonUtils.default.isValidMac(macAddr)) {
                  _context.next = 4;
                  break;
                }

                _CommonUtils.default.ShowToastCenter('您输入的MAC地址格式不正确');

                return _context.abrupt("return");

              case 4:
                this.setState({
                  showRemoveLoading: true
                });
                _context.next = 7;
                return _regenerator.default.awrap(this.configMacAddress(true, macAddr));

              case 7:
                result = _context.sent;
                this.setState({
                  showRemoveLoading: false
                });

                if (result) {
                  _CommonUtils.default.ShowToastCenter('设置成功');

                  this.requestMacFilterData(false);
                } else {
                  _CommonUtils.default.ShowToastCenter('设置失败');
                }

              case 10:
              case "end":
                return _context.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "requestMacFilterData",
      value: function requestMacFilterData(showLoading) {
        var _this6 = this;

        var paramsDic = {
          method: 'GET',
          params: {
            deviceId: _miot.Device.deviceID.replace('miwifi.', '')
          }
        };
        this.setState({
          showLoading: showLoading
        });

        _Service.default.callSmartHomeAPI(this.macFilterApi, paramsDic).then(function (res) {
          _this6.setState({
            showLoading: false
          });

          if (res.code === 0) {
            var macFilterModel = new MacFilterModel(res);

            _this6.setState({
              data: macFilterModel
            });

            _this6.requesDeviceDisplayInfo(macFilterModel);
          }
        }).catch(function (error) {
          _this6.setState({
            showLoading: false
          });
        });
      }
    }, {
      key: "removeSelectedItems",
      value: function removeSelectedItems() {
        var macArr, result, i, item, macStr, deviceId, paramsDic;
        return _regenerator.default.async(function removeSelectedItems$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!(this.state.selectedItems.length === this.state.itemList.length && !this.isBlack)) {
                  _context2.next = 3;
                  break;
                }

                this.setState({
                  removeAllWhiteListAlert: true
                });
                return _context2.abrupt("return");

              case 3:
                this.setNavigation();
                this.setState({
                  isEditingList: false,
                  showRemoveLoading: true
                });
                macArr = [];
                result = true;
                i = 0;

              case 8:
                if (!(i < this.state.selectedItems.length)) {
                  _context2.next = 19;
                  break;
                }

                item = this.state.selectedItems[i];
                _context2.next = 12;
                return _regenerator.default.awrap(this.removeDeviceWithMac(item.mac));

              case 12:
                result = _context2.sent;

                if (result) {
                  _context2.next = 15;
                  break;
                }

                return _context2.abrupt("break", 19);

              case 15:
                macArr.push(item.mac);

              case 16:
                i++;
                _context2.next = 8;
                break;

              case 19:
                if (!_CommonUtils.default.arrayIsEmpty(macArr)) {
                  macStr = macArr.join(',');
                  deviceId = _miot.Device.deviceID.replace('miwifi.', '');
                  paramsDic = {
                    method: 'POST',
                    params: {
                      mac: macStr,
                      routerID: deviceId,
                      deviceId: deviceId,
                      deviceID: deviceId,
                      erase: 'true'
                    }
                  };

                  _Service.default.callSmartHomeAPI(_API.default.arn.ignore_risk_device).then(function (res) {}).catch(function (error) {});
                }

                if (!result) {
                  if (this.isBlack) {
                    _CommonUtils.default.ShowToastCenter('解除拉黑失败');
                  } else {
                    _CommonUtils.default.ShowToastCenter('移除白名单失败');
                  }
                } else {
                  if (this.isBlack) {
                    _CommonUtils.default.ShowToastCenter('解除拉黑成功');
                  } else {
                    _CommonUtils.default.ShowToastCenter('移除白名单成功');
                  }
                }

                this.setState({
                  showRemoveLoading: false
                });
                this.requestMacFilterData(false);

              case 23:
              case "end":
                return _context2.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "removeDeviceWithMac",
      value: function removeDeviceWithMac(mac) {
        var result;
        return _regenerator.default.async(function removeDeviceWithMac$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return _regenerator.default.awrap(this.configMacAddress(false, mac));

              case 2:
                result = _context3.sent;
                return _context3.abrupt("return", result);

              case 4:
              case "end":
                return _context3.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "configMacAddress",
      value: function configMacAddress(isAdd, mac) {
        var option, model, deviceId, paramsDic;
        return _regenerator.default.async(function configMacAddress$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                option = isAdd ? '0' : '1';
                model = this.isBlack ? '0' : '1';
                deviceId = _miot.Device.deviceID.replace('miwifi.', '');
                paramsDic = {
                  method: 'GET',
                  params: {
                    deviceId: deviceId,
                    deviceID: deviceId,
                    mac: mac,
                    option: option,
                    model: model
                  }
                };
                return _context4.abrupt("return", _Service.default.callSmartHomeAPI(_API.default.arn.edit_risk_device.remote, paramsDic).then(function (res) {
                  if (res.code === 0) {
                    return true;
                  } else {
                    return false;
                  }
                }).catch(function (error) {
                  return false;
                }));

              case 5:
              case "end":
                return _context4.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "requesDeviceDisplayInfo",
      value: function requesDeviceDisplayInfo(info) {
        var _this7 = this;

        if (!_CommonUtils.default.isNull(info) && !_CommonUtils.default.arrayIsEmpty(info.allDeviceList) && info.allDeviceList.length > 0) {
          var tempData = {};
          info.allDeviceList.forEach(function (item) {
            tempData[item.mac] = {
              origin_name: item.origin_name
            };
          });
          var paramsDic = {
            method: 'GET',
            params: {
              deviceId: _miot.Device.deviceID.replace('miwifi.', ''),
              data: JSON.stringify(tempData)
            }
          };

          _Service.default.callSmartHomeAPI(this.deviceDisplayApi, paramsDic).then(function (res) {
            if (res.code === 0 && !_CommonUtils.default.isNull(res.data)) {
              info.allDeviceList.forEach(function (item) {
                var displayInfo = res.data[item.mac];

                if (!_CommonUtils.default.isNull(displayInfo)) {
                  item.nickname = displayInfo['nickname'];
                  item.iconUrl = displayInfo["iconUrl"];
                  item.bigIconUrl = displayInfo["bigIconUrl"];
                }
              });

              _this7.setState({
                data: info,
                itemList: info.macfilter
              });
            }
          }).catch(function (error) {});
        }
      }
    }, {
      key: "canEdit",
      value: function canEdit() {
        return !_CommonUtils.default.arrayIsEmpty(this.state.itemList);
      }
    }]);
    return BlackList;
  }(_react.default.Component);

  exports.default = BlackList;

  BlackList.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;

    var _ref3 = navigation.state.params || {},
        titleProps = _ref3.titleProps;

    if (!titleProps) return {
      header: null
    };
    return {
      header: _react.default.createElement(_TitleBar.default, titleProps)
    };
  };

  var EmptyView = function EmptyView(_ref4) {
    var isBlack = _ref4.isBlack;
    return _react.default.createElement(_reactNative.View, {
      style: styles.emptyContainer
    }, _react.default.createElement(_reactNative.Image, {
      style: styles.emptyIcon,
      source: _$$_REQUIRE(_dependencyMap[25])
    }), _react.default.createElement(_reactNative.Text, {
      style: styles.emptyText
    }, isBlack ? '暂无黑名单' : '暂无白名单'));
  };

  var isiPhoneX = false;

  if (_Devices.ios && (_Devices.ScreenH === 812 || _Devices.ScreenH === 896)) {
    isiPhoneX = true;
  }

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#fff'
    },
    emptyContainer: {
      marginTop: _Devices.ScreenH * 0.5 - 50,
      flexDirection: 'column',
      alignItems: 'center'
    },
    emptyIcon: {
      width: 105,
      height: 90,
      resizeMode: 'contain'
    },
    emptyText: {
      fontSize: 14,
      color: '#999',
      textAlign: 'center',
      marginTop: 10
    },
    bottomContainer: {
      position: 'absolute',
      bottom: isiPhoneX ? 34 : 10,
      alignItems: 'center',
      justifyContent: 'center',
      height: 100,
      left: 24
    },
    editAndAddContainer: {
      position: 'absolute',
      bottom: isiPhoneX ? 34 : 10,
      alignItems: 'center',
      justifyContent: 'center',
      height: 100,
      left: 24
    },
    addButton: {
      position: "absolute",
      top: 0,
      left: 0,
      width: _Devices.ScreenW - 48,
      height: 45,
      backgroundColor: '#2c7DFA',
      borderRadius: 22.5,
      alignItems: 'center',
      justifyContent: 'center'
    },
    editButtonDisable: {
      position: "absolute",
      top: 55,
      left: 0,
      width: _Devices.ScreenW - 48,
      height: 45,
      backgroundColor: 'lightgray',
      borderRadius: 22.5,
      alignItems: 'center',
      justifyContent: 'center'
    },
    editButtonNormal: {
      position: "absolute",
      top: 55,
      left: 0,
      width: _Devices.ScreenW - 48,
      height: 45,
      backgroundColor: '#fff',
      borderRadius: 22.5,
      alignItems: 'center',
      justifyContent: 'center',
      borderWidth: 0.5,
      borderColor: '#2c7dfa'
    },
    bottomButtonTitle: {
      fontSize: 16,
      color: '#fff',
      fontWeight: 'bold'
    },
    editTitleDiable: {
      fontSize: 16,
      color: '#fff',
      fontWeight: 'bold'
    },
    editTitleNormal: {
      fontSize: 16,
      color: '#000',
      fontWeight: 'bold'
    },
    deleteButton: {
      marginLeft: 0,
      width: _Devices.ScreenW - 48,
      height: 45,
      backgroundColor: 'red',
      borderRadius: 22.5,
      alignItems: 'center',
      justifyContent: 'center'
    }
  });

  var MacFilterModel = function MacFilterModel(props) {
    var _this8 = this;

    (0, _classCallCheck2.default)(this, MacFilterModel);
    this.model = !_CommonUtils.default.isNull(props.model) ? props.model : -2;
    this.enable = !_CommonUtils.default.isNull(props.enable) ? props.enable === 1 ? true : false : false;
    this.macfilter = [];
    var filterArray = props.macfilter;

    if (!_CommonUtils.default.arrayIsEmpty(filterArray)) {
      filterArray.forEach(function (device) {
        var deviceInfo = new BlackListDeviceInfo(device);

        _this8.macfilter.push(deviceInfo);
      });
    }

    var list = props.list;
    var deviceList = [];

    if (!_CommonUtils.default.arrayIsEmpty(list)) {
      list.forEach(function (item) {
        deviceList.push(item);
      });
    }

    this.deviceList = deviceList;
    var flist = props.flist;
    var allList = [];

    if (!_CommonUtils.default.arrayIsEmpty(flist)) {
      flist.forEach(function (object) {
        allList.push(object);
      });
      this.allDeviceList = allList;
    }
  };

  exports.MacFilterModel = MacFilterModel;

  var BlackListDeviceInfo = function BlackListDeviceInfo(props) {
    (0, _classCallCheck2.default)(this, BlackListDeviceInfo);

    if (typeof props === 'string') {
      this.mac = props;
    } else {
      this.mac = !_CommonUtils.default.isNull(props.mac) ? props.mac : '';
      this.name = !_CommonUtils.default.isNull(props.name) ? props.name : '';
    }
  };

  exports.BlackListDeviceInfo = BlackListDeviceInfo;
},10364,[14305,14674,14320,14323,14371,14377,14386,10297,10033,10067,10064,10062,10074,10040,10284,10755,10079,10338,10367,10241,10332,10918,10244,10370,10373,10376]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var checkboxUrl = _$$_REQUIRE(_dependencyMap[10]);

  var uncheckboxUrl = _$$_REQUIRE(_dependencyMap[11]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var THIN_HEIGHT = 50;
  var PADDING = 24;

  var CheckBoxListItem = function (_React$Component) {
    (0, _inherits2.default)(CheckBoxListItem, _React$Component);

    function CheckBoxListItem(props, context) {
      (0, _classCallCheck2.default)(this, CheckBoxListItem);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CheckBoxListItem).call(this, props, context));
    }

    (0, _createClass2.default)(CheckBoxListItem, [{
      key: "render",
      value: function render() {
        var extraContainerStyle = {
          height: THIN_HEIGHT
        };
        var extraSepratorStyle = {};

        if (this.props.showSeparator) {
          extraSepratorStyle = {
            backgroundColor: '#efefef',
            width: width,
            position: 'absolute',
            top: 49.5,
            height: 0.5
          };
        }

        return _react.default.createElement(_reactNative.View, {
          style: styles.containerStyle
        }, _react.default.createElement(_reactNative.TouchableHighlight, {
          disabled: this.props.disabled,
          underlayColor: 'rgba(0,0,0,0.25)',
          onPress: this.props.onPress
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.container, this.props.containerStyle, extraContainerStyle]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.left
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.checkBox,
          resizeMode: "contain",
          source: this.props.isSelected ? checkboxUrl : uncheckboxUrl
        })), _react.default.createElement(_reactNative.View, {
          style: styles.textContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.titleText
        }, this.props.title)))), this.props.showSeparator ? _react.default.createElement(_Separator.default, {
          style: [this.props.separatorStyle, styles.sp]
        }) : null);
      }
    }]);
    return CheckBoxListItem;
  }(_react.default.Component);

  exports.default = CheckBoxListItem;
  CheckBoxListItem.propTypes = {
    title: _propTypes.default.string.isRequired,
    onPress: _propTypes.default.func.isRequired,
    showSeparator: _propTypes.default.bool,
    isSelected: _propTypes.default.bool,
    separator: _propTypes.default.element,
    containerStyle: _propTypes.default.object,
    titleStyle: _propTypes.default.object
  };
  CheckBoxListItem.defaultProps = {
    title: '',
    onPress: function onPress(_) {},
    showSeparator: false,
    containerStyle: {},
    titleStyle: {},
    isSelected: false
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width,
      backgroundColor: '#fff',
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    },
    left: {
      position: 'absolute',
      alignItems: "center",
      left: 10,
      width: 25
    },
    checkBox: {
      width: 15,
      height: 15
    },
    textContainer: {
      flexDirection: 'column',
      justifyContent: 'center',
      width: width - 50
    },
    titleText: {
      marginLeft: 15,
      fontSize: 16,
      color: '#333',
      textAlign: 'left',
      textAlignVertical: 'center',
      lineHeight: 49.5
    },
    sp: {
      backgroundColor: '#eee',
      width: width,
      height: 0.5
    }
  });
},10367,[14305,14320,14323,14371,14377,14386,10297,10318,10033,10332,10370,10373]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources",
    "width": 44,
    "height": 44,
    "scales": [1],
    "hash": "b90016fc2c3f0980dc9824f088c34e83",
    "name": "checkBox_check",
    "type": "png"
  });
},10370,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources",
    "width": 44,
    "height": 44,
    "scales": [1],
    "hash": "41de531e24ac40955954f09392bbe260",
    "name": "checkBox_uncheck",
    "type": "png"
  });
},10373,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources",
    "width": 175,
    "height": 150,
    "scales": [1],
    "hash": "cf6db7d6a5aaab7d5203bbde42fce381",
    "name": "error_empty",
    "type": "png"
  });
},10376,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _ListItem = _$$_REQUIRE(_dependencyMap[11]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _miot = _$$_REQUIRE(_dependencyMap[13]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _device = _$$_REQUIRE(_dependencyMap[15]);

  var DiskAccess = function (_React$Component) {
    (0, _inherits2.default)(DiskAccess, _React$Component);

    function DiskAccess(props) {
      var _this;

      (0, _classCallCheck2.default)(this, DiskAccess);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DiskAccess).call(this, props));

      _this.getData = function () {
        _miot.Service.callSmartHomeAPI(_API.default.device_detail, _this.paramsDic).then(function (res) {
          if (res.code === 0) {
            _this.setState({
              usbStatus: res.info.authority.lan === 1 ? true : false
            });
          }
        }).catch(function (res) {
          _this.props.navigation.goBack();
        }).finally(function (res) {});
      };

      _this.changeStatusHandler = function () {
        var usbStatus = !_this.state.usbStatus;

        _this.setState({
          usbStatus: usbStatus,
          isShowLoading: true
        }, function () {
          _this.updateStatus();
        });
      };

      _this.updateStatus = function () {
        var on = {
          mac: _this.mac,
          lan: _this.state.usbStatus ? 1 : 0
        };
        var params = {
          params: (0, _objectSpread2.default)({}, _this.paramsDic.params, on)
        };
        var paramsDic = (0, _objectSpread2.default)({}, _this.paramsDic, params);

        _miot.Service.callSmartHomeAPI(_API.default.set_mac_filter, paramsDic).then(function (res) {
          _this.setState({
            isShowLoading: false
          });
        }).catch(function (e) {
          _this.setState({
            isShowLoading: false,
            usbStatus: true
          });
        });
      };

      _this.state = {
        usbStatus: false
      };
      _this.deviceId = _device.Device.deviceID.replace("miwifi.", "");
      _this.mac = _this.props.item.mac;
      _this.paramsDic = {
        method: 'GET',
        params: {
          deviceId: _this.deviceId,
          mac: _this.mac
        }
      };
      return _this;
    }

    (0, _createClass2.default)(DiskAccess, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.getData();
      }
    }, {
      key: "componentWillMount",
      value: function componentWillMount() {}
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: '全盘访问',
          value: this.state.usbStatus,
          showSeparator: false,
          titleStyle: styles.titleStyle,
          onValueChange: function onValueChange(value) {
            return _this2.changeStatusHandler(value);
          }
        }), _react.default.createElement(_LoadingDialog.default, {
          visible: this.state.isShowLoading,
          message: this.state.loadingText
        }));
      }
    }]);
    return DiskAccess;
  }(_react.default.Component);

  exports.default = DiskAccess;

  DiskAccess.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: 'USB设置',
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      flex: 1
    },
    titleStyle: {
      fontWeight: 'bold'
    },
    containerStyle: {
      paddingLeft: 0,
      paddingRight: 50,
      marginTop: 20
    },
    tips: {
      fontSize: 12,
      color: '#999',
      marginTop: 10
    }
  });
},10379,[14305,14314,14320,14323,14371,14377,14386,10284,10740,10297,10033,10338,10332,10074,10064,10935]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources",
    "width": 655,
    "height": 92,
    "scales": [1],
    "hash": "2ee809812bfc82f0042943a165f50f15",
    "name": "device_trffbg",
    "type": "png"
  });
},10382,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _ListItem = _$$_REQUIRE(_dependencyMap[10]);

  var _ClientHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _miot = _$$_REQUIRE(_dependencyMap[12]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _device = _$$_REQUIRE(_dependencyMap[14]);

  var ContentDetail = function (_React$Component) {
    (0, _inherits2.default)(ContentDetail, _React$Component);

    function ContentDetail(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ContentDetail);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ContentDetail).call(this, props));

      _this.getData = function () {
        var paramsDic = {
          method: 'get',
          params: {
            "deviceId": _this.deviceId,
            'locale': 'zh_CN',
            'ts': 1592302275870
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.get_device_display_config, paramsDic).then(function (res) {
          if (res.code === 0) {
            _this.getTxt(res.data.data_url);
          }
        }).catch(function (res) {}).finally(function () {});
      };

      _this.setData = function () {
        var paramsDic = {
          method: 'post',
          params: {
            "deviceId": _device.Device.deviceID.replace("miwifi.", ""),
            "mac": _this.item.mac,
            "nickname": '',
            "owner": _this.owner || '',
            "company": _this.state.company,
            "product": _this.state.product,
            "model": _this.state.model
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.update_device_setting, paramsDic).then(function (res) {
          if (res.code === 0) {}
        }).catch(function (res) {}).finally(function () {});
      };

      _this.getTxt = function (url) {
        fetch(url).then(function (res) {
          return res.text();
        }).then(function (data) {
          _this.formatData(data);
        }).catch(function (error) {});
      };

      _this.formatData = function (data) {
        var tableArr = data.split('[term_table]');
        _this.display_config_list = tableArr[0].split('\n');
        var term_table_list = tableArr[1].split('\n');
        term_table_list.pop();
        term_table_list.shift();

        _this.display_config_list.pop();

        _this.display_config_list.shift();

        var nameMap = {};
        term_table_list.map(function (item, index) {
          var row = item.split('\t');
          nameMap[row[0]] = row[1];
        });

        _this.setState({
          nameMap: nameMap
        });

        _this.setProductList();

        _this.setCompanyList();

        _this.setModelList();
      };

      _this.setProductList = function () {
        _this.productList = [];

        _this.display_config_list.map(function (item, index) {
          var row = item.split('\t');
          var product = row[2];

          if (!_this.productList.includes(product) && product !== '') {
            _this.productList.push(product);
          }
        });

        _this.productList.push('default');
      };

      _this.setCompanyList = function () {
        _this.companyList = [];

        _this.display_config_list.map(function (item, index) {
          var row = item.split('\t');
          var company = row[1];
          var product = row[2];

          if (!_this.companyList.includes(company) && company !== '' && _this.state.nameMap[company] && (_this.state.product === product || _this.state.product === 'default')) {
            _this.companyList.push(company);
          }
        });

        _this.companyList.push('default');

        _this.setModelList();
      };

      _this.setModelList = function () {
        var modelList = [];

        _this.display_config_list.map(function (item, index) {
          var row = item.split('\t');
          var company = row[1];
          var product = row[2];
          var model = row[3];

          if (!modelList.includes(model) && model !== '' && _this.state.nameMap[model] && _this.state.product === product && _this.state.company === company) {
            modelList.push(model);
          }
        });

        modelList.push('default');

        _this.setState({
          modelList: modelList
        });
      };

      _this.getDeviceImage = function () {
        var productArr = _this.display_config_list.filter(function (item, index) {
          var row = item.split('\t');
          return _this.state.product === row[2];
        });

        var companyArr = productArr.filter(function (item, index) {
          var row = item.split('\t');
          return _this.state.company === row[1];
        });
        var detailRow = companyArr.find(function (item, index) {
          var row = item.split('\t');
          return _this.state.model === row[3];
        });

        if (detailRow) {
          return detailRow.split('\t')[5];
        } else {
          if (_this.state.product === '') {
            return 'detail_v2/device_details_default.png?1470120918';
          } else {
            var row = productArr.find(function (item, index) {
              var row = item.split('\t');
              return _this.state.product === row[2] && row[1] === '' && row[3] === '';
            });

            if (row) {
              return row.split('\t')[5];
            } else {
              return 'detail_v2/device_details_default.png?1470120918';
            }
          }
        }
      };

      _this.setValue = function (type, v) {
        if (type === 'product') {
          _this.setState({
            'product': v
          }, function () {
            _this.setCompanyList();

            _this.setData();

            var deviceImage = _this.getDeviceImage();

            _this.props.navigation.state.params.callback(deviceImage, _this.state.product, _this.state.company, _this.state.model);
          });
        } else if (type === 'company') {
          _this.setState({
            'company': v,
            'model': ''
          }, function () {
            _this.setModelList();

            _this.setData();

            var deviceImage = _this.getDeviceImage();

            _this.props.navigation.state.params.callback(deviceImage, _this.state.product, _this.state.company, _this.state.model);
          });
        } else {
          _this.setState({
            'model': v
          }, function () {
            _this.setData();

            var deviceImage = _this.getDeviceImage();

            _this.props.navigation.state.params.callback(deviceImage, _this.state.product, _this.state.company, _this.state.model);
          });
        }
      };

      _this.jump = function (type) {
        _this.props.navigation.navigate('DevicesInfoStatusData', {
          type: type,
          value: {
            product: _this.state.product,
            company: _this.state.company,
            model: _this.state.model
          },
          list: {
            product: _this.productList,
            company: _this.companyList,
            model: _this.state.modelList
          },
          nameMap: _this.state.nameMap,
          callback: _this.setValue
        });
      };

      _this.item = _this.props.navigation.state.params.item;
      _this.callback = _this.props.navigation.state.params.callback;
      _this.state = {
        product: _this.props.navigation.state.params.product,
        company: _this.props.navigation.state.params.company,
        model: _this.props.navigation.state.params.model,
        nameMap: {},
        modelList: []
      };
      return _this;
    }

    (0, _createClass2.default)(ContentDetail, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.getData();
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var item = this.item;
        var productKey = this.state.product || 'default';
        var companyKey = this.state.company || 'default';
        var modelKey = this.state.model || 'default';
        return _react.default.createElement(_reactNative.View, {
          style: styles.wrapper
        }, _react.default.createElement(_reactNative.ScrollView, {
          style: styles.sv
        }, _react.default.createElement(_reactNative.View, {
          style: styles.svContent
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, "\u8BBE\u5907\u4FE1\u606F\u8BE6\u60C5"), _react.default.createElement(_Separator.default, null), _react.default.createElement(_ListItem.ListItem, {
          title: "\u7C7B\u578B",
          value: this.state.nameMap.hasOwnProperty(productKey) ? this.state.nameMap[productKey] : '22',
          titleStyle: styles.titleStyle,
          valueStyle: styles.valueStyle,
          containerStyle: styles.containerStyle,
          onPress: function onPress() {
            return _this2.jump('product');
          },
          hideArrow: false,
          showSeparator: false
        }), _react.default.createElement(_Separator.default, null), _react.default.createElement(_ListItem.ListItem, {
          title: "\u54C1\u724C",
          value: this.state.nameMap.hasOwnProperty(companyKey) ? this.state.nameMap[companyKey] : '',
          titleStyle: styles.titleStyle,
          valueStyle: styles.valueStyle,
          containerStyle: styles.containerStyle,
          onPress: function onPress() {
            return _this2.jump('company');
          },
          hideArrow: false,
          showSeparator: false
        }), _react.default.createElement(_Separator.default, null), _react.default.createElement(_ListItem.ListItem, {
          title: "\u578B\u53F7",
          value: this.state.nameMap.hasOwnProperty(modelKey) ? this.state.nameMap[modelKey] : '',
          titleStyle: [styles.titleStyle, this.state.modelList.length === 1 && {
            color: '#f1f1f1'
          }],
          valueStyle: [styles.valueStyle, this.state.modelList.length === 1 && {
            color: '#f1f1f1'
          }],
          containerStyle: styles.containerStyle,
          onPress: function onPress() {
            return _this2.jump('model');
          },
          hideArrow: false,
          showSeparator: false,
          disabled: this.state.modelList.length > 1 ? false : true
        }), _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, "\u72B6\u6001\u8BE6\u60C5"), _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
          style: styles.listItem
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.key
        }, "\u8FDE\u63A5\u7C7B\u578B"), _react.default.createElement(_reactNative.Text, {
          style: styles.value
        }, _ClientHelper.default.getTextByConnectionType(item.connectionType))), _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
          style: styles.listItem
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.key
        }, "MAC\u5730\u5740"), _react.default.createElement(_reactNative.Text, {
          style: styles.value
        }, item.mac)), _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
          style: styles.listItem
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.key
        }, "IP\u5730\u5740"), _react.default.createElement(_reactNative.Text, {
          style: styles.value
        }, item.ip)), _react.default.createElement(_Separator.default, null))));
      }
    }]);
    return ContentDetail;
  }(_react.default.Component);

  exports.default = ContentDetail;

  ContentDetail.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: "\u8BBE\u5907\u4FE1\u606F",
        style: {
          backgroundColor: '#fff'
        },
        onPressLeft: function onPressLeft(_) {
          return navigation.goBack();
        }
      })
    };
  };

  var styles = _reactNative.StyleSheet.create({
    wrapper: {
      backgroundColor: '#fff',
      flex: 1
    },
    sv: {
      flex: 1
    },
    svContent: {
      paddingRight: 10,
      paddingLeft: 10
    },
    containerStyle: {
      paddingLeft: 0,
      paddingRight: 20
    },
    containerStyleDisabled: {},
    title: {
      paddingBottom: 5,
      paddingTop: 10
    },
    key: {
      fontSize: 14,
      color: '#000',
      fontFamily: ' '
    },
    value: {
      fontSize: 13,
      color: '#7f7f7f',
      fontFamily: ' '
    },
    valueStyle: {},
    listItem: {
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center',
      height: 50
    }
  });
},10385,[14305,14320,14323,14371,14377,14386,10284,10332,10297,10033,10338,10223,10074,10064,10935]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var ContentDetail = function (_React$Component) {
    (0, _inherits2.default)(ContentDetail, _React$Component);

    function ContentDetail(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ContentDetail);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ContentDetail).call(this, props));

      _this._onPressContent = function (value) {
        _this.props.navigation.state.params.callback(_this.type, value === 'default' ? '' : value);

        _this.props.navigation.pop();
      };

      _this.item = function (item) {
        var titleClass = [styles.title];

        if (item === _this.value) {
          titleClass.push(styles.selected);
        }

        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.item,
          onPress: function onPress() {
            return _this._onPressContent(item);
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.itemContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: titleClass
        }, _this.nameMap[item])), _react.default.createElement(_Separator.default, null));
      };

      _this.type = _this.props.navigation.state.params.type;
      _this.value = _this.props.navigation.state.params.value[_this.type];
      _this.list = _this.props.navigation.state.params.list;
      _this.nameMap = _this.props.navigation.state.params.nameMap;
      _this.state = {
        list: _this.list[_this.type]
      };
      return _this;
    }

    (0, _createClass2.default)(ContentDetail, [{
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.wrapper
        }, _react.default.createElement(_reactNative.ScrollView, {
          style: styles.sv
        }, _react.default.createElement(_reactNative.FlatList, {
          data: this.state.list,
          renderItem: function renderItem(_ref) {
            var item = _ref.item;
            return _this2.item(item);
          }
        })));
      }
    }]);
    return ContentDetail;
  }(_react.default.Component);

  exports.default = ContentDetail;

  ContentDetail.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: navigation.state.params.title,
        style: {
          backgroundColor: '#fff'
        },
        onPressLeft: function onPressLeft(_) {
          return navigation.goBack();
        }
      })
    };
  };

  var styles = _reactNative.StyleSheet.create({
    wrapper: {
      backgroundColor: '#fff',
      flex: 1
    },
    sv: {
      flex: 1,
      paddingRight: 10,
      paddingLeft: 10
    },
    svContent: {
      paddingRight: 10,
      paddingLeft: 10
    },
    item: {},
    itemContainer: {
      height: 50,
      alignItems: 'center',
      flexDirection: 'row'
    },
    title: {
      color: '#000',
      fontFamily: ' '
    },
    selected: {
      color: '#0000ff'
    }
  });
},10388,[14305,14320,14323,14371,14377,14386,10284,10297,10033,10332]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[8]);

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[12]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[13]);

  var _ui = _$$_REQUIRE(_dependencyMap[14]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[15]);

  var _Devices = _$$_REQUIRE(_dependencyMap[16]);

  var _miot = _$$_REQUIRE(_dependencyMap[17]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _WifiSettingHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _WifiSettingConstant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _device = _$$_REQUIRE(_dependencyMap[22]);

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[23]);

  var _RouterInfoHelper = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[24]));

  var _AiotView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

  var _EasyConnectMode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26]));

  var _ModalView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27]));

  var _WifiItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28]));

  var _WifiItemForBsd = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29]));

  var _tr = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[30]));

  var options = _WifiSettingHelper.default.isSupportTriBand() ? [{
    title: '三频独立',
    subtitle: '',
    value: 0
  }, {
    title: '三频合一',
    subtitle: '2.4G、5G和5G Game WiFi合并',
    value: 1
  }] : [{
    title: '双频独立',
    subtitle: '',
    value: 0
  }, {
    title: '双频合一',
    subtitle: '2.4G和5GWiFi合并',
    value: 1
  }];

  var styles = _reactNative.StyleSheet.create({
    wifiAloneItem: {
      alignItems: 'center',
      backgroundColor: 'white'
    },
    wifiItem: {
      alignItems: 'center',
      backgroundColor: 'white',
      marginTop: 10
    },
    wifiItemWithOutMargin: {
      alignItems: 'center',
      backgroundColor: 'white'
    },
    rkbuttonItem: {
      alignItems: 'center',
      padding: 20
    },
    MessageDialog: {
      height: _Devices.ScreenH / 6
    },
    viewRkButton: {
      width: _Devices.ScreenW / 10 * 8
    },
    row_item_name_input: {
      width: _Devices.ScreenW,
      flexDirection: 'row',
      alignItems: 'center',
      marginStart: 46,
      justifyContent: 'flex-start'
    },
    text_name_input: {
      fontSize: 15,
      lineHeight: 20,
      color: '#000'
    },
    inputContainer: {
      height: 50,
      width: _Devices.ScreenW * 0.8,
      color: '#989898',
      fontSize: 13,
      marginStart: 10
    },
    separator: {
      width: _Devices.ScreenW,
      height: 1 / _reactNative.PixelRatio.get(),
      backgroundColor: 'rgba(0,0,0,0.15)',
      marginStart: 46
    },
    message: {
      textAlign: 'left',
      marginHorizontal: 25,
      color: '#333',
      fontSize: 12
    },
    messageContainer: {
      backgroundColor: '#fff',
      flex: 1,
      alignItems: 'center',
      justifyContent: 'center',
      marginBottom: 20
    },
    item_title: {
      fontWeight: 'bold',
      fontSize: 15,
      color: '#000000'
    },
    item_subtitle: {
      fontSize: 12,
      color: '#999999'
    },
    bandItem: {
      paddingHorizontal: 20,
      paddingVertical: 15,
      borderTopWidth: 0.5,
      borderColor: '#dedede'
    },
    bandItemSelected: {
      color: '#32BAC0'
    },
    list: {
      maxHeight: _Devices.ScreenH - 200
    },
    Separator: {
      marginHorizontal: 20
    }
  });

  var signalDataSource = [_RouterLocalizedStringUtil.localStrings.wifiSignalThroughwall, _RouterLocalizedStringUtil.localStrings.wifiSignalStandard, _RouterLocalizedStringUtil.localStrings.wifiSignalEnergysaving];
  var wifiItemName = ['2.4G WiFi', '5G WiFi', _RouterLocalizedStringUtil.localStrings.wifiSsidText, _RouterLocalizedStringUtil.localStrings.wifiEncryptionMode, _RouterLocalizedStringUtil.localStrings.wifiSignalIntensity, _RouterLocalizedStringUtil.localStrings.wifiPwdTitle, _RouterLocalizedStringUtil.localStrings.wifiHideTitle];
  var dialogButtonName = [_RouterLocalizedStringUtil.localStrings.alertOKTitle, _RouterLocalizedStringUtil.localStrings.alertCancelTitle, _RouterLocalizedStringUtil.localStrings.alertTipText];
  var dialogTip = _RouterLocalizedStringUtil.localStrings.wifiChangeAlertContent;
  var dialogTip2 = _RouterLocalizedStringUtil.localStrings.wifiReconnectTipContent;
  var dialogTipBsd = _WifiSettingHelper.default.isSupportTriBand() ? _RouterLocalizedStringUtil.localStrings.wifiMergeAlertContentTridBand : _RouterLocalizedStringUtil.localStrings.wifiMergeAlertContent;
  var dialogTipBsdClose = _WifiSettingHelper.default.isSupportTriBand() ? _RouterLocalizedStringUtil.localStrings.wifiMergeOffAlertContentTridBand : _RouterLocalizedStringUtil.localStrings.wifiMergeOffAlertContent;
  var dialogTipWPA3 = _RouterLocalizedStringUtil.localStrings.wifiWPA3AlertContent;

  var List = function (_React$Component) {
    (0, _inherits2.default)(List, _React$Component);

    function List(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, List);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(List).call(this, props, context));

      _this.UNSAFE_componentWillMount = function () {
        _this.onRefreshing();

        var encripDataSource = _WifiSettingHelper.default.getCapbilityIsWiFi6() ? [_WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA3, _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2_WPA3, _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2, _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA_WPA2, _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE] : [_WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2, _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA_WPA2, _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE];

        _this.setState({
          encripDataSource: encripDataSource,
          showMUMIMO: _WifiSettingHelper.default.getCapbilityIsMUMIMO(),
          CapbilityIsWiFi6: _WifiSettingHelper.default.getCapbilityIsWiFi6()
        });
      };

      _this.timeUpParent = function (param) {
        _this.props.navigation.goBack();
      };

      _this.ChangeSetting = function () {
        _this.setState({
          showRadar: _WifiSettingHelper.default.getShowRadar(_this.state.data, _this.state.fiveBandWidthString, _this.state.five2BandWidthString)
        });

        var api = _API.default.wifi_setting.set_all_wifi.remote;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var bsd = _this.state.bsd;
        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceId: deviceId,
            bsd: bsd
          }
        };

        if (!_CommonUtils.default.isNull(_this.state.info[0])) {
          var on1 = _this.state.gsmStatus;
          var ax = _this.state.ax;
          var txbf = _this.state.txbf;
          var bandwidth1 = _CommonUtils.default.isContainSomeString(_this.state.gsmBandWidthString, '/') ? 0 : _this.state.gsmBandWidthString;
          var ssid1 = _CommonUtils.default.isTextEmpty(_this.state.gsmWifiName) ? '' : _this.state.gsmWifiName;

          var encryption1 = _WifiSettingHelper.default.getEncryptionStringValue(_this.state.gsmEncripString);

          var pwd1 = _CommonUtils.default.isTextEmpty(_this.state.gsmPwd) || _this.state.gsmEncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE ? '' : _this.state.gsmPwd;
          var hidden1 = _this.state.gsmHidden;

          var txpwr1 = _WifiSettingHelper.default.getSignalStringValue(_this.state.gsmSignalString);

          var channel1 = _CommonUtils.default.isContainSomeString(_this.state.gsmChannelString, _RouterLocalizedStringUtil.localStrings.commonAuto) ? 0 : _this.state.gsmChannelString;
          paramsDic.params['on1'] = on1;
          paramsDic.params['ssid1'] = ssid1;
          paramsDic.params['encryption1'] = encryption1;
          paramsDic.params['pwd1'] = pwd1;
          paramsDic.params['hidden1'] = hidden1;
          paramsDic.params['txpwr1'] = txpwr1;
          paramsDic.params['ax'] = ax;
          paramsDic.params['txbf'] = txbf;
          paramsDic.params['bandwidth1'] = bandwidth1;
          paramsDic.params['channel1'] = channel1;
        }

        if (!_RouterInfoHelper.default.sharedInstance().isRouterWithout5G() && !_CommonUtils.default.isNull(_this.state.info[1])) {
          var on2 = _this.state.fiveStatus;
          var ssid2 = _CommonUtils.default.isTextEmpty(_this.state.fiveWifiName) ? '' : _this.state.fiveWifiName;

          var encryption2 = _WifiSettingHelper.default.getEncryptionStringValue(_this.state.fiveEncripString);

          var pwd2 = _CommonUtils.default.isTextEmpty(_this.state.fivePwd) || _this.state.fiveEncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE ? '' : _this.state.fivePwd;
          var hidden2 = _this.state.fiveHidden;

          var txpwr2 = _WifiSettingHelper.default.getSignalStringValue(_this.state.fiveSignalString);

          var bandwidth2 = _CommonUtils.default.isContainSomeString(_this.state.fiveBandWidthString, '/') ? 0 : _this.state.fiveBandWidthString;
          var channel2 = _CommonUtils.default.isContainSomeString(_this.state.fiveChannelString, _RouterLocalizedStringUtil.localStrings.commonAuto) ? 0 : _this.state.fiveChannelString;
          paramsDic.params['on2'] = on2;
          paramsDic.params['ssid2'] = ssid2;
          paramsDic.params['encryption2'] = encryption2;
          paramsDic.params['pwd2'] = pwd2;
          paramsDic.params['hidden2'] = hidden2;
          paramsDic.params['txpwr2'] = txpwr2;
          paramsDic.params['bandwidth2'] = bandwidth2;
          paramsDic.params['channel2'] = channel2;
        }

        if (!_CommonUtils.default.isNull(_this.state.info[2])) {
          if (_WifiSettingHelper.default.isSupportTriBand()) {
            var on3 = _this.state.five2Status;
            var ssid3 = _CommonUtils.default.isTextEmpty(_this.state.five2WifiName) ? '' : _this.state.five2WifiName;

            var encryption3 = _WifiSettingHelper.default.getEncryptionStringValue(_this.state.five2EncripString);

            var pwd3 = _CommonUtils.default.isTextEmpty(_this.state.five2Pwd) || _this.state.five2EncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE ? '' : _this.state.five2Pwd;
            var hidden3 = _this.state.five2Hidden;

            var txpwr3 = _WifiSettingHelper.default.getSignalStringValue(_this.state.five2SignalString);

            var bandwidth3 = _CommonUtils.default.isContainSomeString(_this.state.five2BandWidthString, '/') ? 0 : _this.state.five2BandWidthString;
            var channel3 = _CommonUtils.default.isContainSomeString(_this.state.five2ChannelString, _RouterLocalizedStringUtil.localStrings.commonAuto) ? 0 : _this.state.five2ChannelString;
            paramsDic.params['on3'] = on3;
            paramsDic.params['ssid3'] = ssid3;
            paramsDic.params['encryption3'] = encryption3;
            paramsDic.params['pwd3'] = pwd3;
            paramsDic.params['hidden3'] = hidden3;
            paramsDic.params['txpwr3'] = txpwr3;
            paramsDic.params['bandwidth3'] = bandwidth3;
            paramsDic.params['channel3'] = channel3;
          } else {
            var _on = _this.state.info[2].status;

            var _ssid = _CommonUtils.default.isTextEmpty(_this.state.info[2].ssid) ? '' : _this.state.info[2].ssid;

            var _encryption = _this.state.info[2].encryption;

            var _pwd = _CommonUtils.default.isTextEmpty(_this.state.info[2].password) ? '' : _this.state.info[2].password;

            paramsDic.params['on3'] = _on;
            paramsDic.params['ssid3'] = _ssid;
            paramsDic.params['encryption3'] = _encryption;
            paramsDic.params['pwd3'] = _pwd;
          }
        }

        _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
          if (_this.state.showRadar && _this.isRanderApOpen()) {
            if (_this.state.bsd === 1) {
              if (_this.state.gsmStatus !== 0) {
                _this.setModalVisible(true);
              } else {
                _this.setState({
                  successChangeVisible: true,
                  loading: false
                });
              }
            } else {
              if (_WifiSettingHelper.default.isSupportTriBand()) {
                if (_this.state.five2Status == 1) {
                  _this.setModalVisible(true);
                } else {
                  _this.setState({
                    successChangeVisible: true,
                    loading: false
                  });
                }
              } else {
                if (_this.state.fiveStatus == 1) {
                  _this.setModalVisible(true);
                } else {
                  _this.setState({
                    successChangeVisible: true,
                    loading: false
                  });
                }
              }
            }
          } else {
            _this.setState({
              successChangeVisible: true,
              loading: false
            });
          }
        }).catch(function (e) {
          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeFail);

          _this.setState({
            loading: false
          });
        });
      };

      _this._GetInputMessage = function () {
        if (_this.state.has5GGame && _this.state.five2Status == 1) {
          var msg2 = _WifiSettingHelper.default.getWifiSetiingInputErrorMessage(_this.state.five2WifiName, _this.state.five2Pwd, _this.state.five2EncripString);

          if (!_CommonUtils.default.isTextEmpty(msg2)) {
            return msg2;
          }
        }

        if (_this.state.has5G && _this.state.fiveStatus == 1) {
          var msg1 = _WifiSettingHelper.default.getWifiSetiingInputErrorMessage(_this.state.fiveWifiName, _this.state.fivePwd, _this.state.fiveEncripString);

          if (!_CommonUtils.default.isTextEmpty(msg1)) {
            return msg1;
          }
        }

        var msg = _WifiSettingHelper.default.getWifiSetiingInputErrorMessage(_this.state.gsmWifiName, _this.state.gsmPwd, _this.state.gsmEncripString);

        if (!_CommonUtils.default.isTextEmpty(msg)) {
          return msg;
        }
      };

      _this._CheckChangeContainWPA3 = function () {
        if (_WifiSettingHelper.default.isSupportTriBand()) {
          if (!_CommonUtils.default.isNull(_this.getWifiItemBsd()) && _this.getWifiItemBsd() == 0) {
            return _this.state.gsmEncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA3 || _this.state.gsmEncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2_WPA3 || _this.state.fiveEncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA3 || _this.state.fiveEncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2_WPA3 || _this.state.five2EncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA3 || _this.state.five2EncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2_WPA3;
          }
        } else if (_WifiSettingHelper.default.isSupportWithout5G()) {
          if (!_CommonUtils.default.isNull(_this.getWifiItemBsd()) && _this.getWifiItemBsd() == 0) {
            return _this.state.gsmEncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA3 || _this.state.gsmEncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2_WPA3;
          }
        } else {
          if (!_CommonUtils.default.isNull(_this.getWifiItemBsd()) && _this.getWifiItemBsd() == 0) {
            return _this.state.gsmEncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA3 || _this.state.gsmEncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2_WPA3 || _this.state.fiveEncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA3 || _this.state.fiveEncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2_WPA3;
          }
        }

        if (!_CommonUtils.default.isNull(_this.getWifiItemBsd()) && _this.getWifiItemBsd() == 1) {
          return _this.state.gsmEncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA3 || _this.state.gsmEncripString == _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_WPA2_WPA3;
        }
      };

      _this._CheckInputValidate = function () {
        if (_this.state.has5GGame) {
          if (_this.state.five2Status == 1) {
            return _WifiSettingHelper.default.getWifiSetiingInputErrorMessage(_this.state.five2WifiName, _this.state.five2Pwd, _this.state.five2EncripString) == '' && _WifiSettingHelper.default.getWifiSetiingInputErrorMessage(_this.state.fiveWifiName, _this.state.fivePwd, _this.state.fiveEncripString) == '' && _WifiSettingHelper.default.getWifiSetiingInputErrorMessage(_this.state.gsmWifiName, _this.state.gsmPwd, _this.state.gsmEncripString) == '';
          } else {
            return _WifiSettingHelper.default.getWifiSetiingInputErrorMessage(_this.state.fiveWifiName, _this.state.fivePwd, _this.state.fiveEncripString) == '' && _WifiSettingHelper.default.getWifiSetiingInputErrorMessage(_this.state.gsmWifiName, _this.state.gsmPwd, _this.state.gsmEncripString) == '';
          }
        }

        if (_this.state.has5G) {
          if (_this.state.fiveStatus == 1) {
            return _WifiSettingHelper.default.getWifiSetiingInputErrorMessage(_this.state.fiveWifiName, _this.state.fivePwd, _this.state.fiveEncripString) == '' && _WifiSettingHelper.default.getWifiSetiingInputErrorMessage(_this.state.gsmWifiName, _this.state.gsmPwd, _this.state.gsmEncripString) == '';
          } else {
            return _WifiSettingHelper.default.getWifiSetiingInputErrorMessage(_this.state.gsmWifiName, _this.state.gsmPwd, _this.state.gsmEncripString) == '';
          }
        }

        return _WifiSettingHelper.default.getWifiSetiingInputErrorMessage(_this.state.gsmWifiName, _this.state.gsmPwd, _this.state.gsmEncripString) == '';
      };

      _this._CheckValues = function () {
        if (!_CommonUtils.default.isNull(_this.state.data)) {
          if (_this.state.data.bsd != _this.state.bsd) {
            return true;
          }

          if (!_CommonUtils.default.isNull(_this.state.info[0])) {
            if (_this.state.gsmStatus != _this.state.info[0].status) {
              return true;
            }

            if (_this.state.gsmHidden != _this.state.info[0].hidden) {
              return true;
            }

            if (_this.state.gsmWifiName != _this.state.info[0].ssid) {
              return true;
            }

            if (_WifiSettingHelper.default.getEncryptionStringValue(_this.state.gsmEncripString) != _this.state.info[0].encryption) {
              return true;
            }

            if (!_WifiSettingHelper.default.isNotSupportShowBandWidthOrChannel()) {
              if ((_CommonUtils.default.isContainSomeString(_this.state.gsmBandWidthString, '/') ? 0 : _this.state.gsmBandWidthString) != (_this.state.info[0].bandwidth == 'nil' ? 0 : _this.state.info[0].bandwidth)) {
                return true;
              }

              if ((_CommonUtils.default.isContainSomeString(_this.state.gsmChannelString, _RouterLocalizedStringUtil.localStrings.commonAuto) ? 0 : _this.state.gsmChannelString) != _this.state.info[0].channel) {
                return true;
              }
            }

            if (_WifiSettingHelper.default.getSignalStringValue(_this.state.gsmSignalString) != _this.state.info[0].txpwr) {
              return true;
            }

            if (_this.state.gsmPwd != (_CommonUtils.default.isNull(_this.state.info[0].password) ? '' : _this.state.info[0].password)) {
              return true;
            }
          }

          if (!_CommonUtils.default.isNull(_this.state.info[1]) && !_RouterInfoHelper.default.sharedInstance().isRouterWithout5G()) {
            if (_this.state.fiveStatus != _this.state.info[1].status) {
              return true;
            }

            if (_this.state.fiveHidden != _this.state.info[1].hidden) {
              return true;
            }

            if (_this.state.fiveWifiName != _this.state.info[1].ssid) {
              return true;
            }

            if (_WifiSettingHelper.default.getEncryptionStringValue(_this.state.fiveEncripString) != _this.state.info[1].encryption) {
              return true;
            }

            if (!_WifiSettingHelper.default.isNotSupportShowBandWidthOrChannel()) {
              if ((_CommonUtils.default.isContainSomeString(_this.state.fiveBandWidthString, '/') ? 0 : _this.state.fiveBandWidthString) != (_this.state.info[1].bandwidth == "nil" ? 0 : _this.state.info[1].bandwidth)) {
                return true;
              }

              if ((_CommonUtils.default.isContainSomeString(_this.state.fiveChannelString, _RouterLocalizedStringUtil.localStrings.commonAuto) ? 0 : _this.state.fiveChannelString) != _this.state.info[1].channel) {
                return true;
              }
            }

            if (_WifiSettingHelper.default.getSignalStringValue(_this.state.fiveSignalString) != _this.state.info[1].txpwr) {
              return true;
            }

            if (_this.state.fivePwd != (_CommonUtils.default.isNull(_this.state.info[1].password) ? '' : _this.state.info[1].password)) {
              return true;
            }
          }

          if (_this.state.has5GGame && _WifiSettingHelper.default.isSupportTriBand()) {
            if (_this.state.five2Status != _this.state.info[2].status) {
              return true;
            }

            if (_this.state.five2Hidden != _this.state.info[2].hidden) {
              return true;
            }

            if (_this.state.five2WifiName != _this.state.info[2].ssid) {
              return true;
            }

            if (_this.state.has5GGame && _WifiSettingHelper.default.getEncryptionStringValue(_this.state.five2EncripString) != _this.state.info[2].encryption) {
              return true;
            }

            if (!_WifiSettingHelper.default.isNotSupportShowBandWidthOrChannel()) {
              if (_this.state.has5GGame && (_CommonUtils.default.isContainSomeString(_this.state.five2BandWidthString, '/') ? 0 : _this.state.five2BandWidthString) != (_this.state.info[2].bandwidth == "nil" ? 0 : _this.state.info[2].bandwidth)) {
                return true;
              }

              if (_this.state.has5GGame && (_CommonUtils.default.isContainSomeString(_this.state.five2ChannelString, _RouterLocalizedStringUtil.localStrings.commonAuto) ? 0 : _this.state.five2ChannelString) != _this.state.info[2].channel) {
                return true;
              }
            }

            if (_this.state.has5GGame && _WifiSettingHelper.default.getSignalStringValue(_this.state.five2SignalString) != _this.state.info[2].txpwr) {
              return true;
            }

            if (_this.state.has5GGame && _this.state.five2Pwd != (_CommonUtils.default.isNull(_this.state.info[2].password) ? '' : _this.state.info[2].password)) {
              return true;
            }
          }
        }

        return false;
      };

      _this.onRefreshing = function () {
        _this.setState({
          loading: true
        });

        var api = _API.default.wifi_setting.wifi_detail_all.remote;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceId: deviceId
          }
        };

        _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
          return _this.setState({
            showContect: true,
            data: res,
            info: res.info,
            has5G: !_CommonUtils.default.isNull(res.info[1]),
            has5GGame: !_CommonUtils.default.isNull(res.info[2]),
            bsd: _WifiSettingHelper.default.isD01() ? 1 : res.bsd,
            selectedIndexArray: [_this.getOptionsIndexFromBsd(res.bsd)],
            gsmBandWidthDataSource: _WifiSettingHelper.default.getBandWidthDataSource(0, res.info[0].channel),
            ax: _WifiSettingHelper.default.getAX(res),
            txbf: _WifiSettingHelper.default.getMUMIMO(res),
            gsmHidden: _WifiSettingHelper.default.getSwitchHidden(res, 0),
            gsmStatus: _WifiSettingHelper.default.getSwitchStatus(res, 0),
            gsmWifiName: _WifiSettingHelper.default.getSSIDString(res, 0),
            gsmEncripString: _WifiSettingHelper.default.getEncryptionString(res, 0),
            gsmSignalString: _WifiSettingHelper.default.getSignalString(res, 0),
            gsmBandWidthString: _WifiSettingHelper.default.getBandWidthString(res, 0),
            gsmChannelString: _WifiSettingHelper.default.getCannelString(res, 0),
            gsmPwd: _WifiSettingHelper.default.getPWDString(res, 0),
            fiveHidden: _WifiSettingHelper.default.getSwitchHidden(res, 1),
            fiveStatus: _WifiSettingHelper.default.getSwitchStatus(res, 1),
            fiveWifiName: _WifiSettingHelper.default.getSSIDString(res, 1),
            fiveEncripString: _WifiSettingHelper.default.getEncryptionString(res, 1),
            fiveSignalString: _WifiSettingHelper.default.getSignalString(res, 1),
            fiveBandWidthDataSource: _WifiSettingHelper.default.getBandWidthDataSource(1, res.info[1] ? res.info[1].channel : 0),
            fiveBandWidthString: _WifiSettingHelper.default.getBandWidthString(res, 1),
            fiveChannelString: _WifiSettingHelper.default.getCannelString(res, 1),
            fivePwd: _WifiSettingHelper.default.getPWDString(res, 1),
            five2Hidden: _WifiSettingHelper.default.getSwitchHidden(res, 2),
            five2Status: _WifiSettingHelper.default.getSwitchStatus(res, 2),
            five2WifiName: _WifiSettingHelper.default.getSSIDString(res, 2),
            five2EncripString: _WifiSettingHelper.default.getEncryptionString(res, 2),
            five2SignalString: _WifiSettingHelper.default.getSignalString(res, 2),
            five2BandWidthDataSource: _WifiSettingHelper.default.getBandWidthDataSource(2, res.info[2] ? res.info[2].channel : 0),
            five2BandWidthString: _WifiSettingHelper.default.getBandWidthString(res, 2),
            five2ChannelString: _WifiSettingHelper.default.getCannelString(res, 2),
            five2Pwd: _WifiSettingHelper.default.getPWDString(res, 2),
            loading: false,
            channelArray24g: _WifiSettingHelper.default.getCannelArray(0, res),
            channelArray5g: _WifiSettingHelper.default.getCannelArray(1, res),
            channelArray5g2: _WifiSettingHelper.default.getCannelArray(2, res)
          });
        }).catch(function (e) {
          _this.setState({
            loading: false
          });

          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiRequestInfoFail);

          _this.props.navigation.goBack();
        });
      };

      var timer1 = null;
      _this.state = {
        data: {},
        info: [],
        bsd: 0,
        gsmHidden: 0,
        gsmStatus: 1,
        gsmWifiName: '',
        gsmEncripString: '',
        gsmSignalString: '',
        gsmBandWidthString: '',
        gsmChannelString: '',
        gsmBandWidthDataSource: [],
        gsmPwd: '',
        channelArray24g: [],
        fiveHidden: 0,
        fiveStatus: 1,
        fiveWifiName: '',
        fiveEncripString: '',
        fiveSignalString: '',
        fiveBandWidthString: '',
        fiveChannelString: '',
        fiveBandWidthDataSource: [],
        fivePwd: '',
        channelArray5g: [],
        five2Hidden: 0,
        five2Status: 1,
        five2WifiName: '',
        five2EncripString: '',
        five2SignalString: '',
        five2BandWidthString: '',
        five2ChannelString: '',
        five2BandWidthDataSource: [],
        five2Pwd: '',
        channelArray5g2: [],
        ax: 0,
        txbf: 0,
        showContect: false,
        encripSingle: false,
        signalSingle: false,
        ChannelSingle: false,
        fiveChannelSingle: false,
        five2ChannelSingle: false,
        BandWidthSingle: false,
        encripType: 0,
        signalType: 0,
        fiveBandWidthSingle: false,
        five2BandWidthSingle: false,
        signalLocation: 0,
        encripLocation: 0,
        confirmDisabled: false,
        sueChangeVisible: false,
        channelChangeTipVisible: false,
        bsdChangeVisible: false,
        bsdChangeCloseVisible: false,
        successChangeVisible: false,
        loading: false,
        valueChanged: false,
        WPA3Open: false,
        encripDataSource: [],
        showMUMIMO: false,
        CapbilityIsWiFi6: false,
        modalVisible: false,
        showRadar: false,
        reTipVisable: false,
        selectedIndexArray: [0],
        bsdSwitchVisible: false,
        has5GGame: false,
        has5G: false
      };
      return _this;
    }

    (0, _createClass2.default)(List, [{
      key: "onSelect",
      value: function onSelect(result, selectedIndexArray) {
        var resultValue = options[result].value;

        if (resultValue == selectedIndexArray) {
          return;
        }

        this.setState({
          bsd: resultValue,
          bsdChangeVisible: resultValue > 0,
          bsdChangeCloseVisible: resultValue === 0,
          gsmStatus: 1,
          selectedIndexArray: result,
          bsdSwitchVisible: false
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        _reactNative.DeviceEventEmitter.emit('updatePassword');
      }
    }, {
      key: "onBsdSwitchDialogDismiss",
      value: function onBsdSwitchDialogDismiss() {
        this.setState({
          bsdSwitchVisible: false
        });
      }
    }, {
      key: "getOptionsIndexFromBsd",
      value: function getOptionsIndexFromBsd(bsd) {
        var position = -1;

        for (var i = 0; i < options.length; i++) {
          if (options[i].value == bsd) {
            position = i;
          }
        }

        return position;
      }
    }, {
      key: "getBsdSwitchValue",
      value: function getBsdSwitchValue() {
        return options[this.getOptionsIndexFromBsd(this.state.bsd)].title;
      }
    }, {
      key: "getEncripString",
      value: function getEncripString(value) {
        if (value == 2) {
          return this.state.five2EncripString;
        } else if (value == 1) {
          return this.state.fiveEncripString;
        } else {
          return this.state.gsmEncripString;
        }
      }
    }, {
      key: "getSignalString",
      value: function getSignalString(value) {
        if (value == 2) {
          return this.state.five2SignalString;
        } else if (value == 1) {
          return this.state.fiveSignalString;
        } else {
          return this.state.gsmSignalString;
        }
      }
    }, {
      key: "getWifiItemBsd",
      value: function getWifiItemBsd() {
        if (_WifiSettingHelper.default.isSupportTriBand()) {
          return this.state.bsd;
        } else if (this.state.bsd > 0) {
          return 1;
        }

        return this.state.bsd;
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: 'white',
            flex: 1
          }
        }, this.state.showContect ? _react.default.createElement(_reactNative.ScrollView, null, _WifiSettingHelper.default.isSupportShowWifiMerge(this.state.data) || _WifiSettingHelper.default.isSupportTriBand() ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_ListItem.ListItem, {
          title: "WiFi\u5408\u5E76\u8BBE\u7F6E",
          titleStyle: styles.item_title,
          containerStyle: {
            height: 50
          },
          showSeparator: false,
          value: this.getBsdSwitchValue(),
          valueStyle: {
            color: '#32BAC0',
            fontSize: 14
          },
          onPress: function onPress() {
            _this2.setState({
              bsdSwitchVisible: true
            });
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: [styles.item_subtitle, {
            marginHorizontal: 30,
            marginBottom: 15
          }]
        }, "\u4E0D\u540Cwifi\u9891\u6BB5\u5408\u5E76\uFF0C\u81EA\u52A8\u4E3A\u4F60\u5207\u6362\u81F3\u6700\u4F73wifi\u7F51\u7EDC"), _react.default.createElement(_Separator.default, {
          style: styles.Separator
        })) : null, _react.default.createElement(_WifiItemForBsd.default, {
          BSD: this.getWifiItemBsd(),
          WifiSwitchTitle: "WiFi",
          showContent: this.state.gsmStatus == 1,
          SSID: this.state.gsmWifiName,
          PWD: this.state.gsmPwd,
          EncripValue: this.state.gsmEncripString,
          SignalValue: this.state.gsmSignalString,
          BandWidthValue: this.state.gsmBandWidthString,
          ChannelValue: this.state.gsmChannelString,
          SignalValue2: this.state.fiveSignalString,
          BandWidthValue2: this.state.fiveBandWidthString,
          ChannelValue2: this.state.fiveChannelString,
          SignalValue3: this.state.five2SignalString,
          BandWidthValue3: this.state.five2BandWidthString,
          ChannelValue3: this.state.five2ChannelString,
          editablePWD: this.state.gsmEncripString != _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE,
          WifiSwitchSubtitleTitle: _RouterInfoHelper.default.sharedInstance().isSupportMeshNetByCap() ? '在Mesh模式下不支持关闭WiFi开关' : '',
          WifiSwitchStatus: this.state.gsmStatus == 1,
          WifiSwitchDisabled: _RouterInfoHelper.default.sharedInstance().isSupportMeshNetByCap(),
          WifiHiddenStatus: this.state.gsmHidden == 1,
          needShowHiddenWifi: this.needShowHiddenWifi(),
          onSSIDChange: function onSSIDChange(text) {
            return _this2.setState({
              gsmWifiName: text
            });
          },
          onPWDChange: function onPWDChange(text) {
            return _this2.setState({
              gsmPwd: text
            });
          },
          onWifiSwitchChange: function onWifiSwitchChange(value) {
            _this2.WifiSwitchChange(0, value);
          },
          onEncripOnPress: function onEncripOnPress() {
            _this2.setState({
              encripType: 0,
              encripSingle: true
            });
          },
          onSignalOnPress: function onSignalOnPress() {
            _this2.setState({
              signalType: 0,
              signalSingle: true
            });
          },
          onBandWidthOnPress: function onBandWidthOnPress() {
            _this2.setState({
              BandWidthSingle: true
            });
          },
          onChannelOnPress: function onChannelOnPress() {
            _this2.setState({
              ChannelSingle: true
            });
          },
          onSignalOnPress2: function onSignalOnPress2() {
            _this2.setState({
              signalType: 1,
              signalSingle: true
            });
          },
          onBandWidthOnPress2: function onBandWidthOnPress2() {
            _this2.setState({
              fiveBandWidthSingle: true
            });
          },
          onChannelOnPress2: function onChannelOnPress2() {
            _this2.setState({
              fiveChannelSingle: true
            });
          },
          onSignalOnPress3: function onSignalOnPress3() {
            _this2.setState({
              signalType: 2,
              signalSingle: true
            });
          },
          onBandWidthOnPress3: function onBandWidthOnPress3() {
            _this2.setState({
              five2BandWidthSingle: true
            });
          },
          onChannelOnPress3: function onChannelOnPress3() {
            _this2.setState({
              five2ChannelSingle: true
            });
          },
          onWifiHiddenSwitchChange: function onWifiHiddenSwitchChange(value) {
            return _this2.setState({
              gsmHidden: value ? 1 : 0
            });
          }
        }), this.state.bsd === 0 ? _react.default.createElement(_WifiItem.default, {
          WifiSwitchTitle: wifiItemName[0],
          showContent: this.state.gsmStatus == 1 && !_WifiSettingHelper.default.isD01(),
          SSID: this.state.gsmWifiName,
          PWD: this.state.gsmPwd,
          EncripValue: this.state.gsmEncripString,
          SignalValue: this.state.gsmSignalString,
          BandWidthValue: this.state.gsmBandWidthString,
          ChannelValue: this.state.gsmChannelString,
          editablePWD: this.state.gsmEncripString != _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE,
          WifiSwitchSubtitleTitle: _RouterInfoHelper.default.sharedInstance().isSupportMeshNetByCap() ? '在Mesh模式下不支持关闭WiFi开关' : '',
          WifiSwitchStatus: this.state.gsmStatus == 1,
          WifiSwitchDisabled: _RouterInfoHelper.default.sharedInstance().isSupportMeshNetByCap(),
          BSD: this.getWifiItemBsd(),
          WifiHiddenStatus: this.state.gsmHidden == 1,
          onSSIDChange: function onSSIDChange(text) {
            return _this2.setState({
              gsmWifiName: text
            });
          },
          onPWDChange: function onPWDChange(text) {
            return _this2.setState({
              gsmPwd: text
            });
          },
          onWifiSwitchChange: function onWifiSwitchChange(value) {
            _this2.WifiSwitchChange(0, value);
          },
          onEncripOnPress: function onEncripOnPress() {
            _this2.setState({
              encripType: 0,
              encripSingle: true
            });
          },
          onSignalOnPress: function onSignalOnPress() {
            _this2.setState({
              signalType: 0,
              signalSingle: true
            });
          },
          onBandWidthOnPress: function onBandWidthOnPress() {
            _this2.setState({
              BandWidthSingle: true
            });
          },
          onChannelOnPress: function onChannelOnPress() {
            _this2.setState({
              ChannelSingle: true
            });
          },
          onWifiHiddenSwitchChange: function onWifiHiddenSwitchChange(value) {
            return _this2.setState({
              gsmHidden: value ? 1 : 0
            });
          }
        }) : null, this.needShow5GWifiInfo() ? _react.default.createElement(_WifiItem.default, {
          WifiSwitchTitle: wifiItemName[1],
          showContent: this.state.fiveStatus == 1 && this.state.bsd == 0,
          SSID: this.state.fiveWifiName,
          PWD: this.state.fivePwd,
          EncripValue: this.state.fiveEncripString,
          SignalValue: this.state.fiveSignalString,
          BandWidthValue: this.state.fiveBandWidthString,
          ChannelValue: this.state.fiveChannelString,
          editablePWD: this.state.fiveEncripString != _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE,
          WifiSwitchSubtitleTitle: _RouterInfoHelper.default.sharedInstance().isSupportMeshNetByCap() ? '在Mesh模式下不支持关闭WiFi开关' : '',
          WifiSwitchStatus: this.state.fiveStatus == 1 && this.state.bsd == 0,
          WifiSwitchDisabled: _RouterInfoHelper.default.sharedInstance().isSupportMeshNetByCap(),
          BSD: this.getWifiItemBsd(),
          WifiHiddenStatus: this.state.fiveHidden == 1,
          onSSIDChange: function onSSIDChange(text) {
            return _this2.setState({
              fiveWifiName: text
            });
          },
          onPWDChange: function onPWDChange(text) {
            return _this2.setState({
              fivePwd: text
            });
          },
          onWifiSwitchChange: function onWifiSwitchChange(value) {
            _this2.WifiSwitchChange(1, value);
          },
          onEncripOnPress: function onEncripOnPress() {
            _this2.setState({
              encripType: 1,
              encripSingle: true
            });
          },
          onSignalOnPress: function onSignalOnPress() {
            _this2.setState({
              signalType: 1,
              signalSingle: true
            });
          },
          onBandWidthOnPress: function onBandWidthOnPress() {
            _this2.setState({
              fiveBandWidthSingle: true
            });
          },
          onChannelOnPress: function onChannelOnPress() {
            _this2.setState({
              fiveChannelSingle: true
            });
          },
          onWifiHiddenSwitchChange: function onWifiHiddenSwitchChange(value) {
            return _this2.setState({
              fiveHidden: value ? 1 : 0
            });
          }
        }) : null, _WifiSettingHelper.default.isSupportTriBand() && this.state.bsd == 0 ? _react.default.createElement(_WifiItem.default, {
          WifiSwitchTitle: "5G Game WiFi",
          showContent: this.state.five2Status == 1 && this.state.bsd == 0,
          SSID: this.state.five2WifiName,
          PWD: this.state.five2Pwd,
          EncripValue: this.state.five2EncripString,
          SignalValue: this.state.five2SignalString,
          BandWidthValue: this.state.five2BandWidthString,
          ChannelValue: this.state.five2ChannelString,
          editablePWD: this.state.five2EncripString != _WifiSettingConstant.default.SETTING_WIFI_ENCYPTION_NONE,
          WifiSwitchSubtitleTitle: _RouterInfoHelper.default.sharedInstance().isSupportMeshNetByCap() ? '在Mesh模式下不支持关闭WiFi开关' : '',
          WifiSwitchStatus: this.state.five2Status == 1 && this.state.bsd == 0,
          WifiSwitchDisabled: _RouterInfoHelper.default.sharedInstance().isSupportMeshNetByCap(),
          BSD: this.state.bsd,
          WifiHiddenStatus: this.state.five2Hidden == 1,
          onSSIDChange: function onSSIDChange(text) {
            return _this2.setState({
              five2WifiName: text
            });
          },
          onPWDChange: function onPWDChange(text) {
            return _this2.setState({
              five2Pwd: text
            });
          },
          onWifiSwitchChange: function onWifiSwitchChange(value) {
            _this2.WifiSwitchChange(2, value);
          },
          onEncripOnPress: function onEncripOnPress() {
            _this2.setState({
              encripType: 2,
              encripSingle: true
            });
          },
          onSignalOnPress: function onSignalOnPress() {
            _this2.setState({
              signalType: 2,
              signalSingle: true
            });
          },
          onBandWidthOnPress: function onBandWidthOnPress() {
            _this2.setState({
              five2BandWidthSingle: true
            });
          },
          onChannelOnPress: function onChannelOnPress() {
            _this2.setState({
              five2ChannelSingle: true
            });
          },
          onWifiHiddenSwitchChange: function onWifiHiddenSwitchChange(value) {
            return _this2.setState({
              five2Hidden: value ? 1 : 0
            });
          }
        }) : null, this.state.CapbilityIsWiFi6 ? _react.default.createElement(_reactNative.View, {
          style: styles.wifiAloneItem
        }, _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: 'WiFi 5 兼容模式',
          value: this.state.ax == 0,
          showSeparator: false,
          disabled: false,
          subtitle: '切换至WiFi5模式，解决老设备兼容问题',
          onValueChange: function onValueChange(value) {
            return _this2.setState({
              ax: value ? 0 : 1,
              sueChangeVisible: true
            });
          }
        })) : null, this.state.showMUMIMO ? _react.default.createElement(_reactNative.View, {
          style: styles.wifiAloneItem
        }, _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: 'MU-MIMO',
          value: this.state.txbf == 3,
          showSeparator: false,
          disabled: false,
          subtitle: '路由器与多终端同时通信，提升WiFi体验',
          onValueChange: function onValueChange(value) {
            return _this2.setState({
              txbf: value ? 3 : 0,
              sueChangeVisible: true
            });
          }
        })) : null, _react.default.createElement(_AiotView.default, null), _react.default.createElement(_EasyConnectMode.default, null), _react.default.createElement(_reactNative.View, {
          style: styles.rkbuttonItem
        }, _react.default.createElement(_reactNativeUiKitten.RkButton, {
          onPress: function onPress() {
            return _this2._CheckValues() && _this2._CheckChangeContainWPA3() ? _this2._CheckInputValidate() ? _this2.setState({
              WPA3Open: true
            }) : _CommonUtils.default.ShowToastBottom(_this2._GetInputMessage()) : _this2._CheckInputValidate() ? _this2._CheckValues() ? _this2._showDialog() : _this2.props.navigation.goBack() : _CommonUtils.default.ShowToastBottom(_this2._GetInputMessage());
          },
          rkType: "rounded",
          disabled: this.state.confirmDisabled,
          style: styles.viewRkButton
        }, _RouterLocalizedStringUtil.localStrings.buttonConfirmTitle)), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.sueChangeVisible,
          showTitle: true,
          title: dialogButtonName[2],
          canDismiss: false,
          buttons: [{
            text: dialogButtonName[1],
            style: {
              color: '#4C4C4C'
            },
            callback: function callback(_) {
              return _this2.setState({
                ax: _WifiSettingHelper.default.getAX(_this2.state.data),
                txbf: _WifiSettingHelper.default.getMUMIMO(_this2.state.data),
                sueChangeVisible: false
              });
            }
          }, {
            text: dialogButtonName[0],
            style: {
              color: '#F43F31'
            },
            callback: function callback(_) {
              _this2.setState({
                loading: true,
                sueChangeVisible: false
              });

              _this2.ChangeSetting();
            }
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.messageContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.message
        }, _WifiSettingHelper.default.getChangeWifiReStartTip(this.state.fiveStatus, this.state.five2Status, this.state.bsd, this.state.gsmStatus)))), _react.default.createElement(_ui.MessageDialog, {
          title: dialogButtonName[2],
          message: this.state.fiveChannelString === 36 ? '160MHz频宽只适用于36至64信道，系统将自动为您切换至36信道' : '160MHz频宽只适用于36至64信道，系统将自动为您切换至80MHz频宽',
          cancelable: false,
          confirm: dialogButtonName[0],
          onDismiss: function onDismiss() {
            _this2.setState({
              channelChangeTipVisible: false
            });
          },
          visible: this.state.channelChangeTipVisible
        }), _react.default.createElement(_ui.MessageDialog, {
          title: dialogButtonName[2],
          message: dialogTipBsd,
          cancelable: false,
          cancel: dialogButtonName[1],
          confirm: dialogButtonName[0],
          onCancel: function onCancel(e) {
            if (_this2.state.has5GGame) {
              _this2.setState({
                bsdChangeVisible: false,
                bsd: _this2.state.data.bsd,
                selectedIndexArray: [_this2.state.data.bsd],
                fiveStatus: _this2.state.data.bsd > 0 ? 0 : _this2.state.data.info[1].status,
                five2Status: _this2.state.data.bsd == 1 ? 0 : _this2.state.data.info[2].status
              });
            } else {
              _this2.setState({
                bsdChangeVisible: false,
                bsd: _this2.state.data.bsd,
                selectedIndexArray: [_this2.state.data.bsd],
                fiveStatus: _this2.state.data.bsd > 0 ? 0 : _this2.state.data.info[1].status
              });
            }
          },
          onConfirm: function onConfirm(e) {
            _this2.setState({
              loading: true
            });

            _this2.ChangeSetting();
          },
          visible: this.state.bsdChangeVisible
        }), _react.default.createElement(_ui.MessageDialog, {
          title: dialogButtonName[2],
          message: dialogTipBsdClose,
          cancelable: false,
          cancel: dialogButtonName[1],
          confirm: dialogButtonName[0],
          onCancel: function onCancel(e) {
            _this2.setState({
              bsdChangeCloseVisible: false,
              bsd: _this2.state.data.bsd,
              gsmStatus: 1
            });
          },
          onConfirm: function onConfirm(e) {
            _this2.setState({
              loading: true
            });

            _this2.ChangeSetting();
          },
          visible: this.state.bsdChangeCloseVisible
        }), _react.default.createElement(_ui.MessageDialog, {
          title: dialogButtonName[2],
          message: dialogTip2,
          cancelable: false,
          confirm: dialogButtonName[0],
          onConfirm: function onConfirm(e) {
            _this2.props.navigation.goBack();
          },
          onDismiss: function onDismiss() {
            _this2.setState({
              successChangeVisible: false
            });
          },
          visible: this.state.successChangeVisible
        }), _react.default.createElement(_ui.MessageDialog, {
          title: dialogButtonName[2],
          message: dialogTipWPA3,
          cancelable: false,
          cancel: dialogButtonName[1],
          confirm: dialogButtonName[0],
          onCancel: function onCancel(e) {},
          onConfirm: function onConfirm(e) {
            _this2._CheckInputValidate() ? _this2._CheckValues() ? _this2.setState({
              sueChangeVisible: true
            }) : _this2.props.navigation.goBack() : _CommonUtils.default.ShowToastBottom(_this2._GetInputMessage());
          },
          onDismiss: function onDismiss() {
            _this2.setState({
              WPA3Open: false
            });
          },
          visible: this.state.WPA3Open
        }), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.reTipVisable,
          showTitle: true,
          title: "\u63D0\u793A",
          canDismiss: false,
          buttons: [{
            text: '我知道了',
            style: {
              color: '#4C4C4C'
            },
            callback: function callback(_) {
              return _this2.setState({
                reTipVisable: false
              });
            }
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.messageContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.message
        }, this.retipString))), _react.default.createElement(_ui.SingleChoseDialog, {
          title: wifiItemName[3],
          dataSource: this.state.encripDataSource,
          cancel: dialogButtonName[1],
          confirm: dialogButtonName[0],
          cancelable: false,
          timeout: 0,
          check: _CommonUtils.default.getArrayPosition(this.state.encripDataSource, this.getEncripString(this.state.encripType)),
          onCancel: function onCancel(e) {},
          onConfirm: function onConfirm(e) {
            if (_this2.state.encripType == 2) {
              _this2.setState({
                five2EncripString: _this2.state.encripDataSource[e.position]
              });
            } else if (_this2.state.encripType == 1) {
              _this2.setState({
                fiveEncripString: _this2.state.encripDataSource[e.position]
              });
            } else {
              _this2.setState({
                gsmEncripString: _this2.state.encripDataSource[e.position]
              });
            }
          },
          onCheck: function onCheck(e) {},
          onDismiss: function onDismiss() {
            _this2.setState({
              encripSingle: false
            });
          },
          visible: this.state.encripSingle
        }), _react.default.createElement(_ui.SingleChoseDialog, {
          title: wifiItemName[4],
          dataSource: signalDataSource,
          cancel: dialogButtonName[1],
          confirm: dialogButtonName[0],
          cancelable: false,
          timeout: 0,
          check: _CommonUtils.default.getArrayPosition(signalDataSource, this.getSignalString(this.state.signalType)),
          onCancel: function onCancel(e) {},
          onConfirm: function onConfirm(e) {
            if (_this2.state.signalType == 2) {
              _this2.setState({
                five2SignalString: signalDataSource[e.position]
              });
            } else if (_this2.state.signalType == 1) {
              _this2.setState({
                fiveSignalString: signalDataSource[e.position]
              });
            } else {
              _this2.setState({
                gsmSignalString: signalDataSource[e.position]
              });
            }
          },
          onCheck: function onCheck(e) {},
          onDismiss: function onDismiss() {
            _this2.setState({
              signalSingle: false
            });
          },
          visible: this.state.signalSingle
        }), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.BandWidthSingle,
          showTitle: true,
          title: _RouterLocalizedStringUtil.localStrings.BandWidth,
          canDismiss: true,
          onDismiss: function onDismiss() {
            return _this2.setState({
              BandWidthSingle: false
            });
          },
          buttons: []
        }, _react.default.createElement(_reactNative.FlatList, {
          style: styles.list,
          data: this.state.gsmBandWidthDataSource,
          renderItem: function renderItem(_ref) {
            var item = _ref.item,
                index = _ref.index;
            var isSelect = item == _this2.state.gsmBandWidthString;
            return _react.default.createElement(_reactNative.Text, {
              onPress: function onPress() {
                _this2.setState({
                  gsmBandWidthString: item,
                  BandWidthSingle: false
                });
              },
              style: isSelect ? [styles.bandItem, styles.bandItemSelected] : styles.bandItem
            }, item);
          }
        })), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.fiveBandWidthSingle,
          showTitle: true,
          title: _RouterLocalizedStringUtil.localStrings.BandWidth,
          canDismiss: true,
          onDismiss: function onDismiss() {
            return _this2.setState({
              fiveBandWidthSingle: false
            });
          },
          buttons: []
        }, _react.default.createElement(_reactNative.FlatList, {
          style: styles.list,
          data: this.state.fiveBandWidthDataSource,
          renderItem: function renderItem(_ref2) {
            var item = _ref2.item,
                index = _ref2.index;
            var isSelect = item == _this2.state.fiveBandWidthString;
            return _react.default.createElement(_reactNative.Text, {
              onPress: function onPress() {
                if (index === 0 && _this2.state.fiveChannelString >= 149 && _this2.state.fiveChannelString != 165 && _WifiSettingHelper.default.getIsSupport160Band()) {
                  _this2.setState({
                    fiveChannelString: 36,
                    channelChangeTipVisible: true
                  });
                }

                _this2.setState({
                  fiveBandWidthString: item,
                  fiveBandWidthSingle: false
                });
              },
              style: isSelect ? [styles.bandItem, styles.bandItemSelected] : styles.bandItem
            }, item);
          }
        })), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.five2BandWidthSingle,
          showTitle: true,
          title: _RouterLocalizedStringUtil.localStrings.BandWidth,
          canDismiss: true,
          onDismiss: function onDismiss() {
            return _this2.setState({
              five2BandWidthSingle: false
            });
          },
          buttons: []
        }, _react.default.createElement(_reactNative.FlatList, {
          style: styles.list,
          data: this.state.five2BandWidthDataSource,
          renderItem: function renderItem(_ref3) {
            var item = _ref3.item,
                index = _ref3.index;
            var isSelect = item == _this2.state.five2BandWidthString;
            return _react.default.createElement(_reactNative.Text, {
              onPress: function onPress() {
                if (index === 0 && _this2.state.five2ChannelString >= 149 && _this2.state.five2ChannelString != 165) {
                  _this2.setState({
                    five2ChannelString: 36,
                    channelChangeTipVisible: true
                  });
                }

                _this2.setState({
                  five2BandWidthString: item,
                  five2BandWidthSingle: false
                });
              },
              style: isSelect ? [styles.bandItem, styles.bandItemSelected] : styles.bandItem
            }, item);
          }
        })), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.fiveChannelSingle,
          showTitle: true,
          title: _RouterLocalizedStringUtil.localStrings.WireLessChannel,
          canDismiss: true,
          onDismiss: function onDismiss() {
            return _this2.setState({
              fiveChannelSingle: false
            });
          },
          buttons: []
        }, _react.default.createElement(_reactNative.FlatList, {
          style: styles.list,
          data: this.state.channelArray5g,
          renderItem: function renderItem(_ref4) {
            var item = _ref4.item,
                index = _ref4.index;
            var isSelect = item == _this2.state.fiveChannelString;
            return _react.default.createElement(_reactNative.Text, {
              onPress: function onPress() {
                if ((_this2.state.fiveBandWidthString + '').includes('/') && item <= 161 && item >= 149 && _WifiSettingHelper.default.getIsSupport160Band()) {
                  _this2.setState({
                    fiveBandWidthDataSource: _WifiSettingHelper.default.getBandWidthDataSource(1, item),
                    channelChangeTipVisible: true,
                    fiveBandWidthString: 80
                  });
                } else if (item == 165) {
                  _this2.setState({
                    fiveBandWidthString: 20,
                    fiveBandWidthDataSource: ['20']
                  });
                } else {
                  _this2.setState({
                    fiveBandWidthDataSource: _WifiSettingHelper.default.getBandWidthDataSource(1, item)
                  });
                }

                _this2.setState({
                  fiveChannelString: item,
                  fiveChannelSingle: false
                });
              },
              style: isSelect ? [styles.bandItem, styles.bandItemSelected] : styles.bandItem
            }, item);
          }
        })), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.five2ChannelSingle,
          showTitle: true,
          title: _RouterLocalizedStringUtil.localStrings.WireLessChannel,
          canDismiss: true,
          onDismiss: function onDismiss() {
            return _this2.setState({
              five2ChannelSingle: false
            });
          },
          buttons: []
        }, _react.default.createElement(_reactNative.FlatList, {
          style: styles.list,
          data: this.state.channelArray5g2,
          renderItem: function renderItem(_ref5) {
            var item = _ref5.item,
                index = _ref5.index;
            var isSelect = item == _this2.state.five2ChannelString;
            return _react.default.createElement(_reactNative.Text, {
              onPress: function onPress() {
                if ((_this2.state.five2BandWidthString + '').includes('/') && item <= 161 && item >= 149) {
                  _this2.setState({
                    five2BandWidthDataSource: _WifiSettingHelper.default.getBandWidthDataSource(2, item),
                    channelChangeTipVisible: true,
                    five2BandWidthString: 80
                  });
                } else if (item == 165) {
                  _this2.setState({
                    five2BandWidthString: 20,
                    five2BandWidthDataSource: ['20']
                  });
                } else {
                  _this2.setState({
                    five2BandWidthDataSource: _WifiSettingHelper.default.getBandWidthDataSource(2, item)
                  });
                }

                _this2.setState({
                  five2ChannelString: item,
                  five2ChannelSingle: false
                });
              },
              style: isSelect ? [styles.bandItem, styles.bandItemSelected] : styles.bandItem
            }, item);
          }
        })), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.ChannelSingle,
          showTitle: true,
          title: _RouterLocalizedStringUtil.localStrings.WireLessChannel,
          canDismiss: true,
          onDismiss: function onDismiss() {
            return _this2.setState({
              ChannelSingle: false
            });
          },
          buttons: []
        }, _react.default.createElement(_reactNative.FlatList, {
          style: styles.list,
          data: this.state.channelArray24g,
          renderItem: function renderItem(_ref6) {
            var item = _ref6.item,
                index = _ref6.index;
            var isSelect = item == _this2.state.gsmChannelString;
            return _react.default.createElement(_reactNative.Text, {
              onPress: function onPress() {
                _this2.setState({
                  gsmChannelString: item,
                  ChannelSingle: false
                });
              },
              style: isSelect ? [styles.bandItem, styles.bandItemSelected] : styles.bandItem
            }, item);
          }
        })), _react.default.createElement(_ModalView.default, {
          timeUp: this.timeUpParent,
          modalVisible: this.state.modalVisible,
          callback: this.setModalVisible.bind(this)
        }), _react.default.createElement(_Dialog.ChoiceDialog, {
          visible: this.state.bsdSwitchVisible,
          title: 'WiFi合并设置',
          options: options,
          selectedIndexArray: this.state.selectedIndexArray,
          onDismiss: function onDismiss(_) {
            return _this2.onBsdSwitchDialogDismiss();
          },
          onSelect: function onSelect(result) {
            return _this2.onSelect(result, _this2.state.selectedIndexArray);
          }
        })) : null, _react.default.createElement(_ui.LoadingDialog, {
          visible: this.state.loading,
          message: _RouterLocalizedStringUtil.localStrings.waitingLoading
        }));
      }
    }, {
      key: "_showDialog",
      value: function _showDialog() {
        if (this.notSupport160BandWidthWithChangeChannel() || this.notSupport160BandWidthWithChangeChannel5GGame()) {
          this.setState({
            channelChangeTipVisible: true
          });
        } else {
          this.setState({
            sueChangeVisible: true
          });
        }
      }
    }, {
      key: "notSupport160BandWidthWithChangeChannel",
      value: function notSupport160BandWidthWithChangeChannel() {
        var num = parseInt(this.state.fiveChannelString);

        var containAuto = _CommonUtils.default.isContainSomeString(this.state.fiveChannelString, _RouterLocalizedStringUtil.localStrings.commonAuto);

        var param = this.state.fiveBandWidthString == 160;
        return param && !containAuto && num <= 165 && num >= 149;
      }
    }, {
      key: "notSupport160BandWidthWithChangeChannel5GGame",
      value: function notSupport160BandWidthWithChangeChannel5GGame() {
        var num = parseInt(this.state.five2ChannelString);

        var containAuto = _CommonUtils.default.isContainSomeString(this.state.five2ChannelString, _RouterLocalizedStringUtil.localStrings.commonAuto);

        var param = this.state.five2BandWidthString == 160;
        return param && !containAuto && num <= 165 && num >= 149;
      }
    }, {
      key: "needShowHiddenWifi",
      value: function needShowHiddenWifi() {
        var result = true;

        if (_device.Device.model === 'xiaomi.router.d01' || this.state.gsmHidden === -1) {
          result = false;
        }

        return result;
      }
    }, {
      key: "needShow5GWifiInfo",
      value: function needShow5GWifiInfo() {
        if (this.state.bsd === 0) {
          if (!_CommonUtils.default.isNull(this.state.data.info) && this.state.data.info.length > 1 && !_RouterInfoHelper.default.sharedInstance().isRouterWithout5G()) {
            return true;
          } else {
            return false;
          }
        }

        return false;
      }
    }, {
      key: "WifiSwitchChange",
      value: function WifiSwitchChange(type, value) {
        var ssid, currentSSID;
        return _regenerator.default.async(function WifiSwitchChange$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                ssid = this.state.info[type].ssid;
                _context.next = 3;
                return _regenerator.default.awrap(_RouterInfoHelper.default.sharedInstance().getCurrentConnectApSSID());

              case 3:
                currentSSID = _context.sent;

                if (!value && _WifiSettingHelper.default.shouldShowWifiSwitchCloseTip(this.state.bsd, type) || currentSSID === ssid) {
                  if (currentSSID === ssid) {
                    this.retipString = '当前手机连接的WiFi无法关闭，否则应用将与路由器失去联系';
                  } else {
                    this.retipString = '关闭WiFi会造成路由器上不了网，请不要关闭';
                  }

                  this._showCloseAPDialog(type);
                } else {
                  if (type == 2) {
                    this.setState({
                      five2Status: value ? 1 : 0
                    });
                  } else if (type == 1) {
                    this.setState({
                      fiveStatus: value ? 1 : 0
                    });
                  } else {
                    this.setState({
                      gsmStatus: value ? 1 : 0
                    });
                  }
                }

              case 5:
              case "end":
                return _context.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "_showCloseAPDialog",
      value: function _showCloseAPDialog(type) {
        if (type == 2) {
          this.setState({
            five2Status: 1,
            reTipVisable: true
          });
        } else if (type == 1) {
          this.setState({
            fiveStatus: 1,
            reTipVisable: true
          });
        } else {
          this.setState({
            gsmStatus: 1,
            reTipVisable: true
          });
        }
      }
    }, {
      key: "setModalVisible",
      value: function setModalVisible(visible) {
        this.setState({
          modalVisible: visible,
          loading: false
        });
      }
    }, {
      key: "isRanderApOpen",
      value: function isRanderApOpen() {
        return _WifiSettingHelper.default.isSupportTriBand() ? this.state.five2Status == 1 : this.state.fiveStatus == 1;
      }
    }]);
    return List;
  }(_react.default.Component);

  exports.default = List;

  List.navigationOptions = function (_ref7) {
    var navigation = _ref7.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: _RouterLocalizedStringUtil.localStrings.wifiSettingTitle,
        style: {
          backgroundColor: '#fff'
        },
        onPressLeft: function onPressLeft(_) {
          return navigation.goBack();
        }
      })
    };
  };
},10391,[14308,14305,14674,14320,14323,14371,14377,14386,10338,10284,10332,10297,11251,10033,10230,10755,10067,10074,10064,10070,10040,10073,10935,10055,10076,10394,10397,10400,10409,10412,10968]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _miot = _$$_REQUIRE(_dependencyMap[9]);

  var _device = _$$_REQUIRE(_dependencyMap[10]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[12]);

  var _ui = _$$_REQUIRE(_dependencyMap[13]);

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[14]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _WifiSettingHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var AiotView = function (_React$Component) {
    (0, _inherits2.default)(AiotView, _React$Component);

    function AiotView(props) {
      var _this;

      (0, _classCallCheck2.default)(this, AiotView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AiotView).call(this, props));

      _this.getStatus = function () {
        _miot.Service.callSmartHomeAPI(_this.api, _this.paramsDic).then(function (res) {
          if (res.code === 0) {
            _this.setState({
              aiotSwitchStatus: res.enabled == 1
            });
          }
        }).catch(function (e) {});
      };

      _this.updateStatus = function (value) {
        _this.setState({
          aiotSwitchStatus: value,
          loading: true
        });

        var paramsDic = {
          method: 'GET',
          params: {
            deviceId: _this.deviceId,
            on: value ? 1 : 0
          }
        };

        _miot.Service.callSmartHomeAPI(_this.api_set, paramsDic).then(function (res) {
          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeSuccess);

          _this.setState({
            loading: false
          });
        }).catch(function (e) {
          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeFail);

          _this.setState({
            aiotSwitchStatus: !value,
            loading: false
          });
        });
      };

      _this.state = {
        aiotSwitchStatus: false,
        loading: false,
        visbale: false
      };
      _this.api = _API.default.wifi_setting.get_aiot_switch.remote;
      _this.api_set = _API.default.wifi_setting.set_aiot_switch.remote;
      _this.deviceId = _device.Device.deviceID.replace("miwifi.", "");
      _this.paramsDic = {
        method: 'GET',
        params: {
          deviceId: _this.deviceId
        }
      };
      return _this;
    }

    (0, _createClass2.default)(AiotView, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var visbale = _WifiSettingHelper.default.getCapbilityIsAiotScan();

        this.setState({
          visbale: visbale
        });

        if (visbale) {
          this.getStatus();
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.wifiAloneItem
        }, this.state.visbale ? _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: 'AIoT智能天线自动扫描',
          value: this.state.aiotSwitchStatus,
          showSeparator: false,
          disabled: false,
          subtitle: '自动发现未初始化的小米智能设备',
          onValueChange: function onValueChange(value) {
            return _this2.updateStatus(value);
          }
        }) : null, _react.default.createElement(_ui.LoadingDialog, {
          visible: this.state.loading,
          message: _RouterLocalizedStringUtil.localStrings.waitingLoading
        }));
      }
    }]);
    return AiotView;
  }(_react.default.Component);

  exports.default = AiotView;

  AiotView.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: null
    };
  };

  var styles = _reactNative.StyleSheet.create({
    wifiAloneItem: {
      alignItems: 'center',
      backgroundColor: 'white'
    }
  });
},10394,[14305,14320,14323,14371,14377,14386,10297,10033,10064,10074,10935,10347,10338,10230,10055,10040,10070]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _miot = _$$_REQUIRE(_dependencyMap[9]);

  var _device = _$$_REQUIRE(_dependencyMap[10]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[12]);

  var _ui = _$$_REQUIRE(_dependencyMap[13]);

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[14]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _WifiSettingHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var EasyConnectMode = function (_React$Component) {
    (0, _inherits2.default)(EasyConnectMode, _React$Component);

    function EasyConnectMode(props) {
      var _this;

      (0, _classCallCheck2.default)(this, EasyConnectMode);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(EasyConnectMode).call(this, props));

      _this.getStatus = function () {
        _miot.Service.callSmartHomeAPI(_this.api, _this.paramsDic).then(function (res) {
          if (res.code === 0) {
            _this.setState({
              aiotSwitchStatus: res.enabled == 1
            });
          }
        }).catch(function (e) {});
      };

      _this.state = {
        aiotSwitchStatus: false,
        loading: false,
        visvale: false
      };
      _this.api = _API.default.wifi_setting.get_miot_relay_switch.remote;
      _this.api_set = _API.default.wifi_setting.set_miot_relay_switch.remote;
      _this.deviceId = _device.Device.deviceID.replace("miwifi.", "");
      _this.paramsDic = {
        method: 'GET',
        params: {
          deviceId: _this.deviceId
        }
      };
      return _this;
    }

    (0, _createClass2.default)(EasyConnectMode, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var visbale = _WifiSettingHelper.default.getCapbilityIsEasyConnect();

        this.setState({
          visvale: visbale
        });

        if (visbale) {
          this.getStatus();
        }
      }
    }, {
      key: "updateStatus",
      value: function updateStatus(value) {
        var _this2 = this;

        this.setState({
          aiotSwitchStatus: value,
          loading: true
        });
        var paramsDic = {
          method: 'GET',
          params: {
            deviceId: this.deviceId,
            on: value ? 1 : 0
          }
        };

        _miot.Service.callSmartHomeAPI(this.api_set, paramsDic).then(function (res) {
          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeSuccess);

          _this2.setState({
            loading: false
          });
        }).catch(function (e) {
          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeFail);

          _this2.setState({
            aiotSwitchStatus: !value,
            loading: false
          });
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.wifiAloneItem
        }, this.state.visvale ? _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: '畅快连',
          value: this.state.aiotSwitchStatus,
          showSeparator: false,
          disabled: false,
          subtitle: '自动发现支持畅快连的未初始化设备',
          onValueChange: function onValueChange(value) {
            return _this3.updateStatus(value);
          }
        }) : null, _react.default.createElement(_ui.LoadingDialog, {
          visible: this.state.loading,
          message: _RouterLocalizedStringUtil.localStrings.waitingLoading
        }));
      }
    }]);
    return EasyConnectMode;
  }(_react.default.Component);

  exports.default = EasyConnectMode;

  EasyConnectMode.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: null
    };
  };

  var styles = _reactNative.StyleSheet.create({
    wifiAloneItem: {
      alignItems: 'center',
      backgroundColor: 'white'
    }
  });
},10397,[14305,14320,14323,14371,14377,14386,10297,10033,10064,10074,10935,10347,10338,10230,10055,10040,10070]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Devices = _$$_REQUIRE(_dependencyMap[10]);

  var _CountTimeText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var height = _Devices.ios ? 3.2 : 2.75;

  var App = function (_Component) {
    (0, _inherits2.default)(App, _Component);

    function App(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, App);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(App).call(this, props, context));

      _this.timeUpParent = function (param) {
        _this.props.timeUp && _this.props.timeUp('finish');

        _this.setModalVisible(false);
      };

      _this.state = {
        modalVisible: false
      };
      return _this;
    }

    (0, _createClass2.default)(App, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        this.setModalVisible(nextProps.modalVisible);
      }
    }, {
      key: "setModalVisible",
      value: function setModalVisible(visible) {
        this.setState({
          modalVisible: visible
        });
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.SafeAreaView, null, _react.default.createElement(_reactNative.Modal, {
          animationType: "fade",
          transparent: false,
          visible: this.state.modalVisible,
          onRequestClose: function onRequestClose() {}
        }, _react.default.createElement(_reactNative.View, {
          style: {
            height: '100%',
            justifyContent: 'center',
            alignItems: 'center',
            backgroundColor: 'rgba(0,0,0,0.5)'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            height: _Devices.ScreenH / height,
            width: _Devices.ScreenW * 0.8,
            margin: 20,
            backgroundColor: 'white'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            justifyContent: 'flex-start',
            alignItems: 'center',
            marginTop: 20
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            width: 100,
            height: 100,
            marginTop: 20
          },
          source: _$$_REQUIRE(_dependencyMap[12])
        })), _react.default.createElement(_reactNative.View, {
          style: {
            justifyContent: 'center',
            alignItems: 'center',
            margin: 25
          }
        }, _react.default.createElement(_CountTimeText.default, {
          timeUp: this.timeUpParent
        }))))));
      }
    }]);
    return App;
  }(_react.Component);

  exports.default = App;
  App.propTypes = {
    modalVisible: _propTypes.default.bool,
    onDismiss: _propTypes.default.func
  };
  App.defaultProps = {
    modalVisible: false
  };
},10400,[14308,14305,14320,14323,14371,14377,14386,10297,10033,10318,10067,10403,10406]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _miot = _$$_REQUIRE(_dependencyMap[9]);

  var TextView = function (_React$Component) {
    (0, _inherits2.default)(TextView, _React$Component);

    function TextView(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, TextView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TextView).call(this, props, context));
      _this.state = {
        radarTimerCount: 69
      };
      return _this;
    }

    (0, _createClass2.default)(TextView, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        _miot.PackageEvent.packageDidResume.addListener(function () {
          clearInterval(_this2.radarTimer);
          var now = new Date().getTime();
          var nowTime = parseInt(now / 1000);

          if (nowTime > _this2.endTime) {
            _this2.setState({
              radarTimerCount: 0
            });
          } else {
            _this2.setState({
              radarTimerCount: _this2.endTime - nowTime
            });
          }

          _this2.radarTimer = setInterval(function () {
            var radarTimerCount = _this2.state.radarTimerCount;

            if (radarTimerCount === 0) {
              _this2.radarTimer && clearInterval(_this2.radarTimer);
              _this2.props.timeUp && _this2.props.timeUp('finish');
            } else {
              radarTimerCount = radarTimerCount - 1;
            }

            _this2.setState({
              radarTimerCount: radarTimerCount
            });
          }, 1000);
        });

        var start = new Date().getTime();
        this.startTime = parseInt(start / 1000);
        this.endTime = this.startTime + 68;
        this.radarTimer = setInterval(function () {
          var radarTimerCount = _this2.state.radarTimerCount;

          if (radarTimerCount === 0) {
            _this2.radarTimer && clearInterval(_this2.radarTimer);
            _this2.props.timeUp && _this2.props.timeUp('finish');
          } else {
            radarTimerCount = radarTimerCount - 1;
          }

          _this2.setState({
            radarTimerCount: radarTimerCount
          });
        }, 1000);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.radarTimer && clearInterval(this.radarTimer);
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, {
          style: {
            color: '#333'
          }
        }, "\u9075\u7167\u56FD\u5BB6\u6CD5\u5F8B\u6CD5\u89C4\uFF0C\u8DEF\u7531\u5668\u6B63\u5728\u505A\u9000\u907F\u96F7\u8FBE\u4FE1\u53F7\u63A2\u6D4B\uFF0CWiFi\u4FE1\u53F7\u8981", _react.default.createElement(_reactNative.Text, {
          style: {
            color: '#F5BC23'
          }
        }, " ", this.state.radarTimerCount, " "), "s\u540E\u624D\u80FD\u5F00\u542F\uFF0C\u8BF7\u7A0D\u4FAF\u2026"));
      }
    }]);
    return TextView;
  }(_react.default.Component);

  exports.default = TextView;
  TextView.propTypes = {
    text: _propTypes.default.string.isRequired
  };
  TextView.defaultProps = {
    text: ''
  };

  var styles = _reactNative.StyleSheet.create({
    text_speed: {
      color: '#fff',
      fontSize: 40,
      textAlign: 'left'
    },
    text_speed_unit: {
      color: 'rgba(255, 255, 255, 0.6)',
      fontSize: 40,
      textAlign: 'left'
    },
    row_item_speed: {
      flexDirection: 'row'
    }
  });
},10403,[14305,14320,14323,14371,14377,14386,10318,10297,10033,10074]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
    "width": 336,
    "height": 322,
    "scales": [1],
    "hash": "30bc51c4c11cac7624473508825b9eaf",
    "name": "img_radar",
    "type": "png"
  });
},10406,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Devices = _$$_REQUIRE(_dependencyMap[11]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[13]);

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[14]);

  var _WifiSettingHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _default = function (_Component) {
    (0, _inherits2.default)(_default, _Component);

    function _default(props) {
      var _this;

      (0, _classCallCheck2.default)(this, _default);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(_default).call(this, props));
      _this.state = {
        BSD: _this.props.BSD,
        WifiSwitchStatus: _this.props.WifiSwitchStatus,
        WifiHiddenStatus: _this.props.WifiHiddenStatus,
        WifiSwitchTitle: _this.props.WifiSwitchValue,
        WifiSwitchDisabled: _this.props.WifiSwitchDisabled,
        WifiSwitchSubtitleTitle: _this.props.WifiSwitchValue,
        EncripValue: _this.props.EncripValue,
        SignalValue: _this.props.EncripValue,
        BandWidthValue: _this.props.BandWidthValue,
        ChannelValue: _this.props.ChannelValue,
        SSID: _this.props.SSID,
        PWD: _this.props.PWD,
        editablePWD: _this.props.editablePWD,
        showContent: _this.props.showContent
      };

      _this.handleonChangeSSID = function (text) {
        _this.props.onSSIDChange && _this.props.onSSIDChange(text);
      };

      _this.handleonChangePWD = function (text) {
        _this.props.onPWDChange && _this.props.onPWDChange(text);
      };

      _this.handleonChangeWifiStatus = function (value) {
        _this.props.onWifiSwitchChange && _this.props.onWifiSwitchChange(value);
      };

      _this.handleonEncripOnPress = function () {
        _this.props.onEncripOnPress && _this.props.onEncripOnPress();
      };

      _this.handleonSignalOnPress = function () {
        _this.props.onSignalOnPress && _this.props.onSignalOnPress();
      };

      _this.handleonBandWidthOnPress = function () {
        _this.props.onBandWidthOnPress && _this.props.onBandWidthOnPress();
      };

      _this.handleonChannelOnPressOnPress = function () {
        _this.props.onChannelOnPress && _this.props.onChannelOnPress();
      };

      _this.handleonWifiHiddenSwitchChange = function (value) {
        _this.props.onWifiHiddenSwitchChange && _this.props.onWifiHiddenSwitchChange(value);
      };

      var _this$state = _this.state,
          SSID = _this$state.SSID,
          PWD = _this$state.PWD;
      _this.state = {
        SSID: !_CommonUtils.default.isTextEmpty(SSID) ? SSID : '',
        PWD: !_CommonUtils.default.isTextEmpty(PWD) ? PWD : ''
      };
      return _this;
    }

    (0, _createClass2.default)(_default, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var SSIDText = '名称:';
        var PWDText = '密码:';
        var SSIDTextTip = _RouterLocalizedStringUtil.localStrings.wifiSsidInputPlaceholder;
        var PWDTextTip = '请输入WiFi密码';
        var wifiItemName = ['2.4G WiFi', '5G WiFi', _RouterLocalizedStringUtil.localStrings.wifiSsidText, _RouterLocalizedStringUtil.localStrings.wifiEncryptionMode, _RouterLocalizedStringUtil.localStrings.wifiSignalIntensity, _RouterLocalizedStringUtil.localStrings.wifiPwdTitle, _RouterLocalizedStringUtil.localStrings.wifiHideTitle];
        return _react.default.createElement(_reactNative.View, {
          style: styles.root
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: this.props.WifiSwitchTitle,
          titleStyle: styles.item_title,
          subtitleStyle: styles.item_subtitle,
          subtitle: this.props.WifiSwitchSubtitleTitle,
          disabled: this.props.WifiSwitchDisabled,
          value: this.props.WifiSwitchStatus,
          showSeparator: false,
          onValueChange: function onValueChange(value) {
            return _this2.handleonChangeWifiStatus(value);
          }
        }), this.props.showContent ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: styles.father
        }, _react.default.createElement(_reactNative.View, {
          style: styles.row_item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.input_title
        }, SSIDText), _react.default.createElement(_reactNative.TextInput, {
          style: styles.item_hint,
          placeholder: SSIDTextTip,
          defaultValue: this.state.SSID,
          placeholderTextColor: "#B2B2B2",
          underlineColorAndroid: 'transparent',
          onChangeText: function onChangeText(text) {
            _this2.setState({
              SSID: text
            });

            _this2.handleonChangeSSID(text);
          }
        })), _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
          style: styles.row_item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.input_title
        }, PWDText), _react.default.createElement(_reactNative.TextInput, {
          style: this.props.editablePWD ? styles.item_hint : styles.item_hint_opacty,
          placeholder: PWDTextTip,
          defaultValue: this.state.PWD,
          editable: this.props.editablePWD,
          placeholderTextColor: "#B2B2B2",
          underlineColorAndroid: 'transparent',
          onChangeText: function onChangeText(text) {
            _this2.setState({
              PWD: text
            });

            _this2.handleonChangePWD(text);
          }
        }))), _react.default.createElement(_ListItem.ListItem, {
          title: wifiItemName[3],
          titleStyle: styles.item_title,
          valueStyle: styles.item_subtitle,
          showSeparator: false,
          value: this.props.EncripValue,
          onPress: function onPress() {
            _this2.handleonEncripOnPress();
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: wifiItemName[4],
          titleStyle: styles.item_title,
          valueStyle: styles.item_subtitle,
          showSeparator: false,
          value: this.props.SignalValue,
          onPress: function onPress() {
            _this2.handleonSignalOnPress();
          }
        }), _WifiSettingHelper.default.isNotSupportShowBandWidthOrChannel() ? null : _react.default.createElement(_reactNative.View, null, _react.default.createElement(_ListItem.ListItem, {
          title: _RouterLocalizedStringUtil.localStrings.BandWidth,
          titleStyle: styles.item_title,
          valueStyle: styles.item_subtitle,
          value: this.props.BandWidthValue,
          showDot: false,
          showSeparator: false,
          onPress: function onPress() {
            _this2.handleonBandWidthOnPress();
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: _RouterLocalizedStringUtil.localStrings.WireLessChannel,
          titleStyle: styles.item_title,
          valueStyle: styles.item_subtitle,
          value: this.props.ChannelValue,
          showDot: false,
          showSeparator: false,
          onPress: function onPress() {
            _this2.handleonChannelOnPressOnPress();
          }
        })), _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: wifiItemName[6],
          titleStyle: styles.item_title,
          subtitleStyle: styles.item_subtitle,
          value: this.props.WifiHiddenStatus,
          showSeparator: false,
          onValueChange: function onValueChange(value) {
            return _this2.handleonWifiHiddenSwitchChange(value);
          }
        })) : null), _react.default.createElement(_Separator.default, {
          style: styles.Separator
        }));
      }
    }]);
    return _default;
  }(_react.Component);

  exports.default = _default;
  _default.propTypes = {
    BSD: _propTypes.default.number,
    WifiSwitchStatus: _propTypes.default.bool,
    WifiHiddenStatus: _propTypes.default.bool,
    WifiSwitchTitle: _propTypes.default.string,
    WifiSwitchSubtitleTitle: _propTypes.default.string,
    EncripValue: _propTypes.default.string,
    SignalValue: _propTypes.default.string,
    BandWidthValue: _propTypes.default.string,
    ChannelValue: _propTypes.default.string,
    SSID: _propTypes.default.string,
    PWD: _propTypes.default.string,
    editablePWD: _propTypes.default.bool,
    showContent: _propTypes.default.bool,
    WifiSwitchDisabled: _propTypes.default.bool,
    onSSIDChange: _propTypes.default.func,
    onPWDChange: _propTypes.default.func,
    onWifiSwitchChange: _propTypes.default.func,
    onWifiHiddenSwitchChange: _propTypes.default.func,
    onEncripOnPress: _propTypes.default.func,
    onSignalOnPress: _propTypes.default.func,
    onBandWidthOnPress: _propTypes.default.func,
    onChannelOnPress: _propTypes.default.func
  };
  _default.defaultProps = {
    SSID: '',
    PWD: '',
    bsd: 0
  };

  var styles = _reactNative.StyleSheet.create({
    row_item: {
      backgroundColor: 'rgba(255,255,255,0)',
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'flex-start',
      marginTop: -0.1
    },
    root: {
      flexDirection: 'column'
    },
    father: {
      flexDirection: 'column',
      borderColor: '#F5F5F5',
      backgroundColor: '#F5F5F5',
      borderRadius: 10,
      marginHorizontal: 20,
      marginVertical: 2
    },
    input_title: {
      fontWeight: 'bold',
      fontSize: 15,
      marginStart: 15,
      color: '#000000'
    },
    item_title: {
      fontWeight: 'bold',
      fontSize: 15,
      color: '#000000'
    },
    item_subtitle: {
      fontSize: 12,
      color: '#999999'
    },
    item_hint: {
      fontSize: 14,
      marginStart: 10,
      width: _Devices.ScreenW * 0.72,
      height: 50,
      color: '#333333'
    },
    item_hint_opacty: {
      fontSize: 14,
      marginStart: 10,
      width: _Devices.ScreenW * 0.72,
      color: '#333333',
      height: 50,
      opacity: 0.2
    },
    WifiWithSwitchItem: {
      alignItems: 'center',
      backgroundColor: 'white',
      marginTop: 10
    },
    Separator: {
      margin: 25
    }
  });
},10409,[14308,14305,14320,14323,14371,14377,14386,10297,10033,10332,10318,10067,10040,10338,10055,10070]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Devices = _$$_REQUIRE(_dependencyMap[11]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[13]);

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[14]);

  var _WifiSettingHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _default = function (_Component) {
    (0, _inherits2.default)(_default, _Component);

    function _default(props) {
      var _this;

      (0, _classCallCheck2.default)(this, _default);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(_default).call(this, props));
      _this.state = {
        BSD: _this.props.BSD,
        WifiSwitchTitle: _this.props.WifiSwitchValue,
        WifiSwitchDisabled: _this.props.WifiSwitchDisabled,
        WifiSwitchSubtitleTitle: _this.props.WifiSwitchValue,
        WifiSwitchStatus: _this.props.WifiSwitchStatus,
        WifiHiddenStatus: _this.props.WifiHiddenStatus,
        SSID: _this.props.SSID,
        PWD: _this.props.PWD,
        editablePWD: _this.props.editablePWD,
        showContent: _this.props.showContent,
        EncripValue: _this.props.EncripValue,
        needShowHiddenWifi: _this.props.needShowHiddenWifi,
        SignalValue: _this.props.EncripValue,
        SignalValue2: _this.props.EncripValue,
        SignalValue3: _this.props.EncripValue,
        BandWidthValue: _this.props.BandWidthValue,
        BandWidthValue2: _this.props.BandWidthValue,
        BandWidthValue3: _this.props.BandWidthValue,
        ChannelValue: _this.props.ChannelValue,
        ChannelValue2: _this.props.ChannelValue,
        ChannelValue3: _this.props.ChannelValue
      };

      _this.handleonChangeSSID = function (text) {
        _this.props.onSSIDChange && _this.props.onSSIDChange(text);
      };

      _this.handleonChangePWD = function (text) {
        _this.props.onPWDChange && _this.props.onPWDChange(text);
      };

      _this.handleonChangeWifiStatus = function (value) {
        _this.props.onWifiSwitchChange && _this.props.onWifiSwitchChange(value);
      };

      _this.handleonEncripOnPress = function () {
        _this.props.onEncripOnPress && _this.props.onEncripOnPress();
      };

      _this.handleonSignalOnPress = function () {
        _this.props.onSignalOnPress && _this.props.onSignalOnPress();
      };

      _this.handleonBandWidthOnPress = function () {
        _this.props.onBandWidthOnPress && _this.props.onBandWidthOnPress();
      };

      _this.handleonChannelOnPressOnPress = function () {
        _this.props.onChannelOnPress && _this.props.onChannelOnPress();
      };

      _this.handleonSignalOnPress2 = function () {
        _this.props.onSignalOnPress2 && _this.props.onSignalOnPress2();
      };

      _this.handleonBandWidthOnPress2 = function () {
        _this.props.onBandWidthOnPress2 && _this.props.onBandWidthOnPress2();
      };

      _this.handleonChannelOnPressOnPress2 = function () {
        _this.props.onChannelOnPress2 && _this.props.onChannelOnPress2();
      };

      _this.handleonSignalOnPress3 = function () {
        _this.props.onSignalOnPress3 && _this.props.onSignalOnPress3();
      };

      _this.handleonBandWidthOnPress3 = function () {
        _this.props.onBandWidthOnPress3 && _this.props.onBandWidthOnPress3();
      };

      _this.handleonChannelOnPressOnPress3 = function () {
        _this.props.onChannelOnPress3 && _this.props.onChannelOnPress3();
      };

      _this.handleonWifiHiddenSwitchChange = function (value) {
        _this.props.onWifiHiddenSwitchChange && _this.props.onWifiHiddenSwitchChange(value);
      };

      var _this$state = _this.state,
          SSID = _this$state.SSID,
          PWD = _this$state.PWD;
      _this.state = {
        SSID: !_CommonUtils.default.isTextEmpty(SSID) ? SSID : '',
        PWD: !_CommonUtils.default.isTextEmpty(PWD) ? PWD : ''
      };
      return _this;
    }

    (0, _createClass2.default)(_default, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var SSIDText = '名称:';
        var PWDText = '密码:';
        var SSIDTextTip = _RouterLocalizedStringUtil.localStrings.wifiSsidInputPlaceholder;
        var PWDTextTip = '请输入WiFi密码';
        var wifiItemName = ['2.4G WiFi', '5G WiFi', _RouterLocalizedStringUtil.localStrings.wifiSsidText, _RouterLocalizedStringUtil.localStrings.wifiEncryptionMode, _RouterLocalizedStringUtil.localStrings.wifiSignalIntensity, _RouterLocalizedStringUtil.localStrings.wifiPwdTitle, _RouterLocalizedStringUtil.localStrings.wifiHideTitle];
        return _react.default.createElement(_reactNative.View, null, this.props.BSD > 0 ? _react.default.createElement(_reactNative.View, {
          style: styles.root
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: this.props.WifiSwitchTitle,
          titleStyle: styles.item_title,
          subtitleStyle: styles.item_subtitle,
          subtitle: this.props.WifiSwitchSubtitleTitle,
          disabled: this.props.WifiSwitchDisabled,
          value: this.props.WifiSwitchStatus,
          showSeparator: false,
          onValueChange: function onValueChange(value) {
            return _this2.handleonChangeWifiStatus(value);
          }
        }), this.props.showContent ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: styles.father
        }, _react.default.createElement(_reactNative.View, {
          style: styles.row_item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.input_title
        }, SSIDText), _react.default.createElement(_reactNative.TextInput, {
          style: styles.item_hint,
          placeholder: SSIDTextTip,
          defaultValue: this.state.SSID,
          placeholderTextColor: "#B2B2B2",
          underlineColorAndroid: 'transparent',
          onChangeText: function onChangeText(text) {
            _this2.setState({
              SSID: text
            });

            _this2.handleonChangeSSID(text);
          }
        })), _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
          style: styles.row_item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.input_title
        }, PWDText), _react.default.createElement(_reactNative.TextInput, {
          style: this.props.editablePWD ? styles.item_hint : styles.item_hint_opacty,
          placeholder: PWDTextTip,
          defaultValue: this.state.PWD,
          editable: this.props.editablePWD,
          placeholderTextColor: "#B2B2B2",
          underlineColorAndroid: 'transparent',
          onChangeText: function onChangeText(text) {
            _this2.setState({
              PWD: text
            });

            _this2.handleonChangePWD(text);
          }
        }))), _react.default.createElement(_ListItem.ListItem, {
          title: wifiItemName[3],
          titleStyle: styles.item_title,
          valueStyle: styles.item_subtitle,
          showSeparator: false,
          value: this.props.EncripValue,
          onPress: function onPress() {
            _this2.handleonEncripOnPress();
          }
        }), this.props.BSD == 1 ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_ListItem.ListItem, {
          title: _WifiSettingHelper.default.isD01() ? wifiItemName[4] : '2.4G ' + wifiItemName[4],
          titleStyle: styles.item_title,
          valueStyle: styles.item_subtitle,
          showSeparator: false,
          value: this.props.SignalValue,
          onPress: function onPress() {
            _this2.handleonSignalOnPress();
          }
        }), !_WifiSettingHelper.default.isD01() && !_WifiSettingHelper.default.isNotSupportShowBandWidthOrChannel() ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_ListItem.ListItem, {
          title: '2.4G ' + _RouterLocalizedStringUtil.localStrings.BandWidth,
          titleStyle: styles.item_title,
          valueStyle: styles.item_subtitle,
          value: this.props.BandWidthValue,
          showDot: false,
          showSeparator: false,
          onPress: function onPress() {
            _this2.handleonBandWidthOnPress();
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: '2.4G ' + _RouterLocalizedStringUtil.localStrings.WireLessChannel,
          titleStyle: styles.item_title,
          valueStyle: styles.item_subtitle,
          value: this.props.ChannelValue,
          showDot: false,
          showSeparator: false,
          onPress: function onPress() {
            _this2.handleonChannelOnPressOnPress();
          }
        })) : null) : null, this.props.BSD > 0 && !_WifiSettingHelper.default.isD01() ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_ListItem.ListItem, {
          title: '5G ' + wifiItemName[4],
          titleStyle: styles.item_title,
          valueStyle: styles.item_subtitle,
          showSeparator: false,
          value: this.props.SignalValue2,
          onPress: function onPress() {
            _this2.handleonSignalOnPress2();
          }
        }), !_WifiSettingHelper.default.isNotSupportShowBandWidthOrChannel() ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_ListItem.ListItem, {
          title: '5G ' + _RouterLocalizedStringUtil.localStrings.BandWidth,
          titleStyle: styles.item_title,
          valueStyle: styles.item_subtitle,
          value: this.props.BandWidthValue2,
          showDot: false,
          showSeparator: false,
          onPress: function onPress() {
            _this2.handleonBandWidthOnPress2();
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: '5G ' + _RouterLocalizedStringUtil.localStrings.WireLessChannel,
          titleStyle: styles.item_title,
          valueStyle: styles.item_subtitle,
          value: this.props.ChannelValue2,
          showDot: false,
          showSeparator: false,
          onPress: function onPress() {
            _this2.handleonChannelOnPressOnPress2();
          }
        })) : null) : null, this.props.BSD == 1 && _WifiSettingHelper.default.isSupportTriBand() ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_ListItem.ListItem, {
          title: '5G Game ' + wifiItemName[4],
          titleStyle: styles.item_title,
          valueStyle: styles.item_subtitle,
          showSeparator: false,
          value: this.props.SignalValue3,
          onPress: function onPress() {
            _this2.handleonSignalOnPress3();
          }
        }), !_WifiSettingHelper.default.isNotSupportShowBandWidthOrChannel() ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_ListItem.ListItem, {
          title: '5G Game ' + _RouterLocalizedStringUtil.localStrings.BandWidth,
          titleStyle: styles.item_title,
          valueStyle: styles.item_subtitle,
          value: this.props.BandWidthValue3,
          showDot: false,
          showSeparator: false,
          onPress: function onPress() {
            _this2.handleonBandWidthOnPress3();
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: '5G Game ' + _RouterLocalizedStringUtil.localStrings.WireLessChannel,
          titleStyle: styles.item_title,
          valueStyle: styles.item_subtitle,
          value: this.props.ChannelValue3,
          showDot: false,
          showSeparator: false,
          onPress: function onPress() {
            _this2.handleonChannelOnPressOnPress3();
          }
        })) : null) : null, this.props.needShowHiddenWifi ? _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: wifiItemName[6],
          titleStyle: styles.item_title,
          subtitleStyle: styles.item_subtitle,
          value: this.props.WifiHiddenStatus,
          showSeparator: false,
          onValueChange: function onValueChange(value) {
            return _this2.handleonWifiHiddenSwitchChange(value);
          }
        }) : null) : null)) : null);
      }
    }]);
    return _default;
  }(_react.Component);

  exports.default = _default;
  _default.propTypes = {
    BSD: _propTypes.default.number,
    WifiSwitchTitle: _propTypes.default.string,
    WifiSwitchDisabled: _propTypes.default.bool,
    WifiSwitchSubtitleTitle: _propTypes.default.string,
    WifiSwitchStatus: _propTypes.default.bool,
    WifiHiddenStatus: _propTypes.default.bool,
    SSID: _propTypes.default.string,
    PWD: _propTypes.default.string,
    editablePWD: _propTypes.default.bool,
    showContent: _propTypes.default.bool,
    EncripValue: _propTypes.default.string,
    needShowHiddenWifi: _propTypes.default.bool,
    SignalValue: _propTypes.default.string,
    SignalValue2: _propTypes.default.string,
    SignalValue3: _propTypes.default.string,
    BandWidthValue: _propTypes.default.string,
    BandWidthValue2: _propTypes.default.string,
    BandWidthValue3: _propTypes.default.string,
    ChannelValue: _propTypes.default.string,
    ChannelValue2: _propTypes.default.string,
    ChannelValue3: _propTypes.default.string,
    onSSIDChange: _propTypes.default.func,
    onPWDChange: _propTypes.default.func,
    onWifiSwitchChange: _propTypes.default.func,
    onWifiHiddenSwitchChange: _propTypes.default.func,
    onEncripOnPress: _propTypes.default.func,
    onSignalOnPress: _propTypes.default.func,
    onBandWidthOnPress: _propTypes.default.func,
    onChannelOnPress: _propTypes.default.func,
    onSignalOnPress2: _propTypes.default.func,
    onBandWidthOnPress2: _propTypes.default.func,
    onChannelOnPress2: _propTypes.default.func,
    onSignalOnPress3: _propTypes.default.func,
    onBandWidthOnPress3: _propTypes.default.func,
    onChannelOnPress3: _propTypes.default.func
  };
  _default.defaultProps = {
    SSID: '',
    PWD: '',
    BSD: 0
  };

  var styles = _reactNative.StyleSheet.create({
    row_item: {
      backgroundColor: 'rgba(255,255,255,0)',
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'flex-start',
      marginTop: -0.1
    },
    root: {
      flexDirection: 'column'
    },
    father: {
      flexDirection: 'column',
      borderColor: '#F5F5F5',
      backgroundColor: '#F5F5F5',
      borderRadius: 10,
      marginHorizontal: 20,
      marginVertical: 2
    },
    input_title: {
      fontWeight: 'bold',
      fontSize: 15,
      marginStart: 15,
      color: '#000000'
    },
    item_title: {
      fontWeight: 'bold',
      fontSize: 15,
      color: '#000000'
    },
    item_subtitle: {
      fontSize: 12,
      color: '#999999'
    },
    item_hint: {
      fontSize: 14,
      marginStart: 10,
      width: _Devices.ScreenW * 0.72,
      height: 50,
      color: '#333333'
    },
    item_hint_opacty: {
      fontSize: 14,
      marginStart: 10,
      width: _Devices.ScreenW * 0.72,
      color: '#333333',
      height: 50,
      opacity: 0.2
    },
    WifiWithSwitchItem: {
      alignItems: 'center',
      backgroundColor: 'white',
      marginTop: 10
    }
  });
},10412,[14308,14305,14320,14323,14371,14377,14386,10297,10033,10332,10318,10067,10040,10338,10055,10070,10076]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _MHCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[8]);

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Devices = _$$_REQUIRE(_dependencyMap[12]);

  var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var RestartRouter = function (_React$Component) {
    (0, _inherits2.default)(RestartRouter, _React$Component);

    function RestartRouter(props) {
      var _this;

      (0, _classCallCheck2.default)(this, RestartRouter);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RestartRouter).call(this, props));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(RestartRouter, [{
      key: "_restart_router",
      value: function _restart_router() {}
    }, {
      key: "_fetchListData",
      value: function _fetchListData() {}
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "componentWillMount",
      value: function componentWillMount() {
        this._fetchListData();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.header
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[14])
        })), _react.default.createElement(_reactNative.View, {
          style: styles.listCont
        }, _react.default.createElement(_reactNative.View, {
          style: _styles.default.row_container_first
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon_remind,
          source: _$$_REQUIRE(_dependencyMap[15])
        }), _react.default.createElement(_reactNative.Text, {
          style: _styles.default.text_description_margin_start
        }, "\u91CD\u542F\u540E\u5C06\u4E2D\u65AD\u5F53\u524D\u6240\u6709\u8FDE\u63A5\uFF0C\u5927\u7EA6\u9700\u89811\u5206\u949F\u6062\u590D\uFF0C\u91CD\u542F\u540E\u5F53\u524D\u624B\u673A\u53EF\u80FD\u9700\u8981\u624B\u5DE5\u8FDE\u63A5WiFi."))), _react.default.createElement(_reactNative.View, {
          style: styles.addWrap
        }, _react.default.createElement(_reactNative.TouchableHighlight, {
          style: styles.button,
          underlayColor: "transparent",
          onPress: function onPress(_) {
            return _this2._restart_router();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.button_text
        }, "\u7ACB\u5373\u91CD\u542F\u8DEF\u7531\u5668"))));
      }
    }]);
    return RestartRouter;
  }(_react.default.Component);

  exports.default = RestartRouter;

  RestartRouter.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "light",
        style: {
          backgroundColor: '#1a1b2a'
        },
        title: '重启路由器',
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      flex: 1
    },
    icon: {
      width: 100,
      height: 100
    },
    icon_remind: {
      width: 16,
      height: 13.6
    },
    viewRkButton: {
      width: _Devices.ScreenW / 10 * 8
    },
    listCont: {
      flex: 1
    },
    list: {
      position: 'absolute',
      top: 0,
      bottom: 60
    },
    header: {
      backgroundColor: '#1a1b2a',
      alignItems: 'center',
      justifyContent: 'center',
      height: 200
    },
    button_text: {
      fontSize: 16,
      color: '#FF3D3D'
    },
    addWrap: {
      position: 'absolute',
      alignItems: 'center',
      bottom: 10,
      left: 6,
      right: 6
    },
    addcont: {
      alignItems: 'center',
      justifyContent: 'center',
      height: 60
    },
    separator: {
      backgroundColor: '#000',
      marginTop: 20
    },
    button: {
      alignItems: "center",
      justifyContent: "center",
      height: 44,
      marginBottom: 10,
      width: _Devices.ScreenW * 0.9,
      borderRadius: 22,
      borderWidth: 0.5,
      borderColor: '#E5E5E5'
    }
  });
},10415,[14305,14320,14323,14371,14377,14386,10284,10374,11251,10297,10033,10418,10067,10013,10421,10424]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _Devices = _$$_REQUIRE(_dependencyMap[1]);

  var _default = _reactNative.StyleSheet.create({
    column_container: {
      alignItems: 'center',
      flexDirection: 'column'
    },
    column_container_margin_first: {
      alignItems: 'center',
      margin: 20,
      flexDirection: 'column'
    },
    column_container_margin_second: {
      alignItems: 'center',
      marginStart: 20,
      marginEnd: 20,
      flexDirection: 'column'
    },
    row_container: {
      alignItems: 'center',
      justifyContent: 'center',
      flexDirection: 'row'
    },
    row_container_first: {
      alignItems: 'center',
      margin: 20,
      flexDirection: 'row'
    },
    row_container_second: {
      alignItems: 'center',
      marginTop: 20,
      marginBottom: 20,
      flexDirection: 'row'
    },
    text_title: {
      fontSize: 16,
      textAlign: 'center',
      color: '#333333'
    },
    text_title_white: {
      fontSize: 16,
      textAlign: 'center',
      color: '#fff'
    },
    text_description: {
      fontSize: 14,
      color: '#999999'
    },
    text_description_white: {
      fontSize: 14,
      color: '#fff'
    },
    text_description_margin_start: {
      marginStart: 10,
      fontSize: 14,
      color: '#999999'
    },
    text_description_white_margin_start: {
      marginStart: 10,
      fontSize: 14,
      color: '#fff'
    },
    separator: {
      width: _Devices.ScreenW,
      height: 1 / _reactNative.PixelRatio.get(),
      backgroundColor: 'rgba(0,0,0,0.15)'
    },
    separator_margin_start: {
      width: _Devices.ScreenW,
      height: 1 / _reactNative.PixelRatio.get(),
      backgroundColor: 'rgba(0,0,0,0.15)',
      marginStart: 46
    }
  });

  exports.default = _default;
},10418,[10033,10067]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/setting",
    "width": 310,
    "height": 310,
    "scales": [1],
    "hash": "06ceede3a6301ee37fb3a57ffa2bb2be",
    "name": "setting_tip_icon_reboot",
    "type": "png"
  });
},10421,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/common",
    "width": 48,
    "height": 41,
    "scales": [1],
    "hash": "596adecff5159b1a42dabffd05542716",
    "name": "common_icon_remind",
    "type": "png"
  });
},10424,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[9]);

  var _LoadingView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var canGoBack = false;

  var MpkWebPage = function (_React$Component) {
    (0, _inherits2.default)(MpkWebPage, _React$Component);

    function MpkWebPage() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, MpkWebPage);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(MpkWebPage)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onNavigationStateChange = function (navState) {};

      _this.renderLoading = function () {
        return _react.default.createElement(_LoadingView.default, null);
      };

      return _this;
    }

    (0, _createClass2.default)(MpkWebPage, [{
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var params = this.props.navigation.state.params;
        return _react.default.createElement(_reactNavigation.SafeAreaView, {
          style: styles.container
        }, _react.default.createElement(_reactNative.WebView, {
          ref: function ref(_ref) {
            _this2.webview = _ref;
          },
          style: styles.base,
          source: {
            uri: params.url
          },
          javaScriptEnabled: true,
          domStorageEnabled: true,
          startInLoadingState: true,
          scalesPageToFit: true,
          decelerationRate: "normal",
          onShouldStartLoadWithRequest: function onShouldStartLoadWithRequest() {
            var shouldStartLoad = true;
            return shouldStartLoad;
          },
          onNavigationStateChange: this.onNavigationStateChange,
          renderLoading: this.renderLoading
        }));
      }
    }]);
    return MpkWebPage;
  }(_react.default.Component);

  exports.default = MpkWebPage;

  MpkWebPage.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    var title = navigation.state.params.title;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        style: {
          backgroundColor: 'white'
        },
        title: _CommonUtils.default.isNull(title) ? '' : title,
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    base: {
      flex: 1
    },
    container: {
      flex: 1,
      flexDirection: 'column',
      backgroundColor: '#FFF'
    }
  });
},10427,[14305,14320,14323,14371,14377,14386,10297,10284,10033,10918,10430,10040]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[3]);

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[4]);

  var LoadingView = function LoadingView() {
    return _react.default.createElement(_Dialog.LoadingDialog, {
      visible: true,
      message: _RouterLocalizedStringUtil.localStrings.loadingText
    });
  };

  var styles = _reactNative.StyleSheet.create({
    loading: {
      flex: 1,
      alignItems: 'center',
      justifyContent: 'center',
      backgroundColor: 'white'
    },
    loadingText: {
      marginTop: 10,
      textAlign: 'center'
    }
  });

  var _default = LoadingView;
  exports.default = _default;
},10430,[14305,10297,10033,10755,10055]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[9]);

  var _LoadingView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var canGoBack = false;

  var MpkWebPage = function (_React$Component) {
    (0, _inherits2.default)(MpkWebPage, _React$Component);

    function MpkWebPage() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, MpkWebPage);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(MpkWebPage)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onNavigationStateChange = function (navState) {};

      _this.renderLoading = function () {
        return _react.default.createElement(_LoadingView.default, null);
      };

      return _this;
    }

    (0, _createClass2.default)(MpkWebPage, [{
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var params = this.props.navigation.state.params;
        return _react.default.createElement(_reactNavigation.SafeAreaView, {
          style: styles.container
        }, _react.default.createElement(_reactNative.WebView, {
          ref: function ref(_ref) {
            _this2.webview = _ref;
          },
          style: styles.base,
          source: {
            uri: params.url
          },
          javaScriptEnabled: true,
          domStorageEnabled: true,
          startInLoadingState: true,
          scalesPageToFit: true,
          decelerationRate: "normal",
          onShouldStartLoadWithRequest: function onShouldStartLoadWithRequest() {
            var shouldStartLoad = true;
            return shouldStartLoad;
          },
          onNavigationStateChange: this.onNavigationStateChange,
          renderLoading: this.renderLoading
        }));
      }
    }]);
    return MpkWebPage;
  }(_react.default.Component);

  exports.default = MpkWebPage;

  MpkWebPage.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    var title = navigation.state.params.title;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        style: {
          backgroundColor: 'white'
        },
        title: _CommonUtils.default.isNull(title) ? '' : title,
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    base: {
      flex: 1
    },
    container: {
      flex: 1,
      flexDirection: 'column',
      backgroundColor: '#FFF'
    }
  });
},10433,[14305,14320,14323,14371,14377,14386,10297,10284,10033,10918,10430,10040]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[8]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[10]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[11]);

  var _ui = _$$_REQUIRE(_dependencyMap[12]);

  var _Devices = _$$_REQUIRE(_dependencyMap[13]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _UnitTextView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _device = _$$_REQUIRE(_dependencyMap[19]);

  var _miot = _$$_REQUIRE(_dependencyMap[20]);

  var _QosHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[22]);

  var _QosGuest = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var options = [{
    title: '自动分配',
    subtitle: '系统根据设备需要自动调整网速',
    mode: 3
  }, {
    title: '游戏优先',
    subtitle: '优先保证游戏的网速，不卡顿不掉线',
    mode: 4
  }, {
    title: '视频优先',
    subtitle: '优先保证看视频的网速，高清也流畅',
    mode: 6
  }, {
    title: '网页优先',
    subtitle: '优先保证浏览网页的速度，大图秒打开',
    mode: 5
  }];

  var QosEntry = function (_React$Component) {
    (0, _inherits2.default)(QosEntry, _React$Component);

    function QosEntry(props) {
      var _this;

      (0, _classCallCheck2.default)(this, QosEntry);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(QosEntry).call(this, props));
      _this.keyboardIsShow = false;
      _this.state = {
        qosGuestTitle: '访客WiFi限速',
        visible_qos_setting_dialog: false,
        visible_priority_dialog: false,
        selectedIndex: 0,
        selectedIndexArray: [0],
        qosSettingOptions: [{
          upload: 100,
          download: 200
        }],
        upload: 0.0,
        download: 0.0,
        on: 0,
        qosSet: '限速设置',
        loading: true,
        guest: {},
        band: {},
        uploadChangeText: '',
        uploadNomalText: '',
        downloadChangeText: '',
        downloadNomalText: '',
        showChildView: false,
        position: 0.03
      };
      return _this;
    }

    (0, _createClass2.default)(QosEntry, [{
      key: "_QosBand",
      value: function _QosBand() {
        var _this2 = this;

        this.setState({
          loading: true
        });

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var manual = 1;
        var uplpadChange = this.state.uploadChangeText;
        var downloadChange = this.state.downloadChangeText;
        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceID: deviceId,
            deviceId: deviceId,
            upload: uplpadChange,
            download: downloadChange,
            manual: manual
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.set_qos_band.remote, paramsDic).then(function (res) {
          if (res.code == 0) {
            if (_this2.state.download <= 0) {
              _this2._QosSwitch(true);
            }

            var bandChange = _this2.state.band;
            bandChange.upload = uplpadChange;
            bandChange.download = downloadChange;

            _this2.setState({
              loading: false,
              upload: uplpadChange,
              download: downloadChange,
              band: bandChange
            });
          } else {
            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeFail);
          }
        }).catch(function (e) {
          _this2.setState({
            loading: false
          });

          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeFail);
        });
      }
    }, {
      key: "_QosMode",
      value: function _QosMode(result) {
        var _this3 = this;

        this.setState({
          loading: true
        });

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceID: deviceId,
            deviceId: deviceId,
            mode: options[result].mode
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.set_qos_mode.remote, paramsDic).then(function (res) {
          if (res.code == 0) {
            _this3.setState({
              selectedIndex: result[0],
              selectedIndexArray: result,
              loading: false
            });
          } else {
            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeFail);
          }
        }).catch(function (e) {
          _this3.setState({
            loading: false
          });

          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeFail);
        });
      }
    }, {
      key: "_QosSwitch",
      value: function _QosSwitch(value) {
        var _this4 = this;

        this.setState({
          loading: true
        });

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceID: deviceId,
            deviceId: deviceId,
            on: value ? 1 : 0
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.set_qos_switch.remote, paramsDic).then(function (res) {
          if (res.code == 0) {
            if (value) {
              _this4._fetchListData();
            } else {
              _this4.setState({
                on: value ? 1 : 0,
                loading: false,
                showChildView: value
              });
            }
          } else {
            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeFail);
          }
        }).catch(function (e) {
          _this4.setState({
            loading: false
          });

          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeFail);
        });
      }
    }, {
      key: "_fetchListData",
      value: function _fetchListData() {
        var _this5 = this;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var macList = _QosHelper.default.getQosMacParam();

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceID: deviceId,
            deviceId: deviceId,
            macs: macList
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.get_qos_info.remote, paramsDic).then(function (res) {
          if (res.code == 0) {
            var index = _QosHelper.default.getArrayPosition(options, _QosHelper.default.getStatusResIdForMode(res.status.mode));

            var arr = [0];
            arr[0] = index;

            _this5.setState({
              upload: res.band.upload,
              download: res.band.download,
              on: res.status.on,
              selectedIndex: _CommonUtils.default.isNull(index) ? 0 : index,
              selectedIndexArray: arr,
              guest: res.guest,
              band: res.band,
              uploadChangeText: res.band.upload,
              uploadNomalText: res.band.upload,
              downloadChangeText: res.band.download,
              downloadNomalText: res.band.download,
              loading: false,
              showChildView: res.status.on == 1
            });
          } else {
            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.common_refreshing_retry);

            _this5.setState({
              loading: false
            });

            _this5.props.navigation.goBack();
          }
        }).catch(function (e) {
          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.common_refreshing_retry);

          _this5.setState({
            loading: false,
            showChildView: false
          });

          _this5.props.navigation.goBack();
        });
      }
    }, {
      key: "_keyboardDidShow",
      value: function _keyboardDidShow() {
        this.keyboardIsShow = true;
        this.setState({
          position: 0.35
        });
      }
    }, {
      key: "_keyboardDidHide",
      value: function _keyboardDidHide() {
        this.keyboardIsShow = false;
        this.setState({
          position: 0.03
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.keyboardDidShowListener.remove();
        this.keyboardDidHideListener.remove();

        _reactNative.DeviceEventEmitter.emit('QosSwitch', this.state.on);
      }
    }, {
      key: "componentWillMount",
      value: function componentWillMount() {
        if (_Devices.ios) {
          _miot.Host.pageShouldAdapterSoftKeyboard(false);
        }

        this.keyboardDidShowListener = _reactNative.Keyboard.addListener('keyboardDidShow', this._keyboardDidShow.bind(this));
        this.keyboardDidHideListener = _reactNative.Keyboard.addListener('keyboardDidHide', this._keyboardDidHide.bind(this));

        this._fetchListData();
      }
    }, {
      key: "_pressQosGuest",
      value: function _pressQosGuest(title) {
        this.props.navigation.navigate('QosGuest', {
          title: title,
          guest: this.state.guest,
          band: this.state.band
        });
      }
    }, {
      key: "_onPriorityDismiss",
      value: function _onPriorityDismiss() {
        this.setState({
          visible_priority_dialog: false
        });
      }
    }, {
      key: "_onQosSettingDismiss",
      value: function _onQosSettingDismiss() {
        var uploadNomalText = this.state.uploadNomalText;
        var downloadNomalText = this.state.downloadNomalText;
        this.setState({
          visible_qos_setting_dialog: false,
          uploadChangeText: uploadNomalText,
          downloadChangeText: downloadNomalText
        });
      }
    }, {
      key: "_onQosSetting",
      value: function _onQosSetting() {
        _reactNative.Keyboard.dismiss();

        if (!_CommonUtils.default.isNull(_CommonUtils.default.getQosBandWarnInfo(this.state.uploadChangeText, this.state.downloadChangeText))) {
          _CommonUtils.default.ShowToastCenter(_CommonUtils.default.getQosBandWarnInfo(this.state.uploadChangeText, this.state.downloadChangeText));

          return;
        } else {
          this.setState({
            visible_qos_setting_dialog: false
          });

          this._QosBand();
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this6 = this;

        var absDialogStyle = _Devices.ios ? {
          bottom: ~~(_Devices.ScreenH * this.state.position)
        } : {};
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.header
        }, _react.default.createElement(_reactNative.View, {
          style: styles.row_container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.row_item_container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.column_container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.row_item_speed
        }, _react.default.createElement(_UnitTextView.default, {
          text: this.state.upload
        })), _react.default.createElement(_reactNative.Text, {
          style: styles.text_speed_des
        }, "\u5916\u7F51\u6700\u9AD8\u4E0A\u4F20\u901F\u5EA6"))), _react.default.createElement(_reactNative.View, {
          style: styles.row_item_container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.column_container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.row_item_speed
        }, _react.default.createElement(_UnitTextView.default, {
          text: this.state.download
        })), _react.default.createElement(_reactNative.Text, {
          style: styles.text_speed_des
        }, "\u5916\u7F51\u6700\u9AD8\u4E0B\u8F7D\u901F\u5EA6"))))), _react.default.createElement(_reactNative.ScrollView, null, _react.default.createElement(_reactNative.View, {
          style: styles.listCont
        }, _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: "Qos\u9650\u901F",
          value: this.state.on,
          showSeparator: false,
          titleStyle: {
            fontSize: 14,
            color: '#000',
            fontWeight: 'bold'
          },
          subtitleStyle: {
            marginTop: 8
          },
          subtitle: "\u6839\u636E\u7F51\u7EDC\u5E26\u5BBD\u548C\u8BBE\u5B9A\u7684\u670D\u52A1\u4F18\u5148\u7EA7\u8C03\u914D\u7F51\u901F",
          onValueChange: function onValueChange(value) {
            if (_this6.state.download <= 0 && value) {
              _this6.setState({
                visible_qos_setting_dialog: true
              });
            } else {
              _this6._QosSwitch(value);
            }
          }
        }), this.state.showChildView ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_ListItem.ListItem, {
          title: "\u6309\u5E94\u7528\u4F18\u5148\u7EA7\u5206\u914D\u7F51\u901F",
          titleStyle: {
            fontSize: 14,
            color: '#000',
            fontWeight: 'bold'
          },
          value: options[this.state.selectedIndex].title,
          showSeparator: false,
          showDot: false,
          onPress: function onPress(_) {
            return _this6.setState({
              visible_priority_dialog: true
            });
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: '相当于带宽',
          titleStyle: {
            fontSize: 14,
            color: '#000',
            fontWeight: 'bold'
          },
          value: this.state.download > 0 ? this.state.download + 'M' : '限速设置',
          showDot: false,
          showSeparator: false,
          onPress: function onPress(_) {
            return _this6.setState({
              visible_qos_setting_dialog: true
            });
          }
        })) : null, _react.default.createElement(_QosGuest.default, {
          guest: this.state.guest,
          band: this.state.band,
          title: this.state.qosGuestTitle,
          isShow: this.state.showChildView
        }))), _react.default.createElement(_Dialog.ChoiceDialog, {
          visible: this.state.visible_priority_dialog,
          title: '按应用优先级分配网速',
          options: options,
          selectedIndexArray: this.state.selectedIndexArray,
          onDismiss: function onDismiss(_) {
            return _this6._onPriorityDismiss();
          },
          onSelect: function onSelect(result) {
            return _this6._QosMode(result);
          }
        }), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.visible_qos_setting_dialog,
          title: '设置上传和下载带宽',
          onDismiss: function onDismiss(_) {
            return _this6._onQosSettingDismiss();
          },
          style: absDialogStyle,
          buttons: [{
            text: '取消',
            style: {
              color: '#666666'
            },
            callback: function callback(_) {
              return _this6._onQosSettingDismiss();
            }
          }, {
            text: '确定',
            style: {
              color: '#4778FF'
            },
            callback: function callback(_) {
              return _this6._onQosSetting();
            }
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            height: 120,
            backgroundColor: 'white',
            alignItems: 'center',
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          activeOpacity: 1,
          style: styles.inputContainer
        }, _react.default.createElement(_reactNative.View, {
          style: styles.row_item_qos_input
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text_qos_setting_input
        }, "\u4E0A\u4F20\u5E26\u5BBD"), _react.default.createElement(_reactNative.TextInput, {
          style: {
            height: 40,
            width: _Devices.ScreenW * 0.4,
            color: '#989898',
            fontSize: 13
          },
          placeholder: "0.0",
          value: this.state.uploadChangeText + '',
          keyboardType: "numeric",
          placeholderTextColor: "#989898",
          underlineColorAndroid: 'transparent',
          onChangeText: function onChangeText(text) {
            var newText = text.replace(/[^\d(\.)]+/, '');

            _this6.setState({
              uploadChangeText: newText
            });
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.text_qos_setting_input_right
        }, "Mbps"))), _react.default.createElement(_reactNative.TouchableOpacity, {
          activeOpacity: 1,
          style: styles.inputContainer
        }, _react.default.createElement(_reactNative.View, {
          style: styles.row_item_qos_input
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text_qos_setting_input
        }, "\u4E0B\u8F7D\u5E26\u5BBD"), _react.default.createElement(_reactNative.TextInput, {
          style: {
            height: 40,
            width: _Devices.ScreenW * 0.4,
            color: '#989898',
            fontSize: 13
          },
          placeholder: "0.0",
          value: this.state.downloadChangeText + '',
          placeholderTextColor: "#989898",
          keyboardType: "numeric",
          underlineColorAndroid: 'transparent',
          onChangeText: function onChangeText(text) {
            var newText = text.replace(/[^\d(\.)]+/, '');

            _this6.setState({
              downloadChangeText: newText
            });
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.text_qos_setting_input_right
        }, "Mbps")))), _react.default.createElement(_Separator.default, null)), _react.default.createElement(_ui.LoadingDialog, {
          visible: this.state.loading,
          message: _RouterLocalizedStringUtil.localStrings.waitingLoading
        }));
      }
    }]);
    return QosEntry;
  }(_react.default.Component);

  exports.default = QosEntry;

  QosEntry.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        style: {
          backgroundColor: '#fff'
        },
        title: navigation.state.params.title,
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      flex: 1
    },
    inputContainer: {
      borderWidth: 0.5,
      marginBottom: 10,
      borderColor: '#F9F9F9',
      borderRadius: 5
    },
    icon_remind: {
      width: 16,
      height: 13.6
    },
    viewRkButton: {
      width: _Devices.ScreenW / 10 * 8
    },
    listCont: {
      flex: 1
    },
    list: {
      position: 'absolute',
      top: 0,
      bottom: 60
    },
    header: {
      flexDirection: 'column',
      backgroundColor: '#2358FE',
      alignItems: 'flex-start',
      borderWidth: 0.5,
      borderColor: '#2358FE',
      borderRadius: 10,
      paddingStart: 5,
      paddingBottom: 10,
      margin: 15,
      height: 200
    },
    text_speed: {
      color: '#fff',
      fontSize: 40,
      marginStart: 10,
      textAlign: 'left'
    },
    text_speed_unit: {
      color: 'rgba(255, 255, 255, 0.6)',
      fontSize: 12,
      marginBottom: 10
    },
    text_speed_tip: {
      color: 'rgba(255, 255, 255,1.0)',
      fontSize: 12,
      marginBottom: 10,
      textAlign: 'center'
    },
    text_qos_setting: {
      color: 'rgba(255, 255, 255,0.5)',
      fontSize: 12,
      marginStart: 10,
      textDecorationLine: 'underline',
      marginBottom: 10,
      textAlign: 'center'
    },
    text_qos_setting_input: {
      color: '#000000',
      fontSize: 13,
      marginHorizontal: 10
    },
    text_qos_setting_input_right: {
      color: '#989898',
      fontSize: 13,
      marginHorizontal: 10
    },
    text_speed_des: {
      color: 'rgba(255, 255, 255,0.9)',
      marginStart: 12,
      fontSize: 12
    },
    addcont: {
      alignItems: 'center',
      justifyContent: 'center',
      height: 60
    },
    separator: {
      backgroundColor: '#000',
      marginTop: 20
    },
    infoDivider: {
      backgroundColor: '#E5E5E5',
      height: 0.5,
      marginTop: 7,
      marginLeft: 20,
      marginRight: 20,
      width: _Devices.ScreenW
    },
    row_container: {
      alignItems: 'flex-start',
      flexDirection: 'column',
      flex: 1
    },
    column_container: {
      flexDirection: 'column',
      alignItems: 'flex-start'
    },
    row_item_container: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      flex: 1
    },
    row_item_qos_input: {
      backgroundColor: '#F9F9F9',
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    },
    column_item_container: {
      flexDirection: 'column',
      alignItems: 'center',
      justifyContent: 'center',
      borderRadius: 5,
      flex: 1
    },
    row_item_speed: {
      flexDirection: 'row',
      alignItems: 'flex-end',
      justifyContent: 'flex-start',
      marginStart: 10
    }
  });
},10436,[14305,14320,14323,14371,14377,14386,10284,10297,10338,10033,11251,10755,10230,10067,10332,10013,10439,10040,10064,10935,10074,10358,10055,10442]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _Easing = _$$_REQUIRE(_dependencyMap[9]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Devices = _$$_REQUIRE(_dependencyMap[11]);

  var UnitTextView = function (_React$Component) {
    (0, _inherits2.default)(UnitTextView, _React$Component);

    function UnitTextView(props, context) {
      (0, _classCallCheck2.default)(this, UnitTextView);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(UnitTextView).call(this, props, context));
    }

    (0, _createClass2.default)(UnitTextView, [{
      key: "_getPreZero",
      value: function _getPreZero(num) {
        if (num < 10) {
          return '00';
        } else if (num < 100) {
          return '0';
        } else {
          return '';
        }
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: styles.row_item_speed
        }, _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: styles.text_speed_unit
        }, this._getPreZero(_CommonUtils.default.getSpeedByMbps(this.props.text)), _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: styles.text_speed
        }, _CommonUtils.default.getSpeedByMbps(this.props.text), _react.default.createElement(_reactNative.Text, {
          style: styles.text_speed_unit2
        }, " MB/s"))));
      }
    }]);
    return UnitTextView;
  }(_react.default.Component);

  exports.default = UnitTextView;
  UnitTextView.propTypes = {
    text: _propTypes.default.string.isRequired
  };
  UnitTextView.defaultProps = {
    text: ''
  };

  var styles = _reactNative.StyleSheet.create({
    text_speed: {
      color: '#fff',
      fontSize: 40,
      padding: 10
    },
    text_speed_unit: {
      color: 'rgba(255, 255, 255, 0.6)',
      fontSize: 40,
      width: _Devices.ScreenW * 0.85
    },
    text_speed_unit2: {
      color: 'rgba(255, 255, 255, 0.6)',
      fontSize: 12
    },
    row_item_speed: {
      flexDirection: 'row',
      marginEnd: 10
    }
  });
},10439,[14305,14320,14323,14371,14377,14386,10318,10297,10033,10597,10040,10067]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[8]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _Devices = _$$_REQUIRE(_dependencyMap[10]);

  var _Slider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _ui = _$$_REQUIRE(_dependencyMap[13]);

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[14]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _device = _$$_REQUIRE(_dependencyMap[16]);

  var _miot = _$$_REQUIRE(_dependencyMap[17]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _QosHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var QosGuest = function (_React$Component) {
    (0, _inherits2.default)(QosGuest, _React$Component);

    function QosGuest(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, QosGuest);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(QosGuest).call(this, props, context));
      _this.state = {
        upload_value: 0,
        download_value: 0,
        guest: {},
        band: {},
        upload_band: 0.0,
        download_band: 0.0,
        loading: false,
        isShow: false
      };
      return _this;
    }

    (0, _createClass2.default)(QosGuest, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        var band = nextProps.band;
        var guest = nextProps.guest;
        var percent_up = _CommonUtils.default.isNull(nextProps.guest.percent_up) ? 0 : nextProps.guest.percent_up;
        var percent = _CommonUtils.default.isNull(nextProps.guest.percent) ? 0 : nextProps.guest.percent;
        this.setState({
          upload_value: percent_up > 1 ? 100 : percent_up * 100,
          download_value: percent > 1 ? 100 : percent * 100,
          guest: guest,
          band: band,
          upload_band: _CommonUtils.default.isNull(band) ? 0.0 : _CommonUtils.default.getFloat(band.upload * percent_up, 1),
          download_band: _CommonUtils.default.isNull(band) ? 0.0 : _CommonUtils.default.getFloat(band.download * percent, 1),
          loading: false,
          isShow: nextProps.isShow
        });
      }
    }, {
      key: "_fetchData",
      value: function _fetchData() {
        var _this2 = this;

        this.setState({
          loading: true
        });

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var percentChange = this.state.download_value / 100;
        var percentUpChange = this.state.upload_value / 100;
        var paramsDic = {
          method: method,
          params: {
            deviceID: deviceId,
            deviceId: deviceId,
            percent: percentChange,
            percent_up: percentUpChange
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.set_qos_guest.remote, paramsDic).then(function (res) {
          if (res.code == 0) {
            _this2.setState({
              loading: false
            });

            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeSuccess);
          } else {
            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeFail);
          }
        }).catch(function (e) {
          _this2.setState({
            loading: false
          });

          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeFail);
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        return _react.default.createElement(_reactNative.SafeAreaView, {
          style: styles.column_container
        }, this.state.isShow ? _react.default.createElement(_reactNative.View, {
          style: styles.parents
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.Text, {
          style: styles.text_h1
        }, this.props.title), _react.default.createElement(_reactNative.View, {
          style: styles.row_item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text_h3
        }, "\u4E0A\u4F20\u9650\u901F"), _react.default.createElement(_reactNative.Text, {
          style: styles.text_h4
        }, _QosHelper.default.getBandRateByMB(this.state.upload_band))), _react.default.createElement(_Slider.default, {
          style: {
            height: 18
          },
          minimumValue: 1,
          maximumValue: 100,
          trackStyle: styles.track,
          thumbStyle: styles.thumb,
          minimumTrackTintColor: "#1073ff",
          maximumTrackTintColor: "#b7b7b7",
          value: this.state.upload_value,
          step: 0.1,
          onSlidingComplete: function onSlidingComplete(value) {
            return _this3._fetchData();
          },
          onValueChange: function onValueChange(value) {
            return _this3.setState({
              upload_value: value == 0 ? 1 : value,
              upload_band: _CommonUtils.default.getFloat((value == 0 ? 1 : value) / 100 * _this3.state.band.upload)
            });
          }
        }), _react.default.createElement(_reactNative.View, {
          style: styles.row_item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text_h3
        }, "\u4E0B\u8F7D\u9650\u901F"), _react.default.createElement(_reactNative.Text, {
          style: styles.text_h4
        }, _QosHelper.default.getBandRateByMB(this.state.download_band))), _react.default.createElement(_Slider.default, {
          style: {
            height: 18
          },
          minimumValue: 1,
          maximumValue: 100,
          trackStyle: styles.track,
          thumbStyle: styles.thumb,
          minimumTrackTintColor: "#1073ff",
          maximumTrackTintColor: "#b7b7b7",
          value: this.state.download_value,
          step: 0.1,
          onSlidingComplete: function onSlidingComplete(value) {
            return _this3._fetchData();
          },
          onValueChange: function onValueChange(value) {
            return _this3.setState({
              download_value: value,
              download_band: _CommonUtils.default.getFloat(value / 100 * _this3.state.band.download)
            });
          }
        })) : null, _react.default.createElement(_reactNative.View, {
          style: styles.parents
        }), _react.default.createElement(_ui.LoadingDialog, {
          visible: this.state.loading,
          message: _RouterLocalizedStringUtil.localStrings.waitingLoading
        }));
      }
    }]);
    return QosGuest;
  }(_react.default.Component);

  exports.default = QosGuest;
  QosGuest.propTypes = {
    guest: _propTypes.default.object,
    band: _propTypes.default.object,
    title: _propTypes.default.string.isRequired,
    isShow: _propTypes.default.bool
  };
  QosGuest.defaultProps = {
    guest: {},
    band: {},
    title: '',
    isShow: false
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      width: _Devices.ScreenW / 10 * 9,
      alignItems: "stretch",
      justifyContent: 'center'
    },
    parents: {
      flex: 1,
      width: _Devices.ScreenW / 10 * 8.8,
      marginLeft: 20,
      marginRight: 20,
      alignItems: "stretch",
      justifyContent: 'flex-start'
    },
    column_container: {
      flexDirection: 'column',
      alignItems: 'center',
      flex: 1,
      backgroundColor: 'white'
    },
    row_item: {
      marginTop: 10,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'flex-start'
    },
    track: {
      height: 18,
      borderRadius: 10
    },
    thumb: {
      width: 20,
      height: 20,
      borderRadius: 10,
      backgroundColor: 'white',
      shadowColor: 'black',
      shadowOffset: {
        width: 0,
        height: 2
      },
      shadowRadius: 2,
      shadowOpacity: 0.35
    },
    text_h1: {
      marginTop: 10,
      fontSize: 12,
      color: '#8C93B0'
    },
    text_h2: {
      marginVertical: 20,
      textAlign: 'center',
      fontSize: 14,
      color: '#000000'
    },
    text_h3: {
      marginVertical: 5,
      textAlign: 'center',
      fontSize: 14,
      fontWeight: 'bold',
      color: '#000000'
    },
    text_h4: {
      marginHorizontal: 20,
      width: 100,
      fontSize: 12,
      color: '#7F7F7F'
    }
  });
},10442,[14305,14320,14323,14371,14377,14386,10284,10297,10338,10033,10067,10355,10040,10230,10055,10064,10935,10074,10318,10332,10358]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _Devices = _$$_REQUIRE(_dependencyMap[10]);

  var _device = _$$_REQUIRE(_dependencyMap[11]);

  var _miot = _$$_REQUIRE(_dependencyMap[12]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[15]);

  var _LoadingImage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[17]);

  var CHANNEL_PROGRESS_TEXT = ['正在扫描WiFi信道...', '正在检测周围WiFi数量...', '正在分析干扰系数...', '正在分析信道吞吐量...', '正在评估当前WiFi质量...'];
  var OPTIMIZING_PROGRESS_TEXT = ['正在检测最优WiFi信道...', '正在切换WiFi信道...', '切换过程WiFi网络可能会短暂中断...', '切换WiFi信道成功...', '正在定向重连...'];

  var NetworkOptimizeTool = function (_React$Component) {
    (0, _inherits2.default)(NetworkOptimizeTool, _React$Component);

    function NetworkOptimizeTool(props) {
      var _this;

      (0, _classCallCheck2.default)(this, NetworkOptimizeTool);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NetworkOptimizeTool).call(this, props));

      _this.updataData = function (index, action, result) {
        var checkList = _this.state.checkList;

        if (action === 'start') {
          checkList[index].status = 1;
        } else if (action === 'complete') {
          checkList[index].status = 2;

          if (result) {
            checkList[index].result = result;
          }
        }

        _this.setState({
          checkList: checkList
        }, function () {
          if (!_this.state.isOptimizing && action === 'complete' && index === _this.state.checkList.length - 1) {
            _this.checkComplete();
          }
        });
      };

      _this.resultUpdateState = function () {
        var checkList = _this.state.checkList;
        var isNeedOptimize = false;
        var needOptimizationCount = 0;
        checkList.map(function (item, index) {
          item.status = item.result.status;

          if (item.status === 3) {
            isNeedOptimize = true;
            item.checked = true;
            needOptimizationCount++;
          }
        });
        var step = isNeedOptimize ? 1 : 2;
        var step2Title = needOptimizationCount === 0 ? '当前状态已是最佳，无需优化' : '';

        _this.setState({
          checkList: checkList,
          step: step,
          needOptimizationCount: needOptimizationCount,
          step2Title: step2Title
        }, function () {});
      };

      _this.checkComplete = function () {
        _this.setState({
          'isShowCheckBtn': false
        });

        _this.resultUpdateState();
      };

      _this.channelProgress = function _callee() {
        var progressIndex;
        return _regenerator.default.async(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _this.n++;
                progressIndex = _this.n / 5 >> 0;

                _this.setState({
                  progressIndex: progressIndex
                });

                _this.timer = setTimeout(_this.channelProgress, 1000);

                if (!(_this.n === _this.state.checkList[0].checkTime)) {
                  _context.next = 10;
                  break;
                }

                clearTimeout(_this.timer);
                _this.n = 0;
                _context.next = 9;
                return _regenerator.default.awrap(_this.getChannelScanResult());

              case 9:
                _this.startScanWifiDetailAll();

              case 10:
              case "end":
                return _context.stop();
            }
          }
        });
      };

      _this.optimizationChannelProgress = function (resolve) {
        _this.n++;
        var progressIndex = _this.n;

        _this.setState({
          progressIndex: progressIndex
        });

        _this.timer = setTimeout(function () {
          _this.optimizationChannelProgress(resolve);
        }, 1000);

        if (_this.n === _this.state.checkList[0].optimizationTime) {
          resolve();
          clearTimeout(_this.timer);

          _this.updataData(0, 'complete');

          _this.n = 0;
        }
      };

      _this.setCheckboxValue = function (id, value) {
        var checkList = _this.state.checkList;
        checkList[id].checked = value;

        _this.setState({
          checkList: checkList
        }, function () {
          var onlyOneCheck = false;

          _this.state.checkList.map(function (item) {
            if (item.checked) {
              onlyOneCheck = true;
            }
          });

          _this.setState({
            onlyOneCheck: onlyOneCheck
          });
        });
      };

      _this.optimizationHandler = function _callee3() {
        var checkList, optCount;
        return _regenerator.default.async(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                checkList = _this.state.checkList;
                checkList.map(function (item, index) {
                  item.status = item.status === 3 ? 6 : item.status;
                });

                _this.timeLine('optimization');

                optCount = 0;

                _this.setState({
                  checkList: checkList,
                  step: 0,
                  isOptimizing: true
                }, function _callee2() {
                  var i, item, step2Title, step2SubTitle;
                  return _regenerator.default.async(function _callee2$(_context2) {
                    while (1) {
                      switch (_context2.prev = _context2.next) {
                        case 0:
                          i = 0;

                        case 1:
                          if (!(i < _this.state.checkList.length)) {
                            _context2.next = 16;
                            break;
                          }

                          item = _this.state.checkList[i];

                          if (!(item.status === 6 && item.checked && i === 0)) {
                            _context2.next = 9;
                            break;
                          }

                          _context2.next = 6;
                          return _regenerator.default.awrap(_this.optimizationChannel());

                        case 6:
                          optCount++;
                          _context2.next = 13;
                          break;

                        case 9:
                          if (!(item.status === 6 && item.checked && i === 1)) {
                            _context2.next = 13;
                            break;
                          }

                          _context2.next = 12;
                          return _regenerator.default.awrap(_this.optimizationTxpwr());

                        case 12:
                          optCount++;

                        case 13:
                          i++;
                          _context2.next = 1;
                          break;

                        case 16:
                          step2Title = '优化完成，网络速度提升' + (Math.random() * 30 + 10 >> 0) + '%';
                          step2SubTitle = '已成功优化' + optCount + '个可优化项';

                          _this.setState({
                            step: 2,
                            step2Title: step2Title,
                            step2SubTitle: step2SubTitle
                          });

                        case 19:
                        case "end":
                          return _context2.stop();
                      }
                    }
                  });
                });

              case 5:
              case "end":
                return _context3.stop();
            }
          }
        });
      };

      _this.showOptimizationProgress = function () {};

      _this.optimizationChannel = function _callee4() {
        return _regenerator.default.async(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _this.updataData(0, 'start');

                return _context4.abrupt("return", new Promise(function (resolve, reject) {
                  var deviceId = _this.deviceID;
                  var method = 'GET';
                  var paramsDic = {
                    method: method,
                    params: {
                      deviceId: deviceId,
                      channel1: _this.channel24
                    }
                  };

                  if (_this.channel5) {
                    paramsDic.params.channel2 = _this.channel5;
                  }

                  _miot.Service.callSmartHomeAPI(_API.default.wifi_optimize.set_channel.remote, paramsDic).then(function (res) {
                    if (res.code == 0) {
                      _this.optimizationChannelProgress(resolve);
                    } else {
                      _this.props.navigation.goBack();
                    }
                  }).catch(function (e) {
                    _this.props.navigation.goBack();
                  });
                }));

              case 2:
              case "end":
                return _context4.stop();
            }
          }
        });
      };

      _this.optimizationTxpwr = function () {
        _this.updataData(1, 'start');

        return new Promise(function (resolve, reject) {
          var deviceId = _this.deviceID;
          var method = 'GET';
          var info = _this.state.checkList[1].result.info;
          var paramsDic = {
            method: method,
            params: {
              deviceId: deviceId,
              wifiIndex: 1,
              on: 1,
              ssid: info.ssid,
              pwd: info.password,
              encryption: info.encryption,
              channel: _this.channel24,
              bandwidth: info.bandwidth,
              hidden: info.hidden,
              txpwr: 'max'
            }
          };

          _miot.Service.callSmartHomeAPI(_API.default.wifi_setting.set_wifi.remote, paramsDic).then(function (res) {
            if (res.code === 0) {
              _this.updataData(1, 'complete');

              resolve();
            } else {
              _this.props.navigation.goBack();
            }
          }).catch(function (e) {
            _this.props.navigation.goBack();
          });
        });
      };

      _this.getAllTime = function (type) {
        var time = 0;

        _this.state.checkList.map(function (item) {
          if (type === 'optimization' && item.checked) {
            time += item['optimizationTime'];
          } else if (type === 'checkTime') {
            time += item[type];
          }
        });

        return time;
      };

      _this.timeLine = function (type) {
        var allTime = _this.getAllTime(type);

        _this.percent++;
        var percent = _this.percent / allTime * 100 >> 0;

        _this.setState({
          percent: percent
        });

        _this.allTimer = setTimeout(function () {
          _this.timeLine(type);
        }, 1000);

        if (percent === 100) {
          clearTimeout(_this.allTimer);
          _this.percent = 0;
        }
      };

      _this._renderItem = function (_ref) {
        var item = _ref.item;
        return _react.default.createElement(_reactNative.View, null, item.status !== 4 && item.status !== 5 && _react.default.createElement(_reactNative.View, {
          style: styles.itemHeaderParents
        }, _react.default.createElement(_reactNative.View, {
          style: styles.itemHeader
        }, _react.default.createElement(_reactNative.View, {
          style: styles.deviceContent
        }, _react.default.createElement(_reactNative.View, {
          style: styles.deviceContentRowParentView
        }, _react.default.createElement(_reactNative.View, {
          style: styles.deviceContentRowTopView
        }, _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: styles.deviceNameTextMax
        }, item.title))), _react.default.createElement(_reactNative.View, {
          style: styles.deviceContentRowTopView
        }, _react.default.createElement(_reactNative.Text, {
          numberOfLines: 2,
          style: styles.deviceConnectTypeText
        }, item.subTitle)))), _react.default.createElement(_LoadingImage.default, {
          value: item,
          callback: _this.setCheckboxValue
        })));
      };

      _this.deviceID = _device.Device.deviceID.replace("miwifi.", "");
      _this.state = {
        checkList: [{
          id: 0,
          title: 'WiFi质量',
          subTitle: '优化信道可减少干扰，提升网速',
          status: 0,
          result: {
            status: 5,
            tips: ''
          },
          checked: false,
          checkTime: 25,
          optimizationTime: 5
        }, {
          id: 1,
          title: '信号强度',
          subTitle: '提升信号强度，改善远距离联网速度',
          status: 0,
          result: {
            status: 5,
            tips: ''
          },
          checked: false,
          checkTime: 2,
          optimizationTime: 1
        }],
        isShowCheckBtn: true,
        isShowOptimizationBtn: false,
        progressIndex: 0,
        needOptimizationCount: 0,
        onlyOneCheck: true,
        percent: 0,
        isOptimizing: false,
        step: 0,
        step2Title: '',
        step2SubTitle: ''
      };
      _this.n = 0;
      _this.percent = 0;
      _this.channel24 = 0;
      _this.channel5 = null;
      return _this;
    }

    (0, _createClass2.default)(NetworkOptimizeTool, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.startChannelScan();
        this.timeLine('checkTime');
      }
    }, {
      key: "getChannelScanResult",
      value: function getChannelScanResult() {
        var _this2 = this;

        return new Promise(function (resolve, reject) {
          var deviceId = _this2.deviceID;
          var method = 'GET';
          var paramsDic = {
            method: method,
            params: {
              deviceID: deviceId,
              deviceId: deviceId
            }
          };

          _miot.Service.callSmartHomeAPI(_API.default.wifi_optimize.get_channel_scan_result.remote, paramsDic).then(function (response) {
            if (response.code == 0) {
              var result = {
                status: 5,
                tips: ''
              };

              if (response['2G'] == null) {
                result.status = 4;
                result.tips = '检测失败';
              } else {
                if (response['2G'].ranking <= 3) {} else if (response['2G'].ranking <= 6) {
                  result.status = 3;
                  result.tips = '一般';
                } else {
                  result.status = 3;
                  result.tips = '较差';
                }

                _this2.channel24 = response['2G'].schannel;

                if (response['5G']) {
                  _this2.channel5 = response['5G'].schannel;
                }
              }

              _this2.updataData(0, 'complete', result);

              resolve();
            } else {
              _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.common_refreshing_retry);

              _this2.props.navigation.goBack();
            }
          }).catch(function (e) {
            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.common_refreshing_retry);

            _this2.props.navigation.goBack();
          });
        });
      }
    }, {
      key: "startChannelScan",
      value: function startChannelScan() {
        var _this3 = this;

        var deviceId = this.deviceID;
        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceID: deviceId,
            deviceId: deviceId
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.wifi_optimize.start_channel_scan.remote, paramsDic).then(function (res) {
          if (res.code == 0) {
            _this3.updataData(0, 'start');

            _this3.channelProgress();
          } else {
            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.common_refreshing_retry);

            _this3.props.navigation.goBack();
          }
        }).catch(function (e) {
          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.common_refreshing_retry);

          _this3.props.navigation.goBack();
        });
      }
    }, {
      key: "startScanWifiDetailAll",
      value: function startScanWifiDetailAll() {
        var _this4 = this;

        this.updataData(1, 'start');
        var startTime = new Date().getTime();
        var deviceId = this.deviceID;
        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceID: deviceId,
            deviceId: deviceId
          }
        };
        var result;

        _miot.Service.callSmartHomeAPI(_API.default.wifi_setting.wifi_detail_all.remote, paramsDic).then(function (res) {
          if (res.code === 0) {
            var endTime = new Date().getTime();
            result = {
              status: 5,
              tips: '',
              info: res.info[0]
            };

            if (endTime - startTime < 2000) {
              result = {
                status: 5,
                tips: '',
                info: res.info[0]
              };
              var wifi24 = res.info[0];
              var signal = wifi24.txpwr;

              if (signal === 'mid') {
                result.status = 3;
                result.tips = '标准';
              } else if (signal === 'min') {
                result.status = 3;
                result.tips = '节能';
              }
            }
          } else {
            _this4.props.navigation.goBack();
          }
        }).catch(function (e) {
          _this4.props.navigation.goBack();
        });

        setTimeout(function () {
          _this4.updataData(1, 'complete', result);
        }, 2000);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        clearTimeout(this.allTimer);
        clearTimeout(this.timer);
      }
    }, {
      key: "render",
      value: function render() {
        var _this5 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, this.state.step === 0 && _react.default.createElement(_reactNative.View, {
          style: styles.header_step0
        }, _react.default.createElement(_reactNative.View, {
          style: styles.progressTextContent
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.progressTitle
        }, this.state.percent), _react.default.createElement(_reactNative.Text, {
          style: styles.p
        }, "%")), _react.default.createElement(_reactNative.Text, {
          style: styles.progressText
        }, this.state.isOptimizing ? OPTIMIZING_PROGRESS_TEXT[this.state.progressIndex] : CHANNEL_PROGRESS_TEXT[this.state.progressIndex])), this.state.step === 1 && _react.default.createElement(_reactNative.View, {
          style: styles.header_step1
        }, _react.default.createElement(_reactNative.View, {
          style: styles.optimizationContent
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.progressTitle
        }, this.state.needOptimizationCount), _react.default.createElement(_reactNative.Text, {
          style: styles.p1
        }, "\u9879")), _react.default.createElement(_reactNative.Text, {
          style: styles.progressText
        }, "\u5EFA\u8BAE\u4F18\u5316")), this.state.step === 2 && _react.default.createElement(_reactNative.View, {
          style: styles.header_step1
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.iconSucc,
          source: _$$_REQUIRE(_dependencyMap[18])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.progressText
        }, this.state.step2Title), _react.default.createElement(_reactNative.Text, {
          style: styles.progressText2
        }, this.state.step2SubTitle)), _react.default.createElement(_reactNative.FlatList, {
          data: this.state.checkList,
          renderItem: this._renderItem,
          onEndReachedThreshold: 0.5,
          keyExtractor: function keyExtractor(item, index) {
            return index.toString();
          }
        }), this.state.isShowCheckBtn && _react.default.createElement(_reactNative.View, {
          style: styles.addWrap
        }, _react.default.createElement(_reactNativeUiKitten.RkButton, {
          rkType: "rounded",
          onPress: function onPress(_) {
            return _this5.props.navigation.goBack();
          },
          style: styles.viewRkButton
        }, "\u53D6\u6D88\u68C0\u6D4B")), this.state.step === 1 && this.state.onlyOneCheck && _react.default.createElement(_reactNative.View, {
          style: styles.addWrap
        }, _react.default.createElement(_reactNativeUiKitten.RkButton, {
          rkType: "rounded",
          onPress: this.optimizationHandler,
          disabled: this.state.confirmDisabled,
          style: styles.viewRkButton
        }, "\u5F00\u59CB\u4F18\u5316")));
      }
    }]);
    return NetworkOptimizeTool;
  }(_react.default.Component);

  exports.default = NetworkOptimizeTool;

  NetworkOptimizeTool.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        style: {
          backgroundColor: '#fff'
        },
        title: navigation.state.params.title,
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      flex: 1
    },
    icon: {
      width: 100,
      height: 100
    },
    icon_remind: {
      width: 16,
      height: 13.6
    },
    viewRkButton: {
      width: _Devices.ScreenW / 10 * 9
    },
    listCont: {
      flex: 1
    },
    list: {
      position: 'absolute',
      top: 0,
      bottom: 60
    },
    header_step0: {
      flexDirection: 'column',
      backgroundColor: '#2358FE',
      alignItems: 'flex-start',
      borderRadius: 10,
      margin: 15,
      height: 200,
      padding: 20
    },
    header_step1: {
      flexDirection: 'column',
      backgroundColor: '#2358FE',
      alignItems: 'center',
      justifyContent: 'center',
      borderRadius: 10,
      margin: 15,
      height: 200
    },
    optimizationContent: {
      flexDirection: 'row',
      alignItems: 'flex-start'
    },
    optimizationTitle: {},
    button_text: {
      fontSize: 16,
      color: '#fff'
    },
    addWrap: {
      position: 'absolute',
      alignItems: 'center',
      bottom: 10,
      left: 6,
      right: 6
    },
    addcont: {
      alignItems: 'center',
      justifyContent: 'center',
      height: 60
    },
    separator: {
      backgroundColor: '#000',
      marginTop: 20
    },
    button: {
      alignItems: "center",
      justifyContent: "center",
      height: 44,
      marginBottom: 10,
      width: _Devices.ScreenW * 0.9,
      borderRadius: 22,
      backgroundColor: '#2358FE'
    },
    progressTextContent: {
      flexDirection: 'row',
      alignItems: 'flex-end'
    },
    progressTitle: {
      color: '#fff',
      fontSize: 60
    },
    p: {
      paddingBottom: 10,
      fontSize: 22,
      color: '#fff'
    },
    p1: {
      paddingTop: 10,
      fontSize: 22,
      color: '#fff'
    },
    item: {
      backgroundColor: '#fff',
      padding: 5
    },
    itemHeaderParents: {
      paddingLeft: 15,
      paddingRight: 15,
      height: 60,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-between'
    },
    itemHeader: {
      height: 60,
      flexDirection: 'row',
      alignItems: 'center'
    },
    deviceNameTextMax: {
      width: _Devices.ScreenW * 0.70,
      alignSelf: 'center',
      fontSize: 16,
      fontWeight: 'bold',
      color: '#333333'
    },
    deviceContent: {
      justifyContent: 'center',
      height: 70
    },
    deviceContentRowTopView: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    deviceContentRowParentView: {
      flexDirection: 'row'
    },
    deviceContentColumView: {
      flexDirection: 'column',
      alignItems: 'flex-start'
    },
    deviceConnectTypeText: {
      width: _Devices.ScreenW * 0.70,
      fontSize: 13,
      color: '#7F7F7F',
      marginTop: 2
    },
    progressText: {
      fontSize: 14,
      color: '#fff'
    },
    progressText2: {
      fontSize: 12,
      color: '#fff'
    },
    iconSucc: {
      width: 80,
      height: 80,
      resizeMode: 'contain',
      marginBottom: 10
    }
  });
},10445,[14305,14674,14320,14323,14371,14377,14386,10284,10297,10033,10067,10935,10074,10064,10040,10055,10448,11251,10169]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var LoadingImage = function (_React$Component) {
    (0, _inherits2.default)(LoadingImage, _React$Component);

    function LoadingImage(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LoadingImage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LoadingImage).call(this, props, context));
      _this.state = {
        rotation: new _reactNative.Animated.Value(0)
      };
      return _this;
    }

    (0, _createClass2.default)(LoadingImage, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.startAnimation();
      }
    }, {
      key: "startAnimation",
      value: function startAnimation() {
        var _this2 = this;

        this.state.rotation.setValue(0);

        _reactNative.Animated.timing(this.state.rotation, {
          toValue: 1,
          duration: 5000,
          easing: _reactNative.Easing.linear
        }).start(function () {
          return _this2.startAnimation();
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var image_uri = _$$_REQUIRE(_dependencyMap[12]);

        var done_image_uri = _$$_REQUIRE(_dependencyMap[13]);

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, this.props.value.status === 0 && _react.default.createElement(_reactNative.Text, null, "\u7B49\u5F85\u68C0\u6D4B"), this.props.value.status === 1 && _react.default.createElement(_reactNative.Animated.Image, {
          source: image_uri,
          style: [styles.circle, {
            transform: [{
              rotateZ: this.state.rotation.interpolate({
                inputRange: [0, 1],
                outputRange: ['0deg', '360deg']
              })
            }]
          }]
        }), this.props.value.status === 2 && _react.default.createElement(_reactNative.Image, {
          source: done_image_uri,
          style: styles.circle
        }), this.props.value.status === 3 && _react.default.createElement(_reactNative.View, {
          style: styles.checkboxContainer
        }, _react.default.createElement(_reactNative.Text, null, this.props.value.result.tips), _react.default.createElement(_Checkbox.default, {
          style: {
            width: 20,
            height: 20,
            borderRadius: 10,
            marginLeft: 5
          },
          checked: this.props.value.checked,
          checkedColor: 'skyblue',
          onValueChange: function onValueChange(checked) {
            return _this3.props.callback(_this3.props.value.id, checked);
          }
        })), this.props.value.status === 6 && _react.default.createElement(_reactNative.Text, null, "\u7B49\u5F85\u4F18\u5316"));
      }
    }]);
    return LoadingImage;
  }(_react.default.Component);

  exports.default = LoadingImage;
  LoadingImage.propTypes = {
    source: _propTypes.default.string.isRequired
  };
  LoadingImage.defaultProps = {
    source: ''
  };

  var styles = _reactNative.StyleSheet.create({
    container: {},
    circle: {
      position: 'absolute',
      width: 20,
      height: 20,
      right: 10
    },
    checkboxContainer: {
      flexDirection: 'row',
      justifyContent: 'flex-end',
      alignItems: 'center'
    }
  });
},10448,[14308,14305,14320,14323,14371,14377,14386,10318,10297,10033,10040,10386,10451,10454]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 63,
    "height": 63,
    "scales": [1],
    "hash": "b5c2be543367c8da5cc3a4960d5ca075",
    "name": "mesh_extend_process_loading",
    "type": "png"
  });
},10451,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 63,
    "height": 63,
    "scales": [1],
    "hash": "ad94bcadfa8b7a238a8e502599dfdcc4",
    "name": "mesh_extend_process_done",
    "type": "png"
  });
},10454,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  var factory = _$$_REQUIRE(_dependencyMap[1]);

  if (typeof React === 'undefined') {
    throw Error("create-react-class could not find the React object. If you are using script tags, make sure that React is being loaded before create-react-class.");
  }

  var ReactNoopUpdateQueue = new React.Component().updater;
  module.exports = factory(React.Component, React.isValidElement, ReactNoopUpdateQueue);
},10456,[10297,10459]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _miot = _$$_REQUIRE(_dependencyMap[7]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[11]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _Devices = _$$_REQUIRE(_dependencyMap[13]);

  var GeneralSettings = function (_React$Component) {
    (0, _inherits2.default)(GeneralSettings, _React$Component);

    function GeneralSettings(props) {
      var _this;

      (0, _classCallCheck2.default)(this, GeneralSettings);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(GeneralSettings).call(this, props));
      var ds = new _reactNative.ListView.DataSource({
        rowHasChanged: function rowHasChanged(r1, r2) {
          return r1 !== r2;
        }
      });
      _this.state = {
        dataSource: ds.cloneWithRows([{
          name: '位置管理',
          router: 'LocationManage'
        }, {
          name: '设备共享',
          router: 'DeviceShare'
        }, {
          name: '固件升级',
          router: 'FirmwareUpdate'
        }, {
          name: '更多设置',
          router: 'MoreSettings'
        }, {
          name: '使用帮助',
          router: 'UsingHelp'
        }, {
          name: '法律信息',
          router: 'LawInfo'
        }]),
        visible1: false,
        visible2: false,
        deviceName: 'XiaomiRouter',
        deleteText: '删除设备后，设备将从子列表中移除'
      };
      return _this;
    }

    (0, _createClass2.default)(GeneralSettings, [{
      key: "_onDelete",
      value: function _onDelete() {
        this.setState({
          visible1: false
        });
      }
    }, {
      key: "_modifyRouterName",
      value: function _modifyRouterName(name) {
        if (this.state.deviceName == name) {
          return;
        }

        this.setState({
          visible2: false,
          deviceName: name
        });
      }
    }, {
      key: "_getListData",
      value: function _getListData() {}
    }, {
      key: "componentWillMount",
      value: function componentWillMount() {
        this._getListData();
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.subtitle
        }, _react.default.createElement(_reactNative.Text, null, "\u901A\u7528\u8BBE\u7F6E")), _react.default.createElement(_Separator.default, {
          style: styles.separator2
        }), _react.default.createElement(_ListItem.default, {
          title: "\u8BBE\u5907\u540D\u79F0",
          value: this.state.deviceName,
          hideArrow: false,
          style: styles.name,
          onPress: function onPress(_) {
            _this2.setState({
              visible2: true
            });
          }
        }), _react.default.createElement(_ListItem.default, {
          title: "\u901A\u75281",
          hideArrow: false,
          style: styles.name,
          onPress: function onPress(_) {
            _miot.Host.ui.openRoomManagementPage();
          }
        }), _react.default.createElement(_ListItem.default, {
          title: "\u901A\u75282",
          hideArrow: false,
          style: styles.name,
          onPress: function onPress(_) {
            _miot.Host.ui.openShareDevicePage();
          }
        }), _react.default.createElement(_reactNative.ListView, {
          style: styles.list,
          dataSource: this.state.dataSource,
          renderRow: this._renderRow.bind(this)
        }), _react.default.createElement(_reactNative.TouchableHighlight, {
          underlayColor: "transparent",
          onPress: function onPress(_) {
            return _this2.setState({
              visible1: true
            });
          },
          style: styles.buttonWrapper
        }, _react.default.createElement(_reactNative.View, {
          style: styles.button
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.deleteText
        }, "\u5220\u9664\u8BBE\u5907"))), _react.default.createElement(_Dialog.MessageDialog, {
          visible: this.state.visible1,
          message: this.state.deleteText,
          buttons: [{
            text: '取消',
            style: {
              color: '#666666'
            },
            callback: function callback(_) {
              return _this2.setState({
                visible1: false
              });
            }
          }, {
            text: '确定',
            style: {
              color: '#2C7DFA'
            },
            callback: function callback(_) {
              _this2._onDelete();
            }
          }],
          onDismiss: function onDismiss(_) {
            return _this2.setState({
              visible1: false
            });
          }
        }), _react.default.createElement(_Dialog.InputDialog, {
          visible: this.state.visible2,
          title: "\u8BBE\u5907\u540D\u79F0",
          inputs: [{
            placeholder: '请输入设备名称',
            defaultValue: this.state.deviceName,
            textInputProps: {
              autoFocus: true
            }
          }],
          buttons: [{
            text: '取消',
            style: {
              color: '#666666'
            },
            callback: function callback(_) {
              return _this2.setState({
                visible2: false
              });
            }
          }, {
            text: '确认',
            style: {
              color: '#2C7DFA'
            },
            callback: function callback(result) {
              _this2._modifyRouterName(result.textInputArray[0]);
            }
          }],
          onDismiss: function onDismiss(_) {
            return _this2.setState({
              visible2: false
            });
          }
        }));
      }
    }, {
      key: "_renderRow",
      value: function _renderRow(rowData, sectionID, rowID) {
        var _this3 = this;

        return _react.default.createElement(_reactNative.TouchableHighlight, {
          underlayColor: "transparent",
          onPress: function onPress() {
            _this3.props.navigation.navigate(rowData.router);
          }
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: styles.rowContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, rowData.name), _react.default.createElement(_reactNative.Image, {
          style: styles.subArrow,
          source: _$$_REQUIRE(_dependencyMap[14])
        })), _react.default.createElement(_reactNative.View, {
          style: styles.separator
        })));
      }
    }]);
    return GeneralSettings;
  }(_react.default.Component);

  exports.default = GeneralSettings;

  GeneralSettings.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: '设置',
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      })
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      borderTopColor: '#f1f1f1',
      borderTopWidth: 1,
      flexDirection: 'column',
      justifyContent: 'center',
      alignItems: 'center',
      backgroundColor: '#ffffff'
    },
    subtitle: {
      padding: 10,
      width: _Devices.ScreenW,
      paddingLeft: 23
    },
    name: {
      height: 52,
      fontSize: 15,
      color: '#333333'
    },
    list: {
      alignSelf: 'stretch',
      flex: 1
    },
    button: {
      alignItems: "center",
      justifyContent: "center",
      height: 44,
      marginBottom: 20,
      width: _Devices.ScreenW * 0.9,
      borderRadius: 22,
      borderWidth: 1,
      borderColor: '#FF3D3D'
    },
    deleteText: {
      color: '#FF3D3D'
    },
    rowContainer: {
      height: 52,
      alignSelf: 'stretch',
      flexDirection: 'row',
      paddingLeft: 23,
      paddingRight: 23,
      alignItems: 'center',
      flex: 1
    },
    title: {
      fontSize: 15,
      color: '#333333',
      alignItems: 'center',
      flex: 1
    },
    subArrow: {
      width: 7,
      height: 14
    },
    separator: {
      height: 1 / _reactNative.PixelRatio.get(),
      backgroundColor: '#e5e5e5',
      marginLeft: 20
    },
    separator2: {
      width: _Devices.ScreenW,
      marginLeft: 43
    }
  });
},10457,[14305,14320,14323,14371,14377,14386,10297,10074,10332,10284,10329,10755,10033,10067,10220]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _assign = _$$_REQUIRE(_dependencyMap[0]);

  var emptyObject = _$$_REQUIRE(_dependencyMap[1]);

  var _invariant = _$$_REQUIRE(_dependencyMap[2]);

  var MIXINS_KEY = 'mixins';

  function identity(fn) {
    return fn;
  }

  var ReactPropTypeLocationNames;
  {
    ReactPropTypeLocationNames = {};
  }

  function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
    var injectedMixins = [];
    var ReactClassInterface = {
      mixins: 'DEFINE_MANY',
      statics: 'DEFINE_MANY',
      propTypes: 'DEFINE_MANY',
      contextTypes: 'DEFINE_MANY',
      childContextTypes: 'DEFINE_MANY',
      getDefaultProps: 'DEFINE_MANY_MERGED',
      getInitialState: 'DEFINE_MANY_MERGED',
      getChildContext: 'DEFINE_MANY_MERGED',
      render: 'DEFINE_ONCE',
      componentWillMount: 'DEFINE_MANY',
      componentDidMount: 'DEFINE_MANY',
      componentWillReceiveProps: 'DEFINE_MANY',
      shouldComponentUpdate: 'DEFINE_ONCE',
      componentWillUpdate: 'DEFINE_MANY',
      componentDidUpdate: 'DEFINE_MANY',
      componentWillUnmount: 'DEFINE_MANY',
      UNSAFE_componentWillMount: 'DEFINE_MANY',
      UNSAFE_componentWillReceiveProps: 'DEFINE_MANY',
      UNSAFE_componentWillUpdate: 'DEFINE_MANY',
      updateComponent: 'OVERRIDE_BASE'
    };
    var ReactClassStaticInterface = {
      getDerivedStateFromProps: 'DEFINE_MANY_MERGED'
    };
    var RESERVED_SPEC_KEYS = {
      displayName: function displayName(Constructor, _displayName) {
        Constructor.displayName = _displayName;
      },
      mixins: function mixins(Constructor, _mixins) {
        if (_mixins) {
          for (var i = 0; i < _mixins.length; i++) {
            mixSpecIntoComponent(Constructor, _mixins[i]);
          }
        }
      },
      childContextTypes: function childContextTypes(Constructor, _childContextTypes) {
        Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, _childContextTypes);
      },
      contextTypes: function contextTypes(Constructor, _contextTypes) {
        Constructor.contextTypes = _assign({}, Constructor.contextTypes, _contextTypes);
      },
      getDefaultProps: function getDefaultProps(Constructor, _getDefaultProps) {
        if (Constructor.getDefaultProps) {
          Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, _getDefaultProps);
        } else {
          Constructor.getDefaultProps = _getDefaultProps;
        }
      },
      propTypes: function propTypes(Constructor, _propTypes) {
        Constructor.propTypes = _assign({}, Constructor.propTypes, _propTypes);
      },
      statics: function statics(Constructor, _statics) {
        mixStaticSpecIntoComponent(Constructor, _statics);
      },
      autobind: function autobind() {}
    };

    function validateTypeDef(Constructor, typeDef, location) {
      for (var propName in typeDef) {
        if (typeDef.hasOwnProperty(propName)) {}
      }
    }

    function validateMethodOverride(isAlreadyDefined, name) {
      var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

      if (ReactClassMixin.hasOwnProperty(name)) {
        _invariant(specPolicy === 'OVERRIDE_BASE', "ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.", name);
      }

      if (isAlreadyDefined) {
        _invariant(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED', "ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.", name);
      }
    }

    function mixSpecIntoComponent(Constructor, spec) {
      if (!spec) {
        return;
      }

      _invariant(typeof spec !== 'function', "ReactClass: You're attempting to use a component class or function as a mixin. Instead, just use a regular object.");

      _invariant(!isValidElement(spec), "ReactClass: You're attempting to use a component as a mixin. Instead, just use a regular object.");

      var proto = Constructor.prototype;
      var autoBindPairs = proto.__reactAutoBindPairs;

      if (spec.hasOwnProperty(MIXINS_KEY)) {
        RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
      }

      for (var name in spec) {
        if (!spec.hasOwnProperty(name)) {
          continue;
        }

        if (name === MIXINS_KEY) {
          continue;
        }

        var property = spec[name];
        var isAlreadyDefined = proto.hasOwnProperty(name);
        validateMethodOverride(isAlreadyDefined, name);

        if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
          RESERVED_SPEC_KEYS[name](Constructor, property);
        } else {
          var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
          var isFunction = typeof property === 'function';
          var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

          if (shouldAutoBind) {
            autoBindPairs.push(name, property);
            proto[name] = property;
          } else {
            if (isAlreadyDefined) {
              var specPolicy = ReactClassInterface[name];

              _invariant(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY'), "ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.", specPolicy, name);

              if (specPolicy === 'DEFINE_MANY_MERGED') {
                proto[name] = createMergedResultFunction(proto[name], property);
              } else if (specPolicy === 'DEFINE_MANY') {
                proto[name] = createChainedFunction(proto[name], property);
              }
            } else {
              proto[name] = property;
            }
          }
        }
      }
    }

    function mixStaticSpecIntoComponent(Constructor, statics) {
      if (!statics) {
        return;
      }

      for (var name in statics) {
        var property = statics[name];

        if (!statics.hasOwnProperty(name)) {
          continue;
        }

        var isReserved = name in RESERVED_SPEC_KEYS;

        _invariant(!isReserved, "ReactClass: You are attempting to define a reserved property, `%s`, that shouldn't be on the \"statics\" key. Define it as an instance property instead; it will still be accessible on the constructor.", name);

        var isAlreadyDefined = name in Constructor;

        if (isAlreadyDefined) {
          var specPolicy = ReactClassStaticInterface.hasOwnProperty(name) ? ReactClassStaticInterface[name] : null;

          _invariant(specPolicy === 'DEFINE_MANY_MERGED', "ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.", name);

          Constructor[name] = createMergedResultFunction(Constructor[name], property);
          return;
        }

        Constructor[name] = property;
      }
    }

    function mergeIntoWithNoDuplicateKeys(one, two) {
      _invariant(one && two && typeof one === 'object' && typeof two === 'object', 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');

      for (var key in two) {
        if (two.hasOwnProperty(key)) {
          _invariant(one[key] === undefined, "mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.", key);

          one[key] = two[key];
        }
      }

      return one;
    }

    function createMergedResultFunction(one, two) {
      return function mergedResult() {
        var a = one.apply(this, arguments);
        var b = two.apply(this, arguments);

        if (a == null) {
          return b;
        } else if (b == null) {
          return a;
        }

        var c = {};
        mergeIntoWithNoDuplicateKeys(c, a);
        mergeIntoWithNoDuplicateKeys(c, b);
        return c;
      };
    }

    function createChainedFunction(one, two) {
      return function chainedFunction() {
        one.apply(this, arguments);
        two.apply(this, arguments);
      };
    }

    function bindAutoBindMethod(component, method) {
      var boundMethod = method.bind(component);
      return boundMethod;
    }

    function bindAutoBindMethods(component) {
      var pairs = component.__reactAutoBindPairs;

      for (var i = 0; i < pairs.length; i += 2) {
        var autoBindKey = pairs[i];
        var method = pairs[i + 1];
        component[autoBindKey] = bindAutoBindMethod(component, method);
      }
    }

    var IsMountedPreMixin = {
      componentDidMount: function componentDidMount() {
        this.__isMounted = true;
      }
    };
    var IsMountedPostMixin = {
      componentWillUnmount: function componentWillUnmount() {
        this.__isMounted = false;
      }
    };
    var ReactClassMixin = {
      replaceState: function replaceState(newState, callback) {
        this.updater.enqueueReplaceState(this, newState, callback);
      },
      isMounted: function isMounted() {
        return !!this.__isMounted;
      }
    };

    var ReactClassComponent = function ReactClassComponent() {};

    _assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

    function createClass(spec) {
      var Constructor = identity(function (props, context, updater) {
        if (this.__reactAutoBindPairs.length) {
          bindAutoBindMethods(this);
        }

        this.props = props;
        this.context = context;
        this.refs = emptyObject;
        this.updater = updater || ReactNoopUpdateQueue;
        this.state = null;
        var initialState = this.getInitialState ? this.getInitialState() : null;

        _invariant(typeof initialState === 'object' && !Array.isArray(initialState), '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent');

        this.state = initialState;
      });
      Constructor.prototype = new ReactClassComponent();
      Constructor.prototype.constructor = Constructor;
      Constructor.prototype.__reactAutoBindPairs = [];
      injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
      mixSpecIntoComponent(Constructor, IsMountedPreMixin);
      mixSpecIntoComponent(Constructor, spec);
      mixSpecIntoComponent(Constructor, IsMountedPostMixin);

      if (Constructor.getDefaultProps) {
        Constructor.defaultProps = Constructor.getDefaultProps();
      }

      _invariant(Constructor.prototype.render, 'createClass(...): Class specification must implement a `render` method.');

      for (var methodName in ReactClassInterface) {
        if (!Constructor.prototype[methodName]) {
          Constructor.prototype[methodName] = null;
        }
      }

      return Constructor;
    }

    return createClass;
  }

  module.exports = factory;
},10459,[10303,10306,10036]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "DeviceName", {
    enumerable: true,
    get: function get() {
      return _DeviceName.default;
    }
  });
  Object.defineProperty(exports, "DeviceShare", {
    enumerable: true,
    get: function get() {
      return _DeviceShare.default;
    }
  });
  Object.defineProperty(exports, "LocationManage", {
    enumerable: true,
    get: function get() {
      return _LocationManage.default;
    }
  });
  Object.defineProperty(exports, "FirmwareUpdate", {
    enumerable: true,
    get: function get() {
      return _FirmwareUpdate.default;
    }
  });
  Object.defineProperty(exports, "UsingHelp", {
    enumerable: true,
    get: function get() {
      return _UsingHelp.default;
    }
  });
  Object.defineProperty(exports, "LawInfo", {
    enumerable: true,
    get: function get() {
      return _LawInfo.default;
    }
  });
  Object.defineProperty(exports, "SafeCenter", {
    enumerable: true,
    get: function get() {
      return _SafeCenter.default;
    }
  });
  Object.defineProperty(exports, "SafeDetail", {
    enumerable: true,
    get: function get() {
      return _SafeDetail.default;
    }
  });
  Object.defineProperty(exports, "MoreSettings", {
    enumerable: true,
    get: function get() {
      return _MoreSettings.default;
    }
  });
  Object.defineProperty(exports, "Setting", {
    enumerable: true,
    get: function get() {
      return _test.default;
    }
  });
  Object.defineProperty(exports, "Feedback", {
    enumerable: true,
    get: function get() {
      return _Feedback.default;
    }
  });
  Object.defineProperty(exports, "ProblemType", {
    enumerable: true,
    get: function get() {
      return _ProblemType.default;
    }
  });
  Object.defineProperty(exports, "SelectProblem", {
    enumerable: true,
    get: function get() {
      return _SelectProblem.default;
    }
  });
  Object.defineProperty(exports, "ZoneList", {
    enumerable: true,
    get: function get() {
      return _ZoneList.default;
    }
  });
  Object.defineProperty(exports, "TimeZone", {
    enumerable: true,
    get: function get() {
      return _TimeZone.default;
    }
  });

  var _DeviceName = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _DeviceShare = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _LocationManage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _FirmwareUpdate = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _UsingHelp = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _LawInfo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _SafeCenter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _SafeDetail = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _MoreSettings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _test = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Feedback = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _ProblemType = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _SelectProblem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _ZoneList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _TimeZone = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));
},10460,[14305,10463,10466,10475,10514,10517,10520,10523,10583,10592,10595,10598,10610,10613,10619,10622]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _ListItemWithSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var DeviceName = function (_React$Component) {
    (0, _inherits2.default)(DeviceName, _React$Component);

    function DeviceName(props) {
      var _this;

      (0, _classCallCheck2.default)(this, DeviceName);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DeviceName).call(this, props));
      _this.state = {
        name: '小米净水器'
      };
      return _this;
    }

    (0, _createClass2.default)(DeviceName, [{
      key: "_onChangeText",
      value: function _onChangeText(text) {
        this.setState({
          name: text
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
          style: styles.rowContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.name
        }, "\u540D\u79F0"), _react.default.createElement(_reactNative.TextInput, {
          style: {
            flex: 1
          },
          underlineColorAndroid: "transparent",
          value: this.state.name,
          placeholder: '请输入名称',
          onChangeText: function onChangeText(text) {
            return _this2._onChangeText(text);
          }
        })), _react.default.createElement(_Separator.default, null));
      }
    }]);
    return DeviceName;
  }(_react.default.Component);

  exports.default = DeviceName;

  DeviceName.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: '设备名称',
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#ffffff'
    },
    rowContainer: {
      height: 52,
      alignSelf: 'stretch',
      flexDirection: 'row',
      marginLeft: 23,
      paddingRight: 23,
      alignItems: 'center'
    },
    name: {
      fontSize: 14
    }
  });
},10463,[14305,14320,14323,14371,14377,14386,10297,10284,10332,10329,10344,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[10]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var DeviceShare = function (_React$Component) {
    (0, _inherits2.default)(DeviceShare, _React$Component);

    function DeviceShare(props) {
      var _this;

      (0, _classCallCheck2.default)(this, DeviceShare);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DeviceShare).call(this, props));
      _this.state = {
        dataSource: new _reactNative.ListView.DataSource({
          rowHasChanged: function rowHasChanged(r1, r2) {
            return r1 !== r2;
          }
        }),
        visible1: false,
        visible2: false,
        member: {
          account: '1234567',
          name: '潘潘'
        },
        shareList: [{
          name: '小鱼',
          time: '2019-10-14',
          count: '12345676'
        }, {
          name: '晓晓',
          time: '2019-10-14',
          count: '12345676'
        }]
      };
      return _this;
    }

    (0, _createClass2.default)(DeviceShare, [{
      key: "_refreshData",
      value: function _refreshData() {
        this.setState({
          dataSource: this.state.dataSource.cloneWithRows(this.state.shareList)
        });
      }
    }, {
      key: "_getListData",
      value: function _getListData() {}
    }, {
      key: "_addMember",
      value: function _addMember(account) {
        if (!account) {
          alert('账号不能为空');
          return;
        }

        this.setState({
          visible1: false,
          visible2: true
        });
      }
    }, {
      key: "_deleteMember",
      value: function _deleteMember(account) {}
    }, {
      key: "componentWillMount",
      value: function componentWillMount() {
        this._getListData();

        this._refreshData();
      }
    }, {
      key: "_renderRow",
      value: function _renderRow(rowData, sectionID, rowID) {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: styles.rowContainer
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.avater,
          source: _$$_REQUIRE(_dependencyMap[12])
        }), _react.default.createElement(_reactNative.View, {
          style: styles.info
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: 16
          }
        }, rowData.name), _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: 12
          }
        }, rowData.time)), _react.default.createElement(_reactNativeUiKitten.RkButton, {
          rkType: "rounded",
          disabled: false,
          color: "#000000",
          onPress: function onPress() {
            _this2._deleteMember(rowData);
          },
          style: styles.viewRkButton
        }, "\u5220\u9664")), _react.default.createElement(_Separator.default, null));
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
          style: styles.list
        }, _react.default.createElement(_reactNative.ListView, {
          dataSource: this.state.dataSource,
          renderRow: this._renderRow.bind(this)
        })), _react.default.createElement(_reactNative.View, {
          style: styles.addWrap
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.TouchableHighlight, {
          underlayColor: "transparent",
          onPress: function onPress(_) {
            _this3.setState({
              visible1: true
            });
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.addcont
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            width: 25,
            height: 25,
            margin: 10
          },
          resizeMode: "contain",
          source: _$$_REQUIRE(_dependencyMap[13])
        }), _react.default.createElement(_reactNative.Text, null, "\u6DFB\u52A0")))), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.visible2,
          title: "\u8BBE\u5907\u5206\u4EAB",
          onDismiss: function onDismiss(_) {},
          buttons: [{
            text: '立即分享',
            style: {
              color: '#000'
            },
            callback: function callback(_) {
              return _this3.setState({
                visible2: false
              });
            }
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            height: 200,
            alignItems: 'center',
            justifyContent: 'center',
            borderBottomWidth: 1 / _reactNative.PixelRatio.get(),
            borderTopWidth: 1 / _reactNative.PixelRatio.get(),
            borderColor: '#e5e5e5'
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            width: 70,
            height: 70,
            marginBottom: 10
          },
          resizeMode: "contain",
          source: _$$_REQUIRE(_dependencyMap[12])
        }), _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: 16,
            color: '#000000'
          }
        }, this.state.member.name), _react.default.createElement(_reactNative.Text, null, "\u5173\u8054\u5C0F\u7C73\u8D26\u53F7\uFF1A", this.state.member.account), _react.default.createElement(_reactNative.Text, {
          style: {
            marginTop: 20
          }
        }, "\u5206\u4EAB\u540E\uFF0C\u8BF7TA\u4F7F\u7528\u8DEF\u7531\u5668\u5BA2\u6237\u7AEF\u767B\u5F55\u5E76\u63A5\u53D7\u9080\u8BF7"))), _react.default.createElement(_Dialog.InputDialog, {
          visible: this.state.visible1,
          title: "\u8F93\u5165\u5C0F\u7C73\u8D26\u53F7",
          inputs: [{
            placeholder: '邮箱/手机账号/小米账号',
            textInputProps: {
              autoFocus: true
            }
          }],
          buttons: [{
            text: '取消',
            style: {
              color: '#666666'
            },
            callback: function callback(_) {
              return _this3.setState({
                visible1: false
              });
            }
          }, {
            text: '确定',
            style: {
              color: '#2C7DFA'
            },
            callback: function callback(result) {
              _this3._addMember(result.textInputArray[0]);
            }
          }],
          onDismiss: function onDismiss(_) {}
        }));
      }
    }]);
    return DeviceShare;
  }(_react.default.Component);

  exports.default = DeviceShare;

  DeviceShare.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: '设备共享',
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#ffffff'
    },
    avater: {
      width: 40,
      height: 40
    },
    addWrap: {
      position: 'absolute',
      bottom: 10,
      left: 0,
      right: 0
    },
    addcont: {
      alignItems: 'center',
      justifyContent: 'center'
    },
    rowContainer: {
      height: 52,
      alignSelf: 'stretch',
      flexDirection: 'row',
      paddingLeft: 23,
      paddingRight: 23,
      alignItems: 'center',
      flex: 1
    },
    info: {
      flex: 1,
      marginLeft: 10
    },
    viewRkButton: {
      width: 60,
      height: 30
    }
  });
},10466,[14305,14320,14323,14371,14377,14386,10297,10284,10332,10755,11251,10033,10469,10472]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
    "width": 86,
    "height": 86,
    "scales": [1],
    "hash": "72bcf251a5e2d7b0e74c85fe1fbf8842",
    "name": "avater",
    "type": "png"
  });
},10469,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
    "width": 17,
    "height": 17,
    "scales": [1],
    "hash": "43bb07c3a75cd39ce5438ede2f91a197",
    "name": "addTo",
    "type": "png"
  });
},10472,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _InputDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[10]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _Devices = _$$_REQUIRE(_dependencyMap[12]);

  var LocationManage = function (_React$Component) {
    (0, _inherits2.default)(LocationManage, _React$Component);

    function LocationManage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LocationManage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LocationManage).call(this, props));
      _this.state = {
        dataSource: new _reactNative.ListView.DataSource({
          rowHasChanged: function rowHasChanged(r1, r2) {
            return r1 !== r2;
          }
        }),
        visible1: false,
        selected: 0,
        locationList: [{
          imgSrc: _$$_REQUIRE(_dependencyMap[13]),
          name: '客厅',
          select: true
        }, {
          imgSrc: _$$_REQUIRE(_dependencyMap[14]),
          name: '主卧',
          select: false
        }, {
          imgSrc: _$$_REQUIRE(_dependencyMap[14]),
          name: '次卧',
          select: false
        }, {
          imgSrc: _$$_REQUIRE(_dependencyMap[15]),
          name: '客房',
          select: false
        }, {
          imgSrc: _$$_REQUIRE(_dependencyMap[16]),
          name: '厨房',
          select: false
        }, {
          imgSrc: _$$_REQUIRE(_dependencyMap[17]),
          name: '办公室',
          select: false
        }, {
          imgSrc: _$$_REQUIRE(_dependencyMap[18]),
          name: '书房',
          select: false
        }, {
          imgSrc: _$$_REQUIRE(_dependencyMap[19]),
          name: '卫生间',
          select: false
        }, {
          imgSrc: _$$_REQUIRE(_dependencyMap[20]),
          name: '阁楼'
        }, {
          imgSrc: _$$_REQUIRE(_dependencyMap[21]),
          name: '阳台',
          select: false
        }, {
          imgSrc: _$$_REQUIRE(_dependencyMap[22]),
          name: '餐厅',
          select: false
        }, {
          imgSrc: _$$_REQUIRE(_dependencyMap[23]),
          name: '添加'
        }]
      };
      return _this;
    }

    (0, _createClass2.default)(LocationManage, [{
      key: "_onSelectChange",
      value: function _onSelectChange(rowID) {
        var _this2 = this;

        if (rowID == this.state.locationList.length - 1) {
          this.setState({
            visible1: true
          });
        } else {
          var newList = JSON.parse(JSON.stringify(this.state.locationList));
          newList[rowID]['select'] = true;
          newList[this.state.selected]['select'] = false;
          this.setState({
            selected: rowID,
            locationList: newList
          }, function () {
            _this2._cloneData();
          });
        }
      }
    }, {
      key: "_cloneData",
      value: function _cloneData() {
        this.setState({
          dataSource: this.state.dataSource.cloneWithRows(this.state.locationList)
        });
      }
    }, {
      key: "_addSubmit",
      value: function _addSubmit(result) {
        var _this3 = this;

        var locate = result.textInputArray[0];

        if (!locate) {
          alert('自定义位置不能为空');
          return;
        }

        var newList = JSON.parse(JSON.stringify(this.state.locationList));
        var i = newList.length;
        newList[i] = newList[i - 1];
        newList[i - 1] = {
          imgSrc: _$$_REQUIRE(_dependencyMap[13]),
          name: locate,
          select: false
        };
        this.setState({
          visible1: false,
          locationList: newList
        }, function () {
          _this3._cloneData();
        });
      }
    }, {
      key: "componentWillMount",
      value: function componentWillMount() {
        this._cloneData();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }, {
      key: "_renderRow",
      value: function _renderRow(rowData, sectionID, rowID) {
        var _this4 = this;

        var v = rowData.select ? _react.default.createElement(_reactNative.Image, {
          style: styles.selected,
          resizeMode: "contain",
          source: _$$_REQUIRE(_dependencyMap[24])
        }) : null;
        return _react.default.createElement(_reactNative.TouchableHighlight, {
          underlayColor: "transparent",
          onPress: function onPress(_) {
            _this4._onSelectChange(rowID);
          },
          style: styles.sub
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Image, {
          style: styles.ig,
          resizeMode: "contain",
          source: rowData.imgSrc
        }), v, _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, rowData.name)));
      }
    }, {
      key: "render",
      value: function render() {
        var _this5 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.ListView, {
          contentContainerStyle: styles.list,
          initialListSize: 12,
          dataSource: this.state.dataSource,
          renderRow: this._renderRow.bind(this)
        }), _react.default.createElement(_InputDialog.default, {
          visible: this.state.visible1,
          title: "\u8BF7\u8F93\u5165\u4F4D\u7F6E",
          inputs: [{
            placeholder: '请自定义位置名称',
            textInputProps: {
              autoFocus: true
            }
          }],
          buttons: [{
            text: '取消',
            style: {
              color: '#666666'
            },
            callback: function callback(_) {
              return _this5.setState({
                visible1: false
              });
            }
          }, {
            text: '确定',
            style: {
              color: '#2C7DFA'
            },
            callback: function callback(result) {
              _this5._addSubmit(result);
            }
          }],
          onDismiss: function onDismiss(_) {}
        }));
      }
    }]);
    return LocationManage;
  }(_react.default.Component);

  exports.default = LocationManage;

  LocationManage.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: '位置管理',
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#ffffff'
    },
    list: {
      flexDirection: "row",
      flexWrap: "wrap",
      paddingRight: 20
    },
    sub: {
      width: (_Devices.ScreenW - 100) / 4,
      marginLeft: 20
    },
    ig: {
      width: (_Devices.ScreenW - 100) / 4
    },
    selected: {
      position: 'absolute',
      width: 20,
      right: 2,
      bottom: 34
    },
    text: {
      alignSelf: 'center'
    }
  });
},10475,[14305,14320,14323,14371,14377,14386,10297,10284,10332,10737,11251,10033,10067,10478,10481,10484,10487,10490,10493,10496,10499,10502,10505,10508,10511]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "bce8eb8b1f76378c4bc2a050592795c8",
    "name": "location_keting",
    "type": "png"
  });
},10478,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "9d2b209e4d6f4e21fde070d87cd38413",
    "name": "location_zhuwo",
    "type": "png"
  });
},10481,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "04f9de72493d35323fc8ad01d88a275d",
    "name": "location_kefang",
    "type": "png"
  });
},10484,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "3a5af0ba1f481ff74e30d9b223684baa",
    "name": "location_chufang",
    "type": "png"
  });
},10487,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "d22da93846063ece1536310202eb869c",
    "name": "location_bangongshi",
    "type": "png"
  });
},10490,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "8c2a03231f5b0f696ee9784820e46b8b",
    "name": "location_shufang",
    "type": "png"
  });
},10493,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "deacd1230b995ede486e1bece9022477",
    "name": "location_weishengjian",
    "type": "png"
  });
},10496,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "70306858e7e52816643e4ff0c97a9510",
    "name": "location_gelou",
    "type": "png"
  });
},10499,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "05944b6081fb7d4452cca446dcf20f78",
    "name": "location_yangtai",
    "type": "png"
  });
},10502,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "7ded8a35abad76515f473dcf932196c7",
    "name": "location_canting",
    "type": "png"
  });
},10505,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "deeca844b0ad4221c42c209e6f898676",
    "name": "location_add",
    "type": "png"
  });
},10508,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
    "width": 36,
    "height": 36,
    "scales": [1],
    "hash": "080ed2309fde94101747205b8b144415",
    "name": "selected",
    "type": "png"
  });
},10511,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var GLOBAL = typeof window === 'undefined' ? global : window;

  var setter = function setter(_setter, _clearer, array) {
    return function (callback, delta) {
      var id = _setter(function () {
        _clearer.call(this, id);

        callback.apply(this, arguments);
      }.bind(this), delta);

      if (!this[array]) {
        this[array] = [id];
      } else {
        this[array].push(id);
      }

      return id;
    };
  };

  var clearer = function clearer(_clearer, array) {
    return function (id) {
      if (this[array]) {
        var index = this[array].indexOf(id);

        if (index !== -1) {
          this[array].splice(index, 1);
        }
      }

      _clearer(id);
    };
  };

  var _timeouts = 'TimerMixin_timeouts';

  var _clearTimeout = clearer(GLOBAL.clearTimeout, _timeouts);

  var _setTimeout = setter(GLOBAL.setTimeout, _clearTimeout, _timeouts);

  var _intervals = 'TimerMixin_intervals';

  var _clearInterval = clearer(GLOBAL.clearInterval, _intervals);

  var _setInterval = setter(GLOBAL.setInterval, function () {}, _intervals);

  var _immediates = 'TimerMixin_immediates';

  var _clearImmediate = clearer(GLOBAL.clearImmediate, _immediates);

  var _setImmediate = setter(GLOBAL.setImmediate, _clearImmediate, _immediates);

  var _rafs = 'TimerMixin_rafs';

  var _cancelAnimationFrame = clearer(GLOBAL.cancelAnimationFrame, _rafs);

  var _requestAnimationFrame = setter(GLOBAL.requestAnimationFrame, _cancelAnimationFrame, _rafs);

  var TimerMixin = {
    componentWillUnmount: function componentWillUnmount() {
      this[_timeouts] && this[_timeouts].forEach(function (id) {
        GLOBAL.clearTimeout(id);
      });
      this[_timeouts] = null;
      this[_intervals] && this[_intervals].forEach(function (id) {
        GLOBAL.clearInterval(id);
      });
      this[_intervals] = null;
      this[_immediates] && this[_immediates].forEach(function (id) {
        GLOBAL.clearImmediate(id);
      });
      this[_immediates] = null;
      this[_rafs] && this[_rafs].forEach(function (id) {
        GLOBAL.cancelAnimationFrame(id);
      });
      this[_rafs] = null;
    },
    setTimeout: _setTimeout,
    clearTimeout: _clearTimeout,
    setInterval: _setInterval,
    clearInterval: _clearInterval,
    setImmediate: _setImmediate,
    clearImmediate: _clearImmediate,
    requestAnimationFrame: _requestAnimationFrame,
    cancelAnimationFrame: _cancelAnimationFrame
  };
  module.exports = TimerMixin;
},10513,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _MHDatePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _ListItemWithSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var FirmwareUpdate = function (_React$Component) {
    (0, _inherits2.default)(FirmwareUpdate, _React$Component);

    function FirmwareUpdate(props) {
      var _this;

      (0, _classCallCheck2.default)(this, FirmwareUpdate);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(FirmwareUpdate).call(this, props));
      _this.state = {
        visible1: false,
        auto: true,
        timeString: '下午 06:00',
        date: ['18', '00']
      };
      return _this;
    }

    (0, _createClass2.default)(FirmwareUpdate, [{
      key: "_onDateSelectChange",
      value: function _onDateSelectChange(time) {
        this.setState({
          visible1: false,
          timeString: time.rawString,
          date: time.date
        });
      }
    }, {
      key: "componentWillMount",
      value: function componentWillMount() {}
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var v = this.state.auto ? _react.default.createElement(_ListItem.default, {
          title: "\u8BBE\u7F6E\u65F6\u95F4",
          value: this.state.timeString,
          hideArrow: false,
          onPress: function onPress(_) {
            _this2.setState({
              visible1: true
            });
          },
          separator: _react.default.createElement(_Separator.default, null)
        }) : null;
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_ListItemWithSwitch.default, {
          title: "\u8DEF\u7531\u5668\u56FA\u4EF6\u81EA\u52A8\u5347\u7EA7",
          subtitle: "\u53EA\u80FD\u9009\u62E9\u65F6\u95F4\u8FDB\u884C\u81EA\u52A8\u5347\u7EA7",
          subtitleStyle: {
            fontSize: 10,
            color: 'rgba(50,50,50,.5)',
            marginTop: 10
          },
          containerStyle: {
            marginTop: 10
          },
          value: this.state.auto,
          onValueChange: function onValueChange(value) {
            return _this2.setState({
              auto: value
            });
          },
          separator: _react.default.createElement(_Separator.default, null)
        }), v, _react.default.createElement(_MHDatePicker.default, {
          visible: this.state.visible1,
          title: "\u5F00\u59CB\u65F6\u95F4",
          current: this.state.date,
          type: _MHDatePicker.default.TYPE.TIME12,
          onDismiss: function onDismiss(_) {
            _this2.setState({
              visible1: false
            });
          },
          onSelect: function onSelect(res) {
            return _this2._onDateSelectChange(res);
          }
        }));
      }
    }]);
    return FirmwareUpdate;
  }(_react.default.Component);

  exports.default = FirmwareUpdate;

  FirmwareUpdate.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: '固件升级',
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#ffffff'
    }
  });
},10514,[14305,14320,14323,14371,14377,14386,10297,10284,10332,10716,10329,10344,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var UsingHelp = function (_React$Component) {
    (0, _inherits2.default)(UsingHelp, _React$Component);

    function UsingHelp(props) {
      var _this;

      (0, _classCallCheck2.default)(this, UsingHelp);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(UsingHelp).call(this, props));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(UsingHelp, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        });
      }
    }]);
    return UsingHelp;
  }(_react.default.Component);

  exports.default = UsingHelp;

  UsingHelp.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: '使用帮助',
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#ffffff'
    }
  });
},10517,[14305,14320,14323,14371,14377,14386,10297,10284,10332,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var LawInfo = function (_React$Component) {
    (0, _inherits2.default)(LawInfo, _React$Component);

    function LawInfo(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LawInfo);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LawInfo).call(this, props));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(LawInfo, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_ListItem.default, {
          title: "\u7528\u6237\u534F\u8BAE",
          hideArrow: false,
          onPress: function onPress(_) {
            return undefined;
          },
          separator: _react.default.createElement(_Separator.default, null)
        }), _react.default.createElement(_ListItem.default, {
          title: "\u9690\u79C1\u534F\u8BAE",
          hideArrow: false,
          onPress: function onPress(_) {
            return undefined;
          },
          separator: _react.default.createElement(_Separator.default, null)
        }));
      }
    }]);
    return LawInfo;
  }(_react.default.Component);

  exports.default = LawInfo;

  LawInfo.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: '法律信息',
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#ffffff'
    }
  });
},10520,[14305,14320,14323,14371,14377,14386,10297,10284,10332,10329,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _Devices = _$$_REQUIRE(_dependencyMap[11]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[12]);

  var circle = _$$_REQUIRE(_dependencyMap[13]);

  var circle1 = _$$_REQUIRE(_dependencyMap[14]);

  var safe = _$$_REQUIRE(_dependencyMap[15]);

  var icon1 = _$$_REQUIRE(_dependencyMap[16]);

  var icon2 = _$$_REQUIRE(_dependencyMap[17]);

  var icon3 = _$$_REQUIRE(_dependencyMap[18]);

  var icon4 = _$$_REQUIRE(_dependencyMap[19]);

  var icon5 = _$$_REQUIRE(_dependencyMap[20]);

  var icon6 = _$$_REQUIRE(_dependencyMap[21]);

  var icon7 = _$$_REQUIRE(_dependencyMap[22]);

  var icon8 = _$$_REQUIRE(_dependencyMap[23]);

  var icon11 = _$$_REQUIRE(_dependencyMap[24]);

  var icon12 = _$$_REQUIRE(_dependencyMap[25]);

  var icon13 = _$$_REQUIRE(_dependencyMap[26]);

  var icon14 = _$$_REQUIRE(_dependencyMap[27]);

  var icon15 = _$$_REQUIRE(_dependencyMap[28]);

  var icon16 = _$$_REQUIRE(_dependencyMap[29]);

  var icon17 = _$$_REQUIRE(_dependencyMap[30]);

  var icon18 = _$$_REQUIRE(_dependencyMap[31]);

  var SafeCenter = function (_Component) {
    (0, _inherits2.default)(SafeCenter, _Component);

    function SafeCenter(props) {
      var _this;

      (0, _classCallCheck2.default)(this, SafeCenter);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SafeCenter).call(this, props));

      _this.spin = function (timeInterval) {
        _this.spinValue.setValue(0);

        _reactNative.Animated.timing(_this.spinValue, {
          toValue: 1,
          duration: _this.timeInterval,
          easing: _reactNative.Easing.linear
        }).start(function () {
          if (_this.timeInterval < 200) {
            _this.timeInterval += 10;
          } else if (_this.timeInterval < 500) {
            _this.timeInterval += 200;
          } else if (_this.timeInterval < 600) {
            _this.timeInterval = 6000;
          } else if (_this.timeInterval = 6000) {
            _this.timeInterval = 6500;
          } else if (_this.timeInterval = 6500) {
            _this.timeInterval = 7000;
          }

          _this.spin(_this.timeInterval);
        });
      };

      _this.spinValue = new _reactNative.Animated.Value(0);
      _this.timeInterval = 100;
      _this.color = true;
      _this.state = {
        safeStatus: true,
        dataSource: [{
          icon: icon1,
          icon2x: icon11,
          keyword: 'malicious_url_firewall',
          title: '恶意网址防火墙',
          content: '自动检测各终端访问的网站是否存在病毒/木马风险',
          description: '防火墙技术，最初是针对 Internet 网络不安全因素所采取的一种保护措施。顾名思义，防火墙就是用来阻挡外部不安全因素影响的内部网络屏障，其目的就是防止外部网络用户未经授权的访问。它是一种计算机硬件和软件的结合，使Internet与Internet之间建立起一个安全网关（Security Gateway），从而保护内部网免受非法用户的侵入，防火墙主要由服务访问政策、验证工具、包过滤和应用网关4个部分组成。',
          status: false
        }, {
          icon: icon2,
          icon2x: icon12,
          keyword: 'virus_file_firewall',
          title: '文件下载防火墙',
          content: '自动检测各终端访下载的文件是否存在病毒风险',
          description: '防火墙技术，最初是针对 Internet 网络不安全因素所采取的一种保护措施。顾名思义，防火墙就是用来阻挡外部不安全因素影响的内部网络屏障，其目的就是防止外部网络用户未经授权的访问。它是一种计算机硬件和软件的结合，使Internet与Internet之间建立起一个安全网关（Security Gateway），从而保护内部网免受非法用户的侵入，防火墙主要由服务访问政策、验证工具、包过滤和应用网关4个部分组成。',
          status: true
        }, {
          icon: icon3,
          icon2x: icon13,
          keyword: 'iot_firewall',
          title: '智能家居防火墙',
          content: '自动拦截恶意访问、后台漏洞和网络攻击',
          description: '防火墙技术，最初是针对 Internet 网络不安全因素所采取的一种保护措施。顾名思义，防火墙就是用来阻挡外部不安全因素影响的内部网络屏障，其目的就是防止外部网络用户未经授权的访问。它是一种计算机硬件和软件的结合，使Internet与Internet之间建立起一个安全网关（Security Gateway），从而保护内部网免受非法用户的侵入，防火墙主要由服务访问政策、验证工具、包过滤和应用网关4个部分组成。',
          status: false
        }, {
          icon: icon4,
          icon2x: icon14,
          keyword: 'anti_intrusion_firewall',
          title: '防入侵防火墙',
          content: '自动拦截恶意访问、后台漏洞和网络攻击',
          description: '防火墙技术，最初是针对 Internet 网络不安全因素所采取的一种保护措施。顾名思义，防火墙就是用来阻挡外部不安全因素影响的内部网络屏障，其目的就是防止外部网络用户未经授权的访问。它是一种计算机硬件和软件的结合，使Internet与Internet之间建立起一个安全网关（Security Gateway），从而保护内部网免受非法用户的侵入，防火墙主要由服务访问政策、验证工具、包过滤和应用网关4个部分组成。',
          status: false
        }, {
          icon: icon5,
          icon2x: icon15,
          keyword: 'wifi_arn',
          title: '防蹭网防火墙',
          content: '自动拦截恶意访问、后台漏洞和网络攻击',
          description: '防火墙技术，最初是针对 Internet 网络不安全因素所采取的一种保护措施。顾名思义，防火墙就是用来阻挡外部不安全因素影响的内部网络屏障，其目的就是防止外部网络用户未经授权的访问。它是一种计算机硬件和软件的结合，使Internet与Internet之间建立起一个安全网关（Security Gateway），从而保护内部网免受非法用户的侵入，防火墙主要由服务访问政策、验证工具、包过滤和应用网关4个部分组成。',
          status: false
        }, {
          icon: icon6,
          icon2x: icon16,
          keyword: 'app_security_v2',
          title: '安全应用下载防火墙',
          content: '自动拦截恶意访问、后台漏洞和网络攻击',
          description: '防火墙技术，最初是针对 Internet 网络不安全因素所采取的一种保护措施。顾名思义，防火墙就是用来阻挡外部不安全因素影响的内部网络屏障，其目的就是防止外部网络用户未经授权的访问。它是一种计算机硬件和软件的结合，使Internet与Internet之间建立起一个安全网关（Security Gateway），从而保护内部网免受非法用户的侵入，防火墙主要由服务访问政策、验证工具、包过滤和应用网关4个部分组成。',
          status: false
        }, {
          icon: icon8,
          icon2x: icon18,
          keyword: 'privacy_protection',
          title: '信息泄露防火墙',
          content: '检查路由器磁盘文件是否存在病毒',
          description: '防火墙技术，最初是针对 Internet 网络不安全因素所采取的一种保护措施。顾名思义，防火墙就是用来阻挡外部不安全因素影响的内部网络屏障，其目的就是防止外部网络用户未经授权的访问。它是一种计算机硬件和软件的结合，使Internet与Internet之间建立起一个安全网关（Security Gateway），从而保护内部网免受非法用户的侵入，防火墙主要由服务访问政策、验证工具、包过滤和应用网关4个部分组成。',
          status: false
        }]
      };
      return _this;
    }

    (0, _createClass2.default)(SafeCenter, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.spin();
        this.getSafeStatus();
      }
    }, {
      key: "getSafeStatus",
      value: function getSafeStatus() {
        var status = false;
        this.state.dataSource.map(function (v) {
          if (v.status == true) {
            status = true;
          }
        });
        this.setState({
          safeStatus: status
        });
      }
    }, {
      key: "_onItemClick",
      value: function _onItemClick(item, index) {
        this.props.navigation.navigate('SafeDetail', {
          item: item,
          index: index,
          callback: this._setItemCallback.bind(this)
        });
      }
    }, {
      key: "_setItemCallback",
      value: function _setItemCallback(_ref) {
        var _this2 = this;

        var index = _ref.index,
            key = _ref.key,
            status = _ref.status;
        this.state.dataSource[index].status = status;
        this.setState({
          dataSource: (0, _toConsumableArray2.default)(this.state.dataSource)
        }, function () {
          _this2.getSafeStatus();
        });
      }
    }, {
      key: "_changeSafeStatus",
      value: function _changeSafeStatus() {
        this.state.dataSource.map(function (v) {
          v.status = true;
        });
        this.setState({
          safeStatus: true,
          dataSource: (0, _toConsumableArray2.default)(this.state.dataSource)
        });
      }
    }, {
      key: "_ListItem",
      value: function _ListItem(item, index) {
        var _this3 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.rowContainer
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.row,
          onPress: function onPress() {
            return _this3._onItemClick(item, index);
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.rowLeft,
          source: item.icon
        }), _react.default.createElement(_reactNative.View, {
          style: styles.rowRight
        }, _react.default.createElement(_reactNative.View, {
          style: styles.rowTop
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: 14
          }
        }, item.title), _react.default.createElement(_reactNative.Text, {
          style: item.status ? [styles.status, styles.status1] : [styles.status, styles.status2]
        }, item.status ? '已开启' : '未开启')), _react.default.createElement(_reactNative.View, {
          style: styles.rowBottom
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: 12
          }
        }, item.content)))));
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var spin = this.spinValue.interpolate({
          inputRange: [0, 1],
          outputRange: ['0deg', '360deg']
        });
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: this.state.safeStatus ? [styles.topContent, styles.topContent1] : [styles.topContent, styles.topContent2]
        }, this.state.safeStatus ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Animated.Image, {
          style: [styles.circle, {
            transform: [{
              rotate: spin
            }]
          }],
          source: circle
        }), _react.default.createElement(_reactNative.View, {
          style: styles.loaderWrapper
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.loaderTop
        }, "\u5DF2\u9632\u5FA1\u6B21\u6570"), _react.default.createElement(_reactNative.Text, {
          style: styles.loaderCenter
        }, "321")), _react.default.createElement(_reactNative.View, {
          style: styles.baiduWrapper
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.baidu,
          source: safe
        }), _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: 12,
            color: '#ffffff'
          }
        }, "\u767E\u5EA6\u5B89\u5168\u63D0\u4F9B\u5F15\u64CE\u652F\u6301"))) : _react.default.createElement(_reactNative.View, {
          style: {
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.circle,
          source: circle1
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.circleText
        }, "\u5B89\u5168\u4FDD\u62A4\u672A\u5F00\u542F\u5B58\u5728\u5B89\u5168\u9690\u60A3"), _react.default.createElement(_reactNativeUiKitten.RkButton, {
          rkType: "rounded",
          color: "#000000",
          onPress: function onPress() {
            _this4._changeSafeStatus();
          },
          style: styles.viewRkButton
        }, "\u4E00\u952E\u5F00\u542F"))), _react.default.createElement(_reactNative.View, {
          style: styles.BottomContent
        }, _react.default.createElement(_reactNative.FlatList, {
          keyExtractor: function keyExtractor(item, index) {
            return index + '1';
          },
          data: this.state.dataSource,
          renderItem: function renderItem(_ref2) {
            var item = _ref2.item,
                index = _ref2.index;
            return _this4._ListItem(item, index);
          }
        })));
      }
    }]);
    return SafeCenter;
  }(_react.Component);

  exports.default = SafeCenter;

  SafeCenter.navigationOptions = function (_ref3) {
    var navigation = _ref3.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: '安全中心',
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      })
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#FCFCFC'
    },
    topContent: {
      height: 340,
      width: _Devices.ScreenW,
      paddingBottom: 40,
      alignItems: 'center',
      justifyContent: 'center'
    },
    topContent1: {
      backgroundColor: '#27C07E'
    },
    topContent2: {
      backgroundColor: '#FF7701'
    },
    viewRkButton: {
      width: 100,
      height: 30,
      marginTop: 20,
      borderWidth: 1,
      borderColor: 'rgba(255,255,255,0.50)',
      backgroundColor: 'rgba(255,255,255,0.05)'
    },
    BottomContent: {
      position: 'absolute',
      top: 302,
      bottom: 0,
      left: 0,
      right: 0
    },
    circle: {
      width: 200,
      height: 200
    },
    loaderWrapper: {
      position: 'absolute',
      top: 0,
      left: 0,
      width: 200,
      height: 200,
      flexDirection: 'column',
      alignItems: 'center',
      justifyContent: 'center'
    },
    baiduWrapper: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      marginTop: 10
    },
    baidu: {
      width: 7,
      height: 10,
      marginRight: 5
    },
    loaderTop: {
      fontSize: 12,
      color: 'rgba(255,255,255,0.50)'
    },
    loaderCenter: {
      fontSize: 36,
      color: '#ffffff'
    },
    loaderBottom: {
      fontSize: 12,
      width: 80,
      textAlign: 'center',
      color: 'rgba(255,255,255,0.50)'
    },
    circleText: {
      position: 'absolute',
      top: 120,
      left: 50,
      fontSize: 12,
      width: 100,
      textAlign: 'center',
      color: '#ffffff'
    },
    rowContainer: {
      flex: 1,
      justifyContent: 'center',
      alignItems: 'center'
    },
    row: {
      height: 76,
      width: _Devices.ScreenW * 0.9,
      paddingLeft: 15,
      paddingRight: 5,
      backgroundColor: '#FFFFFF',
      borderRadius: 10,
      borderColor: '#AAAAAA',
      shadowColor: '#000000',
      shadowOffset: {
        w: 10,
        h: 10
      },
      shadowOpacity: 0.5,
      shadowRadius: 10,
      elevation: 2,
      marginBottom: 15,
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center'
    },
    rowLeft: {
      width: 28,
      height: 28,
      resizeMode: 'contain',
      marginRight: 12
    },
    rowRight: {
      flex: 1,
      flexDirection: 'column'
    },
    rowTop: {
      flexDirection: 'row'
    },
    status: {
      fontSize: 12,
      borderRadius: 10,
      marginLeft: 10,
      paddingLeft: 7,
      paddingRight: 7,
      textAlignVertical: 'center'
    },
    status1: {
      color: '#ffffff',
      backgroundColor: '#27C07E'
    },
    status2: {
      color: '#FF3D3D',
      borderWidth: 1,
      borderColor: '#FF3D3D'
    },
    rowBottom: {
      opacity: 0.5,
      marginTop: 3
    }
  });
},10523,[14308,14305,14359,14320,14323,14371,14377,14386,10297,10284,10033,10067,11251,10526,10529,10532,10535,10538,10541,10544,10547,10550,10553,10556,10559,10562,10565,10568,10571,10574,10577,10580]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
    "width": 348,
    "height": 348,
    "scales": [1],
    "hash": "b379f342f85f534b47a946ec5d139e05",
    "name": "status2",
    "type": "png"
  });
},10526,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
    "width": 348,
    "height": 348,
    "scales": [1],
    "hash": "d9f30e03113238444ca27b320393843b",
    "name": "status1",
    "type": "png"
  });
},10529,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
    "width": 17,
    "height": 20,
    "scales": [1],
    "hash": "f101ab9c7379a06a367337d1929e895f",
    "name": "safe",
    "type": "png"
  });
},10532,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
    "width": 54,
    "height": 54,
    "scales": [1],
    "hash": "d64e9ef749273bb9c581af0355886d1a",
    "name": "icon1",
    "type": "png"
  });
},10535,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
    "width": 54,
    "height": 47,
    "scales": [1],
    "hash": "c16f5e1d8cbc6273ca62327c38e58b53",
    "name": "icon2",
    "type": "png"
  });
},10538,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
    "width": 57,
    "height": 48,
    "scales": [1],
    "hash": "697b09117087bb08ad0795b30e22843d",
    "name": "icon3",
    "type": "png"
  });
},10541,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
    "width": 51,
    "height": 54,
    "scales": [1],
    "hash": "09e1fae04814d2d1b07f3657ee1f2beb",
    "name": "icon4",
    "type": "png"
  });
},10544,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
    "width": 60,
    "height": 61,
    "scales": [1],
    "hash": "ece2a81d69155ffcea4348419d6c5142",
    "name": "icon5",
    "type": "png"
  });
},10547,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
    "width": 51,
    "height": 61,
    "scales": [1],
    "hash": "f48c01a4395a0aa082f4a39357f1a6f9",
    "name": "icon6",
    "type": "png"
  });
},10550,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
    "width": 58,
    "height": 42,
    "scales": [1],
    "hash": "a9584a8a73cf162b5451ec30874404af",
    "name": "icon7",
    "type": "png"
  });
},10553,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
    "width": 57,
    "height": 51,
    "scales": [1],
    "hash": "8f8d1c3c704d78b0c8867fe8d13954e9",
    "name": "icon8",
    "type": "png"
  });
},10556,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
    "width": 108,
    "height": 108,
    "scales": [1],
    "hash": "1e746d8284a743ee5908dec41c15b28e",
    "name": "icon1_2x",
    "type": "png"
  });
},10559,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
    "width": 324,
    "height": 280,
    "scales": [1],
    "hash": "65ec75141f6627fdaf4294797b107913",
    "name": "icon2_2x",
    "type": "png"
  });
},10562,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
    "width": 115,
    "height": 96,
    "scales": [1],
    "hash": "7c8e14111984205f26356a31816742fe",
    "name": "icon3_2x",
    "type": "png"
  });
},10565,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
    "width": 101,
    "height": 108,
    "scales": [1],
    "hash": "2774edb6e0e1b62bf3eabaedf7a08fa5",
    "name": "icon4_2x",
    "type": "png"
  });
},10568,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
    "width": 120,
    "height": 121,
    "scales": [1],
    "hash": "443ffc5bf666c84bbb0d0d8074af19b3",
    "name": "icon5_2x",
    "type": "png"
  });
},10571,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
    "width": 103,
    "height": 121,
    "scales": [1],
    "hash": "d7dda122db9dda09205a88ac279b4c8e",
    "name": "icon6_2x",
    "type": "png"
  });
},10574,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
    "width": 116,
    "height": 84,
    "scales": [1],
    "hash": "a7eda19f4c59b9c50e80b775259ad925",
    "name": "icon7_2x",
    "type": "png"
  });
},10577,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
    "width": 113,
    "height": 103,
    "scales": [1],
    "hash": "5066d87f579a6d7bd9d8f715e7f76daa",
    "name": "icon8_2x",
    "type": "png"
  });
},10580,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _Devices = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var imageOpen = _$$_REQUIRE(_dependencyMap[11]);

  var imageClose = _$$_REQUIRE(_dependencyMap[12]);

  var SafeDetail = function (_React$Component) {
    (0, _inherits2.default)(SafeDetail, _React$Component);

    function SafeDetail(props) {
      var _this;

      (0, _classCallCheck2.default)(this, SafeDetail);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SafeDetail).call(this, props));
      _this.state = {
        icon2x: null,
        title: '',
        keyword: '',
        content: '',
        description: '',
        status: false
      };
      return _this;
    }

    (0, _createClass2.default)(SafeDetail, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this$props$navigatio = this.props.navigation.state.params.item,
            icon2x = _this$props$navigatio.icon2x,
            title = _this$props$navigatio.title,
            content = _this$props$navigatio.content,
            keyword = _this$props$navigatio.keyword,
            description = _this$props$navigatio.description,
            status = _this$props$navigatio.status;
        this.setState({
          icon2x: icon2x,
          title: title,
          content: content,
          keyword: keyword,
          description: description,
          status: status
        });
      }
    }, {
      key: "_editItemStatus",
      value: function _editItemStatus() {
        var _this2 = this;

        this.setState({
          status: !this.state.status
        }, function () {
          _this2.props.navigation.state.params.callback({
            index: _this2.props.navigation.state.params.index,
            key: _this2.state.keyword,
            status: _this2.state.status
          });
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: this.state.icon2x
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, this.state.title), _react.default.createElement(_reactNative.Text, {
          style: styles.content
        }, this.state.content), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.row,
          onPress: function onPress() {
            return _this3._editItemStatus();
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.status,
          source: this.state.status ? imageOpen : imageClose
        })), _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, {
          style: styles.description
        }, this.state.description)));
      }
    }]);
    return SafeDetail;
  }(_react.default.Component);

  exports.default = SafeDetail;

  SafeDetail.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "light",
        title: '安全中心',
        style: {
          backgroundColor: '#27C07E'
        },
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#FFFFFF',
      flexDirection: 'column',
      alignItems: 'center',
      padding: 15
    },
    icon: {
      width: 100,
      height: 100,
      marginTop: 50,
      resizeMode: 'contain'
    },
    title: {
      marginTop: 30,
      marginBottom: 10,
      fontSize: 20
    },
    content: {
      color: 'rgba(0,0,0,0.5)'
    },
    status: {
      width: 160,
      height: 70,
      resizeMode: 'contain',
      marginTop: 15,
      marginBottom: 15
    },
    description: {
      flex: 1,
      fontSize: 14,
      borderTopWidth: 1,
      padding: 15,
      lineHeight: 20,
      borderTopColor: 'rgba(0,0,0,0.2)',
      color: 'rgba(0,0,0,0.5)'
    }
  });
},10583,[14305,14320,14323,14371,14377,14386,10297,10284,10332,10067,10033,10586,10589]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
    "width": 230,
    "height": 95,
    "scales": [1],
    "hash": "6d2f4eb07fc98ad2f6b3d1ae7b6082a0",
    "name": "open1",
    "type": "png"
  });
},10586,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/safe",
    "width": 230,
    "height": 95,
    "scales": [1],
    "hash": "cc51798fe15e43ed072dbb19b7ba3ae2",
    "name": "close1",
    "type": "png"
  });
},10589,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _miot = _$$_REQUIRE(_dependencyMap[7]);

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var MoreSetting = function (_React$Component) {
    (0, _inherits2.default)(MoreSetting, _React$Component);

    function MoreSetting(props) {
      var _this;

      (0, _classCallCheck2.default)(this, MoreSetting);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MoreSetting).call(this, props));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(MoreSetting, [{
      key: "_creatDeskShotcut",
      value: function _creatDeskShotcut() {
        this.props.navigation.navigate('MpkWebPage', {
          title: '添加桌面快捷方式',
          url: 'http://www.baidu.com'
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_ListItem.default, {
          title: "\u8BBE\u7F6E\u65F6\u533A",
          onPress: function onPress(_) {
            return _this2.props.navigation.navigate('TimeZone');
          },
          separator: _react.default.createElement(_Separator.default, null)
        }), _react.default.createElement(_ListItem.default, {
          title: "\u53CD\u9988\u95EE\u9898",
          onPress: function onPress(_) {
            return _this2.props.navigation.navigate('Feedback');
          },
          separator: _react.default.createElement(_Separator.default, null)
        }), _react.default.createElement(_ListItem.default, {
          title: "\u6DFB\u52A0\u684C\u9762\u5FEB\u6377\u65B9\u5F0F",
          onPress: function onPress(_) {
            return _this2._creatDeskShotcut();
          },
          separator: _react.default.createElement(_Separator.default, null)
        }));
      }
    }]);
    return MoreSetting;
  }(_react.default.Component);

  exports.default = MoreSetting;

  MoreSetting.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: '更多设置',
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#ffffff'
    }
  });
},10592,[14305,14320,14323,14371,14377,14386,10297,10074,10284,10332,10329,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _miot = _$$_REQUIRE(_dependencyMap[6]);

  var _resources = _$$_REQUIRE(_dependencyMap[7]);

  var _CommonSetting = _$$_REQUIRE(_dependencyMap[8]);

  var _CommonSetting2 = _$$_REQUIRE(_dependencyMap[9]);

  var _ListItem = _$$_REQUIRE(_dependencyMap[10]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[14]);

  var first_options = _CommonSetting.SETTING_KEYS.first_options,
      second_options = _CommonSetting.SETTING_KEYS.second_options;

  var Setting = function (_React$Component) {
    (0, _inherits2.default)(Setting, _React$Component);

    function Setting(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, Setting);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Setting).call(this, props, context));
      _this.state = {
        showDot: []
      };
      return _this;
    }

    (0, _createClass2.default)(Setting, [{
      key: "render",
      value: function render() {
        var firstOptions = [];
        var secondOptions = [second_options.TIMEZONE];
        var extraOptions = {
          showUpgrade: true,
          deleteDeviceMessage: 'test',
          excludeRequiredOptions: [_CommonSetting2.firstAllOptions.LOCATION, _CommonSetting2.secondAllOptions.SECURITY],
          option: {
            experiencePlanURL: '',
            hideAgreement: true
          },
          syncDevice: true
        };
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.ScrollView, {
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_CommonSetting.CommonSetting, {
          navigation: this.props.navigation,
          showDot: this.state.showDot,
          extraOptions: extraOptions
        }), _react.default.createElement(_reactNative.View, {
          style: {
            height: 20
          }
        })));
      }
    }, {
      key: "onValueChange",
      value: function onValueChange(value) {}
    }, {
      key: "onSlidingComplete",
      value: function onSlidingComplete(value) {}
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        setTimeout(function (_) {
          return _this2.setState({
            switchValue: true,
            sliderValue: 75,
            showDot: [first_options.FIRMWARE_UPGRADE]
          });
        }, 2000);
      }
    }]);
    return Setting;
  }(_react.default.Component);

  exports.default = Setting;

  Setting.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: _resources.strings.setting,
        style: {
          backgroundColor: '#fff'
        },
        onPressLeft: function onPressLeft() {
          if (_miot.Package.entrance !== _miot.Entrance.Main && !_miot.Package.pageParams.isBackToMainPage) {
            _miot.Package.exit();
          } else {
            navigation.goBack();
          }
        }
      })
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: _resources.Styles.common.backgroundColor,
      flex: 1
    },
    featureSetting: {
      backgroundColor: '#fff'
    },
    blank: {
      height: 8,
      backgroundColor: _resources.Styles.common.backgroundColor,
      borderTopColor: _resources.Styles.common.hairlineColor,
      borderTopWidth: _reactNative.StyleSheet.hairlineWidth,
      borderBottomColor: _resources.Styles.common.hairlineColor,
      borderBottomWidth: _reactNative.StyleSheet.hairlineWidth
    },
    titleContainer: {
      height: 32,
      backgroundColor: '#fff',
      justifyContent: 'center',
      paddingLeft: _resources.Styles.common.padding
    },
    title: {
      fontSize: 11,
      color: 'rgba(0,0,0,0.5)',
      lineHeight: 14
    }
  });
},10595,[14305,14320,14323,14371,14377,14386,10074,10077,10353,10326,10338,10332,10284,10297,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _Devices = _$$_REQUIRE(_dependencyMap[11]);

  var _reactNativeImagePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[13]);

  var itemImgWidth = _Devices.ScreenW / 3 * 0.4;
  var itemWidth = _Devices.ScreenW / 3;
  var itemImgMarginLeft = itemImgWidth * 0.75;

  var Feedback = function (_React$Component) {
    (0, _inherits2.default)(Feedback, _React$Component);

    function Feedback(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Feedback);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Feedback).call(this, props));
      _this.state = {
        height: 30,
        textArea: '',
        avatarSource: [{
          uri: ''
        }],
        confirmDisabled: false,
        problemText: null,
        phoneNumber: null,
        status: false
      };
      return _this;
    }

    (0, _createClass2.default)(Feedback, [{
      key: "selectPhotoTapped",
      value: function selectPhotoTapped() {
        var _this2 = this;

        var options = {
          title: '选择图片',
          cancelButtonTitle: '取消',
          takePhotoButtonTitle: '拍照',
          chooseFromLibraryButtonTitle: '选择照片',
          cameraType: 'back',
          mediaType: 'photo',
          videoQuality: 'high',
          durationLimit: 10,
          maxWidth: 300,
          maxHeight: 300,
          quality: 0.8,
          angle: 0,
          allowsEditing: false,
          noData: false,
          storageOptions: {
            skipBackup: true
          },
          imagesrc: []
        };

        _reactNativeImagePicker.default.showImagePicker(options, function (response) {
          if (response.didCancel) {} else if (response.error) {} else {
            var source = {
              uri: response.uri
            };

            _this2.state.avatarSource.unshift(source);

            if (_this2.state.avatarSource.length == 5) {
              alert(JSON.stringify(_this2.state.avatarSource));
            }

            _this2.setState({
              avatarSource: (0, _toConsumableArray2.default)(_this2.state.avatarSource)
            });
          }
        });
      }
    }, {
      key: "cauculateHeight",
      value: function cauculateHeight(e) {
        var height = e.nativeEvent.contentSize.height > 30 ? e.nativeEvent.contentSize.height : this.state.height;
        this.setState({
          height: height
        });
      }
    }, {
      key: "uploadlog",
      value: function uploadlog() {
        var status = !this.state.status;
        this.setState({
          status: status
        });
      }
    }, {
      key: "submitFeedback",
      value: function submitFeedback() {
        var obj = {
          textArea: this.state.textArea,
          avatarSource: this.state.avatarSource,
          problemType: this.state.problemText,
          phoneNumber: this.state.phoneNumber,
          radio: this.state.status
        };
        alert(JSON.stringify(obj));
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.subscription = _reactNative.DeviceEventEmitter.addListener('UPDATE_USER_DATA', this.refreshData.bind(this));
      }
    }, {
      key: "refreshData",
      value: function refreshData(data) {
        this.setState({
          problemText: data
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.subscription.remove();
      }
    }, {
      key: "_onPressItem",
      value: function _onPressItem(item, index) {
        this.state.avatarSource.splice(index, 1);
        this.setState({
          avatarSource: (0, _toConsumableArray2.default)(this.state.avatarSource)
        });
      }
    }, {
      key: "_renderItem",
      value: function _renderItem(item, index) {
        var _this3 = this;

        if (this.state.avatarSource.length == 5 && index == 4) {
          return;
        }

        if (index == this.state.avatarSource.length - 1) {
          return _react.default.createElement(_reactNative.TouchableOpacity, {
            onPress: this.selectPhotoTapped.bind(this),
            style: styles.avatarContainer
          }, _react.default.createElement(_reactNative.View, {
            style: {
              alignItems: 'center'
            }
          }, _react.default.createElement(_reactNative.Image, {
            style: {
              width: 20,
              height: 20,
              marginBottom: 5
            },
            source: _$$_REQUIRE(_dependencyMap[14])
          }), _react.default.createElement(_reactNative.Text, null, "\u6DFB\u52A0\u56FE\u7247")));
        } else {
          return _react.default.createElement(_reactNative.View, {
            style: [styles.listItem]
          }, _react.default.createElement(_reactNative.Image, {
            style: styles.imageIcon,
            source: item
          }), _react.default.createElement(_reactNative.TouchableOpacity, {
            style: styles.deleteIcon,
            onPress: function onPress() {
              return _this3._onPressItem(item, index);
            },
            hitSlop: {
              left: 5,
              right: 5,
              top: 5,
              bottom: 5
            }
          }, _react.default.createElement(_reactNative.Image, {
            style: styles.deleteImage,
            source: _$$_REQUIRE(_dependencyMap[15])
          })));
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          activeOpacity: 1,
          style: styles.inputContainer,
          onPress: function onPress() {
            return _this4.TextInput.focus();
          }
        }, _react.default.createElement(_reactNative.TextInput, {
          placeholder: '请详细描述您的问题，以帮助我们尽快为您解决',
          placeholderTextColor: '#bbbbbb',
          underlineColorAndroid: 'transparent',
          multiline: true,
          ref: function ref(textInput) {
            return _this4.TextInput = textInput;
          },
          onChangeText: function onChangeText(text) {
            _this4.setState({
              textArea: text
            });
          },
          onContentSizeChange: function onContentSizeChange(e) {
            return _this4.cauculateHeight(e);
          },
          style: [{
            paddingVertical: 0,
            maxHeight: 105
          }, {
            height: this.state.height
          }]
        })), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.problem,
          onPress: function onPress() {
            _this4.props.navigation.navigate('ProblemType');
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.problemText
        }, this.state.problemText ? this.state.problemText : '问题类型（必选）'), _react.default.createElement(_reactNative.Image, {
          style: styles.subArrow,
          source: _$$_REQUIRE(_dependencyMap[16])
        })), _react.default.createElement(_reactNative.View, {
          style: {
            height: 100
          }
        }, _react.default.createElement(_reactNative.FlatList, {
          contentContainerStyle: styles.listContainer,
          data: this.state.avatarSource,
          renderItem: function renderItem(_ref) {
            var item = _ref.item,
                index = _ref.index;
            return _this4._renderItem(item, index);
          },
          numColumns: 4,
          horizontal: false
        })), _react.default.createElement(_reactNative.View, {
          style: styles.telephone
        }, _react.default.createElement(_reactNative.TextInput, {
          placeholder: '请输入您的手机号码',
          placeholderTextColor: '#bbbbbb',
          underlineColorAndroid: 'transparent',
          onChangeText: function onChangeText(text) {
            _this4.setState({
              phoneNumber: text
            });
          }
        })), _react.default.createElement(_reactNative.View, {
          style: styles.uploadlog
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: this.uploadlog.bind(this),
          hitSlop: {
            left: 10,
            right: 10,
            top: 10,
            bottom: 10
          }
        }, this.state.status ? _react.default.createElement(_reactNative.Image, {
          style: styles.logCheckbox,
          source: _$$_REQUIRE(_dependencyMap[17])
        }) : _react.default.createElement(_reactNative.Image, {
          style: styles.logCheckbox,
          source: _$$_REQUIRE(_dependencyMap[18])
        })), _react.default.createElement(_reactNative.Text, null, " \u4E0A\u4F20\u95EE\u9898\u65E5\u5FD7")), _react.default.createElement(_reactNative.View, {
          style: styles.rkbuttonItem
        }, _react.default.createElement(_reactNativeUiKitten.RkButton, {
          rkType: "rounded",
          disabled: this.state.confirmDisabled,
          onPress: function onPress() {
            _this4.submitFeedback();
          },
          style: styles.viewRkButton
        }, "\u786E\u8BA4")));
      }
    }]);
    return Feedback;
  }(_react.default.Component);

  exports.default = Feedback;

  Feedback.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: '问题反馈',
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#ffffff',
      borderTopWidth: 1 / _reactNative.PixelRatio.get(),
      borderColor: '#C1C1C1'
    },
    inputContainer: {
      borderColor: "#C1C1C1",
      borderWidth: 1 / _reactNative.PixelRatio.get(),
      height: 150,
      margin: 15,
      paddingLeft: 5
    },
    problem: {
      borderColor: '#C1C1C1',
      borderWidth: 1 / _reactNative.PixelRatio.get(),
      flexDirection: 'row',
      height: 50,
      margin: 15,
      padding: 15,
      paddingLeft: 5,
      justifyContent: 'space-between',
      alignItems: 'center'
    },
    problemText: {
      flex: 1
    },
    subArrow: {
      width: 7,
      height: 14
    },
    listContainer: {
      height: 90
    },
    avatarContainer: {
      borderColor: '#C1C1C1',
      backgroundColor: '#FAFAFA',
      borderWidth: 1 / _reactNative.PixelRatio.get(),
      justifyContent: 'center',
      alignItems: 'center',
      borderRadius: 5,
      width: 80,
      height: 80,
      marginLeft: 15
    },
    avatar: {
      borderRadius: 5,
      width: 60,
      height: 60
    },
    rkbuttonItem: {
      position: 'absolute',
      bottom: 20,
      left: 10,
      right: 10,
      alignItems: 'center'
    },
    viewRkButton: {
      width: _Devices.ScreenW / 10 * 9
    },
    uploadlog: {
      flexDirection: 'row',
      margin: 15,
      marginTop: 0
    },
    logCheckbox: {
      width: 20,
      height: 20
    },
    telephone: {
      borderWidth: 1 / _reactNative.PixelRatio.get(),
      borderColor: '#C1C1C1',
      height: 50,
      margin: 15,
      marginTop: 0,
      paddingLeft: 5,
      justifyContent: 'center'
    },
    listItem: {
      height: _Devices.ScreenW / 4,
      width: _Devices.ScreenW / 4,
      alignItems: 'center',
      position: 'relative'
    },
    deleteIcon: {
      position: 'absolute',
      top: 0,
      right: 10,
      width: 16,
      height: 16,
      borderRadius: 8,
      backgroundColor: '#fff'
    },
    deleteImage: {
      width: 16,
      height: 16
    },
    imageIcon: {
      width: _Devices.ScreenW / 4 * 0.8,
      height: _Devices.ScreenW / 4 * 0.8,
      borderRadius: 10,
      resizeMode: 'cover'
    }
  });
},10598,[14305,14359,14320,14323,14371,14377,14386,10297,10284,10332,10033,10067,10601,11251,10472,10604,10220,10607,10511]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var _require = _$$_REQUIRE(_dependencyMap[1]),
      NativeModules = _require.NativeModules;

  var ImagePickerManager = NativeModules.ImagePickerManager;
  var DEFAULT_OPTIONS = {
    title: 'Select a Photo',
    cancelButtonTitle: 'Cancel',
    takePhotoButtonTitle: 'Take Photo…',
    chooseFromLibraryButtonTitle: 'Choose from Library…',
    quality: 1.0,
    allowsEditing: false,
    permissionDenied: {
      title: 'Permission denied',
      text: 'To be able to take pictures with your camera and choose images from your library.',
      reTryTitle: 're-try',
      okTitle: 'I\'m sure'
    }
  };
  module.exports = _objectSpread({}, ImagePickerManager, {
    showImagePicker: function showImagePicker(options, callback) {
      if (typeof options === 'function') {
        callback = options;
        options = {};
      }

      return ImagePickerManager.showImagePicker(_objectSpread({}, DEFAULT_OPTIONS, options), callback);
    }
  });
},10601,[14314,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
    "width": 200,
    "height": 200,
    "scales": [1],
    "hash": "744bef10c2a3ec585504788ffde81826",
    "name": "delete3",
    "type": "png"
  });
},10604,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
    "width": 37,
    "height": 33,
    "scales": [1],
    "hash": "e76efb1117304a4b49256b0ba2fa06c9",
    "name": "unselected",
    "type": "png"
  });
},10607,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var ProblemType = function (_React$Component) {
    (0, _inherits2.default)(ProblemType, _React$Component);

    function ProblemType(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ProblemType);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ProblemType).call(this, props));
      _this.state = {
        list: [{
          "wideTagSort": 1,
          "wideTagId": "1489",
          "wideTag": "网络状况",
          "customInfo": "",
          "tags": [{
            "tagContent": "外网连接异常",
            "tagId": 7303,
            "sort": 1
          }, {
            "tagContent": "网络延迟高",
            "tagId": 7307,
            "sort": 2
          }, {
            "tagContent": "有线网络速度慢",
            "tagId": 7308,
            "sort": 3
          }, {
            "tagContent": "有线设备频繁断网",
            "tagId": 7309,
            "sort": 4
          }, {
            "tagContent": "其他高级功能（VPN/DDNS/DMZ/端口转发）",
            "tagId": 7310,
            "sort": 5
          }, {
            "tagContent": "其他网络状况问题",
            "tagId": 7311,
            "sort": 6
          }]
        }, {
          "wideTagSort": 2,
          "wideTagId": "1490",
          "wideTag": "WIFI",
          "customInfo": "",
          "tags": [{
            "tagContent": "WiFi无法上网（有线也无法上网）",
            "tagId": 7296,
            "sort": 1
          }, {
            "tagContent": "WiFi无法上网（有线可以上网）",
            "tagId": 7297,
            "sort": 2
          }, {
            "tagContent": "WiFi无法连接",
            "tagId": 7298,
            "sort": 3
          }, {
            "tagContent": "WiFi速度慢",
            "tagId": 7299,
            "sort": 4
          }, {
            "tagContent": "WiFi频繁掉线",
            "tagId": 7300,
            "sort": 5
          }, {
            "tagContent": "无线信号弱",
            "tagId": 7301,
            "sort": 6
          }, {
            "tagContent": "其他WIFI问题",
            "tagId": 7302,
            "sort": 7
          }]
        }]
      };
      return _this;
    }

    (0, _createClass2.default)(ProblemType, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.FlatList, {
          style: styles.flatList,
          data: this.state.list,
          renderItem: function renderItem(_ref) {
            var item = _ref.item,
                index = _ref.index;
            return _react.default.createElement(_ListItem.default, {
              title: item.wideTag,
              onPress: function onPress() {
                _this2.props.navigation.navigate('SelectProblem', {
                  tags: item.tags
                });
              }
            });
          }
        }));
      }
    }]);
    return ProblemType;
  }(_react.default.Component);

  exports.default = ProblemType;

  ProblemType.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: '问题类型',
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#ffffff'
    }
  });
},10610,[14305,14320,14323,14371,14377,14386,10297,10284,10332,10329,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var SelectProblem = function (_React$Component) {
    (0, _inherits2.default)(SelectProblem, _React$Component);

    function SelectProblem(props) {
      var _this;

      (0, _classCallCheck2.default)(this, SelectProblem);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SelectProblem).call(this, props));

      _this._renderItem = function (_ref) {
        var item = _ref.item,
            index = _ref.index;
        var show = _this.state.selectIndex == index;
        return _react.default.createElement(_reactNative.View, {
          style: {
            position: 'relative'
          }
        }, _react.default.createElement(_ListItem.default, {
          title: item.tagContent,
          hideArrow: true,
          onPress: function onPress(_) {
            return _this._select(item, index);
          }
        }), show && _react.default.createElement(_reactNative.Image, {
          style: {
            position: 'absolute',
            right: 10,
            top: 15,
            width: 20,
            height: 20
          },
          source: _$$_REQUIRE(_dependencyMap[12])
        }));
      };

      _this.state = {
        listData: [],
        selectIndex: null
      };
      return _this;
    }

    (0, _createClass2.default)(SelectProblem, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var tags = this.props.navigation.state.params.tags;
        this.setState({
          listData: tags
        });
      }
    }, {
      key: "_select",
      value: function _select(item, index) {
        this.setState({
          selectIndex: index,
          listData: (0, _toConsumableArray2.default)(this.state.listData)
        });

        _reactNative.DeviceEventEmitter.emit('UPDATE_USER_DATA', item.tagContent);

        this.props.navigation.navigate('Feedback');
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.FlatList, {
          data: this.state.listData,
          renderItem: this._renderItem
        }));
      }
    }]);
    return SelectProblem;
  }(_react.default.Component);

  exports.default = SelectProblem;

  SelectProblem.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: '选择问题',
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#ffffff'
    }
  });
},10613,[14305,14359,14320,14323,14371,14377,14386,10297,10284,10332,10329,10033,10616]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/general",
    "width": 200,
    "height": 200,
    "scales": [1],
    "hash": "770a6e3834d3192164058d32908b86ca",
    "name": "gou",
    "type": "png"
  });
},10616,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _Devices = _$$_REQUIRE(_dependencyMap[11]);

  var ZoneList = function (_React$Component) {
    (0, _inherits2.default)(ZoneList, _React$Component);

    function ZoneList(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ZoneList);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ZoneList).call(this, props));
      _this.state = {
        item: 'hello',
        dataSource: [{
          text: '台北',
          value: 'UTC+28'
        }, {
          text: '首尔',
          value: 'UTC+9'
        }, {
          text: '北京，重庆，香港特别行政区，乌鲁木齐',
          value: 'UTC+8'
        }, {
          text: '吉隆坡，新加坡',
          value: 'UTC+18'
        }, {
          text: '新西伯利亚',
          value: 'UTC+7'
        }],
        selectIndex: null
      };
      return _this;
    }

    (0, _createClass2.default)(ZoneList, [{
      key: "_onItemClick",
      value: function _onItemClick(item, index) {
        this.setState({
          selectIndex: index,
          dataSource: (0, _toConsumableArray2.default)(this.state.dataSource)
        });
        this.props.navigation.state.params.refresh(item);
        this.props.navigation.navigate('TimeZone');
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var zoneKey = this.props.navigation.state.params.id;
        var index;
        this.state.dataSource.map(function (v, i) {
          if (v.value == zoneKey) {
            index = i;
          }
        });
        this.setState({
          selectIndex: index,
          dataSource: (0, _toConsumableArray2.default)(this.state.dataSource)
        });
      }
    }, {
      key: "_createListItem",
      value: function _createListItem(item, index) {
        var _this2 = this;

        return _react.default.createElement(_reactNative.TouchableOpacity, {
          activeOpacity: 0.5,
          onPress: function onPress() {
            return _this2._onItemClick(item, index);
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            alignItems: 'center',
            padding: 15
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "(", item.value, ") ", item.text, " "), this.state.selectIndex == index && _react.default.createElement(_reactNative.Image, {
          style: {
            width: 20,
            height: 20
          },
          source: _$$_REQUIRE(_dependencyMap[12])
        })), _react.default.createElement(_Separator.default, null));
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.FlatList, {
          keyExtractor: function keyExtractor(item, index) {
            return index + '1';
          },
          data: this.state.dataSource,
          renderItem: function renderItem(_ref) {
            var item = _ref.item,
                index = _ref.index;
            return _this3._createListItem(item, index);
          }
        }));
      }
    }]);
    return ZoneList;
  }(_react.default.Component);

  exports.default = ZoneList;

  ZoneList.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: '选择时区',
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#ffffff'
    },
    text: {
      flex: 1
    }
  });
},10619,[14305,14359,14320,14323,14371,14377,14386,10297,10284,10332,10033,10067,10616]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _MHDatePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var TimeZone = function (_React$Component) {
    (0, _inherits2.default)(TimeZone, _React$Component);

    function TimeZone(props) {
      var _this;

      (0, _classCallCheck2.default)(this, TimeZone);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TimeZone).call(this, props));
      _this.state = {
        visible1: false,
        visible2: false,
        dateArray: [2019, 10, 23],
        dateString: "2019年10月23日",
        timeArray: ["08", "00"],
        timeString: '上午 08:00',
        zoneKey: 'UTC+8',
        zoneValue: '北京，重庆，香港特别行政区，乌鲁木齐'
      };
      return _this;
    }

    (0, _createClass2.default)(TimeZone, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        var data = {
          "time": {
            "min": 20,
            "day": 23,
            "index": 0,
            "month": 10,
            "year": 2019,
            "sec": 33,
            "hour": 18,
            "timezone": "CST-8"
          },
          "code": 0
        };
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }, {
      key: "_onpress",
      value: function _onpress() {
        var _this2 = this;

        this.props.navigation.navigate('ZoneList', {
          id: this.state.zoneKey,
          refresh: function refresh(item) {
            _this2.setState({
              zoneKey: item.value,
              zoneValue: item.text
            });
          }
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_ListItem.default, {
          title: "\u8BBE\u5907\u65F6\u533A",
          value: '(' + this.state.zoneKey + ')' + this.state.zoneValue,
          onPress: function onPress(_) {
            return _this3._onpress();
          },
          separator: _react.default.createElement(_Separator.default, null)
        }), _react.default.createElement(_ListItem.default, {
          title: "\u8BBE\u7F6E\u65E5\u671F",
          value: this.state.dateString,
          onPress: function onPress(_) {
            _this3.setState({
              visible1: true
            });
          },
          separator: _react.default.createElement(_Separator.default, null)
        }), _react.default.createElement(_ListItem.default, {
          title: "\u8BBE\u7F6E\u65F6\u95F4",
          value: this.state.timeString,
          onPress: function onPress(_) {
            _this3.setState({
              visible2: true
            });
          },
          separator: _react.default.createElement(_Separator.default, null)
        }), _react.default.createElement(_MHDatePicker.default, {
          visible: this.state.visible1,
          title: "\u5F00\u542F\u65E5\u671F",
          type: _MHDatePicker.default.TYPE.DATE,
          current: this.state.dateArray,
          onDismiss: function onDismiss(_) {
            return _this3.setState({
              visible1: false
            });
          },
          onSelect: function onSelect(res) {
            _this3.setState({
              dateArray: res.rawArray,
              dateString: res.rawString
            });
          }
        }), _react.default.createElement(_MHDatePicker.default, {
          visible: this.state.visible2,
          title: "\u5F00\u59CB\u65F6\u95F4",
          type: _MHDatePicker.default.TYPE.TIME12,
          current: this.state.timeArray,
          onDismiss: function onDismiss(_) {
            return _this3.setState({
              visible2: false
            });
          },
          onSelect: function onSelect(res) {
            _this3.setState({
              timeArray: res.date,
              timeString: res.rawString
            });
          }
        }));
      }
    }]);
    return TimeZone;
  }(_react.default.Component);

  exports.default = TimeZone;

  TimeZone.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: '时区设置',
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#ffffff'
    }
  });
},10622,[14305,14320,14323,14371,14377,14386,10297,10284,10332,10716,10329,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[9]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[10]);

  var _Host = _$$_REQUIRE(_dependencyMap[11]);

  var _miot = _$$_REQUIRE(_dependencyMap[12]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[15]);

  var _NetWorkModeConstant = _$$_REQUIRE(_dependencyMap[16]);

  var _device = _$$_REQUIRE(_dependencyMap[17]);

  var _API = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[18]));

  var _RouterInfoHelper = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[19]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[21]);

  var _Package = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var _Devices = _$$_REQUIRE(_dependencyMap[23]);

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      flex: 1
    },
    icon: {
      margin: 20
    },
    header: {
      backgroundColor: '#1a1b2a',
      alignItems: 'center'
    },
    titleText: {
      color: '#fff',
      margin: 20
    },
    contentTitle: {
      color: 'black',
      fontSize: 14,
      marginLeft: -10
    },
    configStyle: {
      height: 50
    },
    listItem: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-between',
      padding: 20,
      paddingRight: 35
    }
  });

  var NetworkMode = function (_React$Component) {
    (0, _inherits2.default)(NetworkMode, _React$Component);

    function NetworkMode(props) {
      var _this;

      (0, _classCallCheck2.default)(this, NetworkMode);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NetworkMode).call(this, props));

      _this._showSwitchActionSheet = function () {
        _this.setState({
          visibleSwitchActionSheet: true
        });
      };

      _this.state = {
        dataSource: new _reactNative.ListView.DataSource({
          rowHasChanged: function rowHasChanged(r1, r2) {
            return r1 !== r2;
          }
        }),
        visibleSwitchActionSheet: false,
        currentMode: _NetWorkModeConstant.NetModeType.Unknown,
        currentGateWay: '',
        currentIp: '',
        loadingWifiInfo: false,
        routerToken: '',
        selectWanAlert: false,
        wanPortErrAlert: false,
        curWanPortIndex: -1,
        switchModeSuccessAlert: false
      };
      _this.hadRequestRouterToken = false;
      _this.isDialingHappened = false;
      _this.isRequestingPppoeStatus = false;
      _this.routerInfoManager = _RouterInfoHelper.default.sharedInstance();
      return _this;
    }

    (0, _createClass2.default)(NetworkMode, [{
      key: "_changeCurrentMode",
      value: function _changeCurrentMode(mode) {
        newFunction(mode);
        this.setState({
          currentMode: mode
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        clearTimeout(this.timer);
        clearTimeout(this.timerPppoe);
        clearTimeout(this.timerStaticIp);
        clearTimeout(this.disableWireRelayTimer);
        clearTimeout(this.timerSetWan);
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        if (this.routerInfoManager.getCurrentRouterToken().length === 0) {
          this.checkRouterToken(1);
        } else {
          this.startLoadData();
        }
      }
    }, {
      key: "startLoadData",
      value: function startLoadData() {
        this.setState({
          isSupportMesh: _RouterInfoHelper.default.sharedInstance().isSupportMesh(),
          isMeshMode: _RouterInfoHelper.default.sharedInstance().isMeshMode()
        });

        if (!_RouterInfoHelper.default.sharedInstance().isWorkingInRelayMode()) {
          this._requestWanInfo(true);

          if (this.shouldShowSelectWan()) {
            this.getCurrentWanPort();
          }
        } else {
          var routerInfo = _RouterInfoHelper.default.sharedInstance().currentRouterInfo();

          if (_RouterInfoHelper.default.sharedInstance().isWorkingInWirelessRelayMode()) {
            this.setState({
              currentIp: !_CommonUtils.default.isNull(routerInfo) && !_CommonUtils.default.isNull(routerInfo.ip) ? routerInfo.ip : '',
              currentMode: _NetWorkModeConstant.NetModeType.WirelessRelay
            });
          } else if (_RouterInfoHelper.default.sharedInstance().isWorkingInWireRelayMode()) {
            this.setState({
              currentIp: !_CommonUtils.default.isNull(routerInfo) && !_CommonUtils.default.isNull(routerInfo.ip) ? routerInfo.ip : '',
              currentMode: _NetWorkModeConstant.NetModeType.WireRelay
            });
          }
        }
      }
    }, {
      key: "checkRouterToken",
      value: function checkRouterToken(count) {
        var token;
        return _regenerator.default.async(function checkRouterToken$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!(count > 6)) {
                  _context.next = 4;
                  break;
                }

                _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.$获取路由器上网模式信息失败);

                this.props.navigation.goBack();
                return _context.abrupt("return");

              case 4:
                _context.next = 6;
                return _regenerator.default.awrap(this.routerInfoManager.synGetRouterToken());

              case 6:
                token = _context.sent;

                if (token.length === 0) {
                  this.checkRouterToken(count + 1);
                } else {
                  this.startLoadData();
                }

              case 8:
              case "end":
                return _context.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "_renderRow",
      value: function _renderRow() {
        var currentModeName = this._getCurrentModeName();

        return _react.default.createElement(_ListItem.ListItem, {
          title: '当前模式',
          value: currentModeName,
          hideArrow: false,
          showDot: false,
          containerStyle: {
            backgroundColor: 'white'
          },
          titleStyle: styles.contentTitle,
          valueStyle: {
            fontSize: 14,
            color: 'black'
          },
          onPress: function onPress(_) {
            return undefined;
          },
          separator: _react.default.createElement(_Separator.default, null)
        });
      }
    }, {
      key: "shouldShowSelectWan",
      value: function shouldShowSelectWan() {
        return ['xiaomi.router.ra70', 'xiaomi.router.ra72'].includes(_device.Device.model) && !this.isWorkInRelay();
      }
    }, {
      key: "selectWanAlertMsg",
      value: function selectWanAlertMsg() {
        if (this.state.curWanPortIndex === _NetWorkModeConstant.MiRouterWanPort.Two_Point_FiveG.index) {
          return _NetWorkModeConstant.MiRouterWanPort.Two_Point_FiveG.changeTip;
        } else if (this.state.curWanPortIndex === _NetWorkModeConstant.MiRouterWanPort.GE.index) {
          return _NetWorkModeConstant.MiRouterWanPort.GE.changeTip;
        } else {
          return '';
        }
      }
    }, {
      key: "getCurWanPortTitle",
      value: function getCurWanPortTitle() {
        if (this.state.curWanPortIndex === _NetWorkModeConstant.MiRouterWanPort.Two_Point_FiveG.index) {
          return _NetWorkModeConstant.MiRouterWanPort.Two_Point_FiveG.title;
        } else if (this.state.curWanPortIndex === _NetWorkModeConstant.MiRouterWanPort.GE.index) {
          return _NetWorkModeConstant.MiRouterWanPort.GE.title;
        } else {
          return '';
        }
      }
    }, {
      key: "getCurWanPortName",
      value: function getCurWanPortName() {
        if (this.state.curWanPortIndex === _NetWorkModeConstant.MiRouterWanPort.Two_Point_FiveG.index) {
          return _NetWorkModeConstant.MiRouterWanPort.Two_Point_FiveG.name;
        } else if (this.state.curWanPortIndex === _NetWorkModeConstant.MiRouterWanPort.GE.index) {
          return _NetWorkModeConstant.MiRouterWanPort.GE.name;
        } else {
          return '';
        }
      }
    }, {
      key: "swapWan",
      value: function swapWan() {
        var _this2 = this;

        var token, commonLocalPath, api, targetMode, targetIndex, method;
        return _regenerator.default.async(function swapWan$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                token = this.routerInfoManager.getCurrentRouterToken();
                _context2.next = 3;
                return _regenerator.default.awrap((0, _API.getApiCommonLocalPath)());

              case 3:
                commonLocalPath = _context2.sent;
                api = commonLocalPath + "/;stok=" + token + _API.default.net_work_mode.swapWanPort.local;

                if (this.isWorkInRelay()) {
                  api = 'http://' + this.currentRelayIp() + '/cgi-bin/luci/;stok=' + token + _API.default.net_work_mode.swapWanPort.local;
                }

                targetMode = '2.5G';
                targetIndex = 0;
                this.setState({
                  loadingWifiInfo: true
                });

                if (this.state.curWanPortIndex === _NetWorkModeConstant.MiRouterWanPort.Two_Point_FiveG.index) {
                  targetMode = _NetWorkModeConstant.MiRouterWanPort.GE.name;
                  targetIndex = _NetWorkModeConstant.MiRouterWanPort.GE.index;
                } else if (this.state.curWanPortIndex === _NetWorkModeConstant.MiRouterWanPort.GE.index) {
                  targetMode = _NetWorkModeConstant.MiRouterWanPort.Two_Point_FiveG.name;
                  targetIndex = _NetWorkModeConstant.MiRouterWanPort.Two_Point_FiveG.index;
                }

                method = 'post';

                if (_Devices.ios) {
                  method = 'get';
                }

                _miot.Service.callSpecificAPI(api, method, {
                  mode: targetMode
                }).then(function (res) {
                  _this2.setState({
                    loadingWifiInfo: false
                  });

                  var result = typeof res === "object" ? res : JSON.parse(res);

                  if (result.code === 0) {
                    _this2.setState({
                      curWanPortIndex: targetIndex
                    });

                    _this2.getWanModeSatus();
                  } else {}
                }).catch(function (error) {
                  _this2.setState({
                    loadingWifiInfo: false
                  });

                  _CommonUtils.default.ShowToastCenter('切换成功,路由器网络重启中');

                  _this2.timerSetWan = setTimeout(function () {
                    _Package.default.exit();
                  }, 2000);
                });

              case 13:
              case "end":
                return _context2.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "getWanPortSatus",
      value: function getWanPortSatus() {
        var _this3 = this;

        var token, commonLocalPath, api, deviceId, paramsDic;
        return _regenerator.default.async(function getWanPortSatus$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                token = this.routerInfoManager.getCurrentRouterToken();
                _context3.next = 3;
                return _regenerator.default.awrap((0, _API.getApiCommonLocalPath)());

              case 3:
                commonLocalPath = _context3.sent;
                api = commonLocalPath + "/;stok=" + token + _API.default.net_work_mode.getWanPortStatus.local + '?mode=' + this.getCurWanPortName();

                if (this.isWorkInRelay()) {
                  api = 'http://' + this.currentRelayIp() + '/cgi-bin/luci/;stok=' + token + _API.default.net_work_mode.getWanPortStatus.local + '?mode=' + this.getCurWanPortName();
                }

                deviceId = _device.Device.deviceID.replace("miwifi.", "");

                if (this.routerInfoManager.isConnectCurrentManagedRouter()) {
                  _miot.Service.callSpecificAPI(api, 'get', {
                    "deviceId": deviceId
                  }).then(function (res) {
                    var result = typeof res === "object" ? res : JSON.parse(res);

                    if (result.code === 99) {
                      _this3.setState({
                        wanPortErrAlert: true
                      });
                    }
                  }).catch(function (error) {});
                } else {
                  api = _API.default.net_work_mode.getWanPortStatus.remote + '?mode=' + this.getCurWanPortName();
                  paramsDic = {
                    method: 'GET',
                    params: {
                      deviceId: deviceId,
                      mode: this.getCurWanPortName()
                    }
                  };

                  _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (result) {
                    if (result.code === 99) {
                      _this3.setState({
                        wanPortErrAlert: true
                      });
                    }
                  }).catch(function (error) {});
                }

              case 8:
              case "end":
                return _context3.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "getCurrentWanPort",
      value: function getCurrentWanPort() {
        var _this4 = this;

        var token, commonLocalPath, api, deviceId, paramsDic;
        return _regenerator.default.async(function getCurrentWanPort$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                token = this.routerInfoManager.getCurrentRouterToken();
                _context4.next = 3;
                return _regenerator.default.awrap((0, _API.getApiCommonLocalPath)());

              case 3:
                commonLocalPath = _context4.sent;
                api = commonLocalPath + "/;stok=" + token + _API.default.net_work_mode.getWanPort.local;

                if (this.isWorkInRelay()) {
                  api = 'http://' + this.currentRelayIp() + '/cgi-bin/luci/;stok=' + token + _API.default.net_work_mode.getWanPort.local;
                }

                deviceId = _device.Device.deviceID.replace("miwifi.", "");

                if (this.routerInfoManager.isConnectCurrentManagedRouter()) {
                  _miot.Service.callSpecificAPI(api, 'get', {
                    "deviceId": deviceId
                  }).then(function (res) {
                    var result = typeof res === "object" ? res : JSON.parse(res);
                    var curWanPortIndex = -1;

                    if (result.mode === _NetWorkModeConstant.MiRouterWanPort.Two_Point_FiveG.name) {
                      curWanPortIndex = _NetWorkModeConstant.MiRouterWanPort.Two_Point_FiveG.index;
                    } else if (result.mode === _NetWorkModeConstant.MiRouterWanPort.GE.name) {
                      curWanPortIndex = _NetWorkModeConstant.MiRouterWanPort.GE.index;
                    }

                    _this4.setState({
                      curWanPortIndex: curWanPortIndex
                    });

                    _this4.getWanPortSatus();
                  }).catch(function (error) {});
                } else {
                    api = _API.default.net_work_mode.getWanPort.remote;
                    paramsDic = {
                      method: 'GET',
                      params: {
                        deviceId: deviceId
                      }
                    };

                    _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (result) {
                      var curWanPortIndex = -1;

                      if (result.mode === _NetWorkModeConstant.MiRouterWanPort.Two_Point_FiveG.name) {
                        curWanPortIndex = _NetWorkModeConstant.MiRouterWanPort.Two_Point_FiveG.index;
                      } else if (result.mode === _NetWorkModeConstant.MiRouterWanPort.GE.name) {
                        curWanPortIndex = _NetWorkModeConstant.MiRouterWanPort.GE.index;
                      }

                      _this4.setState({
                        curWanPortIndex: curWanPortIndex
                      });

                      _this4.getWanPortSatus();
                    }).catch(function (error) {});
                  }

              case 8:
              case "end":
                return _context4.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "gotoDialAfterSwapWan",
      value: function gotoDialAfterSwapWan() {
        var _this5 = this;

        this.props.navigation.navigate('NetModePppoe', {
          title: '宽带上网',
          wanInfo: this.state.data,
          callback: function callback(success) {
            _this5.setState({
              currentMode: _NetWorkModeConstant.NetModeType.Pppoe
            });

            _this5.getWanModeSatus();
          }
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this6 = this;

        var currentModeName = this._getCurrentModeName();

        var ipAndGateway = this._getIpAndGatewayText();

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_ListItem.ListItem, {
          title: '切换模式',
          value: '',
          hideArrow: false,
          showDot: false,
          containerStyle: {
            backgroundColor: 'white'
          },
          titleStyle: styles.contentTitle,
          separator: _react.default.createElement(_Separator.default, null),
          onPress: function onPress() {
            if (!_this6.routerInfoManager.isConnectCurrentManagedRouter()) {
              _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.notConnectRouter);

              return;
            }

            _this6._showSwitchActionSheet();
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: '当前模式',
          value: currentModeName,
          hideArrow: false,
          showDot: false,
          containerStyle: {
            backgroundColor: 'white'
          },
          titleStyle: styles.contentTitle,
          valueStyle: {
            fontSize: 14,
            color: 'black'
          },
          onPress: function onPress() {
            _this6._gotoModeSetting();
          },
          separator: _react.default.createElement(_Separator.default, null)
        }), this.shouldShowSelectWan() ? _react.default.createElement(_ListItem.ListItem, {
          title: 'WAN口选择',
          value: this.getCurWanPortTitle(),
          hideArrow: false,
          showDot: false,
          containerStyle: {
            backgroundColor: 'white'
          },
          titleStyle: styles.contentTitle,
          valueStyle: {
            fontSize: 14,
            color: 'black'
          },
          onPress: function onPress() {
            if (!_this6.routerInfoManager.isConnectCurrentManagedRouter()) {
              _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.notConnectRouter);

              return;
            }

            _this6.setState({
              selectWanAlert: true
            });
          },
          separator: _react.default.createElement(_Separator.default, null)
        }) : null, _react.default.createElement(_reactNative.View, {
          style: styles.listItem
        }, _react.default.createElement(_reactNative.Text, null, "WAN IP"), _react.default.createElement(_reactNative.Text, null, this.state.currentIp)), _react.default.createElement(_Separator.default, null), !this.isRelayMode() ? [_react.default.createElement(_reactNative.View, {
          key: 0,
          style: styles.listItem
        }, _react.default.createElement(_reactNative.Text, null, "WAN \u7F51\u5173"), _react.default.createElement(_reactNative.Text, null, this.state.currentGateWay)), _react.default.createElement(_Separator.default, {
          key: 1
        })] : null, _react.default.createElement(_Dialog.ActionSheet, {
          visible: this.state.visibleSwitchActionSheet,
          options: this._getAvilableModes(),
          buttons: [{
            text: '取消',
            style: {
              color: '#000'
            }
          }],
          onDismiss: function onDismiss(_) {
            _this6.setState({
              visibleSwitchActionSheet: false
            });
          }
        }), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: this.state.loadingWifiInfo,
          message: ""
        }), _react.default.createElement(_Dialog.MessageDialog, {
          visible: this.state.selectWanAlert,
          title: "WAN\u53E3\u9009\u62E9",
          message: this.selectWanAlertMsg(),
          buttons: [{
            text: '确定',
            style: {
              color: '#000'
            },
            callback: function callback() {
              _this6.setState({
                selectWanAlert: false
              });

              _this6.swapWan();
            }
          }, {
            text: '取消',
            style: {
              color: '#000'
            },
            callback: function callback(_) {
              _this6.setState({
                selectWanAlert: false
              });
            }
          }],
          onDismiss: function onDismiss(_) {
            _this6.state.selectWanAlert = false;
          }
        }), _react.default.createElement(_Dialog.MessageDialog, {
          visible: this.state.wanPortErrAlert,
          title: "\u7CFB\u7EDF\u63D0\u793A",
          message: "\u5DF2\u65AD\u5F00,WAN\u53E3\u65E0\u7F51\u7EDC\u8FDE\u63A5",
          messageStyle: {
            textAlign: 'center',
            color: '#000'
          },
          buttons: [{
            text: '确定',
            style: {
              color: '#000'
            },
            callback: function callback(_) {
              return _this6.setState({
                wanPortErrAlert: false
              });
            }
          }],
          onDismiss: function onDismiss(_) {
            _this6.state.wanPortErrAlert = false;
          }
        }), _react.default.createElement(_Dialog.MessageDialog, {
          visible: this.state.switchModeSuccessAlert,
          title: "\u8BBE\u7F6E\u6210\u529F",
          message: "\u6A21\u5F0F\u5207\u6362\u540E\uFF0C\u9884\u8BA14-5\u5206\u949F\u540E\u6062\u590D\u7F51\u7EDC\u8FDE\u63A5",
          messageStyle: {
            textAlign: 'center',
            color: '#000'
          },
          buttons: [{
            text: '确定',
            style: {
              color: '#000'
            },
            callback: function callback(_) {
              _this6.setState({
                switchModeSuccessAlert: false
              });

              _Package.default.exit();
            }
          }],
          onDismiss: function onDismiss(_) {
            _this6.state.switchModeSuccessAlert = false;

            _Package.default.exit();
          }
        }));
      }
    }, {
      key: "_requestWanInfo",
      value: function _requestWanInfo(isFirstRequest) {
        var _this7 = this;

        var deviceId, method, paramsDic, commonLocalPath, api, _api;

        return _regenerator.default.async(function _requestWanInfo$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                deviceId = _device.Device.deviceID.replace("miwifi.", "");
                method = 'GET';
                paramsDic = {
                  method: method,
                  params: {
                    deviceId: deviceId
                  }
                };

                if (!this.routerInfoManager.isConnectCurrentManagedRouter()) {
                  _context5.next = 16;
                  break;
                }

                if (!(this.routerInfoManager.getCurrentRouterToken().length === 0)) {
                  _context5.next = 7;
                  break;
                }

                this.routerInfoManager.tryToRefreshToken(1);
                return _context5.abrupt("return");

              case 7:
                this.setState({
                  loadingWifiInfo: true
                });
                _context5.next = 10;
                return _regenerator.default.awrap((0, _API.getApiCommonLocalPath)());

              case 10:
                commonLocalPath = _context5.sent;
                api = commonLocalPath + "/;stok=" + this.routerInfoManager.getCurrentRouterToken() + _API.default.net_work_mode.wan_info.local;

                if (this.isWorkInRelay()) {
                  api = 'http://' + this.currentRelayIp() + '/cgi-bin/luci/;stok=' + this.routerInfoManager.getCurrentRouterToken() + _API.default.net_work_mode.wan_info.local;
                }

                _miot.Service.callSpecificAPI(api, 'get', {
                  "deviceId": deviceId
                }).then(function (res) {
                  _this7.setState({
                    loadingWifiInfo: false
                  });

                  _this7.orinizeWaninfoData(res);
                }).catch(function (e) {
                  _this7.setState({
                    loadingWifiInfo: false
                  });

                  if (isFirstRequest) {
                    _CommonUtils.default.ShowToastBottom('获取路由器上网模式信息失败');

                    _this7.props.navigation.goBack();
                  }
                });

                _context5.next = 19;
                break;

              case 16:
                _api = _API.default.net_work_mode.wan_info.remote;
                this.setState({
                  loadingWifiInfo: true
                });

                _miot.Service.callSmartHomeAPI(_api, paramsDic).then(function (res) {
                  _this7.setState({
                    loadingWifiInfo: false
                  });

                  _this7.orinizeWaninfoData(res);
                }).catch(function (e) {
                  _this7.setState({
                    loadingWifiInfo: false
                  });

                  if (isFirstRequest) {
                    _CommonUtils.default.ShowToastBottom('获取路由器上网模式信息失败');

                    _this7.props.navigation.goBack();
                  }
                });

              case 19:
              case "end":
                return _context5.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "orinizeWaninfoData",
      value: function orinizeWaninfoData(res) {
        var result = typeof res === "object" ? res : JSON.parse(res);
        var detail = result.info.details;
        var mode;

        if (detail.wanType == 'dhcp') {
          mode = _NetWorkModeConstant.NetModeType.Dhcp;
        } else if (detail.wanType == 'pppoe') {
          mode = _NetWorkModeConstant.NetModeType.Pppoe;
        } else if (detail.wanType == 'static') {
          mode = _NetWorkModeConstant.NetModeType.Static;
        }

        var gateway = _CommonUtils.default.isNull(result.info.gateWay) ? '' : result.info.gateWay;
        var ipv4Info = result.info.ipv4;
        var ip = _CommonUtils.default.isNull(ipv4Info) ? '' : ipv4Info[0].ip;
        this.setState({
          currentGateWay: gateway,
          currentIp: ip,
          currentMode: mode,
          data: result
        });
      }
    }, {
      key: "_requestToken",
      value: function _requestToken() {
        var _this8 = this;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceId: deviceId
          }
        };
        var api = _API.default.router_token.remote;
        this.setState({
          loadingWifiInfo: true
        });

        _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
          if (res.code == 0) {
            _this8.hadRequestRouterToken = true;

            _this8.setState({
              routerToken: res.token
            });

            if (_this8.state.currentMode == _NetWorkModeConstant.NetModeType.Pppoe) {}
          }
        }).catch(function (e) {});
      }
    }, {
      key: "_requestPppoeStatus",
      value: function _requestPppoeStatus() {
        var _this9 = this;

        var deviceId, method, paramsDic, commonLocalPath, api, _api2;

        return _regenerator.default.async(function _requestPppoeStatus$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                if (!this.isRequestingPppoeStatus) {
                  _context6.next = 2;
                  break;
                }

                return _context6.abrupt("return");

              case 2:
                this.isRequestingPppoeStatus = true;
                deviceId = _device.Device.deviceID.replace("miwifi.", "");
                method = 'GET';
                paramsDic = {
                  method: method,
                  params: {
                    deviceId: deviceId
                  }
                };

                if (!this.routerInfoManager.isConnectCurrentManagedRouter()) {
                  _context6.next = 17;
                  break;
                }

                if (!(this.routerInfoManager.getCurrentRouterToken().length === 0)) {
                  _context6.next = 9;
                  break;
                }

                return _context6.abrupt("return");

              case 9:
                _context6.next = 11;
                return _regenerator.default.awrap((0, _API.getApiCommonLocalPath)());

              case 11:
                commonLocalPath = _context6.sent;
                api = commonLocalPath + "/;stok=" + this.routerInfoManager.getCurrentRouterToken() + _API.default.net_work_mode.router_pppoe_status.local;

                if (this.isWorkInRelay()) {
                  api = 'http://' + this.currentRelayIp() + '/cgi-bin/luci/;stok=' + this.routerInfoManager.getCurrentRouterToken() + _API.default.net_work_mode.router_pppoe_status.local;
                }

                _miot.Service.callSpecificAPI(api, 'get', {
                  "deviceId": deviceId
                }).then(function (res) {
                  _this9.isRequestingPppoeStatus = false;

                  _this9._pppoeStatusHandler(res);
                }).catch(function (e) {
                  _this9.isRequestingPppoeStatus = false;
                  _this9.isDialingHappened = false;
                });

                _context6.next = 19;
                break;

              case 17:
                _api2 = _API.default.net_work_mode.router_pppoe_status.remote;

                _miot.Service.callSmartHomeAPI(_api2, paramsDic).then(function (res) {
                  _this9.isRequestingPppoeStatus = false;

                  _this9._pppoeStatusHandler(res);
                }).catch(function (e) {
                  _this9.isRequestingPppoeStatus = false;
                });

              case 19:
              case "end":
                return _context6.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "_stopPppoeDial",
      value: function _stopPppoeDial() {
        var _this10 = this;

        var deviceId, method, paramsDic, commonLocalPath, api, _api3;

        return _regenerator.default.async(function _stopPppoeDial$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                deviceId = _device.Device.deviceID.replace("miwifi.", "");
                method = 'GET';
                paramsDic = {
                  method: method,
                  params: {
                    deviceId: deviceId
                  }
                };

                if (!this.routerInfoManager.isConnectCurrentManagedRouter()) {
                  _context7.next = 14;
                  break;
                }

                if (!(this.routerInfoManager.getCurrentRouterToken().length === 0)) {
                  _context7.next = 6;
                  break;
                }

                return _context7.abrupt("return");

              case 6:
                _context7.next = 8;
                return _regenerator.default.awrap((0, _API.getApiCommonLocalPath)());

              case 8:
                commonLocalPath = _context7.sent;
                api = commonLocalPath + "/;stok=" + this.routerInfoManager.getCurrentRouterToken() + _API.default.net_work_mode.router_pppoe_stop.local;

                if (this.isWorkInRelay()) {
                  api = 'http://' + this.currentRelayIp() + '/cgi-bin/luci/;stok=' + this.routerInfoManager.getCurrentRouterToken() + _API.default.net_work_mode.router_pppoe_stop.local;
                }

                _miot.Service.callSpecificAPI(api, 'get', {
                  "deviceId": deviceId
                }).then(function (res) {
                  _this10.isDialingHappened = false;
                }).catch(function (e) {
                  _this10.isDialingHappened = false;

                  _CommonUtils.default.ShowToastCenter('拨号失败,请检查宽带账号');
                });

                _context7.next = 16;
                break;

              case 14:
                _api3 = _API.default.net_work_mode.router_pppoe_stop.remote;

                _miot.Service.callSmartHomeAPI(_api3, paramsDic).then(function (res) {}).catch(function (e) {});

              case 16:
              case "end":
                return _context7.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "_pppoeStatusHandler",
      value: function _pppoeStatusHandler(statusInfo) {
        var pppoeStatus = typeof statusInfo === "object" ? statusInfo.status : JSON.parse(statusInfo).status;

        if (pppoeStatus != _NetWorkModeConstant.MiRouterPppoeDialingStatus.Dialing) {
          clearTimeout(this.timerPppoe);

          if (pppoeStatus == _NetWorkModeConstant.MiRouterPppoeDialingStatus.Error) {
            if (this.isDialingHappened) {
              this._stopPppoeDial();
            }
          } else if (pppoeStatus == _NetWorkModeConstant.MiRouterPppoeDialingStatus.Success) {
            if (this.isDialingHappened) {
              this._requestWanInfo(false);
            }
          }
        }
      }
    }, {
      key: "_gotoModeSetting",
      value: function _gotoModeSetting() {
        if (!this.routerInfoManager.isConnectCurrentManagedRouter()) {
          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.notConnectRouter);

          return;
        }

        var currentMode = this._getCurrentMode();

        if (currentMode === _NetWorkModeConstant.NetModeType.Dhcp) {
          this._gotoDhcp();
        } else if (currentMode === _NetWorkModeConstant.NetModeType.Pppoe) {
          this._gotoPppoe();
        } else if (currentMode === _NetWorkModeConstant.NetModeType.Static) {
          this._gotoStaticIP();
        } else if (currentMode === _NetWorkModeConstant.NetModeType.WireRelay) {
          this._gotoWireRelay();
        } else {
          this._gotoWirelessRelay();
        }
      }
    }, {
      key: "_gotoWireRelay",
      value: function _gotoWireRelay() {
        if (this.state.isSupportMesh && this.state.isMeshMode) {
          _CommonUtils.default.ShowToastCenter('为确保使用体验，Mesh模式下不支持切换为中继模式');

          return;
        }

        this.props.navigation.navigate('NetModeWireRelay', {
          title: '有线中继'
        });
      }
    }, {
      key: "_gotoWirelessRelay",
      value: function _gotoWirelessRelay() {
        if (this.state.isSupportMesh && this.state.isMeshMode) {
          _CommonUtils.default.ShowToastCenter('为确保使用体验，Mesh模式下不支持切换为中继模式');

          return;
        }

        if (!_RouterInfoHelper.default.sharedInstance().isConnectCurrentManagedRouter()) {
          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.notConnectRouter);

          return;
        }

        this.props.navigation.navigate('NetModeWirelessRelay', {
          title: '无线中继'
        });
      }
    }, {
      key: "_gotoPppoe",
      value: function _gotoPppoe() {
        var _this11 = this;

        this.props.navigation.navigate('NetModePppoe', {
          title: '宽带上网',
          wanInfo: this.state.data,
          callback: function callback(success) {
            _this11.setState({
              currentMode: _NetWorkModeConstant.NetModeType.Pppoe
            });

            _this11._requestWanInfo(false);
          }
        });
      }
    }, {
      key: "disableRelayMode",
      value: function disableRelayMode(isWireRelay) {
        if (this.state.isSupportMesh && this.state.isMeshMode) {
          _CommonUtils.default.ShowToastCenter('为确保使用体验，Mesh模式下不支持切换为普通路由模式');

          return;
        }

        this.setState({
          loadingWifiInfo: true
        });

        if (isWireRelay) {
          this.disableWireRelay();
        } else {
          this.disableWireLessRelay();
        }
      }
    }, {
      key: "disableWireRelay",
      value: function disableWireRelay() {
        var _this12 = this;

        var deviceId, method, paramsDic, commonLocalPath, api;
        return _regenerator.default.async(function disableWireRelay$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                deviceId = _device.Device.deviceID.replace("miwifi.", "");
                method = 'GET';
                paramsDic = {
                  method: method,
                  params: {
                    deviceId: deviceId
                  }
                };

                if (!this.routerInfoManager.isConnectCurrentManagedRouter()) {
                  _context8.next = 15;
                  break;
                }

                if (!(this.routerInfoManager.getCurrentRouterToken().length === 0)) {
                  _context8.next = 9;
                  break;
                }

                this.setState({
                  loadingWifiInfo: false
                });
                this.routerInfoManager.refreshRouterToken();

                _CommonUtils.default.ShowToastCenter('设置失败，请重试');

                return _context8.abrupt("return");

              case 9:
                _context8.next = 11;
                return _regenerator.default.awrap((0, _API.getApiCommonLocalPath)());

              case 11:
                commonLocalPath = _context8.sent;
                api = commonLocalPath + "/;stok=" + this.routerInfoManager.getCurrentRouterToken() + _API.default.net_work_mode.disable_lan_ap.local;

                if (this.isWorkInRelay()) {
                  api = 'http://' + this.currentRelayIp() + '/cgi-bin/luci/;stok=' + this.routerInfoManager.getCurrentRouterToken() + _API.default.net_work_mode.disable_lan_ap.local;
                }

                _miot.Service.callSpecificAPI(api, 'get', {
                  "deviceId": deviceId
                }).then(function (res) {
                  _this12.setState({
                    loadingWifiInfo: false
                  });

                  var result = typeof res === "object" ? res : JSON.parse(res);

                  if (result.code === 0 && !_CommonUtils.default.isNull(result.ip) && _CommonUtils.default.isValidIp(result.ip)) {
                    _this12.setState({
                      switchModeSuccessAlert: true
                    });
                  } else if (result.code === -1001) {
                    _this12.setState({
                      switchModeSuccessAlert: true
                    });
                  } else {
                    _CommonUtils.default.ShowToastCenter('设置失败');
                  }
                }).catch(function (e) {
                  _this12.setState({
                    loadingWifiInfo: false
                  });

                  _CommonUtils.default.ShowToastCenter('设置失败');
                });

              case 15:
              case "end":
                return _context8.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "disableWireLessRelay",
      value: function disableWireLessRelay() {
        var _this13 = this;

        var deviceId, method, paramsDic, commonLocalPath, api;
        return _regenerator.default.async(function disableWireLessRelay$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                deviceId = _device.Device.deviceID.replace("miwifi.", "");
                method = 'GET';
                paramsDic = {
                  method: method,
                  params: {
                    deviceId: deviceId
                  }
                };

                if (!this.routerInfoManager.isConnectCurrentManagedRouter()) {
                  _context9.next = 15;
                  break;
                }

                if (!(this.routerInfoManager.getCurrentRouterToken().length === 0)) {
                  _context9.next = 9;
                  break;
                }

                _CommonUtils.default.ShowToastCenter('设置失败，请重试');

                this.setState({
                  loadingWifiInfo: false
                });
                this.routerInfoManager.refreshRouterToken();
                return _context9.abrupt("return");

              case 9:
                _context9.next = 11;
                return _regenerator.default.awrap((0, _API.getApiCommonLocalPath)());

              case 11:
                commonLocalPath = _context9.sent;
                api = commonLocalPath + "/;stok=" + this.routerInfoManager.getCurrentRouterToken() + _API.default.net_work_mode.disable_wifi_ap.local;

                if (this.isWorkInRelay()) {
                  api = 'http://' + this.currentRelayIp() + '/cgi-bin/luci/;stok=' + this.routerInfoManager.getCurrentRouterToken() + _API.default.net_work_mode.disable_wifi_ap.local;
                }

                _miot.Service.callSpecificAPI(api, 'get', {
                  "deviceId": deviceId
                }).then(function (res) {
                  _this13.setState({
                    loadingWifiInfo: false
                  });

                  var result = typeof res === "object" ? res : JSON.parse(res);

                  if (result.code === 0 && !_CommonUtils.default.isNull(result.ip) && _CommonUtils.default.isValidIp(result.ip)) {
                    _this13.setState({
                      switchModeSuccessAlert: true
                    });
                  } else if (result.code === -1001) {
                    _this13.setState({
                      switchModeSuccessAlert: true
                    });
                  } else {
                    _CommonUtils.default.ShowToastCenter('设置失败');
                  }
                }).catch(function (e) {
                  _this13.setState({
                    loadingWifiInfo: false
                  });

                  _this13.setState({
                    switchModeSuccessAlert: true
                  });
                });

              case 15:
              case "end":
                return _context9.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "_gotoDhcp",
      value: function _gotoDhcp() {
        var _this14 = this;

        this.props.navigation.navigate('NetModeDhcp', {
          title: '动态IP上网',
          wanInfo: this.state.data,
          callback: function callback(success) {
            _this14.timer = setTimeout(function () {
              _this14._requestWanInfo(false);
            }, 2500);
          }
        });
      }
    }, {
      key: "_gotoStaticIP",
      value: function _gotoStaticIP() {
        var _this15 = this;

        this.props.navigation.navigate('NetModeStaticIP', {
          title: '静态IP上网',
          wanInfo: this.state.data,
          callback: function callback(success) {
            _this15.timerStaticIp = setTimeout(function () {
              _this15._requestWanInfo(false);
            }, 2500);
          }
        });
      }
    }, {
      key: "_getAvilableModes",
      value: function _getAvilableModes() {
        var _this16 = this;

        var modes = [];

        var currentMode = this._getCurrentMode();

        if (_RouterInfoHelper.default.sharedInstance().isWorkingInRelayMode()) {
          modes.push({
            title: '普通路由模式',
            subtitle: '',
            onPress: function onPress(_) {
              return _this16.disableRelayMode(_RouterInfoHelper.default.sharedInstance().isWorkingInWireRelayMode());
            }
          });
        } else {
          if (currentMode !== _NetWorkModeConstant.NetModeType.Dhcp) {
            modes.push({
              title: '动态IP上网',
              subtitle: '自动从网络服务商获取IP地址(DHCP)',
              onPress: function onPress(_) {
                return _this16._gotoDhcp();
              }
            });
          }

          if (currentMode !== _NetWorkModeConstant.NetModeType.Pppoe) {
            modes.push({
              title: '宽带上网',
              subtitle: '输入宽带账号、密码，路由器进行虚拟拨号上网',
              onPress: function onPress(_) {
                return _this16._gotoPppoe();
              }
            });
          }

          if (currentMode !== _NetWorkModeConstant.NetModeType.Static) {
            modes.push({
              title: '静态IP上网',
              subtitle: '网络服务商提供固定IP地址，多适用于专用网络',
              onPress: function onPress(_) {
                return _this16._gotoStaticIP();
              }
            });
          }

          if (currentMode !== _NetWorkModeConstant.NetModeType.WireRelay && _device.Device.model != 'xiaomi.router.d01') {
            modes.push({
              title: '有线中继',
              subtitle: '通过有线延展信号源，与信号源同一子网',
              onPress: function onPress(_) {
                return _this16._gotoWireRelay();
              }
            });
          }

          if (currentMode !== _NetWorkModeConstant.NetModeType.WirelessRelay && _RouterInfoHelper.default.sharedInstance().checkCurrentCapality(_RouterInfoHelper.RouterCapality.isSupportWirelessRelay)) {
            modes.push({
              title: '无线中继',
              subtitle: '通过无线延展信号源，与信号源同一子网',
              onPress: function onPress(_) {
                return _this16._gotoWirelessRelay();
              }
            });
          }
        }

        return modes;
      }
    }, {
      key: "isWorkInRelay",
      value: function isWorkInRelay() {
        return _RouterInfoHelper.default.sharedInstance().isWorkingInRelayMode();
      }
    }, {
      key: "currentRelayIp",
      value: function currentRelayIp() {
        return _RouterInfoHelper.default.sharedInstance().getCurRelayIp();
      }
    }, {
      key: "_getCurrentMode",
      value: function _getCurrentMode() {
        return this.state.currentMode;
      }
    }, {
      key: "_getCurrentModeName",
      value: function _getCurrentModeName() {
        if (this.state.currentMode === _NetWorkModeConstant.NetModeType.Dhcp) {
          return '动态IP上网';
        } else if (this.state.currentMode === _NetWorkModeConstant.NetModeType.Pppoe) {
          return '宽带上网';
        } else if (this.state.currentMode === _NetWorkModeConstant.NetModeType.Static) {
          return '静态IP上网';
        } else if (this.state.currentMode === _NetWorkModeConstant.NetModeType.WirelessRelay) {
          return '无线中继';
        } else if (this.state.currentMode === _NetWorkModeConstant.NetModeType.WireRelay) {
          return '有线中继';
        } else {
          return '未知';
        }
      }
    }, {
      key: "_getIpAndGatewayText",
      value: function _getIpAndGatewayText() {
        return '当前连接正常 IP:' + this.state.currentIp + '  网关:' + this.state.currentGateWay;
      }
    }, {
      key: "_getIpText",
      value: function _getIpText() {
        return 'WAN IP: ' + this.state.currentIp;
      }
    }, {
      key: "_getGatewayText",
      value: function _getGatewayText() {
        return 'WAN 网关: ' + this.state.currentGateWay;
      }
    }, {
      key: "isRelayMode",
      value: function isRelayMode() {
        return this.state.currentMode === _NetWorkModeConstant.NetModeType.WirelessRelay || this.state.currentMode === _NetWorkModeConstant.NetModeType.WireRelay;
      }
    }]);
    return NetworkMode;
  }(_react.default.Component);

  exports.default = NetworkMode;

  NetworkMode.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: null
    };
  };

  function newFunction(mode) {}
},10625,[14308,14305,14674,14320,14323,14371,14377,14386,10284,10338,10755,10035,10074,10332,10297,10033,10628,10935,10064,10076,10040,10055,10056,10067]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.MiRouterWanPort = exports.MiRouterPppoeDialingStatus = exports.MiRouterDhcpType = exports.NetModeType = undefined;
  var NetModeType = {
    Unknown: -1,
    Dhcp: 0,
    Pppoe: 1,
    Static: 2,
    WirelessRelay: 3,
    WireRelay: 4
  };
  exports.NetModeType = NetModeType;
  var MiRouterDhcpType = {
    None: 0,
    Auto: 1,
    Manual: 2
  };
  exports.MiRouterDhcpType = MiRouterDhcpType;
  var MiRouterPppoeDialingStatus = {
    Dialing: 1,
    Success: 2,
    Error: 3,
    Stopped: 4
  };
  exports.MiRouterPppoeDialingStatus = MiRouterPppoeDialingStatus;
  var MiRouterWanPort = {
    Two_Point_FiveG: {
      index: 0,
      name: '2.5G',
      title: '2.5G网口',
      changeTip: '即将切换WAN口至1G网口，2.5G网口将作为LAN口，（推荐使用2.5G网口作为LAN口）,切换完成后路由器网络将会重启，是否确定切换？'
    },
    GE: {
      index: 1,
      name: '1G',
      title: '1G网口',
      changeTip: '即将切换WAN口至2.5G网口，1G网口将作为LAN口，切换完成后路由器网络将会重启，是否确定切换？'
    }
  };
  exports.MiRouterWanPort = MiRouterWanPort;
},10628,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[8]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[9]);

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _miot = _$$_REQUIRE(_dependencyMap[12]);

  var _Devices = _$$_REQUIRE(_dependencyMap[13]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _device = _$$_REQUIRE(_dependencyMap[16]);

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _Package = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _Host = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var NetModeWireRelay = function (_React$Component) {
    (0, _inherits2.default)(NetModeWireRelay, _React$Component);

    function NetModeWireRelay(props) {
      var _this;

      (0, _classCallCheck2.default)(this, NetModeWireRelay);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NetModeWireRelay).call(this, props));
      _this.state = {
        waitingActivityShow: false,
        switchModeSuccessAlert: false
      };
      return _this;
    }

    (0, _createClass2.default)(NetModeWireRelay, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, {
          style: styles.topText
        }, "\u6709\u7EBF\u4E2D\u7EE7\uFF0C\u53EF\u6709\u6548\u6269\u5C55\u6E90\u4FE1\u53F7\uFF0C\u4E0E\u4FE1\u53F7\u4FDD\u6301\u540C\u4E00\u7F51\u6BB5\uFF0C\u8FDE\u63A5\u7684\u7EC8\u7AEF\u65E0\u7F1D\u8BBF\u95EE\u4E3B\u7F51\u7684\u6570\u636E\uFF0C\u4F46\u5207\u6362\u6709\u7EBF\u4E2D\u7EE7\u6A21\u5F0F\u540E\uFF0C\u90E8\u5206\u529F\u80FD\u5C06\u4E0D\u53EF\u7528\u3002"), _react.default.createElement(_reactNative.Text, {
          style: styles.midText
        }, "\u4F8B\u5982\uFF1A"), _react.default.createElement(_reactNative.View, {
          style: styles.separator
        }), _react.default.createElement(_reactNative.View, {
          style: styles.bottomTextContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.bottomText
        }, "\xB7\u667A\u80FD\u9650\u901F"), _react.default.createElement(_reactNative.Text, {
          style: styles.bottomText
        }, "\xB7\u8BBF\u5BA2WiFi"), _react.default.createElement(_reactNative.Text, {
          style: styles.bottomText
        }, "\xB7\u7F51\u7EDC\u7C7B\u6216\u52A0\u901F\u7C7B\u63D2\u4EF6"))), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.rkbuttonItem,
          onPress: function onPress(_) {
            return _this2._onButtonPressed();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.viewRkButton
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.buttonText
        }, "\u786E\u8BA4"))), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: this.state.waitingActivityShow,
          message: "\u6B63\u5728\u4FDD\u5B58\u8BBE\u7F6E...",
          timeout: 3000
        }), _react.default.createElement(_Dialog.MessageDialog, {
          visible: this.state.switchModeSuccessAlert,
          title: "\u8BBE\u7F6E\u6210\u529F",
          message: "\u6A21\u5F0F\u5207\u6362\u540E\uFF0C\u9884\u8BA14-5\u5206\u949F\u540E\u6062\u590D\u7F51\u7EDC\u8FDE\u63A5",
          messageStyle: {
            textAlign: 'center',
            color: '#000'
          },
          buttons: [{
            text: '确定',
            style: {
              color: '#000'
            },
            callback: function callback(_) {
              _this2.setState({
                switchModeSuccessAlert: false
              });

              _Package.default.exit();
            }
          }],
          onDismiss: function onDismiss(_) {
            _this2.state.switchModeSuccessAlert = false;

            _Package.default.exit();
          }
        }));
      }
    }, {
      key: "_onButtonPressed",
      value: function _onButtonPressed() {
        if (_RouterInfoHelper.default.sharedInstance().isWorkingInWireRelayMode()) {
          this.props.navigation.goBack();
          return;
        }

        this.setState({
          waitingActivityShow: true
        });

        this._setLanAp();
      }
    }, {
      key: "getGateway",
      value: function getGateway() {
        return _regenerator.default.async(function getGateway$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", _miot.System.network.getGatewayIpAddress().then(function (res) {
                  return res.data.ipAddress;
                }).catch(function (error) {
                  return 'miwifi.com';
                }));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        });
      }
    }, {
      key: "_setLanAp",
      value: function _setLanAp() {
        var _this3 = this;

        var deviceId, method, paramsDic, token, isRelay, gateway, relayIp, prefix, api, speMethod;
        return _regenerator.default.async(function _setLanAp$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                deviceId = _device.Device.deviceID.replace("miwifi.", "");
                method = 'POST';
                paramsDic = {
                  method: method,
                  params: {
                    deviceId: deviceId
                  }
                };
                token = _RouterInfoHelper.default.sharedInstance().getCurrentRouterToken();
                isRelay = _RouterInfoHelper.default.sharedInstance().isWorkingInWirelessRelayMode();
                _context2.next = 7;
                return _regenerator.default.awrap(this.getGateway());

              case 7:
                gateway = _context2.sent;
                relayIp = _RouterInfoHelper.default.sharedInstance().getCurRelayIp();
                prefix = isRelay ? relayIp : gateway;
                api = 'http://' + prefix + '/cgi-bin/luci/;stok=' + token + _API.default.net_work_mode.set_lan_ap.local;
                speMethod = _Host.default.isIOS ? 'get' : 'post';

                _miot.Service.callSpecificAPI(api, speMethod, paramsDic.params).then(function (res) {
                  var result = typeof res === "object" ? res : JSON.parse(res);
                  var code = result.code;
                  var ip = result.ip;

                  _this3.setState({
                    waitingActivityShow: false
                  });

                  if (result.code == 0) {
                    if (!_CommonUtils.default.isTextEmpty(ip) && _CommonUtils.default.isValidIp(ip)) {
                      _this3.setState({
                        switchModeSuccessAlert: true
                      });
                    } else {
                      _CommonUtils.default.ShowToastBottom('切换至有线中继模式失败');
                    }
                  } else if (result.code == -1011) {
                    _this3.setState({
                      switchModeSuccessAlert: true
                    });
                  } else {
                    _CommonUtils.default.ShowToastBottom('切换至有线中继模式失败');
                  }
                }).catch(function (e) {
                  _this3.setState({
                    waitingActivityShow: false
                  });

                  _CommonUtils.default.ShowToastBottom('切换至有线中继模式失败');
                });

              case 13:
              case "end":
                return _context2.stop();
            }
          }
        }, null, this);
      }
    }]);
    return NetModeWireRelay;
  }(_react.default.Component);

  exports.default = NetModeWireRelay;

  NetModeWireRelay.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "light",
        title: "\u6709\u7EBF\u4E2D\u7EE7",
        style: {
          backgroundColor: '#1a1b2a'
        },
        onPressLeft: function onPressLeft(_) {
          return navigation.goBack();
        }
      })
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#ffffff'
    },
    topText: {
      paddingTop: 20,
      paddingLeft: 20,
      paddingRight: 20
    },
    midText: {
      paddingTop: 20,
      paddingLeft: 20,
      paddingRight: 20
    },
    separator: {
      marginTop: 10,
      marginLeft: 15,
      marginRight: 15,
      height: 1,
      backgroundColor: '#f1f1f1',
      width: _Devices.ScreenW - 30
    },
    bottomTextContainer: {
      marginTop: 10
    },
    bottomText: {
      paddingTop: 5,
      paddingLeft: 20,
      paddingRight: 20
    },
    rkbuttonItem: {
      position: "absolute",
      bottom: 20,
      paddingLeft: _Devices.ScreenW / 10,
      paddingRight: _Devices.ScreenW / 10
    },
    viewRkButton: {
      width: _Devices.ScreenW / 10 * 8,
      backgroundColor: '#4778FF',
      height: 44,
      borderRadius: 22,
      alignItems: "center",
      justifyContent: "center"
    },
    buttonText: {
      color: '#fff'
    }
  });
},10631,[14305,14674,14320,14323,14371,14377,14386,10284,10338,10755,10297,10033,10074,10067,10064,10040,10935,10076,10056,10035]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[9]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[10]);

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _miot = _$$_REQUIRE(_dependencyMap[13]);

  var _Devices = _$$_REQUIRE(_dependencyMap[14]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _device = _$$_REQUIRE(_dependencyMap[17]);

  var _API = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[18]));

  var _NetWorkModeConstant = _$$_REQUIRE(_dependencyMap[19]);

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _Host = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var NetModePppoe = function (_React$Component) {
    (0, _inherits2.default)(NetModePppoe, _React$Component);

    function NetModePppoe(props) {
      var _this;

      (0, _classCallCheck2.default)(this, NetModePppoe);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NetModePppoe).call(this, props));
      _this.state = {
        waitingActivityShow: false,
        loadingText: '',
        passwdInputSecurity: true,
        wanInfo: props.navigation.state.params.wanInfo,
        pppoeAccount: '',
        pppoePwd: '',
        pppoeAccountText: '',
        pppoePwdText: ''
      };
      return _this;
    }

    (0, _createClass2.default)(NetModePppoe, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var wanInfo = this.state.wanInfo;
        var pppoeInfo = wanInfo.info.details;

        if (!_CommonUtils.default.isNull(pppoeInfo)) {
          var pppoeAccount = pppoeInfo.username;
          var passwd = pppoeInfo.password;
          this.setState({
            pppoeAccount: pppoeAccount,
            pppoePwd: passwd,
            pppoeAccountText: pppoeAccount,
            pppoePwdText: passwd
          });
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        clearTimeout(this.timerPppoe);
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.itemContainer
        }, _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.itemText
        }, '宽带账号'), _react.default.createElement(_reactNative.TextInput, {
          style: styles.itemInput,
          placeholder: '请输入宽带账号',
          placeholderTextColor: "#ccc",
          defaultValue: this.state.pppoeAccountText,
          autoFocus: true,
          underlineColorAndroid: 'transparent',
          onChangeText: function onChangeText(text) {
            _this2.setState({
              pppoeAccountText: text
            });
          }
        })), _react.default.createElement(_Separator.default, {
          style: styles.separator
        }), _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.itemText
        }, '宽带密码'), _react.default.createElement(_reactNative.TextInput, {
          style: styles.itemInput,
          placeholder: '请输入宽带密码',
          placeholderTextColor: "#ccc",
          defaultValue: this.state.pppoePwdText,
          secureTextEntry: this.state.passwdInputSecurity,
          onChangeText: function onChangeText(text) {
            _this2.setState({
              pppoePwdText: text
            });
          }
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.itemImageContainer,
          onPress: function onPress(_) {
            return _this2._changePwdInputSecurity();
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.imageItem,
          source: this.state.passwdInputSecurity ? _$$_REQUIRE(_dependencyMap[22]) : _$$_REQUIRE(_dependencyMap[23])
        }))), _react.default.createElement(_Separator.default, {
          style: styles.separator
        })), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.buttonItem,
          onPress: function onPress(_) {
            return _this2._onButtonPressed();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.button
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.buttonText
        }, '确定'))), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: this.state.waitingActivityShow,
          message: this.state.loadingText
        }));
      }
    }, {
      key: "_onButtonPressed",
      value: function _onButtonPressed() {
        if (!this._isSettingValid(true)) {
          return;
        }

        if (!this._isSettingModified()) {
          this.props.navigation.goBack();
          return;
        }

        this.setState({
          waitingActivityShow: true,
          loadingText: '正在保存设置...'
        });

        this._setNewPppoeInfo();
      }
    }, {
      key: "_setNewPppoeInfo",
      value: function _setNewPppoeInfo() {
        var _this3 = this;

        var deviceId, method, paramsDic, params, commonLocalPath, api, specMethod;
        return _regenerator.default.async(function _setNewPppoeInfo$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                deviceId = _device.Device.deviceID.replace("miwifi.", "");
                method = 'POST';
                paramsDic = {
                  method: method,
                  params: {
                    deviceId: deviceId,
                    wanType: 'pppoe',
                    pppoeName: this._getEditAccout(),
                    pppoePwd: this.state.pppoePwdText
                  }
                };
                params = {
                  deviceId: deviceId,
                  wanType: 'pppoe',
                  pppoeName: this._getEditAccout(),
                  pppoePwd: this.state.pppoePwdText
                };
                _context.next = 6;
                return _regenerator.default.awrap((0, _API.getApiCommonLocalPath)());

              case 6:
                commonLocalPath = _context.sent;
                api = commonLocalPath + "/;stok=" + _RouterInfoHelper.default.sharedInstance().getCurrentRouterToken() + _API.default.net_work_mode.set_wan.local;
                specMethod = _Host.default.isIOS ? 'get' : 'post';

                _miot.Service.callSpecificAPI(api, specMethod, params).then(function (res) {
                  _this3.setState({
                    waitingActivityShow: false,
                    loadingText: ''
                  });

                  var result = typeof res === "object" ? res : JSON.parse(res);

                  if (result.code === 0) {
                    _this3.setState({
                      waitingActivityShow: true,
                      loadingText: '正在拨号'
                    });

                    _this3.isDialingHappened = true;
                    _this3.timerPppoe = setInterval(function () {
                      _this3._requestPppoeStatus();
                    }, 1500);
                  } else {
                    var msg = result.msg;
                    var errorMsg = '设置失败' + _CommonUtils.default.isTextEmpty(msg) ? '' : msg;

                    _CommonUtils.default.ShowToastBottom(errorMsg);
                  }
                }).catch(function (e) {
                  _this3.setState({
                    waitingActivityShow: false,
                    loadingText: ''
                  });

                  _CommonUtils.default.ShowToastBottom('设置失败');
                });

              case 10:
              case "end":
                return _context.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "_requestPppoeStatus",
      value: function _requestPppoeStatus() {
        var _this4 = this;

        var deviceId, method, paramsDic, token, commonLocalPath, api;
        return _regenerator.default.async(function _requestPppoeStatus$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!this.isRequestingPppoeStatus) {
                  _context2.next = 2;
                  break;
                }

                return _context2.abrupt("return");

              case 2:
                this.isRequestingPppoeStatus = true;
                deviceId = _device.Device.deviceID.replace("miwifi.", "");
                method = 'GET';
                paramsDic = {
                  method: method,
                  params: {
                    deviceId: deviceId
                  }
                };

                if (!_RouterInfoHelper.default.sharedInstance().isConnectCurrentManagedRouter()) {
                  _context2.next = 15;
                  break;
                }

                if (!(_RouterInfoHelper.default.sharedInstance().getCurrentRouterToken().length === 0)) {
                  _context2.next = 9;
                  break;
                }

                return _context2.abrupt("return");

              case 9:
                token = _RouterInfoHelper.default.sharedInstance().getCurrentRouterToken();
                _context2.next = 12;
                return _regenerator.default.awrap((0, _API.getApiCommonLocalPath)());

              case 12:
                commonLocalPath = _context2.sent;
                api = commonLocalPath + "/;stok=" + token + _API.default.net_work_mode.router_pppoe_status.local;

                _miot.Service.callSpecificAPI(api, 'get', {
                  "deviceId": deviceId
                }).then(function (res) {
                  _this4.isRequestingPppoeStatus = false;

                  _this4._pppoeStatusHandler(res);
                }).catch(function (e) {
                  _this4.isRequestingPppoeStatus = false;
                  _this4.isDialingHappened = false;
                });

              case 15:
              case "end":
                return _context2.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "_pppoeStatusHandler",
      value: function _pppoeStatusHandler(statusInfo) {
        var pppoeStatus = typeof statusInfo === "object" ? statusInfo.status : JSON.parse(statusInfo).status;

        if (pppoeStatus != _NetWorkModeConstant.MiRouterPppoeDialingStatus.Dialing) {
          clearTimeout(this.timerPppoe);

          if (pppoeStatus === _NetWorkModeConstant.MiRouterPppoeDialingStatus.Error) {
            if (this.isDialingHappened) {
              this._stopPppoeDial();
            }
          } else if (pppoeStatus === _NetWorkModeConstant.MiRouterPppoeDialingStatus.Success) {
            this.setState({
              waitingActivityShow: false,
              loadingText: ''
            });

            _CommonUtils.default.ShowToastBottom('设置成功');

            this.props.navigation.state.params.callback(true);
            this.props.navigation.goBack();
          } else {
            this.setState({
              waitingActivityShow: false,
              loadingText: ''
            });

            _CommonUtils.default.ShowToastCenter('拨号失败,请检查宽带账号');
          }
        }
      }
    }, {
      key: "_stopPppoeDial",
      value: function _stopPppoeDial() {
        var _this5 = this;

        var deviceId, method, paramsDic, token, commonLocalPath, api;
        return _regenerator.default.async(function _stopPppoeDial$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                deviceId = _device.Device.deviceID.replace("miwifi.", "");
                method = 'GET';
                paramsDic = {
                  method: method,
                  params: {
                    deviceId: deviceId
                  }
                };
                this.setState({
                  waitingActivityShow: false,
                  loadingText: ''
                });

                if (!_RouterInfoHelper.default.sharedInstance().isConnectCurrentManagedRouter()) {
                  _context3.next = 13;
                  break;
                }

                if (!(_RouterInfoHelper.default.sharedInstance().getCurrentRouterToken().length === 0)) {
                  _context3.next = 7;
                  break;
                }

                return _context3.abrupt("return");

              case 7:
                token = _RouterInfoHelper.default.sharedInstance().getCurrentRouterToken();
                _context3.next = 10;
                return _regenerator.default.awrap((0, _API.getApiCommonLocalPath)());

              case 10:
                commonLocalPath = _context3.sent;
                api = commonLocalPath + "/;stok=" + token + _API.default.net_work_mode.router_pppoe_stop.local;

                _miot.Service.callSpecificAPI(api, 'get', {
                  "deviceId": deviceId
                }).then(function (res) {
                  _this5.isDialingHappened = false;

                  _CommonUtils.default.ShowToastCenter('拨号失败,请检查宽带账号');
                }).catch(function (e) {
                  _this5.isDialingHappened = false;

                  _CommonUtils.default.ShowToastCenter('拨号失败,请检查宽带账号');
                });

              case 13:
              case "end":
                return _context3.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "_changePwdInputSecurity",
      value: function _changePwdInputSecurity() {
        var currentState = this.state.passwdInputSecurity;
        this.setState({
          passwdInputSecurity: !currentState
        });
      }
    }, {
      key: "_isSettingValid",
      value: function _isSettingValid(showToast) {
        if (_CommonUtils.default.isTextEmpty(this._getEditAccout())) {
          if (showToast) {
            _CommonUtils.default.ShowToastCenter('账号为空');
          }

          return false;
        }

        if (_CommonUtils.default.isTextEmpty(this.state.pppoePwdText)) {
          if (showToast) {
            _CommonUtils.default.ShowToastCenter('密码为空');
          }

          return false;
        }

        return true;
      }
    }, {
      key: "_isSettingModified",
      value: function _isSettingModified() {
        if (this._getCurrentWanType() == _NetWorkModeConstant.NetModeType.Pppoe) {
          if (this._isSettingValid(false)) {
            var editedAccount = this._getEditAccout();

            if (editedAccount == this.state.pppoeAccount && this.state.pppoePwdText == this.state.pppoePwd) {
              return false;
            } else {
              return true;
            }
          } else {
            return true;
          }
        } else {
          if (!_CommonUtils.default.isTextEmpty(this._getEditAccout()) || !_CommonUtils.default.isTextEmpty(this.state.pppoePwdText)) {
            return true;
          } else {
            return false;
          }
        }
      }
    }, {
      key: "_getEditAccout",
      value: function _getEditAccout() {
        var editAccount = this.state.pppoeAccountText.trim();
        return editAccount;
      }
    }, {
      key: "_getCurrentWanType",
      value: function _getCurrentWanType() {
        var mode = _NetWorkModeConstant.NetModeType.Unknown;

        if (_CommonUtils.default.isNull(this.state.wanInfo)) {
          return _NetWorkModeConstant.NetModeType.Unknown;
        } else {
          if (_CommonUtils.default.isNull(this.state.wanInfo)) {
            return _NetWorkModeConstant.NetModeType.Unknown;
          }
        }

        var detail = this.state.wanInfo.info.details;

        if (detail.wanType == 'dhcp') {
          mode = _NetWorkModeConstant.NetModeType.Dhcp;
        } else if (detail.wanType == 'pppoe') {
          mode = _NetWorkModeConstant.NetModeType.Pppoe;
        } else if (detail.wanType == 'static') {
          mode = _NetWorkModeConstant.NetModeType.Static;
        } else {
          mode = _NetWorkModeConstant.NetModeType.Unknown;
        }

        return mode;
      }
    }]);
    return NetModePppoe;
  }(_react.default.Component);

  exports.default = NetModePppoe;

  NetModePppoe.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "light",
        title: '宽带上网',
        style: {
          backgroundColor: '#1a1b2a'
        },
        onPressLeft: function onPressLeft(_) {
          return navigation.goBack();
        }
      })
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#ffffff'
    },
    itemContainer: {
      flexDirection: 'column',
      height: 102
    },
    item: {
      flexDirection: 'row',
      height: 50,
      justifyContent: 'flex-start',
      width: _Devices.ScreenW
    },
    itemText: {
      color: '#000',
      marginLeft: 20,
      marginTop: 15,
      justifyContent: "center",
      fontSize: 15
    },
    itemInput: {
      fontSize: 13,
      height: 50,
      width: _Devices.ScreenW - 45 - 20 - 20 - 100,
      marginStart: 10
    },
    itemImageContainer: {
      height: 34,
      width: 34,
      position: 'absolute',
      right: 15,
      marginTop: 8
    },
    imageItem: {
      height: 34,
      width: 34
    },
    separator: {
      marginLeft: 20,
      height: 1,
      backgroundColor: '#f1f1f1',
      width: _Devices.ScreenW - 20
    },
    buttonItem: {
      position: "absolute",
      bottom: 20,
      paddingLeft: _Devices.ScreenW / 10,
      paddingRight: _Devices.ScreenW / 10
    },
    button: {
      width: _Devices.ScreenW / 10 * 8,
      backgroundColor: '#4778FF',
      height: 44,
      borderRadius: 22,
      alignItems: "center",
      justifyContent: "center"
    },
    buttonText: {
      color: '#fff'
    }
  });
},10634,[14308,14305,14674,14320,14323,14371,14377,14386,10284,10338,10755,10297,10033,10074,10067,10332,10040,10935,10064,10628,10076,10035,10637,10640]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/common",
    "width": 68,
    "height": 68,
    "scales": [1],
    "hash": "d7faf915a4388b186037f666aebaa2ca",
    "name": "common_icon_pwd_off",
    "type": "png"
  });
},10637,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/common",
    "width": 68,
    "height": 68,
    "scales": [1],
    "hash": "2bfda9ae31c75aa30368d0a209d80489",
    "name": "common_icon_pwd_on",
    "type": "png"
  });
},10640,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[9]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[10]);

  var _ChoiceDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _ui = _$$_REQUIRE(_dependencyMap[12]);

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[14]);

  var _miot = _$$_REQUIRE(_dependencyMap[15]);

  var _Devices = _$$_REQUIRE(_dependencyMap[16]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _NetWorkModeConstant = _$$_REQUIRE(_dependencyMap[20]);

  var _device = _$$_REQUIRE(_dependencyMap[21]);

  var _API = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[22]));

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var _Host = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var NetModeDhcp = function (_React$Component) {
    (0, _inherits2.default)(NetModeDhcp, _React$Component);

    function NetModeDhcp(props) {
      var _this;

      (0, _classCallCheck2.default)(this, NetModeDhcp);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NetModeDhcp).call(this, props));
      _this.state = {
        actionSheetVisiabe: false,
        currentDhcpType: _NetWorkModeConstant.MiRouterDhcpType.None,
        originDhcpType: _NetWorkModeConstant.MiRouterDhcpType.None,
        currentSelectIndexArr: [0],
        selectedIndex: 0,
        dns1: '',
        dns2: '',
        dns1Text: '',
        dns2Text: '',
        wanInfo: props.navigation.state.params.wanInfo,
        changeLoading: false
      };
      return _this;
    }

    (0, _createClass2.default)(NetModeDhcp, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var showListItem = this.state.selectedIndex == 0 ? false : true;
        var isAutoMode = this.isAutoMode();
        var currentModeStr = this.getSelectedMode();
        var dns1 = this.state.dns1;
        var dns2 = this.state.dns2;
        var currentSelectIndexArr = this.state.currentSelectIndexArr;
        var selectedIndex = this.state.selectedIndex;
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_ListItem.ListItem, {
          title: '配置方式',
          value: currentModeStr,
          showDot: false,
          onPress: function onPress() {
            _this2._showActionSheet();
          }
        }), _react.default.createElement(_reactNative.View, {
          style: !isAutoMode ? styles.itemContainer : styles.itemContainerHidden
        }, _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.itemText
        }, 'DNS1'), _react.default.createElement(_reactNative.TextInput, {
          style: styles.itemInput,
          placeholder: '必填',
          placeholderTextColor: "#ccc",
          defaultValue: dns1,
          onChangeText: function onChangeText(text) {
            return _this2.setState({
              dns1Text: text
            });
          }
        })), _react.default.createElement(_Separator.default, {
          style: styles.separator
        }), _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.itemText
        }, 'DNS2'), _react.default.createElement(_reactNative.TextInput, {
          style: styles.itemInput,
          placeholder: '选填',
          placeholderTextColor: "#ccc",
          defaultValue: dns2,
          onChangeText: function onChangeText(text) {
            return _this2.setState({
              dns2Text: text
            });
          }
        })), _react.default.createElement(_Separator.default, {
          style: styles.separator
        })), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.buttonItem,
          onPress: function onPress(_) {
            return _this2._onButtonPressed();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.button
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.buttonText
        }, "\u786E\u5B9A"))), _react.default.createElement(_ChoiceDialog.default, {
          visible: this.state.actionSheetVisiabe,
          title: '配置方式',
          options: [{
            title: '自动(推荐)'
          }, {
            title: '手动'
          }],
          selectedIndexArray: currentSelectIndexArr,
          onDismiss: function onDismiss(_) {
            return _this2.onDismissActionSheet('1');
          },
          onSelect: function onSelect(result) {
            return _this2._selectedMode(result);
          }
        }), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: this.state.changeLoading,
          message: "\u8BBE\u7F6E\u4E2D\uFF0C\u8BF7\u7A0D\u540E..."
        }));
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var result = this.state.wanInfo;
        var detail = result.info.details;
        var manualDns = detail.dns;
        var isAuto = true;
        var dns1Str = '';
        var dns2Str = '';
        var selectedIndex = 0;

        if (detail.wanType == 'dhcp') {
          if (_CommonUtils.default.isNull(manualDns)) {
            isAuto = true;
            selectedIndex = 0;
          } else {
            if (manualDns.length > 0) {
              isAuto = false;
              dns1Str = manualDns[0];

              if (manualDns.length > 1) {
                dns2Str = manualDns[1];
              }

              selectedIndex = 1;
            } else {
              isAuto = true;
              selectedIndex = 0;
            }
          }
        } else {
          isAuto = true;
          selectedIndex = 0;
        }

        this.setState({
          originDhcpType: isAuto ? _NetWorkModeConstant.MiRouterDhcpType.Auto : _NetWorkModeConstant.MiRouterDhcpType.Manual,
          currentDhcpType: isAuto ? _NetWorkModeConstant.MiRouterDhcpType.Auto : _NetWorkModeConstant.MiRouterDhcpType.Manual,
          dns1: dns1Str,
          dns2: dns2Str,
          currentSelectIndexArr: selectedIndex == 0 ? [0] : [1],
          selectedIndex: selectedIndex,
          dns1Text: _CommonUtils.default.isTextEmpty(dns1Str) ? '' : dns1Str,
          dns2Text: _CommonUtils.default.isTextEmpty(dns2Str) ? '' : dns2Str
        });
      }
    }, {
      key: "_showActionSheet",
      value: function _showActionSheet() {
        this.setState({
          actionSheetVisiabe: true
        });
      }
    }, {
      key: "_onButtonPressed",
      value: function _onButtonPressed() {
        var _this3 = this;

        var deviceId, method, paramsDic, params, commonLocalPath, api, specMethod;
        return _regenerator.default.async(function _onButtonPressed$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (this.isSettingValid(true)) {
                  _context.next = 2;
                  break;
                }

                return _context.abrupt("return");

              case 2:
                if (this.isSettingModified()) {
                  _context.next = 5;
                  break;
                }

                this.props.navigation.goBack();
                return _context.abrupt("return");

              case 5:
                this.setState({
                  changeLoading: true
                });
                deviceId = _device.Device.deviceID.replace("miwifi.", "");
                method = 'POST';
                paramsDic = {
                  method: method,
                  params: {
                    deviceId: deviceId,
                    wanType: 'dhcp'
                  }
                };
                params = {
                  deviceId: deviceId,
                  wanType: 'dhcp'
                };

                if (!this.isAutoMode()) {
                  params.dns1 = this.state.dns1Text;

                  if (!_CommonUtils.default.isTextEmpty(this.state.dns2Text)) {
                    params.dns2 = this.state.dns2Text;
                  }
                }

                _context.next = 13;
                return _regenerator.default.awrap((0, _API.getApiCommonLocalPath)());

              case 13:
                commonLocalPath = _context.sent;
                api = commonLocalPath + "/;stok=" + _RouterInfoHelper.default.sharedInstance().getCurrentRouterToken() + _API.default.net_work_mode.set_wan.local;
                specMethod = _Host.default.isIOS ? 'get' : 'post';

                _miot.Service.callSpecificAPI(api, specMethod, params).then(function (res) {
                  var result = typeof res === "object" ? res : JSON.parse(res);

                  if (result.code == 0) {
                    _this3.setState({
                      changeLoading: false
                    });

                    _this3.props.navigation.state.params.callback(true);

                    _this3.props.navigation.goBack();
                  }
                }).catch(function (e) {
                  _this3.setState({
                    changeLoading: false
                  });

                  _CommonUtils.default.ShowToastBottom('设置失败');
                });

              case 17:
              case "end":
                return _context.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "handleResponsObject",
      value: function handleResponsObject(result) {
        alert(JSON.stringify(result));

        if (result.code == 0) {
          this.setState({
            changeLoading: false
          });
          this.props.navigation.state.params.callback(true);
          this.props.navigation.goBack();
        }
      }
    }, {
      key: "onDismissActionSheet",
      value: function onDismissActionSheet(param) {
        this.setState({
          actionSheetVisiabe: false
        });
      }
    }, {
      key: "_selectedMode",
      value: function _selectedMode(result) {
        var mode;
        var selectedIndexArray;
        var index;

        if (result == 0) {
          mode = _NetWorkModeConstant.MiRouterDhcpType.Auto;
          selectedIndexArray = [0];
          index = 0;
        } else {
          mode = _NetWorkModeConstant.MiRouterDhcpType.Manual;
          selectedIndexArray = [1];
          index = 1;
        }

        this.setState({
          currentDhcpType: mode,
          currentSelectIndexArr: selectedIndexArray,
          selectedIndex: index
        });
      }
    }, {
      key: "isSettingModified",
      value: function isSettingModified() {
        if (this._getCurrentWanType() == _NetWorkModeConstant.NetModeType.Dhcp) {
          if (this.isSettingValid(false)) {
            if (this.state.currentDhcpType != this.state.originDhcpType) {
              return true;
            } else {
              if (this.state.currentDhcpType == _NetWorkModeConstant.MiRouterDhcpType.Manual) {
                if (this.state.dns1 != this.state.dns1Text) {
                  return true;
                }

                if (_CommonUtils.default.isTextEmpty(this.state.dns2)) {
                  return !_CommonUtils.default.isTextEmpty(this.state.dns2Text);
                } else {
                  if (_CommonUtils.default.isTextEmpty(this.state.dns2Text)) {
                    return true;
                  } else {
                    return this.state.dns2 != this.state.dns2Text;
                  }
                }
              }
            }
          } else {
            return true;
          }
        } else {
          if (this.state.originDhcpType != _NetWorkModeConstant.MiRouterDhcpType.None) {
            return true;
          }
        }

        return false;
      }
    }, {
      key: "isSettingValid",
      value: function isSettingValid(showToast) {
        if (this.state.currentDhcpType == _NetWorkModeConstant.MiRouterDhcpType.None) {
          if (showToast) {
            _reactNativeRootToast.default.show("配置方式未设置");
          }

          return false;
        }

        if (!this.isAutoMode()) {
          if (_CommonUtils.default.isTextEmpty(this.state.dns1Text)) {
            if (showToast) {
              _reactNativeRootToast.default.show("DNS1为空");
            }

            return false;
          }

          if (!_CommonUtils.default.isValidIp(this.state.dns1Text)) {
            if (showToast) {
              _reactNativeRootToast.default.show("DNS1不合法");
            }

            return false;
          }

          if (!_CommonUtils.default.isTextEmpty(this.state.dns2Text)) {
            if (!_CommonUtils.default.isValidIp(this.state.dns2Text)) {
              if (showToast) {
                _reactNativeRootToast.default.show("DNS2不合法");
              }

              return false;
            }
          }
        }

        return true;
      }
    }, {
      key: "isAutoMode",
      value: function isAutoMode() {
        return this.state.currentDhcpType != _NetWorkModeConstant.MiRouterDhcpType.Manual;
      }
    }, {
      key: "getOriginDhcpMode",
      value: function getOriginDhcpMode() {}
    }, {
      key: "getSelectedMode",
      value: function getSelectedMode() {
        if (this.state.currentDhcpType == _NetWorkModeConstant.MiRouterDhcpType.None) {
          return '请选择配置方式';
        }

        if (this.isAutoMode()) {
          return '自动(推荐)';
        } else {
          return '手动';
        }
      }
    }, {
      key: "_getCurrentWanType",
      value: function _getCurrentWanType() {
        var mode;

        if (_CommonUtils.default.isNull(this.state.wanInfo)) {
          return _NetWorkModeConstant.NetModeType.Unknown;
        } else {
          if (_CommonUtils.default.isNull(this.state.wanInfo)) {
            return _NetWorkModeConstant.NetModeType.Unknown;
          }
        }

        var detail = this.state.wanInfo.info.details;

        if (detail.wanType == 'dhcp') {
          mode = _NetWorkModeConstant.NetModeType.Dhcp;
        } else if (detail.wanType == 'pppoe') {
          mode = _NetWorkModeConstant.NetModeType.Pppoe;
        } else if (detail.wanType == 'static') {
          mode = _NetWorkModeConstant.NetModeType.Static;
        } else {
          mode = _NetWorkModeConstant.NetModeType.Unknown;
        }

        return mode;
      }
    }]);
    return NetModeDhcp;
  }(_react.default.Component);

  exports.default = NetModeDhcp;

  NetModeDhcp.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "light",
        title: "\u52A8\u6001IP\u4E0A\u7F51",
        style: {
          backgroundColor: '#1a1b2a'
        },
        onPressLeft: function onPressLeft(_) {
          return navigation.goBack();
        }
      })
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#ffffff'
    },
    itemContainer: {
      flexDirection: 'column',
      height: 102
    },
    itemContainerHidden: {
      flexDirection: 'column',
      height: 102,
      opacity: 0
    },
    item: {
      flexDirection: 'row',
      height: 50
    },
    itemText: {
      color: '#000',
      marginLeft: 20,
      marginTop: 15,
      justifyContent: "center",
      fontSize: 15
    },
    itemInput: {
      marginLeft: 20,
      marginRight: 45,
      color: '#333333',
      fontSize: 13,
      width: _Devices.ScreenW - 45 - 20 - 20,
      paddingLeft: 5,
      height: 50
    },
    separator: {
      marginLeft: 20,
      height: 1,
      backgroundColor: '#f1f1f1',
      width: _Devices.ScreenW - 20
    },
    buttonItem: {
      position: "absolute",
      bottom: 20,
      paddingLeft: _Devices.ScreenW / 10,
      paddingRight: _Devices.ScreenW / 10
    },
    button: {
      width: _Devices.ScreenW / 10 * 8,
      backgroundColor: '#4778FF',
      height: 44,
      borderRadius: 22,
      alignItems: "center",
      justifyContent: "center"
    },
    buttonText: {
      color: '#fff'
    }
  });
},10643,[14308,14305,14674,14320,14323,14371,14377,14386,10284,10338,10755,10734,10230,10297,10033,10074,10067,10332,10040,10013,10628,10935,10064,10076,10035]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[9]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[10]);

  var _ChoiceDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[13]);

  var _miot = _$$_REQUIRE(_dependencyMap[14]);

  var _Devices = _$$_REQUIRE(_dependencyMap[15]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _NetWorkModeConstant = _$$_REQUIRE(_dependencyMap[18]);

  var _device = _$$_REQUIRE(_dependencyMap[19]);

  var _API = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[20]));

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _Host = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var NetModeStaticIp = function (_React$Component) {
    (0, _inherits2.default)(NetModeStaticIp, _React$Component);

    function NetModeStaticIp(props) {
      var _this;

      (0, _classCallCheck2.default)(this, NetModeStaticIp);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NetModeStaticIp).call(this, props));
      _this.state = {
        wanInfo: props.navigation.state.params.wanInfo,
        ip: '',
        ipMask: '',
        gateway: '',
        dns1: '',
        dns2: '',
        ipText: '',
        ipMaskText: '',
        gatewayText: '',
        dns1Text: '',
        dns2Text: '',
        waitingActivityShow: false
      };
      return _this;
    }

    (0, _createClass2.default)(NetModeStaticIp, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var wanInfo = this.state.wanInfo;
        var staticIpInfo = wanInfo.info.details;

        if (!_CommonUtils.default.isNull(staticIpInfo)) {
          var manualDns = staticIpInfo.dns;
          var ip = staticIpInfo.ipaddr;
          var ipMask = staticIpInfo.netmask;
          var gateway = staticIpInfo.gateway;
          var dns1 = '';
          var dns2 = '';

          if (!_CommonUtils.default.isNull(manualDns)) {
            if (_CommonUtils.default.isObjectKindofArray(manualDns)) {
              dns1 = manualDns[0];

              if (manualDns.length > 1) {
                dns2 = manualDns[1];
              }
            }
          }

          this.setState({
            ip: ip,
            ipMask: ipMask,
            gateway: gateway,
            dns1: dns1,
            dns2: dns2,
            ipText: ip,
            ipMaskText: ipMask,
            gatewayText: gateway,
            dns1Text: dns1,
            dns2Text: dns2
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.itemContainer
        }, _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.itemText
        }, 'IP地址'), _react.default.createElement(_reactNative.TextInput, {
          style: styles.itemInput,
          placeholder: "\u5FC5\u586B",
          placeholderTextColor: "#ccc",
          defaultValue: this.state.ip,
          onChangeText: function onChangeText(text) {
            return _this2.setState({
              ipText: text
            });
          }
        })), _react.default.createElement(_Separator.default, {
          style: styles.separator
        }), _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.itemText
        }, '子网掩码'), _react.default.createElement(_reactNative.TextInput, {
          style: styles.itemInput,
          placeholder: "\u5FC5\u586B",
          placeholderTextColor: "#ccc",
          defaultValue: this.state.ipMask,
          onChangeText: function onChangeText(text) {
            return _this2.setState({
              ipMaskText: text
            });
          }
        })), _react.default.createElement(_Separator.default, {
          style: styles.separator
        }), _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.itemText
        }, '网关'), _react.default.createElement(_reactNative.TextInput, {
          style: styles.itemInput,
          placeholder: "\u5FC5\u586B",
          placeholderTextColor: "#ccc",
          defaultValue: this.state.gateway,
          onChangeText: function onChangeText(text) {
            return _this2.setState({
              gatewayText: text
            });
          }
        })), _react.default.createElement(_Separator.default, {
          style: styles.separator
        }), _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.itemText
        }, 'DNS1'), _react.default.createElement(_reactNative.TextInput, {
          style: styles.itemInput,
          placeholder: "\u5FC5\u586B",
          placeholderTextColor: "#ccc",
          defaultValue: this.state.dns1,
          onChangeText: function onChangeText(text) {
            return _this2.setState({
              dns1Text: text
            });
          }
        })), _react.default.createElement(_Separator.default, {
          style: styles.separator
        }), _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.itemText
        }, 'DNS2'), _react.default.createElement(_reactNative.TextInput, {
          style: styles.itemInput,
          placeholder: "\u9009\u586B",
          placeholderTextColor: "#ccc",
          defaultValue: this.state.dns2,
          onChangeText: function onChangeText(text) {
            return _this2.setState({
              dns2Text: text
            });
          }
        })), _react.default.createElement(_Separator.default, {
          style: styles.separator
        })), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.buttonItem,
          onPress: function onPress(_) {
            return _this2._onButtonPressed();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.button
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.buttonText
        }, '确定'))), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: this.state.waitingActivityShow,
          message: "\u6B63\u5728\u4FDD\u5B58\u8BBE\u7F6E..."
        }));
      }
    }, {
      key: "_onButtonPressed",
      value: function _onButtonPressed() {
        if (!this._isSetiingValid(true)) {
          return;
        }

        if (!this._isSetiingModified()) {
          this.props.navigation.goBack();
          return;
        }

        this.setState({
          waitingActivityShow: true
        });

        this._setNewStaticInfo();
      }
    }, {
      key: "_setNewStaticInfo",
      value: function _setNewStaticInfo() {
        var _this3 = this;

        var deviceId, method, paramsDic, params, commonLocalPath, api, specMethod;
        return _regenerator.default.async(function _setNewStaticInfo$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                deviceId = _device.Device.deviceID.replace("miwifi.", "");
                method = 'POST';
                paramsDic = {
                  method: method,
                  params: {
                    deviceId: deviceId,
                    wanType: 'static',
                    staticIp: this.state.ipText.trim(),
                    staticMask: this.state.ipMaskText.trim(),
                    staticGateway: this.state.gatewayText.trim(),
                    dns1: this.state.dns1Text.trim()
                  }
                };
                params = {
                  deviceId: deviceId,
                  wanType: 'static',
                  staticIp: this.state.ipText.trim(),
                  staticMask: this.state.ipMaskText.trim(),
                  staticGateway: this.state.gatewayText.trim(),
                  dns1: this.state.dns1Text.trim()
                };

                if (!_CommonUtils.default.isTextEmpty(this.state.dns2Text.trim())) {
                  params.dns2 = this.state.dns2Text.trim();
                }

                _context.next = 7;
                return _regenerator.default.awrap((0, _API.getApiCommonLocalPath)());

              case 7:
                commonLocalPath = _context.sent;
                api = commonLocalPath + "/;stok=" + _RouterInfoHelper.default.sharedInstance().getCurrentRouterToken() + _API.default.net_work_mode.set_wan.local;
                specMethod = _Host.default.isIOS ? 'get' : 'post';

                _miot.Service.callSpecificAPI(api, specMethod, params).then(function (res) {
                  _this3.setState({
                    waitingActivityShow: false
                  });

                  var result = typeof res === "object" ? res : JSON.parse(res);

                  if (result.code == 0) {
                    _CommonUtils.default.ShowToastBottom('设置成功');

                    _this3.props.navigation.state.params.callback(true);

                    _this3.props.navigation.goBack();
                  } else {
                    _CommonUtils.default.ShowToastBottom('设置失败');
                  }
                }).catch(function (e) {
                  var msg = res.msg;

                  _this3.setState({
                    waitingActivityShow: false
                  });

                  _CommonUtils.default.ShowToastBottom('设置失败' + _CommonUtils.default.isTextEmpty(msg) ? '' : msg);
                });

              case 11:
              case "end":
                return _context.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "_isSetiingValid",
      value: function _isSetiingValid(showToast) {
        var ipText = this.state.ipText;

        if (_CommonUtils.default.isTextEmpty(ipText)) {
          if (showToast) {
            _CommonUtils.default.ShowToastBottom('IP地址为空');
          }

          return false;
        }

        if (!_CommonUtils.default.isValidIp(ipText)) {
          if (showToast) {
            _CommonUtils.default.ShowToastBottom('IP地址不合法');
          }

          return false;
        }

        var ipMaskText = this.state.ipMaskText;

        if (_CommonUtils.default.isTextEmpty(ipMaskText)) {
          if (showToast) {
            _CommonUtils.default.ShowToastBottom('子网掩码为空');
          }

          return false;
        }

        if (!_CommonUtils.default.isValidIp(ipMaskText)) {
          if (showToast) {
            _CommonUtils.default.ShowToastBottom('子网掩码不合法');
          }

          return false;
        }

        var gatewayText = this.state.gatewayText;

        if (_CommonUtils.default.isTextEmpty(gatewayText)) {
          if (showToast) {
            _CommonUtils.default.ShowToastBottom('网关为空');
          }

          return false;
        }

        if (!_CommonUtils.default.isValidIp(gatewayText)) {
          if (showToast) {
            _CommonUtils.default.ShowToastBottom('网关不合法');
          }

          return false;
        }

        var dns1Text = this.state.dns1Text;

        if (_CommonUtils.default.isTextEmpty(dns1Text)) {
          if (showToast) {
            _CommonUtils.default.ShowToastBottom('DNS1为空');
          }

          return false;
        }

        if (!_CommonUtils.default.isValidIp(dns1Text)) {
          if (showToast) {
            _CommonUtils.default.ShowToastBottom('DNS1不合法');
          }

          return false;
        }

        var dns2Text = this.state.dns2Text;

        if (!_CommonUtils.default.isTextEmpty(dns2Text)) {
          if (!_CommonUtils.default.isValidIp(dns2Text)) {
            if (showToast) {
              _CommonUtils.default.ShowToastBottom('DNS2不合法');
            }

            return false;
          }
        }

        return true;
      }
    }, {
      key: "_isSetiingModified",
      value: function _isSetiingModified() {
        var ipText = this.state.ipText.trim();
        var ipMaskText = this.state.ipMaskText.trim();
        var gatewayText = this.state.gatewayText.trim();
        var dns1Text = this.state.dns1Text.trim();
        var dns2Text = this.state.dns2Text.trim();

        if (this._getCurrentWanType() == _NetWorkModeConstant.NetModeType.Static) {
          if (this._isSetiingValid(false) && _CommonUtils.default.isNull(this.state.wanInfo) && this._getCurrentWanType != _NetWorkModeConstant.NetModeType.Static) {
            return true;
          }

          if (!_CommonUtils.default.isTextEmpty(ipText) && ipText != this.state.ip) {
            return true;
          }

          if (!_CommonUtils.default.isTextEmpty(ipMaskText) && ipMaskText != this.state.ipMask) {
            return true;
          }

          if (!_CommonUtils.default.isTextEmpty(gatewayText) && gatewayText != this.state.gateway) {
            return true;
          }

          if (!_CommonUtils.default.isTextEmpty(dns1Text) && dns1Text != this.state.dns1) {
            return true;
          }

          if (!_CommonUtils.default.isTextEmpty(dns2Text) && dns2Text != this.state.dns2) {
            return true;
          }

          return false;
        } else {
          if (!_CommonUtils.default.isTextEmpty(ipText)) {
            return true;
          }

          if (!_CommonUtils.default.isTextEmpty(ipMaskText)) {
            return true;
          }

          if (!_CommonUtils.default.isTextEmpty(gatewayText)) {
            return true;
          }

          if (!_CommonUtils.default.isTextEmpty(dns1Text)) {
            return true;
          }

          if (!_CommonUtils.default.isTextEmpty(dns2Text)) {
            return true;
          }

          return false;
        }
      }
    }, {
      key: "_getCurrentWanType",
      value: function _getCurrentWanType() {
        var mode;

        if (_CommonUtils.default.isNull(this.state.wanInfo)) {
          return _NetWorkModeConstant.NetModeType.Unknown;
        } else {
          if (_CommonUtils.default.isNull(this.state.wanInfo)) {
            return _NetWorkModeConstant.NetModeType.Unknown;
          }
        }

        var detail = this.state.wanInfo.info.details;

        if (detail.wanType == 'dhcp') {
          mode = _NetWorkModeConstant.NetModeType.Dhcp;
        } else if (detail.wanType == 'pppoe') {
          mode = _NetWorkModeConstant.NetModeType.Pppoe;
        } else if (detail.wanType == 'static') {
          mode = _NetWorkModeConstant.NetModeType.Static;
        } else {
          mode = _NetWorkModeConstant.NetModeType.Unknown;
        }

        return mode;
      }
    }]);
    return NetModeStaticIp;
  }(_react.default.Component);

  exports.default = NetModeStaticIp;

  NetModeStaticIp.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "light",
        title: "\u9759\u6001IP\u4E0A\u7F51",
        style: {
          backgroundColor: '#1a1b2a'
        },
        onPressLeft: function onPressLeft(_) {
          return navigation.goBack();
        }
      })
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#ffffff'
    },
    itemContainer: {
      flexDirection: 'column',
      height: 102
    },
    item: {
      flexDirection: 'row',
      height: 50
    },
    itemText: {
      color: '#000',
      marginLeft: 20,
      marginTop: 15,
      justifyContent: "center",
      fontSize: 15
    },
    itemInput: {
      fontSize: 13,
      width: _Devices.ScreenW - 45 - 20 - 20 - 100,
      paddingLeft: 5
    },
    separator: {
      marginLeft: 20,
      height: 1,
      backgroundColor: '#f1f1f1',
      width: _Devices.ScreenW - 20
    },
    buttonItem: {
      position: "absolute",
      bottom: 20,
      paddingLeft: _Devices.ScreenW / 10,
      paddingRight: _Devices.ScreenW / 10
    },
    button: {
      width: _Devices.ScreenW / 10 * 8,
      backgroundColor: '#4778FF',
      height: 44,
      borderRadius: 22,
      alignItems: "center",
      justifyContent: "center"
    },
    buttonText: {
      color: '#fff'
    }
  });
},10646,[14308,14305,14674,14320,14323,14371,14377,14386,10284,10338,10755,10734,10297,10033,10074,10067,10332,10040,10628,10935,10064,10076,10035]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[9]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[10]);

  var _ChoiceDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[13]);

  var _miot = _$$_REQUIRE(_dependencyMap[14]);

  var _Devices = _$$_REQUIRE(_dependencyMap[15]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _API = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[18]));

  var _device = _$$_REQUIRE(_dependencyMap[19]);

  var _WifiSettingHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _Host = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var BAND_5G_POSTFIX = '(5G)';

  var NetModeWirelessRelay = function (_React$Component) {
    (0, _inherits2.default)(NetModeWirelessRelay, _React$Component);

    function NetModeWirelessRelay(props) {
      var _this;

      (0, _classCallCheck2.default)(this, NetModeWirelessRelay);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NetModeWirelessRelay).call(this, props));
      _this.state = {
        loadingWifiList: false,
        changingSetting: false,
        currentParentSsid: '',
        passwdInputSecurity: true,
        isShowingWiFiList: false,
        selectedWifi: '',
        selectedWifiInfo: {},
        wifiList: [],
        selectedWifiPwd: '',
        waitingActivityShow: false,
        selectFreeWifi: false,
        switchModeSuccessAlert: false
      };
      return _this;
    }

    (0, _createClass2.default)(NetModeWirelessRelay, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.setState({
          loadingWifiList: true
        });

        this._requestWifiList();
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var currentPwdInoutState = this.state.passwdInputSecurity;
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.itemContainer
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.item,
          onPress: function onPress(_) {
            return _this2._showWifiList();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.itemText
        }, '信号源'), _react.default.createElement(_reactNative.Text, {
          style: _CommonUtils.default.isTextEmpty(this.state.selectedWifi) ? styles.itemText2 : styles.itemText3
        }, _CommonUtils.default.isTextEmpty(this.state.selectedWifi) ? '请选择信号源' : this.state.selectedWifi), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.itemImageContainer,
          onPress: function onPress(_) {
            return _this2._showWifiList();
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.imageItem,
          source: _$$_REQUIRE(_dependencyMap[23])
        }))), _react.default.createElement(_Separator.default, {
          style: styles.separator
        }), !this.state.selectFreeWifi ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.itemText
        }, '信号源密码'), _react.default.createElement(_reactNative.TextInput, {
          style: styles.itemInput1,
          placeholder: '请输入信号源密码',
          placeholderTextColor: '#ccc',
          defaultValue: this.state.selectedWifiPwd,
          secureTextEntry: this.state.passwdInputSecurity,
          onChangeText: function onChangeText(text) {
            return _this2.setState({
              selectedWifiPwd: text
            });
          }
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.itemImageContainer1,
          onPress: function onPress(_) {
            return _this2._changePwdInputSecurity();
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.imageItem1,
          source: this.state.passwdInputSecurity ? _$$_REQUIRE(_dependencyMap[24]) : _$$_REQUIRE(_dependencyMap[25])
        }))), _react.default.createElement(_Separator.default, {
          style: styles.separator
        })) : null), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.buttonItem,
          onPress: function onPress(_) {
            return _this2._onButtonPressed();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.button
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.buttonText
        }, '保存设置'))), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: this.state.loadingWifiList,
          message: "\u6B63\u5728\u626B\u63CF\u9644\u8FD1\u7684WiFi"
        }), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: this.state.changingSetting,
          message: "\u6B63\u5728\u4FDD\u5B58\u8BBE\u7F6E"
        }), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: this.state.waitingActivityShow,
          message: "\u6B63\u5728\u4FDD\u5B58\u8BBE\u7F6E..."
        }), _react.default.createElement(_Dialog.MessageDialog, {
          visible: this.state.switchModeSuccessAlert,
          title: "\u8BBE\u7F6E\u6210\u529F",
          message: "\u6A21\u5F0F\u5207\u6362\u540E\uFF0C\u9884\u8BA14-5\u5206\u949F\u540E\u6062\u590D\u7F51\u7EDC\u8FDE\u63A5",
          messageStyle: {
            textAlign: 'center',
            color: '#000'
          },
          buttons: [{
            text: '确定',
            style: {
              color: '#000'
            },
            callback: function callback(_) {
              _this2.setState({
                switchModeSuccessAlert: false
              });

              _miot.Package.exit();
            }
          }],
          onDismiss: function onDismiss(_) {
            _this2.state.switchModeSuccessAlert = false;

            _miot.Package.exit();
          }
        }));
      }
    }, {
      key: "_requestWifiList",
      value: function _requestWifiList() {
        var _this3 = this;

        var deviceId, method, paramsDic, token, relayIp, commonLocalPath, api;
        return _regenerator.default.async(function _requestWifiList$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                deviceId = _device.Device.deviceID.replace("miwifi.", "");
                method = 'GET';
                paramsDic = {
                  method: method,
                  params: {
                    deviceId: deviceId
                  }
                };
                token = _RouterInfoHelper.default.sharedInstance().getCurrentRouterToken();
                relayIp = _RouterInfoHelper.default.sharedInstance().getCurRelayIp();
                _context.next = 7;
                return _regenerator.default.awrap((0, _API.getApiCommonLocalPath)());

              case 7:
                commonLocalPath = _context.sent;
                api = commonLocalPath + "/;stok=" + token + _API.default.net_work_mode.router_scan_wifi_list.local;

                if (_RouterInfoHelper.default.sharedInstance().isWorkingInRelayMode()) {
                  api = 'http://' + relayIp + "/cgi-bin/luci/;stok=" + token + _API.default.net_work_mode.router_scan_wifi_list.local;
                }

                _miot.Service.callSpecificAPI(api, 'get', {
                  "deviceId": deviceId
                }).then(function (res) {
                  var result = typeof res === "object" ? res : JSON.parse(res);

                  _this3.setState({
                    loadingWifiList: false
                  });

                  if (result.code == 0) {
                    _this3.setState({
                      wifiList: result.list
                    });
                  } else {
                    _CommonUtils.default.ShowToastBottom('获取WiFi列表失败');

                    _this3.props.navigation.goBack();
                  }
                }).catch(function (e) {
                  _this3.setState({
                    loadingWifiList: false
                  });

                  _CommonUtils.default.ShowToastBottom('获取WiFi列表失败');

                  _this3.props.navigation.goBack();
                });

              case 11:
              case "end":
                return _context.stop();
            }
          }
        });
      }
    }, {
      key: "_onButtonPressed",
      value: function _onButtonPressed() {
        if (!this._isSettingValid(true)) {
          return;
        }

        if (!this._isSettingModified()) {
          this.props.navigation.goBack();
          return;
        }

        this.setState({
          waitingActivityShow: true
        });

        this._setWifiAp();
      }
    }, {
      key: "getGateway",
      value: function getGateway() {
        return _regenerator.default.async(function getGateway$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", _miot.System.network.getGatewayIpAddress().then(function (res) {
                  return res.data.ipAddress;
                }).catch(function (error) {
                  return 'miwifi.com';
                }));

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        });
      }
    }, {
      key: "_setWifiAp",
      value: function _setWifiAp() {
        var _this4 = this;

        var channel, deviceId, method, paramsDic, token, isRelay, gateway, relayIp, prefix, commonLocalPath, api, speMethod;
        return _regenerator.default.async(function _setWifiAp$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                channel = '';

                if (!_CommonUtils.default.isNull(this.state.selectedWifiInfo.channel)) {
                  channel = String(this.state.selectedWifiInfo.channel);
                }

                deviceId = _device.Device.deviceID.replace("miwifi.", "");
                method = 'POST';
                paramsDic = {
                  method: method,
                  params: {
                    deviceId: deviceId,
                    ssid: this.state.selectedWifi.trim(),
                    password: this.state.selectedWifiPwd,
                    encryption: _CommonUtils.default.isTextEmpty(this.state.selectedWifiInfo.encryption) ? '' : this.state.selectedWifiInfo.encryption,
                    enctype: _CommonUtils.default.isTextEmpty(this.state.selectedWifiInfo.enctype) ? '' : this.state.selectedWifiInfo.enctype,
                    channel: _CommonUtils.default.isTextEmpty(channel) ? '' : channel,
                    bandwidth: _CommonUtils.default.isTextEmpty(this.state.selectedWifiInfo.bandwidth) ? '' : this.state.selectedWifiInfo.bandwidth
                  }
                };

                if (!_CommonUtils.default.isTextEmpty(this.state.selectedWifiInfo.band)) {
                  paramsDic.params.band = this.state.selectedWifiInfo.band;
                }

                token = _RouterInfoHelper.default.sharedInstance().getCurrentRouterToken();
                isRelay = _RouterInfoHelper.default.sharedInstance().isWorkingInWirelessRelayMode();
                _context3.next = 10;
                return _regenerator.default.awrap(this.getGateway());

              case 10:
                gateway = _context3.sent;
                relayIp = _RouterInfoHelper.default.sharedInstance().getCurRelayIp();
                prefix = isRelay ? relayIp : gateway;
                _context3.next = 15;
                return _regenerator.default.awrap((0, _API.getApiCommonLocalPath)());

              case 15:
                commonLocalPath = _context3.sent;
                api = 'http://' + prefix + '/cgi-bin/luci/;stok=' + token + _API.default.net_work_mode.set_wifi_ap.local;
                speMethod = _Host.default.isIOS ? 'get' : 'post';

                _miot.Service.callSpecificAPI(api, speMethod, paramsDic.params).then(function (res) {
                  _this4.setState({
                    waitingActivityShow: false
                  });

                  var result = typeof res === "object" ? res : JSON.parse(res);
                  var code = result.code;
                  var ip = result.ip;

                  if (result.code == 0) {
                    if (!_CommonUtils.default.isTextEmpty(ip) && _CommonUtils.default.isValidIp(ip)) {
                      _this4.setState({
                        switchModeSuccessAlert: true
                      });
                    } else {
                      _CommonUtils.default.ShowToastBottom('切换至无线中继模式失败');
                    }
                  } else if (result.code == -1011) {
                    _this4.setState({
                      switchModeSuccessAlert: true
                    });
                  } else {
                    _CommonUtils.default.ShowToastBottom('切换至无线中继模式失败');
                  }
                }).catch(function (e) {
                  _this4.setState({
                    waitingActivityShow: false
                  });

                  _this4.setState({
                    switchModeSuccessAlert: true
                  });
                });

              case 19:
              case "end":
                return _context3.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "_showWifiList",
      value: function _showWifiList() {
        var _this5 = this;

        this.props.navigation.navigate('NetworkModeWirelessSelectWifi', {
          title: '选择路由',
          wifiList: this.state.wifiList,
          callback: function callback(item) {
            _this5.setState({
              selectedWifi: item.ssid,
              selectedWifiInfo: item,
              selectFreeWifi: item.encryption === 'NONE' ? true : false
            });
          }
        });
      }
    }, {
      key: "_changePwdInputSecurity",
      value: function _changePwdInputSecurity() {
        var currentState = this.state.passwdInputSecurity;
        this.setState({
          passwdInputSecurity: !currentState
        });
      }
    }, {
      key: "_isSettingValid",
      value: function _isSettingValid(showToast) {
        if (_CommonUtils.default.isTextEmpty(this.state.selectedWifi.trim())) {
          if (showToast) {
            _CommonUtils.default.ShowToastBottom('信号源为空');
          }

          return false;
        }

        if (_WifiSettingHelper.default.containsEmoji(this.state.selectedWifi)) {
          if (showToast) {
            _CommonUtils.default.ShowToastBottom('信号源包含非法字符');
          }

          return false;
        }

        return true;
      }
    }, {
      key: "_isSettingModified",
      value: function _isSettingModified() {
        if (!_CommonUtils.default.isTextEmpty(this.state.selectedWifi.trim())) {
          return true;
        }

        if (!_CommonUtils.default.isTextEmpty(this.state.selectedWifiPwd)) {
          return true;
        }

        return false;
      }
    }, {
      key: "_getAvailableWifiList",
      value: function _getAvailableWifiList() {
        var _this6 = this;

        if (this.state.wifiList.length > 0) {
          var wifiItems = [];
          this.state.wifiList.map(function (item) {
            var ssid = item.ssid;

            if (!_CommonUtils.default.isTextEmpty(ssid)) {
              var bandType = item.band;

              if (!_CommonUtils.default.isTextEmpty(bandType)) {
                if (bandType.toLowerCase() == '5g') {
                  ssid = ssid + '(5G)';
                }
              }

              wifiItems.push({
                title: ssid,
                onPress: function onPress(_) {
                  return _this6.selectedWifi(ssid, item);
                }
              });
            }
          });
          return wifiItems;
        } else {
          return [];
        }
      }
    }]);
    return NetModeWirelessRelay;
  }(_react.default.Component);

  exports.default = NetModeWirelessRelay;

  NetModeWirelessRelay.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "light",
        title: "\u65E0\u7EBF\u4E2D\u7EE7",
        style: {
          backgroundColor: '#1a1b2a'
        },
        onPressLeft: function onPressLeft(_) {
          return navigation.goBack();
        }
      })
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#ffffff'
    },
    itemContainer: {
      flexDirection: 'column',
      height: 102
    },
    item: {
      flexDirection: 'row',
      height: 50
    },
    itemText: {
      color: '#000',
      marginLeft: 20,
      marginTop: 15,
      justifyContent: "center",
      fontSize: 15
    },
    itemText2: {
      marginLeft: 40,
      marginRight: 45,
      marginTop: 15,
      marginBottom: 15,
      width: _Devices.ScreenW - 45 - 20 - 20 - 100,
      paddingLeft: 5,
      color: '#ccc'
    },
    itemText3: {
      marginLeft: 40,
      marginRight: 45,
      marginTop: 15,
      marginBottom: 15,
      width: _Devices.ScreenW - 45 - 20 - 20 - 100,
      paddingLeft: 5,
      color: 'black'
    },
    itemInput1: {
      marginLeft: 20,
      marginRight: 45,
      color: '#333333',
      fontSize: 13,
      width: _Devices.ScreenW - 45 - 20 - 20 - 70,
      paddingLeft: 5,
      height: 50
    },
    itemImageContainer: {
      height: 18,
      width: 9,
      position: 'absolute',
      right: 20,
      marginTop: 16
    },
    imageItem: {
      height: 18,
      width: 9
    },
    itemImageContainer1: {
      height: 34,
      width: 34,
      position: 'absolute',
      right: 8,
      marginTop: 8
    },
    imageItem1: {
      height: 34,
      width: 34
    },
    separator: {
      marginLeft: 20,
      height: 1,
      backgroundColor: '#f1f1f1',
      width: _Devices.ScreenW - 20
    },
    buttonItem: {
      position: "absolute",
      bottom: 20,
      paddingLeft: _Devices.ScreenW / 10,
      paddingRight: _Devices.ScreenW / 10
    },
    button: {
      width: _Devices.ScreenW / 10 * 8,
      backgroundColor: '#4778FF',
      height: 44,
      borderRadius: 22,
      alignItems: "center",
      justifyContent: "center"
    },
    buttonText: {
      color: '#fff'
    },
    wifiList: {
      height: _Devices.ScreenH - 200
    }
  });
},10649,[14308,14305,14674,14320,14323,14371,14377,14386,10284,10338,10755,10734,10297,10033,10074,10067,10332,10040,10064,10935,10070,10076,10035,10220,10637,10640]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[7]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[8]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _Devices = _$$_REQUIRE(_dependencyMap[12]);

  var _miot = _$$_REQUIRE(_dependencyMap[13]);

  var _it = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _ui = _$$_REQUIRE(_dependencyMap[15]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _device = _$$_REQUIRE(_dependencyMap[18]);

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[19]);

  var _toolbox_icon_setting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _toolbox_icon_wifisetting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _toolbox_icon_upgrade = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var _toolbox_icon_safe = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var _toolbox_child_protection_icon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var _toolbox_icon_guess_wifi_ren = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

  var _toolbox_details_icon_feedback = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26]));

  var _toolbox_icon_security = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27]));

  var _toolbox_icon_wifioptimize = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28]));

  var _toolbox_icon_speedTest = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29]));

  var _toolbox_details_icon_timer_wifi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[30]));

  var _toolbox_icon_indicator_light = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[31]));

  var _toolbox_details_icon_fkwifi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[32]));

  var _toolbox_details_icon_qos = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[33]));

  var _toolbox_icon_report = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[34]));

  var _toolbox_details_icon_task = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[35]));

  var _toolbox_details_icon_photobac = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[36]));

  var _toolbox_details_icon_timer_reboot = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[37]));

  var _toolbox_icon_more = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[38]));

  var _toolbox_icon_reboot = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[39]));

  var _toolbox_icon_recovery = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[40]));

  var itemImgWidth = _Devices.ScreenW / 3 * 0.4;
  var itemWidth = _Devices.ScreenW / 3;
  var itemImgMarginLeft = itemImgWidth * 0.75;

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      flex: 1
    },
    listItem: {
      backgroundColor: '#fff',
      height: itemWidth,
      width: itemWidth,
      borderTopColor: '#f1f1f1',
      borderTopWidth: 0.5,
      borderRightColor: '#f1f1f1',
      borderRightWidth: 0.5,
      borderBottomColor: '#f1f1f1',
      borderBottomWidth: 0.5
    },
    text: {
      maxWidth: itemWidth,
      maxHeight: 15,
      color: 'black',
      fontSize: 12,
      marginTop: 10,
      textAlign: 'center'
    },
    imageIcon: {
      width: itemImgWidth,
      height: itemImgWidth,
      resizeMode: 'contain',
      marginTop: itemImgWidth * 0.5,
      marginLeft: itemImgMarginLeft
    }
  });

  var dialogButtonName = [_RouterLocalizedStringUtil.localStrings.alertOKTitle, _RouterLocalizedStringUtil.localStrings.alertCancelTitle, _RouterLocalizedStringUtil.localStrings.alertTipText];
  var dialogTip = _RouterLocalizedStringUtil.localStrings.resstartRouterAlertContent;
  var recoverDialogTip = _RouterLocalizedStringUtil.localStrings.recoverRouterAlertContent;

  var ToolBox = function (_React$Component) {
    (0, _inherits2.default)(ToolBox, _React$Component);

    function ToolBox(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ToolBox);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToolBox).call(this, props));

      _this._onPressItem = function (item) {
        if (item.value.title === _this.state.dataSource[0].value.title) {
          _this.props.navigation.navigate('WiFiSetting', {
            title: _RouterLocalizedStringUtil.localStrings.wifiSettingTitle
          });
        } else if (item.value.title === _this.state.dataSource[1].value.title) {
            _this.setState({
              rebootAlertVisible: true
            });
          } else if (item.value.title === _this.state.dataSource[2].value.title) {
            _this.setState({
              recoverRouterAlertVisible: true
            });
          }
      };

      _this.state = {
        dataSource: [{
          title: _RouterLocalizedStringUtil.localStrings.wifiSettingTitle,
          imgUrl: _toolbox_icon_wifisetting.default
        }, {
          title: _RouterLocalizedStringUtil.localStrings.restartRouterTitle,
          imgUrl: _toolbox_icon_reboot.default
        }, {
          title: _RouterLocalizedStringUtil.localStrings.recoverRouterTitle,
          imgUrl: _toolbox_icon_recovery.default
        }],
        rebootAlertVisible: false,
        loading: false,
        hasBeginStartRouter: false,
        hasEndStartRouter: false,
        recoverRouterLoading: false,
        recoverRouterAlertVisible: false,
        recoverRouterSuccess: false
      };
      return _this;
    }

    (0, _createClass2.default)(ToolBox, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        var data = [];
        this.state.dataSource.map(function (item, i) {
          var newItem = {
            key: i,
            value: item
          };
          data.push(newItem);
        });
        this.setState({
          dataSource: data
        });
      }
    }, {
      key: "_gotoRebootRouter",
      value: function _gotoRebootRouter() {
        var _this2 = this;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceId: deviceId
          }
        };
        this.setState({
          hasBeginStartRouter: false,
          hasEndStartRouter: false
        });
        var api = _API.default.reboot_router.remote;

        _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
          var code = res.code;

          if (code == 0) {
            _this2.timer = setInterval(function () {
              _this2._pingrouter();
            }, 3000);
          }
        }).catch(function (e) {
          _this2.setState({
            loading: false
          });
        });
      }
    }, {
      key: "_pingrouter",
      value: function _pingrouter() {
        var _this3 = this;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceId: deviceId
          }
        };
        var api = _API.default.router.init_info;

        _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
          if (res.code == 0) {
            if (!_this3.state.hasEndStartRouter && _this3.state.hasBeginStartRouter) {
              _this3.setState({
                hasEndStartRouter: true,
                loading: false
              });

              _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.restartRouterSuccess);

              _this3.props.navigation.popToTop();
            }
          } else {
            if (!_this3.state.hasBeginStartRouter) {
              _this3.setState({
                hasBeginStartRouter: true
              });
            }
          }
        }).catch(function (e) {
          if (!_this3.state.hasBeginStartRouter) {
            _this3.setState({
              hasBeginStartRouter: true
            });
          }
        });
      }
    }, {
      key: "_gotoRecoverRouter",
      value: function _gotoRecoverRouter() {
        var _this4 = this;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceId: deviceId,
            format: '0'
          }
        };
        var api = _API.default.recover_router.remote;

        _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
          if (res.code == 0) {
            _this4.setState({
              recoverRouterSuccess: true
            });

            _this4._unbindRouter();
          }
        }).catch(function (e) {
          _this4.setState({
            recoverRouterLoading: false
          });

          if (!_this4.state.recoverRouterSuccess) {
            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.recoverRouterFail);
          }
        });
      }
    }, {
      key: "_unbindRouter",
      value: function _unbindRouter() {
        var _this5 = this;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'POST';
        var paramsDic = {
          method: method,
          params: {
            deviceID: deviceId
          }
        };
        var api = _API.default.router_unbind.remote;

        _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
          if (res.code == 0) {
            _this5.setState({
              recoverRouterLoading: false
            });

            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.recoverRouterSuccess);

            _miot.Package.exit();
          }
        }).catch(function (e) {
          _this5.setState({
            recoverRouterLoading: false
          });

          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.operationFailed);
        });
      }
    }, {
      key: "_renderItem",
      value: function _renderItem(item) {
        var _this6 = this;

        return _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            return _this6._onPressItem(item);
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.listItem
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.imageIcon,
          source: item.value.imgUrl
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, item.value.title)));
      }
    }, {
      key: "render",
      value: function render() {
        var _this7 = this;

        return _react.default.createElement(_reactNative.SafeAreaView, {
          style: styles.container
        }, _react.default.createElement(_reactNative.FlatList, {
          data: this.state.dataSource,
          renderItem: function renderItem(_ref) {
            var item = _ref.item;
            return _this7._renderItem(item);
          },
          numColumns: 3,
          horizontal: false
        }), _react.default.createElement(_ui.MessageDialog, {
          title: dialogButtonName[2],
          message: dialogTip,
          cancelable: false,
          cancel: dialogButtonName[1],
          confirm: dialogButtonName[0],
          onCancel: function onCancel(e) {},
          onConfirm: function onConfirm(e) {
            _this7.setState({
              loading: true
            });

            _this7._gotoRebootRouter();
          },
          onDismiss: function onDismiss() {
            _this7.setState({
              rebootAlertVisible: false
            });
          },
          visible: this.state.rebootAlertVisible
        }), _react.default.createElement(_ui.MessageDialog, {
          title: dialogButtonName[2],
          message: recoverDialogTip,
          cancelable: false,
          cancel: dialogButtonName[1],
          confirm: dialogButtonName[0],
          onCancel: function onCancel(e) {},
          onConfirm: function onConfirm(e) {
            _this7.setState({
              recoverRouterLoading: true
            });

            _this7._gotoRecoverRouter();
          },
          onDismiss: function onDismiss() {
            _this7.setState({
              recoverRouterAlertVisible: false
            });
          },
          visible: this.state.recoverRouterAlertVisible
        }), _react.default.createElement(_ui.LoadingDialog, {
          visible: this.state.loading,
          message: _RouterLocalizedStringUtil.localStrings.restartRouterLoading
        }), _react.default.createElement(_ui.LoadingDialog, {
          visible: this.state.recoverRouterLoading,
          message: _RouterLocalizedStringUtil.localStrings.recoverRouterLoading
        }));
      }
    }]);
    return ToolBox;
  }(_react.default.Component);

  exports.default = ToolBox;

  ToolBox.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "light",
        title: _RouterLocalizedStringUtil.localStrings.homePageToolTab,
        style: {
          backgroundColor: '#1a1b2a'
        },
        onPressLeft: function onPressLeft(_) {
          return navigation.goBack();
        }
      })
    };
  };
},10652,[14305,14320,14323,14371,14377,14386,10284,10338,10755,10332,10297,10033,10067,10074,10107,10230,10040,10064,10935,10055,10655,10658,10661,10664,10667,10670,10673,10676,10679,10682,10685,10688,10691,10694,10697,10700,10703,10706,10709,10712,10715]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
    "width": 88,
    "height": 88,
    "scales": [1],
    "hash": "fdcb5d037c029aeb1ccec0ded61eb990",
    "name": "toolbox_icon_setting",
    "type": "png"
  });
},10655,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
    "width": 88,
    "height": 88,
    "scales": [1],
    "hash": "68b946d51b1404c2e6b310c22c1edebd",
    "name": "toolbox_icon_wifisetting",
    "type": "png"
  });
},10658,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
    "width": 88,
    "height": 88,
    "scales": [1],
    "hash": "d3ed3ec8ad72f44d508a9915133d0e7c",
    "name": "toolbox_icon_upgrade",
    "type": "png"
  });
},10661,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
    "width": 88,
    "height": 89,
    "scales": [1],
    "hash": "e64eb08bc03a78a089d7fae20cd5160c",
    "name": "toolbox_icon_safe",
    "type": "png"
  });
},10664,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
    "width": 88,
    "height": 88,
    "scales": [1],
    "hash": "9776fde03310d85fff4beeaac950b7c6",
    "name": "toolbox_child_protection_icon",
    "type": "png"
  });
},10667,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
    "width": 88,
    "height": 88,
    "scales": [1],
    "hash": "f781b3cc744724521bf9b0c26ff7ba57",
    "name": "toolbox_icon_guess_wifi_ren",
    "type": "png"
  });
},10670,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
    "width": 88,
    "height": 88,
    "scales": [1],
    "hash": "cb46fcf142997d1275c38e889fba4b97",
    "name": "toolbox_details_icon_feedback",
    "type": "png"
  });
},10673,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
    "width": 88,
    "height": 89,
    "scales": [1],
    "hash": "16286696b8efb195633f68075decd993",
    "name": "toolbox_icon_security",
    "type": "png"
  });
},10676,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
    "width": 88,
    "height": 88,
    "scales": [1],
    "hash": "48fe78be834b38af4c7df3ffac664a23",
    "name": "toolbox_icon_wifioptimize",
    "type": "png"
  });
},10679,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
    "width": 88,
    "height": 88,
    "scales": [1],
    "hash": "33c6679c780aedb50c5fbb5e541da29f",
    "name": "toolbox_icon_speedTest",
    "type": "png"
  });
},10682,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
    "width": 88,
    "height": 88,
    "scales": [1],
    "hash": "832575ec51457657b72cda59fedbf287",
    "name": "toolbox_details_icon_timer_wifi",
    "type": "png"
  });
},10685,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
    "width": 106,
    "height": 88,
    "scales": [1],
    "hash": "eda0044d462a8957b483fc17260bb10e",
    "name": "toolbox_icon_indicator_light",
    "type": "png"
  });
},10688,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
    "width": 88,
    "height": 88,
    "scales": [1],
    "hash": "70fb330b7ec716e87d1bbff2af140af8",
    "name": "toolbox_details_icon_fkwifi",
    "type": "png"
  });
},10691,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
    "width": 88,
    "height": 88,
    "scales": [1],
    "hash": "1f19add478ed375275735697823a2b3c",
    "name": "toolbox_details_icon_qos",
    "type": "png"
  });
},10694,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
    "width": 88,
    "height": 88,
    "scales": [1],
    "hash": "52f15a240362fcd5d63a492d954f13dd",
    "name": "toolbox_icon_report",
    "type": "png"
  });
},10697,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
    "width": 88,
    "height": 88,
    "scales": [1],
    "hash": "86fa9fd05a372eab70ba3496e9fcf8d6",
    "name": "toolbox_details_icon_task",
    "type": "png"
  });
},10700,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
    "width": 88,
    "height": 88,
    "scales": [1],
    "hash": "6236bdafe1efb2d86273b7dbf9c707fc",
    "name": "toolbox_details_icon_photobac",
    "type": "png"
  });
},10703,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
    "width": 88,
    "height": 88,
    "scales": [1],
    "hash": "5d2e68e334cd53b3e92e6fcee5812007",
    "name": "toolbox_details_icon_timer_reboot",
    "type": "png"
  });
},10706,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
    "width": 200,
    "height": 200,
    "scales": [1],
    "hash": "7c5e0d8a71567ba3c2acb272a4bab38f",
    "name": "toolbox_icon_more",
    "type": "png"
  });
},10709,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
    "width": 200,
    "height": 200,
    "scales": [1],
    "hash": "b9ebdebe73bb637ea86598d632bcb4a7",
    "name": "toolbox_icon_reboot",
    "type": "png"
  });
},10712,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox",
    "width": 200,
    "height": 200,
    "scales": [1],
    "hash": "da39c710394090d8ae3901a3ed6c4042",
    "name": "toolbox_icon_recovery",
    "type": "png"
  });
},10715,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'user strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[7]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[8]);

  var _miot = _$$_REQUIRE(_dependencyMap[9]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _Devices = _$$_REQUIRE(_dependencyMap[13]);

  var _device = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var ChildProtectHomePage = function (_React$Component) {
    (0, _inherits2.default)(ChildProtectHomePage, _React$Component);

    function ChildProtectHomePage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ChildProtectHomePage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ChildProtectHomePage).call(this, props));

      _this._getSectionHeaderData = function (dataBlob, sectionID) {
        return dataBlob[sectionID];
      };

      _this._getRowData = function (dataBlob, sectionID, rowID) {
        var sectionData = dataBlob[sectionID];
        return sectionData.deviceList[rowID];
      };

      _this.state = {
        dataSource: new _reactNative.ListView.DataSource({
          rowHasChanged: function rowHasChanged(r1, r2) {
            return r1 !== r2;
          },
          sectionHeaderHasChanged: function sectionHeaderHasChanged(s1, s2) {
            return s1 !== s2;
          },
          getSectionHeaderData: _this._getSectionHeaderData,
          getRowData: _this._getRowData
        })
      };
      return _this;
    }

    (0, _createClass2.default)(ChildProtectHomePage, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        this.fetchReportListData();
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.SafeAreaView, {
          style: styles.container
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.header,
          onPress: function onPress() {
            return _this2._onPressHeader();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.headerTitle
        }, "\u513F\u7AE5\u4E0A\u7F51\u4FDD\u62A4"), _react.default.createElement(_reactNative.Text, {
          style: styles.headerDesc
        }, "\u513F\u7AE5\u5B88\u62A4\u80FD\u81EA\u52A8\u963B\u65AD\u8FC7\u6EE4\uFF0C\u540C\u65F6\u5728\u6DF1\u591C\u4E0A\u7F51\u65F6\u63D0\u9192"), _react.default.createElement(_reactNative.Image, {
          style: styles.headerIndicator,
          source: _$$_REQUIRE(_dependencyMap[15])
        })), _react.default.createElement(_reactNative.ListView, {
          style: styles.listContainer,
          dataSource: this.state.dataSource,
          renderRow: this._renderRow.bind(this),
          renderSectionHeader: this._renderSectionHeader.bind(this),
          stickySectionHeadersEnabled: false
        }));
      }
    }, {
      key: "_renderRow",
      value: function _renderRow(rowData, Sectionid, rowid) {
        return _react.default.createElement(_reactNative.View, {
          style: styles.listRow
        }, _react.default.createElement(_reactNative.View, {
          style: styles.rowContainer
        }, _react.default.createElement(_reactNative.View, {
          style: styles.rowTextContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.rowText
        }, rowData.name)), _react.default.createElement(_reactNative.Image, {
          style: styles.rowIcon,
          source: _device.default
        }), _react.default.createElement(_reactNative.Image, {
          style: styles.rowIndicator,
          source: _$$_REQUIRE(_dependencyMap[15])
        })));
      }
    }, {
      key: "_renderSectionHeader",
      value: function _renderSectionHeader(sectionData, sectionId) {
        return _react.default.createElement(_reactNative.View, {
          style: styles.sectionHeader
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.sectionText
        }, sectionData.date + ' ' + '设备日报'));
      }
    }, {
      key: "fetchReportListData",
      value: function fetchReportListData() {
        var list = [{
          date: '11月4日',
          deviceList: [{
            iconUrl: '123',
            name: '手机1',
            originName: '手机1',
            date: '11月4日',
            mac: 'aa:bb:cc:dd:ee:ff'
          }, {
            iconUrl: 'aaa',
            name: '手机2',
            originName: '手机2',
            date: '11月4日',
            mac: 'aa:bb:cc:dd:ee:fa'
          }, {
            iconUrl: 'bbb',
            name: '手机3',
            originName: '手机3',
            date: '11月4日',
            mac: 'aa:bb:cc:dd:ee:fb'
          }]
        }, {
          date: '11月3日',
          deviceList: [{
            iconUrl: '123',
            name: '手机1',
            originName: '手机1',
            date: '11月3日',
            mac: 'aa:bb:cc:dd:ee:ff'
          }, {
            iconUrl: 'aaa',
            name: '手机2',
            originName: '手机2',
            date: '11月3日',
            mac: 'aa:bb:cc:dd:ee:fa'
          }, {
            iconUrl: 'bbb',
            name: '手机3',
            originName: '手机3',
            date: '11月3日',
            mac: 'aa:bb:cc:dd:ee:fb'
          }]
        }, {
          date: '11月1日',
          deviceList: [{
            iconUrl: '123',
            name: '手机1',
            originName: '手机1',
            date: '11月1日',
            mac: 'aa:bb:cc:dd:ee:ff'
          }, {
            iconUrl: 'aaa',
            name: '手机2',
            originName: '手机2',
            date: '11月1日',
            mac: 'aa:bb:cc:dd:ee:fa'
          }, {
            iconUrl: 'bbb',
            name: '手机3',
            originName: '手机3',
            date: '11月1日',
            mac: 'aa:bb:cc:dd:ee:fb'
          }]
        }];
        var sectionHeaders = [];
        var section = [];
        list.map(function (item, i) {
          sectionHeaders.push(i);
          var newSection = [];
          item.deviceList.map(function (rowItem, j) {
            newSection.push(j);
          });
          section.push(newSection);
        });
        this.setState({
          dataSource: this.state.dataSource.cloneWithRowsAndSections(list, sectionHeaders, section)
        });
      }
    }, {
      key: "_onPressHeader",
      value: function _onPressHeader() {
        this.props.navigation.navigate('CPDeviceList', {
          title: ''
        });
      }
    }]);
    return ChildProtectHomePage;
  }(_react.default.Component);

  exports.default = ChildProtectHomePage;

  ChildProtectHomePage.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: "\u513F\u7AE5\u4E0A\u7F51\u4FDD\u62A4",
        style: {
          backgroundColor: '#fff'
        },
        onPressLeft: function onPressLeft(_) {
          return navigation.goBack();
        }
      })
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#ffffff',
      flexDirection: 'column'
    },
    header: {
      height: 90,
      width: _Devices.ScreenW - 30,
      marginTop: 15,
      marginLeft: 15,
      marginRight: 15,
      backgroundColor: '#28d188',
      borderRadius: 10,
      shadowColor: '#0fffae',
      shadowRadius: 10,
      shadowOffset: {
        height: 1,
        width: 0
      },
      shadowOpacity: 0.8,
      elevation: 10
    },
    headerIndicator: {
      position: 'absolute',
      right: 20,
      height: 22,
      width: 11,
      marginTop: 34
    },
    headerTitle: {
      color: '#fff',
      fontSize: 20,
      fontWeight: "bold",
      marginTop: 15,
      marginLeft: 20,
      height: 22
    },
    headerDesc: {
      color: '#fff',
      fontSize: 12,
      marginTop: 15,
      marginLeft: 20,
      marginRight: 40,
      maxHeight: 26,
      lineHeight: 13
    },
    listContainer: {
      marginTop: 10,
      width: _Devices.ScreenW,
      height: _Devices.ScreenH - 180
    },
    listRow: {
      height: 85,
      backgroundColor: '#fff',
      flexDirection: 'column',
      width: _Devices.ScreenW
    },
    rowContainer: {
      height: 75,
      width: _Devices.ScreenW - 30,
      borderRadius: 10,
      borderColor: '#ddd',
      borderWidth: 0.5,
      backgroundColor: '#fff',
      marginLeft: 15,
      marginTop: 5
    },
    rowIcon: {
      position: 'absolute',
      left: 20,
      top: 12,
      width: 52,
      height: 52,
      resizeMode: 'contain'
    },
    rowIndicator: {
      position: 'absolute',
      right: 20,
      height: 18,
      width: 9,
      marginTop: 29
    },
    rowTextContainer: {
      marginLeft: 100,
      marginTop: 0,
      maxWidth: _Devices.ScreenW - 100,
      height: 75,
      alignItems: 'center',
      justifyContent: 'center'
    },
    rowText: {
      position: 'absolute',
      left: 0,
      maxWidth: _Devices.ScreenW - 100,
      maxHeight: 75,
      fontSize: 15,
      textAlign: 'left'
    },
    sectionHeader: {
      height: 30,
      width: _Devices.ScreenW,
      backgroundColor: '#fff'
    },
    sectionText: {
      marginTop: 5,
      marginLeft: 20,
      maxWidth: _Devices.ScreenW - 40,
      height: 20,
      fontSize: 14
    }
  });
},10718,[14305,14320,14323,14371,14377,14386,10284,10338,10755,10074,10332,10297,10033,10067,10721,10220]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "63c315613da376751b8de952a4f30313",
    "name": "device",
    "type": "png"
  });
},10721,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'user strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[7]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[8]);

  var _miot = _$$_REQUIRE(_dependencyMap[9]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _Devices = _$$_REQUIRE(_dependencyMap[13]);

  var CPDeviceList = function (_React$Component) {
    (0, _inherits2.default)(CPDeviceList, _React$Component);

    function CPDeviceList(props) {
      var _this;

      (0, _classCallCheck2.default)(this, CPDeviceList);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CPDeviceList).call(this, props));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(CPDeviceList, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.SafeAreaView, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.headerContainer
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.headerImage,
          source: _$$_REQUIRE(_dependencyMap[14])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.headerTitle
        }, "\u513F\u7AE5\u4E0A\u7F51\u4FDD\u62A4\u6A21\u5F0F"), _react.default.createElement(_reactNative.Text, {
          style: styles.headerDesc
        }, "\u5B69\u5B50\u5BB9\u6613\u88AB\u624B\u673A\u4E2D\u6709\u5BB3\u4FE1\u606F\u8BEF\u5BFC\uFF0C\u513F\u7AE5\u5B88\u62A4\u80FD\u81EA\u52A8\u963B\u65AD\u8FC7\u6EE4\u9EC4\u8272\u3001\u6050\u6016\u66B4\u529B\u7B49\u6709\u5BB3\u8BBF\u95EE\uFF0C\u540C\u65F6\u5728 \u6DF1\u591C\u4E0A\u7F51\u65F6\u63D0\u9192\uFF0C\u6BCF\u65F6\u6BCF\u523B\u5B88\u62A4\u60A8\u7684\u5B69\u5B50\u3002")), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.bottomButton,
          onPress: function onPress() {
            return _this2.addDevice();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.buttonTitle
        }, "\u6DFB\u52A0\u8BBE\u5907")));
      }
    }, {
      key: "addDevice",
      value: function addDevice() {
        this.props.navigation.navigate('CPDLAddDevice', {
          title: ''
        });
      }
    }]);
    return CPDeviceList;
  }(_react.default.Component);

  exports.default = CPDeviceList;

  CPDeviceList.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "light",
        title: "",
        style: {
          backgroundColor: '#28d188'
        },
        onPressLeft: function onPressLeft(_) {
          return navigation.goBack();
        }
      })
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#ffffff',
      flexDirection: 'column'
    },
    headerContainer: {
      backgroundColor: '#28d188',
      height: 200,
      width: _Devices.ScreenW
    },
    headerImage: {
      height: 61,
      width: 70,
      marginTop: 10,
      marginLeft: (_Devices.ScreenW - 70) * 0.5
    },
    headerTitle: {
      color: '#fff',
      fontSize: 16,
      textAlign: 'center',
      marginTop: 10
    },
    headerDesc: {
      color: '#fff',
      fontSize: 12,
      textAlign: 'left',
      maxWidth: _Devices.ScreenW - 20,
      marginTop: 10,
      marginLeft: 15,
      lineHeight: 18
    },
    bottomButton: {
      position: 'absolute',
      bottom: 25,
      height: 50,
      left: 15,
      width: _Devices.ScreenW - 30,
      borderRadius: 25,
      borderColor: '#ddd',
      borderWidth: 0.5,
      alignItems: "center",
      justifyContent: "center"
    },
    buttonTitle: {
      fontSize: 14,
      color: '#000',
      textAlign: 'center'
    }
  });
},10724,[14305,14320,14323,14371,14377,14386,10284,10338,10755,10074,10332,10297,10033,10067,10727]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/toolBox/childProtect",
    "width": 209,
    "height": 183,
    "scales": [1],
    "hash": "a6d74d5dab4a0e9269a55b5f376ee3a0",
    "name": "cp_dl_header",
    "type": "png"
  });
},10727,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'user strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[7]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[8]);

  var _miot = _$$_REQUIRE(_dependencyMap[9]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _Devices = _$$_REQUIRE(_dependencyMap[13]);

  var CPDLAddDevice = function (_React$Component) {
    (0, _inherits2.default)(CPDLAddDevice, _React$Component);

    function CPDLAddDevice(props) {
      var _this;

      (0, _classCallCheck2.default)(this, CPDLAddDevice);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CPDLAddDevice).call(this, props));

      _this._getRowData = function (dataBlob, rowID) {
        return dataBlob[rowID];
      };

      _this.state = {
        dataSource: new _reactNative.ListView.DataSource({
          rowHasChanged: function rowHasChanged(r1, r2) {
            return r1 !== r2;
          },
          getRowData: _this._getRowData
        })
      };
      return _this;
    }

    (0, _createClass2.default)(CPDLAddDevice, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.fetchDevices();
      }
    }, {
      key: "_renderRow",
      value: function _renderRow(rowData, rowId) {
        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.itemContainer
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.itemIcon,
          source: _$$_REQUIRE(_dependencyMap[14])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.itemName
        }, "rowData.value.name"), _react.default.createElement(_reactNative.Text, {
          style: styles.itemDesc
        }, "rowData.value.time"), _react.default.createElement(_reactNative.View, {
          style: styles.itemSeprator
        }));
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.SafeAreaView, {
          style: styles.container
        }, _react.default.createElement(_reactNative.ListView, {
          style: styles.listContainer,
          dataSource: this.state.dataSource,
          renderRow: this._renderRow.bind(this)
        }));
      }
    }, {
      key: "fetchDevices",
      value: function fetchDevices() {
        var devices = [{
          name: '1233333',
          time: '5分钟之前'
        }, {
          name: '333444555',
          time: '6分钟之前'
        }];
        var data = [];
        devices.map(function (item, i) {
          var newItem = {
            key: i,
            value: item
          };
          data.push(newItem);
        });
        this.setState({
          dataSource: this.state.dataSource.cloneWithRows(data)
        });
      }
    }]);
    return CPDLAddDevice;
  }(_react.default.Component);

  exports.default = CPDLAddDevice;

  CPDLAddDevice.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "light",
        title: "\u8BF7\u9009\u62E9\u9879\u76EE",
        style: {
          backgroundColor: '#1d1b2a'
        },
        onPressLeft: function onPressLeft(_) {
          return navigation.goBack();
        }
      })
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#ffffff',
      flexDirection: 'column'
    },
    listContainer: {
      marginTop: 0,
      marginLeft: 0,
      marginRight: 0,
      marginBottom: 0,
      width: _Devices.ScreenW
    },
    itemContainer: {
      flexDirection: 'column',
      height: 75,
      width: _Devices.ScreenW
    },
    itemSeprator: {
      position: 'absolute',
      bottom: 0.1,
      marginLeft: 82,
      width: _Devices.ScreenW - 82,
      height: 0.5,
      backgroundColor: '#e6e6e6'
    },
    itemIcon: {
      position: 'absolute',
      left: 15,
      top: 12,
      width: 52,
      height: 52,
      resizeMode: 'contain'
    },
    itemName: {
      left: 82,
      height: 19,
      fontSize: 15,
      color: '#000',
      marginTop: 21,
      maxWidth: _Devices.ScreenW - 82 - 15,
      textAlign: 'left'
    },
    itemDesc: {
      left: 82,
      height: 15,
      fontSize: 12,
      color: '#666',
      marginTop: 5,
      maxWidth: _Devices.ScreenW - 82 - 15,
      textAlign: 'left'
    }
  });
},10730,[14305,14320,14323,14371,14377,14386,10284,10338,10755,10074,10332,10297,10033,10067,10721]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[7]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[8]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _Devices = _$$_REQUIRE(_dependencyMap[12]);

  var _miot = _$$_REQUIRE(_dependencyMap[13]);

  var _CommonSetting = _$$_REQUIRE(_dependencyMap[14]);

  var RouterPluginCommonSetting = function (_React$Component) {
    (0, _inherits2.default)(RouterPluginCommonSetting, _React$Component);

    function RouterPluginCommonSetting(props) {
      var _this;

      (0, _classCallCheck2.default)(this, RouterPluginCommonSetting);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RouterPluginCommonSetting).call(this, props));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(RouterPluginCommonSetting, [{
      key: "render",
      value: function render() {
        var firstOptions = [];
        var secondOptions = [];
        var extraOptions = {
          option: {
            privacyURL: _$$_REQUIRE(_dependencyMap[15]),
            agreementURL: _$$_REQUIRE(_dependencyMap[16]),
            hideUserExperiencePlan: true,
            showUpgrade: false
          }
        };
        return _react.default.createElement(_CommonSetting.CommonSetting, {
          navigation: this.props.navigation,
          firstOptions: firstOptions,
          secondOptions: secondOptions,
          extraOptions: extraOptions
        });
      }
    }]);
    return RouterPluginCommonSetting;
  }(_react.default.Component);

  exports.default = RouterPluginCommonSetting;

  RouterPluginCommonSetting.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: "\u8BBE\u7F6E",
        style: {
          backgroundColor: '#fff'
        },
        onPressLeft: function onPressLeft(_) {
          return navigation.goBack();
        }
      })
    };
  };
},10733,[14305,14320,14323,14371,14377,14386,10284,10338,10755,10332,10297,10033,10067,10074,10353,10331,10328]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[7]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[8]);

  var _miot = _$$_REQUIRE(_dependencyMap[9]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _Devices = _$$_REQUIRE(_dependencyMap[13]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _device = _$$_REQUIRE(_dependencyMap[15]);

  var _ui = _$$_REQUIRE(_dependencyMap[16]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[18]);

  var _setting_icon_internet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _setting_icon_restart = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var dialogButtonName = ['确定', '取消', '提示'];
  var dialogTip = '重启后将会中断当前所有连接，需要约1分钟恢复重启后可能需要手工连接WiFi,是否立即重启路由器？';
  var recoverDialogTip = '如果恢复路由器出厂设置，小米/Redmi路由器将清空当前所有设置回到初始状态,是否立即清空数据并恢复出厂设置？';

  var ToolBox = function (_React$Component) {
    (0, _inherits2.default)(ToolBox, _React$Component);

    function ToolBox(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ToolBox);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToolBox).call(this, props));

      _this._onPressItem = function (item, rowID, sectionID) {
        if (sectionID == 0) {
          if (item.title === '上网模式设置') {
            _this.props.navigation.navigate('NetworkMode', {
              title: '上网模式设置'
            });
          }
        } else if (sectionID == 1) {
          if (item.title == "重启路由器") {
            _this.setState({
              rebootAlertVisible: true
            });
          }
        } else if (sectionID == 2) {
          if (item.title == "恢复路由器出厂设置") {
            _this.setState({
              recoverRouterAlertVisible: true
            });
          }
        }
      };

      _this._getSectionHeaderData = function (dataBlob, sectionID) {
        return dataBlob[sectionID];
      };

      _this._getRowData = function (dataBlob, sectionID, rowID) {
        var sectionData = dataBlob[sectionID];
        return sectionData[rowID];
      };

      _this.state = {
        dataSource: new _reactNative.ListView.DataSource({
          rowHasChanged: function rowHasChanged(r1, r2) {
            return r1 !== r2;
          },
          sectionHeaderHasChanged: function sectionHeaderHasChanged(s1, s2) {
            return s1 !== s2;
          },
          getSectionHeaderData: _this._getSectionHeaderData,
          getRowData: _this._getRowData,
          rebootAlertVisible: false,
          loading: false,
          hasBeginStartRouter: false,
          hasEndStartRouter: false,
          recoverRouterLoading: false,
          recoverRouterAlertVisible: false
        })
      };
      return _this;
    }

    (0, _createClass2.default)(ToolBox, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        var list = [[{
          title: '上网模式设置',
          imgUrl: _setting_icon_internet.default
        }], [{
          title: '重启路由器',
          imgUrl: _setting_icon_restart.default
        }], [{
          title: '恢复路由器出厂设置',
          imgUrl: _setting_icon_restart.default
        }]];
        var sectionHeaders = [];
        var data = [];
        var section = [];
        list.map(function (secItem, i) {
          sectionHeaders.push(i);
          var newSection = [];
          secItem.map(function (rowItem, j) {
            newSection.push(j);
          });
          section.push(newSection);
        });
        this.setState({
          dataSource: this.state.dataSource.cloneWithRowsAndSections(list, sectionHeaders, section)
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        clearInterval(this.timer);
      }
    }, {
      key: "_gotoRebootRouter",
      value: function _gotoRebootRouter() {
        var _this2 = this;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceId: deviceId
          }
        };
        var api = _API.default.reboot_router.remote;

        _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
          var code = res.code;

          if (code == 0) {
            _this2.timer = setInterval(function () {
              _this2._pingrouter();
            }, 3000);
          }
        }).catch(function (e) {
          _this2.setState({
            loading: false
          });
        });
      }
    }, {
      key: "_pingrouter",
      value: function _pingrouter() {
        var _this3 = this;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceId: deviceId
          }
        };
        var api = _API.default.router.init_info;

        _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
          if (res.code == 0) {
            if (!_this3.state.hasEndStartRouter && _this3.state.hasBeginStartRouter) {
              _this3.setState({
                hasEndStartRouter: true,
                loading: false
              });

              _CommonUtils.default.ShowToastBottom('重启成功');

              _this3.props.navigation.popToTop();
            }
          }
        }).catch(function (e) {
          if (!_this3.state.hasBeginStartRouter) {
            _this3.setState({
              hasBeginStartRouter: true
            });
          }
        });
      }
    }, {
      key: "_gotoRecoverRouter",
      value: function _gotoRecoverRouter() {
        var _this4 = this;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceId: deviceId,
            format: '0'
          }
        };
        var api = _API.default.recover_router.remote;

        _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
          if (res.code == 0) {
            _this4._unbindRouter();
          }
        }).catch(function (e) {
          _this4.setState({
            recoverRouterLoading: false
          });

          _CommonUtils.default.ShowToastBottom('操作失败');
        });
      }
    }, {
      key: "_unbindRouter",
      value: function _unbindRouter() {
        var _this5 = this;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'POST';
        var paramsDic = {
          method: method,
          params: {
            deviceID: deviceId
          }
        };
        var api = _API.default.router_unbind.remote;

        _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
          if (res.code == 0) {
            _this5.setState({
              recoverRouterLoading: false
            });

            _CommonUtils.default.ShowToastBottom('操作成功，该设备已解绑');

            _miot.Package.exit();
          }
        }).catch(function (e) {
          _this5.setState({
            recoverRouterLoading: false
          });

          _CommonUtils.default.ShowToastBottom('操作失败');
        });
      }
    }, {
      key: "_renderSectionHeader",
      value: function _renderSectionHeader(sectionData, sectionId) {
        if (sectionId == 0) {
          return null;
        } else {
          return _react.default.createElement(_reactNative.View, {
            style: styles.sectionHeader
          });
        }
      }
    }, {
      key: "_renderRow",
      value: function _renderRow(rowData, sectionID, rowID) {
        var _this6 = this;

        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.listItem,
          onPress: function onPress() {
            return _this6._onPressItem(rowData, rowID, sectionID);
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.itemImageIcon,
          source: rowData.imgUrl
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.itemText
        }, rowData.title), _react.default.createElement(_reactNative.Image, {
          style: styles.itemIndicator,
          source: _$$_REQUIRE(_dependencyMap[22])
        }));
      }
    }, {
      key: "render",
      value: function render() {
        var _this7 = this;

        return _react.default.createElement(_reactNative.SafeAreaView, {
          style: styles.container
        }, _react.default.createElement(_reactNative.ListView, {
          dataSource: this.state.dataSource,
          renderRow: this._renderRow.bind(this),
          renderSectionHeader: this._renderSectionHeader.bind(this),
          stickySectionHeadersEnabled: false
        }), _react.default.createElement(_ui.MessageDialog, {
          title: dialogButtonName[2],
          message: dialogTip,
          cancelable: false,
          cancel: dialogButtonName[1],
          confirm: dialogButtonName[0],
          onCancel: function onCancel(e) {},
          onConfirm: function onConfirm(e) {
            _this7.setState({
              loading: true
            });

            _this7._gotoRebootRouter();
          },
          onDismiss: function onDismiss() {
            _this7.setState({
              rebootAlertVisible: false
            });
          },
          visible: this.state.rebootAlertVisible
        }), _react.default.createElement(_ui.MessageDialog, {
          title: dialogButtonName[2],
          message: recoverDialogTip,
          cancelable: false,
          cancel: dialogButtonName[1],
          confirm: dialogButtonName[0],
          onCancel: function onCancel(e) {},
          onConfirm: function onConfirm(e) {
            _this7.setState({
              recoverRouterLoading: true
            });

            _this7._gotoRecoverRouter();
          },
          onDismiss: function onDismiss() {
            _this7.setState({
              recoverRouterAlertVisible: false
            });
          },
          visible: this.state.recoverRouterAlertVisible
        }), _react.default.createElement(_ui.LoadingDialog, {
          visible: this.state.loading,
          message: "\u91CD\u542F\u4E2D\uFF0C\u8BF7\u7A0D\u540E..."
        }), _react.default.createElement(_ui.LoadingDialog, {
          visible: this.state.recoverRouterLoading,
          message: "\u8DEF\u7531\u5668\u6062\u590D\u51FA\u5382\u8BBE\u7F6E\u4E2D\uFF0C\u8BF7\u7A0D\u540E..."
        }));
      }
    }]);
    return ToolBox;
  }(_react.default.Component);

  exports.default = ToolBox;

  ToolBox.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "light",
        title: "\u8DEF\u7531\u8BBE\u7F6E",
        style: {
          backgroundColor: '#1a1b2a'
        },
        onPressLeft: function onPressLeft(_) {
          return navigation.goBack();
        }
      })
    };
  };

  var itemImgWidth = 22;
  var itemWidth = _Devices.ScreenW;
  var itemHeight = 60;
  var itemImgMarginLeft = 15;
  var itemTextMarginLeft = 15;
  var itemTextMarginRight = 30;

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#f6f6f6',
      flex: 1
    },
    listItem: {
      backgroundColor: '#fff',
      height: itemHeight,
      flexDirection: 'row',
      width: itemWidth
    },
    itemImageIcon: {
      position: 'absolute',
      width: itemImgWidth,
      height: itemImgWidth,
      resizeMode: 'contain',
      top: 19,
      left: 15
    },
    itemText: {
      position: 'absolute',
      marginLeft: 52,
      maxWidth: itemWidth - itemImgMarginLeft - itemImgWidth - itemTextMarginLeft - itemTextMarginRight,
      maxHeight: 16,
      color: 'black',
      fontSize: 14,
      marginTop: 23,
      textAlign: 'left'
    },
    itemIndicator: {
      position: 'absolute',
      right: 10,
      height: 13,
      width: 7,
      marginTop: 23
    },
    sectionHeader: {
      height: 20,
      width: _Devices.ScreenW,
      backgroundColor: '#f6f6f6'
    }
  });
},10736,[14305,14320,14323,14371,14377,14386,10284,10338,10755,10074,10332,10297,10033,10067,10064,10935,10230,10040,10918,10739,10274,10013,10742]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/routerSetting",
    "width": 46,
    "height": 46,
    "scales": [1],
    "hash": "1bd10023c49f82b5b7a0f16f5128d354",
    "name": "setting_icon_internet",
    "type": "png"
  });
},10739,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/routerSetting",
    "width": 14,
    "height": 26,
    "scales": [1],
    "hash": "e83fcbcb44ffdd2a97d4c2f14f2b3d9c",
    "name": "setting_cell_arrow",
    "type": "png"
  });
},10742,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[7]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[8]);

  var _miot = _$$_REQUIRE(_dependencyMap[9]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _Devices = _$$_REQUIRE(_dependencyMap[13]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _device = _$$_REQUIRE(_dependencyMap[15]);

  var _ui = _$$_REQUIRE(_dependencyMap[16]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[18]);

  var NetworkModeWirelessSelectWifi = function (_React$Component) {
    (0, _inherits2.default)(NetworkModeWirelessSelectWifi, _React$Component);

    function NetworkModeWirelessSelectWifi(props) {
      var _this;

      (0, _classCallCheck2.default)(this, NetworkModeWirelessSelectWifi);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NetworkModeWirelessSelectWifi).call(this, props));
      _this.state = {
        dataSource: new _reactNative.ListView.DataSource({
          rowHasChanged: function rowHasChanged(r1, r2) {
            return r1 !== r2;
          }
        }),
        wifiList: props.navigation.state.params.wifiList
      };
      return _this;
    }

    (0, _createClass2.default)(NetworkModeWirelessSelectWifi, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.setState({
          dataSource: this.state.dataSource.cloneWithRows(this.state.wifiList)
        });
      }
    }, {
      key: "_onSelectItem",
      value: function _onSelectItem(item) {
        this.props.navigation.state.params.callback(item);
        this.props.navigation.goBack();
      }
    }, {
      key: "_renderRow",
      value: function _renderRow(rowData, rowID) {
        var _this2 = this;

        var band = rowData.band;
        var ssidText = rowData.ssid;
        var isEncryptionNone = rowData.encryption === 'NONE';
        var sourceUrl = isEncryptionNone ? _$$_REQUIRE(_dependencyMap[19]) : _$$_REQUIRE(_dependencyMap[20]);
        return _react.default.createElement(_reactNative.TouchableOpacity, {
          underlayColor: 'rgba(0,0,0,0.1)',
          onPress: function onPress() {
            _this2._onSelectItem(rowData);
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, ssidText), _react.default.createElement(_reactNative.View, {
          style: styles.right
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.value
        }, this.props.value), _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Image, {
          style: styles.sub_arrow,
          source: sourceUrl
        })))), _react.default.createElement(_reactNative.View, {
          style: {
            marginLeft: 20,
            marginRight: 0,
            height: 0.5,
            backgroundColor: '#eee'
          }
        }));
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.SafeAreaView, {
          style: styles.container
        }, _react.default.createElement(_reactNative.ListView, {
          dataSource: this.state.dataSource,
          renderRow: this._renderRow.bind(this)
        }));
      }
    }]);
    return NetworkModeWirelessSelectWifi;
  }(_react.default.Component);

  exports.default = NetworkModeWirelessSelectWifi;

  NetworkModeWirelessSelectWifi.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "light",
        title: "\u9009\u62E9\u8DEF\u7531",
        style: {
          backgroundColor: '#1a1b2a'
        },
        onPressLeft: function onPressLeft(_) {
          return navigation.goBack();
        }
      })
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#ffffff',
      flexDirection: 'column'
    },
    listItemContainer: {
      height: 50,
      backgroundColor: '#ffffff',
      width: _Devices.ScreenW
    },
    itemText: {
      position: 'absolute',
      left: 15,
      maxWidth: _Devices.ScreenW - 15 - 30,
      maxHeight: 16,
      color: 'black',
      fontSize: 14,
      top: 17,
      textAlign: 'left'
    },
    itemIndicator: {
      position: 'absolute',
      right: 20,
      height: 18,
      width: 9,
      marginTop: 16
    },
    itemSeparator: {
      position: 'absolute',
      left: 15,
      top: 49.5,
      width: _Devices.ScreenW - 15,
      height: 0.5,
      color: 'rgba(0,0,0,0.15)'
    },
    item: {
      height: 54,
      justifyContent: 'space-between',
      alignItems: 'center',
      flexDirection: 'row'
    },
    title: {
      fontSize: 16,
      fontWeight: 'bold',
      marginLeft: 20
    },
    right: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    value: {
      fontSize: 13,
      color: '#999999'
    },
    sub_arrow: {
      width: 20,
      height: 20,
      resizeMode: 'cover',
      marginRight: 15
    }
  });
},10745,[14305,14320,14323,14371,14377,14386,10284,10338,10755,10074,10332,10297,10033,10067,10064,10935,10230,10040,10918,10748,10751]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "d00623e3874aeed2f742574b5fa333fc",
    "name": "wifi_free",
    "type": "png"
  });
},10748,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "561fe170153fa23e92f7a4f84c1f1947",
    "name": "wifi",
    "type": "png"
  });
},10751,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _reactNativeScrollableTabView = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _wifisetting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _NetworkMode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var RouterSetWifiAndNetmode = function (_React$Component) {
    (0, _inherits2.default)(RouterSetWifiAndNetmode, _React$Component);

    function RouterSetWifiAndNetmode(props) {
      (0, _classCallCheck2.default)(this, RouterSetWifiAndNetmode);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RouterSetWifiAndNetmode).call(this, props));
    }

    (0, _createClass2.default)(RouterSetWifiAndNetmode, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNativeScrollableTabView.default, {
          style: {
            marginTop: 0
          },
          initialPage: 0,
          tabBarActiveTextColor: "#000",
          tabBarUnderlineStyle: {
            backgroundColor: '#2C7DFA',
            height: 2
          },
          renderTabBar: function renderTabBar() {
            return _react.default.createElement(_reactNativeScrollableTabView.DefaultTabBar, {
              backgroundColor: "#fff"
            });
          }
        }, _react.default.createElement(_wifisetting.default, {
          tabLabel: 'WiFi设置',
          navigation: this.props.navigation
        }), _react.default.createElement(_NetworkMode.default, {
          tabLabel: '上网模式设置',
          navigation: this.props.navigation
        }));
      }
    }]);
    return RouterSetWifiAndNetmode;
  }(_react.default.Component);

  exports.default = RouterSetWifiAndNetmode;

  RouterSetWifiAndNetmode.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: '',
        style: {
          backgroundColor: '#fff'
        },
        onPressLeft: function onPressLeft(_) {
          return navigation.goBack();
        }
      })
    };
  };
},10754,[14308,14305,14320,14323,14371,14377,14386,10297,10033,10757,10284,10391,10625]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _defineProperty = _$$_REQUIRE(_dependencyMap[0]);

  var _extends = _$$_REQUIRE(_dependencyMap[1]);

  var React = _$$_REQUIRE(_dependencyMap[2]);

  var Component = React.Component;

  var _ReactNative = ReactNative = _$$_REQUIRE(_dependencyMap[3]),
      ViewPropTypes = _ReactNative.ViewPropTypes;

  var createReactClass = _$$_REQUIRE(_dependencyMap[4]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var _ReactNative2 = ReactNative,
      Dimensions = _ReactNative2.Dimensions,
      View = _ReactNative2.View,
      Animated = _ReactNative2.Animated,
      ScrollView = _ReactNative2.ScrollView,
      Platform = _ReactNative2.Platform,
      StyleSheet = _ReactNative2.StyleSheet,
      ViewPagerAndroid = _ReactNative2.ViewPagerAndroid,
      InteractionManager = _ReactNative2.InteractionManager;

  var TimerMixin = _$$_REQUIRE(_dependencyMap[6]);

  var SceneComponent = _$$_REQUIRE(_dependencyMap[7]);

  var DefaultTabBar = _$$_REQUIRE(_dependencyMap[8]);

  var ScrollableTabBar = _$$_REQUIRE(_dependencyMap[9]);

  var AnimatedViewPagerAndroid = Animated.createAnimatedComponent(ViewPagerAndroid);
  var ScrollableTabView = createReactClass({
    displayName: "ScrollableTabView",
    mixins: [TimerMixin],
    statics: {
      DefaultTabBar: DefaultTabBar,
      ScrollableTabBar: ScrollableTabBar
    },
    scrollOnMountCalled: false,
    propTypes: {
      tabBarPosition: PropTypes.oneOf(['top', 'bottom', 'overlayTop', 'overlayBottom']),
      initialPage: PropTypes.number,
      page: PropTypes.number,
      onChangeTab: PropTypes.func,
      onScroll: PropTypes.func,
      renderTabBar: PropTypes.any,
      style: ViewPropTypes.style,
      contentProps: PropTypes.object,
      scrollWithoutAnimation: PropTypes.bool,
      locked: PropTypes.bool,
      prerenderingSiblingsNumber: PropTypes.number
    },
    getDefaultProps: function getDefaultProps() {
      return {
        tabBarPosition: 'top',
        initialPage: 0,
        page: -1,
        onChangeTab: function onChangeTab() {},
        onScroll: function onScroll() {},
        contentProps: {},
        scrollWithoutAnimation: false,
        locked: false,
        prerenderingSiblingsNumber: 0
      };
    },
    getInitialState: function getInitialState() {
      var _this = this;

      var containerWidth = Dimensions.get('window').width;
      var scrollValue;
      var scrollXIOS;
      var positionAndroid;
      var offsetAndroid;
      {
        positionAndroid = new Animated.Value(this.props.initialPage);
        offsetAndroid = new Animated.Value(0);
        scrollValue = Animated.add(positionAndroid, offsetAndroid);

        var _callListeners = this._polyfillAnimatedValue(scrollValue);

        var positionAndroidValue = this.props.initialPage;
        var offsetAndroidValue = 0;
        positionAndroid.addListener(function (_ref2) {
          var value = _ref2.value;
          positionAndroidValue = value;

          _callListeners(positionAndroidValue + offsetAndroidValue);
        });
        offsetAndroid.addListener(function (_ref3) {
          var value = _ref3.value;
          offsetAndroidValue = value;

          _callListeners(positionAndroidValue + offsetAndroidValue);
        });
      }
      return {
        currentPage: this.props.initialPage,
        scrollValue: scrollValue,
        scrollXIOS: scrollXIOS,
        positionAndroid: positionAndroid,
        offsetAndroid: offsetAndroid,
        containerWidth: containerWidth,
        sceneKeys: this.newSceneKeys({
          currentPage: this.props.initialPage
        })
      };
    },
    componentWillReceiveProps: function componentWillReceiveProps(props) {
      if (props.children !== this.props.children) {
        this.updateSceneKeys({
          page: this.state.currentPage,
          children: props.children
        });
      }

      if (props.page >= 0 && props.page !== this.state.currentPage) {
        this.goToPage(props.page);
      }
    },
    componentWillUnmount: function componentWillUnmount() {
      {
        this.state.positionAndroid.removeAllListeners();
        this.state.offsetAndroid.removeAllListeners();
      }
    },
    goToPage: function goToPage(pageNumber) {
      {
        if (this.scrollView) {
          if (this.props.scrollWithoutAnimation) {
            this.scrollView.getNode().setPageWithoutAnimation(pageNumber);
          } else {
            this.scrollView.getNode().setPage(pageNumber);
          }
        }
      }
      var currentPage = this.state.currentPage;
      this.updateSceneKeys({
        page: pageNumber,
        callback: this._onChangeTab.bind(this, currentPage, pageNumber)
      });
    },
    renderTabBar: function renderTabBar(props) {
      if (this.props.renderTabBar === false) {
        return null;
      } else if (this.props.renderTabBar) {
        return React.cloneElement(this.props.renderTabBar(props), props);
      } else {
        return React.createElement(DefaultTabBar, props);
      }
    },
    updateSceneKeys: function updateSceneKeys(_ref4) {
      var page = _ref4.page,
          _ref4$children = _ref4.children,
          children = _ref4$children === undefined ? this.props.children : _ref4$children,
          _ref4$callback = _ref4.callback,
          callback = _ref4$callback === undefined ? function () {} : _ref4$callback;
      var newKeys = this.newSceneKeys({
        previousKeys: this.state.sceneKeys,
        currentPage: page,
        children: children
      });
      this.setState({
        currentPage: page,
        sceneKeys: newKeys
      }, callback);
    },
    newSceneKeys: function newSceneKeys(_ref5) {
      var _this2 = this;

      var _ref5$previousKeys = _ref5.previousKeys,
          previousKeys = _ref5$previousKeys === undefined ? [] : _ref5$previousKeys,
          _ref5$currentPage = _ref5.currentPage,
          currentPage = _ref5$currentPage === undefined ? 0 : _ref5$currentPage,
          _ref5$children = _ref5.children,
          children = _ref5$children === undefined ? this.props.children : _ref5$children;
      var newKeys = [];

      this._children(children).forEach(function (child, idx) {
        var key = _this2._makeSceneKey(child, idx);

        if (_this2._keyExists(previousKeys, key) || _this2._shouldRenderSceneKey(idx, currentPage)) {
          newKeys.push(key);
        }
      });

      return newKeys;
    },
    _polyfillAnimatedValue: function _polyfillAnimatedValue(animatedValue) {
      var listeners = new Set();

      var addListener = function addListener(listener) {
        listeners.add(listener);
      };

      var removeListener = function removeListener(listener) {
        listeners.delete(listener);
      };

      var removeAllListeners = function removeAllListeners() {
        listeners.clear();
      };

      animatedValue.addListener = addListener;
      animatedValue.removeListener = removeListener;
      animatedValue.removeAllListeners = removeAllListeners;
      return function (value) {
        return listeners.forEach(function (listener) {
          return listener({
            value: value
          });
        });
      };
    },
    _shouldRenderSceneKey: function _shouldRenderSceneKey(idx, currentPageKey) {
      var numOfSibling = this.props.prerenderingSiblingsNumber;
      return idx < currentPageKey + numOfSibling + 1 && idx > currentPageKey - numOfSibling - 1;
    },
    _keyExists: function _keyExists(sceneKeys, key) {
      return sceneKeys.find(function (sceneKey) {
        return key === sceneKey;
      });
    },
    _makeSceneKey: function _makeSceneKey(child, idx) {
      return child.props.tabLabel + '_' + idx;
    },
    renderScrollableContent: function renderScrollableContent() {
      var _this3 = this;

      {
        var _scenes = this._composeScenes();

        return React.createElement(AnimatedViewPagerAndroid, _extends({
          key: this._children().length,
          style: styles.scrollableContentAndroid,
          initialPage: this.props.initialPage,
          onPageSelected: this._updateSelectedPage,
          keyboardDismissMode: "on-drag",
          scrollEnabled: !this.props.locked,
          onPageScroll: Animated.event([{
            nativeEvent: {
              position: this.state.positionAndroid,
              offset: this.state.offsetAndroid
            }
          }], {
            useNativeDriver: true,
            listener: this._onScroll
          }),
          ref: function ref(scrollView) {
            _this3.scrollView = scrollView;
          }
        }, this.props.contentProps), _scenes);
      }
    },
    _composeScenes: function _composeScenes() {
      var _this4 = this;

      return this._children().map(function (child, idx) {
        var key = _this4._makeSceneKey(child, idx);

        return React.createElement(SceneComponent, {
          key: child.key,
          shouldUpdated: _this4._shouldRenderSceneKey(idx, _this4.state.currentPage),
          style: {
            width: _this4.state.containerWidth
          }
        }, _this4._keyExists(_this4.state.sceneKeys, key) ? child : React.createElement(View, {
          tabLabel: child.props.tabLabel
        }));
      });
    },
    _onMomentumScrollBeginAndEnd: function _onMomentumScrollBeginAndEnd(e) {
      var offsetX = e.nativeEvent.contentOffset.x;
      var page = Math.round(offsetX / this.state.containerWidth);

      if (this.state.currentPage !== page) {
        this._updateSelectedPage(page);
      }
    },
    _updateSelectedPage: function _updateSelectedPage(nextPage) {
      var localNextPage = nextPage;

      if (typeof localNextPage === 'object') {
        localNextPage = nextPage.nativeEvent.position;
      }

      var currentPage = this.state.currentPage;
      this.updateSceneKeys({
        page: localNextPage,
        callback: this._onChangeTab.bind(this, currentPage, localNextPage)
      });
    },
    _onChangeTab: function _onChangeTab(prevPage, currentPage) {
      this.props.onChangeTab({
        i: currentPage,
        ref: this._children()[currentPage],
        from: prevPage
      });
    },
    _onScroll: function _onScroll(e) {
      {
        var _e$nativeEvent = e.nativeEvent,
            position = _e$nativeEvent.position,
            offset = _e$nativeEvent.offset;
        this.props.onScroll(position + offset);
      }
    },
    _handleLayout: function _handleLayout(e) {
      var _this5 = this;

      var width = e.nativeEvent.layout.width;

      if (Math.round(width) !== Math.round(this.state.containerWidth)) {
        {
          this.setState({
            containerWidth: width
          });
        }
        this.requestAnimationFrame(function () {
          _this5.goToPage(_this5.state.currentPage);
        });
      }
    },
    _children: function _children() {
      var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.children;
      return React.Children.map(children, function (child) {
        return child;
      });
    },
    render: function render() {
      var overlayTabs = this.props.tabBarPosition === 'overlayTop' || this.props.tabBarPosition === 'overlayBottom';
      var tabBarProps = {
        goToPage: this.goToPage,
        tabs: this._children().map(function (child) {
          return child.props.tabLabel;
        }),
        activeTab: this.state.currentPage,
        scrollValue: this.state.scrollValue,
        containerWidth: this.state.containerWidth
      };

      if (this.props.tabBarBackgroundColor) {
        tabBarProps.backgroundColor = this.props.tabBarBackgroundColor;
      }

      if (this.props.tabBarActiveTextColor) {
        tabBarProps.activeTextColor = this.props.tabBarActiveTextColor;
      }

      if (this.props.tabBarInactiveTextColor) {
        tabBarProps.inactiveTextColor = this.props.tabBarInactiveTextColor;
      }

      if (this.props.tabBarTextStyle) {
        tabBarProps.textStyle = this.props.tabBarTextStyle;
      }

      if (this.props.tabBarUnderlineStyle) {
        tabBarProps.underlineStyle = this.props.tabBarUnderlineStyle;
      }

      if (overlayTabs) {
        tabBarProps.style = _defineProperty({
          position: 'absolute',
          left: 0,
          right: 0
        }, this.props.tabBarPosition === 'overlayTop' ? 'top' : 'bottom', 0);
      }

      return React.createElement(View, {
        style: [styles.container, this.props.style],
        onLayout: this._handleLayout
      }, this.props.tabBarPosition === 'top' && this.renderTabBar(tabBarProps), this.renderScrollableContent(), (this.props.tabBarPosition === 'bottom' || overlayTabs) && this.renderTabBar(tabBarProps));
    }
  });
  module.exports = ScrollableTabView;
  var styles = StyleSheet.create({
    container: {
      flex: 1
    },
    scrollableContentAndroid: {
      flex: 1
    }
  });
},10757,[14317,14344,10297,10033,10456,10318,10513,10760,10766,10772]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[0]);

  var React = _$$_REQUIRE(_dependencyMap[1]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[2]);

  var Component = React.Component;
  var View = ReactNative.View,
      StyleSheet = ReactNative.StyleSheet;

  var StaticContainer = _$$_REQUIRE(_dependencyMap[3]);

  var SceneComponent = function SceneComponent(Props) {
    var shouldUpdated = Props.shouldUpdated,
        props = _objectWithoutProperties(Props, ["shouldUpdated"]);

    return React.createElement(View, props, React.createElement(StaticContainer, {
      shouldUpdate: shouldUpdated
    }, props.children));
  };

  module.exports = SceneComponent;
},10760,[14407,10297,10033,10763]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var React = _$$_REQUIRE(_dependencyMap[5]);

  var StaticContainer = function (_React$Component) {
    "use strict";

    _inherits(StaticContainer, _React$Component);

    function StaticContainer() {
      _classCallCheck(this, StaticContainer);

      return _possibleConstructorReturn(this, _getPrototypeOf(StaticContainer).apply(this, arguments));
    }

    _createClass(StaticContainer, [{
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate(nextProps) {
        return !!nextProps.shouldUpdate;
      }
    }, {
      key: "render",
      value: function render() {
        var child = this.props.children;

        if (child === null || child === false) {
          return null;
        }

        return React.Children.only(child);
      }
    }]);

    return StaticContainer;
  }(React.Component);

  module.exports = StaticContainer;
},10763,[14320,14323,14371,14377,14386,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var React = _$$_REQUIRE(_dependencyMap[0]);

  var _ReactNative = ReactNative = _$$_REQUIRE(_dependencyMap[1]),
      ViewPropTypes = _ReactNative.ViewPropTypes;

  var PropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var createReactClass = _$$_REQUIRE(_dependencyMap[3]);

  var _ReactNative2 = ReactNative,
      StyleSheet = _ReactNative2.StyleSheet,
      Text = _ReactNative2.Text,
      View = _ReactNative2.View,
      Animated = _ReactNative2.Animated;

  var Button = _$$_REQUIRE(_dependencyMap[4]);

  var DefaultTabBar = createReactClass({
    displayName: "DefaultTabBar",
    propTypes: {
      goToPage: PropTypes.func,
      activeTab: PropTypes.number,
      tabs: PropTypes.array,
      backgroundColor: PropTypes.string,
      activeTextColor: PropTypes.string,
      inactiveTextColor: PropTypes.string,
      textStyle: Text.propTypes.style,
      tabStyle: ViewPropTypes.style,
      renderTab: PropTypes.func,
      underlineStyle: ViewPropTypes.style
    },
    getDefaultProps: function getDefaultProps() {
      return {
        activeTextColor: 'navy',
        inactiveTextColor: 'black',
        backgroundColor: null
      };
    },
    renderTabOption: function renderTabOption(name, page) {},
    renderTab: function renderTab(name, page, isTabActive, onPressHandler) {
      var _this$props = this.props,
          activeTextColor = _this$props.activeTextColor,
          inactiveTextColor = _this$props.inactiveTextColor,
          textStyle = _this$props.textStyle;
      var textColor = isTabActive ? activeTextColor : inactiveTextColor;
      var fontWeight = isTabActive ? 'bold' : 'normal';
      return React.createElement(Button, {
        style: {
          flex: 1
        },
        key: name,
        accessible: true,
        accessibilityLabel: name,
        accessibilityTraits: "button",
        onPress: function onPress() {
          return onPressHandler(page);
        }
      }, React.createElement(View, {
        style: [styles.tab, this.props.tabStyle]
      }, React.createElement(Text, {
        style: [{
          color: textColor,
          fontWeight: fontWeight
        }, textStyle]
      }, name)));
    },
    render: function render() {
      var _this = this;

      var containerWidth = this.props.containerWidth;
      var numberOfTabs = this.props.tabs.length;
      var tabUnderlineStyle = {
        position: 'absolute',
        width: containerWidth / numberOfTabs,
        height: 4,
        backgroundColor: 'navy',
        bottom: 0
      };
      var translateX = this.props.scrollValue.interpolate({
        inputRange: [0, 1],
        outputRange: [0, containerWidth / numberOfTabs]
      });
      return React.createElement(View, {
        style: [styles.tabs, {
          backgroundColor: this.props.backgroundColor
        }, this.props.style]
      }, this.props.tabs.map(function (name, page) {
        var isTabActive = _this.props.activeTab === page;
        var renderTab = _this.props.renderTab || _this.renderTab;
        return renderTab(name, page, isTabActive, _this.props.goToPage);
      }), React.createElement(Animated.View, {
        style: [tabUnderlineStyle, {
          transform: [{
            translateX: translateX
          }]
        }, this.props.underlineStyle]
      }));
    }
  });
  var styles = StyleSheet.create({
    tab: {
      flex: 1,
      alignItems: 'center',
      justifyContent: 'center',
      paddingBottom: 10
    },
    tabs: {
      height: 50,
      flexDirection: 'row',
      justifyContent: 'space-around',
      borderWidth: 1,
      borderTopWidth: 0,
      borderLeftWidth: 0,
      borderRightWidth: 0,
      borderColor: '#ccc'
    }
  });
  module.exports = DefaultTabBar;
},10766,[10297,10033,10318,10456,10769]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var React = _$$_REQUIRE(_dependencyMap[1]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[2]);

  var TouchableNativeFeedback = ReactNative.TouchableNativeFeedback,
      View = ReactNative.View;

  var Button = function Button(props) {
    return React.createElement(TouchableNativeFeedback, _extends({
      delayPressIn: 0,
      background: TouchableNativeFeedback.SelectableBackground()
    }, props), props.children);
  };

  module.exports = Button;
},10769,[14344,10297,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var React = _$$_REQUIRE(_dependencyMap[0]);

  var _ReactNative = ReactNative = _$$_REQUIRE(_dependencyMap[1]),
      ViewPropTypes = _ReactNative.ViewPropTypes;

  var PropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var createReactClass = _$$_REQUIRE(_dependencyMap[3]);

  var _ReactNative2 = ReactNative,
      View = _ReactNative2.View,
      Animated = _ReactNative2.Animated,
      StyleSheet = _ReactNative2.StyleSheet,
      ScrollView = _ReactNative2.ScrollView,
      Text = _ReactNative2.Text,
      Platform = _ReactNative2.Platform,
      Dimensions = _ReactNative2.Dimensions;

  var Button = _$$_REQUIRE(_dependencyMap[4]);

  var WINDOW_WIDTH = Dimensions.get('window').width;
  var ScrollableTabBar = createReactClass({
    displayName: "ScrollableTabBar",
    propTypes: {
      goToPage: PropTypes.func,
      activeTab: PropTypes.number,
      tabs: PropTypes.array,
      backgroundColor: PropTypes.string,
      activeTextColor: PropTypes.string,
      inactiveTextColor: PropTypes.string,
      scrollOffset: PropTypes.number,
      style: ViewPropTypes.style,
      tabStyle: ViewPropTypes.style,
      tabsContainerStyle: ViewPropTypes.style,
      textStyle: Text.propTypes.style,
      renderTab: PropTypes.func,
      underlineStyle: ViewPropTypes.style,
      onScroll: PropTypes.func
    },
    getDefaultProps: function getDefaultProps() {
      return {
        scrollOffset: 52,
        activeTextColor: 'navy',
        inactiveTextColor: 'black',
        backgroundColor: null,
        style: {},
        tabStyle: {},
        tabsContainerStyle: {},
        underlineStyle: {}
      };
    },
    getInitialState: function getInitialState() {
      this._tabsMeasurements = [];
      return {
        _leftTabUnderline: new Animated.Value(0),
        _widthTabUnderline: new Animated.Value(0),
        _containerWidth: null
      };
    },
    componentDidMount: function componentDidMount() {
      this.props.scrollValue.addListener(this.updateView);
    },
    updateView: function updateView(offset) {
      var position = Math.floor(offset.value);
      var pageOffset = offset.value % 1;
      var tabCount = this.props.tabs.length;
      var lastTabPosition = tabCount - 1;

      if (tabCount === 0 || offset.value < 0 || offset.value > lastTabPosition) {
        return;
      }

      if (this.necessarilyMeasurementsCompleted(position, position === lastTabPosition)) {
        this.updateTabPanel(position, pageOffset);
        this.updateTabUnderline(position, pageOffset, tabCount);
      }
    },
    necessarilyMeasurementsCompleted: function necessarilyMeasurementsCompleted(position, isLastTab) {
      return this._tabsMeasurements[position] && (isLastTab || this._tabsMeasurements[position + 1]) && this._tabContainerMeasurements && this._containerMeasurements;
    },
    updateTabPanel: function updateTabPanel(position, pageOffset) {
      var containerWidth = this._containerMeasurements.width;
      var tabWidth = this._tabsMeasurements[position].width;
      var nextTabMeasurements = this._tabsMeasurements[position + 1];
      var nextTabWidth = nextTabMeasurements && nextTabMeasurements.width || 0;
      var tabOffset = this._tabsMeasurements[position].left;
      var absolutePageOffset = pageOffset * tabWidth;
      var newScrollX = tabOffset + absolutePageOffset;
      newScrollX -= (containerWidth - (1 - pageOffset) * tabWidth - pageOffset * nextTabWidth) / 2;
      newScrollX = newScrollX >= 0 ? newScrollX : 0;
      {
        this._scrollView.scrollTo({
          x: newScrollX,
          y: 0,
          animated: false
        });
      }
    },
    updateTabUnderline: function updateTabUnderline(position, pageOffset, tabCount) {
      var lineLeft = this._tabsMeasurements[position].left;
      var lineRight = this._tabsMeasurements[position].right;

      if (position < tabCount - 1) {
        var nextTabLeft = this._tabsMeasurements[position + 1].left;
        var nextTabRight = this._tabsMeasurements[position + 1].right;
        var newLineLeft = pageOffset * nextTabLeft + (1 - pageOffset) * lineLeft;
        var newLineRight = pageOffset * nextTabRight + (1 - pageOffset) * lineRight;

        this.state._leftTabUnderline.setValue(newLineLeft);

        this.state._widthTabUnderline.setValue(newLineRight - newLineLeft);
      } else {
        this.state._leftTabUnderline.setValue(lineLeft);

        this.state._widthTabUnderline.setValue(lineRight - lineLeft);
      }
    },
    renderTab: function renderTab(name, page, isTabActive, onPressHandler, onLayoutHandler) {
      var _this$props = this.props,
          activeTextColor = _this$props.activeTextColor,
          inactiveTextColor = _this$props.inactiveTextColor,
          textStyle = _this$props.textStyle;
      var textColor = isTabActive ? activeTextColor : inactiveTextColor;
      var fontWeight = isTabActive ? 'bold' : 'normal';
      return React.createElement(Button, {
        key: name + "_" + page,
        accessible: true,
        accessibilityLabel: name,
        accessibilityTraits: "button",
        onPress: function onPress() {
          return onPressHandler(page);
        },
        onLayout: onLayoutHandler
      }, React.createElement(View, {
        style: [styles.tab, this.props.tabStyle]
      }, React.createElement(Text, {
        style: [{
          color: textColor,
          fontWeight: fontWeight
        }, textStyle]
      }, name)));
    },
    measureTab: function measureTab(page, event) {
      var _event$nativeEvent$la = event.nativeEvent.layout,
          x = _event$nativeEvent$la.x,
          width = _event$nativeEvent$la.width,
          height = _event$nativeEvent$la.height;
      this._tabsMeasurements[page] = {
        left: x,
        right: x + width,
        width: width,
        height: height
      };
      this.updateView({
        value: this.props.scrollValue._value
      });
    },
    render: function render() {
      var _this = this;

      var tabUnderlineStyle = {
        position: 'absolute',
        height: 4,
        backgroundColor: 'navy',
        bottom: 0
      };
      var dynamicTabUnderline = {
        left: this.state._leftTabUnderline,
        width: this.state._widthTabUnderline
      };
      return React.createElement(View, {
        style: [styles.container, {
          backgroundColor: this.props.backgroundColor
        }, this.props.style],
        onLayout: this.onContainerLayout
      }, React.createElement(ScrollView, {
        ref: function ref(scrollView) {
          _this._scrollView = scrollView;
        },
        horizontal: true,
        showsHorizontalScrollIndicator: false,
        showsVerticalScrollIndicator: false,
        directionalLockEnabled: true,
        bounces: false,
        scrollsToTop: false
      }, React.createElement(View, {
        style: [styles.tabs, {
          width: this.state._containerWidth
        }, this.props.tabsContainerStyle],
        ref: 'tabContainer',
        onLayout: this.onTabContainerLayout
      }, this.props.tabs.map(function (name, page) {
        var isTabActive = _this.props.activeTab === page;
        var renderTab = _this.props.renderTab || _this.renderTab;
        return renderTab(name, page, isTabActive, _this.props.goToPage, _this.measureTab.bind(_this, page));
      }), React.createElement(Animated.View, {
        style: [tabUnderlineStyle, dynamicTabUnderline, this.props.underlineStyle]
      }))));
    },
    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
      if (JSON.stringify(this.props.tabs) !== JSON.stringify(nextProps.tabs) && this.state._containerWidth) {
        this.setState({
          _containerWidth: null
        });
      }
    },
    onTabContainerLayout: function onTabContainerLayout(e) {
      this._tabContainerMeasurements = e.nativeEvent.layout;
      var width = this._tabContainerMeasurements.width;

      if (width < WINDOW_WIDTH) {
        width = WINDOW_WIDTH;
      }

      this.setState({
        _containerWidth: width
      });
      this.updateView({
        value: this.props.scrollValue._value
      });
    },
    onContainerLayout: function onContainerLayout(e) {
      this._containerMeasurements = e.nativeEvent.layout;
      this.updateView({
        value: this.props.scrollValue._value
      });
    }
  });
  module.exports = ScrollableTabBar;
  var styles = StyleSheet.create({
    tab: {
      height: 49,
      alignItems: 'center',
      justifyContent: 'center',
      paddingLeft: 20,
      paddingRight: 20
    },
    container: {
      height: 50,
      borderWidth: 1,
      borderTopWidth: 0,
      borderLeftWidth: 0,
      borderRightWidth: 0,
      borderColor: '#ccc'
    },
    tabs: {
      flexDirection: 'row',
      justifyContent: 'space-around'
    }
  });
},10772,[10297,10033,10318,10456,10769]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _ListItemWithDetail = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Devices = _$$_REQUIRE(_dependencyMap[10]);

  var _DevicesConstant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[12]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _miot = _$$_REQUIRE(_dependencyMap[14]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _ClientHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var DeviceAccessControl = function (_React$Component) {
    (0, _inherits2.default)(DeviceAccessControl, _React$Component);

    function DeviceAccessControl(props) {
      var _this;

      (0, _classCallCheck2.default)(this, DeviceAccessControl);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DeviceAccessControl).call(this, props));

      _this.timerDetailCallback = function (items) {
        _this.setState({
          timerItemList: items
        });
      };

      var netacctl = null;

      if (!_CommonUtils.default.isNull(props.navigation.state.params.netacctl)) {
        netacctl = props.navigation.state.params.netacctl;
      }

      _this.state = {
        titleText: props.navigation.state.params.titleText,
        selectItemIndex: 0,
        mode: _CommonUtils.default.isNull(netacctl) ? null : netacctl.mode,
        loadingVisiable: false,
        timerItemList: [],
        netacctl: netacctl
      };
      _this.deviceItem = props.navigation.state.params.deviceItem;
      _this.mac = props.navigation.state.params.deviceItem.mac;
      _this.timerItmesApi = _API.default.devices.device_parent_control_items.remote;
      _this.modeSetApi = _API.default.devices.device_parent_control_set.remote;
      _this.netacctlStatusApi = _API.default.devices.device_netacctl_status.remote;
      return _this;
    }

    (0, _createClass2.default)(DeviceAccessControl, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (_CommonUtils.default.isNull(this.state.netacctl)) {
          this.requestNetacctlStatus();
        }

        this.checkSelectedIndex();
        this.requestTimerItems();
      }
    }, {
      key: "requestNetacctlStatus",
      value: function requestNetacctlStatus() {
        var _this2 = this;

        var paramsDic = {
          method: 'GET',
          params: {
            mac: this.mac,
            deviceId: _miot.Device.deviceID.replace("miwifi.", "")
          }
        };

        _miot.Service.callSmartHomeAPI(this.netacctlStatusApi, paramsDic).then(function (res) {
          if (res.code === 0 && !_CommonUtils.default.isNull(res.status)) {
            _this2.setState({
              netacctl: res.status,
              mode: res.status.mode
            });

            var tempDevice = _this2.deviceItem;
            tempDevice.netacctl = res.status;
            _this2.deviceItem = tempDevice;
          }
        }).catch(function (error) {});
      }
    }, {
      key: "requestTimerItems",
      value: function requestTimerItems() {
        var _this3 = this;

        this.setState({
          loadingVisiable: true
        });
        var paramsDic = {
          method: 'GET',
          params: {
            mac: this.mac,
            deviceId: _miot.Device.deviceID.replace("miwifi.", "")
          }
        };

        _miot.Service.callSmartHomeAPI(this.timerItmesApi, paramsDic).then(function (res) {
          _this3.setState({
            loadingVisiable: false
          });

          if (res.code === 0) {
            var info = res['info'];

            if (!_CommonUtils.default.arrayIsEmpty(info)) {
              _this3.setState({
                timerItemList: info
              });
            }
          }
        }).catch(function (error) {
          _this3.setState({
            loadingVisiable: false
          });
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, this.state.titleText)), _react.default.createElement(_ListItemWithDetail.default, {
          title: '无设置',
          showDetailIndicator: false,
          showCheckbox: this.isSelectedItemAtIndex(0),
          showSeparator: false,
          onPress: function onPress() {
            _this4.onModeSelected(0);
          }
        }), _react.default.createElement(_ListItemWithDetail.default, {
          title: '禁止联网',
          subtitle: '设备无法连接外网',
          showDetailIndicator: false,
          showCheckbox: this.isSelectedItemAtIndex(1),
          showSeparator: false,
          onPress: function onPress() {
            _this4.onModeSelected(1);
          }
        }), _react.default.createElement(_ListItemWithDetail.default, {
          title: '定时断网',
          subtitle: this.getTimerItemsDetailDesc(),
          showDetailIndicator: true,
          showCheckbox: this.isSelectedItemAtIndex(2),
          showSeparator: false,
          onPress: function onPress() {
            _this4.onModeSelected(2);
          },
          onPressDetail: function onPressDetail() {
            _this4.props.navigation.navigate('DeviceTimerList', {
              mac: _this4.mac,
              items: _this4.state.timerItemList,
              callback: _this4.timerDetailCallback
            });
          }
        }), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: this.state.loadingVisiable,
          message: ''
        }));
      }
    }, {
      key: "onModeSelected",
      value: function onModeSelected(index) {
        var _this5 = this;

        if (index === this.state.selectItemIndex) {
          return;
        }

        var mode = _DevicesConstant.default.MODE_ALLOW;

        if (index === 1) {
          mode = _DevicesConstant.default.MODE_FORBID;
        } else if (index === 2) {
          mode = _DevicesConstant.default.MODE_TIMER;
        }

        this.setState({
          loadingVisiable: true
        });
        var paramsDic = {
          method: 'GET',
          params: {
            deviceId: _miot.Device.deviceID.replace("miwifi.", ""),
            mac: this.mac,
            mode: mode,
            enable: this.state.netacctl.enable
          }
        };

        _miot.Service.callSmartHomeAPI(this.modeSetApi, paramsDic).then(function (res) {
          _this5.setState({
            loadingVisiable: false
          });

          if (res.code === 0) {
            var temp = _this5.state.netacctl;
            temp.mode = mode;
            var changedItem = _this5.deviceItem;
            changedItem.netacctl = temp;
            _this5.deviceItem = changedItem;

            _this5.setState({
              selectItemIndex: index,
              mode: mode,
              netacctl: temp
            });

            _this5.props.navigation.state.params.callback(temp);

            if (mode === _DevicesConstant.default.MODE_TIMER && !_this5.hasEnabledTimerControlItems()) {
              _this5.props.navigation.navigate('DeviceTimerList', {
                mac: _this5.mac,
                items: _this5.state.timerItemList,
                callback: _this5.timerDetailCallback
              });
            }
          } else {
            _CommonUtils.default.ShowToastCenter('设置失败');
          }
        }).catch(function (error) {
          _this5.setState({
            loadingVisiable: false
          });

          _CommonUtils.default.ShowToastCenter('设置失败');
        });
      }
    }, {
      key: "isSelectedItemAtIndex",
      value: function isSelectedItemAtIndex(index) {
        return index === this.state.selectItemIndex;
      }
    }, {
      key: "checkSelectedIndex",
      value: function checkSelectedIndex() {
        var index = 0;

        if (this.state.mode === _DevicesConstant.default.MODE_ALLOW) {
          index = 0;
        } else if (this.state.mode === _DevicesConstant.default.MODE_FORBID) {
          index = 1;
        } else if (this.state.mode === _DevicesConstant.default.MODE_TIMER) {
          index = 2;
        }

        this.setState({
          selectItemIndex: index
        });
      }
    }, {
      key: "getTimerItemsDetailDesc",
      value: function getTimerItemsDetailDesc() {
        if (!_CommonUtils.default.arrayIsEmpty(this.state.timerItemList)) {
          var desc = '';

          for (var i = 0; i < this.state.timerItemList.length; i++) {
            var item = this.state.timerItemList[i];

            if (item.enable) {
              var time = item.timeseg.from + '-' + item.timeseg.to;

              var repeat = _ClientHelper.default.getRepeatDesc(item);

              desc = time + ' ' + repeat;
              break;
            }
          }

          if (desc === '') {
            return '控制设备联网时间';
          } else {
            return desc;
          }
        }

        return '控制设备联网时间';
      }
    }, {
      key: "hasEnabledTimerControlItems",
      value: function hasEnabledTimerControlItems() {
        if (!_CommonUtils.default.arrayIsEmpty(this.state.timerItemList)) {
          for (var i = 0; i < this.state.timerItemList.length; i++) {
            var item = this.state.timerItemList[i];

            if (item.enable) {
              return true;
            }
          }
        }

        return false;
      }
    }]);
    return DeviceAccessControl;
  }(_react.default.Component);

  exports.default = DeviceAccessControl;

  DeviceAccessControl.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: "",
        style: {
          backgroundColor: '#fff'
        },
        onPressLeft: function onPressLeft(_) {
          return navigation.goBack();
        }
      })
    };
  };

  var isiPhoneX = false;

  if (_Devices.ios && (_Devices.ScreenH === 812 || _Devices.ScreenH === 896)) {
    isiPhoneX = true;
  }

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      flexDirection: 'column',
      backgroundColor: '#fff',
      flexWrap: 'wrap'
    },
    titleContainer: {
      backgroundColor: '#fff',
      marginLeft: 15,
      justifyContent: 'center',
      marginTop: 10,
      height: 60
    },
    title: {
      position: 'absolute',
      color: '#000',
      fontSize: 20,
      textAlign: 'left',
      fontWeight: 'bold',
      top: 20
    },
    confirmContainer: {
      position: "absolute",
      bottom: isiPhoneX ? 34 : 10,
      alignItems: 'center',
      justifyContent: 'center',
      height: 60,
      left: 24
    },
    confirm: {
      marginTop: 15,
      width: _Devices.ScreenW - 48,
      height: 46,
      backgroundColor: '#2c7DFA',
      borderRadius: 23,
      alignItems: 'center',
      justifyContent: 'center'
    },
    confirmTitle: {
      fontSize: 16,
      color: '#fff',
      fontWeight: 'bold'
    }
  });
},10775,[14305,14320,14323,14371,14377,14386,10284,10297,10033,10778,10067,10229,10755,10064,10074,10040,10223]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var checkboxUrl = _$$_REQUIRE(_dependencyMap[10]);

  var indicator = _$$_REQUIRE(_dependencyMap[11]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var THIN_HEIGHT = 60;
  var PADDING = 24;

  var ListItemWithDetail = function (_React$Component) {
    (0, _inherits2.default)(ListItemWithDetail, _React$Component);

    function ListItemWithDetail(props, context) {
      (0, _classCallCheck2.default)(this, ListItemWithDetail);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItemWithDetail).call(this, props, context));
    }

    (0, _createClass2.default)(ListItemWithDetail, [{
      key: "render",
      value: function render() {
        var extraContainerStyle = {};

        if (this.props.subtitle) {
          extraContainerStyle = {
            paddingVertical: 8,
            height: undefined
          };
        } else {
          extraContainerStyle = {
            height: THIN_HEIGHT
          };
        }

        var valueStyle = {
          marginRight: -7,
          textAlignVertical: 'center',
          flex: 1,
          textAlign: 'right'
        };
        var fontFamily = {};

        if (_reactNative.Platform.OS === 'android') {
          fontFamily = {
            fontFamily: 'Kmedium'
          };
          valueStyle.height = THIN_HEIGHT;
        }

        var extraSepratorStyle = {};

        if (this.props.showSeparator) {
          extraSepratorStyle = {
            backgroundColor: '#efefef',
            width: width,
            position: 'absolute',
            top: 59.5,
            height: 0.5
          };
        }

        return _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: '#fff'
          }
        }, _react.default.createElement(_reactNative.TouchableHighlight, {
          disabled: this.props.disabled,
          underlayColor: 'rgba(0,0,0,0.25)',
          onPress: this.props.onPress
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.container, this.props.containerStyle, extraContainerStyle]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.left
        }, this.props.showCheckbox ? _react.default.createElement(_reactNative.Image, {
          style: styles.checkBox,
          resizeMode: "contain",
          source: checkboxUrl
        }) : null), _react.default.createElement(_reactNative.View, {
          style: styles.textContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: this.props.subtitle ? styles.titleText : styles.titleTextWithoutSubTitle
        }, this.props.title), this.props.subtitle ? _react.default.createElement(_reactNative.Text, {
          style: styles.subtitleText
        }, this.props.subtitle) : null), _react.default.createElement(_reactNative.View, {
          style: styles.right
        }, this.props.showDetailIndicator ? _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.rightIndicator,
          onPress: this.props.onPressDetail
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            width: 20,
            height: 20,
            resizeMode: 'contain'
          },
          resizeMode: "contain",
          source: indicator
        })) : null), this.props.showSeparator ? _react.default.createElement(_Separator.default, {
          style: [this.props.separatorStyle, extraSepratorStyle]
        }) : null)));
      }
    }]);
    return ListItemWithDetail;
  }(_react.default.Component);

  exports.default = ListItemWithDetail;
  ListItemWithDetail.propTypes = {
    title: _propTypes.default.string.isRequired,
    subtitle: _propTypes.default.string,
    onPress: _propTypes.default.func.isRequired,
    onPressDetail: _propTypes.default.func.isRequired,
    disabled: _propTypes.default.bool,
    showSeparator: _propTypes.default.bool,
    showDetailIndicator: _propTypes.default.bool,
    showCheckbox: _propTypes.default.bool,
    separator: _propTypes.default.element,
    containerStyle: _propTypes.default.object,
    titleStyle: _propTypes.default.object,
    subtitleStyle: _propTypes.default.object,
    separatorStyle: _propTypes.default.object
  };
  ListItemWithDetail.defaultProps = {
    title: '',
    subtitle: '',
    onPress: function onPress(_) {},
    onPressDetail: function onPressDetail(_) {},
    disabled: false,
    showSeparator: true,
    showDetailIndicator: false,
    showCheckbox: false,
    containerStyle: {},
    titleStyle: {},
    subtitleStyle: {},
    separatorStyle: {}
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width,
      backgroundColor: '#fff',
      paddingHorizontal: PADDING,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      flexWrap: 'wrap'
    },
    left: {
      position: 'absolute',
      alignItems: "center",
      left: 10,
      width: 25
    },
    checkBox: {
      width: 15,
      height: 15
    },
    textContainer: {
      flexDirection: 'column',
      justifyContent: 'center',
      width: width - 70
    },
    titleContainer: {
      flexDirection: 'column',
      alignItems: 'center',
      justifyContent: 'center',
      width: width - 70,
      backgroundColor: 'red'
    },
    titleText: {
      marginLeft: 10,
      marginTop: 5,
      marginBottom: 5,
      fontSize: 16,
      color: '#333',
      textAlign: 'left'
    },
    titleTextWithoutSubTitle: {
      position: "absolute",
      top: _reactNative.Platform.OS === 'android' ? 20 : 22,
      marginLeft: 10,
      fontSize: 16,
      color: '#333',
      textAlign: 'left'
    },
    subtitleText: {
      marginLeft: 10,
      marginTop: 0,
      marginBottom: 5,
      fontSize: 12,
      color: '#999',
      textAlign: 'left'
    },
    rightIndicator: {
      width: 40,
      height: 40,
      alignItems: 'center',
      justifyContent: 'center'
    },
    right: {
      position: 'absolute',
      right: 0,
      width: 40,
      alignItems: "center"
    }
  });
},10778,[14305,14320,14323,14371,14377,14386,10297,10318,10033,10332,10781,10784]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources",
    "width": 45,
    "height": 45,
    "scales": [1],
    "hash": "9f0017aa1a2a39b8bc45ba7f6b7401b9",
    "name": "check_check",
    "type": "png"
  });
},10781,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources",
    "width": 44,
    "height": 44,
    "scales": [1],
    "hash": "b4f863f24c6b5154dbfd2c05bc9d1ab7",
    "name": "icon_details",
    "type": "png"
  });
},10784,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _ListItemWithDetail = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Devices = _$$_REQUIRE(_dependencyMap[10]);

  var _DevicesConstant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _miot = _$$_REQUIRE(_dependencyMap[13]);

  var _Service = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[15]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var WebsiteAccessControl = function (_React$Component) {
    (0, _inherits2.default)(WebsiteAccessControl, _React$Component);

    function WebsiteAccessControl(props) {
      var _this;

      (0, _classCallCheck2.default)(this, WebsiteAccessControl);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(WebsiteAccessControl).call(this, props));

      _this.filterSetBlackCallback = function (count) {
        if (_this.state.mode === _DevicesConstant.default.FILTER_BLACK) {
          var temItem = _this.deviceItem;
          var temNetacctl = _this.state.netacctl;
          temNetacctl.urlfilter.mode = _this.state.mode;
          temNetacctl.urlfilter.count = count;
          temItem.urlfilter.mode = _this.state.mode;
          temItem.urlfilter.count = count;
          _this.deviceItem = temItem;

          _this.setState({
            netacctl: temNetacctl
          });

          _this.props.navigation.state.params.callback(_this.state.mode, count);
        }
      };

      _this.filterSetWhiteCallback = function (count) {
        if (_this.state.mode === _DevicesConstant.default.FILTER_WHITE) {
          var temItem = _this.deviceItem;
          var temNetacctl = _this.state.netacctl;
          temNetacctl.urlfilter.mode = _this.state.mode;
          temNetacctl.urlfilter.count = count;
          temItem.urlfilter.mode = _this.state.mode;
          temItem.urlfilter.count = count;
          _this.deviceItem = temItem;

          _this.setState({
            netacctl: temNetacctl
          });

          _this.props.navigation.state.params.callback(_this.state.mode, count);
        }
      };

      _this.state = {
        titleText: props.navigation.state.params.titleText,
        selectItemIndex: 0,
        mode: props.navigation.state.params.mode,
        loading: false,
        netacctl: !_CommonUtils.default.isNull(props.navigation.state.params.netacctl) ? props.navigation.state.params.netacctl : null
      };
      _this.mac = props.navigation.state.params.mac;
      _this.modeSetApi = _API.default.devices.device_websitt_mode_set.remote;
      _this.callback = props.navigation.state.params.callback;
      _this.deviceItem = props.navigation.state.params.deviceItem;
      _this.netacctlStatusApi = _API.default.devices.device_netacctl_status.remote;
      return _this;
    }

    (0, _createClass2.default)(WebsiteAccessControl, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.checkSelectedIndex();

        if (_CommonUtils.default.isNull(this.state.mode) || _CommonUtils.default.isNull(this.state.netacctl)) {
          this.requestNetacctlStatus();
        }
      }
    }, {
      key: "requestNetacctlStatus",
      value: function requestNetacctlStatus() {
        var _this2 = this;

        var paramsDic = {
          method: 'GET',
          params: {
            mac: this.mac,
            deviceId: _miot.Device.deviceID.replace("miwifi.", "")
          }
        };

        _Service.default.callSmartHomeAPI(this.netacctlStatusApi, paramsDic).then(function (res) {
          if (res.code === 0 && !_CommonUtils.default.isNull(res.status)) {
            var tempDevice = _this2.deviceItem;
            tempDevice.netacctl = res.status;
            _this2.deviceItem = tempDevice;

            _this2.setState({
              mode: _this2.deviceItem.netacctl.urlfilter.mode,
              netacctl: res.status
            });

            _this2.checkSelectedIndex();
          }
        }).catch(function (error) {});
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, this.state.titleText)), _react.default.createElement(_ListItemWithDetail.default, {
          title: '无设置',
          showDetailIndicator: false,
          showCheckbox: this.isSelectedItemAtIndex(0),
          showSeparator: false,
          onPress: function onPress() {
            _this3.setCurrentMode(0);
          }
        }), _react.default.createElement(_ListItemWithDetail.default, {
          title: '网址黑名单',
          subtitle: '设备无法访问黑名单中的网址',
          showDetailIndicator: true,
          showCheckbox: this.isSelectedItemAtIndex(1),
          showSeparator: false,
          onPress: function onPress() {
            _this3.setCurrentMode(1);
          },
          onPressDetail: function onPressDetail() {
            _this3.props.navigation.navigate('WebsiteFilter', {
              isBlack: true,
              mac: _this3.mac,
              callback: _this3.filterSetBlackCallback
            });
          }
        }), _react.default.createElement(_ListItemWithDetail.default, {
          title: '网址白名单',
          subtitle: '设备只能访问白名单中的网址',
          showDetailIndicator: true,
          showCheckbox: this.isSelectedItemAtIndex(2),
          showSeparator: false,
          onPress: function onPress() {
            _this3.setCurrentMode(2);
          },
          onPressDetail: function onPressDetail() {
            _this3.props.navigation.navigate('WebsiteFilter', {
              isBlack: false,
              mac: _this3.mac,
              callback: _this3.filterSetWhiteCallback
            });
          }
        }), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: this.state.loading,
          messgae: ""
        }));
      }
    }, {
      key: "isSelectedItemAtIndex",
      value: function isSelectedItemAtIndex(index) {
        return index === this.state.selectItemIndex;
      }
    }, {
      key: "checkSelectedIndex",
      value: function checkSelectedIndex() {
        var index = 0;

        if (this.state.mode === _DevicesConstant.default.FILTER_NONE) {
          index = 0;
        } else if (this.state.mode === _DevicesConstant.default.FILTER_BLACK) {
          index = 1;
        } else if (this.state.mode === _DevicesConstant.default.FILTER_WHITE) {
          index = 2;
        }

        this.setState({
          selectItemIndex: index
        });
      }
    }, {
      key: "hasNoUrlFilterItems",
      value: function hasNoUrlFilterItems(res) {
        if (!_CommonUtils.default.isNull(res.count)) {
          if (res.count === 0) {
            return true;
          }
        }

        return false;
      }
    }, {
      key: "setCurrentMode",
      value: function setCurrentMode(index) {
        var _this4 = this;

        if (index === this.state.selectItemIndex) {
          return;
        }

        var mode = '';

        if (index === 0) {
          mode = _DevicesConstant.default.FILTER_NONE;
        } else if (index === 1) {
          mode = _DevicesConstant.default.FILTER_BLACK;
        } else {
          mode = _DevicesConstant.default.FILTER_WHITE;
        }

        var paramsDic = {
          method: 'GET',
          params: {
            deviceId: _miot.Device.deviceID.replace('miwifi.', ''),
            mac: this.mac,
            mode: mode
          }
        };
        this.setState({
          loading: true
        });

        _Service.default.callSmartHomeAPI(this.modeSetApi, paramsDic).then(function (res) {
          _this4.setState({
            loading: false
          });

          if (res.code === 0) {
            var count = res.count;

            _this4.setState({
              mode: mode,
              selectItemIndex: index
            });

            var temItem = _this4.deviceItem;
            var temNetAcctl = _this4.state.netacctl;
            var urlfilter = {
              mode: mode,
              count: _CommonUtils.default.isNull(count) ? 0 : count
            };
            temItem.urlfilter = urlfilter;
            temNetAcctl.urlfilter = urlfilter;

            _this4.setState({
              netacctl: temNetAcctl
            });

            _this4.deviceItem = temItem;

            _this4.props.navigation.state.params.callback(urlfilter.mode, urlfilter.count);

            if (mode === _DevicesConstant.default.FILTER_BLACK && _this4.hasNoUrlFilterItems(res)) {
              _this4.props.navigation.navigate('WebsiteFilter', {
                isBlack: true,
                mac: _this4.mac,
                callback: _this4.filterSetBlackCallback
              });
            } else if (mode === _DevicesConstant.default.FILTER_WHITE && _this4.hasNoUrlFilterItems(res)) {
              _this4.props.navigation.navigate('WebsiteFilter', {
                isBlack: false,
                mac: _this4.mac,
                callback: _this4.filterSetWhiteCallback
              });
            }
          } else {
            _CommonUtils.default.ShowToastCenter('设置失败');
          }
        }).catch(function (error) {
          _this4.setState({
            loading: false
          });

          _CommonUtils.default.ShowToastCenter('设置失败');
        });
      }
    }]);
    return WebsiteAccessControl;
  }(_react.default.Component);

  exports.default = WebsiteAccessControl;

  WebsiteAccessControl.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: "",
        style: {
          backgroundColor: '#fff'
        },
        onPressLeft: function onPressLeft(_) {
          return navigation.goBack();
        }
      })
    };
  };

  var isiPhoneX = false;

  if (_Devices.ios && (_Devices.ScreenH === 812 || _Devices.ScreenH === 896)) {
    isiPhoneX = true;
  }

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      flexDirection: 'column',
      backgroundColor: '#fff',
      flexWrap: 'wrap'
    },
    titleContainer: {
      backgroundColor: '#fff',
      marginLeft: 15,
      justifyContent: 'center',
      marginTop: 10,
      height: 60
    },
    title: {
      position: 'absolute',
      color: '#000',
      fontSize: 20,
      textAlign: 'left',
      fontWeight: 'bold',
      top: 20
    },
    confirmContainer: {
      position: "absolute",
      bottom: isiPhoneX ? 34 : 10,
      alignItems: 'center',
      justifyContent: 'center',
      height: 60,
      left: 24
    },
    confirm: {
      marginTop: 15,
      width: _Devices.ScreenW - 48,
      height: 46,
      backgroundColor: '#2c7DFA',
      borderRadius: 23,
      alignItems: 'center',
      justifyContent: 'center'
    },
    confirmTitle: {
      fontSize: 16,
      color: '#fff',
      fontWeight: 'bold'
    }
  });
},10787,[14305,14320,14323,14371,14377,14386,10284,10297,10033,10778,10067,10229,10064,10074,10062,10755,10040]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[7]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[8]);

  var _Host = _$$_REQUIRE(_dependencyMap[9]);

  var _miot = _$$_REQUIRE(_dependencyMap[10]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[13]);

  var _Devices = _$$_REQUIRE(_dependencyMap[14]);

  var _ChoiceDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _MHDatePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _ClientHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var TimerSetting = function (_React$Component) {
    (0, _inherits2.default)(TimerSetting, _React$Component);

    function TimerSetting(props) {
      var _this;

      (0, _classCallCheck2.default)(this, TimerSetting);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TimerSetting).call(this, props));
      _this.isNew = props.navigation.state.params.isNew;
      _this.mac = props.navigation.state.params.mac;
      _this.callback = props.navigation.state.params.callback;
      var item = props.navigation.state.params.curItem;
      var repeat = '';
      var frequency = [0];
      var startTime = '22:00';
      var endTime = '06:00';
      var repeatSelectedIndexArray = [0];

      if (_this.isNew) {
        frequency = [0];
        repeat = '执行一次';
      } else {
        if (!_CommonUtils.default.isNull(item)) {
          frequency = item.frequency;
          repeat = _ClientHelper.default.getRepeatDesc(item);
          startTime = item.timeseg.from;
          endTime = item.timeseg.to;

          if (repeat === '执行一次') {
            repeatSelectedIndexArray = [0];
          } else if (repeat === '每天') {
            repeatSelectedIndexArray = [1];
          } else if (repeat === '工作日') {
            repeatSelectedIndexArray = [2];
          } else {
            repeatSelectedIndexArray = [3];
          }
        }

        _this.item = item;
        _this.deleteHandler = props.navigation.state.params.deleteHandler;
      }

      _this.state = {
        repeatAlertVisible: false,
        customDayVisible: false,
        loadingVisiable: false,
        repeatSelectedIndexArray: repeatSelectedIndexArray,
        customDaySelectedArray: [0, 1, 2, 3, 4, 5, 6],
        startDatePickerVisiable: false,
        endDatePickerVisiable: false,
        selectedStartArray: startTime.split(':'),
        selectedStartRawString: startTime,
        selectedEndArray: endTime.split(':'),
        selectedEndRawString: endTime,
        repeat: repeat,
        frequency: frequency
      };
      _this.editApi = _API.default.devices.device_parent_control_items_update.remote;
      _this.delApi = _API.default.devices.device_parent_control_items_delete.remote;
      _this.addApi = _API.default.devices.device_parent_control_items_add.remote;
      return _this;
    }

    (0, _createClass2.default)(TimerSetting, [{
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "selectRepeatHandler",
      value: function selectRepeatHandler(result) {
        this.state.repeatAlertVisible = false;
        var selectedFrequency = [0];

        if (result[0] === 3) {
          this.setState({
            customDayVisible: true
          });
        } else {
          if (result[0] === 0) {
            selectedFrequency = [0];
          } else if (result[0] === 1) {
            selectedFrequency = [1, 2, 3, 4, 5, 6, 7];
          } else if (result[0] === 2) {
            selectedFrequency = [1, 2, 3, 4, 5];
          }

          this.setState({
            repeat: _ClientHelper.default.getRepeatDescFromFrequency(selectedFrequency),
            frequency: selectedFrequency,
            repeatSelectedIndexArray: result
          });
        }
      }
    }, {
      key: "selectedCustomDayHandler",
      value: function selectedCustomDayHandler(result) {
        var selectedFrequency = [];

        if (result.includes(0)) {
          selectedFrequency.push(1);
        }

        if (result.includes(1)) {
          selectedFrequency.push(2);
        }

        if (result.includes(2)) {
          selectedFrequency.push(3);
        }

        if (result.includes(3)) {
          selectedFrequency.push(4);
        }

        if (result.includes(4)) {
          selectedFrequency.push(5);
        }

        if (result.includes(5)) {
          selectedFrequency.push(6);
        }

        if (result.includes(6)) {
          selectedFrequency.push(7);
        }

        this.setState({
          customDaySelectedArray: result,
          repeatSelectedIndexArray: [3],
          repeat: _ClientHelper.default.getRepeatDescFromFrequency(selectedFrequency),
          frequency: selectedFrequency,
          customDayVisible: false
        });

        if (result.length === 0) {
          this.setState({
            customDaySelectedArray: result,
            repeatSelectedIndexArray: [0],
            repeat: '执行一次',
            frequency: [0],
            customDayVisible: false
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, '时间设置')), _react.default.createElement(_ListItem.ListItem, {
          title: '重复',
          value: this.state.repeat,
          hideArrow: false,
          showDot: false,
          containerStyle: {
            backgroundColor: 'white'
          },
          separator: _react.default.createElement(_Separator.default, null),
          valueStyle: {
            color: '#2c7dfa'
          },
          onPress: function onPress() {
            _this2.setState({
              repeatAlertVisible: true
            });
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: '开始时间',
          value: this.state.selectedStartRawString,
          hideArrow: true,
          showDot: false,
          containerStyle: {
            backgroundColor: 'white'
          },
          valueStyle: {
            color: '#2c7dfa'
          },
          separator: _react.default.createElement(_Separator.default, null),
          onPress: function onPress() {
            _this2.setState({
              startDatePickerVisiable: true
            });
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: '结束时间',
          value: this.state.selectedEndRawString,
          hideArrow: true,
          showDot: false,
          containerStyle: {
            backgroundColor: 'white'
          },
          valueStyle: {
            color: '#2c7dfa'
          },
          separator: _react.default.createElement(_Separator.default, null),
          onPress: function onPress() {
            _this2.setState({
              endDatePickerVisiable: true
            });
          }
        }), _react.default.createElement(_reactNative.View, {
          style: styles.bottomContainer
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.saveButton,
          onPress: function onPress() {
            _this2.saveHandler();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.bottomButtonTitle
        }, '保存')), !this.isNew ? _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.deleteButton,
          disabled: false,
          onPress: function onPress() {
            _this2.deleteItemHandler();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.bottomButtonTitle
        }, '删除')) : null), _react.default.createElement(_ChoiceDialog.default, {
          visible: this.state.repeatAlertVisible,
          title: '重复',
          options: [{
            title: '执行一次'
          }, {
            title: '每天'
          }, {
            title: '工作日'
          }, {
            title: '自定义'
          }],
          selectedIndexArray: this.state.repeatSelectedIndexArray,
          onDismiss: function onDismiss() {
            _this2.state.repeatAlertVisible = false;
          },
          onSelect: function onSelect(result) {
            return _this2.selectRepeatHandler(result);
          }
        }), _react.default.createElement(_ChoiceDialog.default, {
          type: _ChoiceDialog.default.TYPE.MULTIPLE,
          visible: this.state.customDayVisible,
          title: '自定义',
          options: [{
            title: '星期一'
          }, {
            title: '星期二'
          }, {
            title: '星期三'
          }, {
            title: '星期四'
          }, {
            title: '星期五'
          }, {
            title: '星期六'
          }, {
            title: '星期日'
          }],
          selectedIndexArray: this.state.customDaySelectedArray,
          color: "#2c7DFA",
          buttons: [{
            text: '取消',
            style: {
              color: '#000'
            },
            callback: function callback() {
              _this2.setState({
                customDayVisible: false
              });
            }
          }, {
            text: '确定',
            style: {
              color: '#2c7DFA'
            },
            callback: function callback(result) {
              _this2.selectedCustomDayHandler(result);
            }
          }],
          onDismiss: function onDismiss() {
            _this2.state.customDayVisible = false;
          }
        }), _react.default.createElement(_MHDatePicker.default, {
          visible: this.state.startDatePickerVisiable,
          title: "\u9009\u62E9\u65F6\u95F4",
          type: _MHDatePicker.default.TYPE.TIME24,
          confirmColor: "#4778FF",
          current: this.state.selectedStartArray,
          onDismiss: function onDismiss(_) {
            _this2.state.startDatePickerVisiable = false;
          },
          onSelect: function onSelect(res) {
            _this2.setState({
              selectedStartArray: res.rawArray,
              selectedStartRawString: res.rawString
            });
          }
        }), _react.default.createElement(_MHDatePicker.default, {
          visible: this.state.endDatePickerVisiable,
          title: "\u9009\u62E9\u65F6\u95F4",
          type: _MHDatePicker.default.TYPE.TIME24,
          confirmColor: "#4778FF",
          current: this.state.selectedEndArray,
          onDismiss: function onDismiss(_) {
            _this2.state.endDatePickerVisiable = false;
          },
          onSelect: function onSelect(res) {
            _this2.setState({
              selectedEndArray: res.rawArray,
              selectedEndRawString: res.rawString
            });
          }
        }), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: this.state.loadingVisiable,
          message: ''
        }));
      }
    }, {
      key: "hasInfoChanged",
      value: function hasInfoChanged() {
        if (this.isNew) {
          return true;
        } else {
          var originStartTime = this.item.timeseg.from;
          var originEndTime = this.item.timeseg.to;

          var originRepeat = _ClientHelper.default.getRepeatDesc(this.item);

          var curStartTime = this.state.selectedStartRawString;
          var curEndTime = this.state.selectedEndRawString;
          var curRepeat = this.state.repeat;
          var result = !(curRepeat === originRepeat) || !(curStartTime === originStartTime) || !(curEndTime === originEndTime);
          return result;
        }
      }
    }, {
      key: "saveHandler",
      value: function saveHandler() {
        var _this3 = this;

        if (!this.hasInfoChanged()) {
          this.props.navigation.goBack();
          return;
        }

        var tempRepeat = '';

        if (this.state.frequency.length === 1 && this.state.frequency[0] === 0) {
          tempRepeat = '0';
        } else {
          var temArr = [];

          if (this.state.frequency.includes(1)) {
            temArr.push('1');
          }

          if (this.state.frequency.includes(2)) {
            temArr.push('2');
          }

          if (this.state.frequency.includes(3)) {
            temArr.push('3');
          }

          if (this.state.frequency.includes(4)) {
            temArr.push('4');
          }

          if (this.state.frequency.includes(5)) {
            temArr.push('5');
          }

          if (this.state.frequency.includes(6)) {
            temArr.push('6');
          }

          if (this.state.frequency.includes(7)) {
            temArr.push('7');
          }

          tempRepeat = temArr.join(',');
        }

        var timeseg = this.state.selectedStartRawString + '-' + this.state.selectedEndRawString;

        if (this.isNew) {
          this.addHander(tempRepeat, timeseg);
        } else {
          this.setState({
            loadingVisiable: true
          });
          var paramsDic = {
            method: 'GET',
            params: {
              deviceId: _miot.Device.deviceID.replace("miwifi.", ""),
              mac: this.mac,
              id: this.item.id,
              timeseg: timeseg,
              enable: this.item.enable === 1 ? '1' : '0',
              frequency: tempRepeat
            }
          };

          _miot.Service.callSmartHomeAPI(this.editApi, paramsDic).then(function (res) {
            _this3.setState({
              loadingVisiable: false
            });

            if (res.code === 0) {
              var savedItem = {
                mac: _this3.item.mac,
                enable: _this3.item.enable,
                timeseg: {
                  from: _this3.state.selectedStartRawString,
                  to: _this3.state.selectedEndRawString
                },
                frequency: _this3.state.frequency
              };

              _this3.props.navigation.state.params.callback(savedItem, false);

              _this3.props.navigation.goBack();
            } else {
              _CommonUtils.default.ShowToastCenter('保存失败');
            }
          }).catch(function (error) {
            _this3.setState({
              loadingVisiable: false
            });

            _CommonUtils.default.ShowToastCenter('保存失败');
          });
        }
      }
    }, {
      key: "addHander",
      value: function addHander(frequency, timeseg) {
        var _this4 = this;

        this.setState({
          loadingVisiable: true
        });
        var paramsDic = {
          method: 'GET',
          params: {
            deviceId: _miot.Device.deviceID.replace("miwifi.", ""),
            mac: this.mac,
            frequency: frequency,
            timeseg: timeseg,
            enable: '1'
          }
        };

        _miot.Service.callSmartHomeAPI(this.addApi, paramsDic).then(function (res) {
          _this4.setState({
            loadingVisiable: false
          });

          if (res.code === 0 && !_CommonUtils.default.isNull(res.id) && res.id.length > 0) {
            var addItem = {
              mac: _this4.mac,
              enable: 1,
              timeseg: {
                from: _this4.state.selectedStartRawString,
                to: _this4.state.selectedEndRawString
              },
              frequency: frequency
            };

            _this4.props.navigation.state.params.callback(addItem, true);

            _this4.props.navigation.goBack();
          } else {
            _CommonUtils.default.ShowToastCenter('保存失败');
          }
        }).catch(function (error) {
          _this4.setState({
            loadingVisiable: false
          });

          _CommonUtils.default.ShowToastCenter('保存失败');
        });
      }
    }, {
      key: "deleteItemHandler",
      value: function deleteItemHandler() {
        var _this5 = this;

        this.setState({
          loadingVisiable: true
        });
        var paramsDic = {
          method: 'GET',
          params: {
            deviceId: _miot.Device.deviceID.replace("miwifi.", ""),
            id: this.item.id
          }
        };

        _miot.Service.callSmartHomeAPI(this.delApi, paramsDic).then(function (res) {
          _this5.setState({
            loadingVisiable: false
          });

          if (res.code === 0) {
            _this5.props.navigation.state.params.deleteHandler(_this5.item);

            _this5.props.navigation.goBack();
          } else {
            _CommonUtils.default.ShowToastCenter('操作失败');
          }
        }).catch(function (error) {
          _this5.setState({
            loadingVisiable: false
          });

          _CommonUtils.default.ShowToastCenter('操作失败');
        });
      }
    }]);
    return TimerSetting;
  }(_react.default.Component);

  exports.default = TimerSetting;
  var isiPhoneX = false;

  if (_Devices.ios && (_Devices.ScreenH === 812 || _Devices.ScreenH === 896)) {
    isiPhoneX = true;
  }

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#fff'
    },
    titleContainer: {
      backgroundColor: '#fff',
      marginLeft: 15,
      justifyContent: 'center',
      marginTop: 10,
      height: 60
    },
    title: {
      position: 'absolute',
      color: '#000',
      fontSize: 20,
      textAlign: 'left',
      fontWeight: 'bold',
      top: 20
    },
    bottomContainer: {
      position: 'absolute',
      bottom: isiPhoneX ? 34 : 10,
      alignItems: 'center',
      justifyContent: 'center',
      height: 100,
      left: 24
    },
    saveButton: {
      position: "absolute",
      top: 0,
      left: 0,
      width: _Devices.ScreenW - 48,
      height: 45,
      backgroundColor: '#2c7DFA',
      borderRadius: 22.5,
      alignItems: 'center',
      justifyContent: 'center'
    },
    deleteButton: {
      position: "absolute",
      top: 55,
      left: 0,
      width: _Devices.ScreenW - 48,
      height: 45,
      backgroundColor: 'red',
      borderRadius: 22.5,
      alignItems: 'center',
      justifyContent: 'center'
    },
    bottomButtonTitle: {
      fontSize: 16,
      color: '#fff',
      fontWeight: 'bold'
    }
  });
},10790,[14305,14320,14323,14371,14377,14386,10284,10338,10755,10035,10074,10332,10297,10033,10067,10734,10716,10040,10223,10064]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[8]);

  var _Devices = _$$_REQUIRE(_dependencyMap[9]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[10]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Service = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _miot = _$$_REQUIRE(_dependencyMap[13]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[15]);

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _CheckboxListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _DevicesConstant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _tr = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var WebsiteFilter = function (_React$Component) {
    (0, _inherits2.default)(WebsiteFilter, _React$Component);

    function WebsiteFilter(props) {
      var _this;

      (0, _classCallCheck2.default)(this, WebsiteFilter);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(WebsiteFilter).call(this, props));

      _this.listItem = function (item) {
        if (!_this.state.isEdtingList) {
          return _react.default.createElement(_ListItem.ListItem, {
            title: item,
            hideArrow: true,
            showSeparator: true,
            separatorStyle: {
              width: _Devices.ScreenW
            },
            onPress: function onPress() {
              _this.setState({
                inputVisiable: true,
                isEditingSingleItem: true,
                editSingleItemValue: item,
                editSingleItemText: item
              });
            }
          });
        } else {
          return _react.default.createElement(_CheckboxListItem.default, {
            title: item,
            isSelected: _this.containsItem(_this.state.selectedUrls, item),
            showSeparator: true,
            onPress: function onPress() {
              var selectedList = _this.state.selectedUrls;

              if (_this.containsItem(selectedList, item)) {
                var index = selectedList.indexOf(item);
                selectedList.splice(index, 1);
              } else {
                selectedList.push(item);
              }

              _this.setState({
                selectedUrls: selectedList
              });

              _this.changeNavigationToEditMode(selectedList);
            }
          });
        }
      };

      _this.state = {
        isBlackMode: props.navigation.state.params.isBlack,
        inputVisiable: false,
        urlListApi: _API.default.devices.device_website_list.remote,
        singleUrlApi: _API.default.devices.device_website_singleUrl.remote,
        urlList: [],
        isEdtingList: false,
        selectedUrls: [],
        editSingleItemValue: '',
        editSingleItemText: '',
        isEditingSingleItem: false,
        inputsText: 'www.',
        loadingVisiable: false
      };
      _this.mac = props.navigation.state.params.mac;
      _this.callback = props.navigation.state.params.callback;
      return _this;
    }

    (0, _createClass2.default)(WebsiteFilter, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        this.setNavigation();
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.requestUrlList();
      }
    }, {
      key: "requestUrlList",
      value: function requestUrlList() {
        var _this2 = this;

        var mode = 'black';

        if (this.state.isBlackMode) {
          mode = 'black';
        } else {
          mode = 'white';
        }

        var paramsDic = {
          method: 'GET',
          params: {
            deviceId: _miot.Device.deviceID.replace("miwifi.", ""),
            deviceID: _miot.Device.deviceID.replace("miwifi.", ""),
            mac: this.mac,
            mode: mode
          }
        };

        _Service.default.callSmartHomeAPI(this.state.urlListApi, paramsDic).then(function (res) {
          if (res.code === 0) {
            if (!_CommonUtils.default.arrayIsEmpty(res.list)) {
              _this2.setState({
                urlList: res.list
              });

              _this2.props.navigation.state.params.callback(res.list.length);
            }
          }
        }).catch(function (error) {});
      }
    }, {
      key: "setNavigation",
      value: function setNavigation() {
        var _this3 = this;

        this.props.navigation.setParams({
          titleProps: {
            type: 'dark',
            onPressLeft: function onPressLeft(_) {
              return _this3.props.navigation.goBack();
            }
          }
        });
        this.state.index = 0;
      }
    }, {
      key: "changeNavigationToEditMode",
      value: function changeNavigationToEditMode(selectedList) {
        var _this4 = this;

        var itemCount = selectedList.length;
        var showAll = true;

        if (itemCount === this.state.urlList.length) {
          showAll = false;
        }

        this.props.navigation.setParams({
          titleProps: {
            type: 'dark',
            leftText: showAll ? '全选' : '全不选',
            leftTextStyle: {
              width: 60,
              color: '#000',
              fontSize: 16
            },
            onPressLeft: function onPressLeft() {
              return _this4.leftEditNaviItemHandler(showAll);
            },
            rightText: '取消',
            rightTextStyle: {
              width: 60,
              color: '#000',
              fontSize: 16
            },
            onPressRight: function onPressRight(_) {
              _this4.setNavigation(), _this4.setState({
                isEdtingList: false,
                selectedUrls: []
              });
            },
            title: itemCount > 0 ? '已选择' + itemCount + '项' : '请选择'
          }
        });
      }
    }, {
      key: "leftEditNaviItemHandler",
      value: function leftEditNaviItemHandler(showAll) {
        if (showAll === true) {
          var allList = [];
          this.state.urlList.forEach(function (item) {
            allList.push(item);
          });
          this.setState({
            selectedUrls: allList
          });
          this.changeNavigationToEditMode(allList);
        } else {
          this.setState({
            selectedUrls: []
          });
          this.changeNavigationToEditMode([]);
        }
      }
    }, {
      key: "deleteItemHandler",
      value: function deleteItemHandler() {
        var _this5 = this;

        if (_CommonUtils.default.arrayIsEmpty(this.state.selectedUrls)) {
          return;
        }

        var mode = 'black';

        if (this.state.isBlackMode) {
          mode = 'black';
        } else {
          mode = 'white';
        }

        var url = this.state.selectedUrls.join(',');
        var paramsDic = {
          method: 'GET',
          params: {
            deviceId: _miot.Device.deviceID.replace("miwifi.", ""),
            mac: this.mac,
            mode: mode,
            opt: _DevicesConstant.default.WEBSITE_FILTER_OPTION_DELETE,
            url: url
          }
        };
        this.setState({
          loadingVisiable: true
        });

        _Service.default.callSmartHomeAPI(this.state.singleUrlApi, paramsDic).then(function (res) {
          _this5.setState({
            loadingVisiable: false,
            isEdtingList: false
          });

          _this5.setNavigation();

          if (res.code === 0) {
            var targetUrlList = _this5.state.urlList;

            _this5.state.selectedUrls.forEach(function (item) {
              var index = targetUrlList.indexOf(item);
              targetUrlList.splice(index, 1);
            });

            _this5.setState({
              urlList: targetUrlList
            });

            _this5.props.navigation.state.params.callback(targetUrlList.length);
          }
        }).catch(function (error) {
          _this5.setState({
            loadingVisiable: false,
            isEdtingList: false
          });

          _this5.setNavigation();

          _CommonUtils.default.ShowToastCenter('添加失败，请重试');
        });
      }
    }, {
      key: "inputsDoneHandler",
      value: function inputsDoneHandler(isUpdate) {
        this.state.isEditingSingleItem = false;
        var url = isUpdate ? this.state.editSingleItemText : this.state.inputsText;

        if (!_CommonUtils.default.isValidDomain(url)) {
          var message = url + '不是一个有效的域名地址';

          _CommonUtils.default.ShowToastCenter(message);

          return;
        }

        if (isUpdate) {
          this.updateItemHandler(url);
        } else {
          this.addItemHandler(url);
        }
      }
    }, {
      key: "addItemHandler",
      value: function addItemHandler(url) {
        var _this6 = this;

        if (this.containsItem(this.state.urlList, url)) {
          _CommonUtils.default.ShowToastCenter('列表中已存在该地址');

          return;
        }

        var mode = 'black';

        if (this.state.isBlackMode) {
          mode = 'black';
        } else {
          mode = 'white';
        }

        var paramsDic = {
          method: 'GET',
          params: {
            deviceId: _miot.Device.deviceID.replace("miwifi.", ""),
            mac: this.mac,
            mode: mode,
            opt: _DevicesConstant.default.WEBSITE_FILTER_OPTION_ADD,
            url: url
          }
        };
        this.setState({
          loadingVisiable: true
        });

        _Service.default.callSmartHomeAPI(this.state.singleUrlApi, paramsDic).then(function (res) {
          _this6.setState({
            loadingVisiable: false
          });

          if (res.code === 0) {
            var urls = _this6.state.urlList;
            urls.push(url);

            _this6.setState({
              urlList: urls
            });

            _this6.props.navigation.state.params.callback(urls.length);
          } else {
            _CommonUtils.default.ShowToastCenter('添加失败，请重试');
          }
        }).catch(function (error) {
          _this6.setState({
            loadingVisiable: false
          });

          _CommonUtils.default.ShowToastCenter('添加失败，请重试');
        });
      }
    }, {
      key: "updateItemHandler",
      value: function updateItemHandler(url) {
        var _this7 = this;

        if (url === this.state.editSingleItemValue) {
          return;
        }

        var mode = 'black';

        if (this.state.isBlackMode) {
          mode = 'black';
        } else {
          mode = 'white';
        }

        var paramsDic = {
          method: 'GET',
          params: {
            deviceId: _miot.Device.deviceID.replace("miwifi.", ""),
            deviceID: _miot.Device.deviceID.replace("miwifi.", ""),
            mac: this.mac,
            mode: mode,
            opt: _DevicesConstant.default.WEBSITE_FILTER_OPTION_UPDATE,
            url: this.state.editSingleItemValue,
            newurl: url
          }
        };
        this.setState({
          loadingVisiable: true
        });

        _Service.default.callSmartHomeAPI(this.state.singleUrlApi, paramsDic).then(function (res) {
          _this7.setState({
            loadingVisiable: false
          });

          if (res.code === 0) {
            var urls = _this7.state.urlList;
            var index = urls.indexOf(_this7.state.editSingleItemValue);

            if (index != -1) {
              urls.splice(index, 1, url);
            }

            _this7.setState({
              urlList: urls
            });

            _this7.props.navigation.state.params.callback(urls.length);
          } else {
            _CommonUtils.default.ShowToastCenter('更新失败，请重试');
          }
        }).catch(function (error) {
          _this7.setState({
            loadingVisiable: false
          });

          _CommonUtils.default.ShowToastCenter('更新失败，请重试');
        });
      }
    }, {
      key: "getEmptyTipText",
      value: function getEmptyTipText() {
        if (this.state.isBlackMode) {
          return "添加后，设备无法访问添加的站点\n例如：\nwww.baidu.com\nwww.sina.com\nmusic.163.com";
        } else {
          return "添加后，设备只能访问添加的站点，其他站点无法访问\n例如：\nwww.baidu.com\nwww.sina.com\nmusic.163.com";
        }
      }
    }, {
      key: "getInputTitle",
      value: function getInputTitle() {
        if (this.state.isBlackMode) {
          return '添加黑名单网址';
        } else {
          return '添加白名单网址';
        }
      }
    }, {
      key: "getEditUrlTitle",
      value: function getEditUrlTitle() {
        if (this.state.isBlackMode) {
          return '编辑黑名单网址';
        } else {
          return '编辑白名单网址';
        }
      }
    }, {
      key: "containsItem",
      value: function containsItem(list, item) {
        if (_CommonUtils.default.arrayIsEmpty(list)) {
          return false;
        }

        return list.indexOf(item) != -1;
      }
    }, {
      key: "render",
      value: function render() {
        var _this8 = this;

        var listHeight = _Devices.ScreenH - 200 - 60;
        var isiPhoneX = false;

        if (_Devices.ios && (_Devices.ScreenH === 812 || _Devices.ScreenH === 896)) {
          isiPhoneX = true;
        }

        var naviBarHeight = isiPhoneX ? _reactNavigation.Header.HEIGHT + 24 : _reactNavigation.Header.HEIGHT;
        var statusBarHeight = _reactNative.StatusBar.currentHeight;
        var naviAndStatusBarHeight = _Devices.ios ? naviBarHeight : naviBarHeight + statusBarHeight;
        listHeight = (_Devices.ios ? _Devices.ScreenH : _reactNative.Dimensions.get('screen').height) - naviAndStatusBarHeight - 70 - 100 - (isiPhoneX ? 54 : _Devices.ios ? 30 : 20);
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, this.state.isBlackMode ? '网址黑名单' : '网址白名单')), _CommonUtils.default.arrayIsEmpty(this.state.urlList) ? _react.default.createElement(_reactNative.View, {
          style: styles.emptyContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.empty
        }, this.getEmptyTipText())) : null, _react.default.createElement(_reactNative.FlatList, {
          style: {
            maxHeight: listHeight
          },
          data: this.state.urlList,
          renderItem: function renderItem(_ref) {
            var item = _ref.item;
            return _this8.listItem(item);
          }
        }), this.state.isEdtingList ? _react.default.createElement(_reactNative.View, {
          style: styles.bottomContainer
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.deleteButton,
          disabled: false,
          onPress: function onPress() {
            _this8.deleteItemHandler();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.bottomButtonTitle
        }, '删除'))) : _react.default.createElement(_reactNative.View, {
          style: styles.editAndAddContainer
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.addButton,
          visible: !this.state.isEdtingList,
          onPress: function onPress() {
            _this8.setState({
              inputVisiable: true,
              inputsText: 'www.'
            });
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.bottomButtonTitle
        }, '添加')), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: _CommonUtils.default.arrayIsEmpty(this.state.urlList) ? styles.editButtonDisable : styles.editButtonNormal,
          disabled: _CommonUtils.default.arrayIsEmpty(this.state.urlList) ? true : false,
          onPress: function onPress() {
            if (_this8.state.isEdtingList) {
              return;
            }

            _this8.setState({
              isEdtingList: true
            });

            _this8.changeNavigationToEditMode(_this8.state.selectedUrls);
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: _CommonUtils.default.arrayIsEmpty(this.state.urlList) ? styles.editTitleDiable : styles.editTitleNormal
        }, '编辑'))), _react.default.createElement(_Dialog.InputDialog, {
          visible: this.state.inputVisiable,
          title: this.state.isEditingSingleItem ? this.getEditUrlTitle() : this.getInputTitle(),
          type: _Dialog.InputDialog.TYPE.SIMPLE,
          inputs: [{
            placeholder: '',
            defaultValue: this.state.isEditingSingleItem ? this.state.editSingleItemValue : this.state.inputsText,
            textInputProps: {
              autoFocus: true
            },
            onChangeText: function onChangeText(text) {
              if (_this8.state.isEditingSingleItem) {
                _this8.state.editSingleItemText = text;
              } else {
                _this8.state.inputsText = text;
              }
            }
          }],
          onDismiss: function onDismiss(_) {
            _this8.state['inputVisiable'] = false, _this8.state.isEditingSingleItem = false;
          },
          buttons: [{
            text: '取消',
            style: {
              color: '#2c7dfa'
            },
            callback: function callback(_) {
              _this8.setState({
                inputVisiable: false,
                isEditingSingleItem: false
              });
            }
          }, {
            text: this.state.isEditingSingleItem ? '确定' : '添加',
            style: {
              color: 'blue'
            },
            callback: function callback(result) {
              _this8.inputsDoneHandler(_this8.state.isEditingSingleItem);

              _this8.setState({
                inputVisiable: false
              });
            }
          }]
        }), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: this.state.loadingVisiable,
          message: ""
        }));
      }
    }]);
    return WebsiteFilter;
  }(_react.default.Component);

  exports.default = WebsiteFilter;

  WebsiteFilter.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;

    var _ref3 = navigation.state.params || {},
        titleProps = _ref3.titleProps;

    if (!titleProps) return {
      header: null
    };
    return {
      header: _react.default.createElement(_TitleBar.default, titleProps)
    };
  };

  var isiPhoneX = false;

  if (_Devices.ios && (_Devices.ScreenH === 812 || _Devices.ScreenH === 896)) {
    isiPhoneX = true;
  }

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#fff'
    },
    titleContainer: {
      backgroundColor: '#fff',
      marginLeft: 15,
      justifyContent: 'center',
      marginTop: 10,
      height: 60
    },
    title: {
      position: 'absolute',
      color: '#000',
      fontSize: 20,
      textAlign: 'left',
      fontWeight: 'bold',
      top: 20
    },
    emptyContainer: {
      backgroundColor: '#fff',
      marginLeft: 20,
      marginRight: 20,
      marginTop: 20
    },
    empty: {
      position: "absolute",
      color: '#999',
      textAlign: 'left',
      fontSize: 12,
      left: 20,
      top: 20,
      height: 200,
      width: _Devices.ScreenW - 80
    },
    bottomContainer: {
      position: 'absolute',
      bottom: isiPhoneX ? 34 : 10,
      alignItems: 'center',
      justifyContent: 'center',
      height: 100,
      left: 24
    },
    editAndAddContainer: {
      position: 'absolute',
      bottom: isiPhoneX ? 34 : 10,
      alignItems: 'center',
      justifyContent: 'center',
      height: 100,
      left: 24
    },
    addButton: {
      position: "absolute",
      top: 0,
      left: 0,
      width: _Devices.ScreenW - 48,
      height: 45,
      backgroundColor: '#2c7DFA',
      borderRadius: 22.5,
      alignItems: 'center',
      justifyContent: 'center'
    },
    editButtonDisable: {
      position: "absolute",
      top: 55,
      left: 0,
      width: _Devices.ScreenW - 48,
      height: 45,
      backgroundColor: 'lightgray',
      borderRadius: 22.5,
      alignItems: 'center',
      justifyContent: 'center'
    },
    editButtonNormal: {
      position: "absolute",
      top: 55,
      left: 0,
      width: _Devices.ScreenW - 48,
      height: 45,
      backgroundColor: '#fff',
      borderRadius: 22.5,
      alignItems: 'center',
      justifyContent: 'center',
      borderWidth: 0.5,
      borderColor: '#2c7dfa'
    },
    bottomButtonTitle: {
      fontSize: 16,
      color: '#fff',
      fontWeight: 'bold'
    },
    editTitleDiable: {
      fontSize: 16,
      color: '#fff',
      fontWeight: 'bold'
    },
    editTitleNormal: {
      fontSize: 16,
      color: '#000',
      fontWeight: 'bold'
    },
    deleteButton: {
      position: "absolute",
      top: 25,
      left: 0,
      width: _Devices.ScreenW - 48,
      height: 45,
      backgroundColor: 'red',
      borderRadius: 22.5,
      alignItems: 'center',
      justifyContent: 'center'
    }
  });
},10793,[14305,14320,14323,14371,14377,14386,10297,10033,10918,10067,10755,10064,10062,10074,10040,10338,10284,10367,10229,10968]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _Devices = _$$_REQUIRE(_dependencyMap[8]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[11]);

  var _ClientHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _miot = _$$_REQUIRE(_dependencyMap[14]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[15]);

  var DeviceTimerList = function (_React$Component) {
    (0, _inherits2.default)(DeviceTimerList, _React$Component);

    function DeviceTimerList(props) {
      var _this;

      (0, _classCallCheck2.default)(this, DeviceTimerList);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DeviceTimerList).call(this, props));

      _this.listItem = function (item) {
        return _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: _this.getItemTitle(item),
          subtitle: _ClientHelper.default.getRepeatDesc(item),
          value: item.enable === 1 ? true : false,
          showSeparator: true,
          onValueChange: function onValueChange() {
            _this.updateSingleItem(item);
          },
          onPress: function onPress() {
            _this.editSingleItem(item);
          }
        });
      };

      _this.editSingleItemCallBack = function (newItem, isNew) {
        var temList = _this.state.timerList;

        if (isNew) {
          temList.push(newItem);
        } else {
          var targetIndex = -1;
          temList.forEach(function (originItem, index) {
            if (originItem.id === newItem.id) {
              targetIndex = index;
            }
          });
          temList.splice(targetIndex, 1, newItem);
        }

        _this.setState({
          timerList: temList
        });

        _this.props.navigation.state.params.callback(temList);

        _this.requestTimerItems();
      };

      _this.deleteItemCallBack = function (item) {
        var index = _this.state.timerList.indexOf(item);

        if (index === -1) {
          return;
        }

        var tempList = _this.state.timerList;
        tempList.splice(index, 1);

        _this.setState({
          timerList: tempList
        });

        _this.props.navigation.state.params.callback(tempList);

        _this.requestTimerItems();
      };

      _this.state = {
        timerList: props.navigation.state.params.items,
        loadingVisiable: false
      };
      _this.mac = props.navigation.state.params.mac;
      _this.updateApi = _API.default.devices.device_parent_control_items_update.remote;
      _this.callback = props.navigation.state.params.callback;
      _this.timerItmesApi = _API.default.devices.device_parent_control_items.remote;
      return _this;
    }

    (0, _createClass2.default)(DeviceTimerList, [{
      key: "requestTimerItems",
      value: function requestTimerItems() {
        var _this2 = this;

        this.setState({
          loadingVisiable: true
        });
        var paramsDic = {
          method: 'GET',
          params: {
            mac: this.mac,
            deviceId: _miot.Device.deviceID.replace("miwifi.", "")
          }
        };

        _miot.Service.callSmartHomeAPI(this.timerItmesApi, paramsDic).then(function (res) {
          _this2.setState({
            loadingVisiable: false
          });

          if (res.code === 0) {
            var info = res['info'];

            if (!_CommonUtils.default.arrayIsEmpty(info)) {
              _this2.setState({
                timerList: info
              });

              _this2.props.navigation.state.params.callback(info);
            }
          }
        }).catch(function (error) {
          _this2.setState({
            loadingVisiable: false
          });
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, '定时断网设置')), this.shouldShowEmpty() ? _react.default.createElement(_reactNative.View, {
          style: styles.emptyContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.empty
        }, this.getEmpotyTip())) : null, _react.default.createElement(_reactNative.FlatList, {
          data: this.state.timerList,
          renderItem: function renderItem(_ref) {
            var item = _ref.item;
            return _this3.listItem(item);
          }
        }), _react.default.createElement(_reactNative.View, {
          style: styles.bottomContainer
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.addButton,
          disabled: false,
          onPress: function onPress() {
            if (_this3.state.timerList.length >= 5) {
              _CommonUtils.default.ShowToastCenter('最多支持5个定时');

              return;
            }

            _this3.props.navigation.navigate('TimerSetting', {
              mac: _this3.mac,
              isNew: true,
              callback: _this3.editSingleItemCallBack
            });
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.bottomButtonTitle
        }, '添加定时'))), _react.default.createElement(_Dialog.LoadingDialog, {
          visiable: this.state.loadingVisiable,
          message: ''
        }));
      }
    }, {
      key: "updateSingleItem",
      value: function updateSingleItem(item) {
        var _this4 = this;

        var enable = '1';

        if (item.enable === 1) {
          enable = '0';
        }

        var paramsDic = {
          method: 'GET',
          params: {
            mac: item.mac,
            deviceId: _miot.Device.deviceID.replace("miwifi.", ""),
            id: item.id,
            enable: enable
          }
        };
        this.setState({
          loadingVisiable: true
        });

        _miot.Service.callSmartHomeAPI(this.updateApi, paramsDic).then(function (res) {
          if (res.code === 0) {
            var list = [];

            _this4.state.timerList.forEach(function (originItem) {
              if (item.id === originItem.id) {
                originItem.enable = enable === '1' ? 1 : 0;
              }

              list.push(originItem);
            });

            _this4.setState({
              timerList: list
            });

            _this4.props.navigation.state.params.callback(_this4.state.timerList);
          } else {
            _CommonUtils.default.ShowToastCenter('操作失败');

            _this4.setState({
              timerList: _this4.state.timerList
            });
          }
        }).catch(function (error) {
          _CommonUtils.default.ShowToastCenter('操作失败');

          _this4.setState({
            timerList: _this4.state.timerList
          });
        });
      }
    }, {
      key: "editSingleItem",
      value: function editSingleItem(item) {
        this.props.navigation.navigate('TimerSetting', {
          mac: this.mac,
          isNew: false,
          curItem: item,
          callback: this.editSingleItemCallBack,
          deleteHandler: this.deleteItemCallBack
        });
      }
    }, {
      key: "shouldShowEmpty",
      value: function shouldShowEmpty() {
        return _CommonUtils.default.arrayIsEmpty(this.state.timerList);
      }
    }, {
      key: "getEmpotyTip",
      value: function getEmpotyTip() {
        return '添加定时后，设备在设定的时间内无法连接外网';
      }
    }, {
      key: "getItemTitle",
      value: function getItemTitle(item) {
        var result = '';
        result = item.timeseg.from + '至' + item.timeseg.to;
        return result;
      }
    }]);
    return DeviceTimerList;
  }(_react.default.Component);

  exports.default = DeviceTimerList;

  DeviceTimerList.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: "",
        style: {
          backgroundColor: '#fff'
        },
        onPressLeft: function onPressLeft(_) {
          return navigation.goBack();
        }
      })
    };
  };

  var isiPhoneX = false;

  if (_Devices.ios && (_Devices.ScreenH === 812 || _Devices.ScreenH === 896)) {
    isiPhoneX = true;
  }

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#fff'
    },
    titleContainer: {
      backgroundColor: '#fff',
      marginLeft: 15,
      justifyContent: 'center',
      marginTop: 10,
      height: 60
    },
    title: {
      position: 'absolute',
      color: '#000',
      fontSize: 20,
      textAlign: 'left',
      fontWeight: 'bold',
      top: 20
    },
    emptyContainer: {
      backgroundColor: '#fff',
      marginLeft: 20,
      marginRight: 20,
      marginTop: 20
    },
    empty: {
      position: "absolute",
      color: '#999',
      textAlign: 'left',
      fontSize: 12,
      left: 20,
      top: 20,
      height: 200,
      width: _Devices.ScreenW - 80
    },
    bottomContainer: {
      position: 'absolute',
      bottom: isiPhoneX ? 34 : 10,
      alignItems: 'center',
      justifyContent: 'center',
      height: 60,
      left: 24
    },
    addButton: {
      position: "absolute",
      top: 0,
      left: 0,
      width: _Devices.ScreenW - 48,
      height: 45,
      backgroundColor: '#2c7DFA',
      borderRadius: 22.5,
      alignItems: 'center',
      justifyContent: 'center'
    },
    bottomButtonTitle: {
      fontSize: 16,
      color: '#fff',
      fontWeight: 'bold'
    }
  });
},10796,[14305,14320,14323,14371,14377,14386,10297,10284,10067,10033,10040,10338,10223,10064,10074,10755]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[7]);

  var _miot = _$$_REQUIRE(_dependencyMap[8]);

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _MeshHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Devices = _$$_REQUIRE(_dependencyMap[14]);

  var _RouterInfoHelper = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[15]));

  var MeshAddChildTips = function (_React$Component) {
    (0, _inherits2.default)(MeshAddChildTips, _React$Component);

    function MeshAddChildTips(props) {
      var _this;

      (0, _classCallCheck2.default)(this, MeshAddChildTips);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MeshAddChildTips).call(this, props));
      _this.state = {
        limitNumAlert: false
      };
      _this.childList = [];
      _this.limitMsg = '为保证Mesh网络良好的使用体验，当前至多可支持4台Mesh路由器组网，更多Mesh路由器建议组成新的Mesh网络。';
      return _this;
    }

    (0, _createClass2.default)(MeshAddChildTips, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.loadChildList();
        this.extendSuccessNotification = _reactNative.DeviceEventEmitter.addListener('extendSuccessNotification', function () {
          _this2.loadChildList();
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.extendSuccessNotification.remove();
      }
    }, {
      key: "loadChildList",
      value: function loadChildList() {
        var _this3 = this;

        var deviceId = _miot.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceID: deviceId,
            deviceId: deviceId,
            refresh: 1
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.meshTopology, paramsDic).then(function (res) {
          if (res.code == 0) {
            _this3.childList = res.childMeshInfos;
          }
        }).catch(function (e) {});
      }
    }, {
      key: "startHandler",
      value: function startHandler() {
        var isSupportMiMesh_Rom = _RouterInfoHelper.default.sharedInstance().checkCurrentCapality(_RouterInfoHelper.RouterCapality.isSupportMiMesh_Rom);

        var msg = '为保证Mesh网络良好的使用体验，当前至多可支持4台Mesh路由器组网，更多Mesh路由器建议组成新的Mesh网络。';

        if (isSupportMiMesh_Rom) {
          msg = '为保证Mesh网络良好的使用体验，当前至多可支持10台Mesh路由器组网，更多Mesh路由器建议组成新的Mesh网络。';
        }

        var limitNum = isSupportMiMesh_Rom ? 9 : 3;
        this.limitMsg = msg;
        var childList = this.childList;
        var childNum = 0;

        if (_CommonUtils.default.isNull(childList) || _CommonUtils.default.arrayIsEmpty(childList)) {
          childNum = 0;
        } else {
          childNum = childList.length;
        }

        if (childNum < limitNum) {
          this.props.navigation.navigate('MeshSearchChild');
        } else {
          this.setState({
            limitNumAlert: true
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.ScrollView, null, _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, '添加Mesh节点路由')), _react.default.createElement(_reactNative.View, {
          style: styles.iconContainer
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[16])
        })), _react.default.createElement(_reactNative.Text, {
          style: styles.content
        }, '1.请先将支持Mesh功能的节点路由器升级至最新版本，通电并放置在主路由器附近。\n2.节点路由器需处于出厂状态，如已使用过，请先长按节点路由背后的Reset按键5秒，并等待系统指示灯变成蓝/白色。\n3.点击“开始设置”，按提示步骤完成添加。完成后您可以将其摆放到需要信号覆盖的位置。')), _react.default.createElement(_reactNative.View, {
          style: styles.confirmContainer
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.confirm,
          onPress: function onPress() {
            _this4.startHandler();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.confirmTitle
        }, '开始设置'))), _react.default.createElement(_Dialog.MessageDialog, {
          visible: this.state.limitNumAlert,
          title: "\u6E29\u99A8\u63D0\u793A",
          message: this.limitMsg,
          messageStyle: {
            textAlign: 'center',
            backgroundColor: 'white'
          },
          buttons: [{
            text: '知道了',
            style: {
              color: '#4C4C4C'
            },
            callback: function callback(_) {
              return _this4.setState({
                limitNumAlert: false
              });
            }
          }],
          onDismiss: function onDismiss(_) {
            return _this4.setState({
              limitNumAlert: false
            });
          }
        }));
      }
    }]);
    return MeshAddChildTips;
  }(_react.default.Component);

  exports.default = MeshAddChildTips;
  var isiPhoneX = false;

  if (_Devices.ios && (_Devices.ScreenH === 812 || _Devices.ScreenH === 896)) {
    isiPhoneX = true;
  }

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      flexDirection: 'column',
      backgroundColor: '#fff',
      flexWrap: 'wrap'
    },
    titleContainer: {
      backgroundColor: '#fff',
      marginLeft: 15,
      justifyContent: 'center',
      marginTop: 10,
      height: 60,
      width: _Devices.ScreenW - 30
    },
    title: {
      position: 'absolute',
      color: '#000',
      fontSize: 20,
      textAlign: 'left',
      fontWeight: 'bold',
      top: 20,
      width: _Devices.ScreenW - 30
    },
    iconContainer: {
      paddingTop: _Devices.ScreenH < 667 ? 0 : 20
    },
    icon: {
      width: _Devices.ScreenW,
      height: _Devices.ScreenW * 266 / 360,
      resizeMode: 'contain'
    },
    content: {
      color: '#000',
      fontSize: 12,
      textAlign: 'left',
      paddingTop: _Devices.ScreenH < 667 ? 10 : 40,
      paddingLeft: 15,
      width: _Devices.ScreenW - 30
    },
    confirmContainer: {
      position: "absolute",
      bottom: isiPhoneX ? 34 : 10,
      alignItems: 'center',
      justifyContent: 'center',
      height: 60,
      left: 24
    },
    confirm: {
      marginTop: 15,
      width: _Devices.ScreenW - 48,
      height: 46,
      backgroundColor: '#2c7DFA',
      borderRadius: 23,
      alignItems: 'center',
      justifyContent: 'center'
    },
    confirmTitle: {
      fontSize: 16,
      color: '#fff',
      fontWeight: 'bold'
    }
  });
},10799,[14308,14305,14320,14323,14371,14377,14386,10755,10074,10297,10033,10064,10190,10040,10067,10076,10802]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 1080,
    "height": 798,
    "scales": [1],
    "hash": "cd9a92912f001ffb69217241b6ac1383",
    "name": "mesh_add_tip",
    "type": "png"
  });
},10802,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[9]);

  var _Devices = _$$_REQUIRE(_dependencyMap[10]);

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _device = _$$_REQUIRE(_dependencyMap[12]);

  var _miot = _$$_REQUIRE(_dependencyMap[13]);

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[14]);

  var _MeshHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _RouterInfoHelper = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[18]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var MeshTree = function (_React$Component) {
    (0, _inherits2.default)(MeshTree, _React$Component);

    function MeshTree(props) {
      var _this;

      (0, _classCallCheck2.default)(this, MeshTree);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MeshTree).call(this, props));

      _this.onRefreshing = function () {
        _this.setState({
          refreshing: true
        });

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceID: deviceId,
            deviceId: deviceId,
            refresh: 1
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.meshTopology, paramsDic).then(function (res) {
          if (res.code == 0) {
            _this.setState({
              refreshing: false,
              childMeshInfos: _MeshHelper.default.getAllMeshInfos(res.childMeshInfos),
              ReNum: _CommonUtils.default.isNull(res.childMeshInfos) ? 0 : res.childMeshInfos.length
            });
          } else {
            _this.setState({
              refreshing: false,
              childMeshInfos: _MeshHelper.default.getAllMeshInfos([]),
              ReNum: 0
            });

            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.common_refreshing_retry);
          }
        }).catch(function (e) {
          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.common_refreshing_retry);

          _this.setState({
            refreshing: false,
            childMeshInfos: _MeshHelper.default.getAllMeshInfos([]),
            ReNum: 0
          });
        });
      };

      _this._ListFooterComponent = function () {
        return _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            return _this._onPressFootText();
          },
          style: styles.footer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.footerText
        }, "\u5E38\u89C1\u95EE\u9898"));
      };

      _this._renderItem = function (_ref) {
        var item = _ref.item;
        return _react.default.createElement(_ListItem.default, {
          item: item,
          data: _this.state.childMeshInfos,
          onPressContent: _this._onPressContent,
          onPressTip: _this._onPressTip
        });
      };

      _this._onPressTip = function (item) {
        if (_CommonUtils.default.isTextEmpty(item.promptUrl)) {
          _CommonUtils.default.ShowToastBottom('暂无数据');
        } else {
          _this.props.navigation.navigate('MpkWebPage', {
            title: '常见问题',
            url: item.promptUrl
          });
        }
      };

      _this._onPressContent = function (item) {
        _this.props.navigation.navigate('MeshContentDetails', {
          item: item,
          title: item.locale,
          data: _this.state.childMeshInfos
        });
      };

      _this.state = {
        childMeshInfos: [],
        refreshing: false,
        ReNum: 0,
        reTipVisable: false
      };
      return _this;
    }

    (0, _createClass2.default)(MeshTree, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        this.onRefreshing();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        _reactNative.DeviceEventEmitter.emit('update', 'MeshTree');
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        _reactNative.DeviceEventEmitter.addListener("ref", function (params) {
          _this2.onRefreshing();
        });
      }
    }, {
      key: "_retryGetMeshTree",
      value: function _retryGetMeshTree() {
        var _this3 = this;

        var timeoutID = setTimeout(function () {
          _this3._getMeshTree();

          clearTimeout(timeoutID);
        }, 5000);
      }
    }, {
      key: "_onPressFootText",
      value: function _onPressFootText() {
        this.props.navigation.navigate('MpkWebPage', {
          title: '常见问题',
          url: 'http://www1.miwifi.com/mesh_help/'
        });
      }
    }, {
      key: "_addMesh",
      value: function _addMesh() {
        var isSupportMiMesh_Rom = _RouterInfoHelper.default.sharedInstance().checkCurrentCapality(_RouterInfoHelper.RouterCapality.isSupportMiMesh_Rom);

        var limitNum = isSupportMiMesh_Rom ? 9 : 3;

        if (this.state.ReNum < limitNum) {
          this.props.navigation.navigate('MeshAddChildTips');
        } else {
          this.setState({
            reTipVisable: true
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var isSupportMiMesh_Rom = _RouterInfoHelper.default.sharedInstance().checkCurrentCapality(_RouterInfoHelper.RouterCapality.isSupportMiMesh_Rom);

        var msg = '为保证Mesh网络良好的使用体验，当前至多可支持4台Mesh路由器组网，更多Mesh路由器建议组成新的Mesh网络。';

        if (isSupportMiMesh_Rom) {
          msg = '为保证Mesh网络良好的使用体验，当前至多可支持10台Mesh路由器组网，更多Mesh路由器建议组成新的Mesh网络。';
        }

        return _react.default.createElement(_reactNative.SafeAreaView, {
          style: styles.container
        }, _react.default.createElement(_TitleBar.default, {
          type: "dark",
          style: {
            backgroundColor: '#fff'
          },
          title: this.props.navigation.state.params.title,
          rightText: '添加',
          rightTextStyle: {
            color: '#333333',
            fontWeight: 'bold'
          },
          onPressRight: function onPressRight() {
            _this4._addMesh();
          },
          onPressLeft: function onPressLeft() {
            _this4.props.navigation.goBack();
          }
        }), _react.default.createElement(_reactNative.FlatList, {
          data: this.state.childMeshInfos,
          renderItem: this._renderItem,
          refreshing: this.state.refreshing,
          onRefresh: this.onRefreshing,
          onEndReachedThreshold: 0.5,
          ListFooterComponent: this._ListFooterComponent,
          keyExtractor: function keyExtractor(item, index) {
            return index.toString();
          }
        }), _react.default.createElement(_Dialog.MessageDialog, {
          visible: this.state.reTipVisable,
          title: "\u6E29\u99A8\u63D0\u793A",
          message: msg,
          messageStyle: {
            textAlign: 'center',
            backgroundColor: 'white'
          },
          buttons: [{
            text: '知道了',
            style: {
              color: '#4C4C4C'
            },
            callback: function callback(_) {
              return _this4.setState({
                reTipVisable: false
              });
            }
          }],
          onDismiss: function onDismiss(_) {
            return _this4.setState({
              reTipVisable: false
            });
          }
        }));
      }
    }]);
    return MeshTree;
  }(_react.default.Component);

  exports.default = MeshTree;

  MeshTree.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: null
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      flex: 1
    },
    divider: {
      marginHorizontal: 20,
      height: 0.5,
      backgroundColor: '#E3E3E3'
    },
    footer: {
      marginLeft: 30,
      justifyContent: 'center',
      height: 50,
      width: 80
    },
    footerText: {
      fontSize: 14,
      color: '#2C7DFA'
    }
  });
},10805,[14308,14305,14320,14323,14371,14377,14386,10297,10033,10755,10067,10284,10935,10074,10055,10190,10808,10064,10076,10040]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _Devices = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _PlaceholderImage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[13]);

  var _MeshHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var ListItem = function (_Component) {
    (0, _inherits2.default)(ListItem, _Component);

    function ListItem() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, ListItem);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ListItem)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this._renderDevices = function () {
        var item = _this.props.item;
        var data = _this.props.data;

        var image_uri = _MeshHelper.default.getRealismMeshResource(item.hardware);

        var image_signal = _MeshHelper.default.getSignaleImageResource(item);

        var image_tip = _$$_REQUIRE(_dependencyMap[15]);

        var iconCap = _$$_REQUIRE(_dependencyMap[16]);

        return _react.default.createElement(_reactNative.SafeAreaView, null, _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            return _this._onPressContent(item);
          },
          style: styles.itemHeaderParents
        }, _react.default.createElement(_reactNative.View, {
          style: styles.itemHeader
        }, _react.default.createElement(_PlaceholderImage.default, {
          style: {
            width: 55,
            height: 55,
            opacity: 1,
            resizeMode: 'contain',
            borderRadius: 5,
            marginHorizontal: 10
          },
          source: image_uri
        }), _MeshHelper.default.isCapMesh(item) ? _react.default.createElement(_reactNative.View, {
          style: {
            width: 15,
            height: 60,
            flexDirection: 'column'
          }
        }, _react.default.createElement(_PlaceholderImage.default, {
          style: {
            width: 15,
            height: 15,
            opacity: 1,
            resizeMode: 'contain',
            borderRadius: 5
          },
          source: iconCap
        })) : _react.default.createElement(_reactNative.View, {
          style: {
            width: 15,
            height: 60,
            flexDirection: 'column'
          }
        }), _react.default.createElement(_reactNative.View, {
          style: styles.deviceContent
        }, _react.default.createElement(_reactNative.View, {
          style: styles.deviceContentRowParentView
        }, _react.default.createElement(_reactNative.View, {
          style: styles.deviceContentRowTopView
        }, _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: styles.deviceNameTextMax
        }, item.locale))), _react.default.createElement(_reactNative.View, {
          style: styles.deviceContentRowTopView
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.deviceConnectTypeText
        }, _MeshHelper.default.getUpnodeString(item, data))))), _react.default.createElement(_reactNative.View, {
          style: styles.icon_view
        }, _MeshHelper.default.shouldShowSignalIcon(item) ? _react.default.createElement(_reactNative.Image, {
          style: styles.signal_icon,
          source: image_signal
        }) : null, !_MeshHelper.default.isCapMesh(item) && !_CommonUtils.default.isTextEmpty(item.prompt) ? _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            return _this._onPressTip(item);
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.signal_icon,
          source: image_tip
        })) : null)), _react.default.createElement(_reactNative.View, {
          style: styles.divider
        }));
      };

      _this._onPressTip = function (item) {
        var onPressTip = _this.props.onPressTip;
        onPressTip && onPressTip(item);
      };

      _this._onPressContent = function (item) {
        var onPressContent = _this.props.onPressContent;
        onPressContent && onPressContent(item);
      };

      return _this;
    }

    (0, _createClass2.default)(ListItem, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, this._renderDevices());
      }
    }]);
    return ListItem;
  }(_react.Component);

  exports.default = ListItem;

  var styles = _reactNative.StyleSheet.create({
    item: {
      backgroundColor: '#fff',
      padding: 5
    },
    itemHeaderParents: {
      height: 90,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-between'
    },
    itemHeader: {
      height: 90,
      flexDirection: 'row',
      alignItems: 'center'
    },
    deviceNameTextMax: {
      maxWidth: _Devices.ScreenW * 0.5,
      width: _Devices.ScreenW * 0.4,
      alignSelf: 'center',
      fontSize: 16,
      fontWeight: 'bold',
      color: '#333333'
    },
    deviceContent: {
      marginLeft: 15,
      justifyContent: 'center',
      height: 70
    },
    deviceContentRowTopView: {
      flexDirection: 'row',
      alignItems: 'center',
      marginVertical: 5
    },
    deviceContentRowParentView: {
      flexDirection: 'row'
    },
    deviceContentColumView: {
      flexDirection: 'column',
      alignItems: 'flex-start'
    },
    signal_icon: {
      width: 20,
      height: 20,
      marginStart: 5,
      resizeMode: 'contain'
    },
    icon_view: {
      flexDirection: 'row',
      marginEnd: 20
    },
    divider: {
      marginHorizontal: 20,
      height: 0.5,
      backgroundColor: '#E3E3E3'
    },
    deviceConnectTypeText: {
      maxWidth: _Devices.ScreenW * 0.5,
      width: _Devices.ScreenW * 0.4,
      fontSize: 12,
      color: '#7F7F7F',
      marginTop: 2
    }
  });

  ListItem.propTypes = {
    item: _propTypes.default.object.isRequired,
    onPressContent: _propTypes.default.func
  };
},10808,[14308,14305,14320,14323,14371,14377,14386,10297,10033,10067,10318,10241,10040,10055,10190,10811,10814]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
    "width": 86,
    "height": 86,
    "scales": [1],
    "hash": "2cfe56aedb9f7bcc5bac4f52b2bea05b",
    "name": "icon_tips_mesh",
    "type": "png"
  });
},10811,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/icons",
    "width": 58,
    "height": 58,
    "scales": [1],
    "hash": "5a9f8d22dfee01a2a3892ce6a77f585b",
    "name": "icon_mesh_main",
    "type": "png"
  });
},10814,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _ListItem = _$$_REQUIRE(_dependencyMap[8]);

  var _Devices = _$$_REQUIRE(_dependencyMap[9]);

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _device = _$$_REQUIRE(_dependencyMap[11]);

  var _miot = _$$_REQUIRE(_dependencyMap[12]);

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[13]);

  var _MeshHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _PlaceholderImage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[17]);

  var _ui = _$$_REQUIRE(_dependencyMap[18]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _MeshDel = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var dialogButtonName = [_RouterLocalizedStringUtil.localStrings.alertOKTitle, _RouterLocalizedStringUtil.localStrings.alertCancelTitle, _RouterLocalizedStringUtil.localStrings.alertTipText];
  var dialogTip = _RouterLocalizedStringUtil.localStrings.resstartRouterAlertContent;

  var MeshContentDetails = function (_React$Component) {
    (0, _inherits2.default)(MeshContentDetails, _React$Component);

    function MeshContentDetails(props) {
      var _this;

      (0, _classCallCheck2.default)(this, MeshContentDetails);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MeshContentDetails).call(this, props));

      _this._showLocationDialog = function () {
        _this.setState({
          edit_dialog_visbale: true
        });
      };

      _this.item = _this.props.navigation.state.params.item;
      _this.state = {
        hasBeginStartRouter: false,
        loading: false,
        hasEndStartRouter: false,
        rebootAlertVisible: false,
        restartVisbale: false,
        removeRouterVisvale: false,
        edit_dialog_visbale: false,
        locale: _this.item.locale,
        checkLocale: _CommonUtils.default.getArrayPosition(_MeshHelper.default.getLocationsArray(), _CommonUtils.default.removeContainString(_this.item.locale, '(网关)')),
        localeDataSource: _MeshHelper.default.getLocationsArray()
      };
      return _this;
    }

    (0, _createClass2.default)(MeshContentDetails, [{
      key: "_remove_router",
      value: function _remove_router() {
        this.setState({
          remove: false
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        clearTimeout(this.timer);

        _reactNative.DeviceEventEmitter.emit('ref', 'MeshDetails');
      }
    }, {
      key: "_pingrouter",
      value: function _pingrouter() {
        var _this2 = this;

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceId: this.item.devid
          }
        };
        var api = _API.default.router.init_info;

        _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
          if (res.code == 0) {
            if (!_this2.state.hasEndStartRouter && _this2.state.hasBeginStartRouter) {
              _this2.setState({
                hasEndStartRouter: true,
                loading: false
              });

              _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.restartRouterSuccess);

              _this2.props.navigation.popToTop();
            }
          } else {
            if (!_this2.state.hasBeginStartRouter) {
              _this2.setState({
                hasBeginStartRouter: true
              });
            }
          }
        }).catch(function (e) {
          if (!_this2.state.hasBeginStartRouter) {
            _this2.setState({
              hasBeginStartRouter: true
            });
          }
        });
      }
    }, {
      key: "_restart_router",
      value: function _restart_router() {
        var _this3 = this;

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceId: this.item.devid
          }
        };
        this.setState({
          hasBeginStartRouter: false,
          hasEndStartRouter: false
        });
        var api = _API.default.reboot_router.remote;

        _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
          var code = res.code;

          if (code == 0) {
            _this3.timer = setInterval(function () {
              _this3._pingrouter();
            }, 3000);
          }
        }).catch(function (e) {
          _this3.setState({
            loading: false
          });
        });
      }
    }, {
      key: "componentWillMount",
      value: function componentWillMount() {}
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nexProps) {}
    }, {
      key: "back",
      value: function back() {
        this.props.navigation.popToTop();
      }
    }, {
      key: "_doSetLocate",
      value: function _doSetLocate(e) {
        var _this4 = this;

        this.setState({
          loading: true
        });
        var api = _API.default.set_router_name.remote;
        var locale = this.state.localeDataSource[e.position];

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var paramsDic = {
          method: 'POST',
          params: {
            deviceId: this.item.devid,
            set_router_name: this.item.routerName,
            locale: locale
          }
        };

        _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
          _this4.setState({
            loading: false
          });

          if (res.code == 0) {
            _this4.setState({
              locale: locale
            });

            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeSuccess);

            if (_MeshHelper.default.isCapMesh(_this4.item)) {
              _RouterInfoHelper.default.sharedInstance().routerInfo.router_locale = locale;
            }
          } else {
            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeFail);
          }
        }).catch(function (e) {
          _this4.setState({
            loading: false
          });

          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.wifiInfoChangeFail);
        });
      }
    }, {
      key: "_SetLocate",
      value: function _SetLocate(e) {
        if (this.state.checkLocale == -1) {
          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.mesh_local_tip);
        } else if (!_MeshHelper.default.getMeshIsOnLine(this.item)) {
          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.mesh_change_location_error_tip);
        } else {
          this._doSetLocate(e);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this5 = this;

        var item = this.item;

        var image_uri = _MeshHelper.default.getRealismMeshResource(item.hardware);

        var status = _MeshHelper.default.getMeshIsOnLine(item) ? '已连接互联网' : '无法接入';

        var isCap = _MeshHelper.default.isCapMesh(item);

        return _react.default.createElement(_reactNative.SafeAreaView, {
          style: styles.container
        }, _react.default.createElement(_TitleBar.default, {
          type: "dark",
          style: {
            backgroundColor: '#fff'
          },
          title: this.state.locale,
          rightText: '编辑',
          rightTextStyle: {
            color: '#333333',
            fontWeight: 'bold'
          },
          onPressRight: function onPressRight() {
            _this5._showLocationDialog();
          },
          onPressLeft: function onPressLeft() {
            _this5.props.navigation.goBack();
          }
        }), _react.default.createElement(_reactNative.ScrollView, null, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: styles.itemHeaderParents
        }, _react.default.createElement(_reactNative.View, {
          style: styles.itemHeader
        }, _react.default.createElement(_PlaceholderImage.default, {
          style: {
            width: 100,
            height: 100,
            opacity: 1,
            resizeMode: 'contain',
            borderRadius: 5,
            marginHorizontal: 10
          },
          source: image_uri
        }), _react.default.createElement(_reactNative.View, {
          style: styles.deviceContent
        }, _react.default.createElement(_reactNative.View, {
          style: styles.deviceContentRowParentView
        }, _react.default.createElement(_reactNative.View, {
          style: styles.deviceContentRowTopView
        }, _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: styles.deviceNameTextMax
        }, status))), _react.default.createElement(_reactNative.View, {
          style: styles.deviceContentRowTopView
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.deviceConnectTypeText
        }, "IP\u5730\u5740:", _react.default.createElement(_reactNative.Text, {
          style: styles.deviceConnectTypeText
        }, item.ip))), _react.default.createElement(_reactNative.View, {
          style: styles.deviceContentRowTopView
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.deviceConnectTypeText
        }, "Mac\u5730\u5740:", _react.default.createElement(_reactNative.Text, {
          style: styles.deviceConnectTypeText
        }, item.wanmac)))))), _react.default.createElement(_reactNative.View, {
          style: {
            marginTop: 10
          }
        }, _react.default.createElement(_ListItem.ListItem, {
          title: '上级节点',
          titleStyle: styles.deviceNameTextMax,
          subtitle: _MeshHelper.default.getUpnode(item, this.props.navigation.state.params.data),
          subtitleStyle: styles.deviceConnectTypeText,
          showDot: false,
          hideArrow: true
        }), !isCap ? _react.default.createElement(_ListItem.ListItem, {
          title: '与上级节点连接方式',
          titleStyle: styles.deviceNameTextMax,
          subtitle: _MeshHelper.default.CheckWhichConnet(item),
          subtitleStyle: styles.deviceConnectTypeText,
          showDot: false,
          hideArrow: true
        }) : null, !isCap ? _react.default.createElement(_ListItem.ListItem, {
          title: '与上级节点连接质量',
          titleStyle: styles.deviceNameTextMax,
          subtitle: _react.default.createElement(_reactNative.Text, null, _MeshHelper.default.getBackHaulsQaString(item), "  ", _react.default.createElement(_reactNative.Text, {
            style: {
              color: '#ff0101',
              fontWeight: 'bold'
            }
          }, _MeshHelper.default.getBackHaulsTip(item))),
          subtitleStyle: styles.deviceConnectTypeText,
          showDot: false,
          hideArrow: true
        }) : null), _react.default.createElement(_reactNative.View, {
          style: {
            marginBottom: 100
          }
        }, _react.default.createElement(_ListItem.ListItem, {
          title: '重启',
          titleStyle: styles.deviceNameTextMax,
          showDot: false,
          hideArrow: false,
          disabled: !_MeshHelper.default.getMeshIsOnLine(item),
          onPress: function onPress() {
            _this5.setState({
              restartVisbale: true
            });
          }
        })), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.restartVisbale,
          showTitle: true,
          title: '重启Mesh路由会导致以下结果',
          canDismiss: false,
          buttons: [{
            text: '取消',
            style: {
              color: '#4C4C4C'
            },
            callback: function callback(_) {
              return _this5.setState({
                restartVisbale: false
              });
            }
          }, {
            text: '立即重启',
            style: {
              color: '#F43F31'
            },
            callback: function callback(_) {
              _this5.setState({
                restartVisbale: false,
                rebootAlertVisible: true
              });
            }
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.messageContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.message
        }, '1.短暂减少无线服务的覆盖范围\n2.短暂导致网络接入不稳\n3.管理Mesh路由时可能会短暂超时'))), _react.default.createElement(_ui.SingleChoseDialog, {
          title: '选择路由器使用位置',
          dataSource: this.state.localeDataSource,
          cancel: '取消',
          confirm: '确定',
          cancelable: false,
          timeout: 0,
          check: this.state.checkLocale,
          onCancel: function onCancel(e) {
            _this5.setState({
              edit_dialog_visbale: false
            });
          },
          onConfirm: function onConfirm(e) {
            _this5._SetLocate(e);

            _this5.setState({
              edit_dialog_visbale: false
            });
          },
          onCheck: function onCheck(e) {
            _this5.setState({
              checkLocale: e.position
            });
          },
          visible: this.state.edit_dialog_visbale
        }), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.rebootAlertVisible,
          showTitle: true,
          title: dialogButtonName[2],
          canDismiss: false,
          buttons: [{
            text: dialogButtonName[1],
            style: {
              color: '#4C4C4C'
            },
            callback: function callback(_) {
              _this5.setState({
                rebootAlertVisible: false
              });
            }
          }, {
            text: dialogButtonName[0],
            style: {
              color: '#F43F31'
            },
            callback: function callback(_) {
              _this5.setState({
                loading: true
              });

              _this5._restart_router();
            }
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.messageContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.message2
        }, dialogTip))), _react.default.createElement(_ui.LoadingDialog, {
          visible: this.state.loading,
          message: _RouterLocalizedStringUtil.localStrings.waitingLoading
        }))), !isCap ? _react.default.createElement(_MeshDel.default, {
          navigation: this.props.navigation,
          item: item
        }) : null);
      }
    }]);
    return MeshContentDetails;
  }(_react.default.Component);

  exports.default = MeshContentDetails;

  MeshContentDetails.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: null
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      flex: 1
    },
    item: {
      backgroundColor: '#fff',
      padding: 5
    },
    itemHeaderParents: {
      height: _Devices.ScreenH / 3,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-between'
    },
    itemHeader: {
      height: 120,
      flexDirection: 'row',
      alignItems: 'center'
    },
    deviceNameTextMax: {
      maxWidth: _Devices.ScreenW / 2,
      alignSelf: 'center',
      fontSize: 15,
      fontWeight: 'bold',
      color: '#333333'
    },
    deviceConnectTypeText: {
      fontSize: 13,
      color: '#7F7F7F'
    },
    deviceContent: {
      marginLeft: 30,
      justifyContent: 'center',
      height: 90
    },
    deviceContentRowTopView: {
      flexDirection: 'row',
      alignItems: 'center',
      marginVertical: 5
    },
    deviceContentRowParentView: {
      flexDirection: 'row'
    },
    deviceContentColumView: {
      flexDirection: 'column',
      alignItems: 'flex-start'
    },
    rkbuttonItem: {
      alignItems: 'center',
      padding: 20,
      position: 'absolute',
      alignItems: 'center',
      bottom: 10,
      left: 6,
      right: 6
    },
    message: {
      textAlign: 'left',
      color: '#333',
      fontSize: 14
    },
    message2: {
      textAlign: 'left',
      color: '#333',
      fontSize: 14,
      marginHorizontal: 20
    },
    messageContainer: {
      backgroundColor: '#fff',
      flex: 1,
      alignItems: 'center',
      justifyContent: 'center',
      marginBottom: 20
    }
  });
},10817,[14305,14320,14323,14371,14377,14386,10297,10033,10338,10067,10284,10935,10074,10055,10190,10064,10241,10755,10230,10040,10820,10076]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _miot = _$$_REQUIRE(_dependencyMap[9]);

  var _device = _$$_REQUIRE(_dependencyMap[10]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[11]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[12]);

  var _Devices = _$$_REQUIRE(_dependencyMap[13]);

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[14]);

  var _ui = _$$_REQUIRE(_dependencyMap[15]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var MeshDel = function (_React$Component) {
    (0, _inherits2.default)(MeshDel, _React$Component);

    function MeshDel(props) {
      var _this;

      (0, _classCallCheck2.default)(this, MeshDel);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MeshDel).call(this, props));

      _this._DelRouter = function () {
        _this.setState({
          loading: true,
          removeRouterVisvale: false
        });

        var api = _API.default.dismissChildMesh;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var paramsDic = {
          method: 'POST',
          params: {
            deviceId: _this.state.item.devid,
            status: _this.state.item.status,
            masterDeviceId: deviceId
          }
        };

        _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
          _this.setState({
            loading: false
          });

          if (res.code == 0) {
            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.mesh_device_finish_delete);

            _this.props.navigation.popToTop();
          } else {
            _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.mesh_device_err_delete);
          }
        }).catch(function (e) {
          _this.setState({
            loading: false
          });

          _CommonUtils.default.ShowToastBottom(_RouterLocalizedStringUtil.localStrings.mesh_device_err_delete);
        });
      };

      _this.state = {
        removeRouterVisvale: false,
        loading: false,
        item: {}
      };
      return _this;
    }

    (0, _createClass2.default)(MeshDel, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.rkbuttonItem
        }, _react.default.createElement(_reactNativeUiKitten.RkButton, {
          onPress: function onPress() {
            _this2.setState({
              item: _this2.props.item,
              removeRouterVisvale: true
            });
          },
          rkType: "rounded",
          disabled: this.state.confirmDisabled,
          style: styles.viewRkButton
        }, '删除设备'), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.removeRouterVisvale,
          showTitle: true,
          title: '删除Mesh路由会导致以下结果',
          canDismiss: false,
          buttons: [{
            text: '取消',
            style: {
              color: '#4C4C4C'
            },
            callback: function callback(_) {
              return _this2.setState({
                removeRouterVisvale: false
              });
            }
          }, {
            text: '立即删除',
            style: {
              color: '#F43F31'
            },
            callback: function callback(_) {
              return _this2._DelRouter();
            }
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.messageContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.message
        }, '1.减少无线服务的覆盖范围\n2.短暂导致网络接入不稳\n3.无法继续管理此Mesh路由\n4.此Mesh路由会重启并恢复到出厂状态'))), _react.default.createElement(_ui.LoadingDialog, {
          visible: this.state.loading,
          message: _RouterLocalizedStringUtil.localStrings.waitingLoading
        }));
      }
    }]);
    return MeshDel;
  }(_react.default.Component);

  exports.default = MeshDel;
  MeshDel.propTypes = {
    item: _propTypes.default.object
  };

  MeshDel.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: null
    };
  };

  var styles = _reactNative.StyleSheet.create({
    rkbuttonItem: {
      alignItems: 'center',
      padding: 20,
      position: 'absolute',
      alignItems: 'center',
      bottom: 10,
      left: 6,
      right: 6,
      backgroundColor: '#FFF'
    },
    viewRkButton: {
      width: _Devices.ScreenW / 10 * 8
    },
    message: {
      textAlign: 'left',
      color: '#333',
      fontSize: 14
    },
    messageContainer: {
      backgroundColor: '#fff',
      flex: 1,
      alignItems: 'center',
      justifyContent: 'center',
      marginBottom: 20
    }
  });
},10820,[14305,14320,14323,14371,14377,14386,10297,10033,10064,10074,10935,11251,10755,10067,10055,10230,10040,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _miot = _$$_REQUIRE(_dependencyMap[7]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _Devices = _$$_REQUIRE(_dependencyMap[9]);

  var _tr = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _RouterInfoHelper = _$$_REQUIRE(_dependencyMap[13]);

  var SearchState = {
    Searching: 0,
    Search_Success: 1,
    Search_Fail: 2
  };

  var MeshSearchChild = function (_React$Component) {
    (0, _inherits2.default)(MeshSearchChild, _React$Component);

    function MeshSearchChild(props) {
      var _this;

      (0, _classCallCheck2.default)(this, MeshSearchChild);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MeshSearchChild).call(this, props));

      _this.rotationHanlder = function () {
        _this.rotateValue.setValue(0);

        _reactNative.Animated.timing(_this.rotateValue, {
          toValue: 1,
          duration: _this.timeInterval,
          easing: _reactNative.Easing.linear
        }).start(function () {
          _this.rotationHanlder();
        });
      };

      _this.listItem = function (item) {
        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.listItemContainer,
          onPress: function onPress() {
            _this.props.navigation.navigate('AddMeshSelectLocate', {
              item: item
            });
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.listItemContent
        }, _react.default.createElement(_reactNative.View, {
          style: styles.listItemLeft
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.listItemIcon,
          source: _RouterInfoHelper.MeshRouterInfoManager.getChildMeshIcon(item, true)
        })), _react.default.createElement(_reactNative.View, {
          style: styles.listItemTextContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.listItemTitle
        }, item.ssid), item.rssi < -65 ? _react.default.createElement(_reactNative.Text, {
          style: styles.listItemSubtitle
        }, '信号弱,请靠近主路由') : null), _react.default.createElement(_reactNative.View, {
          style: styles.listItemRight
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.listItemSiginal,
          source: _RouterInfoHelper.MeshRouterInfoManager.getSignalIcon(item)
        }), _react.default.createElement(_reactNative.Image, {
          style: styles.listItemIndicatior,
          source: _$$_REQUIRE(_dependencyMap[14])
        }))), _react.default.createElement(_reactNative.View, {
          style: styles.separator
        }));
      };

      _this.searchChildTipsCallback = function () {
        _this.setState({
          pageState: SearchState.Searching,
          childList: []
        });

        _this.startSearchChild();
      };

      _this.state = {
        pageState: SearchState.Searching,
        childList: [1, 2]
      };
      _this.rotateValue = new _reactNative.Animated.Value(0);
      _this.deviceId = _miot.Device.deviceID.replace('miwifi.', '');
      _this.timeInterval = 1000;
      _this.Api = _API.default.mesh.search_child.remote;
      return _this;
    }

    (0, _createClass2.default)(MeshSearchChild, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.rotationHanlder();
        this.startSearchChild();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.rotateValue.stopAnimation(function (_) {});
      }
    }, {
      key: "startSearchChild",
      value: function startSearchChild() {
        var _this2 = this;

        var paramsDic = {
          method: 'GET',
          params: {
            deviceId: _miot.Device.deviceID.replace('miwifi.', '')
          }
        };

        _miot.Service.callSmartHomeAPI(this.Api, paramsDic).then(function (res) {
          if (res.code === 0) {
            if (_CommonUtils.default.isObjectKindofArray(res.list) && !_CommonUtils.default.arrayIsEmpty(res.list)) {
              _this2.setState({
                pageState: SearchState.Search_Success,
                childList: res.list
              });
            } else {
              _this2.setState({
                pageState: SearchState.Search_Fail,
                childList: []
              });
            }
          } else {
            _this2.setState({
              pageState: SearchState.Search_Fail,
              childList: []
            });
          }
        }).catch(function (error) {
          _this2.setState({
            pageState: SearchState.Search_Fail,
            childList: []
          });
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var spin = this.rotateValue.interpolate({
          inputRange: [0, 1],
          outputRange: ['0deg', '360deg']
        });
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, this.currentTitle())), this.state.pageState === SearchState.Searching ? _react.default.createElement(_reactNative.View, {
          style: styles.searchContainer
        }, _react.default.createElement(_reactNative.Animated.Image, {
          style: [styles.searchIcon, {
            transform: [{
              rotate: spin
            }]
          }],
          source: _$$_REQUIRE(_dependencyMap[15])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.searchTitle
        }, '正在搜索...')) : null, this.state.pageState === SearchState.Search_Fail ? _react.default.createElement(_reactNative.View, {
          style: styles.failContainer
        }, _react.default.createElement(_reactNative.View, {
          style: styles.failContent
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.failIcon,
          source: _$$_REQUIRE(_dependencyMap[16])
        }), _react.default.createElement(_reactNative.Text, {
          style: {
            width: _Devices.ScreenW - 40,
            paddingTop: 20,
            fontSize: 13,
            lineHeight: 20
          }
        }, '1，搜索并添加Mesh节点时，请先到WiFi设置页面，开启所有WiFi频段。', _react.default.createElement(_reactNative.Text, {
          style: {
            color: '#2c7dfa',
            paddingLeft: 15
          },
          onPress: function onPress(_) {
            _this3.props.navigation.navigate('RouterSetWifiAndNetmode');
          },
          iossuppressHighlighting: true
        }, '去开启')), _react.default.createElement(_reactNative.Text, {
          style: {
            width: _Devices.ScreenW - 40,
            fontSize: 13,
            lineHeight: 20
          }
        }, '2，确认要添加的路由器支持Mesh功能；\n3，将要添加的Mesh节点路由升级至最新版本；\n4，将要添加的Mesh节点路由靠近主Mesh路由器；\n5，将要添加的Mesh节点路由上电；\n6，长按Reset按键恢复至出厂状态后重试。')), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: {
            paddingTop: 20
          },
          onPress: function onPress() {
            _this3.props.navigation.navigate('MpkWebPage', {
              title: '',
              url: 'http://www1.miwifi.com/mesh_help/'
            });
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            color: '#2c7dfa',
            fontSize: 15,
            textAlign: 'left'
          }
        }, '常见问题'))) : null, this.state.pageState === SearchState.Search_Success ? _react.default.createElement(_reactNative.View, {
          style: styles.successContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.listHeader
        }, '可扩展的Mesh网络列表'), _react.default.createElement(_reactNative.FlatList, {
          style: {
            marginLeft: 10,
            flexGrow: 0
          },
          data: this.state.childList,
          renderItem: function renderItem(_ref) {
            var item = _ref.item;
            return _this3.listItem(item);
          }
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: {
            marginLeft: 20,
            paddingTop: 20,
            paddingBottom: 15
          },
          onPress: function onPress() {
            _this3.props.navigation.navigate('MeshSearchChildTips', {
              callback: _this3.searchChildTipsCallback
            });
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            color: '#2c7dfa',
            fontSize: 15,
            textAlign: 'left'
          }
        }, '未找到要添加的Mesh节点路由'))) : null, this.shouldShowBottomButton() ? _react.default.createElement(_reactNative.View, {
          style: styles.bottomContainer
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: this.isSearching() ? styles.cancel : styles.retry,
          onPress: function onPress() {
            if (_this3.isSearching()) {
              _this3.props.navigation.goBack();
            } else {
              _this3.setState({
                pageState: SearchState.Searching,
                childList: []
              });

              _this3.startSearchChild();
            }
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: this.isSearching() ? styles.cancelTitle : styles.retryTitle
        }, this.isSearching() ? '取消' : '重试'))) : null);
      }
    }, {
      key: "shouldShowBottomButton",
      value: function shouldShowBottomButton() {
        if (this.state.pageState === SearchState.Searching || this.state.pageState === SearchState.Search_Fail) {
          return true;
        } else {
          return false;
        }
      }
    }, {
      key: "isSearching",
      value: function isSearching() {
        return this.state.pageState === SearchState.Searching;
      }
    }, {
      key: "currentTitle",
      value: function currentTitle() {
        if (this.state.pageState === SearchState.Searching) {
          return '搜索Mesh节点路由';
        } else if (this.state.pageState === SearchState.Search_Fail) {
          return '未找到可用的Mesh节点路由';
        } else {
          return '选择Mesh节点路由';
        }
      }
    }]);
    return MeshSearchChild;
  }(_react.default.Component);

  exports.default = MeshSearchChild;
  var isiPhoneX = false;

  if (_Devices.ios && (_Devices.ScreenH === 812 || _Devices.ScreenH === 896)) {
    isiPhoneX = true;
  }

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      flexDirection: 'column',
      backgroundColor: '#fff',
      flexWrap: 'wrap'
    },
    titleContainer: {
      backgroundColor: '#fff',
      marginLeft: 15,
      justifyContent: 'center',
      marginTop: 10,
      height: 60,
      width: _Devices.ScreenW - 30
    },
    title: {
      position: 'absolute',
      color: '#000',
      fontSize: 20,
      textAlign: 'left',
      fontWeight: 'bold',
      top: 20,
      width: _Devices.ScreenW - 30
    },
    searchContainer: {
      position: "absolute",
      top: _Devices.ScreenH * 0.5 - 150,
      left: _Devices.ScreenW * 0.5 - 60,
      alignItems: 'center',
      flexDirection: 'column'
    },
    searchIcon: {
      width: 120,
      height: 120,
      resizeMode: 'contain'
    },
    searchTitle: {
      fontSize: 14,
      color: '#000',
      textAlign: 'center',
      paddingTop: 20
    },
    failContainer: {
      paddingTop: 20,
      paddingLeft: 20,
      paddingRight: 20,
      flexDirection: 'column'
    },
    failContent: {
      flexDirection: 'column',
      alignItems: 'center'
    },
    failIcon: {
      width: 120,
      height: 120,
      resizeMode: 'contain'
    },
    successContainer: {
      paddingTop: 20,
      flexDirection: 'column',
      flex: 1
    },
    listHeader: {
      marginLeft: 16
    },
    listbottom: {},
    bottomContainer: {
      position: "absolute",
      bottom: isiPhoneX ? 34 : 10,
      alignItems: 'center',
      justifyContent: 'center',
      height: 60,
      left: 24
    },
    retry: {
      marginTop: 15,
      width: _Devices.ScreenW - 48,
      height: 46,
      backgroundColor: '#2c7DFA',
      borderRadius: 23,
      alignItems: 'center',
      justifyContent: 'center'
    },
    retryTitle: {
      fontSize: 16,
      color: '#fff',
      fontWeight: 'bold'
    },
    cancel: {
      marginTop: 15,
      width: _Devices.ScreenW - 48,
      height: 46,
      backgroundColor: '#fff',
      borderRadius: 23,
      alignItems: 'center',
      justifyContent: 'center',
      borderWidth: 0.5,
      borderColor: '#2c7dfa'
    },
    cancelTitle: {
      fontSize: 16,
      color: '#2c7dfa'
    },
    listItemContainer: {
      width: _Devices.ScreenW,
      backgroundColor: '#fff',
      flexDirection: 'column'
    },
    listItemContent: {
      flexDirection: 'row',
      paddingBottom: 10,
      alignItems: 'center',
      flexWrap: 'wrap'
    },
    separator: {
      left: 80,
      backgroundColor: '#ddd',
      width: _Devices.ScreenW - 120,
      height: 0.5
    },
    listItemLeft: {
      paddingTop: 10
    },
    listItemIcon: {
      width: 60,
      height: 60,
      resizeMode: 'contain'
    },
    listItemTextContainer: {
      paddingLeft: 20,
      flexDirection: 'column',
      width: _Devices.ScreenW - 140
    },
    listItemTitle: {
      textAlign: 'left',
      fontSize: 16,
      fontWeight: 'bold',
      paddingBottom: 10,
      paddingTop: 10
    },
    listItemSubtitle: {
      textAlign: 'left',
      color: 'red',
      fontSize: 12
    },
    listItemRight: {
      flexDirection: 'row',
      width: 45
    },
    listItemSiginal: {
      marginLeft: 5,
      width: 18,
      height: 14,
      resizeMode: 'contain'
    },
    listItemIndicatior: {
      marginLeft: 10,
      width: 7,
      height: 14,
      resizeMode: 'contain'
    }
  });
},10823,[14305,14320,14323,14371,14377,14386,10297,10074,10033,10067,10968,10064,10040,10076,10220,10826,10829]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 339,
    "height": 339,
    "scales": [1],
    "hash": "caa9e4bf8db9a4eb06af84d02317efb8",
    "name": "mesh_searching",
    "type": "png"
  });
},10826,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 367,
    "height": 367,
    "scales": [1],
    "hash": "e35a01b123e0247fc7af2f769a85c9bd",
    "name": "mesh_search_fail",
    "type": "png"
  });
},10829,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _Devices = _$$_REQUIRE(_dependencyMap[8]);

  var MeshSearchChildTips = function (_React$Component) {
    (0, _inherits2.default)(MeshSearchChildTips, _React$Component);

    function MeshSearchChildTips(props) {
      var _this;

      (0, _classCallCheck2.default)(this, MeshSearchChildTips);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MeshSearchChildTips).call(this, props));
      _this.callback = props.navigation.state.params.callback;
      return _this;
    }

    (0, _createClass2.default)(MeshSearchChildTips, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.failContainer
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, '未找到可用的Mesh节点路由')), _react.default.createElement(_reactNative.View, {
          style: styles.failContent
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.failIcon,
          source: _$$_REQUIRE(_dependencyMap[9])
        }), _react.default.createElement(_reactNative.Text, {
          style: {
            width: _Devices.ScreenW - 40,
            paddingTop: 20,
            fontSize: 13,
            lineHeight: 20
          }
        }, '1，搜索并添加Mesh节点时，请先到WiFi设置页面，开启所有WiFi频段。', _react.default.createElement(_reactNative.Text, {
          style: {
            color: '#2c7dfa',
            paddingLeft: 15
          },
          onPress: function onPress(_) {
            _this2.props.navigation.navigate('RouterSetWifiAndNetmode');
          },
          iossuppressHighlighting: true
        }, '去开启')), _react.default.createElement(_reactNative.Text, {
          style: {
            width: _Devices.ScreenW - 40,
            fontSize: 13,
            lineHeight: 20
          }
        }, '2，确认要添加的路由器支持Mesh功能；\n3，将要添加的Mesh节点路由升级至最新版本；\n4，将要添加的Mesh节点路由靠近主Mesh路由器；\n5，将要添加的Mesh节点路由上电；\n6，长按Reset按键恢复至出厂状态后重试。')), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: {
            paddingTop: 20
          },
          onPress: function onPress() {
            _this2.props.navigation.navigate('MpkWebPage', {
              title: '',
              url: 'http://www1.miwifi.com/mesh_help/'
            });
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            color: '#2c7dfa',
            fontSize: 15,
            textAlign: 'left'
          }
        }, '常见问题'))), _react.default.createElement(_reactNative.View, {
          style: styles.bottomContainer
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.retry,
          onPress: function onPress() {
            _this2.props.navigation.state.params.callback();

            _this2.props.navigation.goBack();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.retryTitle
        }, '重试'))));
      }
    }]);
    return MeshSearchChildTips;
  }(_react.default.Component);

  exports.default = MeshSearchChildTips;
  var isiPhoneX = false;

  if (_Devices.ios && (_Devices.ScreenH === 812 || _Devices.ScreenH === 896)) {
    isiPhoneX = true;
  }

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      flexDirection: 'column',
      backgroundColor: '#fff',
      flexWrap: 'wrap'
    },
    titleContainer: {
      backgroundColor: '#fff',
      marginLeft: 15,
      justifyContent: 'center',
      marginTop: 10,
      height: 60,
      width: _Devices.ScreenW - 30
    },
    title: {
      position: 'absolute',
      color: '#000',
      fontSize: 20,
      textAlign: 'left',
      fontWeight: 'bold',
      top: 20,
      width: _Devices.ScreenW - 30
    },
    failContainer: {
      paddingTop: 20,
      paddingLeft: 20,
      paddingRight: 20,
      flexDirection: 'column'
    },
    failContent: {
      flexDirection: 'column',
      alignItems: 'center'
    },
    failIcon: {
      width: 120,
      height: 120,
      resizeMode: 'contain'
    },
    bottomContainer: {
      position: "absolute",
      bottom: isiPhoneX ? 34 : 10,
      alignItems: 'center',
      justifyContent: 'center',
      height: 60,
      left: 24
    },
    retry: {
      marginTop: 15,
      width: _Devices.ScreenW - 48,
      height: 46,
      backgroundColor: '#2c7DFA',
      borderRadius: 23,
      alignItems: 'center',
      justifyContent: 'center'
    },
    retryTitle: {
      fontSize: 16,
      color: '#fff',
      fontWeight: 'bold'
    }
  });
},10832,[14305,14320,14323,14371,14377,14386,10297,10033,10067,10829]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _Devices = _$$_REQUIRE(_dependencyMap[8]);

  var AddMeshSelectLocate = function (_React$Component) {
    (0, _inherits2.default)(AddMeshSelectLocate, _React$Component);

    function AddMeshSelectLocate(props) {
      var _this;

      (0, _classCallCheck2.default)(this, AddMeshSelectLocate);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AddMeshSelectLocate).call(this, props));

      _this.selectItemHandler = function (item) {
        if (item.selected) {
          return;
        }

        var temItem = item;
        temItem.selected = true;
        var temItems = _this.state.locationList;
        temItems.map(function (originItem) {
          if (item.index === originItem.index) {
            originItem.selected = true;
          } else {
            originItem.selected = false;
          }
        });

        _this.setState({
          selectedIndex: item.index,
          locationList: temItems
        });
      };

      _this.listItem = function (item) {
        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.listItem,
          onPress: function onPress() {
            _this.selectItemHandler(item);
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.itemIconContainer
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.itemIcon,
          source: item.imageName
        })), _react.default.createElement(_reactNative.View, {
          style: styles.itemTextContainer
        }, _react.default.createElement(_reactNative.Text, null, item.name)), item.selected === true ? _react.default.createElement(_reactNative.Image, {
          style: styles.itemSelected,
          source: _$$_REQUIRE(_dependencyMap[9])
        }) : null);
      };

      _this.state = {
        locationList: _this.creatListData(),
        selectedIndex: -1
      };
      _this.item = props.navigation.state.params.item;
      return _this;
    }

    (0, _createClass2.default)(AddMeshSelectLocate, [{
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "creatListData",
      value: function creatListData() {
        var list = [{
          index: 0,
          selected: false,
          name: '客厅',
          imageName: _$$_REQUIRE(_dependencyMap[10])
        }, {
          index: 1,
          selected: false,
          name: '主卧',
          imageName: _$$_REQUIRE(_dependencyMap[11])
        }, {
          index: 2,
          selected: false,
          name: '次卧',
          imageName: _$$_REQUIRE(_dependencyMap[11])
        }, {
          index: 3,
          selected: false,
          name: '餐厅',
          imageName: _$$_REQUIRE(_dependencyMap[12])
        }, {
          index: 4,
          selected: false,
          name: '卫生间',
          imageName: _$$_REQUIRE(_dependencyMap[13])
        }, {
          index: 5,
          selected: false,
          name: '厨房',
          imageName: _$$_REQUIRE(_dependencyMap[14])
        }, {
          index: 6,
          selected: false,
          name: '办公室',
          imageName: _$$_REQUIRE(_dependencyMap[15])
        }, {
          index: 7,
          selected: false,
          name: '书房',
          imageName: _$$_REQUIRE(_dependencyMap[16])
        }, {
          index: 8,
          selected: false,
          name: '地下室',
          imageName: _$$_REQUIRE(_dependencyMap[17])
        }, {
          index: 9,
          selected: false,
          name: '阁楼',
          imageName: _$$_REQUIRE(_dependencyMap[18])
        }, {
          index: 10,
          selected: false,
          name: '阳台',
          imageName: _$$_REQUIRE(_dependencyMap[19])
        }];
        return list;
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, '请选择路由器使用位置')), _react.default.createElement(_reactNative.FlatList, {
          numColumns: 4,
          data: this.state.locationList,
          renderItem: function renderItem(_ref) {
            var item = _ref.item;
            return _this2.listItem(item);
          },
          contentContainerStyle: styles.list
        }), _react.default.createElement(_reactNative.View, {
          style: styles.bottomContainer
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: this.state.selectedIndex === -1 ? styles.nextDiabled : styles.next,
          disabled: this.state.selectedIndex === -1 ? true : false,
          onPress: function onPress() {
            _this2.props.navigation.navigate('MeshExtend', {
              item: _this2.item,
              locate: _this2.getCurrentSelectLocate()
            });
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.nextTitle
        }, '下一步'))));
      }
    }, {
      key: "getCurrentSelectLocate",
      value: function getCurrentSelectLocate() {
        var curItem = this.state.locationList[this.state.selectedIndex];
        return curItem.name;
      }
    }]);
    return AddMeshSelectLocate;
  }(_react.default.Component);

  exports.default = AddMeshSelectLocate;
  var isiPhoneX = false;

  if (_Devices.ios && (_Devices.ScreenH === 812 || _Devices.ScreenH === 896)) {
    isiPhoneX = true;
  }

  var itemWidth = (_Devices.ScreenW - 30) / 4;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      flexDirection: 'column',
      backgroundColor: '#fff',
      flexWrap: 'wrap'
    },
    titleContainer: {
      backgroundColor: '#fff',
      marginLeft: 15,
      justifyContent: 'center',
      marginTop: 10,
      height: 60,
      width: _Devices.ScreenW - 30
    },
    title: {
      position: 'absolute',
      color: '#000',
      fontSize: 20,
      textAlign: 'left',
      fontWeight: 'bold',
      top: 20,
      width: _Devices.ScreenW - 30
    },
    list: {
      flexDirection: 'column',
      paddingTop: 20,
      paddingLeft: 15,
      paddingRight: 15
    },
    listItem: {
      flexDirection: 'column',
      width: itemWidth,
      height: 120
    },
    itemTextContainer: {
      alignItems: 'center',
      justifyContent: 'center'
    },
    itemText: {
      fontSize: 12,
      color: '#000',
      textAlign: 'center'
    },
    itemIconContainer: {
      alignItems: 'center',
      justifyContent: 'center',
      paddingBottom: 10
    },
    itemIcon: {
      width: 60,
      height: 60,
      resizeMode: 'contain'
    },
    itemSelected: {
      position: 'absolute',
      left: itemWidth - 30,
      top: 45,
      width: 20,
      height: 20,
      resizeMode: 'contain'
    },
    bottomContainer: {
      position: "absolute",
      bottom: isiPhoneX ? 34 : 10,
      alignItems: 'center',
      justifyContent: 'center',
      height: 60,
      left: 24
    },
    next: {
      marginTop: 15,
      width: _Devices.ScreenW - 48,
      height: 46,
      backgroundColor: '#2c7DFA',
      borderRadius: 23,
      alignItems: 'center',
      justifyContent: 'center'
    },
    nextDiabled: {
      marginTop: 15,
      width: _Devices.ScreenW - 48,
      height: 46,
      backgroundColor: 'rgba(44,125,250,0.3)',
      borderRadius: 23,
      alignItems: 'center',
      justifyContent: 'center'
    },
    nextTitle: {
      fontSize: 16,
      color: '#fff',
      fontWeight: 'bold'
    }
  });
},10835,[14305,14320,14323,14371,14377,14386,10297,10033,10067,10838,10841,10844,10847,10850,10853,10856,10859,10862,10865,10868]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "70d0a198a1b74b5494b01dffa7ec9fcc",
    "name": "mesh_location_selected",
    "type": "jpg"
  });
},10838,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 180,
    "height": 180,
    "scales": [1],
    "hash": "9217b8d3a2ceca2e16f2e77ae9b5de87",
    "name": "mesh_location_living",
    "type": "png"
  });
},10841,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 180,
    "height": 180,
    "scales": [1],
    "hash": "8babbefa0cf227ce0e8969a747b46b96",
    "name": "mesh_location_bed",
    "type": "png"
  });
},10844,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 180,
    "height": 180,
    "scales": [1],
    "hash": "5d596d13a6333529054d576e0e021ce1",
    "name": "mesh_location_restaurant",
    "type": "png"
  });
},10847,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 180,
    "height": 180,
    "scales": [1],
    "hash": "f2860c49e1fb8b9449f2bc9034aa4c96",
    "name": "mesh_location_toilet",
    "type": "png"
  });
},10850,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 180,
    "height": 180,
    "scales": [1],
    "hash": "4f20944deaad898f08c3e67e2f2bf454",
    "name": "mesh_location_kitchen",
    "type": "png"
  });
},10853,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 180,
    "height": 180,
    "scales": [1],
    "hash": "d447762e168d5876566a775cff447bee",
    "name": "mesh_location_office",
    "type": "png"
  });
},10856,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 180,
    "height": 180,
    "scales": [1],
    "hash": "43091dba84a37dcd9645ae2b12595515",
    "name": "mesh_location_study",
    "type": "png"
  });
},10859,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 180,
    "height": 180,
    "scales": [1],
    "hash": "54acf990d324981203b794dff538db3d",
    "name": "mesh_location_basement",
    "type": "png"
  });
},10862,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 180,
    "height": 180,
    "scales": [1],
    "hash": "de348ee1dc1234d7ae1afc9431869c4f",
    "name": "mesh_location_loft",
    "type": "png"
  });
},10865,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 180,
    "height": 180,
    "scales": [1],
    "hash": "d9503c2aa8fdb38a5f1a3de84f48b205",
    "name": "mesh_location_balcony",
    "type": "png"
  });
},10868,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNativeLinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Devices = _$$_REQUIRE(_dependencyMap[10]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _miot = _$$_REQUIRE(_dependencyMap[12]);

  var _RouterInfoHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _Service = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var ExtendState = {
    Default: -1,
    Connecting: 0,
    Configuring: 1,
    Extending: 2,
    Success: 3,
    Fail: 4
  };

  var MeshExtend = function (_React$Component) {
    (0, _inherits2.default)(MeshExtend, _React$Component);

    function MeshExtend(props) {
      var _this;

      (0, _classCallCheck2.default)(this, MeshExtend);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MeshExtend).call(this, props));

      _this.rotationHanlder = function () {
        _this.rotateValue.setValue(0);

        _reactNative.Animated.timing(_this.rotateValue, {
          toValue: 1,
          duration: _this.timeInterval,
          easing: _reactNative.Easing.linear
        }).start(function () {
          _this.rotationHanlder();
        });
      };

      _this.callbackHandler = function () {
        _this.rotationHanlder();

        _this.startExtendMesh();

        _this.setState({
          extendingState: ExtendState.Connecting
        });
      };

      _this.state = {
        extendingState: ExtendState.Connecting
      };
      _this.item = props.navigation.state.params.item;
      _this.locate = props.navigation.state.params.locate;
      _this.rotateValue = new _reactNative.Animated.Value(0);
      _this.timeInterval = 1000;
      _this.startApi = _API.default.mesh.start_extend_mesh.remote;
      _this.checkStatusApi = _API.default.mesh.extend_mesh_status.remote;
      return _this;
    }

    (0, _createClass2.default)(MeshExtend, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.rotationHanlder();
        this.startExtendMesh();
        this.setState({
          extendingState: ExtendState.Connecting
        });
      }
    }, {
      key: "componentWillMount",
      value: function componentWillMount() {
        this.stopProcessAnimation();
        clearTimeout(this.timer);
      }
    }, {
      key: "stopProcessAnimation",
      value: function stopProcessAnimation() {
        this.rotateValue.stopAnimation(function (_) {});
      }
    }, {
      key: "startExtendMesh",
      value: function startExtendMesh() {
        var _this2 = this;

        var paramsDic = {
          method: 'POST',
          params: {
            deviceId: _miot.Device.deviceID.replace('miwifi.', ''),
            mac: this.item.mac,
            locate: this.locate
          }
        };

        _Service.default.callSmartHomeAPI(this.startApi, paramsDic).then(function (res) {
          if (res.code === 0) {
            _this2.setState({
              extendingState: ExtendState.Connecting
            });

            _this2.checkExtendStatus();
          } else {
            _this2.gotoFailPage();
          }
        }).catch(function (error) {
          _this2.gotoFailPage();
        });
      }
    }, {
      key: "checkExtendStatusWithDelay",
      value: function checkExtendStatusWithDelay(delay) {
        var _this3 = this;

        this.timer = setTimeout(function () {
          _this3.checkExtendStatus();
        }, delay);
      }
    }, {
      key: "checkExtendStatus",
      value: function checkExtendStatus() {
        var _this4 = this;

        var paramsDic = {
          method: 'POST',
          params: {
            deviceId: _miot.Device.deviceID.replace('miwifi.', ''),
            mac: this.item.mac
          }
        };

        _Service.default.callSmartHomeAPI(this.checkStatusApi, paramsDic).then(function (res) {
          if (res.code === 0) {
            _this4.handleStatus(res);
          } else {
            _this4.checkExtendStatus();
          }
        }).catch(function (error) {
          _this4.checkExtendStatus();
        });
      }
    }, {
      key: "handleStatus",
      value: function handleStatus(res) {
        if (res.status === 0) {
          this.gotoSuccessPage();
        } else if (res.status === 4) {
          this.gotoFailPage();
        } else {
          var nextDelay = 0;

          if (this.state.extendingState === ExtendState.Connecting) {
            nextDelay = 5000;
          } else if (this.state.extendingState === ExtendState.Configuring) {
            nextDelay = 5000;
          } else {
            nextDelay = 10000;
          }

          if (res.status === 1) {
            this.setState({
              extendingState: ExtendState.Connecting
            });
          } else if (res.status === 2) {
            this.setState({
              extendingState: ExtendState.Configuring
            });
          } else if (res.status === 3) {
            this.setState({
              extendingState: ExtendState.Extending
            });
          } else {
            nextDelay = 0;
          }

          this.checkExtendStatusWithDelay(nextDelay);
        }
      }
    }, {
      key: "gotoFailPage",
      value: function gotoFailPage() {
        this.setState({
          extendingState: ExtendState.Fail
        });
        this.stopProcessAnimation();
        this.props.navigation.navigate('MeshExtendResult', {
          callback: this.callbackHandler,
          isSuccess: false
        });
      }
    }, {
      key: "gotoSuccessPage",
      value: function gotoSuccessPage() {
        this.setState({
          extendingState: ExtendState.Success
        });
        this.stopProcessAnimation();
        this.props.navigation.navigate('MeshExtendResult', {
          isSuccess: true
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this5 = this;

        var processTitles = ['连接Mesh节点路由', '同步Mesh网络配置', '扩展Mesh网络（1-2分钟）'];
        var spin = this.rotateValue.interpolate({
          inputRange: [0, 1],
          outputRange: ['0deg', '360deg']
        });
        return _react.default.createElement(_reactNative.View, {
          style: styles.wraper
        }, _react.default.createElement(_reactNativeLinearGradient.default, {
          style: styles.mainBg,
          start: {
            x: 0.5,
            y: 1
          },
          end: {
            x: 0.5,
            y: 0
          },
          colors: ['rgba(44,125,250,0.15)', 'rgba(44,125,250,0.3)']
        }, _react.default.createElement(_TitleBar.default, {
          type: "dark",
          style: {
            backgroundColor: 'transparent'
          },
          title: '',
          onPressLeft: function onPressLeft(_) {
            _this5.props.navigation.goBack();
          }
        }), _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, '正在扩展Mesh网络')), _react.default.createElement(_reactNative.View, {
          style: styles.iconContainer
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _RouterInfoHelper.MeshRouterInfoManager.getChildMeshIcon(this.item, false)
        })), _react.default.createElement(_reactNative.View, {
          style: styles.bottomContainer
        }, _react.default.createElement(_reactNative.View, {
          style: styles.bottomList
        }, _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.itemText
        }, processTitles[0]), this.isProcessStateAnimated(0) === 'animated' ? _react.default.createElement(_reactNative.Animated.Image, {
          style: [styles.itemAnimated, {
            transform: [{
              rotate: spin
            }]
          }],
          source: _$$_REQUIRE(_dependencyMap[15])
        }) : null, this.isProcessStateAnimated(0) === 'done' ? _react.default.createElement(_reactNative.Image, {
          style: styles.itemIcon,
          source: _$$_REQUIRE(_dependencyMap[16])
        }) : null), _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.itemText
        }, processTitles[1]), this.isProcessStateAnimated(1) === 'animated' ? _react.default.createElement(_reactNative.Animated.Image, {
          style: [styles.itemAnimated, {
            transform: [{
              rotate: spin
            }]
          }],
          source: _$$_REQUIRE(_dependencyMap[15])
        }) : null, this.isProcessStateAnimated(1) === 'done' ? _react.default.createElement(_reactNative.Image, {
          style: styles.itemIcon,
          source: _$$_REQUIRE(_dependencyMap[16])
        }) : null), _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.itemText
        }, processTitles[2]), this.isProcessStateAnimated(2) === 'animated' ? _react.default.createElement(_reactNative.Animated.Image, {
          style: [styles.itemAnimated, {
            transform: [{
              rotate: spin
            }]
          }],
          source: _$$_REQUIRE(_dependencyMap[15])
        }) : null, this.isProcessStateAnimated(2) === 'done' ? _react.default.createElement(_reactNative.Image, {
          style: styles.itemIcon,
          source: _$$_REQUIRE(_dependencyMap[16])
        }) : null)))));
      }
    }, {
      key: "isProcessStateAnimated",
      value: function isProcessStateAnimated(index) {
        var result = 'hidden';

        if (this.state.extendingState >= 0 && this.state.extendingState <= 2) {
          if (this.state.extendingState > index) {
            result = 'done';
          } else if (this.state.extendingState === index) {
            result = 'animated';
          } else {
            result = 'hidden';
          }
        } else {
          if (this.state.extendingState === ExtendState.Success) {
            result = 'done';
          } else {
            result = 'hidden';
          }
        }

        return result;
      }
    }]);
    return MeshExtend;
  }(_react.default.Component);

  exports.default = MeshExtend;

  MeshExtend.navigationOptions = function () {
    return {
      header: null
    };
  };

  var isiPhoneX = false;

  if (_Devices.ios && (_Devices.ScreenH === 812 || _Devices.ScreenH === 896)) {
    isiPhoneX = true;
  }

  var iconWidth = 220;

  if (_Devices.ScreenH < 667) {
    iconWidth = 180;
  }

  var styles = _reactNative.StyleSheet.create({
    wraper: {},
    mainBg: {
      resizeMode: 'cover',
      height: '100%',
      flexDirection: 'column'
    },
    titleContainer: {
      marginLeft: 15,
      justifyContent: 'center',
      height: 60,
      width: _Devices.ScreenW - 30
    },
    title: {
      position: 'absolute',
      color: '#fff',
      fontSize: 20,
      textAlign: 'left',
      fontWeight: 'bold',
      top: 10,
      width: _Devices.ScreenW - 30
    },
    iconContainer: {
      alignItems: 'center',
      paddingTop: _Devices.ScreenH < 667 ? 10 : 20
    },
    icon: {
      width: iconWidth,
      height: iconWidth,
      resizeMode: 'contain'
    },
    bottomContainer: {
      position: 'absolute',
      left: 15,
      right: 15,
      bottom: isiPhoneX ? 44 : 20,
      backgroundColor: '#fff',
      borderRadius: 28,
      height: 200
    },
    bottomList: {
      paddingTop: 10,
      paddingBottom: 10,
      paddingLeft: 10,
      paddingRight: 10,
      alignItems: 'center',
      flexDirection: 'column'
    },
    item: {
      flexDirection: 'row',
      height: 60,
      width: _Devices.ScreenW - 50,
      alignItems: 'center'
    },
    itemIcon: {
      width: 21,
      height: 21,
      resizeMode: 'contain'
    },
    itemText: {
      paddingLeft: 10,
      width: _Devices.ScreenW - 80,
      fontSize: 17,
      color: '#000'
    },
    itemAnimated: {
      width: 21,
      height: 21,
      resizeMode: 'contain'
    }
  });
},10871,[14305,14320,14323,14371,14377,14386,10297,14299,10033,10284,10067,10064,10074,10076,10062,10451,10454]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _Devices = _$$_REQUIRE(_dependencyMap[8]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _miot = _$$_REQUIRE(_dependencyMap[11]);

  var _device = _$$_REQUIRE(_dependencyMap[12]);

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var MeshExtendResult = function (_React$Component) {
    (0, _inherits2.default)(MeshExtendResult, _React$Component);

    function MeshExtendResult(props) {
      var _this;

      (0, _classCallCheck2.default)(this, MeshExtendResult);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MeshExtendResult).call(this, props));
      _this.state = {
        ssid: '',
        fiveSsid: '',
        gameSsid: '',
        bsd: -1
      };
      _this.isSuccess = props.navigation.state.params.isSuccess;

      if (!_this.isSuccess) {
        _this.callback = props.navigation.state.params.callback;
      }

      _this.wifiInfoApi = _API.default.wifi_setting.wifi_detail_all.remote;
      return _this;
    }

    (0, _createClass2.default)(MeshExtendResult, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (this.isSuccess) {
          if (!_RouterInfoHelper.default.sharedInstance().isMeshMode()) {
            _reactNative.DeviceEventEmitter.emit('RefreshRouterInfoNotification');
          }

          if (_CommonUtils.default.isNull(this.wifiInfo)) {
            this.loadWifiInfo();
          } else {
            this.checkWifiInfo(this.wifiInfo);
          }
        }
      }
    }, {
      key: "checkWifiInfo",
      value: function checkWifiInfo(res) {
        if (res.code === 0 && !_CommonUtils.default.isNull(res.bsd)) {
          this.setState({
            bsd: res.bsd
          });

          if (res.bsd === 1) {
            this.setState({
              ssid: res.info[0]['ssid']
            });
          } else {
            var gameSsid = '';

            if (this.isSupportTrippleBand()) {
              gameSsid = res.info[2]['ssid'];
            }

            this.setState({
              ssid: res.info[0]['ssid'],
              fiveSsid: res.info[1]['ssid'],
              gameSsid: gameSsid
            });
          }
        }
      }
    }, {
      key: "loadWifiInfo",
      value: function loadWifiInfo() {
        var _this2 = this;

        var deviceId = _device.Device.deviceID.replace("miwifi.", "");

        var method = 'GET';
        var paramsDic = {
          method: method,
          params: {
            deviceId: deviceId
          }
        };

        _miot.Service.callSmartHomeAPI(this.wifiInfoApi, paramsDic).then(function (res) {
          if (res.code === 0) {
            _this2.checkWifiInfo(res);
          }
        }).catch(function (error) {});
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, this.isSuccess ? '扩展成功' : 'Mesh网络扩展失败')), _react.default.createElement(_reactNative.View, {
          style: styles.iconContainer
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: this.isSuccess ? _$$_REQUIRE(_dependencyMap[14]) : _$$_REQUIRE(_dependencyMap[15])
        })), !this.isSuccess ? _react.default.createElement(_reactNative.View, {
          style: {
            alignItems: 'center',
            width: _Devices.ScreenW,
            marginTop: 20
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: 12,
            color: '#989898'
          }
        }, '1，将要添加的Mesh节点路由靠近主Mesh路由器；\n2，将要添加的Mesh节点路由恢复出厂后，重试；')) : null, this.isSuccess && this.state.bsd != -1 ? _react.default.createElement(_reactNative.View, {
          style: {
            alignItems: 'center',
            width: _Devices.ScreenW,
            marginTop: 5
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: 17,
            textAlign: 'left',
            color: '#000',
            marginLeft: 20,
            width: _Devices.ScreenW - 40
          }
        }, '恭喜您，WiFi覆盖增强！'), _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: 12,
            color: '#989898',
            textAlign: 'left',
            marginLeft: 20,
            marginTop: 5,
            width: _Devices.ScreenW - 40
          }
        }, '1，将新增Mesh节点路由放置在需要覆盖的地方。\n2，需等待一段时间后，新增路由会出现在管理列表中。\n3，新增Mesh节点路由WiFi信息与之前保持一致！'), _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: 17,
            textAlign: 'left',
            color: '#000',
            marginLeft: 20,
            marginTop: 25,
            width: _Devices.ScreenW - 40
          }
        }, this.getWifiInfoTitle()), _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: 12,
            color: '#989898',
            textAlign: 'left',
            marginLeft: 20,
            marginTop: 5,
            width: _Devices.ScreenW - 40
          }
        }, this.getWifiInfoContent()), !this.isWifiMerged() ? _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: 12,
            color: '#989898',
            fontWeight: 'bold',
            textAlign: 'left',
            marginLeft: 20,
            marginTop: 15,
            width: _Devices.ScreenW - 40
          }
        }, this.getReInfoTips()) : null) : null, _react.default.createElement(_reactNative.View, {
          style: styles.bottomContainer
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: this.isSuccess ? styles.whiteButton : styles.blueButton,
          onPress: function onPress() {
            if (_this3.isSuccess) {
              _reactNative.DeviceEventEmitter.emit('extendSuccessNotification');

              _this3.props.navigation.pop(4);
            } else {
              _this3.props.navigation.state.params.callback();

              _this3.props.navigation.goBack();
            }
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: this.isSuccess ? styles.whiteButtonTitle : styles.blueButtonTitle
        }, this.isSuccess ? '添加新的Mesh节点' : '重试')), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: this.isSuccess ? styles.blueButton : styles.whiteButton,
          onPress: function onPress() {
            _this3.props.navigation.popToTop();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: this.isSuccess ? styles.blueButtonTitle : styles.whiteButtonTitle
        }, '完成'))));
      }
    }, {
      key: "getWifiInfoTitle",
      value: function getWifiInfoTitle() {
        if (this.state.bsd === -1) {
          return '';
        }

        if (this.state.bsd === 1) {
          if (this.isSupportTrippleBand()) {
            return '三频合一Mesh';
          } else {
            return '双频合一Mesh';
          }
        } else {
          if (this.isSupportTrippleBand()) {
            return '三频分离Mesh(主路由器)';
          } else {
            return '双频分离Mesh(主路由器)';
          }
        }
      }
    }, {
      key: "getWifiInfoContent",
      value: function getWifiInfoContent() {
        if (this.state.bsd === -1) {
          return '';
        }

        if (this.state.bsd === 1) {
          if (this.isSupportTrippleBand()) {
            return '三频合一 WiFi：' + this.state.ssid;
          } else {
            return '2.4G/5G Hz WiFi：' + this.state.ssid;
          }
        } else {
          if (this.isSupportTrippleBand()) {
            return '2.4G Hz WiFi:' + this.state.ssid + '\n5G Hz WiFi:' + this.state.fiveSsid + '\n5G Game WiFi:' + this.state.gameSsid;
          } else {
            return '2.4G Hz WiFi:' + this.state.ssid + '\n5G Hz WiFi:' + this.state.fiveSsid;
          }
        }
      }
    }, {
      key: "isWifiMerged",
      value: function isWifiMerged() {
        return this.state.bsd === 1;
      }
    }, {
      key: "getReInfoTips",
      value: function getReInfoTips() {
        if (_RouterInfoHelper.default.sharedInstance().isSupportTriBand()) {
          return '如果扩展Mesh为双频路由器，则扩展Mesh路由器5G频段的SSID和密码与5G Game频段保持一致';
        } else {
          return '如果扩展Mesh路由器支持三频，则扩展Mesh路由器的两个5G SSID和密码会和主Mesh的5G保持一致';
        }
      }
    }, {
      key: "isSupportTrippleBand",
      value: function isSupportTrippleBand() {
        return _device.Device.model.toLowerCase() === 'xiaomi.router.ra70';
      }
    }]);
    return MeshExtendResult;
  }(_react.default.Component);

  exports.default = MeshExtendResult;
  var isiPhoneX = false;

  if (_Devices.ios && (_Devices.ScreenH === 812 || _Devices.ScreenH === 896)) {
    isiPhoneX = true;
  }

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      flexDirection: 'column',
      backgroundColor: '#fff',
      flexWrap: 'wrap'
    },
    titleContainer: {
      backgroundColor: '#fff',
      marginLeft: 15,
      justifyContent: 'center',
      marginTop: 10,
      height: 60,
      width: _Devices.ScreenW - 30
    },
    title: {
      position: 'absolute',
      color: '#000',
      fontSize: 20,
      textAlign: 'left',
      fontWeight: 'bold',
      top: 20,
      width: _Devices.ScreenW - 30
    },
    iconContainer: {
      alignItems: 'center'
    },
    icon: {
      width: _Devices.ScreenW * 0.4,
      height: _Devices.ScreenW * 0.4,
      resizeMode: 'contain'
    },
    bottomContainer: {
      position: "absolute",
      bottom: isiPhoneX ? 34 : 20,
      alignItems: 'center',
      justifyContent: 'center',
      height: 107,
      left: 24
    },
    blueButton: {
      marginTop: 15,
      width: _Devices.ScreenW - 48,
      height: 46,
      backgroundColor: '#2c7DFA',
      borderRadius: 23,
      alignItems: 'center',
      justifyContent: 'center'
    },
    blueButtonTitle: {
      fontSize: 16,
      color: '#fff',
      fontWeight: 'bold',
      width: _Devices.ScreenW - 48,
      textAlign: 'center'
    },
    whiteButton: {
      marginTop: 15,
      width: _Devices.ScreenW - 48,
      height: 46,
      backgroundColor: '#fff',
      borderRadius: 23,
      alignItems: 'center',
      justifyContent: 'center',
      borderWidth: 0.5,
      borderColor: '#2c7dfa'
    },
    whiteButtonTitle: {
      fontSize: 16,
      color: '#2c7dfa',
      width: _Devices.ScreenW - 48,
      textAlign: 'center'
    }
  });
},10874,[14305,14320,14323,14371,14377,14386,10297,10033,10067,10064,10040,10074,10935,10076,10877,10880]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 562,
    "height": 562,
    "scales": [1],
    "hash": "6e1a67f8d08b71c9b7a009955973582a",
    "name": "mesh_extend_success",
    "type": "png"
  });
},10877,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/mesh",
    "width": 562,
    "height": 562,
    "scales": [1],
    "hash": "5597b826a74528246fbb20741def7e30",
    "name": "mesh_extend_fail",
    "type": "png"
  });
},10880,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _device = _$$_REQUIRE(_dependencyMap[9]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _miot = _$$_REQUIRE(_dependencyMap[11]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _UnitTextView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Devices = _$$_REQUIRE(_dependencyMap[15]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[17]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[18]);

  var _RouterInfoHelper = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[19]));

  var _BlackListStatusModel = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _BlackListStausConstant = _$$_REQUIRE(_dependencyMap[21]);

  var _MacAddressManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var BlackListStatus = function (_React$Component) {
    (0, _inherits2.default)(BlackListStatus, _React$Component);

    function BlackListStatus(props) {
      var _this;

      (0, _classCallCheck2.default)(this, BlackListStatus);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BlackListStatus).call(this, props));
      _this.state = {
        data: null,
        switchIsOn: false,
        protectDuration: -1,
        dayNum: -1,
        hourNum: -1,
        minuteNum: -1,
        needRequestData: true,
        showLoading: false,
        showSwitchChangeText: false,
        showModeChoice: false,
        showLevelChoice: false,
        modeSelectIndex: [0],
        levelSelectIndex: [0]
      };
      _this.statusApi = _API.default.arn.black_list_status.remote;
      _this.protectStatusApi = _API.default.arn.protect_status.remote;
      _this.changeSwitchApi = _API.default.arn.changeSwitch.remote;
      _this.modeArr = [{
        title: _BlackListStausConstant.BlackListMode.BlackList.title,
        subtitle: _BlackListStausConstant.BlackListMode.BlackList.secLevelText
      }, {
        title: _BlackListStausConstant.BlackListMode.WhiteList.title,
        subtitle: _BlackListStausConstant.BlackListMode.WhiteList.secLevelText
      }];
      _this.secLevelArr = [{
        title: _BlackListStausConstant.BlackListSecurityLevel.Low.title,
        subtitle: _BlackListStausConstant.BlackListSecurityLevel.Low.secLevelText
      }, {
        title: _BlackListStausConstant.BlackListSecurityLevel.Mid.title,
        subtitle: _BlackListStausConstant.BlackListSecurityLevel.Mid.secLevelText
      }, {
        title: _BlackListStausConstant.BlackListSecurityLevel.High.title,
        subtitle: _BlackListStausConstant.BlackListSecurityLevel.High.secLevelText
      }];
      return _this;
    }

    (0, _createClass2.default)(BlackListStatus, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.checkNeedRequestData();
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var isSupportRiskDeviceLog = _RouterInfoHelper.default.sharedInstance().checkCurrentCapality(_RouterInfoHelper.RouterCapality.isSupportRiskDeviceLog);

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.header
        }, this.needShowProtectTimeView() ? _react.default.createElement(_reactNative.View, {
          style: styles.timeContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.timeNumStyle
        }, this.state.dayNum != -1 ? this.state.dayNum : this.state.hourNum), _react.default.createElement(_reactNative.Text, {
          style: styles.timeUnitStyle
        }, this.state.dayNum != -1 ? '天' : '小时'), _react.default.createElement(_reactNative.Text, {
          style: styles.timeNumStyle
        }, this.state.minuteNum != -1 ? this.state.minuteNum : this.state.hourNum), _react.default.createElement(_reactNative.Text, {
          style: styles.timeUnitStyle
        }, this.state.minuteNum != -1 ? '分钟' : '小时')) : null, this.needShowProtectTimeView() ? _react.default.createElement(_reactNative.Text, {
          style: styles.headerDesc
        }, '已保护') : null, !this.needShowProtectTimeView() ? _react.default.createElement(_reactNative.View, {
          style: {
            marginTop: 30,
            width: _Devices.ScreenW - 80
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: 20,
            color: '#fff',
            textAlign: 'center',
            marginRight: 20
          }
        }, '尚未开启防蹭网')) : null), _CommonUtils.default.isNull(this.state.data) ? null : _react.default.createElement(_reactNative.ScrollView, {
          contentContainerStyle: {
            paddingTop: 0,
            paddingBottom: 35
          },
          showsVerticalScrollIndicator: true,
          scrollEnabled: true
        }, _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: '防蹭网开关',
          value: this.state.switchIsOn,
          showSeparator: false,
          titleStyle: {
            fontSize: 14,
            color: '#000',
            fontWeight: 'bold'
          },
          onValueChange: function onValueChange(value) {
            _this2.changeSwitchStatus(value);
          }
        }), this.state.switchIsOn ? _react.default.createElement(_reactNative.View, null, _RouterInfoHelper.default.sharedInstance().checkCurrentCapality(_RouterInfoHelper.RouterCapality.isSupportWhiteList) ? _react.default.createElement(_ListItem.ListItem, {
          title: '防蹭网模式设置',
          titleStyle: {
            fontSize: 14,
            color: '#000',
            fontWeight: 'bold'
          },
          value: this.getModeText(),
          showSeparator: false,
          showDot: false,
          onPress: function onPress() {
            _this2.setState({
              showModeChoice: true
            });
          }
        }) : null, this.state.data.mode === _BlackListStausConstant.BlackListMode.BlackList.value ? _react.default.createElement(_ListItem.ListItem, {
          title: '防蹭网安全等级',
          titleStyle: {
            fontSize: 14,
            color: '#000',
            fontWeight: 'bold'
          },
          subtitle: this.getSecLevelSubTitle(),
          value: this.getSecLevelText('sec'),
          showSeparator: false,
          showDot: false,
          onPress: function onPress() {
            _this2.setState({
              showLevelChoice: true
            });
          }
        }) : null, this.state.data.mode === _BlackListStausConstant.BlackListMode.BlackList.value ? _react.default.createElement(_ListItem.ListItem, {
          title: '黑名单',
          titleStyle: {
            fontSize: 14,
            color: '#000',
            fontWeight: 'bold'
          },
          subtitle: '加入黑名单的设备会被自动拦截',
          value: '',
          showSeparator: false,
          showDot: false,
          onPress: function onPress() {
            _this2.props.navigation.navigate('BlackList', {
              isBlack: true
            });
          }
        }) : null, this.state.data.mode === _BlackListStausConstant.BlackListMode.WhiteList.value ? _react.default.createElement(_ListItem.ListItem, {
          title: '白名单',
          titleStyle: {
            fontSize: 14,
            color: '#000',
            fontWeight: 'bold'
          },
          subtitle: '主动防御风险设备、新设备上线提醒',
          value: '',
          showSeparator: false,
          showDot: false,
          onPress: function onPress() {
            _this2.props.navigation.navigate('BlackList', {
              isBlack: false
            });
          }
        }) : null, isSupportRiskDeviceLog ? _react.default.createElement(_ListItem.ListItem, {
          title: '拦截记录',
          titleStyle: {
            fontSize: 14,
            color: '#000',
            fontWeight: 'bold'
          },
          subtitle: '详细记录拦截信息',
          value: '',
          showSeparator: false,
          showDot: false,
          onPress: function onPress() {
            _this2.props.navigation.navigate('BlockRecords');
          }
        }) : null, _react.default.createElement(_ListItem.ListItem, {
          title: 'WiFi密码安全等级',
          titleStyle: {
            fontSize: 14,
            color: '#000',
            fontWeight: 'bold'
          },
          subtitle: '建议使用英文+数字组合作为密码',
          value: this.getSecLevelText('wifi'),
          showSeparator: false,
          showDot: false,
          onPress: function onPress() {
            _this2.props.navigation.navigate('RouterSetWifiAndNetmode');
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: '路由器管理密码安全等级',
          titleStyle: {
            fontSize: 14,
            color: '#000',
            fontWeight: 'bold'
          },
          subtitle: '建议使用与WiFi不一样的密码',
          value: this.getSecLevelText('admin'),
          showSeparator: false,
          showDot: false,
          onPress: function onPress() {
            if (!_RouterInfoHelper.default.sharedInstance().isConnectCurrentManagedRouter()) {
              _CommonUtils.default.ShowToastCenter('该操作只能在连接路由WiFi时进行，无法远程操作');

              return;
            }

            _this2.props.navigation.navigate('ResetPassword');
          }
        })) : null), _react.default.createElement(_Dialog.ChoiceDialog, {
          visible: this.state.showModeChoice,
          title: '防蹭网模式设置',
          options: this.modeArr,
          selectedIndexArray: this.state.modeSelectIndex,
          onDismiss: function onDismiss(_) {
            _this2.state.showModeChoice = false;
          },
          onSelect: function onSelect(result) {
            _this2.choiceSelectHandler(true, result[0]);
          }
        }), _react.default.createElement(_Dialog.ChoiceDialog, {
          visible: this.state.showLevelChoice,
          title: '防蹭网安全等级',
          options: this.secLevelArr,
          selectedIndexArray: this.state.levelSelectIndex,
          onDismiss: function onDismiss(_) {
            _this2.state.showLevelChoice = false;
          },
          onSelect: function onSelect(result) {
            _this2.choiceSelectHandler(false, result[0]);
          }
        }), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: this.state.showLoading,
          message: this.state.showSwitchChangeText ? '设置中' : ''
        }));
      }
    }, {
      key: "checkNeedRequestData",
      value: function checkNeedRequestData() {
        if (this.state.needRequestData) {
          this.getData(true);
          this.setState({
            needRequestData: false
          });
        }
      }
    }, {
      key: "getData",
      value: function getData(showWaiting) {
        var _this3 = this;

        var paramsDic = {
          method: 'GET',
          params: {
            deviceId: _device.Device.deviceID.replace('miwifi.', '')
          }
        };

        if (showWaiting) {
          this.setState({
            showLoading: true
          });
        }

        _miot.Service.callSmartHomeAPI(this.statusApi, paramsDic).then(function (res) {
          if (res.code === 0) {
            var blackListStausModel = new _BlackListStatusModel.default(res);

            _this3.setState({
              data: blackListStausModel,
              switchIsOn: blackListStausModel.isOpen,
              modeSelectIndex: [blackListStausModel.mode - 1],
              levelSelectIndex: [blackListStausModel.blacklistSecLevel - 1]
            });

            _this3.requestProtectStatus();
          } else {
            if (showWaiting) {
              _this3.setState({
                showLoading: false
              });
            }

            _CommonUtils.default.ShowToastCenter('网络错误，状态初始化失败，请稍后重试');
          }
        }).catch(function (error) {
          if (showWaiting) {
            _this3.setState({
              showLoading: false
            });
          }

          _CommonUtils.default.ShowToastCenter('网络错误，状态初始化失败，请稍后重试');
        });
      }
    }, {
      key: "requestProtectStatus",
      value: function requestProtectStatus() {
        var _this4 = this;

        var paramsDic = {
          method: 'GET',
          params: {
            deviceId: _device.Device.deviceID.replace('miwifi.', ''),
            routerID: _device.Device.deviceID.replace('miwifi.', '')
          }
        };

        _miot.Service.callSmartHomeAPI(this.protectStatusApi, paramsDic).then(function (res) {
          _this4.setState({
            showLoading: false
          });

          if (res.code === 0) {
            var isOn = res.protection_enabled;
            var duration = res.duration;

            _this4.setState({
              protectDuration: _CommonUtils.default.isNull(duration) ? -1 : duration
            });

            _this4.creatProtectTimeText();
          } else {
            _CommonUtils.default.ShowToastCenter('防蹭网开关状态获取失败');
          }
        }).catch(function (error) {
          _this4.setState({
            showLoading: false
          });

          _CommonUtils.default.ShowToastCenter('防蹭网开关状态获取失败');
        });
      }
    }, {
      key: "changeSwitchStatus",
      value: function changeSwitchStatus(isToOpen) {
        var _this5 = this;

        var paramsDic = {
          method: 'GET',
          params: {
            deviceId: _device.Device.deviceID.replace('miwifi.', ''),
            open: isToOpen ? '1' : '0',
            level: this.state.data.blacklistSecLevel,
            mode: '0'
          }
        };
        this.setState({
          showSwitchChangeText: true,
          showLoading: true
        });

        _miot.Service.callSmartHomeAPI(this.changeSwitchApi, paramsDic).then(function (res) {
          _this5.setState({
            showSwitchChangeText: false,
            showLoading: false
          });

          if (res.code === 0) {
            _CommonUtils.default.ShowToastCenter('设置成功');

            if (isToOpen) {
              _reactNative.DeviceEventEmitter.emit('openArnSuccessNotification');
            }

            _this5.getData(false);
          } else {
            _CommonUtils.default.ShowToastCenter('设置失败');
          }
        }).catch(function (error) {
          _this5.setState({
            showSwitchChangeText: false,
            showLoading: false
          });

          _CommonUtils.default.ShowToastCenter('设置失败');
        });
      }
    }, {
      key: "choiceSelectHandler",
      value: function choiceSelectHandler(isSetMode, res) {
        this.state.showModeChoice = false;
        this.state.showLevelChoice = false;

        if (isSetMode) {
          this.setModeHandler(res);
        } else {
          this.setLevelHandler(res);
        }
      }
    }, {
      key: "getGateway",
      value: function getGateway() {
        return _regenerator.default.async(function getGateway$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", _miot.System.network.getGatewayIpAddress().then(function (res) {
                  return res.data.ipAddress;
                }).catch(function (error) {
                  return 'miwifi.com';
                }));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        });
      }
    }, {
      key: "setModeHandler",
      value: function setModeHandler(index) {
        var _this6 = this;

        var gateway, paramsDic, token, api, method, _api;

        return _regenerator.default.async(function setModeHandler$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!(index === this.state.modeSelectIndex[0])) {
                  _context2.next = 2;
                  break;
                }

                return _context2.abrupt("return");

              case 2:
                if (!(index === 1 && !_RouterInfoHelper.default.sharedInstance().isConnectCurrentManagedRouter())) {
                  _context2.next = 5;
                  break;
                }

                _CommonUtils.default.ShowToastCenter('请连接当前路由器WiFi后，再开启该功能');

                return _context2.abrupt("return");

              case 5:
                _context2.next = 7;
                return _regenerator.default.awrap(this.getGateway());

              case 7:
                gateway = _context2.sent;
                paramsDic = {};
                this.setState({
                  showLoading: true,
                  showSwitchChangeText: true
                });

                if (index === 1) {
                  token = _RouterInfoHelper.default.sharedInstance().getCurrentRouterToken();
                  api = 'http://' + gateway + "/cgi-bin/luci/;stok=" + token + _API.default.arn.changeSwitch.local;
                  paramsDic = {
                    deviceId: _device.Device.deviceID.replace('miwifi.', ''),
                    deviceID: _device.Device.deviceID.replace('miwifi.', ''),
                    open: '1',
                    mode: '1'
                  };
                  method = _miot.Host.isAndroid ? 'post' : 'get';

                  _miot.Service.callSpecificAPI(api, method, paramsDic).then(function (res) {
                    var result = typeof res === "object" ? res : JSON.parse(res);

                    _this6.setState({
                      showLoading: false,
                      showSwitchChangeText: false
                    });

                    if (result.code === 0) {
                      _CommonUtils.default.ShowToastCenter('设置成功');

                      var tem = _this6.state.data;
                      tem.mode = index + 1;

                      _this6.setState({
                        data: tem,
                        modeSelectIndex: [index]
                      });

                      _this6.addCurDeviceToWhiteList();

                      setTimeout(function () {
                        _this6.getData(false);
                      }, 2000);
                    } else {
                      _CommonUtils.default.ShowToastCenter('设置失败');
                    }
                  }).catch(function (error) {
                    _this6.setState({
                      showLoading: true,
                      showSwitchChangeText: true
                    });

                    _CommonUtils.default.ShowToastCenter('设置失败');
                  });
                } else {
                  _api = _API.default.arn.changeSwitch.remote;
                  paramsDic = {
                    method: 'GET',
                    params: {
                      deviceId: _device.Device.deviceID.replace('miwifi.', ''),
                      open: '1',
                      mode: '0'
                    }
                  };

                  _miot.Service.callSmartHomeAPI(_api, paramsDic).then(function (res) {
                    var result = typeof res === "object" ? res : JSON.parse(res);

                    _this6.setState({
                      showLoading: false,
                      showSwitchChangeText: false
                    });

                    if (result.code === 0) {
                      _CommonUtils.default.ShowToastCenter('设置成功');

                      var tem = _this6.state.data;
                      tem.mode = index + 1;

                      _this6.setState({
                        data: tem,
                        modeSelectIndex: [index]
                      });
                    } else {
                      _CommonUtils.default.ShowToastCenter('设置失败');
                    }
                  }).catch(function (error) {
                    _this6.setState({
                      showLoading: true,
                      showSwitchChangeText: true
                    });

                    _CommonUtils.default.ShowToastCenter('设置失败');
                  });
                }

              case 11:
              case "end":
                return _context2.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "addCurDeviceToWhiteList",
      value: function addCurDeviceToWhiteList() {
        var curMac, option, model, deviceId, paramsDic;
        return _regenerator.default.async(function addCurDeviceToWhiteList$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return _regenerator.default.awrap(_MacAddressManager.default.syncGetMac());

              case 2:
                curMac = _context3.sent;

                if (!_CommonUtils.default.isTextEmpty(curMac)) {
                  option = '0';
                  model = '1';
                  deviceId = _device.Device.deviceID.replace('miwifi.', '');
                  paramsDic = {
                    method: 'GET',
                    params: {
                      deviceId: deviceId,
                      deviceID: deviceId,
                      mac: curMac.toLowerCase(),
                      option: option,
                      model: model
                    }
                  };

                  _miot.Service.callSmartHomeAPI(_API.default.arn.edit_risk_device.remote, paramsDic).then(function (res) {
                    if (res.code === 0) {} else {}
                  }).catch(function (error) {});
                } else {}

              case 4:
              case "end":
                return _context3.stop();
            }
          }
        });
      }
    }, {
      key: "setLevelHandler",
      value: function setLevelHandler(index) {
        var _this7 = this;

        if (index === this.state.levelSelectIndex[0]) {
          return;
        }

        var text = '低';

        if (index === 1) {
          text = '中';
        } else if (index === 2) {
          text = '高';
        }

        var api = this.changeSwitchApi;
        var paramsDic = {
          method: 'GET',
          params: {
            deviceId: _device.Device.deviceID.replace('miwifi.', ''),
            open: '1',
            mode: '0',
            level: index + 1
          }
        };
        this.setState({
          showLoading: true,
          showSwitchChangeText: true
        });

        _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
          _this7.setState({
            showLoading: false,
            showSwitchChangeText: false
          });

          var result = typeof res === "object" ? res : JSON.parse(res);

          if (result.code === 0) {
            _CommonUtils.default.ShowToastCenter('设置成功');

            var tem = _this7.state.data;
            tem.blacklistSecLevel = index + 1;

            _this7.setState({
              data: tem,
              levelSelectIndex: [index]
            });
          } else {
            _CommonUtils.default.ShowToastCenter('设置失败');
          }
        }).catch(function (error) {
          _this7.setState({
            showLoading: false,
            showSwitchChangeText: false
          });

          _CommonUtils.default.ShowToastCenter('设置失败');
        });
      }
    }, {
      key: "needShowProtectTimeView",
      value: function needShowProtectTimeView() {
        return this.state.switchIsOn;
      }
    }, {
      key: "creatProtectTimeText",
      value: function creatProtectTimeText() {
        var hour = parseInt(this.state.protectDuration / 3600000);

        if (hour >= 1) {
          var day = parseInt(hour / 24);
          hour = parseInt(hour % 24);
          this.setState({
            dayNum: day,
            hourNum: hour,
            minuteNum: -1
          });
        } else {
          var minute = parseInt(this.state.protectDuration / 60000);
          this.setState({
            dayNum: -1,
            hourNum: 0,
            minuteNum: minute
          });
        }
      }
    }, {
      key: "getModeText",
      value: function getModeText() {
        if (this.state.data.mode === _BlackListStausConstant.BlackListMode.BlackList.value) {
          return _BlackListStausConstant.BlackListMode.BlackList.title;
        } else if (this.state.data.mode === _BlackListStausConstant.BlackListMode.WhiteList.value) {
          return _BlackListStausConstant.BlackListMode.WhiteList.title;
        } else {
          return _BlackListStausConstant.BlackListMode.Default.title;
        }
      }
    }, {
      key: "getSecLevelText",
      value: function getSecLevelText(type) {
        if (type === 'sec') {
          if (this.state.data.blacklistSecLevel === _BlackListStausConstant.BlackListSecurityLevel.Low.value) {
            return _BlackListStausConstant.BlackListSecurityLevel.Low.title;
          } else if (this.state.data.blacklistSecLevel === _BlackListStausConstant.BlackListSecurityLevel.Mid.value) {
            return _BlackListStausConstant.BlackListSecurityLevel.Mid.title;
          } else {
            return _BlackListStausConstant.BlackListSecurityLevel.High.title;
          }
        } else if (type === 'wifi') {
          if (this.state.data.wifiPwdSecLevel === _BlackListStausConstant.BlackListSecurityLevel.Low.value) {
            return _BlackListStausConstant.BlackListSecurityLevel.Low.title;
          } else if (this.state.data.wifiPwdSecLevel === _BlackListStausConstant.BlackListSecurityLevel.Mid.value) {
            return _BlackListStausConstant.BlackListSecurityLevel.Mid.title;
          } else {
            return _BlackListStausConstant.BlackListSecurityLevel.High.title;
          }
        } else {
          if (this.state.data.adminPwdSecLevel === _BlackListStausConstant.BlackListSecurityLevel.Low.value) {
            return _BlackListStausConstant.BlackListSecurityLevel.Low.title;
          } else if (this.state.data.adminPwdSecLevel === _BlackListStausConstant.BlackListSecurityLevel.Mid.value) {
            return _BlackListStausConstant.BlackListSecurityLevel.Mid.title;
          } else {
            return _BlackListStausConstant.BlackListSecurityLevel.High.title;
          }
        }
      }
    }, {
      key: "getSecLevelSubTitle",
      value: function getSecLevelSubTitle() {
        if (this.state.data.blacklistSecLevel === _BlackListStausConstant.BlackListSecurityLevel.Low.value) {
          return _BlackListStausConstant.BlackListSecurityLevel.Low.secLevelText;
        } else if (this.state.data.blacklistSecLevel === _BlackListStausConstant.BlackListSecurityLevel.Mid.value) {
          return _BlackListStausConstant.BlackListSecurityLevel.Mid.secLevelText;
        } else {
          return _BlackListStausConstant.BlackListSecurityLevel.High.secLevelText;
        }
      }
    }]);
    return BlackListStatus;
  }(_react.default.Component);

  exports.default = BlackListStatus;

  BlackListStatus.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        style: {
          backgroundColor: '#fff'
        },
        title: '防蹭网',
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      flex: 1
    },
    header: {
      flexDirection: 'column',
      backgroundColor: '#2358FE',
      borderWidth: 0.5,
      borderColor: '#2358FE',
      borderRadius: 10,
      paddingStart: 25,
      paddingBottom: 50,
      paddingTop: 20,
      margin: 15
    },
    timeContainer: {
      flexDirection: 'row',
      width: _Devices.ScreenW - 30
    },
    timeNumStyle: {
      fontSize: 60,
      color: '#fff',
      marginRight: 5,
      textAlign: 'left'
    },
    timeUnitStyle: {
      fontSize: 16,
      color: '#fff',
      paddingLeft: 5,
      paddingRight: 5,
      paddingTop: 45,
      textAlign: 'left'
    },
    headerDesc: {
      fontSize: 16,
      color: '#fff',
      textAlign: 'left'
    }
  });
},10883,[14308,14305,14674,14320,14323,14371,14377,14386,10297,10935,10064,10074,10033,10284,10439,10067,10040,10338,10755,10076,10886,10889,10079]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _BlackListStausConstant = _$$_REQUIRE(_dependencyMap[3]);

  var BlackListStatusModel = function BlackListStatusModel(props) {
    (0, _classCallCheck2.default)(this, BlackListStatusModel);

    if (!_CommonUtils.default.isNull(props)) {}

    this.adminPwdSecLevel = !_CommonUtils.default.isNull(props.adminlevel) ? props.adminlevel : _BlackListStausConstant.BlackListSecurityLevel.Low.value;
    this.blacklistSecLevel = !_CommonUtils.default.isNull(props.level) ? props.level : _BlackListStausConstant.BlackListSecurityLevel.Low.value;
    this.wifiPwdSecLevel = !_CommonUtils.default.isNull(props.wifilevel) ? props.wifilevel : _BlackListStausConstant.BlackListSecurityLevel.Low.value;
    this.isOpen = !_CommonUtils.default.isNull(props.open) ? props.open === 1 ? true : false : false;
    this.count = !_CommonUtils.default.isNull(props.count) ? props.count : 0;
    this.mode = !_CommonUtils.default.isNull(props.wifimode) ? props.wifimode : _BlackListStausConstant.BlackListMode.Default.value;
  };

  exports.default = BlackListStatusModel;
},10886,[14305,14320,10040,10889]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.BlackListMode = exports.BlackListSecurityLevel = undefined;
  var BlackListSecurityLevel = {
    Low: {
      value: 1,
      secLevelText: '拦截黑名单',
      title: '低'
    },
    Mid: {
      value: 2,
      secLevelText: '拦截黑名单、风险设备提示、新设备上线提醒',
      title: '中'
    },
    High: {
      value: 3,
      secLevelText: '拦截黑名单、主动拦截风险设备、新设备上线提醒',
      title: '高'
    }
  };
  exports.BlackListSecurityLevel = BlackListSecurityLevel;
  var BlackListMode = {
    Default: {
      value: 0,
      secLevelText: '',
      title: '无设置'
    },
    BlackList: {
      value: 1,
      secLevelText: '加入黑名单的设备会被自动拦截',
      title: '拦截黑名单设备'
    },
    WhiteList: {
      value: 2,
      secLevelText: '只允许白名单的设备连接路由器',
      title: '拦截非白名单设备'
    }
  };
  exports.BlackListMode = BlackListMode;
},10889,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _Devices = _$$_REQUIRE(_dependencyMap[9]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Service = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _miot = _$$_REQUIRE(_dependencyMap[12]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _BlackList = _$$_REQUIRE(_dependencyMap[15]);

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[16]);

  var _MacAddressManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _Host = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _PlaceholderImage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _Time = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _ClientHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[22]);

  var BlackListAddDevice = function (_React$Component) {
    (0, _inherits2.default)(BlackListAddDevice, _React$Component);

    function BlackListAddDevice(props) {
      var _this;

      (0, _classCallCheck2.default)(this, BlackListAddDevice);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BlackListAddDevice).call(this, props));

      _this.renderItem = function (itemInfo) {
        var isSelected = _this.containsItem(_this.state.selectedItems, itemInfo);

        var default_uri = _$$_REQUIRE(_dependencyMap[23]);

        var checkboxUrl = _$$_REQUIRE(_dependencyMap[24]);

        var uncheckboxUrl = _$$_REQUIRE(_dependencyMap[25]);

        var nameStr = _this.getDeviceName(itemInfo);

        var iconUrl = _this.getDeviceIconUrl(itemInfo);

        var detailStr = _this.getDeviceDetailStr(itemInfo);

        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: {
            width: _Devices.ScreenW,
            height: 70,
            flexDirection: 'row'
          },
          onPress: function onPress() {
            var selectedList = _this.state.selectedItems;

            if (_this.containsItem(selectedList, itemInfo)) {
              var index = selectedList.indexOf(itemInfo);
              selectedList.splice(index, 1);
            } else {
              selectedList.push(itemInfo);
            }

            _this.setState({
              selectedItems: selectedList
            });

            _this.changeNavigation(selectedList);
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            width: 20,
            height: 20,
            marginLeft: 10,
            marginTop: 25,
            marginRight: 10
          },
          source: isSelected ? checkboxUrl : uncheckboxUrl
        }), _react.default.createElement(_reactNative.View, {
          style: {
            marginTop: 9,
            marginBottom: 9,
            marginLeft: 10,
            marginRight: 10
          }
        }, _react.default.createElement(_PlaceholderImage.default, {
          style: {
            width: 52,
            height: 52,
            opacity: 1,
            borderRadius: 10
          },
          placeholderSource: default_uri,
          source: {
            uri: iconUrl
          }
        })), _react.default.createElement(_reactNative.View, {
          style: {
            width: _Devices.ScreenW - 62 - 20,
            height: 70,
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: 16,
            color: '#000',
            textAlign: 'left'
          }
        }, nameStr), _react.default.createElement(_reactNative.Text, null, detailStr), _react.default.createElement(_reactNative.View, {
          style: {
            position: 'absolute',
            width: _Devices.ScreenW - 62 - 20,
            left: 0,
            height: 0.5,
            top: 69.5,
            backgroundColor: '#ddd'
          }
        })));
      };

      _this.state = {
        showLoading: false,
        selectedItems: [],
        itemList: [],
        alertVisible: false
      };
      _this.macFilterApi = _API.default.arn.mac_filter.remote;
      _this.deviceDisplayApi = _API.default.device_display_info.remote;
      var data = _this.props.navigation.state.params.data;
      _this.filterInfo = _CommonUtils.default.isNull(data) ? null : data;
      return _this;
    }

    (0, _createClass2.default)(BlackListAddDevice, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.props.navigation.setParams({
          titleProps: {
            type: 'dark',
            leftText: '全选',
            leftTextStyle: {
              width: 60,
              color: '#000',
              fontSize: 16
            },
            onPressLeft: function onPressLeft() {
              return _this2.leftEditNaviItemHandler(true);
            },
            rightText: '取消',
            rightTextStyle: {
              width: 60,
              color: '#000',
              fontSize: 16
            },
            onPressRight: function onPressRight() {
              _this2.props.navigation.goBack();
            },
            title: '请选择项目'
          }
        });
        this.checkAvailableItemList();
      }
    }, {
      key: "changeNavigation",
      value: function changeNavigation(selectedList) {
        var _this3 = this;

        var itemCount = selectedList.length;
        var showAll = true;

        if (itemCount === this.state.itemList.length) {
          showAll = false;
        }

        this.props.navigation.setParams({
          titleProps: {
            type: 'dark',
            leftText: showAll ? '全选' : '全不选',
            leftTextStyle: {
              width: 60,
              color: '#000',
              fontSize: 16
            },
            onPressLeft: function onPressLeft() {
              return _this3.leftEditNaviItemHandler(showAll);
            },
            rightText: '取消',
            rightTextStyle: {
              width: 60,
              color: '#000',
              fontSize: 16
            },
            onPressRight: function onPressRight() {
              _this3.props.navigation.goBack();
            },
            title: itemCount > 0 ? '已选择' + itemCount + '项' : '请选择'
          }
        });
      }
    }, {
      key: "leftEditNaviItemHandler",
      value: function leftEditNaviItemHandler(showAll) {
        if (showAll === true) {
          var allList = [];
          this.state.itemList.forEach(function (item) {
            allList.push(item);
          });
          this.setState({
            selectedItems: allList
          });
          this.changeNavigation(allList);
        } else {
          this.setState({
            selectedItems: []
          });
          this.changeNavigation([]);
        }
      }
    }, {
      key: "componentWillMount",
      value: function componentWillMount() {}
    }, {
      key: "getAlertMsg",
      value: function getAlertMsg() {
        if (this.isBlackListMode()) {
          return '加入黑名单的设备，将无法连接路由器\n确定要把选中设备加入黑名单吗？';
        } else {
          return '加入白名单的设备，将允许连接路由器，配置生效期间，路由WiFi网络会短暂中断，确定要把该设备加入白名单吗？';
        }
      }
    }, {
      key: "isInCurrentList",
      value: function isInCurrentList(mac) {
        var macFilter = this.filterInfo.macfilter;
        var find = false;

        for (var i = 0; i < macFilter.length; i++) {
          var device = macFilter[i];

          if (device.mac === mac) {
            find = true;
            break;
          }
        }

        return find;
      }
    }, {
      key: "checkAvailableItemList",
      value: function checkAvailableItemList() {
        var cachedDevices, curMac, temDevices, i, device, isDeviceConnectWithWire, isCuurrentDevice, sourtedDevices, _i, _device, _i2, _device2, isOnline;

        return _regenerator.default.async(function checkAvailableItemList$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                this.state.itemList = [];
                _context.next = 3;
                return _regenerator.default.awrap(this.getCachedDevices());

              case 3:
                cachedDevices = _context.sent;
                _context.next = 6;
                return _regenerator.default.awrap(_MacAddressManager.default.syncGetMac());

              case 6:
                curMac = _context.sent;
                temDevices = [];

                for (i = 0; i < cachedDevices.devices.length; i++) {
                  device = cachedDevices.devices[i];
                  isDeviceConnectWithWire = device.connectionType === 4;
                  isCuurrentDevice = !_CommonUtils.default.isTextEmpty(curMac) && curMac.toUpperCase() === device.mac.toUpperCase();

                  if (this.isBlackListMode()) {
                    if (!isCuurrentDevice && !isDeviceConnectWithWire && !this.isInCurrentList(device.mac)) {
                      temDevices.push(device);
                    }
                  } else {
                    if (!isDeviceConnectWithWire && !this.isInCurrentList(device.mac)) {
                      temDevices.push(device);
                    }
                  }
                }

                sourtedDevices = [];

                for (_i = 0; _i < temDevices.length; _i++) {
                  _device = temDevices[_i];

                  if (_device.online === 1) {
                    sourtedDevices.push(_device);
                  }
                }

                for (_i2 = 0; _i2 < temDevices.length; _i2++) {
                  _device2 = temDevices[_i2];
                  isOnline = _device2.online === 1;

                  if (!isOnline) {
                    sourtedDevices.push(_device2);
                  }
                }

                this.setState({
                  itemList: sourtedDevices
                });

                if (this.state.itemList.length === 0) {
                  if (this.isBlackListMode()) {
                    _CommonUtils.default.ShowToastCenter('暂时没有可拉黑的设备');
                  } else {
                    _CommonUtils.default.ShowToastCenter('暂时没有可加入白名单的设备');
                  }

                  this.props.navigation.goBack();
                }

              case 14:
              case "end":
                return _context.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "isBlackListMode",
      value: function isBlackListMode() {
        return 0 === this.filterInfo.model;
      }
    }, {
      key: "getCachedDevices",
      value: function getCachedDevices() {
        return _regenerator.default.async(function getCachedDevices$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", _Host.default.storage.get('cachedDevices').then(function (value) {
                  return value;
                }).catch(function (error) {
                  return null;
                }));

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        });
      }
    }, {
      key: "getDeviceIconUrl",
      value: function getDeviceIconUrl(device) {
        var iconUrl = '';

        if (!_CommonUtils.default.isTextEmpty(device.neg480)) {
          iconUrl = device.neg480;
        } else {
          if (_CommonUtils.default.isTextEmpty(device.sns)) {
            iconUrl = 'https://s.miwifi.com/icon/' + device.iconUrl;
          } else {
            if (!_CommonUtils.default.isTextEmpty(device.sns_head_url)) {
              iconUrl = device.sns_head_url;
            } else {
              iconUrl = 'https://s.miwifi.com/icon/' + device.iconUrl;
            }
          }
        }

        return iconUrl;
      }
    }, {
      key: "getDeviceName",
      value: function getDeviceName(device) {
        var name = device.name;

        if (_CommonUtils.default.isTextEmpty(name)) {
          name = device.originName;
        }

        if (_CommonUtils.default.isTextEmpty(name)) {
          name = device.mac;
        }

        if (_CommonUtils.default.isTextEmpty(name)) {
          name = '';
        }

        return name;
      }
    }, {
      key: "getDeviceDetailStr",
      value: function getDeviceDetailStr(device) {
        var statusStr = '';
        var isOnline = device.online === 1;

        if (!isOnline) {
          statusStr = '离线';
        } else {
          var statusInfo = this.getDeviceStatusInfo(device);
          var timeInfo = (0, _Time.default)(_ClientHelper.default.getEvent(device).duration * 1000, _ClientHelper.default.getEvent(device).originatedTime * 1000);

          if (!_CommonUtils.default.isTextEmpty(statusInfo)) {
            statusStr = statusInfo + ' ' + timeInfo;
          } else {
            statusStr = timeInfo;
          }
        }

        return statusStr;
      }
    }, {
      key: "getDeviceStatusInfo",
      value: function getDeviceStatusInfo(device) {
        var info = '';

        if (!_CommonUtils.default.arrayIsEmpty(device.events)) {
          var allInfo = [];

          for (var i = 0; i < device.events.length; i++) {
            var event = device.events[i];
            allInfo.push(event.text);
          }

          info = allInfo.join(' | ');
        }

        return info;
      }
    }, {
      key: "containsItem",
      value: function containsItem(list, item) {
        if (_CommonUtils.default.arrayIsEmpty(list)) {
          return false;
        }

        var find = false;

        for (var i = 0; i < list.length; i++) {
          var obj = list[i];

          if (item.mac === obj.mac) {
            find = true;
            break;
          }
        }

        return find;
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var bottomDisable = this.state.selectedItems.length === 0;
        var listHeight = _Devices.ScreenH - 200 - 60;
        var isiPhoneX = false;

        if (_Devices.ios && (_Devices.ScreenH === 812 || _Devices.ScreenH === 896 || _Devices.ScreenH === 844 || _Devices.ScreenH === 780 || _Devices.ScreenH === 926)) {
          isiPhoneX = true;
        }

        var naviBarHeight = isiPhoneX ? _reactNavigation.Header.HEIGHT + 24 : _reactNavigation.Header.HEIGHT;
        var statusBarHeight = _reactNative.StatusBar.currentHeight;
        var naviAndStatusBarHeight = _Devices.ios ? naviBarHeight : naviBarHeight + statusBarHeight;
        listHeight = (_Devices.ios ? _Devices.ScreenH : _reactNative.Dimensions.get('screen').height) - naviAndStatusBarHeight - 50 - (isiPhoneX ? 54 : _Devices.ios ? 30 : 20);
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.FlatList, {
          style: {
            maxHeight: listHeight
          },
          data: this.state.itemList,
          renderItem: function renderItem(_ref) {
            var item = _ref.item;
            return _this4.renderItem(item);
          }
        }), _react.default.createElement(_reactNative.View, {
          style: styles.bottomContainer
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: bottomDisable ? [styles.bottomButton, {
            opacity: 0.3
          }] : styles.bottomButton,
          disabled: bottomDisable ? true : false,
          onPress: function onPress() {
            _this4.setState({
              alertVisible: true
            });
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.bottomButtonTitle
        }, '确定'))), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: this.state.showLoading,
          message: '处理中'
        }), _react.default.createElement(_Dialog.MessageDialog, {
          visible: this.state.alertVisible,
          title: '提示',
          message: this.getAlertMsg(),
          buttons: [{
            text: '取消',
            style: {
              color: '#000'
            },
            callback: function callback() {
              _this4.setState({
                alertVisible: false
              });
            }
          }, {
            text: '确定',
            style: {
              color: '#000'
            },
            callback: function callback() {
              _this4.setState({
                alertVisible: false
              });

              _this4.addSelectedItems();
            }
          }],
          onDismiss: function onDismiss() {
            _this4.setState({
              alertVisible: false
            });
          }
        }));
      }
    }, {
      key: "getData",
      value: function getData() {
        var filterInfo, tempData, displayInfoDic;
        return _regenerator.default.async(function getData$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return _regenerator.default.awrap(this.requestFilterInfo());

              case 2:
                filterInfo = _context3.sent;

                if (_CommonUtils.default.isNull(filterInfo)) {
                  _context3.next = 17;
                  break;
                }

                tempData = {};
                filterInfo.allDeviceList.forEach(function (item) {
                  tempData[item.mac] = {
                    origin_name: item.origin_name
                  };
                });

                if (!(Object.keys(tempData).length > 0)) {
                  _context3.next = 11;
                  break;
                }

                _context3.next = 9;
                return _regenerator.default.awrap(this.requesDeviceDisplayInfo(tempData));

              case 9:
                displayInfoDic = _context3.sent;
                filterInfo.allDeviceList.forEach(function (item) {
                  var displayInfo = displayInfoDic[item.mac];

                  if (!_CommonUtils.default.isNull(displayInfo)) {
                    item.nickname = displayInfo['nickname'];
                    item.iconUrl = displayInfo["iconUrl"];
                    item.bigIconUrl = displayInfo["bigIconUrl"];
                  }
                });

              case 11:
                this.filterInfo = filterInfo;
                this.setState({
                  showLoading: false
                });
                this.checkAvailableItemList();

                if (this.state.itemList.length === 0) {
                  if (this.isBlackListMode()) {
                    _CommonUtils.default.ShowToastCenter('暂时没有可拉黑的设备');
                  } else {
                    _CommonUtils.default.ShowToastCenter('暂时没有可加入白名单的设备');
                  }

                  this.props.navigation.goBack();
                }

                _context3.next = 19;
                break;

              case 17:
                _CommonUtils.default.ShowToastCenter('获取设备列表失败，请稍后重试');

                this.props.navigation.goBack();

              case 19:
              case "end":
                return _context3.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "requestFilterInfo",
      value: function requestFilterInfo() {
        var _this5 = this;

        var paramsDic;
        return _regenerator.default.async(function requestFilterInfo$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                paramsDic = {
                  method: 'GET',
                  params: {
                    deviceId: _miot.Device.deviceID.replace('miwifi.', '')
                  }
                };
                return _context4.abrupt("return", _Service.default.callSmartHomeAPI(this.macFilterApi, paramsDic).then(function (res) {
                  if (res.code === 0) {
                    var macFilterModel = new _BlackList.MacFilterModel(res);
                    return macFilterModel;

                    _this5.requesDeviceDisplayInfo(macFilterModel);
                  } else {
                    return null;
                  }
                }).catch(function (error) {
                  return null;
                }));

              case 2:
              case "end":
                return _context4.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "requesDeviceDisplayInfo",
      value: function requesDeviceDisplayInfo(info) {
        var paramsDic;
        return _regenerator.default.async(function requesDeviceDisplayInfo$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                paramsDic = {
                  method: 'GET',
                  params: {
                    deviceId: _miot.Device.deviceID.replace('miwifi.', ''),
                    data: JSON.stringify(info)
                  }
                };
                return _context5.abrupt("return", _Service.default.callSmartHomeAPI(this.deviceDisplayApi, paramsDic).then(function (res) {
                  if (res.code === 0 && !_CommonUtils.default.isNull(res.data)) {
                    return res.data;
                  } else {
                    return null;
                  }
                }).catch(function (error) {
                  return null;
                }));

              case 2:
              case "end":
                return _context5.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "addSelectedItems",
      value: function addSelectedItems() {
        var _this6 = this;

        var selectedItems = this.state.selectedItems;
        var macAddrs = [];

        for (var i = 0; i < selectedItems.length; i++) {
          var device = selectedItems[i];

          if (!_CommonUtils.default.isTextEmpty(device.mac)) {
            macAddrs.push(device.mac);
          }
        }

        this.setState({
          showLoading: true
        });
        var option = '0';
        var model = this.isBlackListMode() ? '0' : '1';

        var deviceId = _miot.Device.deviceID.replace('miwifi.', '');

        var paramsDic = {
          method: 'GET',
          params: {
            deviceId: deviceId,
            deviceID: deviceId,
            mac: macAddrs.join(';'),
            option: option,
            model: model
          }
        };

        _Service.default.callSmartHomeAPI(_API.default.arn.edit_risk_device.remote, paramsDic).then(function (res) {
          _this6.setState({
            showLoading: false
          });

          if (res.code === 0) {
            _CommonUtils.default.ShowToastCenter('设置成功');

            _this6.props.navigation.state.params.callback();

            _this6.props.navigation.goBack();
          } else {
            if (res.code === 1591) {
              _CommonUtils.default.ShowToastCenter('添加失败，最多只能添加32个设备');
            } else {
              _CommonUtils.default.ShowToastCenter('设置失败');
            }
          }
        }).catch(function (error) {
          _this6.setState({
            showLoading: false
          });

          _CommonUtils.default.ShowToastCenter('设置失败');
        });
      }
    }]);
    return BlackListAddDevice;
  }(_react.default.Component);

  exports.default = BlackListAddDevice;

  BlackListAddDevice.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;

    var _ref3 = navigation.state.params || {},
        titleProps = _ref3.titleProps;

    if (!titleProps) return {
      header: null
    };
    return {
      header: _react.default.createElement(_TitleBar.default, titleProps)
    };
  };

  var isiPhoneX = false;

  if (_Devices.ios && (_Devices.ScreenH === 812 || _Devices.ScreenH === 896)) {
    isiPhoneX = true;
  }

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#fff'
    },
    bottomContainer: {
      position: 'absolute',
      bottom: isiPhoneX ? 34 : 10,
      alignItems: 'center',
      justifyContent: 'center',
      height: 60,
      left: 24
    },
    bottomButton: {
      marginLeft: 0,
      width: _Devices.ScreenW - 48,
      height: 45,
      backgroundColor: '#2c7DFA',
      borderRadius: 22.5,
      alignItems: 'center',
      justifyContent: 'center'
    },
    bottomButtonTitle: {
      fontSize: 16,
      color: '#fff',
      fontWeight: 'bold'
    }
  });
},10892,[14305,14674,14320,14323,14371,14377,14386,10297,10033,10067,10064,10062,10074,10040,10284,10364,10918,10079,10035,10241,10226,10223,10755,10244,10370,10373]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _miot = _$$_REQUIRE(_dependencyMap[9]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[10]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _RiskDeviceLog = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[12]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Devices = _$$_REQUIRE(_dependencyMap[14]);

  var _ListItem = _$$_REQUIRE(_dependencyMap[15]);

  var BlockRecords = function (_React$Component) {
    (0, _inherits2.default)(BlockRecords, _React$Component);

    function BlockRecords(props) {
      var _this;

      (0, _classCallCheck2.default)(this, BlockRecords);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BlockRecords).call(this, props));

      _this._renderItem = function (itemInfo) {
        var eventId = itemInfo.item.eventId;
        var mac = itemInfo.item.mac;
        var blockStr = '';
        var iconUrl = '';
        var name = _CommonUtils.default.isTextEmpty(itemInfo.item.deviceName) ? '风险设备' : itemInfo.item.deviceName;

        if (eventId === 1001 || eventId === 1002) {
          iconUrl = _$$_REQUIRE(_dependencyMap[16]);
          blockStr = blockStr + '尝试连接WiFi | 智能拦截';
        } else if (eventId === 1003 || eventId === 1004) {
          iconUrl = _$$_REQUIRE(_dependencyMap[17]);
          blockStr = blockStr + '尝试登录路由器后台 | 智能拦截';
        } else if (eventId === 1005) {
          iconUrl = _$$_REQUIRE(_dependencyMap[16]);
          blockStr = blockStr + '尝试连接WiFi | 黑名单拦截';
        } else {
          iconUrl = _$$_REQUIRE(_dependencyMap[16]);
          blockStr = blockStr + '尝试登录路由器后台 | 黑名单拦截';
        }

        blockStr = blockStr + ' ' + itemInfo.item.blockCount + '次';
        return _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: '#fff',
            height: 60,
            width: _Devices.ScreenW,
            flexDirection: 'row'
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            marginLeft: 20,
            marginTop: 17,
            marginBottom: 17,
            width: 26,
            height: 26
          },
          source: iconUrl
        }), _react.default.createElement(_reactNative.View, {
          style: {
            marginTop: 5,
            marginBottom: 5,
            marginLeft: 10,
            marginRight: 15,
            flexDirection: 'column',
            width: _Devices.ScreenW - 71
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            marginTop: 5,
            fontSize: 16,
            color: '#000'
          }
        }, name + '(' + mac + ')'), _react.default.createElement(_reactNative.Text, null, blockStr)));
      };

      _this._sectionComp = function (info) {
        var dateItem = info.section.date;
        var isToday = dateItem.isToday();
        var isYesterday = dateItem.isYesterday();
        var dayStr = '';

        if (dateItem.day < 10) {
          dayStr = '0' + dateItem.day.toString() + ' ';
        } else {
          dayStr = dateItem.day.toString();
        }

        return _react.default.createElement(_reactNative.View, {
          style: {
            marginLeft: 20,
            flexDirection: 'row',
            marginRight: 5
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: 18,
            fontWeight: 'bold',
            color: '#000',
            marginBottom: 5
          }
        }, dayStr + ' ', _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: 14,
            color: '#999',
            marginBottom: 5
          }
        }, dateItem.month + '月')), isToday || isYesterday ? _react.default.createElement(_reactNative.Text, {
          style: {
            position: 'absolute',
            right: 10,
            fontSize: 14,
            color: '#999'
          }
        }, isYesterday ? '昨天' : '今天') : null);
      };

      _this.state = {
        isloading: false,
        showEmpty: false,
        groupedDeviceLog: null
      };
      _this.riskDeviceLog = null;
      return _this;
    }

    (0, _createClass2.default)(BlockRecords, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.refreshRecords();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }, {
      key: "refreshRecords",
      value: function refreshRecords() {
        var _this2 = this;

        this.setState({
          isloading: true
        });

        var deviceId = _miot.Device.deviceID.replace('miwifi.', '');

        var paramsDic = {
          method: 'GET',
          params: {
            deviceId: deviceId,
            routerID: deviceId,
            limit: '50'
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.arn.risk_device_log, paramsDic).then(function (res) {
          _this2.setState({
            isloading: false
          });

          if (res.code === 0 && !_CommonUtils.default.isNull(res.data)) {
            var valueArr = Object.values(res.data).filter(function (item) {
              if (!_CommonUtils.default.isNull(item)) {
                return true;
              }
            });

            if (valueArr.length > 0) {
              _this2.riskDeviceLog = new _RiskDeviceLog.default(res.data);
            }
          }

          _this2.refreshUI();
        }).catch(function (error) {
          _this2.setState({
            isloading: false
          });

          _CommonUtils.default.ShowToastCenter('获取拦截记录失败，请稍后重试');

          _this2.refreshUI();
        });
      }
    }, {
      key: "refreshUI",
      value: function refreshUI() {
        var isEmpty = true;

        if (!_CommonUtils.default.isNull(this.riskDeviceLog) && !_CommonUtils.default.isNull(this.riskDeviceLog.logItems) && this.riskDeviceLog.logItems.length > 0) {
          isEmpty = false;
        }

        this.setState({
          showEmpty: isEmpty
        });

        if (!isEmpty) {
          this.reOrgnizedData();
        }
      }
    }, {
      key: "reOrgnizedData",
      value: function reOrgnizedData() {
        var groupedDeviceLog = [];
        var index = 0;

        for (var _iterator = this.riskDeviceLog.logItems, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
          if (_isArray) {
            if (_i >= _iterator.length) break;
            item = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            item = _i.value;
          }

          item.index = index;
          index++;
          var find = false;

          for (var _i3 = 0, _groupedDeviceLog2 = groupedDeviceLog; _i3 < _groupedDeviceLog2.length; _i3++) {
            groupLog = _groupedDeviceLog2[_i3];

            if (groupLog.dateItem.isSameDay(item.dateItem)) {
              groupLog.logItems.push(item);
              find = true;
              break;
            }
          }

          if (!find) {
            var newGroup = new _RiskDeviceLog.GroupRiskDeiveLog();
            newGroup.dateItem = item.dateItem;
            newGroup.timestamp = item.timestamp;
            newGroup.logItems = [];
            newGroup.logItems.push(item);
            groupedDeviceLog.push(newGroup);
          }
        }

        var groupData = [];
        var keyIndex = 0;

        for (var _i2 = 0, _groupedDeviceLog = groupedDeviceLog; _i2 < _groupedDeviceLog.length; _i2++) {
          group = _groupedDeviceLog[_i2];
          groupData.push({
            data: group.logItems,
            key: group.dateItem.month + '月' + group.dateItem.day,
            date: group.dateItem
          });
          keyIndex++;
        }

        this.setState({
          groupedDeviceLog: groupData
        });
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, this.state.showEmpty ? _react.default.createElement(EmptyView, null) : null, !this.state.showEmpty ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.SectionList, {
          sections: this.state.groupedDeviceLog,
          renderItem: this._renderItem,
          renderSectionHeader: this._sectionComp,
          keyExtractor: function keyExtractor(item, index) {
            return index;
          }
        })) : null, _react.default.createElement(_Dialog.LoadingDialog, {
          visible: this.state.isloading,
          message: ''
        }));
      }
    }]);
    return BlockRecords;
  }(_react.default.Component);

  exports.default = BlockRecords;

  var EmptyView = function EmptyView() {
    return _react.default.createElement(_reactNative.View, {
      style: styles.emptyContainer
    }, _react.default.createElement(_reactNative.Image, {
      style: styles.emptyIcon,
      source: _$$_REQUIRE(_dependencyMap[18])
    }), _react.default.createElement(_reactNative.Text, {
      style: styles.emptyText
    }, '没有拦截记录'));
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#fff'
    },
    emptyContainer: {
      marginTop: _Devices.ScreenH * 0.5 - 50,
      flexDirection: 'column',
      alignItems: 'center'
    },
    emptyIcon: {
      width: 105,
      height: 90,
      resizeMode: 'contain'
    },
    emptyText: {
      fontSize: 14,
      color: '#999',
      textAlign: 'center',
      marginTop: 10
    },
    list_title: {
      height: 50,
      paddingTop: 10,
      paddingLeft: 20,
      textAlign: "left",
      textAlignVertical: 'center',
      backgroundColor: '#FFFFFF',
      color: '#8C93B0',
      fontSize: 13
    },
    listContainer: {
      marginTop: 10,
      width: _Devices.ScreenW,
      height: _Devices.ScreenH - 100
    }
  });
},10895,[14308,14305,14320,14323,14371,14377,14386,10297,10033,10074,10755,10064,10898,10040,10067,10338,10901,10904,10376]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RiskDateItem = exports.GroupRiskDeiveLog = exports.RiskDeviceLogItem = exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _th = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var RiskDeviceLog = function () {
    function RiskDeviceLog(props) {
      var _this = this;

      (0, _classCallCheck2.default)(this, RiskDeviceLog);
      this.next = _CommonUtils.default.isNull(props.next) ? '' : props.next;
      this.logItems = [];

      if (!_CommonUtils.default.isNull(props.items)) {
        props.items.forEach(function (item) {
          if (!_CommonUtils.default.isNull(item)) {
            var logItem = new RiskDeviceLogItem(item);

            _this.logItems.push(logItem);
          }
        });
      }
    }

    (0, _createClass2.default)(RiskDeviceLog, [{
      key: "hasMore",
      value: function hasMore() {
        return false;
      }
    }, {
      key: "mergeOldDeviceLog",
      value: function mergeOldDeviceLog(nextLog) {
        var oldLog = this.logItems;
        nextLog.logItems.forEach(function (item) {
          oldLog.push(item);
        });
        this.logItems = oldLog;
        this.next = nextLog.next;
      }
    }]);
    return RiskDeviceLog;
  }();

  exports.default = RiskDeviceLog;

  var RiskDeviceLogItem = function RiskDeviceLogItem(props) {
    (0, _classCallCheck2.default)(this, RiskDeviceLogItem);
    this.eventId = _CommonUtils.default.isNull(props.eventID) ? null : props.eventID;
    var name = props.name;

    if (!_CommonUtils.default.isNull(name)) {
      this.deviceName = name;
    }

    this.blockCount = _CommonUtils.default.isNull(props.count) ? 1 : props.count;
    this.mac = _CommonUtils.default.isNull(props.mac) ? null : props.mac;
    this.timestamp = _CommonUtils.default.isNull(props.ts) ? 0 : props.ts;
    var merged = props.merged;

    if (!_CommonUtils.default.isNull(merged) && merged === 1) {
      this.isMerged = true;
    } else {
      this.isMerged = false;
    }

    this.dateItem = new RiskDateItem(this.timestamp);
  };

  exports.RiskDeviceLogItem = RiskDeviceLogItem;

  var GroupRiskDeiveLog = function GroupRiskDeiveLog(props) {
    (0, _classCallCheck2.default)(this, GroupRiskDeiveLog);
  };

  exports.GroupRiskDeiveLog = GroupRiskDeiveLog;

  var RiskDateItem = function () {
    function RiskDateItem(props) {
      (0, _classCallCheck2.default)(this, RiskDateItem);
      this.ts = _CommonUtils.default.isNull(props) ? 0 : props;
      this.generateDate();
    }

    (0, _createClass2.default)(RiskDateItem, [{
      key: "generateDate",
      value: function generateDate() {
        if (this.ts === -1) {
          return;
        }

        var time = new Date(this.ts);
        this.year = time.getFullYear();
        this.month = time.getMonth() + 1;
        this.day = time.getDate();
        this.hour = time.getHours();
        this.minute = time.getMinutes();
        this.second = time.getSeconds();
      }
    }, {
      key: "isSameDay",
      value: function isSameDay(dayItem) {
        return this.year === dayItem.year && this.month === dayItem.month && this.day === dayItem.day;
      }
    }, {
      key: "isToday",
      value: function isToday() {
        var today = new Date().getTime();
        var todayStr = this.formatDate(today);
        var dayStr = this.formatDate(this.ts);
        return todayStr === dayStr;
      }
    }, {
      key: "isYesterday",
      value: function isYesterday() {
        var yesterday = new Date().getTime() - 86400000;
        var yesterdayStr = this.formatDate(yesterday);
        var dayStr = this.formatDate(this.ts);
        return yesterdayStr === dayStr;
      }
    }, {
      key: "formatDate",
      value: function formatDate(date) {
        var date = new Date(date);
        var YY = date.getFullYear() + '-';
        var MM = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';
        var DD = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();
        return YY + MM + DD;
      }
    }]);
    return RiskDateItem;
  }();

  exports.RiskDateItem = RiskDateItem;
},10898,[14305,14320,14323,10128,10040]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources",
    "width": 75,
    "height": 75,
    "scales": [1],
    "hash": "9e45c039cb9f268d82176ba42df44918",
    "name": "risk_device_wifi",
    "type": "png"
  });
},10901,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources",
    "width": 75,
    "height": 75,
    "scales": [1],
    "hash": "8917ad6cd836ed2ce77f57a04b6d4a98",
    "name": "risk_device_pwd",
    "type": "png"
  });
},10904,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _colorsys = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Wheel = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[12]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _miot = _$$_REQUIRE(_dependencyMap[14]);

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _device = _$$_REQUIRE(_dependencyMap[17]);

  var RouterSetWifiAndNetmode = function (_React$Component) {
    (0, _inherits2.default)(RouterSetWifiAndNetmode, _React$Component);

    function RouterSetWifiAndNetmode(props) {
      var _this;

      (0, _classCallCheck2.default)(this, RouterSetWifiAndNetmode);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RouterSetWifiAndNetmode).call(this, props));

      _this.onColorChange = function (color) {
        try {
          var hexText = _colorsys.default.hsvToHex(color.h, color.s, color.v);

          var hexString = hexText.substr(1, hexText.length);
          var hex = hexString === '0526ff' ? '0525ff' : hexString;
          hex = hexString === '0aff02' ? '0bff03' : hex;
          hex = hexString === '05ffe6' ? '06ffe7' : hex;
          hex = hexString === 'ff00cb' ? 'ff01ce' : hex;
          hex = hexString === 'ff0059' ? 'ff015a' : hex;

          _this.setState({
            hex: hex.toUpperCase()
          });
        } catch (e) {}
      };

      _this.onColorChangeComplete = function (color) {
        var _colorsys$hsv2Rgb = _colorsys.default.hsv2Rgb(color.h, color.s, color.v),
            r = _colorsys$hsv2Rgb.r,
            g = _colorsys$hsv2Rgb.g,
            b = _colorsys$hsv2Rgb.b;

        _this.setRGB(r, g, b);
      };

      _this.setColor = function (color) {
        _this.setState({
          initialColor: '#' + color + '_' + new Date().getTime()
        });

        var _colorsys$hex2Rgb = _colorsys.default.hex2Rgb('#' + color),
            r = _colorsys$hex2Rgb.r,
            g = _colorsys$hex2Rgb.g,
            b = _colorsys$hex2Rgb.b;

        _this.setRGB(r, g, b);
      };

      _this.setRGB = function (r, g, b) {
        var data = {
          func: 'set_rgb',
          val1: r,
          val2: g,
          val3: b
        };

        _this.setState({
          isShowLoading: true,
          loadingText: '正在设置灯效，请稍候...'
        });

        _this.sendData(data, function () {
          _this.setState({
            isShowLoading: false
          });
        });
      };

      _this.onChangeTextHandler = function (text) {
        _this.setState({
          hex: text
        });

        var reg = /^([0-9a-fA-F]{6}|[0-9a-fA-F]{3})$/;

        if (text.length === 6) {
          if (reg.test(text)) {
            _this.setColor(text);
          } else {
            _this.setState({
              'error': '色值不合法'
            });
          }
        } else {
          _this.setState({
            'error': ''
          });
        }
      };

      _this.switchHandler = function (value) {
        var data = {
          func: value ? 'on' : 'off',
          val1: -1,
          val2: -1,
          val3: -1
        };

        _this.setState({
          isShowLoading: true,
          loadingText: value ? '正在开启LED灯效，请稍候...' : '正在关闭LED灯效，请稍候...'
        });

        _this.sendData(data, function () {
          _this.setState({
            ledStatus: value,
            isShowLoading: false
          });
        });
      };

      _this.switchLedEventHandler = function (value) {
        var data = {
          func: value ? 'event_on' : 'event_off',
          val1: -1,
          val2: -1,
          val3: -1
        };
        var animateIndex = value ? _this.state.animateIndex + 5 : _this.state.animateIndex - 5;

        _this.setState({
          animateIndex: animateIndex,
          isShowLoading: true,
          loadingText: value ? '正在开启LED事件灯效，请稍候...' : '正在关闭LED事件灯效，请稍候...'
        });

        _this.sendData(data, function () {
          _this.setState({
            ledEvent: value,
            isShowLoading: false
          });
        });
      };

      _this.animateHandler = function (type, animateIndex) {
        if (!_this.state.ledStatus) {
          return false;
        }

        var data = {
          func: type,
          val1: -1,
          val2: -1,
          val3: -1
        };

        _this.setState({
          animateIndex: animateIndex,
          isShowLoading: true,
          loadingText: '正在设置LED动态灯效，请稍候...'
        });

        _this.sendData(data, function () {
          _this.setState({
            isShowLoading: false
          });
        });
      };

      _this.sendData = function (data, func) {
        var paramsDic = {
          method: 'GET',
          params: (0, _objectSpread2.default)({
            deviceId: _device.Device.deviceID.replace("miwifi.", "")
          }, data)
        };

        _miot.Service.callSmartHomeAPI(_API.default.router_rgb.remote, paramsDic).then(function (res) {
          func(res);
        }).catch(function (res) {
          func(res);
        });
      };

      _this.state = {
        color: {
          h: 0,
          s: 0,
          v: 0
        },
        initialColor: '#eeded1',
        hex: 'eeded1',
        ledStatus: false,
        ledEvent: false,
        animateIndex: -1,
        isShowLoading: false,
        loadingText: '加载中...'
      };
      return _this;
    }

    (0, _createClass2.default)(RouterSetWifiAndNetmode, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        var data = {
          func: 'get_config',
          val1: -1,
          val2: -1,
          val3: -1
        };
        this.setState({
          isShowLoading: true,
          loadingText: '正在读取配置，请稍候...'
        });
        this.sendData(data, function (response) {
          try {
            var str = response.str.split(' ');
            var r = str[0];
            var g = str[1];
            var b = str[2];
            var animateIndex = str[3];
            var ledEvent = str[4];

            _this2.setState({
              ledStatus: animateIndex >= 5 ? false : true,
              ledEvent: ledEvent === '1' ? true : false,
              animateIndex: animateIndex >= 5 ? animateIndex - 5 : animateIndex
            });

            var hexText = _colorsys.default.rgb2Hex(r, g, b);

            var hex = hexText.substr(1, hexText.length);

            _this2.setColor(hex);
          } catch (error) {}

          _this2.setState({
            isShowLoading: false
          });
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var backgroundColor = '#' + this.state.hex;
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: 'LED灯开关',
          subtitle: '该开关用以控制路由器LED灯效的开启和关闭',
          value: this.state.ledStatus,
          showSeparator: false,
          titleStyle: styles.titleStyle,
          containerStyle: styles.containerStyle,
          onValueChange: function onValueChange(value) {
            return _this3.switchHandler(value);
          }
        }), _react.default.createElement(_Separator.default, null), this.state.ledStatus && _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: [styles.pickContent, {}]
        }, _react.default.createElement(_reactNative.View, {
          style: {
            width: 200,
            height: 200,
            marginLeft: 15
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, _react.default.createElement(_Wheel.default, {
          initialColor: this.state.initialColor,
          thumbSize: 30,
          onColorChange: function onColorChange(color) {
            _this3.onColorChange(color);
          },
          onColorChangeComplete: function onColorChangeComplete(color) {
            _this3.onColorChangeComplete(color);
          }
        }))), _react.default.createElement(_reactNative.View, {
          style: styles.showColorContent
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.colorBox, {
            backgroundColor: backgroundColor
          }]
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.colorTitle
        }, "\u5341\u516D\u8FDB\u5236\u8272\u503C(Hex)"), _react.default.createElement(_reactNative.View, {
          style: styles.inputLabel
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.sharp
        }, "#"), _react.default.createElement(_reactNative.TextInput, {
          style: styles.input,
          maxLength: 6,
          defaultValue: this.state.hex,
          underlineColorAndroid: 'transparent',
          onChangeText: function onChangeText(text) {
            return _this3.onChangeTextHandler(text);
          }
        })), _react.default.createElement(_reactNative.Text, {
          style: styles.error
        }, this.state.error))), _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, "\u5FEB\u901F\u8BBE\u7F6E"), _react.default.createElement(_reactNative.View, {
          style: styles.quickSetContent
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.item,
          onPress: function onPress() {
            _this3.setColor('0525FF');
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.icon, {
            backgroundColor: '#0525FF'
          }]
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.txt
        }, "\u5B9D\u84DD")), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.item,
          onPress: function onPress() {
            _this3.setColor('0BFF03');
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.icon, {
            backgroundColor: '#0BFF03'
          }]
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.txt
        }, "\u53F6\u7EFF")), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.item,
          onPress: function onPress() {
            _this3.setColor('06FFE7');
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.icon, {
            backgroundColor: '#06FFE7'
          }]
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.txt
        }, "\u51B0\u84DD")), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.item,
          onPress: function onPress() {
            _this3.setColor('FF01CE');
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.icon, {
            backgroundColor: '#FF01CE'
          }]
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.txt
        }, "\u58A8\u7D2B")), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.item,
          onPress: function onPress() {
            _this3.setColor('FF0000');
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.icon, {
            backgroundColor: '#FF0000'
          }]
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.txt
        }, "\u8D64\u7EA2")), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.item,
          onPress: function onPress() {
            _this3.setColor('FF015A');
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.icon, {
            backgroundColor: '#FF015A'
          }]
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.txt
        }, "\u4EAE\u7D2B")), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.item,
          onPress: function onPress() {
            _this3.setColor('ffffff');
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.icon, {
            backgroundColor: '#ffffff'
          }]
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.txt
        }, "\u96EA\u767D"))), _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, "\u9009\u62E9LED\u52A8\u6548"), _react.default.createElement(_reactNative.View, {
          style: styles.animateContent
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: this.state.animateIndex == 0 ? [styles.animateItem, styles.animateItemSelected] : styles.animateItem,
          onPress: function onPress() {
            return _this3.animateHandler('still_light', 0);
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: this.state.ledStatus ? styles.animateText : styles.animateTextDisable
        }, "\u6052\u4EAE")), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: this.state.animateIndex == 1 ? [styles.animateItem, styles.animateItemSelected] : styles.animateItem,
          onPress: function onPress() {
            return _this3.animateHandler('breath', 1);
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: this.state.ledStatus ? styles.animateText : styles.animateTextDisable
        }, "\u547C\u5438\u706F")), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: this.state.animateIndex == 2 ? [styles.animateItem, styles.animateItemSelected] : styles.animateItem,
          onPress: function onPress() {
            return _this3.animateHandler('flashing', 2);
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: this.state.ledStatus ? styles.animateText : styles.animateTextDisable
        }, "\u7E41\u661F")), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: this.state.animateIndex == 3 ? [styles.animateItem, styles.animateItemSelected] : styles.animateItem,
          onPress: function onPress() {
            return _this3.animateHandler('cycle', 3);
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: this.state.ledStatus ? styles.animateText : styles.animateTextDisable
        }, "\u8272\u5F69\u5FAA\u73AF")), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: this.state.animateIndex == 4 ? [styles.animateItem, styles.animateItemSelected] : styles.animateItem,
          onPress: function onPress() {
            return _this3.animateHandler('rainbow', 4);
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: this.state.ledStatus ? styles.animateText : styles.animateTextDisable
        }, "\u5F69\u8679\u706F"))), _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: 'LED事件效果',
          subtitle: '当检测到如下事件时，会触发不同的LED灯效',
          value: this.state.ledEvent,
          showSeparator: false,
          titleStyle: styles.titleStyle,
          containerStyle: styles.containerStyle,
          onValueChange: function onValueChange(value) {
            return _this3.switchLedEventHandler(value);
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, "LED\u4E8B\u4EF6\u706F\u6548\u8BF4\u660E"), _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, {
          style: styles.title3
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title2
        }, "\u6E38\u620F\u52A0\u901F:"), "\u542F\u52A8\u5C0F\u7C73\u624B\u673A\u4E13\u5C5E\u6E38\u620F\u52A0\u901F\u65F6\uFF0CLED\u706F\u53D8\u4E3A\u7EFF\u8272\u547C\u5438\u6548\u679C"), _react.default.createElement(_reactNative.Text, {
          style: styles.title3
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title2
        }, "\u653B\u51FB\u63D0\u9192:"), "\u68C0\u6D4B\u5230\u6709\u7591\u4F3C\u653B\u51FB\u884C\u4E3A\u65F6\uFF0CLED\u706F\u53D8\u4E3A\u7EA2\u8272\u95EA\u70C1\u6548\u679C"), _react.default.createElement(_reactNative.Text, {
          style: styles.title3
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title2
        }, "\u7545\u5FEB\u8FDE\u63D0\u9192:"), "\u68C0\u6D4B\u5230\u6709\u667A\u80FD\u8BBE\u5907\u901A\u8FC7\u7545\u5FEB\u8FDE\u9996\u6B21\u63A5\u5165\u7F51\u7EDC\u65F6\uFF0CLED\u706F\u53D8\u4E3A\u5F69\u8679\u706F\u6548"))), _react.default.createElement(_LoadingDialog.default, {
          visible: this.state.isShowLoading,
          message: this.state.loadingText
        }));
      }
    }]);
    return RouterSetWifiAndNetmode;
  }(_react.default.Component);

  exports.default = RouterSetWifiAndNetmode;

  RouterSetWifiAndNetmode.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: 'LED动效灯',
        style: {
          backgroundColor: '#fff'
        },
        onPressLeft: function onPressLeft(_) {
          return navigation.goBack();
        }
      })
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      flex: 1,
      paddingRight: 24,
      paddingLeft: 24
    },
    title: {
      fontSize: 16,
      fontWeight: 'bold',
      marginTop: 10,
      marginBottom: 10,
      color: '#000'
    },
    titleStyle: {
      fontWeight: 'bold'
    },
    containerStyle: {
      paddingLeft: 0,
      paddingRight: 50
    },
    pickContent: {
      flexDirection: 'row',
      paddingTop: 20
    },
    showColorContent: {
      flex: 1,
      justifyContent: 'center',
      alignItems: 'center'
    },
    colorBox: {
      width: 40,
      height: 40,
      borderRadius: 5,
      overflow: 'hidden'
    },
    colorTitle: {
      fontSize: 12,
      marginTop: 4,
      marginBottom: 4
    },
    inputLabel: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    sharp: {
      fontWeight: 'bold',
      marginRight: 5
    },
    input: {
      color: '#989898',
      borderWidth: 1,
      width: 100,
      padding: 0,
      borderRadius: 8,
      borderColor: '#ccc',
      paddingLeft: 5,
      paddingRight: 5
    },
    quickSetContent: {
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    item: {
      alignItems: 'center'
    },
    icon: {
      width: 30,
      height: 30,
      borderRadius: 25
    },
    text: {
      fontSize: 12
    },
    error: {
      color: '#ff0000'
    },
    animateContent: {
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    animateItem: {
      padding: 5
    },
    animateItemDisable: {
      padding: 5,
      color: '#dedede'
    },
    animateItemSelected: {
      borderWidth: 1,
      borderRadius: 8,
      borderColor: '#999'
    },
    animateText: {},
    animateTextDisable: {
      color: '#dedede'
    },
    title2: {
      fontSize: 12,
      color: '#000',
      fontWeight: 'bold'
    },
    title3: {
      fontSize: 12,
      lineHeight: 20
    }
  });
},10907,[14305,14314,14320,14323,14371,14377,14386,10297,10033,10284,10910,10913,10338,10332,10074,10740,10064,10935]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var RGB_MAX = 255;
  var HUE_MAX = 360;
  var SV_MAX = 100;
  var colorsys = module.exports = {};

  colorsys.rgb2Hsl = function (r, g, b) {
    if (typeof r === 'object') {
      var args = r;
      r = args.r;
      g = args.g;
      b = args.b;
    }

    r = r === RGB_MAX ? 1 : r % RGB_MAX / parseFloat(RGB_MAX);
    g = g === RGB_MAX ? 1 : g % RGB_MAX / parseFloat(RGB_MAX);
    b = b === RGB_MAX ? 1 : b % RGB_MAX / parseFloat(RGB_MAX);
    var max = Math.max(r, g, b);
    var min = Math.min(r, g, b);
    var h,
        s,
        l = (max + min) / 2;

    if (max === min) {
      h = s = 0;
    } else {
      var d = max - min;
      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);

      switch (max) {
        case r:
          h = (g - b) / d + (g < b ? 6 : 0);
          break;

        case g:
          h = (b - r) / d + 2;
          break;

        case b:
          h = (r - g) / d + 4;
          break;
      }

      h /= 6;
    }

    return {
      h: Math.round(h * HUE_MAX),
      s: Math.round(s * SV_MAX),
      l: Math.round(l * SV_MAX)
    };
  };

  colorsys.rgb_to_hsl = colorsys.rgbToHsl = colorsys.rgb2Hsl;

  colorsys.rgb2Hsv = function (r, g, b) {
    if (typeof r === 'object') {
      var args = r;
      r = args.r;
      g = args.g;
      b = args.b;
    }

    r = r === RGB_MAX ? 1 : r % RGB_MAX / parseFloat(RGB_MAX);
    g = g === RGB_MAX ? 1 : g % RGB_MAX / parseFloat(RGB_MAX);
    b = b === RGB_MAX ? 1 : b % RGB_MAX / parseFloat(RGB_MAX);
    var max = Math.max(r, g, b);
    var min = Math.min(r, g, b);
    var h,
        s,
        v = max;
    var d = max - min;
    s = max === 0 ? 0 : d / max;

    if (max === min) {
      h = 0;
    } else {
      switch (max) {
        case r:
          h = (g - b) / d + (g < b ? 6 : 0);
          break;

        case g:
          h = (b - r) / d + 2;
          break;

        case b:
          h = (r - g) / d + 4;
          break;
      }

      h /= 6;
    }

    return {
      h: Math.round(h * HUE_MAX),
      s: Math.round(s * SV_MAX),
      v: Math.round(v * SV_MAX)
    };
  };

  colorsys.rgb_to_hsv = colorsys.rgbToHsv = colorsys.rgb2Hsv;

  colorsys.hsl2Rgb = function (h, s, l) {
    if (typeof h === 'object') {
      var args = h;
      h = args.h;
      s = args.s;
      l = args.l;
    }

    var r, g, b;
    h = _normalizeAngle(h);
    h = h === HUE_MAX ? 1 : h % HUE_MAX / parseFloat(HUE_MAX);
    s = s === SV_MAX ? 1 : s % SV_MAX / parseFloat(SV_MAX);
    l = l === SV_MAX ? 1 : l % SV_MAX / parseFloat(SV_MAX);

    if (s === 0) {
      r = g = b = l;
    } else {
      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
      var p = 2 * l - q;
      r = _hue2Rgb(p, q, h + 0.3333333333333333);
      g = _hue2Rgb(p, q, h);
      b = _hue2Rgb(p, q, h - 0.3333333333333333);
    }

    return {
      r: Math.round(r * RGB_MAX),
      g: Math.round(g * RGB_MAX),
      b: Math.round(b * RGB_MAX)
    };
  };

  colorsys.hsl_to_rgb = colorsys.hslToRgb = colorsys.hsl2Rgb;

  colorsys.hsv2Rgb = function (h, s, v) {
    if (typeof h === 'object') {
      var args = h;
      h = args.h;
      s = args.s;
      v = args.v;
    }

    h = _normalizeAngle(h);
    h = h === HUE_MAX ? 1 : h % HUE_MAX / parseFloat(HUE_MAX) * 6;
    s = s === SV_MAX ? 1 : s % SV_MAX / parseFloat(SV_MAX);
    v = v === SV_MAX ? 1 : v % SV_MAX / parseFloat(SV_MAX);
    var i = Math.floor(h);
    var f = h - i;
    var p = v * (1 - s);
    var q = v * (1 - f * s);
    var t = v * (1 - (1 - f) * s);
    var mod = i % 6;
    var r = [v, q, p, p, t, v][mod];
    var g = [t, v, v, q, p, p][mod];
    var b = [p, p, t, v, v, q][mod];
    return {
      r: Math.floor(r * RGB_MAX),
      g: Math.floor(g * RGB_MAX),
      b: Math.floor(b * RGB_MAX)
    };
  };

  colorsys.hsv_to_rgb = colorsys.hsv2Rgb;
  colorsys.hsvToRgb = colorsys.hsv2Rgb;

  colorsys.rgb2Hex = function (r, g, b) {
    if (typeof r === 'object') {
      var args = r;
      r = args.r;
      g = args.g;
      b = args.b;
    }

    r = Math.round(r).toString(16);
    g = Math.round(g).toString(16);
    b = Math.round(b).toString(16);
    r = r.length === 1 ? '0' + r : r;
    g = g.length === 1 ? '0' + g : g;
    b = b.length === 1 ? '0' + b : b;
    return '#' + r + g + b;
  };

  colorsys.rgb_to_hex = colorsys.rgbToHex = colorsys.rgb2Hex;

  colorsys.hex2Rgb = function (hex) {
    var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
    return result ? {
      r: parseInt(result[1], 16),
      g: parseInt(result[2], 16),
      b: parseInt(result[3], 16)
    } : null;
  };

  colorsys.hex_to_rgb = colorsys.hexToRgb = colorsys.hex2Rgb;

  colorsys.hsv2Hex = function (h, s, v) {
    var rgb = colorsys.hsv2Rgb(h, s, v);
    return colorsys.rgb2Hex(rgb.r, rgb.g, rgb.b);
  };

  colorsys.hsv_to_hex = colorsys.hsv2Hex;
  colorsys.hsvToHex = colorsys.hsv2Hex;

  colorsys.hex2Hsv = function (hex) {
    var rgb = colorsys.hex2Rgb(hex);
    return colorsys.rgb2Hsv(rgb.r, rgb.g, rgb.b);
  };

  colorsys.hex_to_hsv = colorsys.hexToHsv = colorsys.hex2Hsv;

  colorsys.hsl2Hex = function (h, s, l) {
    var rgb = colorsys.hsl2Rgb(h, s, l);
    return colorsys.rgb2Hex(rgb.r, rgb.g, rgb.b);
  };

  colorsys.hsl_to_hex = colorsys.hslToHex = colorsys.hsl2Hex;

  colorsys.hex2Hsl = function (hex) {
    var rgb = colorsys.hex2Rgb(hex);
    return colorsys.rgb2Hsl(rgb.r, rgb.g, rgb.b);
  };

  colorsys.hex_to_hsl = colorsys.hexToHsl = colorsys.hex2Hsl;

  colorsys.rgb2Cmyk = function (r, g, b) {
    if (typeof r === 'object') {
      var args = r;
      r = args.r;
      g = args.g;
      b = args.b;
    }

    var rprim = r / 255;
    var gprim = g / 255;
    var bprim = b / 255;
    var k = 1 - Math.max(rprim, gprim, bprim);
    var c = (1 - rprim - k) / (1 - k);
    var m = (1 - gprim - k) / (1 - k);
    var y = (1 - bprim - k) / (1 - k);
    return {
      c: c.toFixed(3),
      m: m.toFixed(3),
      y: y.toFixed(3),
      k: k.toFixed(3)
    };
  };

  colorsys.rgb_to_cmyk = colorsys.rgbToCmyk = colorsys.rgb2Cmyk;

  colorsys.cmyk2Rgb = function (c, m, y, k) {
    if (typeof c === 'object') {
      var args = c;
      c = args.c;
      m = args.m;
      y = args.y;
      k = args.k;
    }

    var r = 255 * (1 - c) * (1 - k);
    var g = 255 * (1 - m) * (1 - k);
    var b = 255 * (1 - y) * (1 - k);
    return {
      r: Math.floor(r),
      g: Math.floor(g),
      b: Math.floor(b)
    };
  };

  colorsys.cmyk_to_rgb = colorsys.cmykToRgb = colorsys.cmyk2Rgb;

  colorsys.hsv2Hsl = function (h, s, v) {
    if (typeof h === 'object') {
      var args = h;
      h = args.h;
      s = args.s;
      v = args.v;
    }

    var l = (2 - s) * v / 2;

    if (l !== 0) {
      if (l === SV_MAX) {
        s = 0;
      } else if (l < 50) {
        s = s * v / (l * 2);
      } else {
        s = s * v / (2 - l * 2);
      }
    }

    return {
      h: h,
      s: s,
      l: l
    };
  };

  colorsys.hsv_to_hsl = colorsys.hsvToHsl = colorsys.hsv2Hsl;

  colorsys.hsl2Hsv = function (h, s, l) {
    if (typeof h === 'object') {
      var args = h;
      h = args.h;
      s = args.s;
      l = args.l;
    }

    s = s * (l < 50 ? l : 100 - l);
    return {
      h: h,
      s: Math.floor(2 * s / (l + s)),
      v: Math.floor(l + s)
    };
  };

  colorsys.hsl_to_hsv = colorsys.hslToHsv = colorsys.hsl2Hsv;

  colorsys.parseCss = function (cssString) {
    if (cssString.indexOf('#') > -1) {
      return colorsys.hex2Rgb(cssString);
    }

    var prefix = cssString.split('(')[0];
    var args = cssString.split('(')[1].split(')')[0].split(',');
    return prefix.split('').reduce(function (color, param, idx) {
      var nextColor = color;
      nextColor[param] = parseFloat(args[idx]);
      return nextColor;
    }, {});
  };

  colorsys.parse_css = colorsys.parseCss;

  colorsys.stringify = function (obj) {
    var prefix = Object.keys(obj).join('');
    var values = Object.keys(obj).map(function (key) {
      var val = obj[key];

      if (key === 's' || key === 'v' || key === 'l') {
        val = val + '%';
      }

      return val;
    });
    return prefix + '(' + values.join(', ') + ')';
  };

  colorsys.hex_to_decimal = colorsys.hexToDecimal = colorsys.hex2Decimal;

  colorsys.hex2Decimal = function (hexColor) {
    if (typeof hexColor === "string") {
      return parseInt(hexColor.replace("#", ""), 16);
    }
  };

  colorsys.decimal_to_hex = colorsys.decimalToHex = colorsys.decimal2Hex;

  colorsys.decimal2Hex = function (decimalColor) {
    if (typeof decimalColor === "string") {
      return "#" + parseInt(decimalColor).toString(16);
    }

    return "#" + decimalColor.toString(16);
  };

  colorsys.random = function () {
    var base = '000000';
    var number = Math.floor(Math.random() * 16777215).toString(16);
    return '#' + (base + number).substr(-6);
  };

  colorsys.rotateHue = function (hue, amount) {
    if (amount === undefined) {
      amount = 0;
    }

    var aux = typeof hue === 'object' ? (hue.h + amount) % 360 : (hue + amount) % 360;
    var nextHue = aux < 0 ? 360 + aux : aux;
    return typeof hue === 'object' ? _extends(hue, {
      h: nextHue
    }) : nextHue;
  };

  colorsys.getColorEncoding = function (color) {
    if (typeof color === 'string') {
      try {
        colorsys.hex2Rgb(color);
        return 'hex';
      } catch (err) {}
    }

    if (typeof color !== 'object') {
      return 'unknown';
    }

    var c = color;

    if (c.r + c.g + c.b && typeof (c.r + c.g + c.b) === 'number') {
      return 'rgb';
    }

    if (c.h + c.s + c.v && typeof (c.h + c.s + c.v) === 'number') {
      return 'hsv';
    }

    if (c.h + c.s + c.l && typeof (c.h + c.s + c.l) === 'number') {
      return 'hsl';
    }

    if (c.c + c.m + c.y + c.k && typeof (c.c + c.m + c.y + c.k) === 'number') {
      return 'cmyk';
    }

    return 'unknown';
  };

  function _normalizeAngle(degrees) {
    return (degrees % 360 + 360) % 360;
  }

  function _hue2Rgb(p, q, t) {
    if (t < 0) t += 1;
    if (t > 1) t -= 1;
    if (t < 0.16666666666666666) return p + (q - p) * 6 * t;
    if (t < 0.5) return q;
    if (t < 0.6666666666666666) return p + (q - p) * (0.6666666666666666 - t) * 6;
    return p;
  }

  colorsys.any2Hsl = function (color) {
    var colorEncoding = colorsys.getColorEncoding(color);

    switch (colorEncoding) {
      case 'hsl':
        return color;

      case 'rgb':
        return colorsys.rgb2Hsl(color);

      case 'hex':
        return colorsys.hex2Hsl(color);

      case 'hsv':
        return colorsys.hsv2Hsl(color);

      case 'cmyk':
        return colorsys.rgb2Hsl(colorsys.cmyk2Rgb(color));

      default:
        return 'unknown';
    }
  };

  colorsys.any_to_hsl = colorsys.anyToHsl = colorsys.any2Hsl;

  colorsys.getTransformEncodingFunction = function (color, desiredEncoding) {
    var originalEncoding = colorsys.getColorEncoding(color);
    return colorsys[originalEncoding + '_to_' + desiredEncoding];
  };

  colorsys.darken = function (color, percentage) {
    var encoding = colorsys.getColorEncoding(color);

    if (encoding === 'unknown') {
      return color;
    }

    if (encoding === 'cmyk') {
      var nextCmyk = color;
      nextCmyk.k = Math.min(100, 100 * percentage + nextCmyk.k);
      return nextCmyk;
    }

    var hsl = colorsys.any2Hsl(color);
    var nextHsl = {
      h: hsl.h,
      s: hsl.s,
      l: Math.round(hsl.l * (1 - percentage))
    };
    var transformFn = encoding === 'hsl' ? function (c) {
      return c;
    } : colorsys.getTransformEncodingFunction(nextHsl, encoding);

    if (typeof transformFn !== 'function') {
      return color;
    }

    return transformFn(nextHsl);
  };
},10910,[14344]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _colorsys = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var Wheel = function (_React$PureComponent) {
    (0, _inherits2.default)(Wheel, _React$PureComponent);

    function Wheel(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Wheel);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Wheel).call(this, props));

      _this.componentWillReceiveProps = function (nextProps) {
        if (nextProps.initialColor !== _this.props.initialColor) {
          var color = nextProps.initialColor.split('_')[0];

          _this.setState({
            initialColor: color
          });

          _this.forceUpdate(color);
        }
      };

      _this.onLayout = function (nativeEvent) {
        _this.self.measureInWindow(function (x, yy, width, height) {
          var y = yy + 54;

          var window = _reactNative.Dimensions.get('window');

          var absX = x % width;
          _this.offset = {
            x: absX + width / 2,
            y: y % window.height + height / 2
          };
          _this.top = y % window.height;
          _this.left = absX;
        });
      };

      _this.componentWillMount = function () {
        _this._panResponder = _reactNative.PanResponder.create({
          onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture(_ref) {
            var nativeEvent = _ref.nativeEvent;
            if (_this.outBounds(nativeEvent)) return;

            _this.updateColor({
              nativeEvent: nativeEvent
            });

            _this.setState({
              panHandlerReady: true
            });

            _this.state.pan.setValue({
              x: -_this.left + nativeEvent.pageX - _this.props.thumbSize / 2,
              y: -_this.top + nativeEvent.pageY - _this.props.thumbSize / 2
            });

            return true;
          },
          onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
            return true;
          },
          onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
            return true;
          },
          onPanResponderGrant: function onPanResponderGrant() {
            return true;
          },
          onPanResponderMove: function onPanResponderMove(event, gestureState) {
            if (_this.outBounds(gestureState)) return;

            _this.resetPanHandler();

            return _reactNative.Animated.event([null, {
              dx: _this.state.pan.x,
              dy: _this.state.pan.y
            }], {
              listener: _this.updateColor
            })(event, gestureState);
          },
          onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
            return true;
          },
          onPanResponderRelease: function onPanResponderRelease(_ref2) {
            var nativeEvent = _ref2.nativeEvent;

            _this.setState({
              panHandlerReady: true
            });

            _this.state.pan.flattenOffset();

            var _this$calcPolar = _this.calcPolar(nativeEvent),
                radius = _this$calcPolar.radius;

            if (radius < 0.1) {
              _this.forceUpdate('#ffffff');
            }

            if (_this.props.onColorChangeComplete) {
              _this.props.onColorChangeComplete(_this.state.hsv);
            }
          }
        });

        _this.forceUpdate(_this.state.currentColor);
      };

      _this.forceUpdate = function (color) {
        var _colorsys$hex2Hsv = _colorsys.default.hex2Hsv(color),
            h = _colorsys$hex2Hsv.h,
            s = _colorsys$hex2Hsv.s,
            v = _colorsys$hex2Hsv.v;

        var _this$calcCartesian = _this.calcCartesian(h, s / 100),
            left = _this$calcCartesian.left,
            top = _this$calcCartesian.top;

        _this.setState({
          currentColor: color
        });

        _this.props.onColorChange({
          h: h,
          s: s,
          v: v
        });

        _this.state.pan.setValue({
          x: left - _this.props.thumbSize / 2,
          y: top - _this.props.thumbSize / 2
        });
      };

      _this.updateColor = function (_ref3) {
        var nativeEvent = _ref3.nativeEvent;

        var _this$calcPolar2 = _this.calcPolar(nativeEvent),
            deg = _this$calcPolar2.deg,
            radius = _this$calcPolar2.radius;

        var hsv = {
          h: deg,
          s: 100 * radius,
          v: 100
        };

        var currentColor = _colorsys.default.hsv2Hex(hsv);

        _this.setState({
          hsv: hsv,
          currentColor: currentColor
        });

        _this.props.onColorChange(hsv);
      };

      _this.state = {
        radius: 100,
        width: 200,
        height: 200,
        currentColor: props.initialColor.split('_')[0],
        pan: new _reactNative.Animated.ValueXY()
      };
      _this.offset = {
        x: 0,
        y: 0
      };
      _this.value = '';
      return _this;
    }

    (0, _createClass2.default)(Wheel, [{
      key: "resetPanHandler",
      value: function resetPanHandler() {
        if (!this.state.panHandlerReady) {
          return;
        }

        this.setState({
          panHandlerReady: false
        });
        this.state.pan.setOffset({
          x: this.state.pan.x._value,
          y: this.state.pan.y._value
        });
        this.state.pan.setValue({
          x: 0,
          y: 0
        });
      }
    }, {
      key: "outBounds",
      value: function outBounds(gestureState) {
        var _this$calcPolar3 = this.calcPolar(gestureState),
            radius = _this$calcPolar3.radius;

        return radius > 1;
      }
    }, {
      key: "calcPolar",
      value: function calcPolar(gestureState) {
        var pageX = gestureState.pageX,
            pageY = gestureState.pageY,
            moveX = gestureState.moveX,
            moveY = gestureState.moveY;
        var x = pageX || moveX,
            y = pageY || moveY;
        var dx = x - this.offset.x,
            dy = y - this.offset.y;
        return {
          deg: Math.atan2(dy, dx) * (-180 / Math.PI),
          radius: Math.sqrt(dy * dy + dx * dx) / this.state.radius
        };
      }
    }, {
      key: "calcCartesian",
      value: function calcCartesian(deg, radius) {
        var r = radius * this.state.radius;
        var rad = Math.PI * deg / 180;
        var x = r * Math.cos(rad);
        var y = r * Math.sin(rad);
        return {
          left: this.state.width / 2 + x,
          top: this.state.height / 2 - y
        };
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var thumbStyle = [styles.circle, styles.thumbStyle, {
          backgroundColor: this.state.currentColor
        }];
        var panHandlers = this._panResponder && this._panResponder.panHandlers || {};
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          ref: function ref(node) {
            _this2.self = node;
          },
          style: styles.coverResponder
        }, panHandlers, {
          onLayout: function onLayout(event) {
            return _this2.onLayout(event.nativeEvent);
          }
        }), _react.default.createElement(_reactNative.Image, {
          style: styles.img,
          source: _$$_REQUIRE(_dependencyMap[10])
        }), _react.default.createElement(_reactNative.Animated.View, {
          style: [this.state.pan.getLayout(), thumbStyle]
        }));
      }
    }]);
    return Wheel;
  }(_react.default.PureComponent);

  exports.default = Wheel;

  var styles = _reactNative.StyleSheet.create({
    coverResponder: {
      flex: 1,
      alignItems: 'center',
      justifyContent: 'center'
    },
    img: {
      alignSelf: 'center',
      width: 200,
      height: 200,
      resizeMode: 'cover'
    },
    circle: {
      position: 'absolute',
      backgroundColor: '#EEEEEE',
      borderWidth: 3,
      borderColor: '#EEEEEE',
      elevation: 3,
      shadowColor: 'rgb(46, 48, 58)',
      shadowOffset: {
        width: 0,
        height: 2
      },
      shadowOpacity: 0.8,
      shadowRadius: 2
    },
    thumbStyle: {
      height: 30,
      width: 30,
      borderRadius: 30
    }
  });
},10913,[14305,14344,14320,14323,14371,14377,14386,10297,10033,10910,10916]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Main/RouterSet/LedRGB",
    "width": 730,
    "height": 730,
    "scales": [1],
    "hash": "ee111b20e68d3b9a1e779a8c4e1d00f7",
    "name": "color-wheel",
    "type": "png"
  });
},10916,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[10]);

  var _Transmission = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _USB = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Phone = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _FileUtils = _$$_REQUIRE(_dependencyMap[14]);

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[16]);

  var _ui = _$$_REQUIRE(_dependencyMap[17]);

  var RootTabs = (0, _reactNavigation.createMaterialTopTabNavigator)({
    'USB设备': {
      screen: _USB.default
    },
    '传输': {
      screen: _Transmission.default
    },
    '已下载的文件': {
      screen: _Phone.default
    }
  }, {
    tabBarPosition: 'top',
    animationEnabled: true,
    tabBarOptions: {
      activeTintColor: '#1F1F1F',
      inactiveTintColor: '#666',
      style: {
        backgroundColor: '#FFF',
        borderTopColor: '#0003',
        borderTopWidth: 0.5
      }
    }
  });

  var Storage = function (_React$Component) {
    (0, _inherits2.default)(Storage, _React$Component);

    function Storage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Storage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Storage).call(this, props));

      _this.firstCheckUsbInterface = function _callee() {
        var _ref, code, exist;

        return _regenerator.default.async(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return _regenerator.default.awrap((0, _FileUtils.fileRequest)({
                  api: 1
                }));

              case 2:
                _ref = _context.sent;
                code = _ref.code;
                exist = _ref.exist;

                if (code === 0 && exist !== 0) {
                  _this.setState({
                    haveStorage: true,
                    removeDiscText: '安全移除'
                  });

                  clearTimeout(_this.checkUsbInterfaceTimer);
                } else {
                  _this.checkUsbInterfaceTimer = setTimeout(_this.firstCheckUsbInterface, 1000);
                }

              case 6:
              case "end":
                return _context.stop();
            }
          }
        });
      };

      _this.removeDisc = function _callee2() {
        var _ref2, code, errorCode, id;

        return _regenerator.default.async(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _this.setState({
                  loadingText: '正在移除存储设备，请稍候...',
                  isShowLoading: true
                });

                _context2.next = 3;
                return _regenerator.default.awrap((0, _FileUtils.fileRequest)({
                  api: 78,
                  path: '/extdisks/sdb1'
                }));

              case 3:
                _ref2 = _context2.sent;
                code = _ref2.code;
                errorCode = _ref2.errorCode;
                id = _ref2.id;

                if (!(code === 0 && errorCode === 0)) {
                  _context2.next = 10;
                  break;
                }

                _context2.next = 10;
                return _regenerator.default.awrap(_this.getRemoveDiscStatus(id));

              case 10:
              case "end":
                return _context2.stop();
            }
          }
        });
      };

      _this.getRemoveDiscStatus = function _callee4(id) {
        var _ref3, code;

        return _regenerator.default.async(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return _regenerator.default.awrap((0, _FileUtils.fileRequest)({
                  api: 114,
                  id: id
                }));

              case 2:
                _ref3 = _context4.sent;
                code = _ref3.code;

                if (code === 0) {
                  _this.setState({
                    'isShowLoading': false,
                    removeDiscText: ' ',
                    haveStorage: false
                  });

                  clearTimeout(_this.timer);
                } else {
                  _this.timer = setTimeout(function _callee3() {
                    return _regenerator.default.async(function _callee3$(_context3) {
                      while (1) {
                        switch (_context3.prev = _context3.next) {
                          case 0:
                            _context3.next = 2;
                            return _regenerator.default.awrap(_this.getRemoveDiscStatus(id));

                          case 2:
                          case "end":
                            return _context3.stop();
                        }
                      }
                    });
                  }, 1000);
                }

              case 5:
              case "end":
                return _context4.stop();
            }
          }
        });
      };

      _this.state = {
        removeDiscText: ' ',
        haveStorage: false,
        isShowLoading: false,
        isShowRemoveStorage: false,
        loadingText: '正在检查存储设备...'
      };
      return _this;
    }

    (0, _createClass2.default)(Storage, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _ref4, code, exist;

        return _regenerator.default.async(function componentDidMount$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                this.setState({
                  'isShowLoading': true,
                  loadingText: '正在检测存储设备，请稍候...'
                });
                _context5.next = 3;
                return _regenerator.default.awrap((0, _FileUtils.fileRequest)({
                  api: 1
                }));

              case 3:
                _ref4 = _context5.sent;
                code = _ref4.code;
                exist = _ref4.exist;
                this.setState({
                  'isShowLoading': false
                });

                if (!(code === 0 && exist !== 0)) {
                  _context5.next = 11;
                  break;
                }

                this.setState({
                  haveStorage: true,
                  removeDiscText: '安全移除'
                });
                _context5.next = 13;
                break;

              case 11:
                _context5.next = 13;
                return _regenerator.default.awrap(this.firstCheckUsbInterface());

              case 13:
              case "end":
                return _context5.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "_renderCustomTab",
      value: function _renderCustomTab(selected, text, iconName) {
        var backgroundColor = selected ? _reactNativeUiKitten.RkTheme.current.colors.primary : 'white';
        var color = !selected ? _reactNativeUiKitten.RkTheme.current.colors.primary : 'white';
        return _react.default.createElement(_reactNative.View, {
          style: [styles.tab, {
            backgroundColor: backgroundColor
          }]
        }, iconName === 'usb' ? _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[18])
        }) : _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _$$_REQUIRE(_dependencyMap[19])
        }), _react.default.createElement(_reactNativeUiKitten.RkText, {
          style: {
            color: color,
            fontSize: 13
          }
        }, text));
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        clearTimeout(this.checkUsbInterfaceTimer);
        clearTimeout(this.timer);
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.wrap
        }, _react.default.createElement(_TitleBar.default, {
          type: "dark",
          title: '我的存储',
          onPressLeft: function onPressLeft() {
            _this2.props.navigation.goBack();
          },
          rightTextStyle: {
            width: 'auto'
          },
          rightText: this.state.removeDiscText,
          onPressRight: function onPressRight() {
            return _this2.setState({
              isShowRemoveStorage: true
            });
          }
        }), this.state.isShowLoading ? null : this.state.haveStorage ? _react.default.createElement(RootTabs, null) : _react.default.createElement(_reactNative.View, {
          style: styles.tipsContent
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.storage,
          source: _$$_REQUIRE(_dependencyMap[20])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.tipTitle
        }, "\u672A\u53D1\u73B0\u53EF\u7528\u7684USB\u5B58\u50A8\u8BBE\u5907"), _react.default.createElement(_reactNative.Text, {
          style: styles.tipSubTitle
        }, "\u63D2\u5165USB\u8BBE\u5907\u540E\uFF0C\u624D\u80FD\u5F00\u542F\u5B58\u50A8\u3001\u4E0B\u8F7D\u7B49\u529F\u80FD\uFF08\u652F\u6301NTFS\u3001FAT32\u3001exFAT\u6587\u4EF6\u7CFB\u7EDF\uFF09")), _react.default.createElement(_LoadingDialog.default, {
          visible: this.state.isShowLoading,
          message: this.state.loadingText
        }), _react.default.createElement(_ui.MessageDialog, {
          title: '提示',
          message: '确定要卸载所有可移动磁盘吗？',
          cancelable: false,
          cancel: '取消',
          confirm: '确定',
          onCancel: function onCancel(e) {
            _this2.setState({
              isShowRemoveStorage: false
            });
          },
          onConfirm: function onConfirm(e) {
            _this2.removeDisc();
          },
          onDismiss: function onDismiss() {
            _this2.setState({
              isShowRemoveStorage: false
            });
          },
          visible: this.state.isShowRemoveStorage
        }));
      }
    }]);
    return Storage;
  }(_react.default.Component);

  exports.default = Storage;

  Storage.navigationOptions = function (_ref5) {
    var navigation = _ref5.navigation;
    return {
      header: null
    };
  };

  var styles = _reactNative.StyleSheet.create({
    wrap: {
      flex: 1,
      backgroundColor: '#fff'
    },
    tipsContent: {
      flex: 1,
      alignItems: 'center',
      justifyContent: 'center'
    },
    tipTitle: {
      fontSize: 16,
      color: '#000',
      marginBottom: 10
    },
    tipSubTitle: {
      fontSize: 14,
      color: '#999',
      width: 300
    },
    storage: {
      width: 200,
      height: 150,
      resizeMode: 'contain'
    },
    titleBarColor: {
      backgroundColor: '#FFF'
    },
    rightTextStyle: {
      width: 60,
      textAlign: 'right',
      paddingRight: 14
    },
    container: {
      flex: 1,
      backgroundColor: '#fff'
    },
    tab: {
      justifyContent: 'center',
      flexDirection: 'row',
      alignItems: 'center',
      padding: 10
    },
    icon: {
      width: 20,
      height: 20,
      resizeMode: 'cover'
    }
  });
},10919,[14305,14674,14320,14323,14371,14377,14386,10297,10033,10284,11251,10922,11054,11111,10925,10740,10918,10230,11123,11126,11129]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _miot = _$$_REQUIRE(_dependencyMap[10]);

  var _FileUtils = _$$_REQUIRE(_dependencyMap[11]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Host = _$$_REQUIRE(_dependencyMap[14]);

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var Transmission = function (_React$Component) {
    (0, _inherits2.default)(Transmission, _React$Component);

    function Transmission(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Transmission);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Transmission).call(this, props));

      _this.reCheckConnRouter = function _callee() {
        var isConnRouter;
        return _regenerator.default.async(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return _regenerator.default.awrap(_RouterInfoHelper.default.sharedInstance().synCheckConnRouter());

              case 2:
                isConnRouter = _context.sent;

                _this.setState({
                  isConnRouter: isConnRouter
                });

              case 4:
              case "end":
                return _context.stop();
            }
          }
        });
      };

      _this.downloadingStateToStop = function () {
        for (var _iterator = _this.transmissionList, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === "function" ? typeof Symbol === "function" ? Symbol.iterator : "@@iterator" : "@@iterator"]();;) {
          var _ref;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
          }

          var _item = _ref;

          if (_item.status === 'downloading') {
            _item.status = 'stop';
          }
        }
      };

      _this.downloadingToStop = function _callee2() {
        var _iterator2, _isArray2, _i2, _ref2, _item2;

        return _regenerator.default.async(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _iterator2 = _this.transmissionList, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === "function" ? typeof Symbol === "function" ? typeof Symbol === "function" ? Symbol.iterator : "@@iterator" : "@@iterator" : "@@iterator"]();

              case 1:
                if (!_isArray2) {
                  _context2.next = 7;
                  break;
                }

                if (!(_i2 >= _iterator2.length)) {
                  _context2.next = 4;
                  break;
                }

                return _context2.abrupt("break", 17);

              case 4:
                _ref2 = _iterator2[_i2++];
                _context2.next = 11;
                break;

              case 7:
                _i2 = _iterator2.next();

                if (!_i2.done) {
                  _context2.next = 10;
                  break;
                }

                return _context2.abrupt("break", 17);

              case 10:
                _ref2 = _i2.value;

              case 11:
                _item2 = _ref2;

                if (!(_item2.status === 'downloading')) {
                  _context2.next = 15;
                  break;
                }

                _context2.next = 15;
                return _regenerator.default.awrap(_this.changeStatusHandler(_item2));

              case 15:
                _context2.next = 1;
                break;

              case 17:
                _miot.Host.storage.set('transmissionList', _this.transmissionList);

              case 18:
              case "end":
                return _context2.stop();
            }
          }
        });
      };

      _this.stopToDownloading = function _callee3() {
        var _iterator3, _isArray3, _i3, _ref3, _item3;

        return _regenerator.default.async(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (_this.state.isConnRouter) {
                  _context3.next = 3;
                  break;
                }

                _CommonUtils.default.ShowToastBottom('请连接路由器内网进行下载');

                return _context3.abrupt("return", false);

              case 3:
                _iterator3 = _this.transmissionList, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[typeof Symbol === "function" ? typeof Symbol === "function" ? typeof Symbol === "function" ? Symbol.iterator : "@@iterator" : "@@iterator" : "@@iterator"]();

              case 4:
                if (!_isArray3) {
                  _context3.next = 10;
                  break;
                }

                if (!(_i3 >= _iterator3.length)) {
                  _context3.next = 7;
                  break;
                }

                return _context3.abrupt("break", 20);

              case 7:
                _ref3 = _iterator3[_i3++];
                _context3.next = 14;
                break;

              case 10:
                _i3 = _iterator3.next();

                if (!_i3.done) {
                  _context3.next = 13;
                  break;
                }

                return _context3.abrupt("break", 20);

              case 13:
                _ref3 = _i3.value;

              case 14:
                _item3 = _ref3;

                if (!(_item3.status === 'error' || _item3.status === 'stop')) {
                  _context3.next = 18;
                  break;
                }

                _context3.next = 18;
                return _regenerator.default.awrap(_this.changeStatusHandler(_item3));

              case 18:
                _context3.next = 4;
                break;

              case 20:
                _miot.Host.storage.set('transmissionList', _this.transmissionList);

              case 21:
              case "end":
                return _context3.stop();
            }
          }
        });
      };

      _this.runProgress = function () {
        _this.transmissionList.map(function (item, index) {
          if (item.progress === '100%' && item.status !== 'complete') {
            item.status = 'complete';
            item.completeTime = new Date().getTime();

            _reactNative.DeviceEventEmitter.emit('reloadSandboxFilelist');
          }
        });

        _this.setState({
          transmissionList: _this.transmissionList
        });

        _miot.Host.storage.set('transmissionList', _this.transmissionList);
      };

      _this.testLog = function _callee4() {
        return _regenerator.default.async(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return _regenerator.default.awrap(_miot.Host.file.readFileList().then(function (result) {}).catch(function (e, result) {
                  alert(JSON.stringify(result));
                }));

              case 2:
                _this.transmissionList.map(function (item) {});

              case 3:
              case "end":
                return _context4.stop();
            }
          }
        });
      };

      _this.clearRecordHandler = function () {
        var transmissionList = _this.transmissionList.filter(function (item) {
          return item.status !== 'complete';
        });

        _this.transmissionList = transmissionList;

        _miot.Host.storage.set('transmissionList', transmissionList);

        _this.setState({
          transmissionList: transmissionList
        });
      };

      _this.clearTransmissionList = function () {
        _this.transmissionList = [];

        _miot.Host.storage.set('transmissionList', _this.transmissionList);

        _this.setState({
          transmissionList: []
        });
      };

      _this.changeStatusHandler = function _callee5(file) {
        var response;
        return _regenerator.default.async(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                if (!(file.status === 'downloading')) {
                  _context5.next = 7;
                  break;
                }

                _context5.next = 3;
                return _regenerator.default.awrap((0, _FileUtils.cancelDownloadFile)(file.taskID));

              case 3:
                response = _context5.sent;

                if (response.code === 0 || response.code === 1) {
                  file.status = 'stop';
                }

                _context5.next = 8;
                break;

              case 7:
                if (file.status === 'stop' || file.status === 'error') {
                  file.status = 'downloading';
                  (0, _FileUtils.downloadFile)(file, file.path, file.savePath);
                }

              case 8:
              case "end":
                return _context5.stop();
            }
          }
        });
      };

      _this.getAllDownloadStopText = function () {
        var isHaveDownloadingFile = _this.state.transmissionList.find(function (item, index) {
          return item.status === 'downloading';
        });

        var isHaveStopErrorFile = _this.state.transmissionList.find(function (item, index) {
          return item.status === 'stop' || item.status === 'error';
        });

        var allStartStopText = '';

        if (isHaveDownloadingFile) {
          allStartStopText = '全部暂停';
          _this.needAllStop = true;
        } else if (isHaveStopErrorFile) {
          allStartStopText = '全部开始';
          _this.needAllStop = false;
        }

        return allStartStopText;
      };

      _this.allDownloadOrStop = function () {
        if (_this.needAllStop) {
          _this.downloadingToStop();
        } else {
          _this.stopToDownloading();
        }
      };

      _this.state = {
        transmissionList: []
      };
      _this.needAllStop = false;
      return _this;
    }

    (0, _createClass2.default)(Transmission, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        var isConnRouter;
        return _regenerator.default.async(function componentDidMount$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _context6.next = 2;
                return _regenerator.default.awrap((0, _FileUtils.transmissionListFromStorage)());

              case 2:
                this.transmissionList = _context6.sent;
                _context6.next = 5;
                return _regenerator.default.awrap(_RouterInfoHelper.default.sharedInstance().synCheckConnRouter());

              case 5:
                isConnRouter = _context6.sent;
                this.downloadingStateToStop();
                this.setState({
                  transmissionList: this.transmissionList,
                  isConnRouter: isConnRouter
                });
                this.progressTimer = setInterval(this.runProgress, 1000);

                _miot.FileEvent.fileDownloadProgress.addListener(function (data) {
                  _this2.transmissionList.map(function (item, index) {
                    if ((item.status === 'downloading' || item.status === 'error') && item.name === data.filename && item.size === data.totalBytes) {
                      var progressText = '100%';

                      if (data.totalBytes !== 0) {
                        progressText = (data.downloadBytes / data.totalBytes * 100).toFixed(0) + '%';
                      }

                      item.progress = progressText;
                    }
                  });
                });

                this.deEmitter = _reactNative.DeviceEventEmitter.addListener('startDownload', function (startDownloadFileList) {
                  var _this2$transmissionLi;

                  (_this2$transmissionLi = _this2.transmissionList).push.apply(_this2$transmissionLi, (0, _toConsumableArray2.default)(startDownloadFileList));
                });

                _Host.HostEvent.cellPhoneNetworkStateChanged.addListener(function (networkInfo) {
                  _this2.downloadingStateToStop();

                  setTimeout(_this2.reCheckConnRouter, 1000);
                });

              case 12:
              case "end":
                return _context6.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.deEmitter.remove();
        clearInterval(this.progressTimer);
        this.downloadingToStop();
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var downloadingList = this.state.transmissionList.filter(function (item) {
          return item.status === 'downloading' || item.status === 'stop' || item.status === 'error';
        });
        var completeList = this.state.transmissionList.filter(function (item) {
          return item.status === 'complete';
        });
        var editText = this.getAllDownloadStopText();
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleBar
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title,
          onPress: this.testLog
        }, "\u4F20\u8F93\u4EFB\u52A1"), _react.default.createElement(_reactNative.Text, {
          style: styles.editText,
          onPress: this.allDownloadOrStop
        }, editText)), _react.default.createElement(_reactNative.View, {
          style: downloadingList.length > 0 ? styles.downloadingList : styles.box
        }, downloadingList.length > 0 ? _react.default.createElement(_reactNative.FlatList, {
          data: downloadingList,
          renderItem: function renderItem(_ref4) {
            var item = _ref4.item,
                index = _ref4.index;
            return _react.default.createElement(_reactNative.TouchableOpacity, {
              key: index
            }, _react.default.createElement(_reactNative.View, {
              key: index,
              style: styles.fileItem
            }, _react.default.createElement(_reactNative.View, {
              style: styles.downloadingFileItemLeft
            }, _react.default.createElement(_reactNative.TouchableOpacity, {
              onPress: function onPress() {
                if (!_this3.state.isConnRouter) {
                  _CommonUtils.default.ShowToastBottom('请连接路由器内网进行下载');

                  return false;
                }

                _this3.changeStatusHandler(item);
              },
              style: styles.editIcon
            }, (0, _FileUtils.getTransmissionIcon)(item.status)), _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, {
              style: styles.fileName,
              numberOfLines: 1
            }, item.name), _react.default.createElement(_reactNative.View, {
              style: styles.fileInfo
            }, _react.default.createElement(_reactNative.Text, {
              style: styles.fileTime
            }, (0, _FileUtils.formatTime)("YYYY-mm-dd", item.modifyTime * 1000)), _react.default.createElement(_reactNative.Text, {
              style: styles.fileSize,
              numberOfLines: 1
            }, (0, _FileUtils.formatFileSize)(item.size))))), _react.default.createElement(_reactNative.Text, {
              style: styles.fileSize
            }, item.progress)), index !== downloadingList.length - 1 && _react.default.createElement(_Separator.default, null));
          }
        }) : _react.default.createElement(_reactNative.Text, {
          style: styles.noTaskTip
        }, "\u65E0\u4F20\u8F93\u4EFB\u52A1")), _react.default.createElement(_reactNative.View, {
          style: styles.titleBar
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title,
          onPress: this.clearTransmissionList
        }, "\u5DF2\u7ECF\u5B8C\u6210"), _react.default.createElement(_reactNative.Text, {
          onPress: this.clearRecordHandler,
          style: styles.editText
        }, "\u6E05\u9664\u8BB0\u5F55")), _react.default.createElement(_reactNative.View, {
          style: completeList.length > 0 ? styles.completeList : styles.box
        }, completeList.length > 0 ? _react.default.createElement(_reactNative.FlatList, {
          data: (0, _FileUtils.sortByModifyTime)(completeList, 'completeTime'),
          renderItem: function renderItem(_ref5) {
            var item = _ref5.item,
                index = _ref5.index;
            return _react.default.createElement(_reactNative.TouchableOpacity, {
              key: index
            }, _react.default.createElement(_reactNative.View, {
              key: index,
              style: styles.fileItem
            }, _react.default.createElement(_reactNative.View, {
              style: styles.fileItemLeft
            }, _react.default.createElement(_reactNative.Text, {
              style: styles.fileName,
              numberOfLines: 1
            }, item.name), _react.default.createElement(_reactNative.View, {
              style: styles.fileInfo
            }, _react.default.createElement(_reactNative.Text, {
              style: styles.fileTime
            }, (0, _FileUtils.formatTime)("YYYY-mm-dd", item.modifyTime * 1000)), _react.default.createElement(_reactNative.Text, {
              style: styles.fileSize,
              numberOfLines: 1
            }, (0, _FileUtils.formatFileSize)(item.size))))), index !== completeList.length - 1 && _react.default.createElement(_Separator.default, null));
          }
        }) : _react.default.createElement(_reactNative.Text, {
          style: styles.noTaskTip
        }, "\u65E0\u5B8C\u6210\u4EFB\u52A1")));
      }
    }]);
    return Transmission;
  }(_react.default.Component);

  exports.default = Transmission;

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      paddingLeft: 10,
      paddingRight: 10,
      flex: 1
    },
    titleBar: {
      paddingTop: 10,
      paddingBottom: 10,
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    box: {
      borderColor: '#dedede',
      borderTopWidth: 0.5,
      borderBottomWidth: 0.5
    },
    noTaskTip: {
      textAlign: 'center',
      padding: 30,
      color: '#ddd'
    },
    title: {
      fontSize: 12
    },
    editText: {
      color: '#3e6cf0',
      fontSize: 12
    },
    downloadingList: {
      maxHeight: 200,
      borderColor: '#dedede',
      borderTopWidth: 0.5,
      borderBottomWidth: 0.5
    },
    completeList: {
      flex: 1,
      borderColor: '#dedede',
      borderTopWidth: 0.5,
      borderBottomWidth: 0.5
    },
    fileItem: {
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center',
      paddingTop: 10,
      paddingBottom: 10
    },
    downloadingFileItemLeft: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    fileInfo: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    fileName: {
      width: 240,
      color: '#000'
    },
    fileTime: {
      fontSize: 12,
      color: '#999',
      marginRight: 5
    },
    fileSize: {
      fontSize: 12,
      color: '#999'
    },
    editIcon: {
      borderWidth: 1,
      borderRadius: 20,
      borderColor: '#999',
      marginRight: 10
    }
  });
},10922,[14305,14359,14674,14320,14323,14371,14377,14386,10297,10033,10074,10925,10332,10040,10035,10076]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.isListEmpty = exports.getSandBoxFileList = exports.cancelDownloadFile = exports.downloadFile = exports.transmissionListFromStorage = exports.getCheckboxIcon = exports.sortByModifyTime = exports.formatFileSize = exports.formatTime = exports.getTransmissionIcon = exports.getIcon = exports.supportExtensionName = exports.newFolder = exports.getParseEnumDirectory = exports.fileRequest = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var _device = _$$_REQUIRE(_dependencyMap[4]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var fileRequest = function fileRequest(data) {
    var paramsDic = {
      method: 'get',
      params: {
        deviceId: _device.Device.deviceID.replace("miwifi.", ""),
        payload: JSON.stringify(data)
      }
    };
    return _miot.Service.callSmartHomeAPI(_API.default.request, paramsDic).then(function (res) {
      return res;
    }).catch(function (res) {
      return res;
    });
  };

  exports.fileRequest = fileRequest;

  var getParseEnumDirectory = function getParseEnumDirectory(path, rootPath, successFunc, errorFunc) {
    var response;
    return _regenerator.default.async(function getParseEnumDirectory$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return _regenerator.default.awrap(fileRequest({
              api: 3,
              path: path
            }));

          case 2:
            response = _context.sent;

            if (response.code === 0) {
              if (rootPath === path) {
                successFunc(response.info);
              } else {
                successFunc([{
                  name: "返回上一级",
                  type: 2,
                  ishidden: false
                }].concat(response.info));
              }
            } else {
              errorFunc(response);
            }

          case 4:
          case "end":
            return _context.stop();
        }
      }
    });
  };

  exports.getParseEnumDirectory = getParseEnumDirectory;

  var newFolder = function newFolder(path) {
    var mac, token;
    return _regenerator.default.async(function newFolder$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return _regenerator.default.awrap(getWifiInfo());

          case 2:
            mac = _context2.sent;
            _context2.next = 5;
            return _regenerator.default.awrap(_miot.Host.crypto.encodeMD5(mac.toLowerCase()));

          case 5:
            token = _context2.sent;
            _context2.next = 8;
            return _regenerator.default.awrap(fileRequest({
              api: 6,
              path: path,
              token: token
            }));

          case 8:
            return _context2.abrupt("return", _context2.sent);

          case 9:
          case "end":
            return _context2.stop();
        }
      }
    });
  };

  exports.newFolder = newFolder;
  var supportExtensionName = ['mp4', 'mov', 'png', 'jpg', 'amr', 'mp3', 'aac', 'm4r', 'flac', 'm4a', 'docx', 'pdf'];
  exports.supportExtensionName = supportExtensionName;

  var getFileIcon = function getFileIcon(filename) {
    var extension = filename.split('.').pop().toLowerCase();

    switch (extension) {
      case "apk":
        return _$$_REQUIRE(_dependencyMap[9]);

      case "bt":
        return _$$_REQUIRE(_dependencyMap[10]);

      case "dll":
        return _$$_REQUIRE(_dependencyMap[11]);

      case "dmg":
        return _$$_REQUIRE(_dependencyMap[12]);

      case "doc":
        return _$$_REQUIRE(_dependencyMap[13]);

      case "dps":
        return _$$_REQUIRE(_dependencyMap[14]);

      case "dpt":
        return _$$_REQUIRE(_dependencyMap[15]);

      case "et":
        return _$$_REQUIRE(_dependencyMap[16]);

      case "ett":
        return _$$_REQUIRE(_dependencyMap[17]);

      case "exe":
        return _$$_REQUIRE(_dependencyMap[18]);

      case "fl":
        return _$$_REQUIRE(_dependencyMap[19]);

      case "html":
        return _$$_REQUIRE(_dependencyMap[20]);

      case "mp4":
        return _$$_REQUIRE(_dependencyMap[21]);

      case "mp3":
        return _$$_REQUIRE(_dependencyMap[22]);

      case "mpk":
        return _$$_REQUIRE(_dependencyMap[23]);

      case "mta":
        return _$$_REQUIRE(_dependencyMap[24]);

      case "pdf":
        return _$$_REQUIRE(_dependencyMap[25]);

      case "png":
      case "jpeg":
      case "jpg":
      case "gif":
        return _$$_REQUIRE(_dependencyMap[26]);

      case "pps":
        return _$$_REQUIRE(_dependencyMap[27]);

      case "ppt":
        return _$$_REQUIRE(_dependencyMap[28]);

      case "psd":
        return _$$_REQUIRE(_dependencyMap[29]);

      case "rar":
        return _$$_REQUIRE(_dependencyMap[30]);

      case "swf":
        return _$$_REQUIRE(_dependencyMap[31]);

      case "theme":
        return _$$_REQUIRE(_dependencyMap[32]);

      case "txt":
        return _$$_REQUIRE(_dependencyMap[33]);

      case "vcf":
        return _$$_REQUIRE(_dependencyMap[34]);

      case "wav":
        return _$$_REQUIRE(_dependencyMap[35]);

      case "wma":
        return _$$_REQUIRE(_dependencyMap[36]);

      case "wps":
        return _$$_REQUIRE(_dependencyMap[37]);

      case "xls":
        return _$$_REQUIRE(_dependencyMap[38]);

      case "xml":
        return _$$_REQUIRE(_dependencyMap[39]);

      case "zip":
        return _$$_REQUIRE(_dependencyMap[40]);

      default:
        return _$$_REQUIRE(_dependencyMap[41]);
    }
  };

  var getIcon = function getIcon(item) {
    if (item.type === 1) {
      if (item.isShared) {
        return _react.default.createElement(_reactNative.Image, {
          style: styles.folder,
          source: _$$_REQUIRE(_dependencyMap[42])
        });
      } else {
        return _react.default.createElement(_reactNative.Image, {
          style: styles.folder,
          source: _$$_REQUIRE(_dependencyMap[43])
        });
      }
    } else if (item.type === 2) {
      return _react.default.createElement(_reactNative.Image, {
        style: styles.folder,
        source: _$$_REQUIRE(_dependencyMap[44])
      });
    } else {
      return _react.default.createElement(_reactNative.Image, {
        style: styles.folder,
        source: getFileIcon(item.name)
      });
    }
  };

  exports.getIcon = getIcon;

  var getTransmissionIcon = function getTransmissionIcon(status) {
    if (status === 'stop') {
      return _react.default.createElement(_reactNative.Image, {
        style: styles.editIcon,
        source: _$$_REQUIRE(_dependencyMap[45])
      });
    } else if (status === 'downloading') {
      return _react.default.createElement(_reactNative.Image, {
        style: styles.editIcon,
        source: _$$_REQUIRE(_dependencyMap[46])
      });
    } else if (status === 'error') {
      return _react.default.createElement(_reactNative.Image, {
        style: styles.editIcon,
        source: _$$_REQUIRE(_dependencyMap[47])
      });
    }
  };

  exports.getTransmissionIcon = getTransmissionIcon;

  var formatTime = function formatTime(fmt, timer) {
    var date = new Date(timer);
    var ret;
    var opt = {
      "Y+": date.getFullYear().toString(),
      "m+": (date.getMonth() + 1).toString(),
      "d+": date.getDate().toString(),
      "H+": date.getHours().toString(),
      "M+": date.getMinutes().toString(),
      "S+": date.getSeconds().toString()
    };

    for (var k in opt) {
      ret = new RegExp("(" + k + ")").exec(fmt);

      if (ret) {
        fmt = fmt.replace(ret[1], ret[1].length == 1 ? opt[k] : opt[k].padStart(ret[1].length, "0"));
      }
    }

    return fmt;
  };

  exports.formatTime = formatTime;

  var formatFileSize = function formatFileSize(fileSize) {
    if (fileSize < 1024) {
      return fileSize + 'B';
    } else if (fileSize < 1048576) {
      var temp = fileSize / 1024;
      temp = temp.toFixed(2);
      return temp + 'KB';
    } else if (fileSize < 1073741824) {
      var temp = fileSize / 1048576;
      temp = temp.toFixed(2);
      return temp + 'MB';
    } else {
      var temp = fileSize / 1073741824;
      temp = temp.toFixed(2);
      return temp + 'GB';
    }
  };

  exports.formatFileSize = formatFileSize;

  var sortByModifyTime = function sortByModifyTime(fileList, timeKey) {
    return fileList.sort(function (a, b) {
      return b[timeKey] - a[timeKey];
    });
  };

  exports.sortByModifyTime = sortByModifyTime;

  var getCheckboxIcon = function getCheckboxIcon(item, selectFileArr, editMode, index, isPhone) {
    if (index === 0 && !isPhone) {
      return {
        img: null,
        checked: false
      };
    }

    if (editMode) {
      if (selectFileArr.includes(item)) {
        return {
          img: _react.default.createElement(_reactNative.Image, {
            style: styles.checkbox_i,
            source: _$$_REQUIRE(_dependencyMap[48])
          }),
          checked: true
        };
      } else {
        return {
          img: _react.default.createElement(_reactNative.Image, {
            style: styles.checkbox_i,
            source: _$$_REQUIRE(_dependencyMap[49])
          }),
          checked: false
        };
      }
    } else {
      return {
        img: _react.default.createElement(_reactNative.Image, {
          style: styles.checkbox_i,
          source: _$$_REQUIRE(_dependencyMap[50])
        }),
        checked: false
      };
    }
  };

  exports.getCheckboxIcon = getCheckboxIcon;

  var transmissionListFromStorage = function transmissionListFromStorage() {
    return _regenerator.default.async(function transmissionListFromStorage$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            return _context3.abrupt("return", _miot.Host.storage.get('transmissionList').then(function (value) {
              return value ? value : [];
            }).catch(function (failure) {
              alert(failure);
            }));

          case 1:
          case "end":
            return _context3.stop();
        }
      }
    });
  };

  exports.transmissionListFromStorage = transmissionListFromStorage;

  var getWifiInfo = function getWifiInfo() {
    return _miot.Host.getWifiInfo().then(function (res) {
      return res.BSSID;
    }).catch(function (error) {
      return '';
    });
  };

  var downloadFile = function downloadFile(file, path) {
    var gatewayIp, response, mac, secret, fileName, token, api, isRelay, url;
    return _regenerator.default.async(function downloadFile$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            gatewayIp = '0.0.0.0';
            _context4.next = 3;
            return _regenerator.default.awrap(_miot.System.network.getGatewayIpAddress().then(function (res) {
              return res;
            }).catch(function (res) {
              return res;
            }));

          case 3:
            response = _context4.sent;

            if (response.code === 0) {
              gatewayIp = response.data.ipAddress;
            }

            _context4.next = 7;
            return _regenerator.default.awrap(getWifiInfo());

          case 7:
            mac = _context4.sent;
            _context4.next = 10;
            return _regenerator.default.awrap(_miot.Host.crypto.encodeMD5(mac.toLowerCase()));

          case 10:
            secret = _context4.sent;
            fileName = file.name;
            token = _RouterInfoHelper.default.sharedInstance().getCurrentRouterToken();
            api = '/api/xqdatacenter/download';
            isRelay = _RouterInfoHelper.default.sharedInstance().isWorkingInRelayMode();

            if (isRelay) {
              gatewayIp = _RouterInfoHelper.default.sharedInstance().getCurRelayIp();
            }

            url = 'http://' + gatewayIp + '/cgi-bin/luci/;stok=' + token + api + '?path=' + path + '&secret=' + secret + '&keep-query-for-resume=true';

            _miot.Host.file.downloadFile(url, fileName, {
              taskID: file.taskID
            }).then(function (fileInfo) {
              if (_reactNative.Platform.OS === 'ios') {
                _miot.FileEvent.fileDownloadProgress.emit({
                  filename: fileInfo.filename,
                  totalBytes: 0
                });
              }
            }).catch(function (error) {
              if (error.code === -1 || error.code === -999) {} else if (error.code === -1005) {
                file.status = 'stop';
              } else if (error.code === -1001) {
                file.status = 'error';

                _CommonUtils.default.ShowToastBottom('手机存储空间不足');
              } else {
                file.status = 'error';

                _CommonUtils.default.ShowToastBottom('文件下载失败:' + error.message);
              }
            });

          case 18:
          case "end":
            return _context4.stop();
        }
      }
    });
  };

  exports.downloadFile = downloadFile;

  var cancelDownloadFile = function cancelDownloadFile(taskID) {
    return _miot.Host.file.cancelDownloadFile(taskID);
  };

  exports.cancelDownloadFile = cancelDownloadFile;

  var getSandBoxFileList = function getSandBoxFileList() {
    return _miot.Host.file.readFileList('');
  };

  exports.getSandBoxFileList = getSandBoxFileList;

  var isListEmpty = function isListEmpty(fileList) {
    if (fileList.length === 3 && fileList[1]['name'] === '.' && fileList[2]['name'] === '..') {
      return true;
    }

    return false;
  };

  exports.isListEmpty = isListEmpty;

  var styles = _reactNative.StyleSheet.create({
    folder: {
      width: 40,
      height: 40,
      marginRight: 10
    },
    checkbox_i: {
      width: 20,
      height: 20
    },
    editIcon: {
      width: 30,
      height: 30,
      resizeMode: 'contain'
    }
  });
},10925,[14305,14674,10297,10074,10935,10064,10033,10076,10040,10928,10931,10934,10937,10940,10943,10946,10949,10952,10955,10958,10961,10964,10967,10970,10973,10976,10979,10982,10985,10988,10991,10994,10997,11000,11003,11006,11009,11012,11015,11018,11021,11024,11027,11030,11033,11036,11039,11042,11045,11048,11051]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "781b8d4ad41d1f98d7a1bfc31dd14039",
    "name": "file_list_icon_apk",
    "type": "png"
  });
},10928,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "b249865fb608b2acb2f9ab1b2b9c88ec",
    "name": "file_list_icon_bt",
    "type": "png"
  });
},10931,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "87f2055f2a0f68807fdd33dcfaf2e8c2",
    "name": "file_list_icon_dll",
    "type": "png"
  });
},10934,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "bcfcc871d3f0f6e3d439b28e37e323b6",
    "name": "file_list_icon_dmg",
    "type": "png"
  });
},10937,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "d52fc28c597eacf349490d3c3fee1002",
    "name": "file_list_icon_doc",
    "type": "png"
  });
},10940,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "8d12d617c645d74914ec6f2a4d63dbc1",
    "name": "file_list_icon_dps",
    "type": "png"
  });
},10943,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "2bea39cf7a9171cb2cf3d538b74e18d9",
    "name": "file_list_icon_dpt",
    "type": "png"
  });
},10946,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "9354f22cef574e22d09f970df4a68822",
    "name": "file_list_icon_et",
    "type": "png"
  });
},10949,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "9a614c0a638ebd7458602fa8bb48d399",
    "name": "file_list_icon_ett",
    "type": "png"
  });
},10952,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "33d04dd2c8e4a64bd738cb864636251d",
    "name": "file_list_icon_exe",
    "type": "png"
  });
},10955,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "745839b7cdf6289419d6b58225e05a56",
    "name": "file_list_icon_fl",
    "type": "png"
  });
},10958,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "a3d4c8a07ad59e71333ead32fe2530dc",
    "name": "file_list_icon_html",
    "type": "png"
  });
},10961,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "d9917ed71de81f296f118a63e73fc074",
    "name": "file_list_icon_movie",
    "type": "png"
  });
},10964,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "c8be06a31dbf65a3d583ec86326b66ce",
    "name": "file_list_icon_mp3",
    "type": "png"
  });
},10967,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "aacecccb9936b75e5974101bbd930e8f",
    "name": "file_list_icon_mpk",
    "type": "png"
  });
},10970,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "ed438c8229fa10d695f852125163295c",
    "name": "file_list_icon_mta",
    "type": "png"
  });
},10973,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "0572b6384b12ba10848c5ae811148334",
    "name": "file_list_icon_pdf",
    "type": "png"
  });
},10976,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "c2f18dee080ca2ad143b84570068acb3",
    "name": "file_list_icon_picture",
    "type": "png"
  });
},10979,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "4145acb83014ac5dac11dcaf27cbc9d5",
    "name": "file_list_icon_pps",
    "type": "png"
  });
},10982,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "aaa5e578d590dcfc095a1e86046da26a",
    "name": "file_list_icon_ppt",
    "type": "png"
  });
},10985,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "5a066be0e922e968291ada3f1bee82b2",
    "name": "file_list_icon_psd",
    "type": "png"
  });
},10988,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "d690aed7f55067b15fefe2cb19e0c36b",
    "name": "file_list_icon_rar",
    "type": "png"
  });
},10991,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "73751bab3c8d043d2dc75afb6f6bded4",
    "name": "file_list_icon_swf",
    "type": "png"
  });
},10994,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "91ef441a5f972f484469e1f68ba49f2c",
    "name": "file_list_icon_theme",
    "type": "png"
  });
},10997,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "b5505ca8d6647d3f28cc4ff64cb29001",
    "name": "file_list_icon_txt",
    "type": "png"
  });
},11000,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "6b45e2acbf4124e9e3b0130eee7dd81d",
    "name": "file_list_icon_vcf",
    "type": "png"
  });
},11003,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "200ba3f1e71ec91f875e5ae455678aed",
    "name": "file_list_icon_wav",
    "type": "png"
  });
},11006,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "e1f4e8a63723b8aef126e60349ea0e83",
    "name": "file_list_icon_wma",
    "type": "png"
  });
},11009,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "9b2d0b99bd3decc597d3ee3cfa9187be",
    "name": "file_list_icon_wps",
    "type": "png"
  });
},11012,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "6bff15d77427fd4e7f0bb62c6a9c38e8",
    "name": "file_list_icon_xls",
    "type": "png"
  });
},11015,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "aae9d3eb4f73055d2118e4122a68a54b",
    "name": "file_list_icon_xml",
    "type": "png"
  });
},11018,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "113dc5848259098a044f0166d7f3833c",
    "name": "file_list_icon_zip",
    "type": "png"
  });
},11021,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "e054024c87d9eee4edd9c3e20b15e8b6",
    "name": "file_list_icon_other",
    "type": "png"
  });
},11024,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "6a4e349730db53499e3d2dc933e19cad",
    "name": "file_list_folder_icon_share",
    "type": "png"
  });
},11027,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "4a9f7c447e6e740c08f00f2081dee430",
    "name": "file_list_folder_icon_normal",
    "type": "png"
  });
},11030,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "9aac18f9f48ed254dc454dd9747667dc",
    "name": "file_list_icon_back",
    "type": "png"
  });
},11033,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "0997fbd7157d8fdb02a7bc34294302fa",
    "name": "file_download_icon_continue",
    "type": "png"
  });
},11036,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "4850df00f3e4987d2e5222a408ac0d83",
    "name": "file_download_icon_stop",
    "type": "png"
  });
},11039,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "ed785b6731ae44e537400a7b7b844eec",
    "name": "file_download_icon_refresh",
    "type": "png"
  });
},11042,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "cf4c4b5adfab46222e03e88004ac291b",
    "name": "common_file_icon_checkbox_p",
    "type": "png"
  });
},11045,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "ecb4b374caf04078f507e7af41bac36f",
    "name": "common_file_icon_checkbox_n",
    "type": "png"
  });
},11048,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "bd30c2fdfab1d6d1c5ccc385ea1e6d46",
    "name": "common_file_icon_checkbox_i",
    "type": "png"
  });
},11051,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _FileUtils = _$$_REQUIRE(_dependencyMap[10]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Editbar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[14]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var NEW_FOLDER = '新建文件夹';

  var USB = function (_React$Component) {
    (0, _inherits2.default)(USB, _React$Component);

    function USB(props) {
      var _this;

      (0, _classCallCheck2.default)(this, USB);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(USB).call(this, props));

      _this.init = function _callee() {
        var _ref, code, allpath;

        return _regenerator.default.async(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return _regenerator.default.awrap((0, _FileUtils.fileRequest)({
                  api: 17
                }));

              case 2:
                _ref = _context.sent;
                code = _ref.code;
                allpath = _ref.allpath;

                if (!(code === 0)) {
                  _context.next = 13;
                  break;
                }

                if (!(allpath.length === 0)) {
                  _context.next = 11;
                  break;
                }

                _context.next = 9;
                return _regenerator.default.awrap(_this.init());

              case 9:
                _context.next = 13;
                break;

              case 11:
                _this.rootPathArr = allpath;

                _this.showPartitionList();

              case 13:
              case "end":
                return _context.stop();
            }
          }
        });
      };

      _this.showPartitionList = function () {
        _this.setState({
          fileList: _this.rootPathArr,
          path: _this.pathDefault,
          fileLoadError: false,
          isRoot: true
        });
      };

      _this.goToPartition = function _callee2(item) {
        return _regenerator.default.async(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _this.rootPath = item.path;
                _context2.next = 3;
                return _regenerator.default.awrap(_this.getFileListFromPath(item.path, true));

              case 3:
              case "end":
                return _context2.stop();
            }
          }
        });
      };

      _this.goToPath = function _callee3(item, index, checked) {
        var selectFileArr, pathName, pathNameStr;
        return _regenerator.default.async(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (!_this.state.editMode) {
                  _context3.next = 9;
                  break;
                }

                if (!(item.type === 2)) {
                  _context3.next = 3;
                  break;
                }

                return _context3.abrupt("return");

              case 3:
                selectFileArr = _this.state.selectFileArr;
                selectFileArr.splice();

                if (checked) {
                  selectFileArr.splice(selectFileArr.indexOf(item), 1);
                } else {
                  selectFileArr.push(item);
                }

                if (selectFileArr.length !== 0) {
                  _this.setState({
                    selectFileArr: selectFileArr
                  });
                } else {
                  _this.setState({
                    selectFileArr: selectFileArr,
                    editMode: false
                  });
                }

                _context3.next = 27;
                break;

              case 9:
                if (!(item.type === 1 || item.type === 2)) {
                  _context3.next = 26;
                  break;
                }

                pathName = _this.state.path.split('/');

                if (!(item.type === 2)) {
                  _context3.next = 20;
                  break;
                }

                if (!(_this.rootPath === _this.state.path)) {
                  _context3.next = 17;
                  break;
                }

                _this.showPartitionList();

                return _context3.abrupt("return", false);

              case 17:
                pathName.pop();

              case 18:
                _context3.next = 21;
                break;

              case 20:
                pathName.push(item.name);

              case 21:
                pathNameStr = pathName.join('/').trim();
                _context3.next = 24;
                return _regenerator.default.awrap(_this.getFileListFromPath(pathNameStr));

              case 24:
                _context3.next = 27;
                break;

              case 26:
                _CommonUtils.default.ShowToastBottom('请先下载文件');

              case 27:
              case "end":
                return _context3.stop();
            }
          }
        });
      };

      _this.getFileListFromPath = function _callee4(pathNameStr) {
        return _regenerator.default.async(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _this.setState({
                  'isShowLoading': true,
                  loadingText: '加载数据中...'
                });

                (0, _FileUtils.getParseEnumDirectory)(pathNameStr, _this.state.rootPath, function (response) {
                  var isFileListEmpty = (0, _FileUtils.isListEmpty)(response);

                  _this.setState({
                    fileList: response,
                    path: pathNameStr,
                    isShowLoading: false,
                    isRoot: false,
                    isFileListEmpty: isFileListEmpty
                  });
                }, function (response) {
                  if (response.code === 1071) {
                    _this.setState({
                      fileLoadError: true,
                      isShowLoading: false
                    });
                  }
                });

              case 2:
              case "end":
                return _context4.stop();
            }
          }
        });
      };

      _this.editItem = function (item, index, checked) {
        if (_this.state.editMode || item.type === 2) return;
        var selectFileArr = _this.state.selectFileArr;
        selectFileArr.push(item);

        _this.setState({
          editMode: true,
          selectFileArr: selectFileArr
        });
      };

      _this.iconToEditItem = function (item, index, checked) {
        if (_this.state.editMode) {
          _this.goToPath(item, index, checked);
        } else {
          _this.editItem(item, index, checked);
        }
      };

      _this.setStateValue = function (state) {
        _this.setState((0, _objectSpread2.default)({}, state));
      };

      _this.renderFileItem = function (item, index) {
        if (!item.ishidden) {
          var checkbox = (0, _FileUtils.getCheckboxIcon)(item, _this.state.selectFileArr, _this.state.editMode, index);
          return _react.default.createElement(_reactNative.TouchableOpacity, {
            onLongPress: function onLongPress() {
              _this.editItem(item, index);
            },
            onPress: function onPress() {
              _this.goToPath(item, index, checkbox.checked);
            },
            key: index
          }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
            style: styles.fileItem
          }, _react.default.createElement(_reactNative.View, {
            style: styles.fileItemLeft
          }, (0, _FileUtils.getIcon)(item), _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, {
            style: styles.fileName,
            numberOfLines: 1
          }, item.name), _react.default.createElement(_reactNative.View, {
            style: styles.fileInfo
          }, item.modifyTime ? _react.default.createElement(_reactNative.Text, {
            style: styles.fileTime
          }, (0, _FileUtils.formatTime)("YYYY-mm-dd", item.modifyTime * 1000)) : null, item.size > 0 ? _react.default.createElement(_reactNative.Text, {
            style: styles.fileSize,
            numberOfLines: 1
          }, (0, _FileUtils.formatFileSize)(item.size)) : null))), _react.default.createElement(_reactNative.TouchableOpacity, {
            onPress: function onPress() {
              _this.iconToEditItem(item, index, checkbox.checked);
            }
          }, checkbox.img)));
        } else {
          return null;
        }
      };

      _this.renderRootItem = function (item, index) {
        return _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            _this.goToPartition(item, index);
          },
          key: index
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
          style: styles.fileItem
        }, _react.default.createElement(_reactNative.View, {
          style: styles.fileItemLeft
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            width: 40,
            height: 40,
            marginRight: 10
          },
          source: _$$_REQUIRE(_dependencyMap[16])
        }), _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, {
          style: styles.fileName,
          numberOfLines: 1
        }, item.label), _react.default.createElement(_reactNative.View, {
          style: styles.fileInfo
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.fileSize
        }, "\u53EF\u7528\u7A7A\u95F4", (0, _FileUtils.formatFileSize)(item.available)), _react.default.createElement(_reactNative.Text, {
          style: [styles.fileSize, {
            marginHorizontal: 10
          }]
        }, "|"), _react.default.createElement(_reactNative.Text, {
          style: styles.fileSize
        }, "\u5171", (0, _FileUtils.formatFileSize)(item.capacity)))))));
      };

      _this.cancelHandler = function () {
        _this.setState({
          editMode: false,
          isAllSelected: false,
          selectFileArr: []
        });
      };

      _this.selectAllHandler = function () {
        var flag = !_this.state.isAllSelected;
        var selectFileArr = flag ? _this.state.fileList.filter(function (item) {
          return item.type !== 2 && item.name !== '.' && item.name !== '..';
        }) : [];

        _this.setState({
          isAllSelected: flag,
          selectFileArr: selectFileArr
        });
      };

      _this.uploadHandler = function _callee5() {
        return _regenerator.default.async(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return _regenerator.default.awrap((0, _FileUtils.uploadFile)(_this.state.path));

              case 2:
              case "end":
                return _context5.stop();
            }
          }
        });
      };

      _this.newFolderHandler = function _callee6() {
        var newFolderName, name, response;
        return _regenerator.default.async(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                newFolderName = _this.state.newFolderName.trim();

                if (!(newFolderName !== '')) {
                  _context6.next = 14;
                  break;
                }

                name = _this.state.path + '/' + newFolderName;
                _context6.next = 5;
                return _regenerator.default.awrap((0, _FileUtils.newFolder)(name));

              case 5:
                response = _context6.sent;

                if (!(response.code === 0)) {
                  _context6.next = 11;
                  break;
                }

                _context6.next = 9;
                return _regenerator.default.awrap(_this.getFileListFromPath(name));

              case 9:
                _context6.next = 12;
                break;

              case 11:
                if (response.code === 1007) {
                  _CommonUtils.default.ShowToastBottom('文件名已存在');
                } else if (response.code === 1063) {
                  _CommonUtils.default.ShowToastBottom('文件名不合法');
                } else {
                  _CommonUtils.default.ShowToastBottom('新建失败，代码：' + response.code);
                }

              case 12:
                _context6.next = 15;
                break;

              case 14:
                _CommonUtils.default.ShowToastBottom('文件名不能为空');

              case 15:
              case "end":
                return _context6.stop();
            }
          }
        });
      };

      _this.pathDefault = '如果磁盘显示不全，请退出重进';
      _this.state = {
        fileList: [],
        path: _this.pathDefault,
        editMode: false,
        isAllSelected: false,
        selectFileArr: [],
        isShowNewFolderDialog: false,
        rootPath: '',
        newFolderName: NEW_FOLDER,
        fileLoadError: false,
        isFileListEmpty: false,
        isRoot: true
      };
      _this.partitionList = [];
      return _this;
    }

    (0, _createClass2.default)(USB, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        return _regenerator.default.async(function componentDidMount$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return _regenerator.default.awrap(this.init());

              case 2:
                this.deEmitter = _reactNative.DeviceEventEmitter.addListener('USBreLoadFileList', function (path) {
                  _this2.setState({
                    editMode: false,
                    selectFileArr: []
                  });

                  _this2.getFileListFromPath(_this2.state.path);
                });

              case 3:
              case "end":
                return _context7.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.deEmitter.remove();
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.top
        }, _react.default.createElement(_reactNative.View, {
          style: styles.infoBar
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.title, styles.path]
        }, this.state.path), this.state.path !== this.pathDefault && !this.state.editMode && !this.state.fileLoadError && _react.default.createElement(_reactNative.View, {
          style: styles.pathRight
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title,
          onPress: function onPress() {
            _this3.setState({
              isShowNewFolderDialog: true,
              newFolderName: NEW_FOLDER
            });
          }
        }, "\u65B0\u5EFA")), this.state.editMode && _react.default.createElement(_reactNative.View, {
          style: styles.btnContent
        }, _react.default.createElement(_reactNative.Text, {
          onPress: this.selectAllHandler,
          style: styles.title
        }, this.state.isAllSelected ? '全不选' : '全选'), _react.default.createElement(_reactNative.Text, {
          style: styles.cancel,
          onPress: this.cancelHandler
        }, "\u53D6\u6D88"))), !this.state.fileLoadError ? _react.default.createElement(_reactNative.View, {
          style: styles.fileListContent
        }, _react.default.createElement(_reactNative.FlatList, {
          data: this.state.fileList,
          style: styles.fileList,
          renderItem: function renderItem(_ref2) {
            var item = _ref2.item,
                index = _ref2.index;

            if (_this3.state.isRoot) {
              return _this3.renderRootItem(item, index);
            } else {
              return _this3.renderFileItem(item, index);
            }
          }
        }), this.state.isFileListEmpty && _react.default.createElement(_reactNative.View, {
          style: styles.fileListEmpty
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.errorImage,
          source: _$$_REQUIRE(_dependencyMap[17])
        }), _react.default.createElement(_reactNative.Text, null, "\u6587\u4EF6\u76EE\u5F55\u4E3A\u7A7A"))) : _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: this.init,
          style: styles.fileLoadError
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.errorImage,
          source: _$$_REQUIRE(_dependencyMap[17])
        }), _react.default.createElement(_reactNative.Text, null, "\u52A0\u8F7D\u5931\u8D25\uFF0C\u8BF7\u70B9\u51FB\u91CD\u8BD5"))), this.state.editMode && _react.default.createElement(_Editbar.default, {
          path: this.state.path,
          rootPath: this.state.rootPath,
          selectFileArr: this.state.selectFileArr
        }), _react.default.createElement(_LoadingDialog.default, {
          visible: this.state.isShowLoading,
          message: this.state.loadingText
        }), _react.default.createElement(_Dialog.InputDialog, {
          visible: this.state.isShowNewFolderDialog,
          onDismiss: function onDismiss() {
            _this3.setState({
              isShowNewFolderDialog: false
            });
          },
          inputs: [{
            placeholder: NEW_FOLDER,
            defaultValue: NEW_FOLDER,
            textInputProps: {
              autoFocus: true
            },
            onChangeText: function onChangeText(text) {
              _this3.setState({
                newFolderName: text
              });
            }
          }],
          title: NEW_FOLDER,
          buttons: [{
            text: '取消',
            callback: function callback(_) {
              _this3.setState({
                isShowNewFolderDialog: false
              });
            }
          }, {
            text: '确定',
            callback: function callback(result) {
              _this3.setState({
                isShowNewFolderDialog: false
              });

              _this3.newFolderHandler();
            }
          }]
        }));
      }
    }]);
    return USB;
  }(_react.default.Component);

  exports.default = USB;

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      padding: 10,
      flex: 1,
      justifyContent: 'space-between'
    },
    uploadBtn: {
      borderWidth: 2,
      borderColor: '#449816',
      backgroundColor: '#8cc14b',
      width: 60,
      height: 60,
      borderRadius: 30,
      alignItems: 'center',
      justifyContent: 'center',
      position: 'absolute',
      bottom: 80,
      marginLeft: -15,
      left: '50%'
    },
    uploadBtnText: {
      color: '#fff',
      fontSize: 14
    },
    infoBar: {
      justifyContent: 'space-between',
      paddingBottom: 10,
      flexDirection: 'row'
    },
    path: {
      width: 250
    },
    title: {
      fontSize: 12
    },
    uploadText: {
      marginLeft: 10
    },
    pathRight: {
      flexDirection: 'row'
    },
    btnContent: {
      flexDirection: 'row',
      fontSize: 12
    },
    detailBtn: {
      borderWidth: .5,
      borderColor: '#dedede',
      borderRadius: 15,
      justifyContent: 'center',
      alignItems: 'center',
      width: '90%',
      textAlign: 'center',
      padding: 8,
      marginBottom: 20,
      color: '#000',
      fontWeight: 'normal'
    },
    fileItem: {
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center',
      paddingTop: 10,
      paddingBottom: 10
    },
    fileItemLeft: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    fileInfo: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    fileName: {
      width: 240,
      color: '#000'
    },
    fileTime: {
      fontSize: 12,
      color: '#999',
      marginRight: 5
    },
    fileSize: {
      fontSize: 12,
      color: '#999'
    },
    top: {
      flex: 1
    },
    fileLoadError: {
      alignItems: 'center',
      justifyContent: 'center',
      flex: 1
    },
    errorImage: {
      width: 300,
      height: 150,
      resizeMode: 'contain'
    },
    cancel: {
      marginLeft: 10,
      fontSize: 12
    },
    fileList: {},
    fileListContent: {
      justifyContent: 'center',
      flex: 1
    },
    fileListEmpty: {
      flex: 3,
      alignItems: 'center'
    }
  });
},11054,[14305,14314,14674,14320,14323,14371,14377,14386,10297,10033,10925,10332,10740,11057,10755,10040,11105,11108]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _FileUtils = _$$_REQUIRE(_dependencyMap[9]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[10]);

  var _miot = _$$_REQUIRE(_dependencyMap[11]);

  var _Detail = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Share = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Rename = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Delete = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _Download = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var Editbar = function (_React$Component) {
    (0, _inherits2.default)(Editbar, _React$Component);

    function Editbar(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Editbar);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Editbar).call(this, props));

      _this.componentDidMount = function () {};

      _this.state = {
        selectFileArr: props.selectFileArr,
        path: props.path,
        rootPath: props.rootPath
      };
      _this.lastTime = 0;
      return _this;
    }

    (0, _createClass2.default)(Editbar, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps, nextContext) {
        this.setState({
          selectFileArr: nextProps.selectFileArr,
          path: nextProps.path,
          rootPath: nextProps.rootPath
        });
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.editBar
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
          style: styles.itemContent
        }, _react.default.createElement(_Download.default, {
          path: this.state.path,
          selectFileArr: this.state.selectFileArr
        }), _react.default.createElement(_Delete.default, {
          path: this.state.path,
          selectFileArr: this.state.selectFileArr
        }), _react.default.createElement(_Rename.default, {
          path: this.state.path,
          selectFileArr: this.state.selectFileArr
        }), _react.default.createElement(_Detail.default, {
          path: this.state.path,
          rootPath: this.state.rootPath,
          selectFileArr: this.state.selectFileArr
        }), _react.default.createElement(_Share.default, {
          path: this.state.path,
          rootPath: this.state.rootPath,
          selectFileArr: this.state.selectFileArr
        })));
      }
    }]);
    return Editbar;
  }(_react.default.Component);

  exports.default = Editbar;

  var styles = _reactNative.StyleSheet.create({
    itemContent: {
      flexDirection: 'row',
      justifyContent: 'space-around'
    }
  });
},11057,[14305,14320,14323,14371,14377,14386,10297,10033,10332,10925,10755,10074,11060,11072,11081,11090,11096]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _FileUtils = _$$_REQUIRE(_dependencyMap[8]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[9]);

  var _Style = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var Detail = function (_React$Component) {
    (0, _inherits2.default)(Detail, _React$Component);

    function Detail(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Detail);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Detail).call(this, props));

      _this.componentDidMount = function () {
        _this.checkIsCanDetail();
      };

      _this.checkIsCanDetail = function () {
        var disable = _this.state.selectFileArr.length !== 1 ? true : false;

        _this.setState({
          disable: disable
        });
      };

      _this.detailHandler = function () {
        if (!_this.state.disable) {
          var file = _this.state.selectFileArr[0];
          var fileName = file.name;
          var path = (_this.state.path + '/' + fileName).replace(_this.state.rootPath, '可移动磁盘');
          var time = (0, _FileUtils.formatTime)("YYYY-mm-dd HH:MM", file.modifyTime * 1000);
          var size = file.size;
          var fileDetailInfo = '文件名：' + fileName + '\n' + '位置：' + path + '\n' + '时间：' + time + '\n' + (size !== 0 ? '大小：' + (0, _FileUtils.formatFileSize)(size) : '');

          _this.setState({
            isShowDialog: true,
            fileDetailInfo: fileDetailInfo
          });
        }
      };

      _this.state = {
        disable: false,
        selectFileArr: props.selectFileArr,
        path: props.path,
        rootPath: props.rootPath,
        isShowDialog: false
      };
      return _this;
    }

    (0, _createClass2.default)(Detail, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps, nextContext) {
        var _this2 = this;

        this.setState({
          selectFileArr: nextProps.selectFileArr,
          path: nextProps.path,
          rootPath: nextProps.rootPath
        }, function () {
          _this2.checkIsCanDetail();
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: this.detailHandler,
          style: _Style.default.item
        }, this.state.disable ? _react.default.createElement(_reactNative.Image, {
          style: _Style.default.icon,
          source: _$$_REQUIRE(_dependencyMap[11])
        }) : _react.default.createElement(_reactNative.Image, {
          style: _Style.default.icon,
          source: _$$_REQUIRE(_dependencyMap[12])
        }), _react.default.createElement(_reactNative.Text, {
          style: this.state.disable ? [_Style.default.txt, _Style.default.disable] : _Style.default.txt
        }, "\u8BE6\u60C5")), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.isShowDialog,
          showTitle: true,
          title: "\u8BE6\u60C5",
          canDismiss: true,
          buttons: [{
            text: '我知道了',
            style: styles.detailBtn,
            callback: function callback(_) {
              return _this3.setState({
                isShowDialog: false
              });
            }
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.messageContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.message
        }, this.state.fileDetailInfo))));
      }
    }]);
    return Detail;
  }(_react.default.Component);

  exports.default = Detail;

  var styles = _reactNative.StyleSheet.create({
    messageContainer: {
      paddingLeft: 20,
      paddingRight: 20,
      paddingBottom: 20
    },
    detailBtn: {
      color: '#000'
    },
    message: {
      width: 280
    }
  });
},11060,[14305,14320,14323,14371,14377,14386,10297,10033,10925,10755,11063,11066,11069]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _default = _reactNative.StyleSheet.create({
    editBar: {},
    itemContent: {
      flexDirection: 'row',
      justifyContent: 'space-around'
    },
    icon: {
      width: 40,
      height: 40
    },
    txt: {
      fontSize: 12
    },
    disable: {
      color: '#dedede'
    },
    item: {
      alignItems: 'center'
    }
  });

  exports.default = _default;
},11063,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "1e2a284a83982f4a071f4529bc08e408",
    "name": "common_menu_icon_info_disable",
    "type": "png"
  });
},11066,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "59b637250ca9d61a31d2292176321fdc",
    "name": "common_menu_icon_info_normal",
    "type": "png"
  });
},11069,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _FileUtils = _$$_REQUIRE(_dependencyMap[9]);

  var _Style = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var Share = function (_React$Component) {
    (0, _inherits2.default)(Share, _React$Component);

    function Share(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Share);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Share).call(this, props));

      _this.componentDidMount = function () {
        _this.checkIsCanShare();
      };

      _this.checkIsCanShare = function () {
        var disable;

        if (_this.state.selectFileArr.length !== 1) {
          disable = true;
        } else {
          var file = _this.state.selectFileArr[0];
          disable = file.type !== 1 ? true : false;

          if (!disable) {
            _this.setState({
              isShared: file.isShared
            });
          }
        }

        _this.setState({
          disable: disable
        });
      };

      _this.shareHandler = function _callee() {
        var file, path, response;
        return _regenerator.default.async(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (_this.state.disable) {
                  _context.next = 15;
                  break;
                }

                file = _this.state.selectFileArr[0];
                path = [_this.state.path + '/' + file.name];

                if (!file.isShared) {
                  _context.next = 10;
                  break;
                }

                _this.setState({
                  isShowLoading: true,
                  loadingText: '正在取消共享...'
                });

                _context.next = 7;
                return _regenerator.default.awrap((0, _FileUtils.fileRequest)({
                  api: 71,
                  addPaths: [],
                  delPaths: path
                }));

              case 7:
                response = _context.sent;
                _context.next = 14;
                break;

              case 10:
                _this.setState({
                  isShowLoading: true,
                  loadingText: '正在设置共享...'
                });

                _context.next = 13;
                return _regenerator.default.awrap((0, _FileUtils.fileRequest)({
                  api: 71,
                  addPaths: path,
                  delPaths: []
                }));

              case 13:
                response = _context.sent;

              case 14:
                if (response.code === 0) {
                  _reactNative.DeviceEventEmitter.emit('USBreLoadFileList');
                } else {
                  _CommonUtils.default.ShowToastBottom('设置失败，代码：' + response.code);

                  _this.setState({
                    isShowLoading: false
                  });
                }

              case 15:
              case "end":
                return _context.stop();
            }
          }
        });
      };

      _this.state = {
        disable: false,
        selectFileArr: props.selectFileArr,
        path: props.path,
        rootPath: props.rootPath,
        isShowLoading: false
      };
      return _this;
    }

    (0, _createClass2.default)(Share, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps, nextContext) {
        var _this2 = this;

        this.setState({
          selectFileArr: nextProps.selectFileArr,
          path: nextProps.path,
          rootPath: nextProps.rootPath,
          isShared: false
        }, function () {
          _this2.checkIsCanShare();
        });
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: this.shareHandler,
          style: _Style.default.item
        }, this.state.disable ? _react.default.createElement(_reactNative.Image, {
          style: _Style.default.icon,
          source: _$$_REQUIRE(_dependencyMap[13])
        }) : _react.default.createElement(_reactNative.Image, {
          style: _Style.default.icon,
          source: _$$_REQUIRE(_dependencyMap[14])
        }), _react.default.createElement(_reactNative.Text, {
          style: this.state.disable ? [_Style.default.txt, _Style.default.disable] : _Style.default.txt
        }, this.state.isShared ? '取消共享' : '共享')), _react.default.createElement(_LoadingDialog.default, {
          visible: this.state.isShowLoading,
          message: this.state.loadingText
        }));
      }
    }]);
    return Share;
  }(_react.default.Component);

  exports.default = Share;
},11072,[14305,14674,14320,14323,14371,14377,14386,10297,10033,10925,11063,10740,10040,11075,11078]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "8a9291b8a6177571bb69978f3847e3da",
    "name": "common_menu_icon_share_dis",
    "type": "png"
  });
},11075,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "1570c0d292e2b8f828b3e364a04e6d45",
    "name": "common_menu_icon_share_normal",
    "type": "png"
  });
},11078,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _FileUtils = _$$_REQUIRE(_dependencyMap[9]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[10]);

  var _Style = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var Detail = function (_React$Component) {
    (0, _inherits2.default)(Detail, _React$Component);

    function Detail(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Detail);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Detail).call(this, props));

      _this.componentDidMount = function () {
        _this.checkIsCanDetail();
      };

      _this.checkIsCanDetail = function () {
        var disable = _this.state.selectFileArr.length !== 1 ? true : false;

        _this.setState({
          disable: disable
        });
      };

      _this.isShowDialog = function () {
        if (!_this.state.disable) {
          var file = _this.state.selectFileArr[0];
          var oldName = file.name;
          _this.oldName = file.name;

          _this.setState({
            isShowDialog: true,
            oldName: oldName,
            newName: oldName
          });
        }
      };

      _this.renameHandler = function _callee() {
        var source, target, _ref, code;

        return _regenerator.default.async(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!(_this.oldName === _this.state.newName)) {
                  _context.next = 4;
                  break;
                }

                _this.setState({
                  disable: false
                });

                _reactNative.DeviceEventEmitter.emit('USBreLoadFileList');

                return _context.abrupt("return");

              case 4:
                source = _this.state.path + '/' + _this.state.oldName;
                target = _this.state.path + '/' + _this.state.newName;

                if (_reactNative.Platform.OS === 'android') {
                  _this.setState({
                    isShowLoading: true,
                    loadingText: '正在修改名称...'
                  });
                }

                _context.next = 9;
                return _regenerator.default.awrap((0, _FileUtils.fileRequest)({
                  api: 50,
                  source: source,
                  target: target
                }));

              case 9:
                _ref = _context.sent;
                code = _ref.code;

                _this.setState({
                  isShowLoading: false
                });

                if (code === 0) {
                  _reactNative.DeviceEventEmitter.emit('USBreLoadFileList');
                } else if (code === 1007) {
                  _CommonUtils.default.ShowToastBottom('文件名已存在');
                } else if (code === 1063) {
                  _CommonUtils.default.ShowToastBottom('文件名不合法');
                } else {
                  _CommonUtils.default.ShowToastBottom('重命名失败，代码：' + code);
                }

              case 13:
              case "end":
                return _context.stop();
            }
          }
        });
      };

      _this.state = {
        disable: false,
        selectFileArr: props.selectFileArr,
        path: props.path,
        isisShowDialog: false,
        isShowLoading: false
      };
      return _this;
    }

    (0, _createClass2.default)(Detail, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps, nextContext) {
        var _this2 = this;

        this.setState({
          selectFileArr: nextProps.selectFileArr,
          path: nextProps.path
        }, function () {
          _this2.checkIsCanDetail();
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: this.isShowDialog,
          style: _Style.default.item
        }, this.state.disable ? _react.default.createElement(_reactNative.Image, {
          style: _Style.default.icon,
          source: _$$_REQUIRE(_dependencyMap[14])
        }) : _react.default.createElement(_reactNative.Image, {
          style: _Style.default.icon,
          source: _$$_REQUIRE(_dependencyMap[15])
        }), _react.default.createElement(_reactNative.Text, {
          style: this.state.disable ? [_Style.default.txt, _Style.default.disable] : _Style.default.txt
        }, "\u91CD\u547D\u540D")), _react.default.createElement(_Dialog.InputDialog, {
          visible: this.state.isShowDialog,
          inputs: [{
            placeholder: '新名字',
            defaultValue: this.state.oldName,
            textInputProps: {
              autoFocus: true
            },
            onChangeText: function onChangeText(text) {
              if (_this3.state.newName) {
                _this3.state.newName = text;
              } else {
                _this3.state.newName = text;
              }
            }
          }],
          title: "\u91CD\u547D\u540D",
          buttons: [{
            text: '取消',
            callback: function callback(_) {
              _this3.setState({
                isShowDialog: false
              });
            }
          }, {
            text: '确定',
            callback: function callback(result) {
              _this3.setState({
                isShowDialog: false
              });

              _this3.renameHandler();
            }
          }]
        }), _react.default.createElement(_LoadingDialog.default, {
          visible: this.state.isShowLoading,
          message: this.state.loadingText
        }));
      }
    }]);
    return Detail;
  }(_react.default.Component);

  exports.default = Detail;
},11081,[14305,14674,14320,14323,14371,14377,14386,10297,10033,10925,10755,11063,10740,10040,11084,11087]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "b3bb0b803fba0c63165a4f89459ffb0c",
    "name": "common_menu_icon_edit_dis",
    "type": "png"
  });
},11084,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "97d87318e1cc0c033db8b876f1f5a42e",
    "name": "common_menu_icon_edit_normal",
    "type": "png"
  });
},11087,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _FileUtils = _$$_REQUIRE(_dependencyMap[9]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[10]);

  var _Style = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _ui = _$$_REQUIRE(_dependencyMap[13]);

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[14]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var dialogButtonName = [_RouterLocalizedStringUtil.localStrings.alertOKTitle, _RouterLocalizedStringUtil.localStrings.alertCancelTitle, _RouterLocalizedStringUtil.localStrings.alertTipText];

  var Delete = function (_React$Component) {
    (0, _inherits2.default)(Delete, _React$Component);

    function Delete(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Delete);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Delete).call(this, props));

      _this.componentDidMount = function () {};

      _this.deleteHandler = function _callee() {
        var pathArr, typeArr, path, type, _ref, code;

        return _regenerator.default.async(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                pathArr = [], typeArr = [];

                _this.state.selectFileArr.map(function (file, index) {
                  pathArr.push(_this.state.path + '/' + file.name);
                  typeArr.push(file.type);
                });

                path = pathArr.join(';');
                type = typeArr.join(';');

                _this.setState({
                  isShowLoading: true,
                  loadingText: '正在删除文件...'
                });

                _context.next = 7;
                return _regenerator.default.awrap((0, _FileUtils.fileRequest)({
                  api: 2,
                  path: path,
                  type: type
                }));

              case 7:
                _ref = _context.sent;
                code = _ref.code;

                if (code === 0) {
                  _reactNative.DeviceEventEmitter.emit('USBreLoadFileList');
                } else {
                  _CommonUtils.default.ShowToastBottom('删除失败，代码：' + code);

                  _this.setState({
                    isShowLoading: false
                  });
                }

              case 10:
              case "end":
                return _context.stop();
            }
          }
        });
      };

      _this.state = {
        selectFileArr: props.selectFileArr,
        path: props.path,
        isShowDialog: false,
        isShowLoading: false
      };
      return _this;
    }

    (0, _createClass2.default)(Delete, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps, nextContext) {
        this.setState({
          selectFileArr: nextProps.selectFileArr,
          path: nextProps.path
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            _this2.setState({
              isShowDialog: true
            });
          },
          style: _Style.default.item
        }, _react.default.createElement(_reactNative.Image, {
          style: _Style.default.icon,
          source: _$$_REQUIRE(_dependencyMap[16])
        }), _react.default.createElement(_reactNative.Text, {
          style: _Style.default.txt
        }, "\u5220\u9664")), _react.default.createElement(_ui.MessageDialog, {
          title: dialogButtonName[2],
          message: '确定要删除吗？',
          cancelable: false,
          cancel: dialogButtonName[1],
          confirm: dialogButtonName[0],
          onConfirm: function onConfirm(e) {
            _this2.deleteHandler();
          },
          onDismiss: function onDismiss() {
            _this2.setState({
              isShowDialog: false
            });
          },
          visible: this.state.isShowDialog
        }), _react.default.createElement(_LoadingDialog.default, {
          visible: this.state.isShowLoading,
          message: this.state.loadingText
        }));
      }
    }]);
    return Delete;
  }(_react.default.Component);

  exports.default = Delete;
},11090,[14305,14674,14320,14323,14371,14377,14386,10297,10033,10925,10755,11063,10740,10230,10055,10040,11093]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "d226c632ef0961a10832308f44301706",
    "name": "common_menu_icon_delete_normal",
    "type": "png"
  });
},11093,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _FileUtils = _$$_REQUIRE(_dependencyMap[9]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[10]);

  var _Style = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _miot = _$$_REQUIRE(_dependencyMap[13]);

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _Host = _$$_REQUIRE(_dependencyMap[16]);

  var Download = function (_React$Component) {
    (0, _inherits2.default)(Download, _React$Component);

    function Download(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Download);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Download).call(this, props));

      _this.componentDidMount = function _callee() {
        var isInRelayMode, isConnRouter;
        return _regenerator.default.async(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _this.checkIsCanDownload();

                isInRelayMode = _RouterInfoHelper.default.sharedInstance().isWorkingInRelayMode();
                isConnRouter = true;

                if (!isInRelayMode) {
                  _context.next = 9;
                  break;
                }

                _context.next = 6;
                return _regenerator.default.awrap(_RouterInfoHelper.default.sharedInstance().syncCheckRelayConnectRouter());

              case 6:
                isConnRouter = _context.sent;
                _context.next = 12;
                break;

              case 9:
                _context.next = 11;
                return _regenerator.default.awrap(_RouterInfoHelper.default.sharedInstance().synCheckConnRouter());

              case 11:
                isConnRouter = _context.sent;

              case 12:
                _this.setState({
                  isConnRouter: isConnRouter
                });

                _Host.HostEvent.cellPhoneNetworkStateChanged.addListener(function (networkInfo) {
                  setTimeout(_this.reCheckConnRouter, 1000);
                });

              case 14:
              case "end":
                return _context.stop();
            }
          }
        });
      };

      _this.reCheckConnRouter = function _callee2() {
        var isConnRouter;
        return _regenerator.default.async(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return _regenerator.default.awrap(_RouterInfoHelper.default.sharedInstance().synCheckConnRouter());

              case 2:
                isConnRouter = _context2.sent;

                _this.setState({
                  isConnRouter: isConnRouter
                });

              case 4:
              case "end":
                return _context2.stop();
            }
          }
        });
      };

      _this.checkIsCanDownload = function () {
        var file = _this.state.selectFileArr.find(function (item) {
          return item.type === 1;
        });

        var disable = file ? true : false;

        _this.setState({
          disable: disable
        });
      };

      _this._downLoadFile = function _callee3() {
        var startDownloadFileList, _loop, _iterator, _isArray, _i, _ref, file;

        return _regenerator.default.async(function _callee3$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                if (_this.state.isConnRouter) {
                  _context4.next = 3;
                  break;
                }

                _CommonUtils.default.ShowToastBottom('请连接路由器内网进行下载');

                return _context4.abrupt("return", false);

              case 3:
                _context4.next = 5;
                return _regenerator.default.awrap((0, _FileUtils.transmissionListFromStorage)());

              case 5:
                _this.transmissionList = _context4.sent;
                startDownloadFileList = [];

                _loop = function _loop(file) {
                  var downloadingFile, path;
                  return _regenerator.default.async(function _loop$(_context3) {
                    while (1) {
                      switch (_context3.prev = _context3.next) {
                        case 0:
                          downloadingFile = _this.transmissionList.find(function (item) {
                            return item.name === file.name && item.size === file.size && item.status === 'downloading';
                          });

                          if (downloadingFile) {
                            _context3.next = 11;
                            break;
                          }

                          path = encodeURI(_this.state.path + '/' + file.name);
                          file.status = 'downloading';
                          file.path = path;
                          file.taskID = path + new Date().getTime();
                          startDownloadFileList.push(file);
                          _context3.next = 9;
                          return _regenerator.default.awrap((0, _FileUtils.downloadFile)(file, path));

                        case 9:
                          _context3.next = 12;
                          break;

                        case 11:
                          _CommonUtils.default.ShowToastBottom(file.name + '正在下载中');

                        case 12:
                        case "end":
                          return _context3.stop();
                      }
                    }
                  });
                };

                _iterator = _this.state.selectFileArr, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === "function" ? typeof Symbol === "function" ? typeof Symbol === "function" ? Symbol.iterator : "@@iterator" : "@@iterator" : "@@iterator"]();

              case 9:
                if (!_isArray) {
                  _context4.next = 15;
                  break;
                }

                if (!(_i >= _iterator.length)) {
                  _context4.next = 12;
                  break;
                }

                return _context4.abrupt("break", 24);

              case 12:
                _ref = _iterator[_i++];
                _context4.next = 19;
                break;

              case 15:
                _i = _iterator.next();

                if (!_i.done) {
                  _context4.next = 18;
                  break;
                }

                return _context4.abrupt("break", 24);

              case 18:
                _ref = _i.value;

              case 19:
                file = _ref;
                _context4.next = 22;
                return _regenerator.default.awrap(_loop(file));

              case 22:
                _context4.next = 9;
                break;

              case 24:
                _reactNative.DeviceEventEmitter.emit('USBreLoadFileList');

                _reactNative.DeviceEventEmitter.emit('startDownload', startDownloadFileList);

              case 26:
              case "end":
                return _context4.stop();
            }
          }
        });
      };

      _this.state = {
        selectFileArr: props.selectFileArr,
        path: props.path,
        isShowDialog: false
      };
      return _this;
    }

    (0, _createClass2.default)(Download, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps, nextContext) {
        var _this2 = this;

        this.setState({
          selectFileArr: nextProps.selectFileArr,
          path: nextProps.path
        }, function () {
          _this2.checkIsCanDownload();
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            if (!_this3.state.disable) {
              _this3._downLoadFile();
            }
          },
          style: _Style.default.item
        }, this.state.disable ? _react.default.createElement(_reactNative.Image, {
          style: _Style.default.icon,
          source: _$$_REQUIRE(_dependencyMap[17])
        }) : _react.default.createElement(_reactNative.Image, {
          style: _Style.default.icon,
          source: _$$_REQUIRE(_dependencyMap[18])
        }), _react.default.createElement(_reactNative.Text, {
          style: this.state.disable ? [_Style.default.txt, _Style.default.disable] : _Style.default.txt
        }, "\u4E0B\u8F7D")), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.isShowDialog,
          showTitle: true,
          title: "\u9009\u62E9\u6587\u4EF6\u4FDD\u5B58\u76EE\u5F55",
          canDismiss: true,
          buttons: [{
            text: '取消',
            style: styles.detailBtn,
            callback: function callback(_) {
              return _this3.setState({
                isShowDialog: false
              });
            }
          }, {
            text: '确定',
            style: styles.detailBtn,
            callback: function callback() {
              _this3.setState({
                isShowDialog: false
              });

              _this3._downLoadFile();
            }
          }]
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: this.selectDownloadPathHandler,
          style: styles.downloadContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.message,
          numberOfLines: 1
        }, "\u4E0B\u8F7D\u5230\uFF1A", this.state.savePath), _react.default.createElement(_reactNative.Image, {
          style: styles.downloadIcon,
          source: _$$_REQUIRE(_dependencyMap[19])
        })), _react.default.createElement(_Separator.default, null)));
      }
    }]);
    return Download;
  }(_react.default.Component);

  exports.default = Download;

  var styles = _reactNative.StyleSheet.create({
    downloadContainer: {
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center',
      margin: 20,
      padding: 10,
      borderWidth: 0.5,
      borderColor: '#dedede',
      borderRadius: 8
    },
    downloadIcon: {
      width: 15,
      height: 15
    },
    message: {
      width: 280
    }
  });
},11096,[14305,14674,14320,14323,14371,14377,14386,10297,10033,10925,10755,11063,10332,10074,10076,10040,10035,11099,11102,10220]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "04860b78297e59a6042846807c6f2cc8",
    "name": "common_menu_icon_download_dis",
    "type": "png"
  });
},11099,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "d6966195477e224fadb1dffd38a50670",
    "name": "common_menu_icon_download_normal",
    "type": "png"
  });
},11102,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "146eead9d6560bf2c28c94568b56b176",
    "name": "file_icon_usb",
    "type": "png"
  });
},11105,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 671,
    "height": 292,
    "scales": [1],
    "hash": "16eb0d94f8f44996dfbb75be5947e87e",
    "name": "file_catalog_empty",
    "type": "png"
  });
},11108,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _miot = _$$_REQUIRE(_dependencyMap[8]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _FileUtils = _$$_REQUIRE(_dependencyMap[10]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Editbar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var Phone = function (_React$Component) {
    (0, _inherits2.default)(Phone, _React$Component);

    function Phone(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Phone);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Phone).call(this, props));

      _this.init = function _callee() {
        var fileList;
        return _regenerator.default.async(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return _regenerator.default.awrap((0, _FileUtils.getSandBoxFileList)());

              case 2:
                _context.t0 = function (item) {
                  return item.name.length !== 32;
                };

                fileList = _context.sent.filter(_context.t0);

                _this.setState({
                  fileList: fileList,
                  editMode: false,
                  selectFileArr: []
                });

              case 5:
              case "end":
                return _context.stop();
            }
          }
        });
      };

      _this.testLog = function _callee2() {
        var fileList;
        return _regenerator.default.async(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return _regenerator.default.awrap((0, _FileUtils.getSandBoxFileList)());

              case 2:
                fileList = _context2.sent;

              case 3:
              case "end":
                return _context2.stop();
            }
          }
        });
      };

      _this.goToPath = function _callee3(item, index, checked) {
        var selectFileArr, path, extension;
        return _regenerator.default.async(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (_this.state.editMode) {
                  selectFileArr = _this.state.selectFileArr;
                  selectFileArr.splice();

                  if (checked) {
                    selectFileArr.splice(selectFileArr.indexOf(item), 1);
                  } else {
                    selectFileArr.push(item);
                  }

                  if (selectFileArr.length !== 0) {
                    _this.setState({
                      selectFileArr: selectFileArr
                    });
                  } else {
                    _this.setState({
                      selectFileArr: selectFileArr,
                      editMode: false
                    });
                  }
                } else {
                  path = _miot.Host.file.storageBasePath + '/' + item.name;
                  extension = item.name.split('.').pop().toLowerCase();

                  if (_reactNative.Platform.OS === 'ios' && !_FileUtils.supportExtensionName.includes(extension)) {
                    _CommonUtils.default.ShowToastBottom('该文件格式暂不支持打开');
                  } else {
                    _miot.Host.ui.openSystemFileWindow(path);
                  }
                }

              case 1:
              case "end":
                return _context3.stop();
            }
          }
        });
      };

      _this.editItem = function (item, index, checked) {
        if (_this.state.editMode) return;
        var selectFileArr = _this.state.selectFileArr;
        selectFileArr.push(item);

        _this.setState({
          editMode: true,
          selectFileArr: selectFileArr
        });
      };

      _this.iconToEditItem = function (item, index, checked) {
        if (_this.state.editMode) {
          _this.goToPath(item, index, checked);
        } else {
          _this.editItem(item, index, checked);
        }
      };

      _this.cancelHandler = function () {
        _this.setState({
          editMode: false,
          isAllSelected: false,
          selectFileArr: []
        });
      };

      _this.selectAllHandler = function () {
        var flag = !_this.state.isAllSelected;
        var selectFileArr = flag ? _this.state.fileList.filter(function (item) {
          return item.type !== 2 && item.name !== '.' && item.name !== '..';
        }) : [];

        _this.setState({
          isAllSelected: flag,
          selectFileArr: selectFileArr
        });
      };

      _this.state = {
        fileList: [],
        editMode: false,
        isAllSelected: false,
        selectFileArr: []
      };
      return _this;
    }

    (0, _createClass2.default)(Phone, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        return _regenerator.default.async(function componentDidMount$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return _regenerator.default.awrap(this.init());

              case 2:
                this.deEmitter = _reactNative.DeviceEventEmitter.addListener('reloadSandboxFilelist', function (startDownloadFileList) {
                  _this2.init();
                });

              case 3:
              case "end":
                return _context4.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.deEmitter.remove();
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleBar
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title,
          onPress: this.testLog
        }, "\u5DF2\u4E0B\u8F7D"), this.state.editMode && _react.default.createElement(_reactNative.View, {
          style: styles.btnContent
        }, _react.default.createElement(_reactNative.Text, {
          onPress: this.selectAllHandler,
          style: styles.title
        }, this.state.isAllSelected ? '全不选' : '全选'), _react.default.createElement(_reactNative.Text, {
          style: styles.cancel,
          onPress: this.cancelHandler
        }, "\u53D6\u6D88"))), _react.default.createElement(_reactNative.View, {
          style: this.state.fileList.length > 0 ? styles.fileList : styles.box
        }, this.state.fileList.length > 0 ? _react.default.createElement(_reactNative.FlatList, {
          data: (0, _FileUtils.sortByModifyTime)(this.state.fileList, 'modifyTime'),
          renderItem: function renderItem(_ref) {
            var item = _ref.item,
                index = _ref.index;
            var checkbox = (0, _FileUtils.getCheckboxIcon)(item, _this3.state.selectFileArr, _this3.state.editMode, index, true);
            return _react.default.createElement(_reactNative.TouchableOpacity, {
              onLongPress: function onLongPress() {
                _this3.editItem(item, index);
              },
              onPress: function onPress() {
                _this3.goToPath(item, index, checkbox.checked);
              },
              key: index
            }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
              style: styles.fileItem
            }, _react.default.createElement(_reactNative.View, {
              style: styles.fileItemLeft
            }, (0, _FileUtils.getIcon)(item), _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, {
              style: styles.fileName,
              numberOfLines: 1
            }, item.name), _react.default.createElement(_reactNative.View, {
              style: styles.fileInfo
            }, item.modifyTime ? _react.default.createElement(_reactNative.Text, {
              style: styles.fileTime
            }, (0, _FileUtils.formatTime)("YYYY-mm-dd HH:MM", item.modifyTime * 1000)) : null, item.size > 0 ? _react.default.createElement(_reactNative.Text, {
              style: styles.fileSize,
              numberOfLines: 1
            }, (0, _FileUtils.formatFileSize)(item.size)) : null))), _react.default.createElement(_reactNative.TouchableOpacity, {
              onPress: function onPress() {
                _this3.iconToEditItem(item, index, checkbox.checked);
              }
            }, checkbox.img)));
          }
        }) : _react.default.createElement(_reactNative.Text, {
          style: styles.noTaskTip
        }, "\u6587\u4EF6\u5939\u5217\u8868\u4E3A\u7A7A")), this.state.editMode && _react.default.createElement(_Editbar.default, {
          selectFileArr: this.state.selectFileArr
        }));
      }
    }]);
    return Phone;
  }(_react.default.Component);

  exports.default = Phone;

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      paddingLeft: 10,
      paddingRight: 10,
      flex: 1
    },
    titleBar: {
      paddingTop: 10,
      paddingBottom: 10,
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    box: {
      borderColor: '#dedede',
      borderTopWidth: 0.5,
      borderBottomWidth: 0.5
    },
    noTaskTip: {
      textAlign: 'center',
      padding: 30,
      color: '#ddd'
    },
    title: {
      fontSize: 12
    },
    fileList: {
      flex: 1
    },
    fileItem: {
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center',
      paddingTop: 10,
      paddingBottom: 10
    },
    fileItemLeft: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    fileInfo: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    fileName: {
      width: 240,
      color: '#000'
    },
    fileTime: {
      fontSize: 12,
      color: '#999',
      marginRight: 5
    },
    fileSize: {
      fontSize: 12,
      color: '#999'
    },
    btnContent: {
      flexDirection: 'row'
    },
    cancel: {
      marginLeft: 10,
      fontSize: 12
    }
  });
},11111,[14305,14674,14320,14323,14371,14377,14386,10297,10074,10033,10925,10332,11114,10040]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _Delete = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var Editbar = function (_React$Component) {
    (0, _inherits2.default)(Editbar, _React$Component);

    function Editbar(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Editbar);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Editbar).call(this, props));

      _this.componentDidMount = function () {};

      _this.state = {
        selectFileArr: props.selectFileArr
      };
      _this.lastTime = 0;
      return _this;
    }

    (0, _createClass2.default)(Editbar, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps, nextContext) {
        this.setState({
          selectFileArr: nextProps.selectFileArr
        });
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.editBar
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
          style: styles.itemContent
        }, _react.default.createElement(_Delete.default, {
          selectFileArr: this.state.selectFileArr
        })));
      }
    }]);
    return Editbar;
  }(_react.default.Component);

  exports.default = Editbar;

  var styles = _reactNative.StyleSheet.create({
    itemContent: {
      flexDirection: 'row',
      justifyContent: 'space-around'
    }
  });
},11114,[14305,14320,14323,14371,14377,14386,10297,10033,10332,11117]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _FileUtils = _$$_REQUIRE(_dependencyMap[9]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[10]);

  var _Style = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _ui = _$$_REQUIRE(_dependencyMap[13]);

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[14]);

  var _miot = _$$_REQUIRE(_dependencyMap[15]);

  var dialogButtonName = [_RouterLocalizedStringUtil.localStrings.alertOKTitle, _RouterLocalizedStringUtil.localStrings.alertCancelTitle, _RouterLocalizedStringUtil.localStrings.alertTipText];

  var Delete = function (_React$Component) {
    (0, _inherits2.default)(Delete, _React$Component);

    function Delete(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Delete);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Delete).call(this, props));

      _this.componentDidMount = function () {};

      _this.deleteHandler = function _callee() {
        return _regenerator.default.async(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _this.state.selectFileArr.map(function (item) {
                  _miot.Host.file.deleteFile(item.name).then(function (isSuccess) {}).catch(function (err) {});
                });

                _reactNative.DeviceEventEmitter.emit('reloadSandboxFilelist');

              case 2:
              case "end":
                return _context.stop();
            }
          }
        });
      };

      _this.state = {
        selectFileArr: props.selectFileArr,
        isShowDialog: false,
        isShowLoading: false
      };
      return _this;
    }

    (0, _createClass2.default)(Delete, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps, nextContext) {
        this.setState({
          selectFileArr: nextProps.selectFileArr
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            _this2.setState({
              isShowDialog: true
            });
          },
          style: _Style.default.item
        }, _react.default.createElement(_reactNative.Image, {
          style: _Style.default.icon,
          source: _$$_REQUIRE(_dependencyMap[16])
        }), _react.default.createElement(_reactNative.Text, {
          style: _Style.default.txt
        }, "\u5220\u9664")), _react.default.createElement(_ui.MessageDialog, {
          title: dialogButtonName[2],
          message: '确定要删除吗？',
          cancelable: false,
          cancel: dialogButtonName[1],
          confirm: dialogButtonName[0],
          onConfirm: function onConfirm(e) {
            _this2.deleteHandler();
          },
          onDismiss: function onDismiss() {
            _this2.setState({
              isShowDialog: false
            });
          },
          visible: this.state.isShowDialog
        }), _react.default.createElement(_LoadingDialog.default, {
          visible: this.state.isShowLoading,
          message: this.state.loadingText
        }));
      }
    }]);
    return Delete;
  }(_react.default.Component);

  exports.default = Delete;
},11117,[14305,14674,14320,14323,14371,14377,14386,10297,10033,10925,10755,11120,10740,10230,10055,10074,11093]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _default = _reactNative.StyleSheet.create({
    editBar: {},
    itemContent: {
      flexDirection: 'row',
      justifyContent: 'space-around'
    },
    icon: {
      width: 40,
      height: 40
    },
    txt: {
      fontSize: 12
    },
    disable: {
      color: '#dedede'
    },
    item: {
      alignItems: 'center'
    }
  });

  exports.default = _default;
},11120,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "81d97d4a08934d4d1f80d1e97c559600",
    "name": "file_tab_usb_normal",
    "type": "png"
  });
},11123,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "5b7f46a6b6bed766f9e2997efef576f2",
    "name": "file_tab_transmission_normal",
    "type": "png"
  });
},11126,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/file",
    "width": 700,
    "height": 357,
    "scales": [1],
    "hash": "1c73e4654e458e09aafacb5f94f412c8",
    "name": "udriver_r1c",
    "type": "png"
  });
},11129,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _device = _$$_REQUIRE(_dependencyMap[10]);

  var _miot = _$$_REQUIRE(_dependencyMap[11]);

  var PluginWebView = function (_React$Component) {
    (0, _inherits2.default)(PluginWebView, _React$Component);

    function PluginWebView(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, PluginWebView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PluginWebView).call(this, props, context));

      _this.authorize_ = function (redirectUrl, clientId) {
        var authorizeUrl_ = "http://account.xiaomi.com/oauth2/authorize";
        authorizeUrl_ += "?client_id=" + clientId;
        authorizeUrl_ += "&redirect_uri=" + encodeURIComponent(redirectUrl);
        authorizeUrl_ += "&response_type=token";
        return authorizeUrl_;
      };

      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(PluginWebView, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var gatewayIp, response;
        return _regenerator.default.async(function componentDidMount$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                gatewayIp = '0.0.0.0';
                _context.next = 3;
                return _regenerator.default.awrap(_miot.System.network.getGatewayIpAddress().then(function (res) {
                  return res;
                }).catch(function (res) {
                  return res;
                }));

              case 3:
                response = _context.sent;

                if (response.code === 0) {
                  gatewayIp = response.data.ipAddress;
                }

                this.setState({
                  gatewayIp: gatewayIp
                });

              case 6:
              case "end":
                return _context.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "render",
      value: function render() {
        var uri = this.props.navigation.state.params.controlUrl;
        return _react.default.createElement(_reactNative.WebView, {
          source: {
            uri: uri
          },
          sharedCookiesEnabled: true,
          incognito: false,
          cacheEnabled: false
        });
      }
    }]);
    return PluginWebView;
  }(_react.default.Component);

  exports.default = PluginWebView;

  var styles = _reactNative.StyleSheet.create({
    container: {}
  });
},11132,[14308,14305,14674,14320,14323,14371,14377,14386,10297,10033,10935,10074]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _ListItem = _$$_REQUIRE(_dependencyMap[11]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _miot = _$$_REQUIRE(_dependencyMap[13]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _device = _$$_REQUIRE(_dependencyMap[15]);

  var _ui = _$$_REQUIRE(_dependencyMap[16]);

  var _RouterLocalizedStringUtil = _$$_REQUIRE(_dependencyMap[17]);

  var _WifiSettingHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var dialogButtonName = [_RouterLocalizedStringUtil.localStrings.alertOKTitle, _RouterLocalizedStringUtil.localStrings.alertCancelTitle, _RouterLocalizedStringUtil.localStrings.alertTipText];
  var dialogTip = _RouterLocalizedStringUtil.localStrings.wifiChangeAlertContent;
  var setError = _RouterLocalizedStringUtil.localStrings.wifiInfoChangeFail;

  var Usb = function (_React$Component) {
    (0, _inherits2.default)(Usb, _React$Component);

    function Usb(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Usb);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Usb).call(this, props));

      _this.getData = function () {
        _this.setState({
          'isShowLoading': true,
          loadingText: '加载数据中...'
        });

        _miot.Service.callSmartHomeAPI(_API.default.get_usb_u3, _this.paramsDic).then(function (res) {
          if (res.code === 0) {
            _this.setState({
              usbStatus: res.enable === 1 ? false : true,
              isShowLoading: false
            });
          }
        }).catch(function (res) {
          _this.props.navigation.goBack();
        }).finally(function (res) {});
      };

      _this.changeStatusHandler = function () {
        var usbStatus = !_this.state.usbStatus;

        _this.setState({
          usbStatus: usbStatus,
          isShowLoading: true
        }, function () {
          _this.updateStatus();
        });
      };

      _this.updateStatus = function () {
        var on = {
          enable: _this.state.usbStatus ? 0 : 1
        };
        var params = {
          params: (0, _objectSpread2.default)({}, _this.paramsDic.params, on)
        };
        var paramsDic = (0, _objectSpread2.default)({}, _this.paramsDic, params);

        _miot.Service.callSmartHomeAPI(_API.default.set_usb_u3, paramsDic).then(function (res) {
          _this.setState({
            isShowLoading: false
          });

          _this.props.navigation.goBack();
        }).catch(function (e) {
          _this.setState({
            isShowLoading: false,
            usbStatus: !_this.state.usbStatus
          });

          _CommonUtils.default.ShowToastBottom(setError);
        });
      };

      _this.state = {
        usbStatus: false,
        sueChangeVisible: false
      };
      _this.deviceId = _device.Device.deviceID.replace("miwifi.", "");
      _this.paramsDic = {
        method: 'GET',
        params: {
          deviceId: _this.deviceId
        }
      };
      return _this;
    }

    (0, _createClass2.default)(Usb, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.getData();
      }
    }, {
      key: "componentWillMount",
      value: function componentWillMount() {}
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: '开启USB3.0',
          value: this.state.usbStatus,
          showSeparator: false,
          titleStyle: styles.titleStyle,
          containerStyle: styles.containerStyle,
          onValueChange: function onValueChange(value) {
            _this2.setState({
              sueChangeVisible: true,
              usbStatus: value
            });
          }
        }), _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.Text, {
          style: styles.tips
        }, "\u8DEF\u7531\u5668USB3.0\u4F7F\u7528\u65F6\u4F1A\u5BF92.4G WiFi\u6709\u4E00\u5B9A\u5F71\u54CD\uFF0C\u5982\u6709\u9700\u8981\u53EF\u5173\u95EDUSB3.0\uFF0C\u7CFB\u7EDF\u5C06\u4E3A\u60A8\u5207\u6362\u81F3USB2.0\u6A21\u5F0F\u3002\uFF08USB2.0\u5BF92.4G WiFi\u6CA1\u6709\u5F71\u54CD\uFF09"), _react.default.createElement(_LoadingDialog.default, {
          visible: this.state.isShowLoading,
          message: this.state.loadingText
        }), _react.default.createElement(_ui.MessageDialog, {
          title: dialogButtonName[2],
          message: '该操作将重启路由器，是否确认修改？',
          cancelable: false,
          cancel: dialogButtonName[1],
          confirm: dialogButtonName[0],
          onCancel: function onCancel(e) {
            _this2.setState({
              usbStatus: !_this2.state.usbStatus,
              sueChangeVisible: false
            });
          },
          onConfirm: function onConfirm(e) {
            _this2.updateStatus();
          },
          onDismiss: function onDismiss() {},
          visible: this.state.sueChangeVisible
        }));
      }
    }]);
    return Usb;
  }(_react.default.Component);

  exports.default = Usb;

  Usb.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TitleBar.default, {
        type: "dark",
        title: 'USB设置',
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      flex: 1,
      paddingRight: 24,
      paddingLeft: 24
    },
    titleStyle: {
      fontWeight: 'bold'
    },
    containerStyle: {
      paddingLeft: 0,
      paddingRight: 50,
      marginTop: 20
    },
    tips: {
      fontSize: 12,
      color: '#999',
      marginTop: 10
    }
  });
},11135,[14305,14314,14320,14323,14371,14377,14386,10284,10740,10297,10033,10338,10332,10074,10064,10935,10230,10055,10070,10040]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _miot = _$$_REQUIRE(_dependencyMap[13]);

  var _LocalUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _MeshHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _Devices = _$$_REQUIRE(_dependencyMap[18]);

  var _UpgradeUtil = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[19]));

  var _UpgradeManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[21]);

  var _ui = _$$_REQUIRE(_dependencyMap[22]);

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var RouterUpgrade = function (_React$Component) {
    (0, _inherits2.default)(RouterUpgrade, _React$Component);

    function RouterUpgrade(props) {
      var _this;

      (0, _classCallCheck2.default)(this, RouterUpgrade);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RouterUpgrade).call(this, props));

      _this.upgradeManagerGetUpgradeModelSuccessCallback = function (model) {
        _this.resetUpgradeModel(model);

        _this.setState({
          loadingVisible: false
        });
      };

      _this.upgradeManagerGetUpgradeModelFailCallback = function () {
        _this.resetUpgradeModel(null);

        _this.setState({
          loadingVisible: false
        });
      };

      _this.renderItem = function (itemInfo) {
        var deviceInfo = itemInfo.routereUpgradeInfo;

        var itemTextInfo = _this.getItemTextInfo(itemInfo);

        var title = itemTextInfo.title;
        var subTitle = itemTextInfo.subTitle;
        var titleColor = itemTextInfo.titleColor;
        var needShowUpgrade = itemTextInfo.needShowUpgrade;
        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.itemContainer,
          onPress: function onPress() {
            _this.pressItem(itemInfo);
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.iconContainer
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.itemIcon,
          source: _UpgradeUtil.default.getRouterUpgradeImageByHardware(deviceInfo.hardware)
        })), _react.default.createElement(_reactNative.View, {
          style: styles.itemContent
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.itemTitle, {
            color: titleColor
          }]
        }, title), _react.default.createElement(_reactNative.Text, {
          style: styles.itemSubTitle
        }, subTitle)), needShowUpgrade ? _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.itemButton,
          onPress: function onPress() {
            _this.startUpgradeRouter(itemInfo);
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.itemButtonText
        }, '更新')) : null, _react.default.createElement(_reactNative.View, {
          style: styles.itemLine
        }));
      };

      _this.state = {
        upgradeInfos: [],
        loadingVisible: false
      };

      _this.initNavigationBar();

      return _this;
    }

    (0, _createClass2.default)(RouterUpgrade, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.initNavigationBar();
        this.requestUpgradeInfo();
        this.startUpgradingTimer();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.stopUpgradingTimer();
      }
    }, {
      key: "initNavigationBar",
      value: function initNavigationBar() {
        var _this2 = this;

        this.props.navigation.setParams({
          titleProps: {
            title: '升级助手',
            left: [{
              key: _NavigationBar.default.ICON.BACK,
              onPress: function onPress() {
                _this2.props.navigation.goBack();
              }
            }],
            right: [{
              key: _NavigationBar.default.ICON.SETTING,
              onPress: function onPress() {
                _this2.props.navigation.navigate('UpgradeSetting');
              }
            }]
          }
        });
      }
    }, {
      key: "requestUpgradeInfo",
      value: function requestUpgradeInfo() {
        var upgradeModel;
        return _regenerator.default.async(function requestUpgradeInfo$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                this.setState({
                  loadingVisible: true
                });
                _context.next = 3;
                return _regenerator.default.awrap(_UpgradeManager.default.sharedInstance().asyncCheckUpgradeInfo(this.upgradeManagerGetUpgradeModelSuccessCallback, this.upgradeManagerGetUpgradeModelFailCallback));

              case 3:
                upgradeModel = _context.sent;

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "resetUpgradeModel",
      value: function resetUpgradeModel(model) {
        var upgradeItems, upgradingItems, upgradedItems, i, item, duplicated, j, upgradingItem, k, upgradedItem, upgradableAndNotStartItems, notUpgradableItems, upgradeDeviceInfos, _i, device, hasAdded, _j, _item, _k, _item2, upgradeItem, status, items, hasUpgradingItem, hasAvailableUpgradeForOnlineDevice;

        return _regenerator.default.async(function resetUpgradeModel$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                this.upgradeModel = model;

                if (!_CommonUtils.default.isNull(model)) {
                  _context2.next = 5;
                  break;
                }

                this.setState({
                  upgradeInfos: []
                });
                _context2.next = 91;
                break;

              case 5:
                upgradeItems = _UpgradeManager.default.sharedInstance().getAllUpgradeItems();
                upgradingItems = [];
                upgradedItems = [];
                i = 0;

              case 9:
                if (!(i < upgradeItems.length)) {
                  _context2.next = 38;
                  break;
                }

                item = upgradeItems[i];
                duplicated = false;
                j = 0;

              case 13:
                if (!(j < upgradingItems.length)) {
                  _context2.next = 21;
                  break;
                }

                upgradingItem = upgradingItems[j];

                if (!item.routereUpgradeInfo.isSameUpgradeInfoFor(upgradingItem.routereUpgradeInfo)) {
                  _context2.next = 18;
                  break;
                }

                duplicated = true;
                return _context2.abrupt("break", 21);

              case 18:
                j++;
                _context2.next = 13;
                break;

              case 21:
                if (!duplicated) {
                  _context2.next = 23;
                  break;
                }

                return _context2.abrupt("continue", 35);

              case 23:
                k = 0;

              case 24:
                if (!(k < upgradedItems.length)) {
                  _context2.next = 32;
                  break;
                }

                upgradedItem = upgradedItems[k];

                if (!item.routereUpgradeInfo.isSameUpgradeInfoFor(upgradedItem.routereUpgradeInfo)) {
                  _context2.next = 29;
                  break;
                }

                duplicated = true;
                return _context2.abrupt("break", 32);

              case 29:
                k++;
                _context2.next = 24;
                break;

              case 32:
                if (!duplicated) {
                  _context2.next = 34;
                  break;
                }

                return _context2.abrupt("continue", 35);

              case 34:
                if (item.itemStatus === _UpgradeUtil.UpgradeItemStatus.Upgrading) {
                  upgradingItems.push(item);
                } else {
                  upgradedItems.push(item);
                }

              case 35:
                i++;
                _context2.next = 9;
                break;

              case 38:
                if (upgradingItems.length === 0) {
                  _UpgradeManager.default.sharedInstance().clearAllUpgradeItems();

                  upgradedItems = [];
                }

                upgradableAndNotStartItems = [];
                notUpgradableItems = [];
                upgradeDeviceInfos = model.deviceInfo;
                _i = 0;

              case 43:
                if (!(_i < upgradeDeviceInfos.length)) {
                  _context2.next = 82;
                  break;
                }

                device = upgradeDeviceInfos[_i];
                hasAdded = false;
                _j = 0;

              case 47:
                if (!(_j < upgradingItems.length)) {
                  _context2.next = 55;
                  break;
                }

                _item = upgradingItems[_j];

                if (!_item.routereUpgradeInfo.isSameUpgradeInfoFor(device)) {
                  _context2.next = 52;
                  break;
                }

                hasAdded = true;
                return _context2.abrupt("break", 55);

              case 52:
                _j++;
                _context2.next = 47;
                break;

              case 55:
                if (!hasAdded) {
                  _context2.next = 57;
                  break;
                }

                return _context2.abrupt("continue", 79);

              case 57:
                _k = 0;

              case 58:
                if (!(_k < upgradedItems.length)) {
                  _context2.next = 66;
                  break;
                }

                _item2 = upgradedItems[_k];

                if (!_item2.routereUpgradeInfo.isSameUpgradeInfoFor(device)) {
                  _context2.next = 63;
                  break;
                }

                hasAdded = true;
                return _context2.abrupt("break", 66);

              case 63:
                _k++;
                _context2.next = 58;
                break;

              case 66:
                if (!hasAdded) {
                  _context2.next = 68;
                  break;
                }

                return _context2.abrupt("continue", 79);

              case 68:
                upgradeItem = new _UpgradeUtil.UpgradeListItem();
                upgradeItem.routereUpgradeInfo = device;

                if (!_UpgradeUtil.default.hasAvailableUpgradeForDevice(device)) {
                  _context2.next = 77;
                  break;
                }

                _context2.next = 73;
                return _regenerator.default.awrap(this.isRouterOnlineByDeviceId(device.deviceId));

              case 73:
                status = _context2.sent;

                if (status) {
                  upgradeItem.itemStatus = _UpgradeUtil.UpgradeItemStatus.New_Upgrade_Device_Online;
                  upgradableAndNotStartItems.push(upgradeItem);
                } else {
                  upgradeItem.itemStatus = _UpgradeUtil.UpgradeItemStatus.New_Upgrade_Device_Offline;
                  upgradableAndNotStartItems.push(upgradeItem);
                }

                _context2.next = 79;
                break;

              case 77:
                upgradeItem.itemStatus = _UpgradeUtil.UpgradeItemStatus.No_Upgrade;
                notUpgradableItems.push(upgradeItem);

              case 79:
                _i++;
                _context2.next = 43;
                break;

              case 82:
                items = [];
                items.push.apply(items, upgradingItems);
                items.push.apply(items, (0, _toConsumableArray2.default)(upgradedItems));
                items.push.apply(items, upgradableAndNotStartItems);
                items.push.apply(items, notUpgradableItems);
                this.setState({
                  upgradeInfos: items
                });
                hasUpgradingItem = _UpgradeManager.default.sharedInstance().hasUpgradingItem();
                hasAvailableUpgradeForOnlineDevice = this.hasAvailableUpgradeForOnlineDevice();

                if (!hasUpgradingItem && !hasAvailableUpgradeForOnlineDevice) {
                  _CommonUtils.default.ShowToastCenter('没有可用更新');
                }

              case 91:
              case "end":
                return _context2.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "isRouterOnlineByDeviceId",
      value: function isRouterOnlineByDeviceId(deviceId) {
        var curDevId, curRouter, routerList, find, targetRouter, i, router;
        return _regenerator.default.async(function isRouterOnlineByDeviceId$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                curDevId = _miot.Device.deviceID.replace("miwifi.", "");

                if (!(deviceId === curDevId)) {
                  _context3.next = 6;
                  break;
                }

                curRouter = _RouterInfoHelper.default.sharedInstance().currentRouterInfo();
                return _context3.abrupt("return", curRouter.status === 'online');

              case 6:
                _context3.next = 8;
                return _regenerator.default.awrap(this.getAllRouterList());

              case 8:
                routerList = _context3.sent;
                find = false;
                targetRouter = null;
                i = 0;

              case 12:
                if (!(i < routerList.length)) {
                  _context3.next = 21;
                  break;
                }

                router = routerList[i];

                if (!(router.id === deviceId)) {
                  _context3.next = 18;
                  break;
                }

                find = true;
                targetRouter = router;
                return _context3.abrupt("break", 21);

              case 18:
                i++;
                _context3.next = 12;
                break;

              case 21:
                if (!find) {
                  _context3.next = 25;
                  break;
                }

                return _context3.abrupt("return", targetRouter.status === 'online');

              case 25:
                return _context3.abrupt("return", false);

              case 26:
              case "end":
                return _context3.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "getAllRouterList",
      value: function getAllRouterList() {
        var deviceId, method, paramsDic, api;
        return _regenerator.default.async(function getAllRouterList$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                deviceId = _miot.Device.deviceID.replace("miwifi.", "");
                method = 'GET';
                paramsDic = {
                  method: method,
                  params: {
                    showStatus: 'true',
                    source: 'miot'
                  }
                };
                api = _API.default.router_list.remote;
                return _context4.abrupt("return", _miot.Service.callSmartHomeAPI(api, paramsDic).then(function (res) {
                  if (parseInt(res.code) == 0) {
                    var routerList = res.deviceList;

                    if (!_CommonUtils.default.arrayIsEmpty(routerList)) {
                      return routerList;
                    } else {
                      return [];
                    }
                  } else {
                    return [];
                  }
                }).catch(function (e) {
                  return [];
                }));

              case 5:
              case "end":
                return _context4.stop();
            }
          }
        });
      }
    }, {
      key: "fetchMeshChildInfo",
      value: function fetchMeshChildInfo() {
        var deviceId, method, paramsDic;
        return _regenerator.default.async(function fetchMeshChildInfo$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                deviceId = _miot.Device.deviceID.replace("miwifi.", "");
                method = 'GET';
                paramsDic = {
                  method: method,
                  params: {
                    deviceID: deviceId,
                    deviceId: deviceId,
                    refresh: 1
                  }
                };
                return _context5.abrupt("return", _miot.Service.callSmartHomeAPI(_API.default.meshTopology, paramsDic).then(function (res) {
                  if (res.code == 0) {
                    return res.childMeshInfos;
                  } else {
                    return [];
                  }
                }).catch(function (e) {
                  return [];
                }));

              case 4:
              case "end":
                return _context5.stop();
            }
          }
        });
      }
    }, {
      key: "hasAvailableUpgradeForOnlineDevice",
      value: function hasAvailableUpgradeForOnlineDevice() {
        var items = this.state.upgradeInfos;

        if (!_CommonUtils.default.arrayIsEmpty(items)) {
          var result = false;

          for (var i = 0; i < items.length; i++) {
            var item = items[i];

            if (item.itemStatus === _UpgradeUtil.UpgradeItemStatus.New_Upgrade_Device_Online || item.itemStatus === _UpgradeUtil.UpgradeItemStatus.New_Upgrade_Device_Offline) {
              result = true;
              break;
            }
          }

          return result;
        }

        return false;
      }
    }, {
      key: "hasAvailableUpgradeForOfflineDevice",
      value: function hasAvailableUpgradeForOfflineDevice() {
        var items = this.state.upgradeInfos;

        if (!_CommonUtils.default.arrayIsEmpty(items)) {
          var result = false;

          for (var i = 0; i < items.length; i++) {
            var item = items[i];

            if (item.itemStatus === _UpgradeUtil.UpgradeItemStatus.New_Upgrade_Device_Offline) {
              result = true;
              break;
            }
          }

          return result;
        }

        return false;
      }
    }, {
      key: "hasUpgradingItem",
      value: function hasUpgradingItem() {
        var items = this.state.upgradeInfos;

        if (!_CommonUtils.default.arrayIsEmpty(items)) {
          var result = false;

          for (var i = 0; i < items.length; i++) {
            var item = items[i];

            if (item.itemStatus === _UpgradeUtil.UpgradeItemStatus.Upgrading) {
              result = true;
              break;
            }
          }

          return result;
        }

        return false;
      }
    }, {
      key: "getBottomTitle",
      value: function getBottomTitle() {
        if (this.hasAvailableUpgradeForOnlineDevice()) {
          return '一键升级';
        } else if (!this.hasUpgradingItem()) {
          return '检查更新';
        } else {
          return '正在升级';
        }
      }
    }, {
      key: "startUpgradingTimer",
      value: function startUpgradingTimer() {
        var _this3 = this;

        this.upgradingTimer = setInterval(function () {
          _this3.checkUpgradingTimer();
        }, 2000);
      }
    }, {
      key: "stopUpgradingTimer",
      value: function stopUpgradingTimer() {
        clearInterval(this.upgradingTimer);
      }
    }, {
      key: "checkUpgradingTimer",
      value: function checkUpgradingTimer() {
        var upgradeItems = _UpgradeManager.default.sharedInstance().getAllUpgradeItems();

        if (_CommonUtils.default.arrayIsEmpty(upgradeItems)) {
          return;
        }

        var temCurItems = this.state.upgradeInfos;

        for (var i = 0; i < upgradeItems.length; i++) {
          var managerItem = upgradeItems[i];

          for (var j = 0; j < temCurItems.length; j++) {
            var curItem = temCurItems[j];

            if (curItem.routereUpgradeInfo.isSameUpgradeInfoFor(managerItem.routereUpgradeInfo)) {
              curItem.copyValueFromItem(managerItem);

              if (_CommonUtils.default.isNull(curItem.curUpgradeRom) && curItem.itemStatus === _UpgradeUtil.UpgradeItemStatus.Upgrading) {
                curItem.itemStatus = _UpgradeUtil.UpgradeItemStatus.Upgrade_Fail;
              }
            }
          }
        }

        this.setState({
          upgradeInfos: temCurItems
        });
      }
    }, {
      key: "startUpgradeRouter",
      value: function startUpgradeRouter(targetItem) {
        var upgradeManager = _UpgradeManager.default.sharedInstance();

        var upgradeItems = this.state.upgradeInfos;

        if (_CommonUtils.default.isNull(targetItem)) {
          for (var i = 0; i < upgradeItems.length; i++) {
            var item = upgradeItems[i];

            if (item.itemStatus === _UpgradeUtil.UpgradeItemStatus.New_Upgrade_Device_Online) {
              upgradeManager.startUpgradeItem(item);
            }
          }
        } else {
          for (var _i2 = 0; _i2 < upgradeItems.length; _i2++) {
            var _item3 = upgradeItems[_i2];

            if (_item3.routereUpgradeInfo.isSameUpgradeInfoFor(targetItem.routereUpgradeInfo)) {
              upgradeManager.startUpgradeItem(_item3);
              break;
            }
          }
        }

        this.checkUpgradingTimer();
      }
    }, {
      key: "getItemTextInfo",
      value: function getItemTextInfo(itemInfo) {
        var normalColor = '#000';
        var highlightColor = '#2c7dfa';
        var failcolor = '#ff7700';
        var deviceInfo = itemInfo.routereUpgradeInfo;
        var deviceName = '';

        if (!_CommonUtils.default.isNull(deviceInfo.deviceName)) {
          deviceName = deviceInfo.deviceName;
        }

        if (!_CommonUtils.default.isNull(deviceInfo.location)) {
          deviceName = deviceInfo.deviceName + '(' + deviceInfo.location + ')';
        }

        var title = deviceName;
        var subTitle = '';
        var titleColor = normalColor;

        switch (itemInfo.itemStatus) {
          case _UpgradeUtil.UpgradeItemStatus.No_Upgrade:
            titleColor = normalColor;
            title = deviceName;
            subTitle = '当前版本' + deviceInfo.romVersion + '(' + _UpgradeUtil.default.getRomChannelName(deviceInfo) + ')';
            break;

          case _UpgradeUtil.UpgradeItemStatus.New_Upgrade_Device_Offline:
          case _UpgradeUtil.UpgradeItemStatus.New_Upgrade_Device_Online:
            titleColor = highlightColor;

            if (itemInfo.itemStatus === _UpgradeUtil.UpgradeItemStatus.New_Upgrade_Device_Online) {
              title = deviceName;
            } else {
              title = deviceName + '(离线)';
            }

            subTitle = '当前版本' + deviceInfo.romVersion + '(' + _UpgradeUtil.default.getRomChannelName(deviceInfo) + ')';
            break;

          case _UpgradeUtil.UpgradeItemStatus.Waiting_Upgrade:
            titleColor = normalColor;
            title = deviceName;
            subTitle = '等待升级';
            break;

          case _UpgradeUtil.UpgradeItemStatus.Upgrading:
            titleColor = highlightColor;
            var res = this.determineUpgradingLabelText(itemInfo);

            if (_CommonUtils.default.isNull(res)) {
              title = '';
              subTitle = '';
            } else {
              title = res.title;
              subTitle = res.subTitle;
            }

            break;

          case _UpgradeUtil.UpgradeItemStatus.Upgrade_Success:
            titleColor = normalColor;
            title = deviceName;
            subTitle = '已成功升级至' + deviceInfo.lastestVersion() + '(' + _UpgradeUtil.default.getRomChannelName(deviceInfo) + ')';
            break;

          case _UpgradeUtil.UpgradeItemStatus.Upgrade_Fail:
            titleColor = failcolor;
            title = deviceName;
            subTitle = '升级失败，请稍后重试';
            break;

          case _UpgradeUtil.UpgradeItemStatus.Upgrade_Fail_No_Enough_Disk:
            titleColor = failcolor;
            title = deviceName;
            subTitle = '路由器磁盘空间不足，请稍后重试';
            break;

          case _UpgradeUtil.UpgradeItemStatus.Upgrade_Fail_Download:
            titleColor = failcolor;
            title = deviceName;
            subTitle = '下载升级包失败，请稍后重试';
            break;

          case _UpgradeUtil.UpgradeItemStatus.Upgrade_Fail_Validate:
            titleColor = failcolor;
            title = deviceName;
            subTitle = '升级包验证错误，请稍后重试';
            break;

          case _UpgradeUtil.UpgradeItemStatus.Upgrade_Fail_Flash:
            titleColor = failcolor;
            title = deviceName;
            subTitle = '刷写升级包失败，请稍后重试';
            break;

          case _UpgradeUtil.UpgradeItemStatus.Upgrade_Fail_Time_Out:
            titleColor = failcolor;
            title = deviceName;
            subTitle = '设备可能离线，请稍后重试';
            break;

          default:
            break;
        }

        var needShowUpgrade = itemInfo.itemStatus === _UpgradeUtil.UpgradeItemStatus.New_Upgrade_Device_Online ? true : false;
        return {
          title: title,
          titleColor: titleColor,
          subTitle: subTitle,
          needShowUpgrade: needShowUpgrade
        };
      }
    }, {
      key: "determineUpgradingLabelText",
      value: function determineUpgradingLabelText(itemInfo) {
        var statusObj = itemInfo.updateStatus;
        var res = null;

        switch (statusObj.status) {
          case _UpgradeUtil.RouterUpdateStatus.Downloading:
            res = this.updateDownloadingProgress(parseFloat(statusObj.percent / 100.0), itemInfo.routereUpgradeInfo, itemInfo.curUpgradeRom, itemInfo.downloadStartTime);
            break;

          case _UpgradeUtil.RouterUpdateStatus.Validate_Rom:
          case _UpgradeUtil.RouterUpdateStatus.Flash_Rom:
          case _UpgradeUtil.RouterUpdateStatus.Manual_Checking:
            res = this.updateRomFlashProgress(itemInfo.downloadStartTime, itemInfo.routereUpgradeInfo);
            break;

          default:
            break;
        }

        return res;
      }
    }, {
      key: "updateRomFlashProgress",
      value: function updateRomFlashProgress(romFlashStartTime, deviceInfo) {
        var nowTime = new Date().getTime();
        var elapsedFlashTime = parseInt(nowTime / 1000) - romFlashStartTime;
        var hardware = deviceInfo.hardware;
        var isR1D = false;

        if (hardware.toUpperCase() === 'R1D') {
          isR1D = true;
        }

        var estimateFlashAndRestartTime = isR1D ? 240 : 300;
        var progress = elapsedFlashTime / estimateFlashAndRestartTime / 2 + 0.5;

        if (progress < 0.5) {
          progress = 0.5;
        }

        var deviceName = '';
        var title = '';
        var subTitle = '';

        if (!_CommonUtils.default.isNull(deviceInfo.deviceName)) {
          deviceName = deviceInfo.deviceName;
        }

        if (!_CommonUtils.default.isNull(deviceInfo.location)) {
          deviceName = deviceInfo.deviceName + '(' + deviceInfo.location + ')';
        }

        var remainingTime = estimateFlashAndRestartTime - elapsedFlashTime;

        if (progress < 0.54) {
          subTitle = '正在验证升级包完整性...';
        } else if (progress < 0.55) {
          subTitle = '正在解压升级包...';
        } else if (progress < 0.98) {
          subTitle = '正在将升级包安装到路由器上...';
        } else {
          subTitle = '升级完成，路由器准备重启...';
        }

        if (progress > 0.98) {
          progress = 0.98;
        }

        title = deviceName + '(' + parseInt(progress * 100) + '%,' + this.getRemainingTimeStr(remainingTime) + ')';
        return {
          title: title,
          subTitle: subTitle
        };
      }
    }, {
      key: "updateDownloadingProgress",
      value: function updateDownloadingProgress(progress, deviceInfo, romInfo, startTime) {
        if (progress < 0 || progress > 1) {
          return null;
        }

        var hardware = deviceInfo.hardware;
        var isR1D = false;

        if (hardware.toUpperCase() === 'R1D') {
          isR1D = true;
        }

        var estimateFlashAndRestartTime = isR1D ? 240 : 300;
        var downloadingSizeInBytes = parseInt(romInfo.size * progress);
        var deviceName = '';
        var title = '';
        var subTitle = '';

        if (!_CommonUtils.default.isNull(deviceInfo.deviceName)) {
          deviceName = deviceInfo.deviceName;
        }

        if (!_CommonUtils.default.isNull(deviceInfo.location)) {
          deviceName = deviceInfo.deviceName + '(' + deviceInfo.location + ')';
        }

        if (progress === 0) {
          title = deviceName + '(正在计算所需时间)';
        } else {
          var downloadVelocity = 0.0;
          var remainingDownloadTimeInSecond = 0.0;
          var nowTime = new Date().getTime();
          var downloadTime = parseInt(nowTime / 1000) - startTime;

          if (downloadTime > 0) {
            downloadVelocity = downloadingSizeInBytes / downloadTime;
            remainingDownloadTimeInSecond = parseFloat(romInfo.size - downloadingSizeInBytes) / downloadVelocity;
          }

          if (remainingDownloadTimeInSecond < 0) {
            remainingDownloadTimeInSecond = 0.0;
          }

          title = deviceName + '(' + parseInt(progress / 2 * 100) + '%,' + this.getRemainingTimeStr(remainingDownloadTimeInSecond + estimateFlashAndRestartTime) + ')';
        }

        subTitle = '正在下载升级包(' + this.getSizeStr(downloadingSizeInBytes) + '/' + this.getSizeStr(romInfo.size) + ')';
        return {
          title: title,
          subTitle: subTitle
        };
      }
    }, {
      key: "getRemainingTimeStr",
      value: function getRemainingTimeStr(remainingTimeInSecond) {
        if (remainingTimeInSecond <= 0) {
          return '约0秒钟';
        }

        if (remainingTimeInSecond <= 60) {
          return '约' + parseInt(remainingTimeInSecond) + '秒钟';
        } else if (remainingTimeInSecond <= 1800) {
          return '约' + parseInt(remainingTimeInSecond / 60) + '分钟';
        }

        return '约30分钟';
      }
    }, {
      key: "getSizeStr",
      value: function getSizeStr(sizeInByte) {
        if (sizeInByte <= 0) {
          return "0MB";
        }

        if (sizeInByte < 1024) {
          return parseInt(sizeInByte) + 'B';
        } else if (sizeInByte < 1048576) {
          return parseInt(sizeInByte / 1024) + 'KB';
        }

        return parseInt(sizeInByte / 1048576) + 'MB';
      }
    }, {
      key: "pressItem",
      value: function pressItem(itemInfo) {
        var deviceInfo = itemInfo.routereUpgradeInfo;
        var changelogUrl = deviceInfo.lastestChangelogUrl();

        if (_CommonUtils.default.isNull(changelogUrl)) {
          changelogUrl = deviceInfo.changelogUrl;
        }

        if (_CommonUtils.default.isNull(changelogUrl) || changelogUrl === '') {
          this.props.navigation.navigate('UpgradeDetail', {
            deviceInfo: deviceInfo
          });
        } else {
          this.props.navigation.navigate('WebView', {
            controlUrl: changelogUrl
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var listHeight = _Devices.ScreenH - 200 - 60;
        var naviBarHeight = _Devices.isiPhoneX ? _reactNavigation.Header.HEIGHT + 24 : _reactNavigation.Header.HEIGHT;
        var statusBarHeight = _reactNative.StatusBar.currentHeight;
        var naviAndStatusBarHeight = _Devices.ios ? naviBarHeight : naviBarHeight + statusBarHeight;
        listHeight = (_Devices.ios ? _Devices.ScreenH : _reactNative.Dimensions.get('screen').height) - naviAndStatusBarHeight - 50 - (_Devices.isiPhoneX ? 54 : _Devices.ios ? 30 : 20);
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.FlatList, {
          style: {
            maxHeight: listHeight
          },
          data: this.state.upgradeInfos,
          renderItem: function renderItem(_ref) {
            var item = _ref.item;
            return _this4.renderItem(item);
          }
        }), _react.default.createElement(_reactNative.View, {
          style: styles.bottomContainer
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.bottomButton,
          disabled: this.hasUpgradingItem(),
          onPress: function onPress() {
            if (_this4.hasAvailableUpgradeForOnlineDevice()) {
              _this4.startUpgradeRouter();
            } else if (!_this4.hasUpgradingItem()) {
              _this4.requestUpgradeInfo();
            }
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.bottomButtonTitle
        }, this.getBottomTitle()))), _react.default.createElement(_ui.LoadingDialog, {
          visible: this.state.loadingVisible,
          message: '检查升级中'
        }));
      }
    }]);
    return RouterUpgrade;
  }(_react.default.Component);

  exports.default = RouterUpgrade;

  RouterUpgrade.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;

    var _ref3 = navigation.state.params || {},
        titleProps = _ref3.titleProps;

    if (!titleProps) return {
      header: null
    };
    return {
      header: _react.default.createElement(_NavigationBar.default, titleProps)
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      flexDirection: 'row',
      backgroundColor: '#fff'
    },
    itemContainer: {
      flexDirection: 'row',
      justifyContent: 'flex-start',
      alignItems: 'center'
    },
    iconContainer: {
      position: 'absolute',
      marginLeft: 0,
      marginTop: 0,
      marginBottom: 0,
      width: 55,
      justifyContent: 'center',
      alignItems: 'center'
    },
    itemIcon: {
      width: 30,
      height: 30,
      resizeMode: 'contain'
    },
    itemLine: {
      position: 'absolute',
      left: 55,
      bottom: 0,
      height: 0.5,
      width: _Devices.ScreenW - 55,
      backgroundColor: '#dddddd'
    },
    itemContent: {
      marginLeft: 55,
      width: _Devices.ScreenW - 120,
      marginBottom: 10
    },
    itemTitle: {
      marginTop: 10,
      fontSize: 16,
      color: '#000'
    },
    itemSubTitle: {
      marginTop: 5,
      fontSize: 12,
      color: '#999'
    },
    itemButton: {
      position: 'absolute',
      right: 10,
      paddingTop: 10,
      paddingBottom: 10,
      borderColor: '#eee',
      borderWidth: 0.5,
      borderRadius: 5,
      alignContent: 'center',
      justifyContent: 'center'
    },
    itemButtonText: {
      marginLeft: 10,
      marginRight: 10,
      color: '#2c7dfa',
      fontSize: 14
    },
    bottomContainer: {
      position: 'absolute',
      bottom: _Devices.isiPhoneX ? 34 : 10,
      alignItems: 'center',
      justifyContent: 'center',
      height: 60,
      left: 24
    },
    bottomButton: {
      marginLeft: 0,
      width: _Devices.ScreenW - 48,
      height: 45,
      backgroundColor: '#2c7DFA',
      borderRadius: 22.5,
      alignItems: 'center',
      justifyContent: 'center'
    },
    bottomButtonTitle: {
      fontSize: 16,
      color: '#fff',
      fontWeight: 'bold'
    }
  });
},11138,[14308,14305,14359,14674,14320,14323,14371,14377,14386,10297,10033,10284,10064,10074,11141,10040,10076,10190,10067,11144,11216,10918,10230,10719]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var RouterLocalLanguage_ZH = 'zh_CN';
  var RouterLocalLanguage_ZH_HK = 'zh_HK';
  var RouterLocalLanguage_ZH_TW = 'zh_TW';
  var RouterLocalLanguage_EN = 'en_US';
  var RouterLocalLanguage_KO_KR = 'ko_KR';
  var RouterLocalLanguage_DE = 'de_DE';
  var RouterLocalLanguage_ES = 'es_ES';
  var RouterLocalLanguage_FR = 'fr_FR';
  var RouterLocalLanguage_IT = 'it_IT';
  var RouterLocalLanguage_PT_BR = 'pt_BR';
  var RouterLocalLanguage_RU = 'ru_RU';
  var RouterLocalLanguage_TR = 'tr_TR';
  var RouterLocalLanguage_UK_UA = 'uk_UA';

  var LocalUtils = function () {
    function LocalUtils() {
      (0, _classCallCheck2.default)(this, LocalUtils);
    }

    (0, _createClass2.default)(LocalUtils, null, [{
      key: "getRouterAvailableLanguageStr",
      value: function getRouterAvailableLanguageStr() {
        var local = _miot.Host.locale.language;

        if (local.toLowerCase() === 'zh' || local.toLowerCase() === 'zh_cn') {
          return RouterLocalLanguage_ZH;
        } else if (local.toLowerCase() === 'zh_tw') {
          return RouterLocalLanguage_ZH_TW;
        } else if (local.toLowerCase() === 'zh_hk') {
          return RouterLocalLanguage_ZH_HK;
        } else if (local.toLowerCase() === 'en') {
          return RouterLocalLanguage_EN;
        } else if (local.toLowerCase() === 'ko') {
          return RouterLocalLanguage_KO_KR;
        } else if (local.toLowerCase() === 'de') {
          return RouterLocalLanguage_DE;
        } else if (local.toLowerCase() === 'es') {
          return RouterLocalLanguage_ES;
        } else if (local.toLowerCase() === 'fr') {
          return RouterLocalLanguage_FR;
        } else if (local.toLowerCase() === 'it') {
          return RouterLocalLanguage_IT;
        } else if (local.toLowerCase() === 'pt') {
          return RouterLocalLanguage_PT_BR;
        } else if (local.toLowerCase() === 'ru') {
          return RouterLocalLanguage_RU;
        } else if (local.toLowerCase() === 'tr') {
          return RouterLocalLanguage_TR;
        } else if (local.toLowerCase() === 'uk') {
            return RouterLocalLanguage_UK_UA;
          } else {
            return RouterLocalLanguage_EN;
          }
      }
    }]);
    return LocalUtils;
  }();

  exports.default = LocalUtils;
},11141,[14305,14320,14323,10074]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.UpgradeModel = exports.UpgradeResult = exports.UpgradeItemAndHandler = exports.RouterUpdateStatusObject = exports.RouterUpdateStatus = exports.UpgradeListItem = exports.RouterUpgradeInfo = exports.RomUpgradeInfo = exports.RomChannelType = exports.UpgradeItemStatus = exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var UpgradeUtil = function () {
    function UpgradeUtil() {
      (0, _classCallCheck2.default)(this, UpgradeUtil);
    }

    (0, _createClass2.default)(UpgradeUtil, null, [{
      key: "getRouterUpgradeImageByHardware",
      value: function getRouterUpgradeImageByHardware(hardware) {
        if (_CommonUtils.default.isNull(hardware)) {
          return _$$_REQUIRE(_dependencyMap[4]);
        } else {
          if (hardware.toUpperCase() === 'R1CM' || hardware.toUpperCase() === 'R1CQ') {
            return _$$_REQUIRE(_dependencyMap[4]);
          } else if (hardware.toUpperCase() === 'R1CL') {
            return _$$_REQUIRE(_dependencyMap[5]);
          } else if (hardware.toUpperCase() === 'R1D') {
            return _$$_REQUIRE(_dependencyMap[6]);
          } else if (hardware.toUpperCase() === 'R2D') {
            return _$$_REQUIRE(_dependencyMap[7]);
          } else if (hardware.toUpperCase() === 'R3' || hardware.toUpperCase() === 'R3G') {
            return _$$_REQUIRE(_dependencyMap[8]);
          } else if (hardware.toUpperCase() === 'R3L' || hardware.toUpperCase() === 'R3A') {
            return _$$_REQUIRE(_dependencyMap[9]);
          } else if (hardware.toUpperCase() === 'R3P') {
            return _$$_REQUIRE(_dependencyMap[10]);
          } else if (hardware.toUpperCase() === 'R4C') {
            return _$$_REQUIRE(_dependencyMap[11]);
          } else if (hardware.toUpperCase() === 'R4' || hardware.toUpperCase() === 'R4CM' || hardware.toUpperCase() === 'R4AC') {
            return _$$_REQUIRE(_dependencyMap[12]);
          } else if (hardware.toUpperCase() === 'R4A' || hardware.toUpperCase() === 'R3GV2' || hardware.toUpperCase() === 'R3GV2N') {
            return _$$_REQUIRE(_dependencyMap[13]);
          } else if (hardware.toUpperCase() === 'R2100') {
            return _$$_REQUIRE(_dependencyMap[14]);
          } else if (hardware.toUpperCase() === 'RM2100') {
            return _$$_REQUIRE(_dependencyMap[15]);
          } else if (hardware.toUpperCase() === 'R3600') {
            return _$$_REQUIRE(_dependencyMap[16]);
          } else if (hardware.toUpperCase() === 'RM1800') {
            return _$$_REQUIRE(_dependencyMap[17]);
          } else if (hardware.toUpperCase() === 'R1350') {
            return _$$_REQUIRE(_dependencyMap[18]);
          } else if (hardware.toUpperCase() === 'R2350') {
            return _$$_REQUIRE(_dependencyMap[19]);
          } else if (hardware.toUpperCase() === 'RA67' || hardware.toUpperCase() === 'RA50') {
            return _$$_REQUIRE(_dependencyMap[20]);
          } else if (hardware.toUpperCase() === 'IR1200G') {
            return _$$_REQUIRE(_dependencyMap[21]);
          } else if (hardware.toUpperCase() === 'RA69') {
            return _$$_REQUIRE(_dependencyMap[22]);
          } else if (hardware.toUpperCase() === 'CR6606' || hardware.toUpperCase() === 'CR6608' || hardware.toUpperCase() === 'CR6609') {
            return _$$_REQUIRE(_dependencyMap[23]);
          } else if (hardware.toUpperCase() === 'RA72') {
            return _$$_REQUIRE(_dependencyMap[24]);
          } else if (hardware.toUpperCase() === 'RA70') {
            return _$$_REQUIRE(_dependencyMap[25]);
          } else if (hardware.toUpperCase() === 'RA81') {
            return _$$_REQUIRE(_dependencyMap[26]);
          }
        }
      }
    }, {
      key: "getRomChannelName",
      value: function getRomChannelName(itemInfo) {
        if (itemInfo.channel === RomChannelType.CURRENT) {
          return '内测版';
        } else if (itemInfo.channel === RomChannelType.DEV) {
          return '开发版';
        } else if (itemInfo.channel === RomChannelType.RELEASE) {
          return '稳定版';
        } else {
          return '';
        }
      }
    }, {
      key: "hasAvailableUpgradeForDevice",
      value: function hasAvailableUpgradeForDevice(deviceInfo) {
        if (_CommonUtils.default.isNull(deviceInfo) || !deviceInfo.needUpgrade) {
          return false;
        }

        if (!_CommonUtils.default.arrayIsEmpty(deviceInfo.upgradeSteps)) {
          return true;
        }

        return false;
      }
    }]);
    return UpgradeUtil;
  }();

  exports.default = UpgradeUtil;
  var UpgradeItemStatus = {
    No_Upgrade: 0,
    New_Upgrade_Device_Offline: 1,
    New_Upgrade_Device_Online: 2,
    Waiting_Upgrade: 3,
    Upgrading: 4,
    Upgrade_Success: 5,
    Upgrade_Fail: 6,
    Upgrade_Fail_No_Enough_Disk: 7,
    Upgrade_Fail_Download: 8,
    Upgrade_Fail_Validate: 9,
    Upgrade_Fail_Flash: 10,
    Upgrade_Fail_Time_Out: 11
  };
  exports.UpgradeItemStatus = UpgradeItemStatus;
  var RomChannelType = {
    UNKNOWN: 0,
    CURRENT: 1,
    DEV: 2,
    RELEASE: 3
  };
  exports.RomChannelType = RomChannelType;

  var RomUpgradeInfo = function () {
    function RomUpgradeInfo(props) {
      (0, _classCallCheck2.default)(this, RomUpgradeInfo);
      this.initInfo(props);
    }

    (0, _createClass2.default)(RomUpgradeInfo, [{
      key: "initInfo",
      value: function initInfo(props) {
        this.channel = _CommonUtils.default.isNull(props.channel) ? RomChannelType.UNKNOWN : RomUpgradeInfo.getRomChannelByStr(props.channel);
        this.changelog = _CommonUtils.default.isNull(props.changelog) ? null : props.changelog;
        this.changelogUrl = _CommonUtils.default.isNull(props.changelogUrl) ? null : props.changelogUrl;
        this.version = _CommonUtils.default.isNull(props.version) ? null : props.version;
        this.hash = props.hash;
        this.link = props.link;
        this.size = parseInt(props.size);
      }
    }], [{
      key: "getRomChannelByStr",
      value: function getRomChannelByStr(channelStr) {
        if (_CommonUtils.default.isNull(channelStr)) {
          return RomChannelType.UNKNOWN;
        }

        if (channelStr.toLowerCase() === 'current') {
          return RomChannelType.CURRENT;
        }

        if (channelStr.toLowerCase() === 'stable') {
          return RomChannelType.DEV;
        }

        if (channelStr.toLowerCase() === 'release') {
          return RomChannelType.RELEASE;
        }

        return RomChannelType.UNKNOWN;
      }
    }]);
    return RomUpgradeInfo;
  }();

  exports.RomUpgradeInfo = RomUpgradeInfo;

  var RouterUpgradeInfo = function () {
    function RouterUpgradeInfo(props) {
      (0, _classCallCheck2.default)(this, RouterUpgradeInfo);
      this.deviceName = props.deviceName;
      this.deviceId = props.deviceId;
      this.location = props.location;
      this.channel = RomUpgradeInfo.getRomChannelByStr(props.channel);
      this.hardware = props.hardwareVersion;
      this.romVersion = props.romVersion;
      this.needUpgrade = props.needUpgrade;
      this.changelog = props.changelog;
      this.changelogUrl = props.changelogUrl;
      var steps = props.upgradeSteps;
      var upgradeSteps = [];

      if (!_CommonUtils.default.arrayIsEmpty(steps)) {
        steps.forEach(function (item) {
          var romUpgradeInfo = new RomUpgradeInfo(item);
          upgradeSteps.push(romUpgradeInfo);
        });
        this.upgradeSteps = upgradeSteps;
      }
    }

    (0, _createClass2.default)(RouterUpgradeInfo, [{
      key: "isSameUpgradeInfoFor",
      value: function isSameUpgradeInfoFor(upgradeInfo) {
        if (_CommonUtils.default.isNull(upgradeInfo) || _CommonUtils.default.isNull(upgradeInfo.deviceId) || _CommonUtils.default.isNull(this.deviceId)) {
          return false;
        }

        return this.deviceId === upgradeInfo.deviceId;
      }
    }, {
      key: "lastestChangelog",
      value: function lastestChangelog() {
        if (_CommonUtils.default.arrayIsEmpty(this.upgradeSteps)) {
          return null;
        }

        var romInfo = this.upgradeSteps[this.upgradeSteps.length - 1];

        if (!_CommonUtils.default.isNull(romInfo)) {
          return romInfo.changelog;
        }

        return null;
      }
    }, {
      key: "lastestChangelogUrl",
      value: function lastestChangelogUrl() {
        if (_CommonUtils.default.arrayIsEmpty(this.upgradeSteps)) {
          return null;
        }

        var romInfo = this.upgradeSteps[this.upgradeSteps.length - 1];

        if (!_CommonUtils.default.isNull(romInfo)) {
          return romInfo.changelogUrl;
        }

        return null;
      }
    }, {
      key: "lastestVersion",
      value: function lastestVersion() {
        if (_CommonUtils.default.arrayIsEmpty(this.upgradeSteps)) {
          return null;
        }

        var romInfo = this.upgradeSteps[this.upgradeSteps.length - 1];

        if (!_CommonUtils.default.isNull(romInfo)) {
          return romInfo.version;
        }

        return null;
      }
    }]);
    return RouterUpgradeInfo;
  }();

  exports.RouterUpgradeInfo = RouterUpgradeInfo;

  var UpgradeListItem = function () {
    function UpgradeListItem(props) {
      (0, _classCallCheck2.default)(this, UpgradeListItem);
    }

    (0, _createClass2.default)(UpgradeListItem, [{
      key: "copyValueFromItem",
      value: function copyValueFromItem(item) {
        if (_CommonUtils.default.isNull(item)) {
          return;
        }

        this.itemStatus = item.itemStatus;
        this.updateStatus = item.updateStatus;
        this.routereUpgradeInfo = item.routereUpgradeInfo;
        this.curUpgradeRom = item.curUpgradeRom;
        this.flashStartTime = item.flashStartTime;
        this.downloadStartTime = item.downloadStartTime;
      }
    }]);
    return UpgradeListItem;
  }();

  exports.UpgradeListItem = UpgradeListItem;
  var RouterUpdateStatus = {
    None: 0,
    Checking: 1,
    Checking_Disk: 2,
    Downloading: 3,
    Validate_Rom: 4,
    Flash_Rom: 5,
    No_Update: 6,
    No_Enough_Disk: 7,
    Download_Fail: 8,
    Validate_Fail: 9,
    Flash_Fail: 10,
    Upgrade_Success: 11,
    Manual_Checking: 12
  };
  exports.RouterUpdateStatus = RouterUpdateStatus;

  var RouterUpdateStatusObject = function RouterUpdateStatusObject(props) {
    (0, _classCallCheck2.default)(this, RouterUpdateStatusObject);
    this.status = _CommonUtils.default.isNull(props) ? RouterUpdateStatus.None : parseInt(props.status);
    this.percent = _CommonUtils.default.isNull(props) ? 0 : parseInt(props.percent);
  };

  exports.RouterUpdateStatusObject = RouterUpdateStatusObject;

  var UpgradeItemAndHandler = function UpgradeItemAndHandler() {
    (0, _classCallCheck2.default)(this, UpgradeItemAndHandler);
  };

  exports.UpgradeItemAndHandler = UpgradeItemAndHandler;
  var UpgradeResult = {
    Success: 0,
    No_Enough_Disk: 1,
    Download_Fail: 2,
    Validate_Fail: 3,
    Flash_Fail: 4,
    Time_Out: 5,
    Unknown: 6
  };
  exports.UpgradeResult = UpgradeResult;

  var UpgradeModel = function () {
    function UpgradeModel(props) {
      (0, _classCallCheck2.default)(this, UpgradeModel);
      this.conflict = props.conflict;
      var devices = props.deviceInfo;
      var deviceInfos = [];
      devices.forEach(function (item) {
        var deviceInfo = new RouterUpgradeInfo(item);

        if (!_CommonUtils.default.isNull(deviceInfo)) {
          deviceInfos.push(deviceInfo);
        }
      });
      this.deviceInfo = deviceInfos;
    }

    (0, _createClass2.default)(UpgradeModel, [{
      key: "needUpgrade",
      value: function needUpgrade() {
        if (!_CommonUtils.default.arrayIsEmpty(this.deviceInfo)) {
          var result = false;

          for (var i = 0; i < this.deviceInfo.length; i++) {
            var device = this.deviceInfo[i];

            if (device.needUpgrade) {
              result = true;
              break;
            }
          }

          return result;
        }

        return false;
      }
    }, {
      key: "getNeedUpgradeItemCount",
      value: function getNeedUpgradeItemCount() {
        var itemCount = 0;

        if (!_CommonUtils.default.arrayIsEmpty(this.deviceInfo)) {
          for (var i = 0; i < this.deviceInfo.length; i++) {
            var device = this.deviceInfo[i];

            if (device.needUpgrade) {
              itemCount++;
            }
          }
        }

        return itemCount;
      }
    }]);
    return UpgradeModel;
  }();

  exports.UpgradeModel = UpgradeModel;
},11144,[14305,14320,14323,10040,11147,11150,11153,11156,11159,11162,11165,11168,11171,11174,11177,11180,11183,11186,11189,11192,11195,11198,11201,11204,11207,11210,11213]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/upgrade",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "78367a80f2599dcf74e7d87a5222f254",
    "name": "upgrade_r1c",
    "type": "png"
  });
},11147,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/upgrade",
    "scales": [1],
    "hash": "fcc999d4761e7cedd8fc8586b321a598",
    "name": "upgrade_r1cl",
    "type": "pdf"
  });
},11150,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/upgrade",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "13a38b593d4c4a92ae0829e0ccaaf0fb",
    "name": "upgrade_r1d",
    "type": "png"
  });
},11153,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/upgrade",
    "width": 141,
    "height": 141,
    "scales": [1],
    "hash": "e655f322f82f3936612ca1a597d0d3f5",
    "name": "upgrade_r2d",
    "type": "png"
  });
},11156,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/upgrade",
    "scales": [1],
    "hash": "637221e43b8380741abaed77920d6ff7",
    "name": "upgrade_r3",
    "type": "pdf"
  });
},11159,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/upgrade",
    "width": 141,
    "height": 141,
    "scales": [1],
    "hash": "c1630645ad680270d2f51bb9e759c8c6",
    "name": "upgrade_r3l",
    "type": "png"
  });
},11162,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/upgrade",
    "width": 141,
    "height": 141,
    "scales": [1],
    "hash": "916cd24a7867984b107f74024cbf8676",
    "name": "upgrade_r3p",
    "type": "png"
  });
},11165,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/upgrade",
    "width": 94,
    "height": 94,
    "scales": [1],
    "hash": "8b72fbc2438d4d28885b6ca097e12b99",
    "name": "upgrade_r4c",
    "type": "png"
  });
},11168,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/upgrade",
    "width": 94,
    "height": 94,
    "scales": [1],
    "hash": "bf25e6078e63a6bb499356e6335e573b",
    "name": "upgrade_r4",
    "type": "png"
  });
},11171,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/upgrade",
    "width": 94,
    "height": 94,
    "scales": [1],
    "hash": "bf25e6078e63a6bb499356e6335e573b",
    "name": "upgrade_r4a",
    "type": "png"
  });
},11174,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/upgrade",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "6f339c1381a893f11bf7cc7e0a0d8862",
    "name": "upgrade_r2100",
    "type": "png"
  });
},11177,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/upgrade",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "3a012ef5bcc8af7abae39d2e9feb7fdd",
    "name": "upgrade_rm2100",
    "type": "png"
  });
},11180,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/upgrade",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "de202cb8f1b50b63130aa5a9ba262c70",
    "name": "upgrade_ax3600",
    "type": "png"
  });
},11183,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/upgrade",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "d28c36ae8ed62c6f1e0815a7d04a8a5f",
    "name": "upgrade_rm1800",
    "type": "png"
  });
},11186,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/upgrade",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "f0f5df2c3b41cdae22972317d66eac72",
    "name": "upgrade_r1350",
    "type": "png"
  });
},11189,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/upgrade",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "f0f5df2c3b41cdae22972317d66eac72",
    "name": "upgrade_r2350",
    "type": "png"
  });
},11192,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/upgrade",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "887cbbcdeded02d16c41e7f5f7e7c990",
    "name": "upgrade_rm1800c",
    "type": "png"
  });
},11195,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/upgrade",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "f7f0fa227cb2be76e3bc5737d4ea7bd6",
    "name": "upgrade_ir1200g",
    "type": "png"
  });
},11198,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/upgrade",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "e2622dca4a480ecfac86405e4e577e8c",
    "name": "upgrade_ra69",
    "type": "png"
  });
},11201,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/upgrade",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "b7fd9aa28792f6c37c68f34aebb14afc",
    "name": "upgrade_cr6606",
    "type": "png"
  });
},11204,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/upgrade",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "9add9ca65ec7b9fb7f34516c73073819",
    "name": "upgrade_ra72",
    "type": "png"
  });
},11207,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/upgrade",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "4cf87892a74a17c3ecfdce02601e59a2",
    "name": "upgrade_ra70",
    "type": "png"
  });
},11210,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.miotrouter/Resources/upgrade",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "38d1c26d31853910fc8318ef677ed299",
    "name": "upgrade_ra81",
    "type": "png"
  });
},11213,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _miot = _$$_REQUIRE(_dependencyMap[4]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _LocalUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _RouterInfoHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _UpgradeActionHandler = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _UpgradeUtil = _$$_REQUIRE(_dependencyMap[10]);

  var instance = null;

  var UpgradeManager = function () {
    function UpgradeManager() {
      var _this = this;

      (0, _classCallCheck2.default)(this, UpgradeManager);

      this.testCallBack = function () {};

      this.upgradeActionHandlerProgressCallBack = function (statusObj, deviceInfo) {
        if (_CommonUtils.default.isNull(deviceInfo) || _CommonUtils.default.isNull(statusObj)) {
          return;
        }

        var itemAndHandler = _this.getUpgradeItemAndHandlerByDeviceId(deviceInfo.deviceId);

        var upgradeItem = itemAndHandler.item;

        if (_CommonUtils.default.isNull(upgradeItem)) {
          return;
        }

        switch (statusObj.status) {
          case _UpgradeUtil.RouterUpdateStatus.Validate_Rom:
          case _UpgradeUtil.RouterUpdateStatus.Flash_Rom:
          case _UpgradeUtil.RouterUpdateStatus.Manual_Checking:
            {
              var oldStatus = upgradeItem.updateStatus;

              if (!_CommonUtils.default.isNull(oldStatus) && oldStatus.status < _UpgradeUtil.RouterUpdateStatus.Validate_Rom) {
                var nowTime = new Date().getTime();
                upgradeItem.flashStartTime = parseInt(nowTime / 1000);
              }
            }

          case _UpgradeUtil.RouterUpdateStatus.Downloading:
            upgradeItem.updateStatus = statusObj;
            break;

          default:
            break;
        }
      };

      this.upgradeHandlerStartCallBack = function (deviceInfo, romInfo) {
        _this.startUpgradeWithInfo(deviceInfo, romInfo);
      };

      this.upgradeHandlerEndCallBack = function (deviceInfo, result) {
        if (_CommonUtils.default.isNull(deviceInfo)) {
          return;
        }

        var itemAndHandler = _this.getUpgradeItemAndHandlerByDeviceId(deviceInfo.deviceId);

        var handler = itemAndHandler.handler;

        if (!_CommonUtils.default.isNull(handler)) {
          handler.finishUpgrade();
        }

        var upgradeItem = itemAndHandler.item;

        if (!_CommonUtils.default.isNull(upgradeItem)) {
          switch (result) {
            case _UpgradeUtil.UpgradeResult.Success:
              _this.saveUpgradeTime(upgradeItem.routereUpgradeInfo.deviceId);

              upgradeItem.itemStatus = _UpgradeUtil.UpgradeItemStatus.Upgrade_Success;
              break;

            case _UpgradeUtil.UpgradeResult.No_Enough_Disk:
              upgradeItem.itemStatus = _UpgradeUtil.UpgradeItemStatus.No_Enough_Disk;
              break;

            case _UpgradeUtil.UpgradeResult.Download_Fail:
              upgradeItem.itemStatus = _UpgradeUtil.UpgradeItemStatus.Upgrade_Fail_Download;
              break;

            case _UpgradeUtil.UpgradeResult.Validate_Fail:
              upgradeItem.itemStatus = _UpgradeUtil.UpgradeItemStatus.Upgrade_Fail_Validate;
              break;

            case _UpgradeUtil.UpgradeResult.Flash_Fail:
              upgradeItem.itemStatus = _UpgradeUtil.UpgradeItemStatus.Upgrade_Fail_Flash;
              break;

            case _UpgradeUtil.UpgradeResult.Time_Out:
              upgradeItem.itemStatus = _UpgradeUtil.UpgradeItemStatus.Upgrade_Fail_Time_Out;
              break;

            case _UpgradeUtil.UpgradeResult.Unknown:
              upgradeItem.itemStatus = _UpgradeUtil.UpgradeItemStatus.Upgrade_Fail;
              break;

            default:
              break;
          }

          upgradeItem.curUpgradeRom = null;
        }
      };

      this.upgradeHandlerNextCallBack = function (deviceInfo, newRomInfo) {
        _this.startUpgradeWithInfo(deviceInfo, newRomInfo);
      };

      if (!instance) {
        instance = this;
      }

      return instance;
    }

    (0, _createClass2.default)(UpgradeManager, [{
      key: "startUpgradeItem",
      value: function startUpgradeItem(upgradeItem) {
        if (_CommonUtils.default.isNull(upgradeItem) || _CommonUtils.default.isNull(upgradeItem.routereUpgradeInfo)) {
          return;
        }

        if (!_CommonUtils.default.arrayIsEmpty(this.upgradeList)) {
          for (var i = 0; i < this.upgradeList.length; i++) {
            var _itemAndHandler = this.upgradeList[i];

            if (_itemAndHandler.item.routereUpgradeInfo.isSameUpgradeInfoFor(upgradeItem.routereUpgradeInfo)) {
              return;
            }
          }
        } else {
          this.upgradeList = [];
        }

        var itemAndHandler = new _UpgradeUtil.UpgradeItemAndHandler();
        itemAndHandler.item = upgradeItem;
        var handlerProps = {
          deviceInfo: upgradeItem.routereUpgradeInfo,
          progressCallback: this.upgradeActionHandlerProgressCallBack,
          endCallback: this.upgradeHandlerEndCallBack,
          nextCallback: this.upgradeHandlerNextCallBack,
          startCallback: this.upgradeHandlerStartCallBack
        };
        var upgradeHandler = new _UpgradeActionHandler.default(handlerProps);
        itemAndHandler.handler = upgradeHandler;
        var temList = this.upgradeList;
        temList.push(itemAndHandler);
        upgradeItem.itemStatus = _UpgradeUtil.UpgradeItemStatus.Upgrading;
        upgradeItem.curUpgradeRom = upgradeHandler.getFirstUpgradingRom();
        var nowTime = new Date().getTime();
        upgradeItem.downloadStartTime = parseInt(nowTime / 1000);
        var statusObj = new _UpgradeUtil.RouterUpdateStatusObject();
        statusObj.status = _UpgradeUtil.RouterUpdateStatus.Downloading;
        statusObj.percent = 0;
        upgradeItem.updateStatus = statusObj;
        upgradeHandler.startUpgrade();
      }
    }, {
      key: "getAllUpgradeItems",
      value: function getAllUpgradeItems() {
        var items = [];

        if (_CommonUtils.default.arrayIsEmpty(this.upgradeList)) {
          return items;
        }

        this.upgradeList.forEach(function (itemAndHandler) {
          items.push(itemAndHandler.item);
        });
        return items;
      }
    }, {
      key: "saveUpgradeTime",
      value: function saveUpgradeTime(deviceId) {
        if (_CommonUtils.default.isNull(deviceId)) {
          return;
        }

        if (_CommonUtils.default.isNull(this.lastUpgradeTimeInfo)) {
          this.lastUpgradeTimeInfo = {};
        }

        var nowTime = new Date().getTime();
        this.lastUpgradeTimeInfo[deviceId] = parseInt(nowTime / 1000).toString();
      }
    }, {
      key: "getUpgradeItemAndHandlerByDeviceId",
      value: function getUpgradeItemAndHandlerByDeviceId(deviceId) {
        if (_CommonUtils.default.isNull(deviceId)) {
          return null;
        }

        if (_CommonUtils.default.arrayIsEmpty(this.upgradeList)) {
          return null;
        }

        var result = null;

        for (var i = 0; i < this.upgradeList.length; i++) {
          var itemAndHandler = this.upgradeList[i];
          var deviceInfo = itemAndHandler.item.routereUpgradeInfo;

          if (deviceInfo.deviceId === deviceId) {
            result = itemAndHandler;
            break;
          }
        }

        return result;
      }
    }, {
      key: "startUpgradeWithInfo",
      value: function startUpgradeWithInfo(deviceInfo, newRomInfo) {
        if (_CommonUtils.default.isNull(deviceInfo) || _CommonUtils.default.isNull(newRomInfo)) {
          return;
        }

        var itemAndHandler = this.getUpgradeItemAndHandlerByDeviceId(deviceInfo.deviceId);
        var upgradeItem = itemAndHandler.item;

        if (!_CommonUtils.default.isNull(upgradeItem)) {
          upgradeItem.curUpgradeRom = newRomInfo;
          upgradeItem.itemStatus = _UpgradeUtil.UpgradeItemStatus.Upgrading;
          var nowTime = new Date().getTime();
          upgradeItem.downloadStartTime = parseInt(nowTime / 1000);
          var statusObj = new _UpgradeUtil.RouterUpdateStatusObject();
          statusObj.status = _UpgradeUtil.RouterUpdateStatus.Downloading;
          statusObj.percent = 0;
          upgradeItem.updateStatus = statusObj;
        }
      }
    }, {
      key: "clearAllUpgradeItems",
      value: function clearAllUpgradeItems() {
        if (_CommonUtils.default.arrayIsEmpty(this.upgradeList)) {
          return;
        }

        this.upgradeList.forEach(function (itemAndHandler) {
          itemAndHandler.handler.finishUpgrade();
        });
        this.upgradeList = [];
      }
    }, {
      key: "hasUpgradingItem",
      value: function hasUpgradingItem() {
        if (_CommonUtils.default.arrayIsEmpty(this.upgradeList)) {
          return false;
        }

        var result = false;

        for (var i = 0; i < this.upgradeList.length; i++) {
          var itemAndHandler = this.upgradeList[i];

          if (itemAndHandler.item.itemStatus === _UpgradeUtil.UpgradeItemStatus.Upgrading) {
            result = true;
            break;
          }
        }

        return result;
      }
    }, {
      key: "saveUpgradeCheckTime",
      value: function saveUpgradeCheckTime() {
        var nowTime = new Date().getTime();
        this.lastCheckTime = parseInt(nowTime / 1000);
      }
    }, {
      key: "asyncCheckUpgradeInfo",
      value: function asyncCheckUpgradeInfo(successCallback, failCallback) {
        var upgradeInfo, validInfos, allUpgraded, now, nowTime, i, deviceInfo, lastUpgradeTime;
        return _regenerator.default.async(function asyncCheckUpgradeInfo$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return _regenerator.default.awrap(this.fetchUpgradeInfo());

              case 2:
                upgradeInfo = _context.sent;

                if (!_CommonUtils.default.isNull(upgradeInfo)) {
                  _context.next = 7;
                  break;
                }

                failCallback();
                _context.next = 18;
                break;

              case 7:
                _context.next = 9;
                return _regenerator.default.awrap(this.checkValidUpgradeInfo(upgradeInfo));

              case 9:
                validInfos = _context.sent;
                this.saveUpgradeCheckTime();
                allUpgraded = true;
                now = new Date().getTime();
                nowTime = parseInt(now / 1000);

                for (i = 0; i < validInfos.deviceInfo.length; i++) {
                  deviceInfo = validInfos.deviceInfo[i];
                  lastUpgradeTime = 0;

                  if (!_CommonUtils.default.isNull(this.lastUpgradeTimeInfo) && this.lastUpgradeTimeInfo.hasOwnProperty(deviceInfo.deviceId)) {
                    lastUpgradeTime = this.lastUpgradeTimeInfo[deviceInfo.deviceId];
                  }

                  if (nowTime - lastUpgradeTime < 360) {
                    deviceInfo.needUpgrade = false;

                    if (!_CommonUtils.default.isNull(deviceInfo.lastestChangelog())) {
                      deviceInfo.changelog = deviceInfo.lastestChangelog();
                    }

                    if (!_CommonUtils.default.isNull(deviceInfo.lastestChangelogUrl())) {
                      deviceInfo.changelogUrl = deviceInfo.lastestChangelogUrl();
                    }

                    if (!_CommonUtils.default.isNull(deviceInfo.lastestVersion())) {
                      deviceInfo.romVersion = deviceInfo.lastestVersion();
                    }
                  } else {
                    allUpgraded = false;
                  }
                }

                if (allUpgraded) {
                  validInfos.conflict = false;
                }

                if (validInfos.conflict) {}

                successCallback(validInfos);

              case 18:
              case "end":
                return _context.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "fetchUpgradeInfo",
      value: function fetchUpgradeInfo() {
        var local, deviceId, platform, paramsDic;
        return _regenerator.default.async(function fetchUpgradeInfo$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                local = _LocalUtils.default.getRouterAvailableLanguageStr();
                deviceId = _miot.Device.deviceID.replace('miwifi.', '');
                platform = 'IOS';
                paramsDic = {
                  method: 'GET',
                  params: {
                    deviceId: deviceId,
                    deviceID: deviceId,
                    checkUpgrade: 'true',
                    platform: platform,
                    locale: local,
                    version: '5.2.12',
                    source: 'miot'
                  }
                };
                return _context2.abrupt("return", _miot.Service.callSmartHomeAPI(_API.default.router_upgrade_list, paramsDic).then(function (res) {
                  if (parseInt(res.code) === 0) {
                    if (!_CommonUtils.default.isNull(res.data) && !_CommonUtils.default.isNull(res.data.deviceInfo)) {
                      var upgradeModel = new _UpgradeUtil.UpgradeModel(res.data);
                      return upgradeModel;
                    } else {
                      return null;
                    }
                  }
                }).catch(function (error) {
                  return null;
                }));

              case 5:
              case "end":
                return _context2.stop();
            }
          }
        });
      }
    }, {
      key: "checkValidUpgradeInfo",
      value: function checkValidUpgradeInfo(info) {
        var deviceId, temModel, list, isMeshMode, curUpgradeInfo, meshUpgradeInfos;
        return _regenerator.default.async(function checkValidUpgradeInfo$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                deviceId = _miot.Device.deviceID.replace('miwifi.', '');
                temModel = info;
                list = info.deviceInfo;
                isMeshMode = _RouterInfoHelper.default.sharedInstance().isMeshMode();
                curUpgradeInfo = list.filter(function (item) {
                  return item.deviceId === deviceId;
                });

                if (!isMeshMode) {
                  _context3.next = 13;
                  break;
                }

                _context3.next = 8;
                return _regenerator.default.awrap(this.fetchMeshUpgradeInfos(list));

              case 8:
                meshUpgradeInfos = _context3.sent;
                temModel.deviceInfo = meshUpgradeInfos;
                return _context3.abrupt("return", temModel);

              case 13:
                temModel.deviceInfo = curUpgradeInfo;
                return _context3.abrupt("return", temModel);

              case 15:
              case "end":
                return _context3.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "fetchMeshUpgradeInfos",
      value: function fetchMeshUpgradeInfos(list) {
        var deviceId, curMeshUpgradeInfos, meshDevIds, childInfos, _loop, i, routerList, _loop2;

        return _regenerator.default.async(function fetchMeshUpgradeInfos$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                deviceId = _miot.Device.deviceID.replace("miwifi.", "");
                curMeshUpgradeInfos = list.filter(function (item) {
                  return item.deviceId === deviceId;
                });
                meshDevIds = [];
                _context4.next = 5;
                return _regenerator.default.awrap(this.fetchMeshChildInfo());

              case 5:
                childInfos = _context4.sent;

                if (!_CommonUtils.default.arrayIsEmpty(childInfos)) {
                  childInfos.forEach(function (item) {
                    meshDevIds.push(item.devid);
                  });
                }

                _loop = function _loop(i) {
                  var meshDevId = meshDevIds[i];
                  var findCurDevUpgradeInfo = list.filter(function (item) {
                    return item.deviceId === meshDevId;
                  });

                  if (findCurDevUpgradeInfo.length > 0) {
                    curMeshUpgradeInfos.push(findCurDevUpgradeInfo[0]);
                  }
                };

                for (i = 0; i < meshDevIds.length; i++) {
                  _loop(i);
                }

                _context4.next = 11;
                return _regenerator.default.awrap(this.fetchRouterList());

              case 11:
                routerList = _context4.sent;

                if (_CommonUtils.default.isObjectKindofArray(routerList) && routerList.length > 0) {
                  _loop2 = function _loop2(i) {
                    var meshItem = curMeshUpgradeInfos[i];
                    routerList.map(function (item) {
                      if (item.id === meshItem.deviceId && item.name !== meshItem.deviceName) {
                        meshItem.deviceName = item.name;
                      }
                    });
                  };

                  for (i = 0; i < curMeshUpgradeInfos.length; i++) {
                    _loop2(i);
                  }
                }

                return _context4.abrupt("return", curMeshUpgradeInfos);

              case 14:
              case "end":
                return _context4.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "fetchMeshChildInfo",
      value: function fetchMeshChildInfo() {
        var deviceId, method, paramsDic;
        return _regenerator.default.async(function fetchMeshChildInfo$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                deviceId = _miot.Device.deviceID.replace("miwifi.", "");
                method = 'GET';
                paramsDic = {
                  method: method,
                  params: {
                    deviceID: deviceId,
                    deviceId: deviceId,
                    refresh: 1
                  }
                };
                return _context5.abrupt("return", _miot.Service.callSmartHomeAPI(_API.default.meshTopology, paramsDic).then(function (res) {
                  if (res.code == 0) {
                    return res.childMeshInfos;
                  } else {
                    return [];
                  }
                }).catch(function (e) {
                  return [];
                }));

              case 4:
              case "end":
                return _context5.stop();
            }
          }
        });
      }
    }, {
      key: "fetchRouterList",
      value: function fetchRouterList() {
        var paramsDic;
        return _regenerator.default.async(function fetchRouterList$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                paramsDic = {
                  method: 'GET',
                  params: {
                    showStatus: 'true'
                  }
                };
                return _context6.abrupt("return", _miot.Service.callSmartHomeAPI(_API.default.router_list.remote, paramsDic).then(function (res) {
                  if (res.code == 0) {
                    var routerList = res.deviceList;

                    if (_CommonUtils.default.isObjectKindofArray(routerList)) {
                      return routerList;
                    }
                  } else {
                    return null;
                  }
                }).catch(function (error) {
                  return null;
                }));

              case 2:
              case "end":
                return _context6.stop();
            }
          }
        });
      }
    }], [{
      key: "sharedInstance",
      value: function sharedInstance() {
        var singleton = new UpgradeManager();
        return singleton;
      }
    }]);
    return UpgradeManager;
  }();

  exports.default = UpgradeManager;
},11216,[14305,14674,14320,14323,10074,10064,10040,11141,10076,11219,11144]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _miot = _$$_REQUIRE(_dependencyMap[4]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _UpgradeUtil = _$$_REQUIRE(_dependencyMap[7]);

  var CHECK_UPGRADE_PROGRESS_INTERVAL = 2;
  var CHECK_UPGRADE_PROGRESS_TIMEOUT = 180;
  var DEVICE_UPGRADE_STEP_NONE = 0;
  var DEVICE_UPGRADE_STEP_DOWNLOAD = 1;
  var DEVICE_UPGRADE_STEP_FLASH = 2;
  var DEVICE_UPGRADE_STEP_RESTART = 3;
  var DEVICE_UPGRADE_STEP_FINISHED = 4;

  var UpgradeActionHandler = function () {
    function UpgradeActionHandler(props) {
      (0, _classCallCheck2.default)(this, UpgradeActionHandler);
      this.upgradeDevice = props.deviceInfo;
      this.nextUpgradingIndx = 0;
      this.isChecking = false;
      this.upgradeStep = DEVICE_UPGRADE_STEP_NONE;
      this.progressCallback = props.progressCallback;
      this.endCallback = props.endCallback;
      this.nextCallback = props.nextCallback;
      this.startCallback = props.startCallback;
    }

    (0, _createClass2.default)(UpgradeActionHandler, [{
      key: "startUpgrade",
      value: function startUpgrade() {
        if (_CommonUtils.default.isNull(this.upgradeDevice)) {
          return;
        }

        this.upgradeStep = DEVICE_UPGRADE_STEP_NONE;
        this.curUpgradingRom = null;
        this.nextUpgradingIndx = 0;
        this.isChecking = false;
        this.startCheckUpgradeProgress();
        this.upgradeNextRomInfo();
      }
    }, {
      key: "startCheckUpgradeProgress",
      value: function startCheckUpgradeProgress() {
        var _this = this;

        this.checkStatusTimer = setInterval(function () {
          _this.checkUpgradingStatus();
        }, 2000);
      }
    }, {
      key: "checkUpgradingStatus",
      value: function checkUpgradingStatus() {
        var statusObj, hardware, nowTime, _hardware, now, _nowTime, estimateFlashTime;

        return _regenerator.default.async(function checkUpgradingStatus$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!this.isChecking) {
                  _context.next = 2;
                  break;
                }

                return _context.abrupt("return");

              case 2:
                _context.next = 4;
                return _regenerator.default.awrap(this.fetchUpgradeStatus());

              case 4:
                statusObj = _context.sent;

                if (_CommonUtils.default.isNull(statusObj)) {
                  _context.next = 38;
                  break;
                }

                _context.t0 = statusObj.status;
                _context.next = _context.t0 === _UpgradeUtil.RouterUpdateStatus.None ? 9 : _context.t0 === _UpgradeUtil.RouterUpdateStatus.Checking ? 11 : _context.t0 === _UpgradeUtil.RouterUpdateStatus.Checking_Disk ? 11 : _context.t0 === _UpgradeUtil.RouterUpdateStatus.Downloading ? 11 : _context.t0 === _UpgradeUtil.RouterUpdateStatus.Validate_Rom ? 14 : _context.t0 === _UpgradeUtil.RouterUpdateStatus.Flash_Rom ? 14 : _context.t0 === _UpgradeUtil.RouterUpdateStatus.Manual_Checking ? 14 : _context.t0 === _UpgradeUtil.RouterUpdateStatus.No_Update ? 20 : _context.t0 === _UpgradeUtil.RouterUpdateStatus.No_Enough_Disk ? 23 : _context.t0 === _UpgradeUtil.RouterUpdateStatus.Download_Fail ? 26 : _context.t0 === _UpgradeUtil.RouterUpdateStatus.Validate_Fail ? 29 : _context.t0 === _UpgradeUtil.RouterUpdateStatus.Flash_Fail ? 32 : 35;
                break;

              case 9:
                if (this.upgradeStep != DEVICE_UPGRADE_STEP_NONE) {
                  this.upgradeNextRomInfo();
                }

                return _context.abrupt("break", 36);

              case 11:
                this.upgradeStep = DEVICE_UPGRADE_STEP_DOWNLOAD;
                this.progressCallback(statusObj, this.upgradeDevice);
                return _context.abrupt("break", 36);

              case 14:
                this.upgradeStep = DEVICE_UPGRADE_STEP_FLASH;
                hardware = this.upgradeDevice.hardware;

                if (hardware.toUpperCase() === 'R1CM' || hardware.toUpperCase() === 'R1CQ') {
                  this.flashRom(this.upgradeDevice.deviceId);
                }

                if (this.flashStartTime === 0) {
                  nowTime = new Date().getTime();
                  this.flashStartTime = parseInt(nowTime / 1000);
                }

                this.progressCallback(statusObj, this.upgradeDevice);
                return _context.abrupt("break", 36);

              case 20:
                this.stopCheckUpgradeProgress();
                this.endCallBack(this.upgradeDevice, _UpgradeUtil.UpgradeResult.Unknown);
                return _context.abrupt("break", 36);

              case 23:
                this.stopCheckUpgradeProgress();
                this.endCallBack(this.upgradeDevice, _UpgradeUtil.UpgradeResult.No_Enough_Disk);
                return _context.abrupt("break", 36);

              case 26:
                this.stopCheckUpgradeProgress();
                this.endCallBack(this.upgradeDevice, _UpgradeUtil.UpgradeResult.Download_Fail);
                return _context.abrupt("break", 36);

              case 29:
                this.stopCheckUpgradeProgress();
                this.endCallBack(this.upgradeDevice, _UpgradeUtil.UpgradeResult.Validate_Fail);
                return _context.abrupt("break", 36);

              case 32:
                this.stopCheckUpgradeProgress();
                this.endCallBack(this.upgradeDevice, _UpgradeUtil.UpgradeResult.Flash_Fail);
                return _context.abrupt("break", 36);

              case 35:
                return _context.abrupt("break", 36);

              case 36:
                _context.next = 39;
                break;

              case 38:
                if (this.flashStartTime > 0) {
                  _hardware = this.upgradeDevice.hardware;
                  now = new Date().getTime();
                  _nowTime = parseInt(now / 1000);
                  estimateFlashTime = _hardware.toUpperCase() === 'R1D' ? 240 : 300;

                  if (_nowTime > this.flashStartTime + estimateFlashTime) {
                    this.upgradeStep = DEVICE_UPGRADE_STEP_RESTART;

                    if (_nowTime > this.flashStartTime + estimateFlashTime + CHECK_UPGRADE_PROGRESS_TIMEOUT) {
                      this.stopCheckUpgradeProgress();
                      this.endCallback(this.upgradeDevice, _UpgradeUtil.UpgradeResult.Time_Out);
                    }
                  }
                }

              case 39:
                this.isChecking = false;

              case 40:
              case "end":
                return _context.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "fetchUpgradeStatus",
      value: function fetchUpgradeStatus() {
        var paramsDic;
        return _regenerator.default.async(function fetchUpgradeStatus$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                paramsDic = {
                  method: 'GET',
                  params: {
                    deviceId: this.upgradeDevice.deviceId
                  }
                };
                return _context2.abrupt("return", _miot.Service.callSmartHomeAPI(_API.default.upgrade_check_status, paramsDic).then(function (res) {
                  if (parseInt(res.code) === 0) {
                    var statusObj = new _UpgradeUtil.RouterUpdateStatusObject(res);
                    return statusObj;
                  } else {
                    return null;
                  }
                }).catch(function (error) {
                  return null;
                }));

              case 2:
              case "end":
                return _context2.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "upgradeNextRomInfo",
      value: function upgradeNextRomInfo() {
        var previousRomInfo, result;
        return _regenerator.default.async(function upgradeNextRomInfo$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                this.flashStartTime = 0;
                previousRomInfo = this.curUpgradingRom;
                this.findNextRomInfo();

                if (!_CommonUtils.default.isNull(this.curUpgradingRom)) {
                  _context3.next = 9;
                  break;
                }

                this.upgradeStep = DEVICE_UPGRADE_STEP_FINISHED;
                this.stopCheckUpgradeProgress();
                this.endCallback(this.upgradeDevice, _UpgradeUtil.UpgradeResult.Success);
                _context3.next = 15;
                break;

              case 9:
                if (!_CommonUtils.default.isNull(previousRomInfo)) {
                  this.nextCallback(this.upgradeDevice, this.curUpgradingRom);
                }

                this.upgradeStep = DEVICE_UPGRADE_STEP_NONE;
                _context3.next = 13;
                return _regenerator.default.awrap(this.upgradeRouterByNewRom(this.upgradeDevice, this.curUpgradingRom));

              case 13:
                result = _context3.sent;

                if (result) {
                  this.startCallback(this.upgradeDevice, this.curUpgradingRom);
                } else {
                  this.stopCheckUpgradeProgress();
                  this.endCallback(this.upgradeDevice, _UpgradeUtil.RouterUpdateStatus.Unknown);
                }

              case 15:
              case "end":
                return _context3.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "upgradeRouterByNewRom",
      value: function upgradeRouterByNewRom(deviceInfo, romInfo) {
        var filesize, paramsDic;
        return _regenerator.default.async(function upgradeRouterByNewRom$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                filesize = '';

                if (romInfo.size > 0) {
                  filesize = romInfo.size.toString();
                }

                paramsDic = {
                  method: 'GET',
                  params: {
                    deviceId: deviceInfo.deviceId,
                    url: romInfo.link,
                    hash: romInfo.hash,
                    filesize: filesize
                  }
                };
                return _context4.abrupt("return", _miot.Service.callSmartHomeAPI(_API.default.upgrade_new_rom, paramsDic).then(function (res) {
                  if (parseInt(res.code) === 0) {
                    return true;
                  } else {
                    return false;
                  }
                }).catch(function (error) {
                  return false;
                }));

              case 4:
              case "end":
                return _context4.stop();
            }
          }
        });
      }
    }, {
      key: "flashRom",
      value: function flashRom(deviceId) {
        var paramsDic = {
          method: 'GET',
          params: {
            deviceId: deviceId,
            permission: '1'
          }
        };

        _miot.Service.callSmartHomeAPI(_API.default.upgrade_flash_rom, paramsDic).then(function (res) {}).catch(function (error) {});
      }
    }, {
      key: "stopCheckUpgradeProgress",
      value: function stopCheckUpgradeProgress() {
        clearInterval(this.checkStatusTimer);
      }
    }, {
      key: "finishUpgrade",
      value: function finishUpgrade() {
        this.stopCheckUpgradeProgress();
      }
    }, {
      key: "findNextRomInfo",
      value: function findNextRomInfo() {
        this.curUpgradingRom = null;
        var arrUpgradeSteps = this.upgradeDevice.upgradeSteps;

        if (_CommonUtils.default.arrayIsEmpty(arrUpgradeSteps)) {
          return;
        }

        if (this.nextUpgradingIndx < arrUpgradeSteps.length) {
          this.curUpgradingRom = arrUpgradeSteps[this.nextUpgradingIndx];
          var nextIndex = this.nextUpgradingIndx;
          nextIndex++;
          this.nextUpgradingIndx = nextIndex;
        }
      }
    }, {
      key: "getFirstUpgradingRom",
      value: function getFirstUpgradingRom() {
        var arrUpgradeSteps = this.upgradeDevice.upgradeSteps;

        if (_CommonUtils.default.arrayIsEmpty(arrUpgradeSteps)) {
          return;
        }

        return arrUpgradeSteps[0];
      }
    }]);
    return UpgradeActionHandler;
  }();

  exports.default = UpgradeActionHandler;
},11219,[14305,14674,14320,14323,10074,10064,10040,11144]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var UpgradeDetail = function (_React$Component) {
    (0, _inherits2.default)(UpgradeDetail, _React$Component);

    function UpgradeDetail(props) {
      var _this;

      (0, _classCallCheck2.default)(this, UpgradeDetail);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(UpgradeDetail).call(this, props));
      _this.state = {};
      _this.deviceInfo = _this.props.navigation.state.params.deviceInfo;
      return _this;
    }

    (0, _createClass2.default)(UpgradeDetail, [{
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "getTitle",
      value: function getTitle() {
        return 'MiWiFi Rom ' + this.deviceInfo.romVersion + ' 更新日志：';
      }
    }, {
      key: "getContent",
      value: function getContent() {
        var changelog = this.deviceInfo.changelog;

        if (_CommonUtils.default.isNull(changelog)) {
          changelog = '';
        }

        return changelog;
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, this.getTitle()), _react.default.createElement(_reactNative.Text, {
          style: styles.content
        }, this.getContent()));
      }
    }]);
    return UpgradeDetail;
  }(_react.default.Component);

  exports.default = UpgradeDetail;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#fff'
    },
    title: {
      marginLeft: 20,
      marginRight: 20,
      marginTop: 40,
      fontSize: 16,
      color: '#000',
      textAlign: 'left'
    },
    content: {
      marginLeft: 20,
      marginRight: 20,
      marginTop: 20,
      fontSize: 12,
      color: '#000',
      textAlign: 'left'
    }
  });
},11222,[14305,14320,14323,14371,14377,14386,10297,10033,10040]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _ListItem = _$$_REQUIRE(_dependencyMap[8]);

  var _mhuiRn = _$$_REQUIRE(_dependencyMap[9]);

  var _miot = _$$_REQUIRE(_dependencyMap[10]);

  var _API = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var UpgradeSetting = function (_React$Component) {
    (0, _inherits2.default)(UpgradeSetting, _React$Component);

    function UpgradeSetting(props) {
      var _this;

      (0, _classCallCheck2.default)(this, UpgradeSetting);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(UpgradeSetting).call(this, props));

      _this.changeAutoStatusHandler = function (status) {
        var deviceId = _miot.Device.deviceID.replace('miwifi.', '');

        var tempSetting = _this.state.upgradeInfo;
        tempSetting.auto = status ? '1' : '0';
        var paramsDic = {
          method: 'GET',
          params: {
            deviceId: deviceId,
            auto: tempSetting.auto,
            time: tempSetting.time.toString()
          }
        };

        _this.updateSetting(paramsDic);
      };

      _this.setTimeHandler = function (time) {
        var timeStr = '4';

        if (time[0] === 0) {
          timeStr = '3';
        } else if (time[0] === 1) {
          timeStr = '4';
        } else if (time[0] === 2) {
          timeStr = '5';
        } else {
          timeStr = '4';
        }

        var deviceId = _miot.Device.deviceID.replace('miwifi.', '');

        var tempSetting = _this.state.upgradeInfo;
        var auto = tempSetting.auto ? '1' : '0';
        var paramsDic = {
          method: 'GET',
          params: {
            deviceId: deviceId,
            auto: auto,
            time: timeStr
          }
        };

        _this.updateSetting(paramsDic);
      };

      _this.state = {
        datePickerShow: false,
        showLoading: true,
        loadingText: '',
        upgradeInfo: null,
        timeSelectIndexArray: [1]
      };
      return _this;
    }

    (0, _createClass2.default)(UpgradeSetting, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.fetchUpgradeSettingInfo(true);
      }
    }, {
      key: "fetchUpgradeSettingInfo",
      value: function fetchUpgradeSettingInfo(loading) {
        var _this2 = this;

        var deviceId = _miot.Device.deviceID.replace('miwifi.', '');

        var paramsDic = {
          method: 'GET',
          params: {
            deviceId: deviceId
          }
        };

        if (loading) {
          this.setState({
            showLoading: true,
            loadingText: '请稍候'
          });
        }

        _miot.Service.callSmartHomeAPI(_API.default.ota_info, paramsDic).then(function (res) {
          _this2.setState({
            showLoading: false
          });

          if (parseInt(res.code) === 0) {
            _this2.setState({
              upgradeInfo: res
            });
          } else {
            _this2.setState({
              upgradeInfo: null
            });

            _CommonUtils.default.ShowToastCenter('获取升级设置失败，请稍后重试');
          }
        }).catch(function (error) {
          _this2.setState({
            upgradeInfo: null,
            showLoading: false
          });

          _CommonUtils.default.ShowToastCenter('获取升级设置失败，请稍后重试');
        });
      }
    }, {
      key: "requestInfoFailed",
      value: function requestInfoFailed() {
        return _CommonUtils.default.isNull(this.state.upgradeInfo);
      }
    }, {
      key: "getAutoStatus",
      value: function getAutoStatus() {
        if (this.requestInfoFailed()) {
          return false;
        }

        var info = this.state.upgradeInfo;

        if (parseInt(info.auto) === 1) {
          return true;
        }

        return false;
      }
    }, {
      key: "getTimeText",
      value: function getTimeText() {
        if (this.requestInfoFailed()) {
          return '';
        }

        var info = this.state.upgradeInfo;
        var time = parseInt(info.time);
        return time + ':00 自动升级';
      }
    }, {
      key: "getCurTimePickerStr",
      value: function getCurTimePickerStr() {
        if (this.requestInfoFailed()) {
          return '';
        }

        var info = this.state.upgradeInfo;
        var time = parseInt(info.time);
        var res = '';

        if (time === 0) {
          res = '24';
        } else {
          if (time < 10) {
            res = '0' + time;
          } else {
            res = time.toString();
          }
        }

        return res;
      }
    }, {
      key: "getCurTimeSelectIndexArr",
      value: function getCurTimeSelectIndexArr() {
        if (this.requestInfoFailed()) {
          return [1];
        }

        var info = this.state.upgradeInfo;
        var time = parseInt(info.time);
        var res = [1];

        if (time === 3) {
          res = [0];
        } else if (time === 4) {
          res = [1];
        } else if (time === 5) {
          res = [2];
        } else {
          res = [1];
        }

        return res;
      }
    }, {
      key: "updateSetting",
      value: function updateSetting(paramsDic) {
        var _this3 = this;

        var preSetting = this.state.upgradeInfo;
        this.setState({
          showLoading: true,
          loadingText: '正在设置...'
        });

        _miot.Service.callSmartHomeAPI(_API.default.ota_set, paramsDic).then(function (res) {
          _this3.setState({
            showLoading: false
          });

          if (parseInt(res.code) === 0) {
            _this3.fetchUpgradeSettingInfo(false);
          } else {
            _this3.setState({
              upgradeInfo: preSetting
            });

            _CommonUtils.default.ShowToastCenter('设置失败，请稍后重试');
          }
        }).catch(function (error) {
          _this3.setState({
            showLoading: false,
            upgradeInfo: preSetting
          });

          _CommonUtils.default.ShowToastCenter('设置失败，请稍后重试');
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, !this.requestInfoFailed() ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: '路由器固件自动升级',
          subtitle: '智能选择时间进行自动升级',
          value: this.getAutoStatus(),
          showSeparator: true,
          onValueChange: function onValueChange(value) {
            _this4.changeAutoStatusHandler(value);
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: '时间设置',
          subtitle: this.getTimeText(),
          hideArrow: false,
          disabled: false,
          showSeparator: true,
          onPress: function onPress() {
            _this4.setState({
              datePickerShow: true
            });
          }
        })) : null, _react.default.createElement(_mhuiRn.ChoiceDialog, {
          visible: this.state.datePickerShow,
          title: '时间设置',
          options: [{
            title: '03：00'
          }, {
            title: '04：00'
          }, {
            title: '05：00'
          }],
          selectedIndexArray: this.getCurTimeSelectIndexArr(),
          onDismiss: function onDismiss() {
            _this4.state.datePickerShow = false;
          },
          onSelect: function onSelect(result) {
            return _this4.setTimeHandler(result);
          }
        }), _react.default.createElement(_mhuiRn.LoadingDialog, {
          visible: this.state.showLoading,
          message: this.state.loadingText
        }));
      }
    }]);
    return UpgradeSetting;
  }(_react.default.Component);

  exports.default = UpgradeSetting;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#fff'
    }
  });
},11225,[14305,14320,14323,14371,14377,14386,10297,10033,10338,22411,10074,10064,10040]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.isIphoneX = isIphoneX;
  exports.ifIphoneX = ifIphoneX;
  exports.getStatusBarHeight = getStatusBarHeight;
  exports.getBottomSpace = getBottomSpace;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  function isIphoneX() {
    var dimen = _reactNative.Dimensions.get('window');

    return _reactNative.Platform.OS === 'ios' && !_reactNative.Platform.isPad && !_reactNative.Platform.isTVOS && (dimen.height === 812 || dimen.width === 812 || dimen.height === 896 || dimen.width === 896);
  }

  function ifIphoneX(iphoneXStyle, regularStyle) {
    if (isIphoneX()) {
      return iphoneXStyle;
    }

    return regularStyle;
  }

  function getStatusBarHeight(safe) {
    return _reactNative.Platform.select({
      ios: ifIphoneX(safe ? 44 : 30, 20),
      android: _reactNative.StatusBar.currentHeight,
      default: 0
    });
  }

  function getBottomSpace() {
    return isIphoneX() ? 34 : 0;
  }
},13696,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }

  module.exports = _interopRequireDefault;
},14305,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _typeof = _$$_REQUIRE(_dependencyMap[0]);

  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function") return null;
    var cache = new WeakMap();

    _getRequireWildcardCache = function _getRequireWildcardCache() {
      return cache;
    };

    return cache;
  }

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }

    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {
        "default": obj
      };
    }

    var cache = _getRequireWildcardCache();

    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }

    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }

    newObj["default"] = obj;

    if (cache) {
      cache.set(obj, newObj);
    }

    return newObj;
  }

  module.exports = _interopRequireWildcard;
},14308,[14311]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _typeof(obj) {
    if (typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol") {
      module.exports = _typeof = function _typeof(obj) {
        return typeof obj;
      };
    } else {
      module.exports = _typeof = function _typeof(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
      };
    }

    return _typeof(obj);
  }

  module.exports = _typeof;
},14311,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var defineProperty = _$$_REQUIRE(_dependencyMap[0]);

  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      var ownKeys = Object.keys(Object(source));

      if (typeof Object.getOwnPropertySymbols === 'function') {
        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }));
      }

      ownKeys.forEach(function (key) {
        defineProperty(target, key, source[key]);
      });
    }

    return target;
  }

  module.exports = _objectSpread;
},14314,[14317]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  module.exports = _defineProperty;
},14317,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  module.exports = _classCallCheck;
},14320,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  module.exports = _createClass;
},14323,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = function invariant(condition, format, a, b, c, d, e, f) {
    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return args[argIndex++];
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1;
      throw error;
    }
  };

  module.exports = invariant;
},14326,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var warning = _$$_REQUIRE(_dependencyMap[0]);

  var warnedKeys = {};

  function warnOnce(key, message) {
    if (warnedKeys[key]) {
      return;
    }

    warning(false, message);
    warnedKeys[key] = true;
  }

  module.exports = warnOnce;
},14329,[14332]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var emptyFunction = _$$_REQUIRE(_dependencyMap[0]);

  var warning = emptyFunction;
  module.exports = warning;
},14332,[14335]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  function makeEmptyFunction(arg) {
    return function () {
      return arg;
    };
  }

  var emptyFunction = function emptyFunction() {};

  emptyFunction.thatReturns = makeEmptyFunction;
  emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
  emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
  emptyFunction.thatReturnsNull = makeEmptyFunction(null);

  emptyFunction.thatReturnsThis = function () {
    return this;
  };

  emptyFunction.thatReturnsArgument = function (arg) {
    return arg;
  };

  module.exports = emptyFunction;
},14335,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('AccessibilityInfo');

  exports.default = _default;
},14338,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.get = get;
  exports.getEnforcing = getEnforcing;

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var NativeModules = _$$_REQUIRE(_dependencyMap[2]);

  var turboModuleProxy = global.__turboModuleProxy;

  function get(name) {
    if (!global.RN$Bridgeless) {
      var legacyModule = NativeModules[name];

      if (legacyModule != null) {
        return legacyModule;
      }
    }

    if (turboModuleProxy != null) {
      var module = turboModuleProxy(name);
      return module;
    }

    return null;
  }

  function getEnforcing(name) {
    var module = get(name);
    (0, _invariant.default)(module != null, "TurboModuleRegistry.getEnforcing(...): '" + name + "' could not be found. " + 'Verify that a module by this name is registered in the native binary.');
    return module;
  }
},14341,[14305,14326,10042]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _extends() {
    module.exports = _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  module.exports = _extends;
},14344,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayWithHoles = _$$_REQUIRE(_dependencyMap[0]);

  var iterableToArrayLimit = _$$_REQUIRE(_dependencyMap[1]);

  var nonIterableRest = _$$_REQUIRE(_dependencyMap[2]);

  function _slicedToArray(arr, i) {
    return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();
  }

  module.exports = _slicedToArray;
},14347,[14350,14353,14356]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }

  module.exports = _arrayWithHoles;
},14350,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _iterableToArrayLimit(arr, i) {
    if (!((typeof Symbol === "function" ? Symbol.iterator : "@@iterator") in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) {
      return;
    }

    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  module.exports = _iterableToArrayLimit;
},14353,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }

  module.exports = _nonIterableRest;
},14356,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayWithoutHoles = _$$_REQUIRE(_dependencyMap[0]);

  var iterableToArray = _$$_REQUIRE(_dependencyMap[1]);

  var nonIterableSpread = _$$_REQUIRE(_dependencyMap[2]);

  function _toConsumableArray(arr) {
    return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();
  }

  module.exports = _toConsumableArray;
},14359,[14362,14365,14368]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }

      return arr2;
    }
  }

  module.exports = _arrayWithoutHoles;
},14362,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _iterableToArray(iter) {
    if ((typeof Symbol === "function" ? Symbol.iterator : "@@iterator") in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
  }

  module.exports = _iterableToArray;
},14365,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance");
  }

  module.exports = _nonIterableSpread;
},14368,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _typeof = _$$_REQUIRE(_dependencyMap[0]);

  var assertThisInitialized = _$$_REQUIRE(_dependencyMap[1]);

  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }

    return assertThisInitialized(self);
  }

  module.exports = _possibleConstructorReturn;
},14371,[14311,14374]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _assertThisInitialized(self) {
    if (self === undefined) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  module.exports = _assertThisInitialized;
},14374,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _getPrototypeOf(o) {
    module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
  }

  module.exports = _getPrototypeOf;
},14377,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var superPropBase = _$$_REQUIRE(_dependencyMap[0]);

  function _get(target, property, receiver) {
    if (typeof Reflect !== "undefined" && Reflect.get) {
      module.exports = _get = Reflect.get;
    } else {
      module.exports = _get = function _get(target, property, receiver) {
        var base = superPropBase(target, property);
        if (!base) return;
        var desc = Object.getOwnPropertyDescriptor(base, property);

        if (desc.get) {
          return desc.get.call(receiver);
        }

        return desc.value;
      };
    }

    return _get(target, property, receiver || target);
  }

  module.exports = _get;
},14380,[14383]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  function _superPropBase(object, property) {
    while (!Object.prototype.hasOwnProperty.call(object, property)) {
      object = getPrototypeOf(object);
      if (object === null) break;
    }

    return object;
  }

  module.exports = _superPropBase;
},14383,[14377]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var setPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) setPrototypeOf(subClass, superClass);
  }

  module.exports = _inherits;
},14386,[14389]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _setPrototypeOf(o, p) {
    module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };

    return _setPrototypeOf(o, p);
  }

  module.exports = _setPrototypeOf;
},14389,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = {
    getViewManagerConfig: function getViewManagerConfig(viewManagerName) {
      return null;
    },
    getConstants: function getConstants() {
      return {};
    },
    getConstantsForViewManager: function getConstantsForViewManager(viewManagerName) {},
    getDefaultEventTypes: function getDefaultEventTypes() {
      return [];
    },
    playTouchSound: function playTouchSound() {},
    lazilyLoadView: function lazilyLoadView(name) {},
    createView: function createView(reactTag, viewName, rootTag, props) {},
    updateView: function updateView(reactTag, viewName, props) {},
    focus: function focus(reactTag) {},
    blur: function blur(reactTag) {},
    findSubviewIn: function findSubviewIn(reactTag, point, callback) {},
    dispatchViewManagerCommand: function dispatchViewManagerCommand(reactTag, commandID, commandArgs) {},
    measure: function measure(reactTag, callback) {},
    measureInWindow: function measureInWindow(reactTag, callback) {},
    viewIsDescendantOf: function viewIsDescendantOf(reactTag, ancestorReactTag, callback) {},
    measureLayout: function measureLayout(reactTag, ancestorReactTag, errorCallback, callback) {},
    measureLayoutRelativeToParent: function measureLayoutRelativeToParent(reactTag, errorCallback, callback) {},
    setJSResponder: function setJSResponder(reactTag, blockNativeResponder) {},
    clearJSResponder: function clearJSResponder() {},
    configureNextLayoutAnimation: function configureNextLayoutAnimation(config, callback, errorCallback) {},
    removeSubviewsFromContainerWithID: function removeSubviewsFromContainerWithID(containerID) {},
    replaceExistingNonRootView: function replaceExistingNonRootView(reactTag, newReactTag) {},
    setChildren: function setChildren(containerTag, reactTags) {},
    manageChildren: function manageChildren(containerTag, moveFromIndices, moveToIndices, addChildReactTags, addAtIndices, removeAtIndices) {},
    setLayoutAnimationEnabledExperimental: function setLayoutAnimationEnabledExperimental(enabled) {},
    sendAccessibilityEvent: function sendAccessibilityEvent(reactTag, eventType) {},
    showPopupMenu: function showPopupMenu(reactTag, items, error, success) {},
    dismissPopupMenu: function dismissPopupMenu() {}
  };
},14392,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _NativeUIManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var NativeModules = _$$_REQUIRE(_dependencyMap[3]);

  var Platform = _$$_REQUIRE(_dependencyMap[4]);

  var UIManagerProperties = _$$_REQUIRE(_dependencyMap[5]);

  var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[6]);

  var viewManagerConfigs = {};
  var triedLoadingConfig = new Set();
  var NativeUIManagerConstants = {};
  var isNativeUIManagerConstantsSet = false;

  function _getConstants() {
    if (!isNativeUIManagerConstantsSet) {
      NativeUIManagerConstants = _NativeUIManager.default.getConstants();
      isNativeUIManagerConstantsSet = true;
    }

    return NativeUIManagerConstants;
  }

  var UIManagerJS = (0, _objectSpread2.default)({}, _NativeUIManager.default, {
    getConstants: function getConstants() {
      return _getConstants();
    },
    getViewManagerConfig: function getViewManagerConfig(viewManagerName) {
      if (viewManagerConfigs[viewManagerName] === undefined && _NativeUIManager.default.getConstantsForViewManager) {
        try {
          viewManagerConfigs[viewManagerName] = _NativeUIManager.default.getConstantsForViewManager(viewManagerName);
        } catch (e) {
          viewManagerConfigs[viewManagerName] = null;
        }
      }

      var config = viewManagerConfigs[viewManagerName];

      if (config) {
        return config;
      }

      if (!global.nativeCallSyncHook) {
        return config;
      }

      if (_NativeUIManager.default.lazilyLoadView && !triedLoadingConfig.has(viewManagerName)) {
        var result = _NativeUIManager.default.lazilyLoadView(viewManagerName);

        triedLoadingConfig.add(viewManagerName);

        if (result.viewConfig) {
          _getConstants()[viewManagerName] = result.viewConfig;
          lazifyViewManagerConfig(viewManagerName);
        }
      }

      return viewManagerConfigs[viewManagerName];
    }
  });
  _NativeUIManager.default.getViewManagerConfig = UIManagerJS.getViewManagerConfig;

  function lazifyViewManagerConfig(viewName) {
    var viewConfig = _getConstants()[viewName];

    viewManagerConfigs[viewName] = viewConfig;

    if (viewConfig.Manager) {
      defineLazyObjectProperty(viewConfig, 'Constants', {
        get: function get() {
          var viewManager = NativeModules[viewConfig.Manager];
          var constants = {};
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];

            if (typeof value !== 'function') {
              constants[key] = value;
            }
          });
          return constants;
        }
      });
      defineLazyObjectProperty(viewConfig, 'Commands', {
        get: function get() {
          var viewManager = NativeModules[viewConfig.Manager];
          var commands = {};
          var index = 0;
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];

            if (typeof value === 'function') {
              commands[key] = index++;
            }
          });
          return commands;
        }
      });
    }
  }

  if (_getConstants().ViewManagerNames) {
    _NativeUIManager.default.getConstants().ViewManagerNames.forEach(function (viewManagerName) {
      defineLazyObjectProperty(_NativeUIManager.default, viewManagerName, {
        get: function get() {
          return _NativeUIManager.default.getConstantsForViewManager(viewManagerName);
        }
      });
    });
  }

  if (!global.nativeCallSyncHook) {
    Object.keys(_getConstants()).forEach(function (viewManagerName) {
      if (!UIManagerProperties.includes(viewManagerName)) {
        if (!viewManagerConfigs[viewManagerName]) {
          viewManagerConfigs[viewManagerName] = _getConstants()[viewManagerName];
        }

        defineLazyObjectProperty(_NativeUIManager.default, viewManagerName, {
          get: function get() {
            return UIManagerJS.getViewManagerConfig(viewManagerName);
          }
        });
      }
    });
  }

  module.exports = UIManagerJS;
},14395,[14305,14314,14398,10042,10066,14404,10084]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('UIManager');

  exports.default = _default;
},14398,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('PlatformConstants');

  exports.default = _default;
},14401,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = ['clearJSResponder', 'configureNextLayoutAnimation', 'createView', 'dismissPopupMenu', 'dispatchViewManagerCommand', 'findSubviewIn', 'getConstantsForViewManager', 'getDefaultEventTypes', 'manageChildren', 'measure', 'measureInWindow', 'measureLayout', 'measureLayoutRelativeToParent', 'playTouchSound', 'removeRootView', 'removeSubviewsFromContainerWithID', 'replaceExistingNonRootView', 'sendAccessibilityEvent', 'setChildren', 'setJSResponder', 'setLayoutAnimationEnabledExperimental', 'showPopupMenu', 'updateView', 'viewIsDescendantOf', 'PopupMenu', 'LazyViewManagersEnabled', 'ViewManagerNames', 'StyleConstants', 'AccessibilityEventTypes', 'UIView', 'getViewManagerConfig', 'blur', 'focus', 'genericBubblingEventTypes', 'genericDirectEventTypes', 'lazilyLoadView'];
},14404,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var objectWithoutPropertiesLoose = _$$_REQUIRE(_dependencyMap[0]);

  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = objectWithoutPropertiesLoose(source, excluded);
    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  module.exports = _objectWithoutProperties;
},14407,[14410]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  module.exports = _objectWithoutPropertiesLoose;
},14410,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var NativeModule = TurboModuleRegistry.getEnforcing('DeviceInfo');
  var NativeDeviceInfo = NativeModule;
  var _default = NativeDeviceInfo;
  exports.default = _default;
},14413,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedLayoutPropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedShadowPropTypesIOS = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedTransformPropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var ImageStylePropTypes = _objectSpread({}, DeprecatedLayoutPropTypes, DeprecatedShadowPropTypesIOS, DeprecatedTransformPropTypes, {
    resizeMode: ReactPropTypes.oneOf(['center', 'contain', 'cover', 'repeat', 'stretch']),
    backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
    backgroundColor: DeprecatedColorPropType,
    borderColor: DeprecatedColorPropType,
    borderWidth: ReactPropTypes.number,
    borderRadius: ReactPropTypes.number,
    overflow: ReactPropTypes.oneOf(['visible', 'hidden']),
    tintColor: DeprecatedColorPropType,
    opacity: ReactPropTypes.number,
    overlayColor: ReactPropTypes.string,
    borderTopLeftRadius: ReactPropTypes.number,
    borderTopRightRadius: ReactPropTypes.number,
    borderBottomLeftRadius: ReactPropTypes.number,
    borderBottomRightRadius: ReactPropTypes.number
  });

  module.exports = ImageStylePropTypes;
},14416,[14314,14419,14425,14428,14431,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var normalizeColor = _$$_REQUIRE(_dependencyMap[0]);

  var colorPropType = function colorPropType(isRequired, props, propName, componentName, location, propFullName) {
    var color = props[propName];

    if (color === undefined || color === null) {
      if (isRequired) {
        return new Error('Required ' + location + ' `' + (propFullName || propName) + '` was not specified in `' + componentName + '`.');
      }

      return;
    }

    if (typeof color === 'number') {
      return;
    }

    if (normalizeColor(color) === null) {
      return new Error('Invalid ' + location + ' `' + (propFullName || propName) + '` supplied to `' + componentName + '`: ' + color + '\n' + "Valid color formats are\n  - '#f0f' (#rgb)\n  - '#f0fc' (#rgba)\n  - '#ff00ff' (#rrggbb)\n  - '#ff00ff00' (#rrggbbaa)\n  - 'rgb(255, 255, 255)'\n  - 'rgba(255, 255, 255, 1.0)'\n  - 'hsl(360, 100%, 100%)'\n  - 'hsla(360, 100%, 100%, 1.0)'\n  - 'transparent'\n  - 'red'\n  - 0xff00ff00 (0xrrggbbaa)\n");
    }
  };

  var ColorPropType = colorPropType.bind(null, false);
  ColorPropType.isRequired = colorPropType.bind(null, true);
  module.exports = ColorPropType;
},14419,[14422]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _native = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _utils = _$$_REQUIRE(_dependencyMap[2]);

  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  function shouldUseAutoDarkmode() {
    if (_native.default.MIOTService.currentDarkMode == "dark" && !_index.default.darkModeStore.setDarkMode) {
      return true;
    } else {
      return false;
    }
  }

  function changeColor(color, flag, isText) {
    if (!shouldUseAutoDarkmode() || flag) {
      return color;
    }

    var tmp = color.toString(16);

    if (tmp.length < 8) {
      if (tmp.length == 1) {
        tmp = "0000000" + tmp;
      } else if (tmp.length == 2) {
        tmp = "000000" + tmp;
      } else if (tmp.length == 3) {
        tmp = "00000" + tmp;
      } else if (tmp.length == 4) {
        tmp = "0000" + tmp;
      } else if (tmp.length == 5) {
        tmp = "000" + tmp;
      } else if (tmp.length == 6) {
        tmp = "00" + tmp;
      } else if (tmp.length == 7) {
        tmp = "0" + tmp;
      } else {
        tmp = '00000000';
      }
    }

    var alpha = tmp.substr(6, 2);
    var first = "0x" + tmp.substr(0, 6);
    var finalColor = getAntiColor(parseInt(first, 16), parseInt(alpha, 16), isText);
    var finalAlpha = getAntiAlpha(parseInt(first, 16), parseInt(alpha, 16));
    var final = parseInt(finalColor.toString(16) + alpha, 16) >>> 0;
    return final;
  }

  function getAntiAlpha(originColor, alpha, isText) {
    if (alpha <= 0x65 && alpha >= 0x4c && originColor === 0x000000) {
      return 0x99;
    }

    return alpha;
  }

  function getAntiColor(originColor, alpha, isText) {
    if (originColor === 0x32bac0) {
      return 0x25A9AF;
    } else if (originColor === 0x25A9AF) {
      return 0x158B90;
    } else if (originColor === 0xF43F31) {
      return 0xD92719;
    } else if (originColor === 0xD53C32) {
      return 0xB62920;
    }

    if (!isText) {
      if (originColor === 0xf6f7f8 || originColor === 0xe9e9ef || originColor === 0xEBEBEC || originColor === 0xefeff0) {
        return 0x000000;
      }

      if (originColor === 0xE3E6E7) {
        return 0x1a1a1a;
      }

      if (originColor === 0xb0b0b0) {
        return 0x1a1a1a;
      }
    } else {
      if (originColor === 0x23262a || originColor === 0x404346 || originColor === 0x454553) {
        return 0xffffff;
      }
    }

    var rgbColor = hexToRgb(originColor.toString(16));
    var hsvColor = rgbToHsv(rgbColor[0], rgbColor[1], rgbColor[2]);
    var h = hsvColor.h;
    var s = hsvColor.s;
    var v = hsvColor.v;
    var flag = false;

    if (isText) {
      if (hsvColor.h === 0 && hsvColor.s === 0) {
        flag = true;

        if (v >= 0 && v < 20) {
          hsvColor.v = 90;
        } else if (v >= 20 && v < 30) {
          hsvColor.v = 80;
        } else if (v >= 30 && v < 40) {
          hsvColor.v = 70;
        } else if (v >= 40 && v < 50) {
          hsvColor.v = 60;
        } else if (v >= 50 && v < 60) {
          hsvColor.v = 50;
        } else if (v >= 60 && v < 90) {
          hsvColor.v = 40;
        } else if (v >= 90 && v <= 100) {
          hsvColor.v = 90;
        } else {
          flag = false;
        }
      } else {}
    } else {
      if (hsvColor.h === 0 && hsvColor.s === 0) {
        flag = true;

        if (v >= 90 && v < 97) {
          hsvColor.v = 15;
        } else if (v >= 97 && v < 100) {
          hsvColor.v = 0;
        } else if (v === 100) {
          hsvColor.v = 10;
        } else {
          flag = false;
        }
      }
    }

    if (!flag) {
      hsvColor.s += 8;
      hsvColor.v -= 10;
    }

    return hsvToHex(hsvColor.h, Math.min(Math.max(hsvColor.s, 0), 100), Math.min(Math.max(hsvColor.v, 0), 100));
  }

  function hexToRgb(color) {
    var sColorChange = [];
    var tmp = color.toString(16);

    if (tmp.length < 8) {
      if (tmp.length == 1) {
        tmp = "#00000" + tmp;
      } else if (tmp.length == 2) {
        tmp = "#0000" + tmp;
      } else if (tmp.length == 3) {
        tmp = "#000" + tmp;
      } else if (tmp.length == 4) {
        tmp = "#00" + tmp;
      } else if (tmp.length == 5) {
        tmp = "#0" + tmp;
      } else if (tmp.length == 6) {
        tmp = "#" + tmp;
      } else {
        tmp = '#000000';
      }
    }

    var rgbString = "" + tmp.slice(1).match(/.{2}/g).map(function (x) {
      return parseInt(x, 16);
    }).join();
    sColorChange = rgbString.split(",");
    return sColorChange;
  }

  function rgbToHsv(r, g, b) {
    r = r / 255;
    g = g / 255;
    b = b / 255;
    var h, s, v;
    var min = Math.min(r, g, b);
    var max = v = Math.max(r, g, b);
    var l = (min + max) / 2;
    var difference = max - min;

    if (max == min) {
      h = 0;
    } else {
      switch (max) {
        case r:
          h = (g - b) / difference + (g < b ? 6 : 0);
          break;

        case g:
          h = 2.0 + (b - r) / difference;
          break;

        case b:
          h = 4.0 + (r - g) / difference;
          break;
      }

      h = Math.round(h * 60);
    }

    if (max == 0) {
      s = 0;
    } else {
      s = 1 - min / max;
    }

    s = Math.round(s * 100);
    v = Math.round(v * 100);
    return {
      "h": h,
      "s": s,
      "v": v
    };
  }

  function hsvToHex(h, s, v) {
    s = s / 100;
    v = v / 100;
    var r = 0,
        g = 0,
        b = 0;
    var i = parseInt(h / 60 % 6);
    var f = h / 60 - i;
    var p = v * (1 - s);
    var q = v * (1 - f * s);
    var t = v * (1 - (1 - f) * s);

    switch (i) {
      case 0:
        r = v;
        g = t;
        b = p;
        break;

      case 1:
        r = q;
        g = v;
        b = p;
        break;

      case 2:
        r = p;
        g = v;
        b = t;
        break;

      case 3:
        r = p;
        g = q;
        b = v;
        break;

      case 4:
        r = t;
        g = p;
        b = v;
        break;

      case 5:
        r = v;
        g = p;
        b = q;
        break;

      default:
        break;
    }

    r = parseInt(r * 255.0);
    g = parseInt(g * 255.0);
    b = parseInt(b * 255.0);
    var color = (0, _utils.rgbToHex)(r, g, b);
    return color;
  }

  function normalizeColor(color) {
    var matchers = getMatchers();
    var match;

    if (typeof color === 'number') {
      if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
        return changeColor(color, false, false);
      }

      return null;
    }

    var isText = false;

    if (color.indexOf('text') != -1) {
      isText = true;
      color = color.replace(new RegExp("text", "gm"), '');
    }

    var flag = false;

    if (color.indexOf('xm') != -1) {
      flag = true;
      color = color.replace(new RegExp("xm", "gm"), '');
    }

    if (match = matchers.hex6.exec(color)) {
      var tmp = parseInt(match[1] + "ff", 16) >>> 0;
      return changeColor(tmp, flag, isText);
    }

    if (names.hasOwnProperty(color)) {
      return changeColor(names[color], flag, isText);
    }

    if (match = matchers.rgb.exec(color)) {
      var _tmp = (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | 0x000000ff) >>> 0;

      return changeColor(_tmp, flag, isText);
    }

    if (match = matchers.rgba.exec(color)) {
      var _tmp2 = (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | parse1(match[4])) >>> 0;

      return changeColor(_tmp2, flag, isText);
    }

    if (match = matchers.hex3.exec(color)) {
      var _tmp3 = parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + "ff", 16) >>> 0;

      return changeColor(_tmp3, flag, isText);
    }

    if (match = matchers.hex8.exec(color)) {
      var _tmp4 = parseInt(match[1], 16) >>> 0;

      return changeColor(_tmp4, flag, isText);
    }

    if (match = matchers.hex4.exec(color)) {
      var _tmp5 = parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + match[4] + match[4], 16) >>> 0;

      return changeColor(_tmp5, flag, isText);
    }

    if (match = matchers.hsl.exec(color)) {
      var _tmp6 = (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | 0x000000ff) >>> 0;

      return changeColor(_tmp6, flag, isText);
    }

    if (match = matchers.hsla.exec(color)) {
      var _tmp7 = (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | parse1(match[4])) >>> 0;

      return changeColor(_tmp7, flag, isText);
    }

    return null;
  }

  function hue2rgb(p, q, t) {
    if (t < 0) {
      t += 1;
    }

    if (t > 1) {
      t -= 1;
    }

    if (t < 0.16666666666666666) {
      return p + (q - p) * 6 * t;
    }

    if (t < 0.5) {
      return q;
    }

    if (t < 0.6666666666666666) {
      return p + (q - p) * (0.6666666666666666 - t) * 6;
    }

    return p;
  }

  function hslToRgb(h, s, l) {
    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
    var p = 2 * l - q;
    var r = hue2rgb(p, q, h + 0.3333333333333333);
    var g = hue2rgb(p, q, h);
    var b = hue2rgb(p, q, h - 0.3333333333333333);
    return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;
  }

  var NUMBER = '[-+]?\\d*\\.?\\d+';
  var PERCENTAGE = "[-+]?\\d*\\.?\\d+%";

  function call() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return "\\(\\s*(" + args.join(')\\s*,\\s*(') + ")\\s*\\)";
  }

  var cachedMatchers;

  function getMatchers() {
    if (cachedMatchers === undefined) {
      cachedMatchers = {
        rgb: new RegExp("rgb" + call(NUMBER, NUMBER, NUMBER)),
        rgba: new RegExp("rgba" + call(NUMBER, NUMBER, NUMBER, NUMBER)),
        hsl: new RegExp("hsl" + call(NUMBER, PERCENTAGE, PERCENTAGE)),
        hsla: new RegExp("hsla" + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)),
        hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex6: /^#([0-9a-fA-F]{6})$/,
        hex8: /^#([0-9a-fA-F]{8})$/
      };
    }

    return cachedMatchers;
  }

  function parse255(str) {
    var int = parseInt(str, 10);

    if (int < 0) {
      return 0;
    }

    if (int > 255) {
      return 255;
    }

    return int;
  }

  function parse360(str) {
    var int = parseFloat(str);
    return (int % 360 + 360) % 360 / 360;
  }

  function parse1(str) {
    var num = parseFloat(str);

    if (num < 0) {
      return 0;
    }

    if (num > 1) {
      return 255;
    }

    return Math.round(num * 255);
  }

  function parsePercentage(str) {
    var int = parseFloat(str);

    if (int < 0) {
      return 0;
    }

    if (int > 100) {
      return 1;
    }

    return int / 100;
  }

  var names = {
    transparent: 0x00000000,
    aliceblue: 0xf0f8ffff,
    antiquewhite: 0xfaebd7ff,
    aqua: 0x00ffffff,
    aquamarine: 0x7fffd4ff,
    azure: 0xf0ffffff,
    beige: 0xf5f5dcff,
    bisque: 0xffe4c4ff,
    black: 0x000000ff,
    blanchedalmond: 0xffebcdff,
    blue: 0x0000ffff,
    blueviolet: 0x8a2be2ff,
    brown: 0xa52a2aff,
    burlywood: 0xdeb887ff,
    burntsienna: 0xea7e5dff,
    cadetblue: 0x5f9ea0ff,
    chartreuse: 0x7fff00ff,
    chocolate: 0xd2691eff,
    coral: 0xff7f50ff,
    cornflowerblue: 0x6495edff,
    cornsilk: 0xfff8dcff,
    crimson: 0xdc143cff,
    cyan: 0x00ffffff,
    darkblue: 0x00008bff,
    darkcyan: 0x008b8bff,
    darkgoldenrod: 0xb8860bff,
    darkgray: 0xa9a9a9ff,
    darkgreen: 0x006400ff,
    darkgrey: 0xa9a9a9ff,
    darkkhaki: 0xbdb76bff,
    darkmagenta: 0x8b008bff,
    darkolivegreen: 0x556b2fff,
    darkorange: 0xff8c00ff,
    darkorchid: 0x9932ccff,
    darkred: 0x8b0000ff,
    darksalmon: 0xe9967aff,
    darkseagreen: 0x8fbc8fff,
    darkslateblue: 0x483d8bff,
    darkslategray: 0x2f4f4fff,
    darkslategrey: 0x2f4f4fff,
    darkturquoise: 0x00ced1ff,
    darkviolet: 0x9400d3ff,
    deeppink: 0xff1493ff,
    deepskyblue: 0x00bfffff,
    dimgray: 0x696969ff,
    dimgrey: 0x696969ff,
    dodgerblue: 0x1e90ffff,
    firebrick: 0xb22222ff,
    floralwhite: 0xfffaf0ff,
    forestgreen: 0x228b22ff,
    fuchsia: 0xff00ffff,
    gainsboro: 0xdcdcdcff,
    ghostwhite: 0xf8f8ffff,
    gold: 0xffd700ff,
    goldenrod: 0xdaa520ff,
    gray: 0x808080ff,
    green: 0x008000ff,
    greenyellow: 0xadff2fff,
    grey: 0x808080ff,
    honeydew: 0xf0fff0ff,
    hotpink: 0xff69b4ff,
    indianred: 0xcd5c5cff,
    indigo: 0x4b0082ff,
    ivory: 0xfffff0ff,
    khaki: 0xf0e68cff,
    lavender: 0xe6e6faff,
    lavenderblush: 0xfff0f5ff,
    lawngreen: 0x7cfc00ff,
    lemonchiffon: 0xfffacdff,
    lightblue: 0xadd8e6ff,
    lightcoral: 0xf08080ff,
    lightcyan: 0xe0ffffff,
    lightgoldenrodyellow: 0xfafad2ff,
    lightgray: 0xd3d3d3ff,
    lightgreen: 0x90ee90ff,
    lightgrey: 0xd3d3d3ff,
    lightpink: 0xffb6c1ff,
    lightsalmon: 0xffa07aff,
    lightseagreen: 0x20b2aaff,
    lightskyblue: 0x87cefaff,
    lightslategray: 0x778899ff,
    lightslategrey: 0x778899ff,
    lightsteelblue: 0xb0c4deff,
    lightyellow: 0xffffe0ff,
    lime: 0x00ff00ff,
    limegreen: 0x32cd32ff,
    linen: 0xfaf0e6ff,
    magenta: 0xff00ffff,
    maroon: 0x800000ff,
    mediumaquamarine: 0x66cdaaff,
    mediumblue: 0x0000cdff,
    mediumorchid: 0xba55d3ff,
    mediumpurple: 0x9370dbff,
    mediumseagreen: 0x3cb371ff,
    mediumslateblue: 0x7b68eeff,
    mediumspringgreen: 0x00fa9aff,
    mediumturquoise: 0x48d1ccff,
    mediumvioletred: 0xc71585ff,
    midnightblue: 0x191970ff,
    mintcream: 0xf5fffaff,
    mistyrose: 0xffe4e1ff,
    moccasin: 0xffe4b5ff,
    navajowhite: 0xffdeadff,
    navy: 0x000080ff,
    oldlace: 0xfdf5e6ff,
    olive: 0x808000ff,
    olivedrab: 0x6b8e23ff,
    orange: 0xffa500ff,
    orangered: 0xff4500ff,
    orchid: 0xda70d6ff,
    palegoldenrod: 0xeee8aaff,
    palegreen: 0x98fb98ff,
    paleturquoise: 0xafeeeeff,
    palevioletred: 0xdb7093ff,
    papayawhip: 0xffefd5ff,
    peachpuff: 0xffdab9ff,
    peru: 0xcd853fff,
    pink: 0xffc0cbff,
    plum: 0xdda0ddff,
    powderblue: 0xb0e0e6ff,
    purple: 0x800080ff,
    rebeccapurple: 0x663399ff,
    red: 0xff0000ff,
    rosybrown: 0xbc8f8fff,
    royalblue: 0x4169e1ff,
    saddlebrown: 0x8b4513ff,
    salmon: 0xfa8072ff,
    sandybrown: 0xf4a460ff,
    seagreen: 0x2e8b57ff,
    seashell: 0xfff5eeff,
    sienna: 0xa0522dff,
    silver: 0xc0c0c0ff,
    skyblue: 0x87ceebff,
    slateblue: 0x6a5acdff,
    slategray: 0x708090ff,
    slategrey: 0x708090ff,
    snow: 0xfffafaff,
    springgreen: 0x00ff7fff,
    steelblue: 0x4682b4ff,
    tan: 0xd2b48cff,
    teal: 0x008080ff,
    thistle: 0xd8bfd8ff,
    tomato: 0xff6347ff,
    turquoise: 0x40e0d0ff,
    violet: 0xee82eeff,
    wheat: 0xf5deb3ff,
    white: 0xffffffff,
    whitesmoke: 0xf5f5f5ff,
    yellow: 0xffff00ff,
    yellowgreen: 0x9acd32ff
  };
  module.exports = normalizeColor;
},14422,[14305,10005,10014,10998]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var LayoutPropTypes = {
    display: ReactPropTypes.oneOf(['none', 'flex']),
    width: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    height: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    start: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    end: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    top: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    left: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    right: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    bottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    minWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    maxWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    minHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    maxHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    margin: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginStart: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginEnd: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    padding: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingStart: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingEnd: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    borderWidth: ReactPropTypes.number,
    borderTopWidth: ReactPropTypes.number,
    borderStartWidth: ReactPropTypes.number,
    borderEndWidth: ReactPropTypes.number,
    borderRightWidth: ReactPropTypes.number,
    borderBottomWidth: ReactPropTypes.number,
    borderLeftWidth: ReactPropTypes.number,
    position: ReactPropTypes.oneOf(['absolute', 'relative']),
    flexDirection: ReactPropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),
    flexWrap: ReactPropTypes.oneOf(['wrap', 'nowrap', 'wrap-reverse']),
    justifyContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'space-evenly']),
    alignItems: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'baseline']),
    alignSelf: ReactPropTypes.oneOf(['auto', 'flex-start', 'flex-end', 'center', 'stretch', 'baseline']),
    alignContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'space-between', 'space-around']),
    overflow: ReactPropTypes.oneOf(['visible', 'hidden', 'scroll']),
    flex: ReactPropTypes.number,
    flexGrow: ReactPropTypes.number,
    flexShrink: ReactPropTypes.number,
    flexBasis: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    aspectRatio: ReactPropTypes.number,
    zIndex: ReactPropTypes.number,
    direction: ReactPropTypes.oneOf(['inherit', 'ltr', 'rtl'])
  };
  module.exports = LayoutPropTypes;
},14425,[10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[0]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedShadowPropTypesIOS = {
    shadowColor: DeprecatedColorPropType,
    shadowOffset: ReactPropTypes.shape({
      width: ReactPropTypes.number,
      height: ReactPropTypes.number
    }),
    shadowOpacity: ReactPropTypes.number,
    shadowRadius: ReactPropTypes.number
  };
  module.exports = DeprecatedShadowPropTypesIOS;
},14428,[14419,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var deprecatedPropType = _$$_REQUIRE(_dependencyMap[1]);

  var TransformMatrixPropType = function TransformMatrixPropType(props, propName, componentName) {
    if (props[propName]) {
      return new Error("The transformMatrix style property is deprecated. Use `transform: [{ matrix: ... }]` instead.");
    }
  };

  var DecomposedMatrixPropType = function DecomposedMatrixPropType(props, propName, componentName) {
    if (props[propName]) {
      return new Error("The decomposedMatrix style property is deprecated. Use `transform: [...]` instead.");
    }
  };

  var DeprecatedTransformPropTypes = {
    transform: ReactPropTypes.arrayOf(ReactPropTypes.oneOfType([ReactPropTypes.shape({
      perspective: ReactPropTypes.number
    }), ReactPropTypes.shape({
      rotate: ReactPropTypes.string
    }), ReactPropTypes.shape({
      rotateX: ReactPropTypes.string
    }), ReactPropTypes.shape({
      rotateY: ReactPropTypes.string
    }), ReactPropTypes.shape({
      rotateZ: ReactPropTypes.string
    }), ReactPropTypes.shape({
      scale: ReactPropTypes.number
    }), ReactPropTypes.shape({
      scaleX: ReactPropTypes.number
    }), ReactPropTypes.shape({
      scaleY: ReactPropTypes.number
    }), ReactPropTypes.shape({
      translateX: ReactPropTypes.number
    }), ReactPropTypes.shape({
      translateY: ReactPropTypes.number
    }), ReactPropTypes.shape({
      skewX: ReactPropTypes.string
    }), ReactPropTypes.shape({
      skewY: ReactPropTypes.string
    })])),
    transformMatrix: TransformMatrixPropType,
    decomposedMatrix: DecomposedMatrixPropType,
    scaleX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    scaleY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    rotation: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    translateX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    translateY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.')
  };
  module.exports = DeprecatedTransformPropTypes;
},14431,[10318,10366]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedViewStylePropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedTextStylePropTypes = _objectSpread({}, DeprecatedViewStylePropTypes, {
    color: DeprecatedColorPropType,
    fontFamily: ReactPropTypes.string,
    fontSize: ReactPropTypes.number,
    fontStyle: ReactPropTypes.oneOf(['normal', 'italic']),
    fontWeight: ReactPropTypes.oneOf(['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900']),
    fontVariant: ReactPropTypes.arrayOf(ReactPropTypes.oneOf(['small-caps', 'oldstyle-nums', 'lining-nums', 'tabular-nums', 'proportional-nums'])),
    textShadowOffset: ReactPropTypes.shape({
      width: ReactPropTypes.number,
      height: ReactPropTypes.number
    }),
    textShadowRadius: ReactPropTypes.number,
    textShadowColor: DeprecatedColorPropType,
    letterSpacing: ReactPropTypes.number,
    lineHeight: ReactPropTypes.number,
    textAlign: ReactPropTypes.oneOf(['auto', 'left', 'right', 'center', 'justify']),
    textAlignVertical: ReactPropTypes.oneOf(['auto', 'top', 'bottom', 'center']),
    includeFontPadding: ReactPropTypes.bool,
    textDecorationLine: ReactPropTypes.oneOf(['none', 'underline', 'line-through', 'underline line-through']),
    textDecorationStyle: ReactPropTypes.oneOf(['solid', 'double', 'dotted', 'dashed']),
    textDecorationColor: DeprecatedColorPropType,
    textTransform: ReactPropTypes.oneOf(['none', 'capitalize', 'uppercase', 'lowercase']),
    writingDirection: ReactPropTypes.oneOf(['auto', 'ltr', 'rtl'])
  });

  module.exports = DeprecatedTextStylePropTypes;
},14434,[14314,14419,14437,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedLayoutPropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedShadowPropTypesIOS = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedTransformPropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var DeprecatedViewStylePropTypes = _objectSpread({}, DeprecatedLayoutPropTypes, DeprecatedShadowPropTypesIOS, DeprecatedTransformPropTypes, {
    backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
    backgroundColor: DeprecatedColorPropType,
    borderColor: DeprecatedColorPropType,
    borderTopColor: DeprecatedColorPropType,
    borderRightColor: DeprecatedColorPropType,
    borderBottomColor: DeprecatedColorPropType,
    borderLeftColor: DeprecatedColorPropType,
    borderStartColor: DeprecatedColorPropType,
    borderEndColor: DeprecatedColorPropType,
    borderRadius: ReactPropTypes.number,
    borderTopLeftRadius: ReactPropTypes.number,
    borderTopRightRadius: ReactPropTypes.number,
    borderTopStartRadius: ReactPropTypes.number,
    borderTopEndRadius: ReactPropTypes.number,
    borderBottomLeftRadius: ReactPropTypes.number,
    borderBottomRightRadius: ReactPropTypes.number,
    borderBottomStartRadius: ReactPropTypes.number,
    borderBottomEndRadius: ReactPropTypes.number,
    borderStyle: ReactPropTypes.oneOf(['solid', 'dotted', 'dashed']),
    borderWidth: ReactPropTypes.number,
    borderTopWidth: ReactPropTypes.number,
    borderRightWidth: ReactPropTypes.number,
    borderBottomWidth: ReactPropTypes.number,
    borderLeftWidth: ReactPropTypes.number,
    opacity: ReactPropTypes.number,
    elevation: ReactPropTypes.number
  });

  module.exports = DeprecatedViewStylePropTypes;
},14437,[14314,14419,14425,14428,14431,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.__INTERNAL_VIEW_CONFIG = undefined;

  var Platform = _$$_REQUIRE(_dependencyMap[0]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativeViewViewConfigAndroid = _$$_REQUIRE(_dependencyMap[2]);

  var registerGeneratedViewConfig = _$$_REQUIRE(_dependencyMap[3]);

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[4]);

  var NativeViewComponent;
  var viewConfig;
  {
    NativeViewComponent = requireNativeComponent('RCTView');
  }
  var __INTERNAL_VIEW_CONFIG = viewConfig;
  exports.__INTERNAL_VIEW_CONFIG = __INTERNAL_VIEW_CONFIG;
  var _default = NativeViewComponent;
  exports.default = _default;
},14440,[10066,10114,14581,14584,10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativePrivateInterface = _$$_REQUIRE(_dependencyMap[2]),
      React = _$$_REQUIRE(_dependencyMap[3]),
      Scheduler = _$$_REQUIRE(_dependencyMap[4]);

  function ReactError(error) {
    error.name = "Invariant Violation";
    return error;
  }

  var eventPluginOrder = null,
      namesToPlugins = {};

  function recomputePluginOrdering() {
    if (eventPluginOrder) for (var pluginName in namesToPlugins) {
      var pluginModule = namesToPlugins[pluginName],
          pluginIndex = eventPluginOrder.indexOf(pluginName);
      if (!(-1 < pluginIndex)) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `" + pluginName + "`."));

      if (!plugins[pluginIndex]) {
        if (!pluginModule.extractEvents) throw ReactError(Error("EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `" + pluginName + "` does not."));
        plugins[pluginIndex] = pluginModule;
        pluginIndex = pluginModule.eventTypes;

        for (var eventName in pluginIndex) {
          var JSCompiler_inline_result = undefined;
          var dispatchConfig = pluginIndex[eventName],
              pluginModule$jscomp$0 = pluginModule,
              eventName$jscomp$0 = eventName;
          if (eventNameDispatchConfigs.hasOwnProperty(eventName$jscomp$0)) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same event name, `" + eventName$jscomp$0 + "`."));
          eventNameDispatchConfigs[eventName$jscomp$0] = dispatchConfig;
          var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

          if (phasedRegistrationNames) {
            for (JSCompiler_inline_result in phasedRegistrationNames) {
              phasedRegistrationNames.hasOwnProperty(JSCompiler_inline_result) && publishRegistrationName(phasedRegistrationNames[JSCompiler_inline_result], pluginModule$jscomp$0, eventName$jscomp$0);
            }

            JSCompiler_inline_result = true;
          } else dispatchConfig.registrationName ? (publishRegistrationName(dispatchConfig.registrationName, pluginModule$jscomp$0, eventName$jscomp$0), JSCompiler_inline_result = true) : JSCompiler_inline_result = false;

          if (!JSCompiler_inline_result) throw ReactError(Error("EventPluginRegistry: Failed to publish event `" + eventName + "` for plugin `" + pluginName + "`."));
        }
      }
    }
  }

  function publishRegistrationName(registrationName, pluginModule) {
    if (registrationNameModules[registrationName]) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same registration name, `" + registrationName + "`."));
    registrationNameModules[registrationName] = pluginModule;
  }

  var plugins = [],
      eventNameDispatchConfigs = {},
      registrationNameModules = {};

  function invokeGuardedCallbackImpl(name, func, context, a, b, c, d, e, f) {
    var funcArgs = Array.prototype.slice.call(arguments, 3);

    try {
      func.apply(context, funcArgs);
    } catch (error) {
      this.onError(error);
    }
  }

  var hasError = false,
      caughtError = null,
      hasRethrowError = false,
      rethrowError = null,
      reporter = {
    onError: function onError(error) {
      hasError = true;
      caughtError = error;
    }
  };

  function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
    hasError = false;
    caughtError = null;
    invokeGuardedCallbackImpl.apply(reporter, arguments);
  }

  function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
    invokeGuardedCallback.apply(this, arguments);

    if (hasError) {
      if (hasError) {
        var error = caughtError;
        hasError = false;
        caughtError = null;
      } else throw ReactError(Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue."));

      hasRethrowError || (hasRethrowError = true, rethrowError = error);
    }
  }

  var getFiberCurrentPropsFromNode = null,
      getInstanceFromNode = null,
      getNodeFromInstance = null;

  function executeDispatch(event, listener, inst) {
    var type = event.type || "unknown-event";
    event.currentTarget = getNodeFromInstance(inst);
    invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
    event.currentTarget = null;
  }

  function executeDirectDispatch(event) {
    var dispatchListener = event._dispatchListeners,
        dispatchInstance = event._dispatchInstances;
    if (Array.isArray(dispatchListener)) throw ReactError(Error("executeDirectDispatch(...): Invalid `event`."));
    event.currentTarget = dispatchListener ? getNodeFromInstance(dispatchInstance) : null;
    dispatchListener = dispatchListener ? dispatchListener(event) : null;
    event.currentTarget = null;
    event._dispatchListeners = null;
    event._dispatchInstances = null;
    return dispatchListener;
  }

  function accumulateInto(current, next) {
    if (null == next) throw ReactError(Error("accumulateInto(...): Accumulated items must not be null or undefined."));
    if (null == current) return next;

    if (Array.isArray(current)) {
      if (Array.isArray(next)) return current.push.apply(current, next), current;
      current.push(next);
      return current;
    }

    return Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  function forEachAccumulated(arr, cb, scope) {
    Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
  }

  var eventQueue = null;

  function executeDispatchesAndReleaseTopLevel(e) {
    if (e) {
      var dispatchListeners = e._dispatchListeners,
          dispatchInstances = e._dispatchInstances;
      if (Array.isArray(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !e.isPropagationStopped(); i++) {
        executeDispatch(e, dispatchListeners[i], dispatchInstances[i]);
      } else dispatchListeners && executeDispatch(e, dispatchListeners, dispatchInstances);
      e._dispatchListeners = null;
      e._dispatchInstances = null;
      e.isPersistent() || e.constructor.release(e);
    }
  }

  var injection = {
    injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
      if (eventPluginOrder) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React."));
      eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
      recomputePluginOrdering();
    },
    injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
      var isOrderingDirty = false,
          pluginName;

      for (pluginName in injectedNamesToPlugins) {
        if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
          var pluginModule = injectedNamesToPlugins[pluginName];

          if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
            if (namesToPlugins[pluginName]) throw ReactError(Error("EventPluginRegistry: Cannot inject two different event plugins using the same name, `" + pluginName + "`."));
            namesToPlugins[pluginName] = pluginModule;
            isOrderingDirty = true;
          }
        }
      }

      isOrderingDirty && recomputePluginOrdering();
    }
  };

  function getListener(inst, registrationName) {
    var listener = inst.stateNode;
    if (!listener) return null;
    var props = getFiberCurrentPropsFromNode(listener);
    if (!props) return null;
    listener = props[registrationName];

    a: switch (registrationName) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
        (props = !props.disabled) || (inst = inst.type, props = !("button" === inst || "input" === inst || "select" === inst || "textarea" === inst));
        inst = !props;
        break a;

      default:
        inst = false;
    }

    if (inst) return null;
    if (listener && "function" !== typeof listener) throw ReactError(Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type."));
    return listener;
  }

  function getParent(inst) {
    do {
      inst = inst.return;
    } while (inst && 5 !== inst.tag);

    return inst ? inst : null;
  }

  function traverseTwoPhase(inst, fn, arg) {
    for (var path = []; inst;) {
      path.push(inst), inst = getParent(inst);
    }

    for (inst = path.length; 0 < inst--;) {
      fn(path[inst], "captured", arg);
    }

    for (inst = 0; inst < path.length; inst++) {
      fn(path[inst], "bubbled", arg);
    }
  }

  function accumulateDirectionalDispatches(inst, phase, event) {
    if (phase = getListener(inst, event.dispatchConfig.phasedRegistrationNames[phase])) event._dispatchListeners = accumulateInto(event._dispatchListeners, phase), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }

  function accumulateTwoPhaseDispatchesSingle(event) {
    event && event.dispatchConfig.phasedRegistrationNames && traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }

  function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
      var targetInst = event._targetInst;
      targetInst = targetInst ? getParent(targetInst) : null;
      traverseTwoPhase(targetInst, accumulateDirectionalDispatches, event);
    }
  }

  function accumulateDirectDispatchesSingle(event) {
    if (event && event.dispatchConfig.registrationName) {
      var inst = event._targetInst;

      if (inst && event && event.dispatchConfig.registrationName) {
        var listener = getListener(inst, event.dispatchConfig.registrationName);
        listener && (event._dispatchListeners = accumulateInto(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst));
      }
    }
  }

  function functionThatReturnsTrue() {
    return true;
  }

  function functionThatReturnsFalse() {
    return false;
  }

  function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
    this.dispatchConfig = dispatchConfig;
    this._targetInst = targetInst;
    this.nativeEvent = nativeEvent;
    dispatchConfig = this.constructor.Interface;

    for (var propName in dispatchConfig) {
      dispatchConfig.hasOwnProperty(propName) && ((targetInst = dispatchConfig[propName]) ? this[propName] = targetInst(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName]);
    }

    this.isDefaultPrevented = (null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : false === nativeEvent.returnValue) ? functionThatReturnsTrue : functionThatReturnsFalse;
    this.isPropagationStopped = functionThatReturnsFalse;
    return this;
  }

  _extends(SyntheticEvent.prototype, {
    preventDefault: function preventDefault() {
      this.defaultPrevented = true;
      var event = this.nativeEvent;
      event && (event.preventDefault ? event.preventDefault() : "unknown" !== typeof event.returnValue && (event.returnValue = false), this.isDefaultPrevented = functionThatReturnsTrue);
    },
    stopPropagation: function stopPropagation() {
      var event = this.nativeEvent;
      event && (event.stopPropagation ? event.stopPropagation() : "unknown" !== typeof event.cancelBubble && (event.cancelBubble = true), this.isPropagationStopped = functionThatReturnsTrue);
    },
    persist: function persist() {
      this.isPersistent = functionThatReturnsTrue;
    },
    isPersistent: functionThatReturnsFalse,
    destructor: function destructor() {
      var Interface = this.constructor.Interface,
          propName;

      for (propName in Interface) {
        this[propName] = null;
      }

      this.nativeEvent = this._targetInst = this.dispatchConfig = null;
      this.isPropagationStopped = this.isDefaultPrevented = functionThatReturnsFalse;
      this._dispatchInstances = this._dispatchListeners = null;
    }
  });

  SyntheticEvent.Interface = {
    type: null,
    target: null,
    currentTarget: function currentTarget() {
      return null;
    },
    eventPhase: null,
    bubbles: null,
    cancelable: null,
    timeStamp: function timeStamp(event) {
      return event.timeStamp || Date.now();
    },
    defaultPrevented: null,
    isTrusted: null
  };

  SyntheticEvent.extend = function (Interface) {
    function E() {}

    function Class() {
      return Super.apply(this, arguments);
    }

    var Super = this;
    E.prototype = Super.prototype;
    var prototype = new E();

    _extends(prototype, Class.prototype);

    Class.prototype = prototype;
    Class.prototype.constructor = Class;
    Class.Interface = _extends({}, Super.Interface, Interface);
    Class.extend = Super.extend;
    addEventPoolingTo(Class);
    return Class;
  };

  addEventPoolingTo(SyntheticEvent);

  function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
    if (this.eventPool.length) {
      var instance = this.eventPool.pop();
      this.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
      return instance;
    }

    return new this(dispatchConfig, targetInst, nativeEvent, nativeInst);
  }

  function releasePooledEvent(event) {
    if (!(event instanceof this)) throw ReactError(Error("Trying to release an event instance into a pool of a different type."));
    event.destructor();
    10 > this.eventPool.length && this.eventPool.push(event);
  }

  function addEventPoolingTo(EventConstructor) {
    EventConstructor.eventPool = [];
    EventConstructor.getPooled = getPooledEvent;
    EventConstructor.release = releasePooledEvent;
  }

  var ResponderSyntheticEvent = SyntheticEvent.extend({
    touchHistory: function touchHistory() {
      return null;
    }
  });

  function isStartish(topLevelType) {
    return "topTouchStart" === topLevelType;
  }

  function isMoveish(topLevelType) {
    return "topTouchMove" === topLevelType;
  }

  var startDependencies = ["topTouchStart"],
      moveDependencies = ["topTouchMove"],
      endDependencies = ["topTouchCancel", "topTouchEnd"],
      touchBank = [],
      touchHistory = {
    touchBank: touchBank,
    numberActiveTouches: 0,
    indexOfSingleActiveTouch: -1,
    mostRecentTimeStamp: 0
  };

  function timestampForTouch(touch) {
    return touch.timeStamp || touch.timestamp;
  }

  function getTouchIdentifier(_ref) {
    _ref = _ref.identifier;
    if (null == _ref) throw ReactError(Error("Touch object is missing identifier."));
    return _ref;
  }

  function recordTouchStart(touch) {
    var identifier = getTouchIdentifier(touch),
        touchRecord = touchBank[identifier];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch)) : (touchRecord = {
      touchActive: true,
      startPageX: touch.pageX,
      startPageY: touch.pageY,
      startTimeStamp: timestampForTouch(touch),
      currentPageX: touch.pageX,
      currentPageY: touch.pageY,
      currentTimeStamp: timestampForTouch(touch),
      previousPageX: touch.pageX,
      previousPageY: touch.pageY,
      previousTimeStamp: timestampForTouch(touch)
    }, touchBank[identifier] = touchRecord);
    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
  }

  function recordTouchMove(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
  }

  function recordTouchEnd(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = false, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
  }

  var ResponderTouchHistoryStore = {
    recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
      if (isMoveish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove);else if (isStartish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches) for (topLevelType = 0; topLevelType < touchBank.length; topLevelType++) {
        if (nativeEvent = touchBank[topLevelType], null != nativeEvent && nativeEvent.touchActive) {
          touchHistory.indexOfSingleActiveTouch = topLevelType;
          break;
        }
      }
    },
    touchHistory: touchHistory
  };

  function accumulate(current, next) {
    if (null == next) throw ReactError(Error("accumulate(...): Accumulated items must not be null or undefined."));
    return null == current ? next : Array.isArray(current) ? current.concat(next) : Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  var responderInst = null,
      trackedTouchCount = 0;

  function changeResponder(nextResponderInst, blockHostResponder) {
    var oldResponderInst = responderInst;
    responderInst = nextResponderInst;
    if (null !== ResponderEventPlugin.GlobalResponderHandler) ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
  }

  var eventTypes = {
    startShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onStartShouldSetResponder",
        captured: "onStartShouldSetResponderCapture"
      },
      dependencies: startDependencies
    },
    scrollShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onScrollShouldSetResponder",
        captured: "onScrollShouldSetResponderCapture"
      },
      dependencies: ["topScroll"]
    },
    selectionChangeShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onSelectionChangeShouldSetResponder",
        captured: "onSelectionChangeShouldSetResponderCapture"
      },
      dependencies: ["topSelectionChange"]
    },
    moveShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onMoveShouldSetResponder",
        captured: "onMoveShouldSetResponderCapture"
      },
      dependencies: moveDependencies
    },
    responderStart: {
      registrationName: "onResponderStart",
      dependencies: startDependencies
    },
    responderMove: {
      registrationName: "onResponderMove",
      dependencies: moveDependencies
    },
    responderEnd: {
      registrationName: "onResponderEnd",
      dependencies: endDependencies
    },
    responderRelease: {
      registrationName: "onResponderRelease",
      dependencies: endDependencies
    },
    responderTerminationRequest: {
      registrationName: "onResponderTerminationRequest",
      dependencies: []
    },
    responderGrant: {
      registrationName: "onResponderGrant",
      dependencies: []
    },
    responderReject: {
      registrationName: "onResponderReject",
      dependencies: []
    },
    responderTerminate: {
      registrationName: "onResponderTerminate",
      dependencies: []
    }
  },
      ResponderEventPlugin = {
    _getResponder: function _getResponder() {
      return responderInst;
    },
    eventTypes: eventTypes,
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      if (isStartish(topLevelType)) trackedTouchCount += 1;else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (0 <= trackedTouchCount) --trackedTouchCount;else return undefined, null;
      ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);

      if (targetInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || 0 < trackedTouchCount && "topSelectionChange" === topLevelType || isStartish(topLevelType) || isMoveish(topLevelType))) {
        var JSCompiler_temp = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;
        if (responderInst) b: {
          var JSCompiler_temp$jscomp$0 = responderInst;

          for (var depthA = 0, tempA = JSCompiler_temp$jscomp$0; tempA; tempA = getParent(tempA)) {
            depthA++;
          }

          tempA = 0;

          for (var tempB = targetInst; tempB; tempB = getParent(tempB)) {
            tempA++;
          }

          for (; 0 < depthA - tempA;) {
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0), depthA--;
          }

          for (; 0 < tempA - depthA;) {
            targetInst = getParent(targetInst), tempA--;
          }

          for (; depthA--;) {
            if (JSCompiler_temp$jscomp$0 === targetInst || JSCompiler_temp$jscomp$0 === targetInst.alternate) break b;
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0);
            targetInst = getParent(targetInst);
          }

          JSCompiler_temp$jscomp$0 = null;
        } else JSCompiler_temp$jscomp$0 = targetInst;
        targetInst = JSCompiler_temp$jscomp$0 === responderInst;
        JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp, JSCompiler_temp$jscomp$0, nativeEvent, nativeEventTarget);
        JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory;
        targetInst ? forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingleSkipTarget) : forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingle);

        b: {
          JSCompiler_temp = JSCompiler_temp$jscomp$0._dispatchListeners;
          targetInst = JSCompiler_temp$jscomp$0._dispatchInstances;
          if (Array.isArray(JSCompiler_temp)) for (depthA = 0; depthA < JSCompiler_temp.length && !JSCompiler_temp$jscomp$0.isPropagationStopped(); depthA++) {
            if (JSCompiler_temp[depthA](JSCompiler_temp$jscomp$0, targetInst[depthA])) {
              JSCompiler_temp = targetInst[depthA];
              break b;
            }
          } else if (JSCompiler_temp && JSCompiler_temp(JSCompiler_temp$jscomp$0, targetInst)) {
            JSCompiler_temp = targetInst;
            break b;
          }
          JSCompiler_temp = null;
        }

        JSCompiler_temp$jscomp$0._dispatchInstances = null;
        JSCompiler_temp$jscomp$0._dispatchListeners = null;
        JSCompiler_temp$jscomp$0.isPersistent() || JSCompiler_temp$jscomp$0.constructor.release(JSCompiler_temp$jscomp$0);
        JSCompiler_temp && JSCompiler_temp !== responderInst ? (JSCompiler_temp$jscomp$0 = undefined, targetInst = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, JSCompiler_temp, nativeEvent, nativeEventTarget), targetInst.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(targetInst, accumulateDirectDispatchesSingle), depthA = true === executeDirectDispatch(targetInst), responderInst ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), tempB = !tempA._dispatchListeners || executeDirectDispatch(tempA), tempA.isPersistent() || tempA.constructor.release(tempA), tempB ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, [targetInst, tempA]), changeResponder(JSCompiler_temp, depthA)) : (JSCompiler_temp = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, JSCompiler_temp, nativeEvent, nativeEventTarget), JSCompiler_temp.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, JSCompiler_temp))) : (JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, targetInst), changeResponder(JSCompiler_temp, depthA)), JSCompiler_temp = JSCompiler_temp$jscomp$0) : JSCompiler_temp = null;
      } else JSCompiler_temp = null;

      JSCompiler_temp$jscomp$0 = responderInst && isStartish(topLevelType);
      targetInst = responderInst && isMoveish(topLevelType);
      depthA = responderInst && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType);
      if (JSCompiler_temp$jscomp$0 = JSCompiler_temp$jscomp$0 ? eventTypes.responderStart : targetInst ? eventTypes.responderMove : depthA ? eventTypes.responderEnd : null) JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp$jscomp$0, responderInst, nativeEvent, nativeEventTarget), JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, JSCompiler_temp$jscomp$0);
      JSCompiler_temp$jscomp$0 = responderInst && "topTouchCancel" === topLevelType;
      if (topLevelType = responderInst && !JSCompiler_temp$jscomp$0 && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType)) a: {
        if ((topLevelType = nativeEvent.touches) && 0 !== topLevelType.length) for (targetInst = 0; targetInst < topLevelType.length; targetInst++) {
          if (depthA = topLevelType[targetInst].target, null !== depthA && undefined !== depthA && 0 !== depthA) {
            tempA = getInstanceFromNode(depthA);

            b: {
              for (depthA = responderInst; tempA;) {
                if (depthA === tempA || depthA === tempA.alternate) {
                  depthA = true;
                  break b;
                }

                tempA = getParent(tempA);
              }

              depthA = false;
            }

            if (depthA) {
              topLevelType = false;
              break a;
            }
          }
        }
        topLevelType = true;
      }
      if (topLevelType = JSCompiler_temp$jscomp$0 ? eventTypes.responderTerminate : topLevelType ? eventTypes.responderRelease : null) nativeEvent = ResponderSyntheticEvent.getPooled(topLevelType, responderInst, nativeEvent, nativeEventTarget), nativeEvent.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(nativeEvent, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, nativeEvent), changeResponder(null);
      return JSCompiler_temp;
    },
    GlobalResponderHandler: null,
    injection: {
      injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
        ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
      }
    }
  },
      customBubblingEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customBubblingEventTypes,
      customDirectEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customDirectEventTypes;
  injection.injectEventPluginOrder(["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"]);
  injection.injectEventPluginsByName({
    ResponderEventPlugin: ResponderEventPlugin,
    ReactNativeBridgeEventPlugin: {
      eventTypes: {},
      extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        if (null == targetInst) return null;
        var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
            directDispatchConfig = customDirectEventTypes[topLevelType];
        if (!bubbleDispatchConfig && !directDispatchConfig) throw ReactError(Error('Unsupported top level event type "' + topLevelType + '" dispatched'));
        topLevelType = SyntheticEvent.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
        if (bubbleDispatchConfig) forEachAccumulated(topLevelType, accumulateTwoPhaseDispatchesSingle);else if (directDispatchConfig) forEachAccumulated(topLevelType, accumulateDirectDispatchesSingle);else return null;
        return topLevelType;
      }
    }
  });
  var instanceCache = new Map(),
      instanceProps = new Map();

  function getInstanceFromTag(tag) {
    return instanceCache.get(tag) || null;
  }

  var restoreTarget = null,
      restoreQueue = null;

  function restoreStateOfTarget(target) {
    if (getInstanceFromNode(target)) throw ReactError(Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue."));
  }

  function batchedUpdatesImpl(fn, bookkeeping) {
    return fn(bookkeeping);
  }

  function flushDiscreteUpdatesImpl() {}

  var isInsideEventHandler = false;

  function batchedUpdates(fn, bookkeeping) {
    if (isInsideEventHandler) return fn(bookkeeping);
    isInsideEventHandler = true;

    try {
      return batchedUpdatesImpl(fn, bookkeeping);
    } finally {
      if (isInsideEventHandler = false, null !== restoreTarget || null !== restoreQueue) if (flushDiscreteUpdatesImpl(), restoreTarget && (bookkeeping = restoreTarget, fn = restoreQueue, restoreQueue = restoreTarget = null, restoreStateOfTarget(bookkeeping), fn)) for (bookkeeping = 0; bookkeeping < fn.length; bookkeeping++) {
        restoreStateOfTarget(fn[bookkeeping]);
      }
    }
  }

  var EMPTY_NATIVE_EVENT = {};

  function _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {
    var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT,
        inst = getInstanceFromTag(rootNodeID);
    batchedUpdates(function () {
      var events = nativeEvent.target;

      for (var events$jscomp$0 = null, i = 0; i < plugins.length; i++) {
        var possiblePlugin = plugins[i];
        possiblePlugin && (possiblePlugin = possiblePlugin.extractEvents(topLevelType, inst, nativeEvent, events)) && (events$jscomp$0 = accumulateInto(events$jscomp$0, possiblePlugin));
      }

      events = events$jscomp$0;
      null !== events && (eventQueue = accumulateInto(eventQueue, events));
      events = eventQueue;
      eventQueue = null;

      if (events) {
        forEachAccumulated(events, executeDispatchesAndReleaseTopLevel);
        if (eventQueue) throw ReactError(Error("processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented."));
        if (hasRethrowError) throw events = rethrowError, hasRethrowError = false, rethrowError = null, events;
      }
    });
  }

  ReactNativePrivateInterface.RCTEventEmitter.register({
    receiveEvent: function receiveEvent(rootNodeID, topLevelType, nativeEventParam) {
      _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);
    },
    receiveTouches: function receiveTouches(eventTopLevelType, touches, changedIndices) {
      if ("topTouchEnd" === eventTopLevelType || "topTouchCancel" === eventTopLevelType) {
        var JSCompiler_temp = [];

        for (var i = 0; i < changedIndices.length; i++) {
          var index = changedIndices[i];
          JSCompiler_temp.push(touches[index]);
          touches[index] = null;
        }

        for (i = changedIndices = 0; i < touches.length; i++) {
          index = touches[i], null !== index && (touches[changedIndices++] = index);
        }

        touches.length = changedIndices;
      } else for (JSCompiler_temp = [], i = 0; i < changedIndices.length; i++) {
        JSCompiler_temp.push(touches[changedIndices[i]]);
      }

      for (changedIndices = 0; changedIndices < JSCompiler_temp.length; changedIndices++) {
        i = JSCompiler_temp[changedIndices];
        i.changedTouches = JSCompiler_temp;
        i.touches = touches;
        index = null;
        var target = i.target;
        null === target || undefined === target || 1 > target || (index = target);

        _receiveRootNodeIDEvent(index, eventTopLevelType, i);
      }
    }
  });

  getFiberCurrentPropsFromNode = function getFiberCurrentPropsFromNode(stateNode) {
    return instanceProps.get(stateNode._nativeTag) || null;
  };

  getInstanceFromNode = getInstanceFromTag;

  getNodeFromInstance = function getNodeFromInstance(inst) {
    var tag = inst.stateNode._nativeTag;
    undefined === tag && (tag = inst.stateNode.canonical._nativeTag);
    if (!tag) throw ReactError(Error("All native instances should have a tag."));
    return tag;
  };

  ResponderEventPlugin.injection.injectGlobalResponderHandler({
    onChange: function onChange(from, to, blockNativeResponder) {
      null !== to ? ReactNativePrivateInterface.UIManager.setJSResponder(to.stateNode._nativeTag, blockNativeResponder) : ReactNativePrivateInterface.UIManager.clearJSResponder();
    }
  });
  var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  ReactSharedInternals.hasOwnProperty("ReactCurrentDispatcher") || (ReactSharedInternals.ReactCurrentDispatcher = {
    current: null
  });
  ReactSharedInternals.hasOwnProperty("ReactCurrentBatchConfig") || (ReactSharedInternals.ReactCurrentBatchConfig = {
    suspense: null
  });
  var hasSymbol = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for"),
      REACT_ELEMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") : 60103,
      REACT_PORTAL_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") : 60106,
      REACT_FRAGMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fragment") : 60107,
      REACT_STRICT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.strict_mode") : 60108,
      REACT_PROFILER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.profiler") : 60114,
      REACT_PROVIDER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.provider") : 60109,
      REACT_CONTEXT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.context") : 60110,
      REACT_CONCURRENT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.concurrent_mode") : 60111,
      REACT_FORWARD_REF_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.forward_ref") : 60112,
      REACT_SUSPENSE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense") : 60113,
      REACT_SUSPENSE_LIST_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense_list") : 60120,
      REACT_MEMO_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.memo") : 60115,
      REACT_LAZY_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.lazy") : 60116;
  hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fundamental");
  hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.responder");
  var MAYBE_ITERATOR_SYMBOL = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator");

  function getIteratorFn(maybeIterable) {
    if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
    maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
    return "function" === typeof maybeIterable ? maybeIterable : null;
  }

  function getComponentName(type) {
    if (null == type) return null;
    if ("function" === typeof type) return type.displayName || type.name || null;
    if ("string" === typeof type) return type;

    switch (type) {
      case REACT_FRAGMENT_TYPE:
        return "Fragment";

      case REACT_PORTAL_TYPE:
        return "Portal";

      case REACT_PROFILER_TYPE:
        return "Profiler";

      case REACT_STRICT_MODE_TYPE:
        return "StrictMode";

      case REACT_SUSPENSE_TYPE:
        return "Suspense";

      case REACT_SUSPENSE_LIST_TYPE:
        return "SuspenseList";
    }

    if ("object" === typeof type) switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return "Context.Consumer";

      case REACT_PROVIDER_TYPE:
        return "Context.Provider";

      case REACT_FORWARD_REF_TYPE:
        var innerType = type.render;
        innerType = innerType.displayName || innerType.name || "";
        return type.displayName || ("" !== innerType ? "ForwardRef(" + innerType + ")" : "ForwardRef");

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_LAZY_TYPE:
        if (type = 1 === type._status ? type._result : null) return getComponentName(type);
    }
    return null;
  }

  function isFiberMountedImpl(fiber) {
    var node = fiber;
    if (fiber.alternate) for (; node.return;) {
      node = node.return;
    } else {
      if (0 !== (node.effectTag & 2)) return 1;

      for (; node.return;) {
        if (node = node.return, 0 !== (node.effectTag & 2)) return 1;
      }
    }
    return 3 === node.tag ? 2 : 3;
  }

  function assertIsMounted(fiber) {
    if (2 !== isFiberMountedImpl(fiber)) throw ReactError(Error("Unable to find node on an unmounted component."));
  }

  function findCurrentFiberUsingSlowPath(fiber) {
    var alternate = fiber.alternate;

    if (!alternate) {
      alternate = isFiberMountedImpl(fiber);
      if (3 === alternate) throw ReactError(Error("Unable to find node on an unmounted component."));
      return 1 === alternate ? null : fiber;
    }

    for (var a = fiber, b = alternate;;) {
      var parentA = a.return;
      if (null === parentA) break;
      var parentB = parentA.alternate;

      if (null === parentB) {
        b = parentA.return;

        if (null !== b) {
          a = b;
          continue;
        }

        break;
      }

      if (parentA.child === parentB.child) {
        for (parentB = parentA.child; parentB;) {
          if (parentB === a) return assertIsMounted(parentA), fiber;
          if (parentB === b) return assertIsMounted(parentA), alternate;
          parentB = parentB.sibling;
        }

        throw ReactError(Error("Unable to find node on an unmounted component."));
      }

      if (a.return !== b.return) a = parentA, b = parentB;else {
        for (var didFindChild = false, _child = parentA.child; _child;) {
          if (_child === a) {
            didFindChild = true;
            a = parentA;
            b = parentB;
            break;
          }

          if (_child === b) {
            didFindChild = true;
            b = parentA;
            a = parentB;
            break;
          }

          _child = _child.sibling;
        }

        if (!didFindChild) {
          for (_child = parentB.child; _child;) {
            if (_child === a) {
              didFindChild = true;
              a = parentB;
              b = parentA;
              break;
            }

            if (_child === b) {
              didFindChild = true;
              b = parentB;
              a = parentA;
              break;
            }

            _child = _child.sibling;
          }

          if (!didFindChild) throw ReactError(Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue."));
        }
      }
      if (a.alternate !== b) throw ReactError(Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue."));
    }

    if (3 !== a.tag) throw ReactError(Error("Unable to find node on an unmounted component."));
    return a.stateNode.current === a ? fiber : alternate;
  }

  function findCurrentHostFiber(parent) {
    parent = findCurrentFiberUsingSlowPath(parent);
    if (!parent) return null;

    for (var node = parent;;) {
      if (5 === node.tag || 6 === node.tag) return node;
      if (node.child) node.child.return = node, node = node.child;else {
        if (node === parent) break;

        for (; !node.sibling;) {
          if (!node.return || node.return === parent) return null;
          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    return null;
  }

  var emptyObject = {},
      removedKeys = null,
      removedKeyCount = 0;

  function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (Array.isArray(node)) for (var i = node.length; i-- && 0 < removedKeyCount;) {
      restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
    } else if (node && 0 < removedKeyCount) for (i in removedKeys) {
      if (removedKeys[i]) {
        var nextProp = node[i];

        if (undefined !== nextProp) {
          var attributeConfig = validAttributes[i];

          if (attributeConfig) {
            "function" === typeof nextProp && (nextProp = true);
            "undefined" === typeof nextProp && (nextProp = null);
            if ("object" !== typeof attributeConfig) updatePayload[i] = nextProp;else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) nextProp = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[i] = nextProp;
            removedKeys[i] = false;
            removedKeyCount--;
          }
        }
      }
    }
  }

  function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    if (!updatePayload && prevProp === nextProp) return updatePayload;
    if (!prevProp || !nextProp) return nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload;
    if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) return diffProperties(updatePayload, prevProp, nextProp, validAttributes);

    if (Array.isArray(prevProp) && Array.isArray(nextProp)) {
      var minLength = prevProp.length < nextProp.length ? prevProp.length : nextProp.length,
          i;

      for (i = 0; i < minLength; i++) {
        updatePayload = diffNestedProperty(updatePayload, prevProp[i], nextProp[i], validAttributes);
      }

      for (; i < prevProp.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
      }

      for (; i < nextProp.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
      }

      return updatePayload;
    }

    return Array.isArray(prevProp) ? diffProperties(updatePayload, ReactNativePrivateInterface.flattenStyle(prevProp), nextProp, validAttributes) : diffProperties(updatePayload, prevProp, ReactNativePrivateInterface.flattenStyle(nextProp), validAttributes);
  }

  function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) return updatePayload;
    if (!Array.isArray(nextProp)) return diffProperties(updatePayload, emptyObject, nextProp, validAttributes);

    for (var i = 0; i < nextProp.length; i++) {
      updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    }

    return updatePayload;
  }

  function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) return updatePayload;
    if (!Array.isArray(prevProp)) return diffProperties(updatePayload, prevProp, emptyObject, validAttributes);

    for (var i = 0; i < prevProp.length; i++) {
      updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    }

    return updatePayload;
  }

  function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig, propKey;

    for (propKey in nextProps) {
      if (attributeConfig = validAttributes[propKey]) {
        var prevProp = prevProps[propKey];
        var nextProp = nextProps[propKey];
        "function" === typeof nextProp && (nextProp = true, "function" === typeof prevProp && (prevProp = true));
        "undefined" === typeof nextProp && (nextProp = null, "undefined" === typeof prevProp && (prevProp = null));
        removedKeys && (removedKeys[propKey] = false);
        if (updatePayload && undefined !== updatePayload[propKey]) {
          if ("object" !== typeof attributeConfig) updatePayload[propKey] = nextProp;else {
            if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[propKey] = attributeConfig;
          }
        } else if (prevProp !== nextProp) if ("object" !== typeof attributeConfig) ("object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp)) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp);else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) {
          if (undefined === prevProp || ("function" === typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : "object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp))) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = attributeConfig;
        } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), 0 < removedKeyCount && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
      }
    }

    for (var _propKey in prevProps) {
      undefined === nextProps[_propKey] && (!(attributeConfig = validAttributes[_propKey]) || updatePayload && undefined !== updatePayload[_propKey] || (prevProp = prevProps[_propKey], undefined !== prevProp && ("object" !== typeof attributeConfig || "function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[_propKey] = null, removedKeys || (removedKeys = {}), removedKeys[_propKey] || (removedKeys[_propKey] = true, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig))));
    }

    return updatePayload;
  }

  function mountSafeCallback_NOT_REALLY_SAFE(context, callback) {
    return function () {
      if (callback && ("boolean" !== typeof context.__isMounted || context.__isMounted)) return callback.apply(context, arguments);
    };
  }

  var ReactNativeFiberHostComponent = function () {
    function ReactNativeFiberHostComponent(tag, viewConfig) {
      if (!(this instanceof ReactNativeFiberHostComponent)) throw new TypeError("Cannot call a class as a function");
      this._nativeTag = tag;
      this._children = [];
      this.viewConfig = viewConfig;
    }

    ReactNativeFiberHostComponent.prototype.blur = function () {
      ReactNativePrivateInterface.TextInputState.blurTextInput(this._nativeTag);
    };

    ReactNativeFiberHostComponent.prototype.focus = function () {
      ReactNativePrivateInterface.TextInputState.focusTextInput(this._nativeTag);
    };

    ReactNativeFiberHostComponent.prototype.measure = function (callback) {
      ReactNativePrivateInterface.UIManager.measure(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactNativeFiberHostComponent.prototype.measureInWindow = function (callback) {
      ReactNativePrivateInterface.UIManager.measureInWindow(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactNativeFiberHostComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
      var relativeNode = undefined;
      "number" === typeof relativeToNativeNode ? relativeNode = relativeToNativeNode : relativeToNativeNode._nativeTag ? relativeNode = relativeToNativeNode._nativeTag : relativeToNativeNode.canonical && relativeToNativeNode.canonical._nativeTag && (relativeNode = relativeToNativeNode.canonical._nativeTag);
      null != relativeNode && ReactNativePrivateInterface.UIManager.measureLayout(this._nativeTag, relativeNode, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));
    };

    ReactNativeFiberHostComponent.prototype.setNativeProps = function (nativeProps) {
      nativeProps = diffProperties(null, emptyObject, nativeProps, this.viewConfig.validAttributes);
      null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(this._nativeTag, this.viewConfig.uiViewClassName, nativeProps);
    };

    return ReactNativeFiberHostComponent;
  }();

  function shim$1() {
    throw ReactError(Error("The current renderer does not support hydration. This error is likely caused by a bug in React. Please file an issue."));
  }

  var getViewConfigForType = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get,
      UPDATE_SIGNAL = {},
      nextReactTag = 3;

  function allocateTag() {
    var tag = nextReactTag;
    1 === tag % 10 && (tag += 2);
    nextReactTag = tag + 2;
    return tag;
  }

  function recursivelyUncacheFiberNode(node) {
    if ("number" === typeof node) instanceCache.delete(node), instanceProps.delete(node);else {
      var tag = node._nativeTag;
      instanceCache.delete(tag);
      instanceProps.delete(tag);

      node._children.forEach(recursivelyUncacheFiberNode);
    }
  }

  function finalizeInitialChildren(parentInstance) {
    if (0 === parentInstance._children.length) return false;

    var nativeTags = parentInstance._children.map(function (child) {
      return "number" === typeof child ? child : child._nativeTag;
    });

    ReactNativePrivateInterface.UIManager.setChildren(parentInstance._nativeTag, nativeTags);
    return false;
  }

  var scheduleTimeout = setTimeout,
      cancelTimeout = clearTimeout,
      BEFORE_SLASH_RE = /^(.*)[\\\/]/;

  function getStackByFiberInDevAndProd(workInProgress) {
    var info = "";

    do {
      a: switch (workInProgress.tag) {
        case 3:
        case 4:
        case 6:
        case 7:
        case 10:
        case 9:
          var JSCompiler_inline_result = "";
          break a;

        default:
          var owner = workInProgress._debugOwner,
              source = workInProgress._debugSource,
              name = getComponentName(workInProgress.type);
          JSCompiler_inline_result = null;
          owner && (JSCompiler_inline_result = getComponentName(owner.type));
          owner = name;
          name = "";
          source ? name = " (at " + source.fileName.replace(BEFORE_SLASH_RE, "") + ":" + source.lineNumber + ")" : JSCompiler_inline_result && (name = " (created by " + JSCompiler_inline_result + ")");
          JSCompiler_inline_result = "\n    in " + (owner || "Unknown") + name;
      }

      info += JSCompiler_inline_result;
      workInProgress = workInProgress.return;
    } while (workInProgress);

    return info;
  }

  new Set();
  var valueStack = [],
      index = -1;

  function pop(cursor) {
    0 > index || (cursor.current = valueStack[index], valueStack[index] = null, index--);
  }

  function push(cursor, value) {
    index++;
    valueStack[index] = cursor.current;
    cursor.current = value;
  }

  var emptyContextObject = {},
      contextStackCursor = {
    current: emptyContextObject
  },
      didPerformWorkStackCursor = {
    current: false
  },
      previousContext = emptyContextObject;

  function getMaskedContext(workInProgress, unmaskedContext) {
    var contextTypes = workInProgress.type.contextTypes;
    if (!contextTypes) return emptyContextObject;
    var instance = workInProgress.stateNode;
    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
    var context = {},
        key;

    for (key in contextTypes) {
      context[key] = unmaskedContext[key];
    }

    instance && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return context;
  }

  function isContextProvider(type) {
    type = type.childContextTypes;
    return null !== type && undefined !== type;
  }

  function popContext(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function popTopLevelContextObject(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function pushTopLevelContextObject(fiber, context, didChange) {
    if (contextStackCursor.current !== emptyContextObject) throw ReactError(Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue."));
    push(contextStackCursor, context, fiber);
    push(didPerformWorkStackCursor, didChange, fiber);
  }

  function processChildContext(fiber, type, parentContext) {
    var instance = fiber.stateNode;
    fiber = type.childContextTypes;
    if ("function" !== typeof instance.getChildContext) return parentContext;
    instance = instance.getChildContext();

    for (var contextKey in instance) {
      if (!(contextKey in fiber)) throw ReactError(Error((getComponentName(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.'));
    }

    return _extends({}, parentContext, instance);
  }

  function pushContextProvider(workInProgress) {
    var instance = workInProgress.stateNode;
    instance = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
    previousContext = contextStackCursor.current;
    push(contextStackCursor, instance, workInProgress);
    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
    return true;
  }

  function invalidateContextProvider(workInProgress, type, didChange) {
    var instance = workInProgress.stateNode;
    if (!instance) throw ReactError(Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue."));
    didChange ? (type = processChildContext(workInProgress, type, previousContext), instance.__reactInternalMemoizedMergedChildContext = type, pop(didPerformWorkStackCursor, workInProgress), pop(contextStackCursor, workInProgress), push(contextStackCursor, type, workInProgress)) : pop(didPerformWorkStackCursor, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  }

  var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority,
      Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback,
      Scheduler_cancelCallback = Scheduler.unstable_cancelCallback,
      Scheduler_shouldYield = Scheduler.unstable_shouldYield,
      Scheduler_requestPaint = Scheduler.unstable_requestPaint,
      Scheduler_now = Scheduler.unstable_now,
      Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,
      Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority,
      Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,
      Scheduler_NormalPriority = Scheduler.unstable_NormalPriority,
      Scheduler_LowPriority = Scheduler.unstable_LowPriority,
      Scheduler_IdlePriority = Scheduler.unstable_IdlePriority,
      fakeCallbackNode = {},
      requestPaint = undefined !== Scheduler_requestPaint ? Scheduler_requestPaint : function () {},
      syncQueue = null,
      immediateQueueCallbackNode = null,
      isFlushingSyncQueue = false,
      initialTimeMs = Scheduler_now(),
      now = 1e4 > initialTimeMs ? Scheduler_now : function () {
    return Scheduler_now() - initialTimeMs;
  };

  function getCurrentPriorityLevel() {
    switch (Scheduler_getCurrentPriorityLevel()) {
      case Scheduler_ImmediatePriority:
        return 99;

      case Scheduler_UserBlockingPriority:
        return 98;

      case Scheduler_NormalPriority:
        return 97;

      case Scheduler_LowPriority:
        return 96;

      case Scheduler_IdlePriority:
        return 95;

      default:
        throw ReactError(Error("Unknown priority level."));
    }
  }

  function reactPriorityToSchedulerPriority(reactPriorityLevel) {
    switch (reactPriorityLevel) {
      case 99:
        return Scheduler_ImmediatePriority;

      case 98:
        return Scheduler_UserBlockingPriority;

      case 97:
        return Scheduler_NormalPriority;

      case 96:
        return Scheduler_LowPriority;

      case 95:
        return Scheduler_IdlePriority;

      default:
        throw ReactError(Error("Unknown priority level."));
    }
  }

  function runWithPriority(reactPriorityLevel, fn) {
    reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
    return Scheduler_runWithPriority(reactPriorityLevel, fn);
  }

  function scheduleCallback(reactPriorityLevel, callback, options) {
    reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
    return Scheduler_scheduleCallback(reactPriorityLevel, callback, options);
  }

  function scheduleSyncCallback(callback) {
    null === syncQueue ? (syncQueue = [callback], immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl)) : syncQueue.push(callback);
    return fakeCallbackNode;
  }

  function flushSyncCallbackQueue() {
    null !== immediateQueueCallbackNode && Scheduler_cancelCallback(immediateQueueCallbackNode);
    flushSyncCallbackQueueImpl();
  }

  function flushSyncCallbackQueueImpl() {
    if (!isFlushingSyncQueue && null !== syncQueue) {
      isFlushingSyncQueue = true;
      var i = 0;

      try {
        var queue = syncQueue;
        runWithPriority(99, function () {
          for (; i < queue.length; i++) {
            var callback = queue[i];

            do {
              callback = callback(true);
            } while (null !== callback);
          }
        });
        syncQueue = null;
      } catch (error) {
        throw null !== syncQueue && (syncQueue = syncQueue.slice(i + 1)), Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue), error;
      } finally {
        isFlushingSyncQueue = false;
      }
    }
  }

  function inferPriorityFromExpirationTime(currentTime, expirationTime) {
    if (1073741823 === expirationTime) return 99;
    if (1 === expirationTime) return 95;
    currentTime = 10 * (1073741821 - expirationTime) - 10 * (1073741821 - currentTime);
    return 0 >= currentTime ? 99 : 250 >= currentTime ? 98 : 5250 >= currentTime ? 97 : 95;
  }

  function is(x, y) {
    return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
  }

  var hasOwnProperty = Object.prototype.hasOwnProperty;

  function shallowEqual(objA, objB) {
    if (is(objA, objB)) return true;
    if ("object" !== typeof objA || null === objA || "object" !== typeof objB || null === objB) return false;
    var keysA = Object.keys(objA),
        keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) return false;

    for (keysB = 0; keysB < keysA.length; keysB++) {
      if (!hasOwnProperty.call(objB, keysA[keysB]) || !is(objA[keysA[keysB]], objB[keysA[keysB]])) return false;
    }

    return true;
  }

  function resolveDefaultProps(Component, baseProps) {
    if (Component && Component.defaultProps) {
      baseProps = _extends({}, baseProps);
      Component = Component.defaultProps;

      for (var propName in Component) {
        undefined === baseProps[propName] && (baseProps[propName] = Component[propName]);
      }
    }

    return baseProps;
  }

  function readLazyComponentType(lazyComponent) {
    var result = lazyComponent._result;

    switch (lazyComponent._status) {
      case 1:
        return result;

      case 2:
        throw result;

      case 0:
        throw result;

      default:
        lazyComponent._status = 0;
        result = lazyComponent._ctor;
        result = result();
        result.then(function (moduleObject) {
          0 === lazyComponent._status && (moduleObject = moduleObject.default, lazyComponent._status = 1, lazyComponent._result = moduleObject);
        }, function (error) {
          0 === lazyComponent._status && (lazyComponent._status = 2, lazyComponent._result = error);
        });

        switch (lazyComponent._status) {
          case 1:
            return lazyComponent._result;

          case 2:
            throw lazyComponent._result;
        }

        lazyComponent._result = result;
        throw result;
    }
  }

  var valueCursor = {
    current: null
  },
      currentlyRenderingFiber = null,
      lastContextDependency = null,
      lastContextWithAllBitsObserved = null;

  function resetContextDependencies() {
    lastContextWithAllBitsObserved = lastContextDependency = currentlyRenderingFiber = null;
  }

  function pushProvider(providerFiber, nextValue) {
    var context = providerFiber.type._context;
    push(valueCursor, context._currentValue, providerFiber);
    context._currentValue = nextValue;
  }

  function popProvider(providerFiber) {
    var currentValue = valueCursor.current;
    pop(valueCursor, providerFiber);
    providerFiber.type._context._currentValue = currentValue;
  }

  function scheduleWorkOnParentPath(parent, renderExpirationTime) {
    for (; null !== parent;) {
      var alternate = parent.alternate;
      if (parent.childExpirationTime < renderExpirationTime) parent.childExpirationTime = renderExpirationTime, null !== alternate && alternate.childExpirationTime < renderExpirationTime && (alternate.childExpirationTime = renderExpirationTime);else if (null !== alternate && alternate.childExpirationTime < renderExpirationTime) alternate.childExpirationTime = renderExpirationTime;else break;
      parent = parent.return;
    }
  }

  function prepareToReadContext(workInProgress, renderExpirationTime) {
    currentlyRenderingFiber = workInProgress;
    lastContextWithAllBitsObserved = lastContextDependency = null;
    workInProgress = workInProgress.dependencies;
    null !== workInProgress && null !== workInProgress.firstContext && (workInProgress.expirationTime >= renderExpirationTime && (didReceiveUpdate = true), workInProgress.firstContext = null);
  }

  function readContext(context, observedBits) {
    if (lastContextWithAllBitsObserved !== context && false !== observedBits && 0 !== observedBits) {
      if ("number" !== typeof observedBits || 1073741823 === observedBits) lastContextWithAllBitsObserved = context, observedBits = 1073741823;
      observedBits = {
        context: context,
        observedBits: observedBits,
        next: null
      };

      if (null === lastContextDependency) {
        if (null === currentlyRenderingFiber) throw ReactError(Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."));
        lastContextDependency = observedBits;
        currentlyRenderingFiber.dependencies = {
          expirationTime: 0,
          firstContext: observedBits,
          responders: null
        };
      } else lastContextDependency = lastContextDependency.next = observedBits;
    }

    return context._currentValue;
  }

  var hasForceUpdate = false;

  function createUpdateQueue(baseState) {
    return {
      baseState: baseState,
      firstUpdate: null,
      lastUpdate: null,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function cloneUpdateQueue(currentQueue) {
    return {
      baseState: currentQueue.baseState,
      firstUpdate: currentQueue.firstUpdate,
      lastUpdate: currentQueue.lastUpdate,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function createUpdate(expirationTime, suspenseConfig) {
    return {
      expirationTime: expirationTime,
      suspenseConfig: suspenseConfig,
      tag: 0,
      payload: null,
      callback: null,
      next: null,
      nextEffect: null
    };
  }

  function appendUpdateToQueue(queue, update) {
    null === queue.lastUpdate ? queue.firstUpdate = queue.lastUpdate = update : (queue.lastUpdate.next = update, queue.lastUpdate = update);
  }

  function enqueueUpdate(fiber, update) {
    var alternate = fiber.alternate;

    if (null === alternate) {
      var queue1 = fiber.updateQueue;
      var queue2 = null;
      null === queue1 && (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState));
    } else queue1 = fiber.updateQueue, queue2 = alternate.updateQueue, null === queue1 ? null === queue2 ? (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState), queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState)) : queue1 = fiber.updateQueue = cloneUpdateQueue(queue2) : null === queue2 && (queue2 = alternate.updateQueue = cloneUpdateQueue(queue1));

    null === queue2 || queue1 === queue2 ? appendUpdateToQueue(queue1, update) : null === queue1.lastUpdate || null === queue2.lastUpdate ? (appendUpdateToQueue(queue1, update), appendUpdateToQueue(queue2, update)) : (appendUpdateToQueue(queue1, update), queue2.lastUpdate = update);
  }

  function enqueueCapturedUpdate(workInProgress, update) {
    var workInProgressQueue = workInProgress.updateQueue;
    workInProgressQueue = null === workInProgressQueue ? workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState) : ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
    null === workInProgressQueue.lastCapturedUpdate ? workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update : (workInProgressQueue.lastCapturedUpdate.next = update, workInProgressQueue.lastCapturedUpdate = update);
  }

  function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
    var current = workInProgress.alternate;
    null !== current && queue === current.updateQueue && (queue = workInProgress.updateQueue = cloneUpdateQueue(queue));
    return queue;
  }

  function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
    switch (update.tag) {
      case 1:
        return workInProgress = update.payload, "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;

      case 3:
        workInProgress.effectTag = workInProgress.effectTag & -2049 | 64;

      case 0:
        workInProgress = update.payload;
        nextProps = "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;
        if (null === nextProps || undefined === nextProps) break;
        return _extends({}, prevState, nextProps);

      case 2:
        hasForceUpdate = true;
    }

    return prevState;
  }

  function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
    hasForceUpdate = false;
    queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

    for (var newBaseState = queue.baseState, newFirstUpdate = null, newExpirationTime = 0, update = queue.firstUpdate, resultState = newBaseState; null !== update;) {
      var updateExpirationTime = update.expirationTime;
      updateExpirationTime < renderExpirationTime ? (null === newFirstUpdate && (newFirstUpdate = update, newBaseState = resultState), newExpirationTime < updateExpirationTime && (newExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, update.suspenseConfig), resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastEffect ? queue.firstEffect = queue.lastEffect = update : (queue.lastEffect.nextEffect = update, queue.lastEffect = update)));
      update = update.next;
    }

    updateExpirationTime = null;

    for (update = queue.firstCapturedUpdate; null !== update;) {
      var _updateExpirationTime = update.expirationTime;
      _updateExpirationTime < renderExpirationTime ? (null === updateExpirationTime && (updateExpirationTime = update, null === newFirstUpdate && (newBaseState = resultState)), newExpirationTime < _updateExpirationTime && (newExpirationTime = _updateExpirationTime)) : (resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastCapturedEffect ? queue.firstCapturedEffect = queue.lastCapturedEffect = update : (queue.lastCapturedEffect.nextEffect = update, queue.lastCapturedEffect = update)));
      update = update.next;
    }

    null === newFirstUpdate && (queue.lastUpdate = null);
    null === updateExpirationTime ? queue.lastCapturedUpdate = null : workInProgress.effectTag |= 32;
    null === newFirstUpdate && null === updateExpirationTime && (newBaseState = resultState);
    queue.baseState = newBaseState;
    queue.firstUpdate = newFirstUpdate;
    queue.firstCapturedUpdate = updateExpirationTime;
    workInProgress.expirationTime = newExpirationTime;
    workInProgress.memoizedState = resultState;
  }

  function commitUpdateQueue(finishedWork, finishedQueue, instance) {
    null !== finishedQueue.firstCapturedUpdate && (null !== finishedQueue.lastUpdate && (finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate, finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate), finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null);
    commitUpdateEffects(finishedQueue.firstEffect, instance);
    finishedQueue.firstEffect = finishedQueue.lastEffect = null;
    commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
    finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
  }

  function commitUpdateEffects(effect, instance) {
    for (; null !== effect;) {
      var _callback3 = effect.callback;

      if (null !== _callback3) {
        effect.callback = null;
        var context = instance;
        if ("function" !== typeof _callback3) throw ReactError(Error("Invalid argument passed as callback. Expected a function. Instead received: " + _callback3));

        _callback3.call(context);
      }

      effect = effect.nextEffect;
    }
  }

  var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig,
      emptyRefsObject = new React.Component().refs;

  function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
    ctor = workInProgress.memoizedState;
    getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);
    getDerivedStateFromProps = null === getDerivedStateFromProps || undefined === getDerivedStateFromProps ? ctor : _extends({}, ctor, getDerivedStateFromProps);
    workInProgress.memoizedState = getDerivedStateFromProps;
    nextProps = workInProgress.updateQueue;
    null !== nextProps && 0 === workInProgress.expirationTime && (nextProps.baseState = getDerivedStateFromProps);
  }

  var classComponentUpdater = {
    isMounted: function isMounted(component) {
      return (component = component._reactInternalFiber) ? 2 === isFiberMountedImpl(component) : false;
    },
    enqueueSetState: function enqueueSetState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.payload = payload;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    },
    enqueueReplaceState: function enqueueReplaceState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.tag = 1;
      suspenseConfig.payload = payload;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    },
    enqueueForceUpdate: function enqueueForceUpdate(inst, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.tag = 2;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    }
  };

  function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
    workInProgress = workInProgress.stateNode;
    return "function" === typeof workInProgress.shouldComponentUpdate ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext) : ctor.prototype && ctor.prototype.isPureReactComponent ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState) : true;
  }

  function constructClassInstance(workInProgress, ctor, props) {
    var isLegacyContextConsumer = false,
        unmaskedContext = emptyContextObject;
    var context = ctor.contextType;
    "object" === typeof context && null !== context ? context = readContext(context) : (unmaskedContext = isContextProvider(ctor) ? previousContext : contextStackCursor.current, isLegacyContextConsumer = ctor.contextTypes, context = (isLegacyContextConsumer = null !== isLegacyContextConsumer && undefined !== isLegacyContextConsumer) ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject);
    ctor = new ctor(props, context);
    workInProgress.memoizedState = null !== ctor.state && undefined !== ctor.state ? ctor.state : null;
    ctor.updater = classComponentUpdater;
    workInProgress.stateNode = ctor;
    ctor._reactInternalFiber = workInProgress;
    isLegacyContextConsumer && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return ctor;
  }

  function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
    workInProgress = instance.state;
    "function" === typeof instance.componentWillReceiveProps && instance.componentWillReceiveProps(newProps, nextContext);
    "function" === typeof instance.UNSAFE_componentWillReceiveProps && instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
    instance.state !== workInProgress && classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }

  function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
    var instance = workInProgress.stateNode;
    instance.props = newProps;
    instance.state = workInProgress.memoizedState;
    instance.refs = emptyRefsObject;
    var contextType = ctor.contextType;
    "object" === typeof contextType && null !== contextType ? instance.context = readContext(contextType) : (contextType = isContextProvider(ctor) ? previousContext : contextStackCursor.current, instance.context = getMaskedContext(workInProgress, contextType));
    contextType = workInProgress.updateQueue;
    null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState);
    contextType = ctor.getDerivedStateFromProps;
    "function" === typeof contextType && (applyDerivedStateFromProps(workInProgress, ctor, contextType, newProps), instance.state = workInProgress.memoizedState);
    "function" === typeof ctor.getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || (ctor = instance.state, "function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount(), ctor !== instance.state && classComponentUpdater.enqueueReplaceState(instance, instance.state, null), contextType = workInProgress.updateQueue, null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState));
    "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4);
  }

  var isArray = Array.isArray;

  function coerceRef(returnFiber, current$$1, element) {
    returnFiber = element.ref;

    if (null !== returnFiber && "function" !== typeof returnFiber && "object" !== typeof returnFiber) {
      if (element._owner) {
        element = element._owner;
        var inst = undefined;

        if (element) {
          if (1 !== element.tag) throw ReactError(Error("Function components cannot have refs. Did you mean to use React.forwardRef()?"));
          inst = element.stateNode;
        }

        if (!inst) throw ReactError(Error("Missing owner for string ref " + returnFiber + ". This error is likely caused by a bug in React. Please file an issue."));
        var stringRef = "" + returnFiber;
        if (null !== current$$1 && null !== current$$1.ref && "function" === typeof current$$1.ref && current$$1.ref._stringRef === stringRef) return current$$1.ref;

        current$$1 = function current$$1(value) {
          var refs = inst.refs;
          refs === emptyRefsObject && (refs = inst.refs = {});
          null === value ? delete refs[stringRef] : refs[stringRef] = value;
        };

        current$$1._stringRef = stringRef;
        return current$$1;
      }

      if ("string" !== typeof returnFiber) throw ReactError(Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null."));
      if (!element._owner) throw ReactError(Error("Element ref was specified as a string (" + returnFiber + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information."));
    }

    return returnFiber;
  }

  function throwOnInvalidObjectType(returnFiber, newChild) {
    if ("textarea" !== returnFiber.type) throw ReactError(Error("Objects are not valid as a React child (found: " + ("[object Object]" === Object.prototype.toString.call(newChild) ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild) + ")."));
  }

  function ChildReconciler(shouldTrackSideEffects) {
    function deleteChild(returnFiber, childToDelete) {
      if (shouldTrackSideEffects) {
        var last = returnFiber.lastEffect;
        null !== last ? (last.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
        childToDelete.nextEffect = null;
        childToDelete.effectTag = 8;
      }
    }

    function deleteRemainingChildren(returnFiber, currentFirstChild) {
      if (!shouldTrackSideEffects) return null;

      for (; null !== currentFirstChild;) {
        deleteChild(returnFiber, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return null;
    }

    function mapRemainingChildren(returnFiber, currentFirstChild) {
      for (returnFiber = new Map(); null !== currentFirstChild;) {
        null !== currentFirstChild.key ? returnFiber.set(currentFirstChild.key, currentFirstChild) : returnFiber.set(currentFirstChild.index, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return returnFiber;
    }

    function useFiber(fiber, pendingProps, expirationTime) {
      fiber = createWorkInProgress(fiber, pendingProps, expirationTime);
      fiber.index = 0;
      fiber.sibling = null;
      return fiber;
    }

    function placeChild(newFiber, lastPlacedIndex, newIndex) {
      newFiber.index = newIndex;
      if (!shouldTrackSideEffects) return lastPlacedIndex;
      newIndex = newFiber.alternate;
      if (null !== newIndex) return newIndex = newIndex.index, newIndex < lastPlacedIndex ? (newFiber.effectTag = 2, lastPlacedIndex) : newIndex;
      newFiber.effectTag = 2;
      return lastPlacedIndex;
    }

    function placeSingleChild(newFiber) {
      shouldTrackSideEffects && null === newFiber.alternate && (newFiber.effectTag = 2);
      return newFiber;
    }

    function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
      if (null === current$$1 || 6 !== current$$1.tag) return current$$1 = createFiberFromText(textContent, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, textContent, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateElement(returnFiber, current$$1, element, expirationTime) {
      if (null !== current$$1 && current$$1.elementType === element.type) return expirationTime = useFiber(current$$1, element.props, expirationTime), expirationTime.ref = coerceRef(returnFiber, current$$1, element), expirationTime.return = returnFiber, expirationTime;
      expirationTime = createFiberFromTypeAndProps(element.type, element.key, element.props, null, returnFiber.mode, expirationTime);
      expirationTime.ref = coerceRef(returnFiber, current$$1, element);
      expirationTime.return = returnFiber;
      return expirationTime;
    }

    function updatePortal(returnFiber, current$$1, portal, expirationTime) {
      if (null === current$$1 || 4 !== current$$1.tag || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) return current$$1 = createFiberFromPortal(portal, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, portal.children || [], expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
      if (null === current$$1 || 7 !== current$$1.tag) return current$$1 = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, fragment, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function createChild(returnFiber, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = createFiberFromText("" + newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, null, newChild), expirationTime.return = returnFiber, expirationTime;

          case REACT_PORTAL_TYPE:
            return newChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return newChild = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null), newChild.return = returnFiber, newChild;
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
      var key = null !== oldFiber ? oldFiber.key : null;
      if ("string" === typeof newChild || "number" === typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return newChild.key === key ? newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key) : updateElement(returnFiber, oldFiber, newChild, expirationTime) : null;

          case REACT_PORTAL_TYPE:
            return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, expirationTime) : null;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return null !== key ? null : updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return existingChildren = existingChildren.get(newIdx) || null, updateTextNode(returnFiber, existingChildren, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, existingChildren, newChild.props.children, expirationTime, newChild.key) : updateElement(returnFiber, existingChildren, newChild, expirationTime);

          case REACT_PORTAL_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, updatePortal(returnFiber, existingChildren, newChild, expirationTime);
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return existingChildren = existingChildren.get(newIdx) || null, updateFragment(returnFiber, existingChildren, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
      for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;

      if (null === oldFiber) {
        for (; newIdx < newChildren.length; newIdx++) {
          oldFiber = createChild(returnFiber, newChildren[newIdx], expirationTime), null !== oldFiber && (currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber);
        }

        return resultingFirstChild;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); newIdx < newChildren.length; newIdx++) {
        nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, newChildren[newIdx], expirationTime), null !== nextOldFiber && (shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return resultingFirstChild;
    }

    function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
      var iteratorFn = getIteratorFn(newChildrenIterable);
      if ("function" !== typeof iteratorFn) throw ReactError(Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue."));
      newChildrenIterable = iteratorFn.call(newChildrenIterable);
      if (null == newChildrenIterable) throw ReactError(Error("An iterable object provided no iterator."));

      for (var previousNewFiber = iteratorFn = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null, step = newChildrenIterable.next(); null !== oldFiber && !step.done; newIdx++, step = newChildrenIterable.next()) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? iteratorFn = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), iteratorFn;

      if (null === oldFiber) {
        for (; !step.done; newIdx++, step = newChildrenIterable.next()) {
          step = createChild(returnFiber, step.value, expirationTime), null !== step && (currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
        }

        return iteratorFn;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); !step.done; newIdx++, step = newChildrenIterable.next()) {
        step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, expirationTime), null !== step && (shouldTrackSideEffects && null !== step.alternate && oldFiber.delete(null === step.key ? newIdx : step.key), currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return iteratorFn;
    }

    return function (returnFiber, currentFirstChild, newChild, expirationTime) {
      var isUnkeyedTopLevelFragment = "object" === typeof newChild && null !== newChild && newChild.type === REACT_FRAGMENT_TYPE && null === newChild.key;
      isUnkeyedTopLevelFragment && (newChild = newChild.props.children);
      var isObject = "object" === typeof newChild && null !== newChild;
      if (isObject) switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          a: {
            isObject = newChild.key;

            for (isUnkeyedTopLevelFragment = currentFirstChild; null !== isUnkeyedTopLevelFragment;) {
              if (isUnkeyedTopLevelFragment.key === isObject) {
                if (7 === isUnkeyedTopLevelFragment.tag ? newChild.type === REACT_FRAGMENT_TYPE : isUnkeyedTopLevelFragment.elementType === newChild.type) {
                  deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment.sibling);
                  currentFirstChild = useFiber(isUnkeyedTopLevelFragment, newChild.type === REACT_FRAGMENT_TYPE ? newChild.props.children : newChild.props, expirationTime);
                  currentFirstChild.ref = coerceRef(returnFiber, isUnkeyedTopLevelFragment, newChild);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                }

                deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment);
                break;
              } else deleteChild(returnFiber, isUnkeyedTopLevelFragment);

              isUnkeyedTopLevelFragment = isUnkeyedTopLevelFragment.sibling;
            }

            newChild.type === REACT_FRAGMENT_TYPE ? (currentFirstChild = createFiberFromFragment(newChild.props.children, returnFiber.mode, expirationTime, newChild.key), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, currentFirstChild, newChild), expirationTime.return = returnFiber, returnFiber = expirationTime);
          }

          return placeSingleChild(returnFiber);

        case REACT_PORTAL_TYPE:
          a: {
            for (isUnkeyedTopLevelFragment = newChild.key; null !== currentFirstChild;) {
              if (currentFirstChild.key === isUnkeyedTopLevelFragment) {
                if (4 === currentFirstChild.tag && currentFirstChild.stateNode.containerInfo === newChild.containerInfo && currentFirstChild.stateNode.implementation === newChild.implementation) {
                  deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                  currentFirstChild = useFiber(currentFirstChild, newChild.children || [], expirationTime);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                }

                deleteRemainingChildren(returnFiber, currentFirstChild);
                break;
              } else deleteChild(returnFiber, currentFirstChild);

              currentFirstChild = currentFirstChild.sibling;
            }

            currentFirstChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
            currentFirstChild.return = returnFiber;
            returnFiber = currentFirstChild;
          }

          return placeSingleChild(returnFiber);
      }
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = "" + newChild, null !== currentFirstChild && 6 === currentFirstChild.tag ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling), currentFirstChild = useFiber(currentFirstChild, newChild, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (deleteRemainingChildren(returnFiber, currentFirstChild), currentFirstChild = createFiberFromText(newChild, returnFiber.mode, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild), placeSingleChild(returnFiber);
      if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
      if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
      isObject && throwOnInvalidObjectType(returnFiber, newChild);
      if ("undefined" === typeof newChild && !isUnkeyedTopLevelFragment) switch (returnFiber.tag) {
        case 1:
        case 0:
          throw returnFiber = returnFiber.type, ReactError(Error((returnFiber.displayName || returnFiber.name || "Component") + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null."));
      }
      return deleteRemainingChildren(returnFiber, currentFirstChild);
    };
  }

  var reconcileChildFibers = ChildReconciler(true),
      mountChildFibers = ChildReconciler(false),
      NO_CONTEXT = {},
      contextStackCursor$1 = {
    current: NO_CONTEXT
  },
      contextFiberStackCursor = {
    current: NO_CONTEXT
  },
      rootInstanceStackCursor = {
    current: NO_CONTEXT
  };

  function requiredContext(c) {
    if (c === NO_CONTEXT) throw ReactError(Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue."));
    return c;
  }

  function pushHostContainer(fiber, nextRootInstance) {
    push(rootInstanceStackCursor, nextRootInstance, fiber);
    push(contextFiberStackCursor, fiber, fiber);
    push(contextStackCursor$1, NO_CONTEXT, fiber);
    pop(contextStackCursor$1, fiber);
    push(contextStackCursor$1, {
      isInAParentText: false
    }, fiber);
  }

  function popHostContainer(fiber) {
    pop(contextStackCursor$1, fiber);
    pop(contextFiberStackCursor, fiber);
    pop(rootInstanceStackCursor, fiber);
  }

  function pushHostContext(fiber) {
    requiredContext(rootInstanceStackCursor.current);
    var context = requiredContext(contextStackCursor$1.current);
    var nextContext = fiber.type;
    nextContext = "AndroidTextInput" === nextContext || "RCTMultilineTextInputView" === nextContext || "RCTSinglelineTextInputView" === nextContext || "RCTText" === nextContext || "RCTVirtualText" === nextContext;
    nextContext = context.isInAParentText !== nextContext ? {
      isInAParentText: nextContext
    } : context;
    context !== nextContext && (push(contextFiberStackCursor, fiber, fiber), push(contextStackCursor$1, nextContext, fiber));
  }

  function popHostContext(fiber) {
    contextFiberStackCursor.current === fiber && (pop(contextStackCursor$1, fiber), pop(contextFiberStackCursor, fiber));
  }

  var SubtreeSuspenseContextMask = 1,
      InvisibleParentSuspenseContext = 1,
      ForceSuspenseFallback = 2,
      suspenseStackCursor = {
    current: 0
  };

  function findFirstSuspended(row) {
    for (var node = row; null !== node;) {
      if (13 === node.tag) {
        if (null !== node.memoizedState) return node;
      } else if (19 === node.tag && undefined !== node.memoizedProps.revealOrder) {
        if (0 !== (node.effectTag & 64)) return node;
      } else if (null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === row) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === row) return null;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }

    return null;
  }

  function createResponderListener(responder, props) {
    return {
      responder: responder,
      props: props
    };
  }

  var NoEffect$1 = 0,
      UnmountSnapshot = 2,
      UnmountMutation = 4,
      MountMutation = 8,
      UnmountLayout = 16,
      MountLayout = 32,
      MountPassive = 64,
      UnmountPassive = 128,
      ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,
      renderExpirationTime$1 = 0,
      currentlyRenderingFiber$1 = null,
      currentHook = null,
      nextCurrentHook = null,
      firstWorkInProgressHook = null,
      workInProgressHook = null,
      nextWorkInProgressHook = null,
      remainingExpirationTime = 0,
      componentUpdateQueue = null,
      sideEffectTag = 0,
      didScheduleRenderPhaseUpdate = false,
      renderPhaseUpdates = null,
      numberOfReRenders = 0;

  function throwInvalidHookError() {
    throw ReactError(Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem."));
  }

  function areHookInputsEqual(nextDeps, prevDeps) {
    if (null === prevDeps) return false;

    for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
      if (!is(nextDeps[i], prevDeps[i])) return false;
    }

    return true;
  }

  function renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {
    renderExpirationTime$1 = nextRenderExpirationTime;
    currentlyRenderingFiber$1 = workInProgress;
    nextCurrentHook = null !== current ? current.memoizedState : null;
    ReactCurrentDispatcher$1.current = null === nextCurrentHook ? HooksDispatcherOnMount : HooksDispatcherOnUpdate;
    workInProgress = Component(props, refOrContext);

    if (didScheduleRenderPhaseUpdate) {
      do {
        didScheduleRenderPhaseUpdate = false, numberOfReRenders += 1, nextCurrentHook = null !== current ? current.memoizedState : null, nextWorkInProgressHook = firstWorkInProgressHook, componentUpdateQueue = workInProgressHook = currentHook = null, ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdate, workInProgress = Component(props, refOrContext);
      } while (didScheduleRenderPhaseUpdate);

      renderPhaseUpdates = null;
      numberOfReRenders = 0;
    }

    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    current = currentlyRenderingFiber$1;
    current.memoizedState = firstWorkInProgressHook;
    current.expirationTime = remainingExpirationTime;
    current.updateQueue = componentUpdateQueue;
    current.effectTag |= sideEffectTag;
    current = null !== currentHook && null !== currentHook.next;
    renderExpirationTime$1 = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    if (current) throw ReactError(Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement."));
    return workInProgress;
  }

  function resetHooks() {
    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    renderExpirationTime$1 = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    didScheduleRenderPhaseUpdate = false;
    renderPhaseUpdates = null;
    numberOfReRenders = 0;
  }

  function mountWorkInProgressHook() {
    var hook = {
      memoizedState: null,
      baseState: null,
      queue: null,
      baseUpdate: null,
      next: null
    };
    null === workInProgressHook ? firstWorkInProgressHook = workInProgressHook = hook : workInProgressHook = workInProgressHook.next = hook;
    return workInProgressHook;
  }

  function updateWorkInProgressHook() {
    if (null !== nextWorkInProgressHook) workInProgressHook = nextWorkInProgressHook, nextWorkInProgressHook = workInProgressHook.next, currentHook = nextCurrentHook, nextCurrentHook = null !== currentHook ? currentHook.next : null;else {
      if (null === nextCurrentHook) throw ReactError(Error("Rendered more hooks than during the previous render."));
      currentHook = nextCurrentHook;
      var newHook = {
        memoizedState: currentHook.memoizedState,
        baseState: currentHook.baseState,
        queue: currentHook.queue,
        baseUpdate: currentHook.baseUpdate,
        next: null
      };
      workInProgressHook = null === workInProgressHook ? firstWorkInProgressHook = newHook : workInProgressHook.next = newHook;
      nextCurrentHook = currentHook.next;
    }
    return workInProgressHook;
  }

  function basicStateReducer(state, action) {
    return "function" === typeof action ? action(state) : action;
  }

  function updateReducer(reducer) {
    var hook = updateWorkInProgressHook(),
        queue = hook.queue;
    if (null === queue) throw ReactError(Error("Should have a queue. This is likely a bug in React. Please file an issue."));
    queue.lastRenderedReducer = reducer;

    if (0 < numberOfReRenders) {
      var _dispatch = queue.dispatch;

      if (null !== renderPhaseUpdates) {
        var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

        if (undefined !== firstRenderPhaseUpdate) {
          renderPhaseUpdates.delete(queue);
          var newState = hook.memoizedState;

          do {
            newState = reducer(newState, firstRenderPhaseUpdate.action), firstRenderPhaseUpdate = firstRenderPhaseUpdate.next;
          } while (null !== firstRenderPhaseUpdate);

          is(newState, hook.memoizedState) || (didReceiveUpdate = true);
          hook.memoizedState = newState;
          hook.baseUpdate === queue.last && (hook.baseState = newState);
          queue.lastRenderedState = newState;
          return [newState, _dispatch];
        }
      }

      return [hook.memoizedState, _dispatch];
    }

    _dispatch = queue.last;
    var baseUpdate = hook.baseUpdate;
    newState = hook.baseState;
    null !== baseUpdate ? (null !== _dispatch && (_dispatch.next = null), _dispatch = baseUpdate.next) : _dispatch = null !== _dispatch ? _dispatch.next : null;

    if (null !== _dispatch) {
      var newBaseUpdate = firstRenderPhaseUpdate = null,
          _update = _dispatch,
          didSkip = false;

      do {
        var updateExpirationTime = _update.expirationTime;
        updateExpirationTime < renderExpirationTime$1 ? (didSkip || (didSkip = true, newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState), updateExpirationTime > remainingExpirationTime && (remainingExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, _update.suspenseConfig), newState = _update.eagerReducer === reducer ? _update.eagerState : reducer(newState, _update.action));
        baseUpdate = _update;
        _update = _update.next;
      } while (null !== _update && _update !== _dispatch);

      didSkip || (newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState);
      is(newState, hook.memoizedState) || (didReceiveUpdate = true);
      hook.memoizedState = newState;
      hook.baseUpdate = newBaseUpdate;
      hook.baseState = firstRenderPhaseUpdate;
      queue.lastRenderedState = newState;
    }

    return [hook.memoizedState, queue.dispatch];
  }

  function pushEffect(tag, create, destroy, deps) {
    tag = {
      tag: tag,
      create: create,
      destroy: destroy,
      deps: deps,
      next: null
    };
    null === componentUpdateQueue ? (componentUpdateQueue = {
      lastEffect: null
    }, componentUpdateQueue.lastEffect = tag.next = tag) : (create = componentUpdateQueue.lastEffect, null === create ? componentUpdateQueue.lastEffect = tag.next = tag : (destroy = create.next, create.next = tag, tag.next = destroy, componentUpdateQueue.lastEffect = tag));
    return tag;
  }

  function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = mountWorkInProgressHook();
    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, undefined, undefined === deps ? null : deps);
  }

  function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = updateWorkInProgressHook();
    deps = undefined === deps ? null : deps;
    var destroy = undefined;

    if (null !== currentHook) {
      var prevEffect = currentHook.memoizedState;
      destroy = prevEffect.destroy;

      if (null !== deps && areHookInputsEqual(deps, prevEffect.deps)) {
        pushEffect(NoEffect$1, create, destroy, deps);
        return;
      }
    }

    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, destroy, deps);
  }

  function imperativeHandleEffect(create, ref) {
    if ("function" === typeof ref) return create = create(), ref(create), function () {
      ref(null);
    };
    if (null !== ref && undefined !== ref) return create = create(), ref.current = create, function () {
      ref.current = null;
    };
  }

  function mountDebugValue() {}

  function dispatchAction(fiber, queue, action) {
    if (!(25 > numberOfReRenders)) throw ReactError(Error("Too many re-renders. React limits the number of renders to prevent an infinite loop."));
    var alternate = fiber.alternate;
    if (fiber === currentlyRenderingFiber$1 || null !== alternate && alternate === currentlyRenderingFiber$1) {
      if (didScheduleRenderPhaseUpdate = true, fiber = {
        expirationTime: renderExpirationTime$1,
        suspenseConfig: null,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      }, null === renderPhaseUpdates && (renderPhaseUpdates = new Map()), action = renderPhaseUpdates.get(queue), undefined === action) renderPhaseUpdates.set(queue, fiber);else {
        for (queue = action; null !== queue.next;) {
          queue = queue.next;
        }

        queue.next = fiber;
      }
    } else {
      var currentTime = requestCurrentTime(),
          _suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, fiber, _suspenseConfig);
      _suspenseConfig = {
        expirationTime: currentTime,
        suspenseConfig: _suspenseConfig,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      };
      var _last = queue.last;
      if (null === _last) _suspenseConfig.next = _suspenseConfig;else {
        var first = _last.next;
        null !== first && (_suspenseConfig.next = first);
        _last.next = _suspenseConfig;
      }
      queue.last = _suspenseConfig;
      if (0 === fiber.expirationTime && (null === alternate || 0 === alternate.expirationTime) && (alternate = queue.lastRenderedReducer, null !== alternate)) try {
        var currentState = queue.lastRenderedState,
            _eagerState = alternate(currentState, action);

        _suspenseConfig.eagerReducer = alternate;
        _suspenseConfig.eagerState = _eagerState;
        if (is(_eagerState, currentState)) return;
      } catch (error) {} finally {}
      scheduleUpdateOnFiber(fiber, currentTime);
    }
  }

  var ContextOnlyDispatcher = {
    readContext: readContext,
    useCallback: throwInvalidHookError,
    useContext: throwInvalidHookError,
    useEffect: throwInvalidHookError,
    useImperativeHandle: throwInvalidHookError,
    useLayoutEffect: throwInvalidHookError,
    useMemo: throwInvalidHookError,
    useReducer: throwInvalidHookError,
    useRef: throwInvalidHookError,
    useState: throwInvalidHookError,
    useDebugValue: throwInvalidHookError,
    useResponder: throwInvalidHookError
  },
      HooksDispatcherOnMount = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      mountWorkInProgressHook().memoizedState = [callback, undefined === deps ? null : deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return mountEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return mountEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return mountEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = mountWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: function useReducer(reducer, initialArg, init) {
      var hook = mountWorkInProgressHook();
      initialArg = undefined !== init ? init(initialArg) : initialArg;
      hook.memoizedState = hook.baseState = initialArg;
      reducer = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: reducer,
        lastRenderedState: initialArg
      };
      reducer = reducer.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, reducer);
      return [hook.memoizedState, reducer];
    },
    useRef: function useRef(initialValue) {
      var hook = mountWorkInProgressHook();
      initialValue = {
        current: initialValue
      };
      return hook.memoizedState = initialValue;
    },
    useState: function useState(initialState) {
      var hook = mountWorkInProgressHook();
      "function" === typeof initialState && (initialState = initialState());
      hook.memoizedState = hook.baseState = initialState;
      initialState = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: basicStateReducer,
        lastRenderedState: initialState
      };
      initialState = initialState.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, initialState);
      return [hook.memoizedState, initialState];
    },
    useDebugValue: mountDebugValue,
    useResponder: createResponderListener
  },
      HooksDispatcherOnUpdate = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      hook.memoizedState = [callback, deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return updateEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return updateEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return updateEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: updateReducer,
    useRef: function useRef() {
      return updateWorkInProgressHook().memoizedState;
    },
    useState: function useState(initialState) {
      return updateReducer(basicStateReducer, initialState);
    },
    useDebugValue: mountDebugValue,
    useResponder: createResponderListener
  },
      hydrationParentFiber = null,
      nextHydratableInstance = null,
      isHydrating = false;

  function tryHydrate(fiber, nextInstance) {
    switch (fiber.tag) {
      case 5:
        return nextInstance = shim$1(nextInstance, fiber.type, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 6:
        return nextInstance = shim$1(nextInstance, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 13:
        return false;

      default:
        return false;
    }
  }

  function tryToClaimNextHydratableInstance(fiber$jscomp$0) {
    if (isHydrating) {
      var nextInstance = nextHydratableInstance;

      if (nextInstance) {
        var firstAttemptedInstance = nextInstance;

        if (!tryHydrate(fiber$jscomp$0, nextInstance)) {
          nextInstance = shim$1(firstAttemptedInstance);

          if (!nextInstance || !tryHydrate(fiber$jscomp$0, nextInstance)) {
            fiber$jscomp$0.effectTag |= 2;
            isHydrating = false;
            hydrationParentFiber = fiber$jscomp$0;
            return;
          }

          var returnFiber = hydrationParentFiber,
              fiber = createFiber(5, null, null, 0);
          fiber.elementType = "DELETED";
          fiber.type = "DELETED";
          fiber.stateNode = firstAttemptedInstance;
          fiber.return = returnFiber;
          fiber.effectTag = 8;
          null !== returnFiber.lastEffect ? (returnFiber.lastEffect.nextEffect = fiber, returnFiber.lastEffect = fiber) : returnFiber.firstEffect = returnFiber.lastEffect = fiber;
        }

        hydrationParentFiber = fiber$jscomp$0;
        nextHydratableInstance = shim$1(nextInstance);
      } else fiber$jscomp$0.effectTag |= 2, isHydrating = false, hydrationParentFiber = fiber$jscomp$0;
    }
  }

  var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner,
      didReceiveUpdate = false;

  function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
    workInProgress.child = null === current$$1 ? mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime) : reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
  }

  function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    Component = Component.render;
    var ref = workInProgress.ref;
    prepareToReadContext(workInProgress, renderExpirationTime);
    nextProps = renderWithHooks(current$$1, workInProgress, Component, nextProps, ref, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, nextProps, renderExpirationTime);
    return workInProgress.child;
  }

  function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    if (null === current$$1) {
      var type = Component.type;
      if ("function" === typeof type && !shouldConstruct(type) && undefined === type.defaultProps && null === Component.compare && undefined === Component.defaultProps) return workInProgress.tag = 15, workInProgress.type = type, updateSimpleMemoComponent(current$$1, workInProgress, type, nextProps, updateExpirationTime, renderExpirationTime);
      current$$1 = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
      current$$1.ref = workInProgress.ref;
      current$$1.return = workInProgress;
      return workInProgress.child = current$$1;
    }

    type = current$$1.child;
    if (updateExpirationTime < renderExpirationTime && (updateExpirationTime = type.memoizedProps, Component = Component.compare, Component = null !== Component ? Component : shallowEqual, Component(updateExpirationTime, nextProps) && current$$1.ref === workInProgress.ref)) return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    current$$1 = createWorkInProgress(type, nextProps, renderExpirationTime);
    current$$1.ref = workInProgress.ref;
    current$$1.return = workInProgress;
    return workInProgress.child = current$$1;
  }

  function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    return null !== current$$1 && shallowEqual(current$$1.memoizedProps, nextProps) && current$$1.ref === workInProgress.ref && (didReceiveUpdate = false, updateExpirationTime < renderExpirationTime) ? bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
  }

  function markRef(current$$1, workInProgress) {
    var ref = workInProgress.ref;
    if (null === current$$1 && null !== ref || null !== current$$1 && current$$1.ref !== ref) workInProgress.effectTag |= 128;
  }

  function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    var context = isContextProvider(Component) ? previousContext : contextStackCursor.current;
    context = getMaskedContext(workInProgress, context);
    prepareToReadContext(workInProgress, renderExpirationTime);
    Component = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, Component, renderExpirationTime);
    return workInProgress.child;
  }

  function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    if (isContextProvider(Component)) {
      var hasContext = true;
      pushContextProvider(workInProgress);
    } else hasContext = false;

    prepareToReadContext(workInProgress, renderExpirationTime);
    if (null === workInProgress.stateNode) null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime), mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime), nextProps = true;else if (null === current$$1) {
      var instance = workInProgress.stateNode,
          oldProps = workInProgress.memoizedProps;
      instance.props = oldProps;
      var oldContext = instance.context,
          contextType = Component.contextType;
      "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType));
      var getDerivedStateFromProps = Component.getDerivedStateFromProps,
          hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate;
      hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType);
      hasForceUpdate = false;
      var oldState = workInProgress.memoizedState;
      oldContext = instance.state = oldState;
      var updateQueue = workInProgress.updateQueue;
      null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldContext = workInProgress.memoizedState);
      oldProps !== nextProps || oldState !== oldContext || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldContext = workInProgress.memoizedState), (oldProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldState, oldContext, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || ("function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount()), "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4)) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldContext), instance.props = nextProps, instance.state = oldContext, instance.context = contextType, nextProps = oldProps) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), nextProps = false);
    } else instance = workInProgress.stateNode, oldProps = workInProgress.memoizedProps, instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps), oldContext = instance.context, contextType = Component.contextType, "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType)), getDerivedStateFromProps = Component.getDerivedStateFromProps, (hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate) || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType), hasForceUpdate = false, oldContext = workInProgress.memoizedState, oldState = instance.state = oldContext, updateQueue = workInProgress.updateQueue, null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldState = workInProgress.memoizedState), oldProps !== nextProps || oldContext !== oldState || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldState = workInProgress.memoizedState), (getDerivedStateFromProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldContext, oldState, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillUpdate && "function" !== typeof instance.componentWillUpdate || ("function" === typeof instance.componentWillUpdate && instance.componentWillUpdate(nextProps, oldState, contextType), "function" === typeof instance.UNSAFE_componentWillUpdate && instance.UNSAFE_componentWillUpdate(nextProps, oldState, contextType)), "function" === typeof instance.componentDidUpdate && (workInProgress.effectTag |= 4), "function" === typeof instance.getSnapshotBeforeUpdate && (workInProgress.effectTag |= 256)) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldState), instance.props = nextProps, instance.state = oldState, instance.context = contextType, nextProps = getDerivedStateFromProps) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), nextProps = false);
    return finishClassComponent(current$$1, workInProgress, Component, nextProps, hasContext, renderExpirationTime);
  }

  function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
    markRef(current$$1, workInProgress);
    var didCaptureError = 0 !== (workInProgress.effectTag & 64);
    if (!shouldUpdate && !didCaptureError) return hasContext && invalidateContextProvider(workInProgress, Component, false), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    shouldUpdate = workInProgress.stateNode;
    ReactCurrentOwner$3.current = workInProgress;
    var nextChildren = didCaptureError && "function" !== typeof Component.getDerivedStateFromError ? null : shouldUpdate.render();
    workInProgress.effectTag |= 1;
    null !== current$$1 && didCaptureError ? (workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime), workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime)) : reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
    workInProgress.memoizedState = shouldUpdate.state;
    hasContext && invalidateContextProvider(workInProgress, Component, true);
    return workInProgress.child;
  }

  function pushHostRootContext(workInProgress) {
    var root = workInProgress.stateNode;
    root.pendingContext ? pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context) : root.context && pushTopLevelContextObject(workInProgress, root.context, false);
    pushHostContainer(workInProgress, root.containerInfo);
  }

  var SUSPENDED_MARKER = {};

  function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
    var mode = workInProgress.mode,
        nextProps = workInProgress.pendingProps,
        suspenseContext = suspenseStackCursor.current,
        nextState = null,
        nextDidTimeout = false,
        JSCompiler_temp;
    (JSCompiler_temp = 0 !== (workInProgress.effectTag & 64)) || (JSCompiler_temp = 0 !== (suspenseContext & ForceSuspenseFallback) && (null === current$$1 || null !== current$$1.memoizedState));
    JSCompiler_temp ? (nextState = SUSPENDED_MARKER, nextDidTimeout = true, workInProgress.effectTag &= -65) : null !== current$$1 && null === current$$1.memoizedState || undefined === nextProps.fallback || true === nextProps.unstable_avoidThisFallback || (suspenseContext |= InvisibleParentSuspenseContext);
    suspenseContext &= SubtreeSuspenseContextMask;
    push(suspenseStackCursor, suspenseContext, workInProgress);
    if (null === current$$1) {
      if (nextDidTimeout) {
        nextProps = nextProps.fallback;
        current$$1 = createFiberFromFragment(null, mode, 0, null);
        current$$1.return = workInProgress;
        if (0 === (workInProgress.mode & 2)) for (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, current$$1.child = nextDidTimeout; null !== nextDidTimeout;) {
          nextDidTimeout.return = current$$1, nextDidTimeout = nextDidTimeout.sibling;
        }
        renderExpirationTime = createFiberFromFragment(nextProps, mode, renderExpirationTime, null);
        renderExpirationTime.return = workInProgress;
        current$$1.sibling = renderExpirationTime;
        mode = current$$1;
      } else mode = renderExpirationTime = mountChildFibers(workInProgress, null, nextProps.children, renderExpirationTime);
    } else {
      if (null !== current$$1.memoizedState) {
        if (suspenseContext = current$$1.child, mode = suspenseContext.sibling, nextDidTimeout) {
          nextProps = nextProps.fallback;
          renderExpirationTime = createWorkInProgress(suspenseContext, suspenseContext.pendingProps, 0);
          renderExpirationTime.return = workInProgress;
          if (0 === (workInProgress.mode & 2) && (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextDidTimeout !== suspenseContext.child)) for (renderExpirationTime.child = nextDidTimeout; null !== nextDidTimeout;) {
            nextDidTimeout.return = renderExpirationTime, nextDidTimeout = nextDidTimeout.sibling;
          }
          nextProps = createWorkInProgress(mode, nextProps, mode.expirationTime);
          nextProps.return = workInProgress;
          renderExpirationTime.sibling = nextProps;
          mode = renderExpirationTime;
          renderExpirationTime.childExpirationTime = 0;
          renderExpirationTime = nextProps;
        } else mode = renderExpirationTime = reconcileChildFibers(workInProgress, suspenseContext.child, nextProps.children, renderExpirationTime);
      } else if (suspenseContext = current$$1.child, nextDidTimeout) {
        nextDidTimeout = nextProps.fallback;
        nextProps = createFiberFromFragment(null, mode, 0, null);
        nextProps.return = workInProgress;
        nextProps.child = suspenseContext;
        null !== suspenseContext && (suspenseContext.return = nextProps);
        if (0 === (workInProgress.mode & 2)) for (suspenseContext = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextProps.child = suspenseContext; null !== suspenseContext;) {
          suspenseContext.return = nextProps, suspenseContext = suspenseContext.sibling;
        }
        renderExpirationTime = createFiberFromFragment(nextDidTimeout, mode, renderExpirationTime, null);
        renderExpirationTime.return = workInProgress;
        nextProps.sibling = renderExpirationTime;
        renderExpirationTime.effectTag |= 2;
        mode = nextProps;
        nextProps.childExpirationTime = 0;
      } else renderExpirationTime = mode = reconcileChildFibers(workInProgress, suspenseContext, nextProps.children, renderExpirationTime);
      workInProgress.stateNode = current$$1.stateNode;
    }
    workInProgress.memoizedState = nextState;
    workInProgress.child = mode;
    return renderExpirationTime;
  }

  function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
    var renderState = workInProgress.memoizedState;
    null === renderState ? workInProgress.memoizedState = {
      isBackwards: isBackwards,
      rendering: null,
      last: lastContentRow,
      tail: tail,
      tailExpiration: 0,
      tailMode: tailMode
    } : (renderState.isBackwards = isBackwards, renderState.rendering = null, renderState.last = lastContentRow, renderState.tail = tail, renderState.tailExpiration = 0, renderState.tailMode = tailMode);
  }

  function updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime) {
    var nextProps = workInProgress.pendingProps,
        revealOrder = nextProps.revealOrder,
        tailMode = nextProps.tail;
    reconcileChildren(current$$1, workInProgress, nextProps.children, renderExpirationTime);
    nextProps = suspenseStackCursor.current;
    if (0 !== (nextProps & ForceSuspenseFallback)) nextProps = nextProps & SubtreeSuspenseContextMask | ForceSuspenseFallback, workInProgress.effectTag |= 64;else {
      if (null !== current$$1 && 0 !== (current$$1.effectTag & 64)) a: for (current$$1 = workInProgress.child; null !== current$$1;) {
        if (13 === current$$1.tag) {
          if (null !== current$$1.memoizedState) {
            current$$1.expirationTime < renderExpirationTime && (current$$1.expirationTime = renderExpirationTime);
            var alternate = current$$1.alternate;
            null !== alternate && alternate.expirationTime < renderExpirationTime && (alternate.expirationTime = renderExpirationTime);
            scheduleWorkOnParentPath(current$$1.return, renderExpirationTime);
          }
        } else if (null !== current$$1.child) {
          current$$1.child.return = current$$1;
          current$$1 = current$$1.child;
          continue;
        }

        if (current$$1 === workInProgress) break a;

        for (; null === current$$1.sibling;) {
          if (null === current$$1.return || current$$1.return === workInProgress) break a;
          current$$1 = current$$1.return;
        }

        current$$1.sibling.return = current$$1.return;
        current$$1 = current$$1.sibling;
      }
      nextProps &= SubtreeSuspenseContextMask;
    }
    push(suspenseStackCursor, nextProps, workInProgress);
    if (0 === (workInProgress.mode & 2)) workInProgress.memoizedState = null;else switch (revealOrder) {
      case "forwards":
        renderExpirationTime = workInProgress.child;

        for (revealOrder = null; null !== renderExpirationTime;) {
          nextProps = renderExpirationTime.alternate, null !== nextProps && null === findFirstSuspended(nextProps) && (revealOrder = renderExpirationTime), renderExpirationTime = renderExpirationTime.sibling;
        }

        renderExpirationTime = revealOrder;
        null === renderExpirationTime ? (revealOrder = workInProgress.child, workInProgress.child = null) : (revealOrder = renderExpirationTime.sibling, renderExpirationTime.sibling = null);
        initSuspenseListRenderState(workInProgress, false, revealOrder, renderExpirationTime, tailMode);
        break;

      case "backwards":
        renderExpirationTime = null;
        revealOrder = workInProgress.child;

        for (workInProgress.child = null; null !== revealOrder;) {
          nextProps = revealOrder.alternate;

          if (null !== nextProps && null === findFirstSuspended(nextProps)) {
            workInProgress.child = revealOrder;
            break;
          }

          nextProps = revealOrder.sibling;
          revealOrder.sibling = renderExpirationTime;
          renderExpirationTime = revealOrder;
          revealOrder = nextProps;
        }

        initSuspenseListRenderState(workInProgress, true, renderExpirationTime, null, tailMode);
        break;

      case "together":
        initSuspenseListRenderState(workInProgress, false, null, null, undefined);
        break;

      default:
        workInProgress.memoizedState = null;
    }
    return workInProgress.child;
  }

  function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
    null !== current$$1 && (workInProgress.dependencies = current$$1.dependencies);
    if (workInProgress.childExpirationTime < renderExpirationTime) return null;
    if (null !== current$$1 && workInProgress.child !== current$$1.child) throw ReactError(Error("Resuming work not yet implemented."));

    if (null !== workInProgress.child) {
      current$$1 = workInProgress.child;
      renderExpirationTime = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime);
      workInProgress.child = renderExpirationTime;

      for (renderExpirationTime.return = workInProgress; null !== current$$1.sibling;) {
        current$$1 = current$$1.sibling, renderExpirationTime = renderExpirationTime.sibling = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime), renderExpirationTime.return = workInProgress;
      }

      renderExpirationTime.sibling = null;
    }

    return workInProgress.child;
  }

  var appendAllChildren = undefined,
      updateHostContainer = undefined,
      updateHostComponent$1 = undefined,
      updateHostText$1 = undefined;

  appendAllChildren = function appendAllChildren(parent, workInProgress) {
    for (var node = workInProgress.child; null !== node;) {
      if (5 === node.tag || 6 === node.tag) parent._children.push(node.stateNode);else if (4 !== node.tag && null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      if (node === workInProgress) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === workInProgress) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  updateHostContainer = function updateHostContainer() {};

  updateHostComponent$1 = function updateHostComponent$1(current, workInProgress, type, newProps) {
    current.memoizedProps !== newProps && (requiredContext(contextStackCursor$1.current), workInProgress.updateQueue = UPDATE_SIGNAL) && (workInProgress.effectTag |= 4);
  };

  updateHostText$1 = function updateHostText$1(current, workInProgress, oldText, newText) {
    oldText !== newText && (workInProgress.effectTag |= 4);
  };

  function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
    switch (renderState.tailMode) {
      case "hidden":
        hasRenderedATailFallback = renderState.tail;

        for (var lastTailNode = null; null !== hasRenderedATailFallback;) {
          null !== hasRenderedATailFallback.alternate && (lastTailNode = hasRenderedATailFallback), hasRenderedATailFallback = hasRenderedATailFallback.sibling;
        }

        null === lastTailNode ? renderState.tail = null : lastTailNode.sibling = null;
        break;

      case "collapsed":
        lastTailNode = renderState.tail;

        for (var _lastTailNode = null; null !== lastTailNode;) {
          null !== lastTailNode.alternate && (_lastTailNode = lastTailNode), lastTailNode = lastTailNode.sibling;
        }

        null === _lastTailNode ? hasRenderedATailFallback || null === renderState.tail ? renderState.tail = null : renderState.tail.sibling = null : _lastTailNode.sibling = null;
    }
  }

  function unwindWork(workInProgress) {
    switch (workInProgress.tag) {
      case 1:
        isContextProvider(workInProgress.type) && popContext(workInProgress);
        var effectTag = workInProgress.effectTag;
        return effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 3:
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        effectTag = workInProgress.effectTag;
        if (0 !== (effectTag & 64)) throw ReactError(Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue."));
        workInProgress.effectTag = effectTag & -2049 | 64;
        return workInProgress;

      case 5:
        return popHostContext(workInProgress), null;

      case 13:
        return pop(suspenseStackCursor, workInProgress), effectTag = workInProgress.effectTag, effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 18:
        return null;

      case 19:
        return pop(suspenseStackCursor, workInProgress), null;

      case 4:
        return popHostContainer(workInProgress), null;

      case 10:
        return popProvider(workInProgress), null;

      default:
        return null;
    }
  }

  function createCapturedValue(value, source) {
    return {
      value: value,
      source: source,
      stack: getStackByFiberInDevAndProd(source)
    };
  }

  if ("function" !== typeof ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog) throw ReactError(Error("Expected ReactFiberErrorDialog.showErrorDialog to be a function."));

  function logCapturedError(capturedError) {
    false !== ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog(capturedError) && undefined;
  }

  var PossiblyWeakSet$1 = "function" === typeof WeakSet ? WeakSet : Set;

  function logError(boundary, errorInfo) {
    var source = errorInfo.source,
        stack = errorInfo.stack;
    null === stack && null !== source && (stack = getStackByFiberInDevAndProd(source));
    errorInfo = {
      componentName: null !== source ? getComponentName(source.type) : null,
      componentStack: null !== stack ? stack : "",
      error: errorInfo.value,
      errorBoundary: null,
      errorBoundaryName: null,
      errorBoundaryFound: false,
      willRetry: false
    };
    null !== boundary && 1 === boundary.tag && (errorInfo.errorBoundary = boundary.stateNode, errorInfo.errorBoundaryName = getComponentName(boundary.type), errorInfo.errorBoundaryFound = true, errorInfo.willRetry = true);

    try {
      logCapturedError(errorInfo);
    } catch (e) {
      setTimeout(function () {
        throw e;
      });
    }
  }

  function safelyCallComponentWillUnmount(current$$1, instance) {
    try {
      instance.props = current$$1.memoizedProps, instance.state = current$$1.memoizedState, instance.componentWillUnmount();
    } catch (unmountError) {
      captureCommitPhaseError(current$$1, unmountError);
    }
  }

  function safelyDetachRef(current$$1) {
    var ref = current$$1.ref;
    if (null !== ref) if ("function" === typeof ref) try {
      ref(null);
    } catch (refError) {
      captureCommitPhaseError(current$$1, refError);
    } else ref.current = null;
  }

  function commitHookEffectList(unmountTag, mountTag, finishedWork) {
    finishedWork = finishedWork.updateQueue;
    finishedWork = null !== finishedWork ? finishedWork.lastEffect : null;

    if (null !== finishedWork) {
      var effect = finishedWork = finishedWork.next;

      do {
        if ((effect.tag & unmountTag) !== NoEffect$1) {
          var destroy = effect.destroy;
          effect.destroy = undefined;
          undefined !== destroy && destroy();
        }

        (effect.tag & mountTag) !== NoEffect$1 && (destroy = effect.create, effect.destroy = destroy());
        effect = effect.next;
      } while (effect !== finishedWork);
    }
  }

  function commitUnmount(current$$1$jscomp$0, renderPriorityLevel) {
    "function" === typeof onCommitFiberUnmount && onCommitFiberUnmount(current$$1$jscomp$0);

    switch (current$$1$jscomp$0.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        var updateQueue = current$$1$jscomp$0.updateQueue;

        if (null !== updateQueue && (updateQueue = updateQueue.lastEffect, null !== updateQueue)) {
          var firstEffect = updateQueue.next;
          runWithPriority(97 < renderPriorityLevel ? 97 : renderPriorityLevel, function () {
            var effect = firstEffect;

            do {
              var destroy = effect.destroy;

              if (undefined !== destroy) {
                var current$$1 = current$$1$jscomp$0;

                try {
                  destroy();
                } catch (error) {
                  captureCommitPhaseError(current$$1, error);
                }
              }

              effect = effect.next;
            } while (effect !== firstEffect);
          });
        }

        break;

      case 1:
        safelyDetachRef(current$$1$jscomp$0);
        renderPriorityLevel = current$$1$jscomp$0.stateNode;
        "function" === typeof renderPriorityLevel.componentWillUnmount && safelyCallComponentWillUnmount(current$$1$jscomp$0, renderPriorityLevel);
        break;

      case 5:
        safelyDetachRef(current$$1$jscomp$0);
        break;

      case 4:
        unmountHostComponents(current$$1$jscomp$0, renderPriorityLevel);
    }
  }

  function detachFiber(current$$1) {
    var alternate = current$$1.alternate;
    current$$1.return = null;
    current$$1.child = null;
    current$$1.memoizedState = null;
    current$$1.updateQueue = null;
    current$$1.dependencies = null;
    current$$1.alternate = null;
    current$$1.firstEffect = null;
    current$$1.lastEffect = null;
    current$$1.pendingProps = null;
    current$$1.memoizedProps = null;
    null !== alternate && detachFiber(alternate);
  }

  function isHostParent(fiber) {
    return 5 === fiber.tag || 3 === fiber.tag || 4 === fiber.tag;
  }

  function commitPlacement(finishedWork) {
    a: {
      for (var parent = finishedWork.return; null !== parent;) {
        if (isHostParent(parent)) {
          var parentFiber = parent;
          break a;
        }

        parent = parent.return;
      }

      throw ReactError(Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."));
    }

    parent = parentFiber.stateNode;

    switch (parentFiber.tag) {
      case 5:
        var isContainer = false;
        break;

      case 3:
        parent = parent.containerInfo;
        isContainer = true;
        break;

      case 4:
        parent = parent.containerInfo;
        isContainer = true;
        break;

      default:
        throw ReactError(Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue."));
    }

    parentFiber.effectTag & 16 && (parentFiber.effectTag &= -17);

    a: b: for (parentFiber = finishedWork;;) {
      for (; null === parentFiber.sibling;) {
        if (null === parentFiber.return || isHostParent(parentFiber.return)) {
          parentFiber = null;
          break a;
        }

        parentFiber = parentFiber.return;
      }

      parentFiber.sibling.return = parentFiber.return;

      for (parentFiber = parentFiber.sibling; 5 !== parentFiber.tag && 6 !== parentFiber.tag && 18 !== parentFiber.tag;) {
        if (parentFiber.effectTag & 2) continue b;
        if (null === parentFiber.child || 4 === parentFiber.tag) continue b;else parentFiber.child.return = parentFiber, parentFiber = parentFiber.child;
      }

      if (!(parentFiber.effectTag & 2)) {
        parentFiber = parentFiber.stateNode;
        break a;
      }
    }

    for (var node = finishedWork;;) {
      var isHost = 5 === node.tag || 6 === node.tag;

      if (isHost) {
        var stateNode = isHost ? node.stateNode : node.stateNode.instance;
        if (parentFiber) {
          if (isContainer) {
            if ("number" === typeof parent) throw ReactError(Error("Container does not support insertBefore operation"));
          } else {
            isHost = parent;
            var beforeChild = parentFiber,
                children = isHost._children,
                index = children.indexOf(stateNode);
            0 <= index ? (children.splice(index, 1), beforeChild = children.indexOf(beforeChild), children.splice(beforeChild, 0, stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [index], [beforeChild], [], [], [])) : (index = children.indexOf(beforeChild), children.splice(index, 0, stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [], [], ["number" === typeof stateNode ? stateNode : stateNode._nativeTag], [index], []));
          }
        } else isContainer ? ReactNativePrivateInterface.UIManager.setChildren(parent, ["number" === typeof stateNode ? stateNode : stateNode._nativeTag]) : (isHost = parent, children = "number" === typeof stateNode ? stateNode : stateNode._nativeTag, index = isHost._children, beforeChild = index.indexOf(stateNode), 0 <= beforeChild ? (index.splice(beforeChild, 1), index.push(stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [beforeChild], [index.length - 1], [], [], [])) : (index.push(stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [], [], [children], [index.length - 1], [])));
      } else if (4 !== node.tag && null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === finishedWork) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === finishedWork) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  function unmountHostComponents(current$$1, renderPriorityLevel$jscomp$0) {
    for (var node = current$$1, currentParentIsValid = false, currentParent = undefined, currentParentIsContainer = undefined;;) {
      if (!currentParentIsValid) {
        currentParentIsValid = node.return;

        a: for (;;) {
          if (null === currentParentIsValid) throw ReactError(Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."));
          currentParent = currentParentIsValid.stateNode;

          switch (currentParentIsValid.tag) {
            case 5:
              currentParentIsContainer = false;
              break a;

            case 3:
              currentParent = currentParent.containerInfo;
              currentParentIsContainer = true;
              break a;

            case 4:
              currentParent = currentParent.containerInfo;
              currentParentIsContainer = true;
              break a;
          }

          currentParentIsValid = currentParentIsValid.return;
        }

        currentParentIsValid = true;
      }

      if (5 === node.tag || 6 === node.tag) {
        a: for (var root = node, renderPriorityLevel = renderPriorityLevel$jscomp$0, node$jscomp$0 = root;;) {
          if (commitUnmount(node$jscomp$0, renderPriorityLevel), null !== node$jscomp$0.child && 4 !== node$jscomp$0.tag) node$jscomp$0.child.return = node$jscomp$0, node$jscomp$0 = node$jscomp$0.child;else {
            if (node$jscomp$0 === root) break;

            for (; null === node$jscomp$0.sibling;) {
              if (null === node$jscomp$0.return || node$jscomp$0.return === root) break a;
              node$jscomp$0 = node$jscomp$0.return;
            }

            node$jscomp$0.sibling.return = node$jscomp$0.return;
            node$jscomp$0 = node$jscomp$0.sibling;
          }
        }

        currentParentIsContainer ? (root = currentParent, recursivelyUncacheFiberNode(node.stateNode), ReactNativePrivateInterface.UIManager.manageChildren(root, [], [], [], [], [0])) : (root = currentParent, node$jscomp$0 = node.stateNode, recursivelyUncacheFiberNode(node$jscomp$0), renderPriorityLevel = root._children, node$jscomp$0 = renderPriorityLevel.indexOf(node$jscomp$0), renderPriorityLevel.splice(node$jscomp$0, 1), ReactNativePrivateInterface.UIManager.manageChildren(root._nativeTag, [], [], [], [], [node$jscomp$0]));
      } else if (4 === node.tag) {
        if (null !== node.child) {
          currentParent = node.stateNode.containerInfo;
          currentParentIsContainer = true;
          node.child.return = node;
          node = node.child;
          continue;
        }
      } else if (commitUnmount(node, renderPriorityLevel$jscomp$0), null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === current$$1) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === current$$1) return;
        node = node.return;
        4 === node.tag && (currentParentIsValid = false);
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  function commitWork(current$$1, finishedWork) {
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
        break;

      case 1:
        break;

      case 5:
        var instance = finishedWork.stateNode;

        if (null != instance) {
          var newProps = finishedWork.memoizedProps;
          current$$1 = null !== current$$1 ? current$$1.memoizedProps : newProps;
          var updatePayload = finishedWork.updateQueue;
          finishedWork.updateQueue = null;
          null !== updatePayload && (finishedWork = instance.viewConfig, instanceProps.set(instance._nativeTag, newProps), newProps = diffProperties(null, current$$1, newProps, finishedWork.validAttributes), null != newProps && ReactNativePrivateInterface.UIManager.updateView(instance._nativeTag, finishedWork.uiViewClassName, newProps));
        }

        break;

      case 6:
        if (null === finishedWork.stateNode) throw ReactError(Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue."));
        ReactNativePrivateInterface.UIManager.updateView(finishedWork.stateNode, "RCTRawText", {
          text: finishedWork.memoizedProps
        });
        break;

      case 3:
        break;

      case 12:
        break;

      case 13:
        instance = finishedWork;
        null === finishedWork.memoizedState ? newProps = false : (newProps = true, instance = finishedWork.child, globalMostRecentFallbackTime = now());
        if (null !== instance) a: for (current$$1 = instance;;) {
          if (5 === current$$1.tag) {
            if (updatePayload = current$$1.stateNode, newProps) {
              var viewConfig = updatePayload.viewConfig;
              var updatePayload$jscomp$0 = diffProperties(null, emptyObject, {
                style: {
                  display: "none"
                }
              }, viewConfig.validAttributes);
              ReactNativePrivateInterface.UIManager.updateView(updatePayload._nativeTag, viewConfig.uiViewClassName, updatePayload$jscomp$0);
            } else {
              updatePayload = current$$1.stateNode;
              updatePayload$jscomp$0 = current$$1.memoizedProps;
              viewConfig = updatePayload.viewConfig;

              var prevProps = _extends({}, updatePayload$jscomp$0, {
                style: [updatePayload$jscomp$0.style, {
                  display: "none"
                }]
              });

              updatePayload$jscomp$0 = diffProperties(null, prevProps, updatePayload$jscomp$0, viewConfig.validAttributes);
              ReactNativePrivateInterface.UIManager.updateView(updatePayload._nativeTag, viewConfig.uiViewClassName, updatePayload$jscomp$0);
            }
          } else {
            if (6 === current$$1.tag) throw Error("Not yet implemented.");

            if (13 === current$$1.tag && null !== current$$1.memoizedState) {
              updatePayload = current$$1.child.sibling;
              updatePayload.return = current$$1;
              current$$1 = updatePayload;
              continue;
            } else if (null !== current$$1.child) {
              current$$1.child.return = current$$1;
              current$$1 = current$$1.child;
              continue;
            }
          }
          if (current$$1 === instance) break a;

          for (; null === current$$1.sibling;) {
            if (null === current$$1.return || current$$1.return === instance) break a;
            current$$1 = current$$1.return;
          }

          current$$1.sibling.return = current$$1.return;
          current$$1 = current$$1.sibling;
        }
        attachSuspenseRetryListeners(finishedWork);
        break;

      case 19:
        attachSuspenseRetryListeners(finishedWork);
        break;

      case 17:
        break;

      case 20:
        break;

      default:
        throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
    }
  }

  function attachSuspenseRetryListeners(finishedWork) {
    var thenables = finishedWork.updateQueue;

    if (null !== thenables) {
      finishedWork.updateQueue = null;
      var retryCache = finishedWork.stateNode;
      null === retryCache && (retryCache = finishedWork.stateNode = new PossiblyWeakSet$1());
      thenables.forEach(function (thenable) {
        var retry = resolveRetryThenable.bind(null, finishedWork, thenable);
        retryCache.has(thenable) || (retryCache.add(thenable), thenable.then(retry, retry));
      });
    }
  }

  var PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map;

  function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime, null);
    expirationTime.tag = 3;
    expirationTime.payload = {
      element: null
    };
    var error = errorInfo.value;

    expirationTime.callback = function () {
      hasUncaughtError || (hasUncaughtError = true, firstUncaughtError = error);
      logError(fiber, errorInfo);
    };

    return expirationTime;
  }

  function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime, null);
    expirationTime.tag = 3;
    var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

    if ("function" === typeof getDerivedStateFromError) {
      var error = errorInfo.value;

      expirationTime.payload = function () {
        logError(fiber, errorInfo);
        return getDerivedStateFromError(error);
      };
    }

    var inst = fiber.stateNode;
    null !== inst && "function" === typeof inst.componentDidCatch && (expirationTime.callback = function () {
      "function" !== typeof getDerivedStateFromError && (null === legacyErrorBoundariesThatAlreadyFailed ? legacyErrorBoundariesThatAlreadyFailed = new Set([this]) : legacyErrorBoundariesThatAlreadyFailed.add(this), logError(fiber, errorInfo));
      var stack = errorInfo.stack;
      this.componentDidCatch(errorInfo.value, {
        componentStack: null !== stack ? stack : ""
      });
    });
    return expirationTime;
  }

  var ceil = Math.ceil,
      ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher,
      ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,
      NoContext = 0,
      LegacyUnbatchedContext = 8,
      RenderContext = 16,
      CommitContext = 32,
      RootIncomplete = 0,
      RootErrored = 1,
      RootSuspended = 2,
      RootSuspendedWithDelay = 3,
      RootCompleted = 4,
      executionContext = NoContext,
      workInProgressRoot = null,
      workInProgress = null,
      renderExpirationTime = 0,
      workInProgressRootExitStatus = RootIncomplete,
      workInProgressRootLatestProcessedExpirationTime = 1073741823,
      workInProgressRootLatestSuspenseTimeout = 1073741823,
      workInProgressRootCanSuspendUsingConfig = null,
      workInProgressRootHasPendingPing = false,
      globalMostRecentFallbackTime = 0,
      FALLBACK_THROTTLE_MS = 500,
      nextEffect = null,
      hasUncaughtError = false,
      firstUncaughtError = null,
      legacyErrorBoundariesThatAlreadyFailed = null,
      rootDoesHavePassiveEffects = false,
      rootWithPendingPassiveEffects = null,
      pendingPassiveEffectsRenderPriority = 90,
      pendingPassiveEffectsExpirationTime = 0,
      rootsWithPendingDiscreteUpdates = null,
      nestedUpdateCount = 0,
      rootWithNestedUpdates = null,
      currentEventTime = 0;

  function requestCurrentTime() {
    return (executionContext & 48) !== NoContext ? 1073741821 - (now() / 10 | 0) : 0 !== currentEventTime ? currentEventTime : currentEventTime = 1073741821 - (now() / 10 | 0);
  }

  function computeExpirationForFiber(currentTime, fiber, suspenseConfig) {
    fiber = fiber.mode;
    if (0 === (fiber & 2)) return 1073741823;
    var priorityLevel = getCurrentPriorityLevel();
    if (0 === (fiber & 4)) return 99 === priorityLevel ? 1073741823 : 1073741822;
    if ((executionContext & RenderContext) !== NoContext) return renderExpirationTime;
    if (null !== suspenseConfig) currentTime = 1073741821 - 25 * (((1073741821 - currentTime + (suspenseConfig.timeoutMs | 0 || 5e3) / 10) / 25 | 0) + 1);else switch (priorityLevel) {
      case 99:
        currentTime = 1073741823;
        break;

      case 98:
        currentTime = 1073741821 - 10 * (((1073741821 - currentTime + 15) / 10 | 0) + 1);
        break;

      case 97:
      case 96:
        currentTime = 1073741821 - 25 * (((1073741821 - currentTime + 500) / 25 | 0) + 1);
        break;

      case 95:
        currentTime = 1;
        break;

      default:
        throw ReactError(Error("Expected a valid priority level"));
    }
    null !== workInProgressRoot && currentTime === renderExpirationTime && --currentTime;
    return currentTime;
  }

  function scheduleUpdateOnFiber(fiber, expirationTime) {
    if (50 < nestedUpdateCount) throw nestedUpdateCount = 0, rootWithNestedUpdates = null, ReactError(Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops."));
    fiber = markUpdateTimeFromFiberToRoot(fiber, expirationTime);

    if (null !== fiber) {
      fiber.pingTime = 0;
      var priorityLevel = getCurrentPriorityLevel();
      if (1073741823 === expirationTime) {
        if ((executionContext & LegacyUnbatchedContext) !== NoContext && (executionContext & 48) === NoContext) for (var callback = renderRoot(fiber, 1073741823, true); null !== callback;) {
          callback = callback(true);
        } else scheduleCallbackForRoot(fiber, 99, 1073741823), executionContext === NoContext && flushSyncCallbackQueue();
      } else scheduleCallbackForRoot(fiber, priorityLevel, expirationTime);
      (executionContext & 4) === NoContext || 98 !== priorityLevel && 99 !== priorityLevel || (null === rootsWithPendingDiscreteUpdates ? rootsWithPendingDiscreteUpdates = new Map([[fiber, expirationTime]]) : (priorityLevel = rootsWithPendingDiscreteUpdates.get(fiber), (undefined === priorityLevel || priorityLevel > expirationTime) && rootsWithPendingDiscreteUpdates.set(fiber, expirationTime)));
    }
  }

  function markUpdateTimeFromFiberToRoot(fiber, expirationTime) {
    fiber.expirationTime < expirationTime && (fiber.expirationTime = expirationTime);
    var alternate = fiber.alternate;
    null !== alternate && alternate.expirationTime < expirationTime && (alternate.expirationTime = expirationTime);
    var node = fiber.return,
        root = null;
    if (null === node && 3 === fiber.tag) root = fiber.stateNode;else for (; null !== node;) {
      alternate = node.alternate;
      node.childExpirationTime < expirationTime && (node.childExpirationTime = expirationTime);
      null !== alternate && alternate.childExpirationTime < expirationTime && (alternate.childExpirationTime = expirationTime);

      if (null === node.return && 3 === node.tag) {
        root = node.stateNode;
        break;
      }

      node = node.return;
    }
    null !== root && (expirationTime > root.firstPendingTime && (root.firstPendingTime = expirationTime), fiber = root.lastPendingTime, 0 === fiber || expirationTime < fiber) && (root.lastPendingTime = expirationTime);
    return root;
  }

  function scheduleCallbackForRoot(root, priorityLevel, expirationTime) {
    if (root.callbackExpirationTime < expirationTime) {
      var existingCallbackNode = root.callbackNode;
      null !== existingCallbackNode && existingCallbackNode !== fakeCallbackNode && Scheduler_cancelCallback(existingCallbackNode);
      root.callbackExpirationTime = expirationTime;
      1073741823 === expirationTime ? root.callbackNode = scheduleSyncCallback(runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime))) : (existingCallbackNode = null, 1 !== expirationTime && (existingCallbackNode = {
        timeout: 10 * (1073741821 - expirationTime) - now()
      }), root.callbackNode = scheduleCallback(priorityLevel, runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime)), existingCallbackNode));
    }
  }

  function runRootCallback(root, callback, isSync) {
    var prevCallbackNode = root.callbackNode,
        continuation = null;

    try {
      return continuation = callback(isSync), null !== continuation ? runRootCallback.bind(null, root, continuation) : null;
    } finally {
      null === continuation && prevCallbackNode === root.callbackNode && (root.callbackNode = null, root.callbackExpirationTime = 0);
    }
  }

  function resolveLocksOnRoot(root, expirationTime) {
    var firstBatch = root.firstBatch;
    return null !== firstBatch && firstBatch._defer && firstBatch._expirationTime >= expirationTime ? (scheduleCallback(97, function () {
      firstBatch._onComplete();

      return null;
    }), true) : false;
  }

  function flushPendingDiscreteUpdates() {
    if (null !== rootsWithPendingDiscreteUpdates) {
      var roots = rootsWithPendingDiscreteUpdates;
      rootsWithPendingDiscreteUpdates = null;
      roots.forEach(function (expirationTime, root) {
        scheduleSyncCallback(renderRoot.bind(null, root, expirationTime));
      });
      flushSyncCallbackQueue();
    }
  }

  function prepareFreshStack(root, expirationTime) {
    root.finishedWork = null;
    root.finishedExpirationTime = 0;
    var timeoutHandle = root.timeoutHandle;
    -1 !== timeoutHandle && (root.timeoutHandle = -1, cancelTimeout(timeoutHandle));
    if (null !== workInProgress) for (timeoutHandle = workInProgress.return; null !== timeoutHandle;) {
      var interruptedWork = timeoutHandle;

      switch (interruptedWork.tag) {
        case 1:
          var childContextTypes = interruptedWork.type.childContextTypes;
          null !== childContextTypes && undefined !== childContextTypes && popContext(interruptedWork);
          break;

        case 3:
          popHostContainer(interruptedWork);
          popTopLevelContextObject(interruptedWork);
          break;

        case 5:
          popHostContext(interruptedWork);
          break;

        case 4:
          popHostContainer(interruptedWork);
          break;

        case 13:
          pop(suspenseStackCursor, interruptedWork);
          break;

        case 19:
          pop(suspenseStackCursor, interruptedWork);
          break;

        case 10:
          popProvider(interruptedWork);
      }

      timeoutHandle = timeoutHandle.return;
    }
    workInProgressRoot = root;
    workInProgress = createWorkInProgress(root.current, null, expirationTime);
    renderExpirationTime = expirationTime;
    workInProgressRootExitStatus = RootIncomplete;
    workInProgressRootLatestSuspenseTimeout = workInProgressRootLatestProcessedExpirationTime = 1073741823;
    workInProgressRootCanSuspendUsingConfig = null;
    workInProgressRootHasPendingPing = false;
  }

  function renderRoot(root$jscomp$0, expirationTime, isSync) {
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
    if (root$jscomp$0.firstPendingTime < expirationTime) return null;
    if (isSync && root$jscomp$0.finishedExpirationTime === expirationTime) return commitRoot.bind(null, root$jscomp$0);
    flushPassiveEffects();
    if (root$jscomp$0 !== workInProgressRoot || expirationTime !== renderExpirationTime) prepareFreshStack(root$jscomp$0, expirationTime);else if (workInProgressRootExitStatus === RootSuspendedWithDelay) if (workInProgressRootHasPendingPing) prepareFreshStack(root$jscomp$0, expirationTime);else {
      var lastPendingTime = root$jscomp$0.lastPendingTime;
      if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
    }

    if (null !== workInProgress) {
      lastPendingTime = executionContext;
      executionContext |= RenderContext;
      var prevDispatcher = ReactCurrentDispatcher.current;
      null === prevDispatcher && (prevDispatcher = ContextOnlyDispatcher);
      ReactCurrentDispatcher.current = ContextOnlyDispatcher;

      if (isSync) {
        if (1073741823 !== expirationTime) {
          var currentTime = requestCurrentTime();
          if (currentTime < expirationTime) return executionContext = lastPendingTime, resetContextDependencies(), ReactCurrentDispatcher.current = prevDispatcher, renderRoot.bind(null, root$jscomp$0, currentTime);
        }
      } else currentEventTime = 0;

      do {
        try {
          if (isSync) for (; null !== workInProgress;) {
            workInProgress = performUnitOfWork(workInProgress);
          } else for (; null !== workInProgress && !Scheduler_shouldYield();) {
            workInProgress = performUnitOfWork(workInProgress);
          }
          break;
        } catch (thrownValue) {
          resetContextDependencies();
          resetHooks();
          currentTime = workInProgress;
          if (null === currentTime || null === currentTime.return) throw prepareFreshStack(root$jscomp$0, expirationTime), executionContext = lastPendingTime, thrownValue;

          a: {
            var root = root$jscomp$0,
                returnFiber = currentTime.return,
                sourceFiber = currentTime,
                value = thrownValue,
                renderExpirationTime$jscomp$0 = renderExpirationTime;
            sourceFiber.effectTag |= 1024;
            sourceFiber.firstEffect = sourceFiber.lastEffect = null;

            if (null !== value && "object" === typeof value && "function" === typeof value.then) {
              var thenable = value,
                  hasInvisibleParentBoundary = 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext);
              value = returnFiber;

              do {
                var JSCompiler_temp;
                if (JSCompiler_temp = 13 === value.tag) null !== value.memoizedState ? JSCompiler_temp = false : (JSCompiler_temp = value.memoizedProps, JSCompiler_temp = undefined === JSCompiler_temp.fallback ? false : true !== JSCompiler_temp.unstable_avoidThisFallback ? true : hasInvisibleParentBoundary ? false : true);

                if (JSCompiler_temp) {
                  returnFiber = value.updateQueue;
                  null === returnFiber ? (returnFiber = new Set(), returnFiber.add(thenable), value.updateQueue = returnFiber) : returnFiber.add(thenable);

                  if (0 === (value.mode & 2)) {
                    value.effectTag |= 64;
                    sourceFiber.effectTag &= -1957;
                    1 === sourceFiber.tag && (null === sourceFiber.alternate ? sourceFiber.tag = 17 : (renderExpirationTime$jscomp$0 = createUpdate(1073741823, null), renderExpirationTime$jscomp$0.tag = 2, enqueueUpdate(sourceFiber, renderExpirationTime$jscomp$0)));
                    sourceFiber.expirationTime = 1073741823;
                    break a;
                  }

                  sourceFiber = root;
                  root = renderExpirationTime$jscomp$0;
                  hasInvisibleParentBoundary = sourceFiber.pingCache;
                  null === hasInvisibleParentBoundary ? (hasInvisibleParentBoundary = sourceFiber.pingCache = new PossiblyWeakMap(), returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)) : (returnFiber = hasInvisibleParentBoundary.get(thenable), undefined === returnFiber && (returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)));
                  returnFiber.has(root) || (returnFiber.add(root), sourceFiber = pingSuspendedRoot.bind(null, sourceFiber, thenable, root), thenable.then(sourceFiber, sourceFiber));
                  value.effectTag |= 2048;
                  value.expirationTime = renderExpirationTime$jscomp$0;
                  break a;
                }

                value = value.return;
              } while (null !== value);

              value = Error((getComponentName(sourceFiber.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + getStackByFiberInDevAndProd(sourceFiber));
            }

            workInProgressRootExitStatus !== RootCompleted && (workInProgressRootExitStatus = RootErrored);
            value = createCapturedValue(value, sourceFiber);
            sourceFiber = returnFiber;

            do {
              switch (sourceFiber.tag) {
                case 3:
                  sourceFiber.effectTag |= 2048;
                  sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                  renderExpirationTime$jscomp$0 = createRootErrorUpdate(sourceFiber, value, renderExpirationTime$jscomp$0);
                  enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                  break a;

                case 1:
                  if (thenable = value, root = sourceFiber.type, returnFiber = sourceFiber.stateNode, 0 === (sourceFiber.effectTag & 64) && ("function" === typeof root.getDerivedStateFromError || null !== returnFiber && "function" === typeof returnFiber.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(returnFiber)))) {
                    sourceFiber.effectTag |= 2048;
                    sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                    renderExpirationTime$jscomp$0 = createClassErrorUpdate(sourceFiber, thenable, renderExpirationTime$jscomp$0);
                    enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                    break a;
                  }

              }

              sourceFiber = sourceFiber.return;
            } while (null !== sourceFiber);
          }

          workInProgress = completeUnitOfWork(currentTime);
        }
      } while (1);

      executionContext = lastPendingTime;
      resetContextDependencies();
      ReactCurrentDispatcher.current = prevDispatcher;
      if (null !== workInProgress) return renderRoot.bind(null, root$jscomp$0, expirationTime);
    }

    root$jscomp$0.finishedWork = root$jscomp$0.current.alternate;
    root$jscomp$0.finishedExpirationTime = expirationTime;
    if (resolveLocksOnRoot(root$jscomp$0, expirationTime)) return null;
    workInProgressRoot = null;

    switch (workInProgressRootExitStatus) {
      case RootIncomplete:
        throw ReactError(Error("Should have a work-in-progress."));

      case RootErrored:
        return lastPendingTime = root$jscomp$0.lastPendingTime, lastPendingTime < expirationTime ? renderRoot.bind(null, root$jscomp$0, lastPendingTime) : isSync ? commitRoot.bind(null, root$jscomp$0) : (prepareFreshStack(root$jscomp$0, expirationTime), scheduleSyncCallback(renderRoot.bind(null, root$jscomp$0, expirationTime)), null);

      case RootSuspended:
        if (1073741823 === workInProgressRootLatestProcessedExpirationTime && !isSync && (isSync = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(), 10 < isSync)) {
          if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
          lastPendingTime = root$jscomp$0.lastPendingTime;
          if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
          root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync);
          return null;
        }

        return commitRoot.bind(null, root$jscomp$0);

      case RootSuspendedWithDelay:
        if (!isSync) {
          if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
          isSync = root$jscomp$0.lastPendingTime;
          if (isSync < expirationTime) return renderRoot.bind(null, root$jscomp$0, isSync);
          1073741823 !== workInProgressRootLatestSuspenseTimeout ? isSync = 10 * (1073741821 - workInProgressRootLatestSuspenseTimeout) - now() : 1073741823 === workInProgressRootLatestProcessedExpirationTime ? isSync = 0 : (isSync = 10 * (1073741821 - workInProgressRootLatestProcessedExpirationTime) - 5e3, lastPendingTime = now(), expirationTime = 10 * (1073741821 - expirationTime) - lastPendingTime, isSync = lastPendingTime - isSync, 0 > isSync && (isSync = 0), isSync = (120 > isSync ? 120 : 480 > isSync ? 480 : 1080 > isSync ? 1080 : 1920 > isSync ? 1920 : 3e3 > isSync ? 3e3 : 4320 > isSync ? 4320 : 1960 * ceil(isSync / 1960)) - isSync, expirationTime < isSync && (isSync = expirationTime));
          if (10 < isSync) return root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync), null;
        }

        return commitRoot.bind(null, root$jscomp$0);

      case RootCompleted:
        return !isSync && 1073741823 !== workInProgressRootLatestProcessedExpirationTime && null !== workInProgressRootCanSuspendUsingConfig && (lastPendingTime = workInProgressRootLatestProcessedExpirationTime, prevDispatcher = workInProgressRootCanSuspendUsingConfig, expirationTime = prevDispatcher.busyMinDurationMs | 0, 0 >= expirationTime ? expirationTime = 0 : (isSync = prevDispatcher.busyDelayMs | 0, lastPendingTime = now() - (10 * (1073741821 - lastPendingTime) - (prevDispatcher.timeoutMs | 0 || 5e3)), expirationTime = lastPendingTime <= isSync ? 0 : isSync + expirationTime - lastPendingTime), 10 < expirationTime) ? (root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), expirationTime), null) : commitRoot.bind(null, root$jscomp$0);

      default:
        throw ReactError(Error("Unknown root exit status."));
    }
  }

  function markRenderEventTimeAndConfig(expirationTime, suspenseConfig) {
    expirationTime < workInProgressRootLatestProcessedExpirationTime && 1 < expirationTime && (workInProgressRootLatestProcessedExpirationTime = expirationTime);
    null !== suspenseConfig && expirationTime < workInProgressRootLatestSuspenseTimeout && 1 < expirationTime && (workInProgressRootLatestSuspenseTimeout = expirationTime, workInProgressRootCanSuspendUsingConfig = suspenseConfig);
  }

  function performUnitOfWork(unitOfWork) {
    var next = beginWork$$1(unitOfWork.alternate, unitOfWork, renderExpirationTime);
    unitOfWork.memoizedProps = unitOfWork.pendingProps;
    null === next && (next = completeUnitOfWork(unitOfWork));
    ReactCurrentOwner$2.current = null;
    return next;
  }

  function completeUnitOfWork(unitOfWork) {
    workInProgress = unitOfWork;

    do {
      var current$$1 = workInProgress.alternate;
      unitOfWork = workInProgress.return;

      if (0 === (workInProgress.effectTag & 1024)) {
        a: {
          var current = current$$1;
          current$$1 = workInProgress;
          var renderExpirationTime$jscomp$0 = renderExpirationTime,
              newProps = current$$1.pendingProps;

          switch (current$$1.tag) {
            case 2:
              break;

            case 16:
              break;

            case 15:
            case 0:
              break;

            case 1:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 3:
              popHostContainer(current$$1);
              popTopLevelContextObject(current$$1);
              newProps = current$$1.stateNode;
              newProps.pendingContext && (newProps.context = newProps.pendingContext, newProps.pendingContext = null);
              if (null === current || null === current.child) current$$1.effectTag &= -3;
              updateHostContainer(current$$1);
              break;

            case 5:
              popHostContext(current$$1);
              renderExpirationTime$jscomp$0 = requiredContext(rootInstanceStackCursor.current);
              var type = current$$1.type;
              if (null !== current && null != current$$1.stateNode) updateHostComponent$1(current, current$$1, type, newProps, renderExpirationTime$jscomp$0), current.ref !== current$$1.ref && (current$$1.effectTag |= 128);else if (newProps) {
                current = requiredContext(contextStackCursor$1.current);
                var type$jscomp$0 = type;
                var _instance6 = newProps;
                var rootContainerInstance = renderExpirationTime$jscomp$0,
                    internalInstanceHandle = current$$1,
                    tag = allocateTag();
                type$jscomp$0 = getViewConfigForType(type$jscomp$0);
                var updatePayload = diffProperties(null, emptyObject, _instance6, type$jscomp$0.validAttributes);
                ReactNativePrivateInterface.UIManager.createView(tag, type$jscomp$0.uiViewClassName, rootContainerInstance, updatePayload);
                rootContainerInstance = new ReactNativeFiberHostComponent(tag, type$jscomp$0);
                instanceCache.set(tag, internalInstanceHandle);
                instanceProps.set(tag, _instance6);
                _instance6 = rootContainerInstance;
                appendAllChildren(_instance6, current$$1, false, false);
                finalizeInitialChildren(_instance6, type, newProps, renderExpirationTime$jscomp$0, current) && (current$$1.effectTag |= 4);
                current$$1.stateNode = _instance6;
                null !== current$$1.ref && (current$$1.effectTag |= 128);
              } else if (null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
              break;

            case 6:
              if (current && null != current$$1.stateNode) updateHostText$1(current, current$$1, current.memoizedProps, newProps);else {
                if ("string" !== typeof newProps && null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
                type = requiredContext(rootInstanceStackCursor.current);
                renderExpirationTime$jscomp$0 = requiredContext(contextStackCursor$1.current);
                current = current$$1;
                if (!renderExpirationTime$jscomp$0.isInAParentText) throw ReactError(Error("Text strings must be rendered within a <Text> component."));
                renderExpirationTime$jscomp$0 = allocateTag();
                ReactNativePrivateInterface.UIManager.createView(renderExpirationTime$jscomp$0, "RCTRawText", type, {
                  text: newProps
                });
                instanceCache.set(renderExpirationTime$jscomp$0, current$$1);
                current.stateNode = renderExpirationTime$jscomp$0;
              }
              break;

            case 11:
              break;

            case 13:
              pop(suspenseStackCursor, current$$1);
              newProps = current$$1.memoizedState;

              if (0 !== (current$$1.effectTag & 64)) {
                current$$1.expirationTime = renderExpirationTime$jscomp$0;
                break a;
              }

              newProps = null !== newProps;
              renderExpirationTime$jscomp$0 = false;
              null !== current && (type = current.memoizedState, renderExpirationTime$jscomp$0 = null !== type, newProps || null === type || (type = current.child.sibling, null !== type && (_instance6 = current$$1.firstEffect, null !== _instance6 ? (current$$1.firstEffect = type, type.nextEffect = _instance6) : (current$$1.firstEffect = current$$1.lastEffect = type, type.nextEffect = null), type.effectTag = 8)));
              if (newProps && !renderExpirationTime$jscomp$0 && 0 !== (current$$1.mode & 2)) if (null === current && true !== current$$1.memoizedProps.unstable_avoidThisFallback || 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext)) workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootSuspended);else if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) workInProgressRootExitStatus = RootSuspendedWithDelay;
              if (newProps || renderExpirationTime$jscomp$0) current$$1.effectTag |= 4;
              break;

            case 7:
              break;

            case 8:
              break;

            case 12:
              break;

            case 4:
              popHostContainer(current$$1);
              updateHostContainer(current$$1);
              break;

            case 10:
              popProvider(current$$1);
              break;

            case 9:
              break;

            case 14:
              break;

            case 17:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 18:
              break;

            case 19:
              pop(suspenseStackCursor, current$$1);
              newProps = current$$1.memoizedState;
              if (null === newProps) break;
              type = 0 !== (current$$1.effectTag & 64);
              _instance6 = newProps.rendering;
              if (null === _instance6) {
                if (type) cutOffTailIfNeeded(newProps, false);else {
                  if (workInProgressRootExitStatus !== RootIncomplete || null !== current && 0 !== (current.effectTag & 64)) for (current = current$$1.child; null !== current;) {
                    _instance6 = findFirstSuspended(current);

                    if (null !== _instance6) {
                      current$$1.effectTag |= 64;
                      cutOffTailIfNeeded(newProps, false);
                      newProps = _instance6.updateQueue;
                      null !== newProps && (current$$1.updateQueue = newProps, current$$1.effectTag |= 4);
                      current$$1.firstEffect = current$$1.lastEffect = null;
                      newProps = renderExpirationTime$jscomp$0;

                      for (current = current$$1.child; null !== current;) {
                        renderExpirationTime$jscomp$0 = current, type = newProps, renderExpirationTime$jscomp$0.effectTag &= 2, renderExpirationTime$jscomp$0.nextEffect = null, renderExpirationTime$jscomp$0.firstEffect = null, renderExpirationTime$jscomp$0.lastEffect = null, _instance6 = renderExpirationTime$jscomp$0.alternate, null === _instance6 ? (renderExpirationTime$jscomp$0.childExpirationTime = 0, renderExpirationTime$jscomp$0.expirationTime = type, renderExpirationTime$jscomp$0.child = null, renderExpirationTime$jscomp$0.memoizedProps = null, renderExpirationTime$jscomp$0.memoizedState = null, renderExpirationTime$jscomp$0.updateQueue = null, renderExpirationTime$jscomp$0.dependencies = null) : (renderExpirationTime$jscomp$0.childExpirationTime = _instance6.childExpirationTime, renderExpirationTime$jscomp$0.expirationTime = _instance6.expirationTime, renderExpirationTime$jscomp$0.child = _instance6.child, renderExpirationTime$jscomp$0.memoizedProps = _instance6.memoizedProps, renderExpirationTime$jscomp$0.memoizedState = _instance6.memoizedState, renderExpirationTime$jscomp$0.updateQueue = _instance6.updateQueue, type = _instance6.dependencies, renderExpirationTime$jscomp$0.dependencies = null === type ? null : {
                          expirationTime: type.expirationTime,
                          firstContext: type.firstContext,
                          responders: type.responders
                        }), current = current.sibling;
                      }

                      push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask | ForceSuspenseFallback, current$$1);
                      current$$1 = current$$1.child;
                      break a;
                    }

                    current = current.sibling;
                  }
                }
              } else {
                if (!type) if (current = findFirstSuspended(_instance6), null !== current) {
                  if (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, true), null === newProps.tail && "hidden" === newProps.tailMode) {
                    current = current.updateQueue;
                    null !== current && (current$$1.updateQueue = current, current$$1.effectTag |= 4);
                    current$$1 = current$$1.lastEffect = newProps.lastEffect;
                    null !== current$$1 && (current$$1.nextEffect = null);
                    break;
                  }
                } else now() > newProps.tailExpiration && 1 < renderExpirationTime$jscomp$0 && (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, false), current$$1.expirationTime = current$$1.childExpirationTime = renderExpirationTime$jscomp$0 - 1);
                newProps.isBackwards ? (_instance6.sibling = current$$1.child, current$$1.child = _instance6) : (current = newProps.last, null !== current ? current.sibling = _instance6 : current$$1.child = _instance6, newProps.last = _instance6);
              }

              if (null !== newProps.tail) {
                0 === newProps.tailExpiration && (newProps.tailExpiration = now() + 500);
                current = newProps.tail;
                newProps.rendering = current;
                newProps.tail = current.sibling;
                newProps.lastEffect = current$$1.lastEffect;
                current.sibling = null;
                newProps = suspenseStackCursor.current;
                newProps = type ? newProps & SubtreeSuspenseContextMask | ForceSuspenseFallback : newProps & SubtreeSuspenseContextMask;
                push(suspenseStackCursor, newProps, current$$1);
                current$$1 = current;
                break a;
              }

              break;

            case 20:
              break;

            default:
              throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
          }

          current$$1 = null;
        }

        newProps = workInProgress;

        if (1 === renderExpirationTime || 1 !== newProps.childExpirationTime) {
          current = 0;

          for (renderExpirationTime$jscomp$0 = newProps.child; null !== renderExpirationTime$jscomp$0;) {
            type = renderExpirationTime$jscomp$0.expirationTime, _instance6 = renderExpirationTime$jscomp$0.childExpirationTime, type > current && (current = type), _instance6 > current && (current = _instance6), renderExpirationTime$jscomp$0 = renderExpirationTime$jscomp$0.sibling;
          }

          newProps.childExpirationTime = current;
        }

        if (null !== current$$1) return current$$1;
        null !== unitOfWork && 0 === (unitOfWork.effectTag & 1024) && (null === unitOfWork.firstEffect && (unitOfWork.firstEffect = workInProgress.firstEffect), null !== workInProgress.lastEffect && (null !== unitOfWork.lastEffect && (unitOfWork.lastEffect.nextEffect = workInProgress.firstEffect), unitOfWork.lastEffect = workInProgress.lastEffect), 1 < workInProgress.effectTag && (null !== unitOfWork.lastEffect ? unitOfWork.lastEffect.nextEffect = workInProgress : unitOfWork.firstEffect = workInProgress, unitOfWork.lastEffect = workInProgress));
      } else {
        current$$1 = unwindWork(workInProgress, renderExpirationTime);
        if (null !== current$$1) return current$$1.effectTag &= 1023, current$$1;
        null !== unitOfWork && (unitOfWork.firstEffect = unitOfWork.lastEffect = null, unitOfWork.effectTag |= 1024);
      }

      current$$1 = workInProgress.sibling;
      if (null !== current$$1) return current$$1;
      workInProgress = unitOfWork;
    } while (null !== workInProgress);

    workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootCompleted);
    return null;
  }

  function commitRoot(root) {
    var renderPriorityLevel = getCurrentPriorityLevel();
    runWithPriority(99, commitRootImpl.bind(null, root, renderPriorityLevel));
    null !== rootWithPendingPassiveEffects && scheduleCallback(97, function () {
      flushPassiveEffects();
      return null;
    });
    return null;
  }

  function commitRootImpl(root, renderPriorityLevel) {
    flushPassiveEffects();
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
    var finishedWork = root.finishedWork,
        expirationTime = root.finishedExpirationTime;
    if (null === finishedWork) return null;
    root.finishedWork = null;
    root.finishedExpirationTime = 0;
    if (finishedWork === root.current) throw ReactError(Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue."));
    root.callbackNode = null;
    root.callbackExpirationTime = 0;
    var updateExpirationTimeBeforeCommit = finishedWork.expirationTime,
        childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;
    updateExpirationTimeBeforeCommit = childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit ? childExpirationTimeBeforeCommit : updateExpirationTimeBeforeCommit;
    root.firstPendingTime = updateExpirationTimeBeforeCommit;
    updateExpirationTimeBeforeCommit < root.lastPendingTime && (root.lastPendingTime = updateExpirationTimeBeforeCommit);
    root === workInProgressRoot && (workInProgress = workInProgressRoot = null, renderExpirationTime = 0);
    1 < finishedWork.effectTag ? null !== finishedWork.lastEffect ? (finishedWork.lastEffect.nextEffect = finishedWork, updateExpirationTimeBeforeCommit = finishedWork.firstEffect) : updateExpirationTimeBeforeCommit = finishedWork : updateExpirationTimeBeforeCommit = finishedWork.firstEffect;

    if (null !== updateExpirationTimeBeforeCommit) {
      childExpirationTimeBeforeCommit = executionContext;
      executionContext |= CommitContext;
      ReactCurrentOwner$2.current = null;
      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (; null !== nextEffect;) {
            if (0 !== (nextEffect.effectTag & 256)) {
              var current$$1 = nextEffect.alternate,
                  finishedWork$jscomp$0 = nextEffect;

              switch (finishedWork$jscomp$0.tag) {
                case 0:
                case 11:
                case 15:
                  commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork$jscomp$0);
                  break;

                case 1:
                  if (finishedWork$jscomp$0.effectTag & 256 && null !== current$$1) {
                    var prevProps = current$$1.memoizedProps,
                        prevState = current$$1.memoizedState,
                        instance = finishedWork$jscomp$0.stateNode,
                        snapshot = instance.getSnapshotBeforeUpdate(finishedWork$jscomp$0.elementType === finishedWork$jscomp$0.type ? prevProps : resolveDefaultProps(finishedWork$jscomp$0.type, prevProps), prevState);
                    instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                  }

                  break;

                case 3:
                case 5:
                case 6:
                case 4:
                case 17:
                  break;

                default:
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
              }
            }

            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (current$$1 = renderPriorityLevel; null !== nextEffect;) {
            var effectTag = nextEffect.effectTag;

            if (effectTag & 128) {
              var current$$1$jscomp$0 = nextEffect.alternate;

              if (null !== current$$1$jscomp$0) {
                var currentRef = current$$1$jscomp$0.ref;
                null !== currentRef && ("function" === typeof currentRef ? currentRef(null) : currentRef.current = null);
              }
            }

            switch (effectTag & 14) {
              case 2:
                commitPlacement(nextEffect);
                nextEffect.effectTag &= -3;
                break;

              case 6:
                commitPlacement(nextEffect);
                nextEffect.effectTag &= -3;
                commitWork(nextEffect.alternate, nextEffect);
                break;

              case 4:
                commitWork(nextEffect.alternate, nextEffect);
                break;

              case 8:
                prevProps = nextEffect, unmountHostComponents(prevProps, current$$1), detachFiber(prevProps);
            }

            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      root.current = finishedWork;
      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (effectTag = expirationTime; null !== nextEffect;) {
            var effectTag$jscomp$0 = nextEffect.effectTag;

            if (effectTag$jscomp$0 & 36) {
              var current$$1$jscomp$1 = nextEffect.alternate;
              current$$1$jscomp$0 = nextEffect;
              currentRef = effectTag;

              switch (current$$1$jscomp$0.tag) {
                case 0:
                case 11:
                case 15:
                  commitHookEffectList(UnmountLayout, MountLayout, current$$1$jscomp$0);
                  break;

                case 1:
                  var instance$jscomp$0 = current$$1$jscomp$0.stateNode;
                  if (current$$1$jscomp$0.effectTag & 4) if (null === current$$1$jscomp$1) instance$jscomp$0.componentDidMount();else {
                    var prevProps$jscomp$0 = current$$1$jscomp$0.elementType === current$$1$jscomp$0.type ? current$$1$jscomp$1.memoizedProps : resolveDefaultProps(current$$1$jscomp$0.type, current$$1$jscomp$1.memoizedProps);
                    instance$jscomp$0.componentDidUpdate(prevProps$jscomp$0, current$$1$jscomp$1.memoizedState, instance$jscomp$0.__reactInternalSnapshotBeforeUpdate);
                  }
                  var updateQueue = current$$1$jscomp$0.updateQueue;
                  null !== updateQueue && commitUpdateQueue(current$$1$jscomp$0, updateQueue, instance$jscomp$0, currentRef);
                  break;

                case 3:
                  var _updateQueue = current$$1$jscomp$0.updateQueue;

                  if (null !== _updateQueue) {
                    current$$1 = null;
                    if (null !== current$$1$jscomp$0.child) switch (current$$1$jscomp$0.child.tag) {
                      case 5:
                        current$$1 = current$$1$jscomp$0.child.stateNode;
                        break;

                      case 1:
                        current$$1 = current$$1$jscomp$0.child.stateNode;
                    }
                    commitUpdateQueue(current$$1$jscomp$0, _updateQueue, current$$1, currentRef);
                  }

                  break;

                case 5:
                  break;

                case 6:
                  break;

                case 4:
                  break;

                case 12:
                  break;

                case 13:
                case 19:
                case 17:
                case 20:
                  break;

                default:
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
              }
            }

            if (effectTag$jscomp$0 & 128) {
              var ref = nextEffect.ref;

              if (null !== ref) {
                var instance$jscomp$1 = nextEffect.stateNode;

                switch (nextEffect.tag) {
                  case 5:
                    var instanceToUse = instance$jscomp$1;
                    break;

                  default:
                    instanceToUse = instance$jscomp$1;
                }

                "function" === typeof ref ? ref(instanceToUse) : ref.current = instanceToUse;
              }
            }

            effectTag$jscomp$0 & 512 && (rootDoesHavePassiveEffects = true);
            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      nextEffect = null;
      requestPaint();
      executionContext = childExpirationTimeBeforeCommit;
    } else root.current = finishedWork;

    if (rootDoesHavePassiveEffects) rootDoesHavePassiveEffects = false, rootWithPendingPassiveEffects = root, pendingPassiveEffectsExpirationTime = expirationTime, pendingPassiveEffectsRenderPriority = renderPriorityLevel;else for (nextEffect = updateExpirationTimeBeforeCommit; null !== nextEffect;) {
      renderPriorityLevel = nextEffect.nextEffect, nextEffect.nextEffect = null, nextEffect = renderPriorityLevel;
    }
    renderPriorityLevel = root.firstPendingTime;
    0 !== renderPriorityLevel ? (effectTag$jscomp$0 = requestCurrentTime(), effectTag$jscomp$0 = inferPriorityFromExpirationTime(effectTag$jscomp$0, renderPriorityLevel), scheduleCallbackForRoot(root, effectTag$jscomp$0, renderPriorityLevel)) : legacyErrorBoundariesThatAlreadyFailed = null;
    "function" === typeof onCommitFiberRoot && onCommitFiberRoot(finishedWork.stateNode, expirationTime);
    1073741823 === renderPriorityLevel ? root === rootWithNestedUpdates ? nestedUpdateCount++ : (nestedUpdateCount = 0, rootWithNestedUpdates = root) : nestedUpdateCount = 0;
    if (hasUncaughtError) throw hasUncaughtError = false, root = firstUncaughtError, firstUncaughtError = null, root;
    if ((executionContext & LegacyUnbatchedContext) !== NoContext) return null;
    flushSyncCallbackQueue();
    return null;
  }

  function flushPassiveEffects() {
    if (null === rootWithPendingPassiveEffects) return false;
    var root = rootWithPendingPassiveEffects,
        expirationTime = pendingPassiveEffectsExpirationTime,
        renderPriorityLevel = pendingPassiveEffectsRenderPriority;
    rootWithPendingPassiveEffects = null;
    pendingPassiveEffectsExpirationTime = 0;
    pendingPassiveEffectsRenderPriority = 90;
    return runWithPriority(97 < renderPriorityLevel ? 97 : renderPriorityLevel, flushPassiveEffectsImpl.bind(null, root, expirationTime));
  }

  function flushPassiveEffectsImpl(root) {
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Cannot flush passive effects while already rendering."));
    var prevExecutionContext = executionContext;
    executionContext |= CommitContext;

    for (root = root.current.firstEffect; null !== root;) {
      try {
        var finishedWork = root;
        if (0 !== (finishedWork.effectTag & 512)) switch (finishedWork.tag) {
          case 0:
          case 11:
          case 15:
            commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork), commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
        }
      } catch (error) {
        if (null === root) throw ReactError(Error("Should be working on an effect."));
        captureCommitPhaseError(root, error);
      }

      finishedWork = root.nextEffect;
      root.nextEffect = null;
      root = finishedWork;
    }

    executionContext = prevExecutionContext;
    flushSyncCallbackQueue();
    return true;
  }

  function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
    sourceFiber = createCapturedValue(error, sourceFiber);
    sourceFiber = createRootErrorUpdate(rootFiber, sourceFiber, 1073741823);
    enqueueUpdate(rootFiber, sourceFiber);
    rootFiber = markUpdateTimeFromFiberToRoot(rootFiber, 1073741823);
    null !== rootFiber && scheduleCallbackForRoot(rootFiber, 99, 1073741823);
  }

  function captureCommitPhaseError(sourceFiber, error) {
    if (3 === sourceFiber.tag) captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);else for (var fiber = sourceFiber.return; null !== fiber;) {
      if (3 === fiber.tag) {
        captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
        break;
      } else if (1 === fiber.tag) {
        var instance = fiber.stateNode;

        if ("function" === typeof fiber.type.getDerivedStateFromError || "function" === typeof instance.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(instance))) {
          sourceFiber = createCapturedValue(error, sourceFiber);
          sourceFiber = createClassErrorUpdate(fiber, sourceFiber, 1073741823);
          enqueueUpdate(fiber, sourceFiber);
          fiber = markUpdateTimeFromFiberToRoot(fiber, 1073741823);
          null !== fiber && scheduleCallbackForRoot(fiber, 99, 1073741823);
          break;
        }
      }

      fiber = fiber.return;
    }
  }

  function pingSuspendedRoot(root, thenable, suspendedTime) {
    var pingCache = root.pingCache;
    null !== pingCache && pingCache.delete(thenable);
    workInProgressRoot === root && renderExpirationTime === suspendedTime ? workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && 1073741823 === workInProgressRootLatestProcessedExpirationTime && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS ? prepareFreshStack(root, renderExpirationTime) : workInProgressRootHasPendingPing = true : root.lastPendingTime < suspendedTime || (thenable = root.pingTime, 0 !== thenable && thenable < suspendedTime || (root.pingTime = suspendedTime, root.finishedExpirationTime === suspendedTime && (root.finishedExpirationTime = 0, root.finishedWork = null), thenable = requestCurrentTime(), thenable = inferPriorityFromExpirationTime(thenable, suspendedTime), scheduleCallbackForRoot(root, thenable, suspendedTime)));
  }

  function resolveRetryThenable(boundaryFiber, thenable) {
    var retryCache = boundaryFiber.stateNode;
    null !== retryCache && retryCache.delete(thenable);
    retryCache = requestCurrentTime();
    thenable = computeExpirationForFiber(retryCache, boundaryFiber, null);
    retryCache = inferPriorityFromExpirationTime(retryCache, thenable);
    boundaryFiber = markUpdateTimeFromFiberToRoot(boundaryFiber, thenable);
    null !== boundaryFiber && scheduleCallbackForRoot(boundaryFiber, retryCache, thenable);
  }

  var beginWork$$1 = undefined;

  beginWork$$1 = function beginWork$$1(current$$1, workInProgress, renderExpirationTime) {
    var updateExpirationTime = workInProgress.expirationTime;
    if (null !== current$$1) {
      if (current$$1.memoizedProps !== workInProgress.pendingProps || didPerformWorkStackCursor.current) didReceiveUpdate = true;else {
        if (updateExpirationTime < renderExpirationTime) {
          didReceiveUpdate = false;

          switch (workInProgress.tag) {
            case 3:
              pushHostRootContext(workInProgress);
              break;

            case 5:
              pushHostContext(workInProgress);
              break;

            case 1:
              isContextProvider(workInProgress.type) && pushContextProvider(workInProgress);
              break;

            case 4:
              pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
              break;

            case 10:
              pushProvider(workInProgress, workInProgress.memoizedProps.value);
              break;

            case 13:
              if (null !== workInProgress.memoizedState) {
                updateExpirationTime = workInProgress.child.childExpirationTime;
                if (0 !== updateExpirationTime && updateExpirationTime >= renderExpirationTime) return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
                push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                return null !== workInProgress ? workInProgress.sibling : null;
              }

              push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
              break;

            case 19:
              updateExpirationTime = workInProgress.childExpirationTime >= renderExpirationTime;

              if (0 !== (current$$1.effectTag & 64)) {
                if (updateExpirationTime) return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
                workInProgress.effectTag |= 64;
              }

              var renderState = workInProgress.memoizedState;
              null !== renderState && (renderState.rendering = null, renderState.tail = null);
              push(suspenseStackCursor, suspenseStackCursor.current, workInProgress);
              if (!updateExpirationTime) return null;
          }

          return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        }
      }
    } else didReceiveUpdate = false;
    workInProgress.expirationTime = 0;

    switch (workInProgress.tag) {
      case 2:
        updateExpirationTime = workInProgress.type;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        renderState = getMaskedContext(workInProgress, contextStackCursor.current);
        prepareToReadContext(workInProgress, renderExpirationTime);
        renderState = renderWithHooks(null, workInProgress, updateExpirationTime, current$$1, renderState, renderExpirationTime);
        workInProgress.effectTag |= 1;

        if ("object" === typeof renderState && null !== renderState && "function" === typeof renderState.render && undefined === renderState.$$typeof) {
          workInProgress.tag = 1;
          resetHooks();

          if (isContextProvider(updateExpirationTime)) {
            var hasContext = true;
            pushContextProvider(workInProgress);
          } else hasContext = false;

          workInProgress.memoizedState = null !== renderState.state && undefined !== renderState.state ? renderState.state : null;
          var getDerivedStateFromProps = updateExpirationTime.getDerivedStateFromProps;
          "function" === typeof getDerivedStateFromProps && applyDerivedStateFromProps(workInProgress, updateExpirationTime, getDerivedStateFromProps, current$$1);
          renderState.updater = classComponentUpdater;
          workInProgress.stateNode = renderState;
          renderState._reactInternalFiber = workInProgress;
          mountClassInstance(workInProgress, updateExpirationTime, current$$1, renderExpirationTime);
          workInProgress = finishClassComponent(null, workInProgress, updateExpirationTime, true, hasContext, renderExpirationTime);
        } else workInProgress.tag = 0, reconcileChildren(null, workInProgress, renderState, renderExpirationTime), workInProgress = workInProgress.child;

        return workInProgress;

      case 16:
        renderState = workInProgress.elementType;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        renderState = readLazyComponentType(renderState);
        workInProgress.type = renderState;
        hasContext = workInProgress.tag = resolveLazyComponentTag(renderState);
        current$$1 = resolveDefaultProps(renderState, current$$1);

        switch (hasContext) {
          case 0:
            workInProgress = updateFunctionComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 1:
            workInProgress = updateClassComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 11:
            workInProgress = updateForwardRef(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 14:
            workInProgress = updateMemoComponent(null, workInProgress, renderState, resolveDefaultProps(renderState.type, current$$1), updateExpirationTime, renderExpirationTime);
            break;

          default:
            throw ReactError(Error("Element type is invalid. Received a promise that resolves to: " + renderState + ". Lazy element type must resolve to a class or function."));
        }

        return workInProgress;

      case 0:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateFunctionComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 1:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateClassComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 3:
        pushHostRootContext(workInProgress);
        updateExpirationTime = workInProgress.updateQueue;
        if (null === updateExpirationTime) throw ReactError(Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue."));
        renderState = workInProgress.memoizedState;
        renderState = null !== renderState ? renderState.element : null;
        processUpdateQueue(workInProgress, updateExpirationTime, workInProgress.pendingProps, null, renderExpirationTime);
        updateExpirationTime = workInProgress.memoizedState.element;
        updateExpirationTime === renderState ? workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : (reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress = workInProgress.child);
        return workInProgress;

      case 5:
        return pushHostContext(workInProgress), null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), updateExpirationTime = workInProgress.pendingProps.children, markRef(current$$1, workInProgress), reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 6:
        return null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), null;

      case 13:
        return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);

      case 4:
        return pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo), updateExpirationTime = workInProgress.pendingProps, null === current$$1 ? workInProgress.child = reconcileChildFibers(workInProgress, null, updateExpirationTime, renderExpirationTime) : reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 11:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateForwardRef(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 7:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps, renderExpirationTime), workInProgress.child;

      case 8:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 12:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 10:
        a: {
          updateExpirationTime = workInProgress.type._context;
          renderState = workInProgress.pendingProps;
          getDerivedStateFromProps = workInProgress.memoizedProps;
          hasContext = renderState.value;
          pushProvider(workInProgress, hasContext);

          if (null !== getDerivedStateFromProps) {
            var oldValue = getDerivedStateFromProps.value;
            hasContext = is(oldValue, hasContext) ? 0 : ("function" === typeof updateExpirationTime._calculateChangedBits ? updateExpirationTime._calculateChangedBits(oldValue, hasContext) : 1073741823) | 0;

            if (0 === hasContext) {
              if (getDerivedStateFromProps.children === renderState.children && !didPerformWorkStackCursor.current) {
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                break a;
              }
            } else for (oldValue = workInProgress.child, null !== oldValue && (oldValue.return = workInProgress); null !== oldValue;) {
              var list = oldValue.dependencies;

              if (null !== list) {
                getDerivedStateFromProps = oldValue.child;

                for (var dependency = list.firstContext; null !== dependency;) {
                  if (dependency.context === updateExpirationTime && 0 !== (dependency.observedBits & hasContext)) {
                    1 === oldValue.tag && (dependency = createUpdate(renderExpirationTime, null), dependency.tag = 2, enqueueUpdate(oldValue, dependency));
                    oldValue.expirationTime < renderExpirationTime && (oldValue.expirationTime = renderExpirationTime);
                    dependency = oldValue.alternate;
                    null !== dependency && dependency.expirationTime < renderExpirationTime && (dependency.expirationTime = renderExpirationTime);
                    scheduleWorkOnParentPath(oldValue.return, renderExpirationTime);
                    list.expirationTime < renderExpirationTime && (list.expirationTime = renderExpirationTime);
                    break;
                  }

                  dependency = dependency.next;
                }
              } else getDerivedStateFromProps = 10 === oldValue.tag ? oldValue.type === workInProgress.type ? null : oldValue.child : oldValue.child;

              if (null !== getDerivedStateFromProps) getDerivedStateFromProps.return = oldValue;else for (getDerivedStateFromProps = oldValue; null !== getDerivedStateFromProps;) {
                if (getDerivedStateFromProps === workInProgress) {
                  getDerivedStateFromProps = null;
                  break;
                }

                oldValue = getDerivedStateFromProps.sibling;

                if (null !== oldValue) {
                  oldValue.return = getDerivedStateFromProps.return;
                  getDerivedStateFromProps = oldValue;
                  break;
                }

                getDerivedStateFromProps = getDerivedStateFromProps.return;
              }
              oldValue = getDerivedStateFromProps;
            }
          }

          reconcileChildren(current$$1, workInProgress, renderState.children, renderExpirationTime);
          workInProgress = workInProgress.child;
        }

        return workInProgress;

      case 9:
        return renderState = workInProgress.type, hasContext = workInProgress.pendingProps, updateExpirationTime = hasContext.children, prepareToReadContext(workInProgress, renderExpirationTime), renderState = readContext(renderState, hasContext.unstable_observedBits), updateExpirationTime = updateExpirationTime(renderState), workInProgress.effectTag |= 1, reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 14:
        return renderState = workInProgress.type, hasContext = resolveDefaultProps(renderState, workInProgress.pendingProps), hasContext = resolveDefaultProps(renderState.type, hasContext), updateMemoComponent(current$$1, workInProgress, renderState, hasContext, updateExpirationTime, renderExpirationTime);

      case 15:
        return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);

      case 17:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), workInProgress.tag = 1, isContextProvider(updateExpirationTime) ? (current$$1 = true, pushContextProvider(workInProgress)) : current$$1 = false, prepareToReadContext(workInProgress, renderExpirationTime), constructClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), mountClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), finishClassComponent(null, workInProgress, updateExpirationTime, true, current$$1, renderExpirationTime);

      case 19:
        return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
    }

    throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
  };

  var onCommitFiberRoot = null,
      onCommitFiberUnmount = null;

  function injectInternals(internals) {
    if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return false;
    var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (hook.isDisabled || !hook.supportsFiber) return true;

    try {
      var rendererID = hook.inject(internals);

      onCommitFiberRoot = function onCommitFiberRoot(root) {
        try {
          hook.onCommitFiberRoot(rendererID, root, undefined, 64 === (root.current.effectTag & 64));
        } catch (err) {}
      };

      onCommitFiberUnmount = function onCommitFiberUnmount(fiber) {
        try {
          hook.onCommitFiberUnmount(rendererID, fiber);
        } catch (err) {}
      };
    } catch (err) {}

    return true;
  }

  function FiberNode(tag, pendingProps, key, mode) {
    this.tag = tag;
    this.key = key;
    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
    this.index = 0;
    this.ref = null;
    this.pendingProps = pendingProps;
    this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
    this.mode = mode;
    this.effectTag = 0;
    this.lastEffect = this.firstEffect = this.nextEffect = null;
    this.childExpirationTime = this.expirationTime = 0;
    this.alternate = null;
  }

  function createFiber(tag, pendingProps, key, mode) {
    return new FiberNode(tag, pendingProps, key, mode);
  }

  function shouldConstruct(Component) {
    Component = Component.prototype;
    return !(!Component || !Component.isReactComponent);
  }

  function resolveLazyComponentTag(Component) {
    if ("function" === typeof Component) return shouldConstruct(Component) ? 1 : 0;

    if (undefined !== Component && null !== Component) {
      Component = Component.$$typeof;
      if (Component === REACT_FORWARD_REF_TYPE) return 11;
      if (Component === REACT_MEMO_TYPE) return 14;
    }

    return 2;
  }

  function createWorkInProgress(current, pendingProps) {
    var workInProgress = current.alternate;
    null === workInProgress ? (workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode), workInProgress.elementType = current.elementType, workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.pendingProps = pendingProps, workInProgress.effectTag = 0, workInProgress.nextEffect = null, workInProgress.firstEffect = null, workInProgress.lastEffect = null);
    workInProgress.childExpirationTime = current.childExpirationTime;
    workInProgress.expirationTime = current.expirationTime;
    workInProgress.child = current.child;
    workInProgress.memoizedProps = current.memoizedProps;
    workInProgress.memoizedState = current.memoizedState;
    workInProgress.updateQueue = current.updateQueue;
    pendingProps = current.dependencies;
    workInProgress.dependencies = null === pendingProps ? null : {
      expirationTime: pendingProps.expirationTime,
      firstContext: pendingProps.firstContext,
      responders: pendingProps.responders
    };
    workInProgress.sibling = current.sibling;
    workInProgress.index = current.index;
    workInProgress.ref = current.ref;
    return workInProgress;
  }

  function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime) {
    var fiberTag = 2;
    owner = type;
    if ("function" === typeof type) shouldConstruct(type) && (fiberTag = 1);else if ("string" === typeof type) fiberTag = 5;else a: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);

      case REACT_CONCURRENT_MODE_TYPE:
        fiberTag = 8;
        mode |= 7;
        break;

      case REACT_STRICT_MODE_TYPE:
        fiberTag = 8;
        mode |= 1;
        break;

      case REACT_PROFILER_TYPE:
        return type = createFiber(12, pendingProps, key, mode | 8), type.elementType = REACT_PROFILER_TYPE, type.type = REACT_PROFILER_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_TYPE:
        return type = createFiber(13, pendingProps, key, mode), type.type = REACT_SUSPENSE_TYPE, type.elementType = REACT_SUSPENSE_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_LIST_TYPE:
        return type = createFiber(19, pendingProps, key, mode), type.elementType = REACT_SUSPENSE_LIST_TYPE, type.expirationTime = expirationTime, type;

      default:
        if ("object" === typeof type && null !== type) switch (type.$$typeof) {
          case REACT_PROVIDER_TYPE:
            fiberTag = 10;
            break a;

          case REACT_CONTEXT_TYPE:
            fiberTag = 9;
            break a;

          case REACT_FORWARD_REF_TYPE:
            fiberTag = 11;
            break a;

          case REACT_MEMO_TYPE:
            fiberTag = 14;
            break a;

          case REACT_LAZY_TYPE:
            fiberTag = 16;
            owner = null;
            break a;
        }
        throw ReactError(Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (null == type ? type : typeof type) + "."));
    }
    key = createFiber(fiberTag, pendingProps, key, mode);
    key.elementType = type;
    key.type = owner;
    key.expirationTime = expirationTime;
    return key;
  }

  function createFiberFromFragment(elements, mode, expirationTime, key) {
    elements = createFiber(7, elements, key, mode);
    elements.expirationTime = expirationTime;
    return elements;
  }

  function createFiberFromText(content, mode, expirationTime) {
    content = createFiber(6, content, null, mode);
    content.expirationTime = expirationTime;
    return content;
  }

  function createFiberFromPortal(portal, mode, expirationTime) {
    mode = createFiber(4, null !== portal.children ? portal.children : [], portal.key, mode);
    mode.expirationTime = expirationTime;
    mode.stateNode = {
      containerInfo: portal.containerInfo,
      pendingChildren: null,
      implementation: portal.implementation
    };
    return mode;
  }

  function FiberRootNode(containerInfo, tag, hydrate) {
    this.tag = tag;
    this.current = null;
    this.containerInfo = containerInfo;
    this.pingCache = this.pendingChildren = null;
    this.finishedExpirationTime = 0;
    this.finishedWork = null;
    this.timeoutHandle = -1;
    this.pendingContext = this.context = null;
    this.hydrate = hydrate;
    this.callbackNode = this.firstBatch = null;
    this.pingTime = this.lastPendingTime = this.firstPendingTime = this.callbackExpirationTime = 0;
  }

  function findHostInstance(component) {
    var fiber = component._reactInternalFiber;

    if (undefined === fiber) {
      if ("function" === typeof component.render) throw ReactError(Error("Unable to find node on an unmounted component."));
      throw ReactError(Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component)));
    }

    component = findCurrentHostFiber(fiber);
    return null === component ? null : component.stateNode;
  }

  function updateContainer(element, container, parentComponent, callback) {
    var current$$1 = container.current,
        currentTime = requestCurrentTime(),
        suspenseConfig = ReactCurrentBatchConfig.suspense;
    current$$1 = computeExpirationForFiber(currentTime, current$$1, suspenseConfig);
    currentTime = container.current;

    a: if (parentComponent) {
      parentComponent = parentComponent._reactInternalFiber;

      b: {
        if (2 !== isFiberMountedImpl(parentComponent) || 1 !== parentComponent.tag) throw ReactError(Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue."));
        var parentContext = parentComponent;

        do {
          switch (parentContext.tag) {
            case 3:
              parentContext = parentContext.stateNode.context;
              break b;

            case 1:
              if (isContextProvider(parentContext.type)) {
                parentContext = parentContext.stateNode.__reactInternalMemoizedMergedChildContext;
                break b;
              }

          }

          parentContext = parentContext.return;
        } while (null !== parentContext);

        throw ReactError(Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue."));
      }

      if (1 === parentComponent.tag) {
        var Component = parentComponent.type;

        if (isContextProvider(Component)) {
          parentComponent = processChildContext(parentComponent, Component, parentContext);
          break a;
        }
      }

      parentComponent = parentContext;
    } else parentComponent = emptyContextObject;

    null === container.context ? container.context = parentComponent : container.pendingContext = parentComponent;
    container = callback;
    suspenseConfig = createUpdate(current$$1, suspenseConfig);
    suspenseConfig.payload = {
      element: element
    };
    container = undefined === container ? null : container;
    null !== container && (suspenseConfig.callback = container);
    enqueueUpdate(currentTime, suspenseConfig);
    scheduleUpdateOnFiber(currentTime, current$$1);
    return current$$1;
  }

  function _createPortal(children, containerInfo, implementation) {
    var key = 3 < arguments.length && undefined !== arguments[3] ? arguments[3] : null;
    return {
      $$typeof: REACT_PORTAL_TYPE,
      key: null == key ? null : "" + key,
      children: children,
      containerInfo: containerInfo,
      implementation: implementation
    };
  }

  function _inherits(subClass, superClass) {
    if ("function" !== typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
  }

  var getInspectorDataForViewTag = undefined;

  getInspectorDataForViewTag = function getInspectorDataForViewTag() {
    throw ReactError(Error("getInspectorDataForViewTag() is not available in production"));
  };

  function findNodeHandle(componentOrHandle) {
    if (null == componentOrHandle) return null;
    if ("number" === typeof componentOrHandle) return componentOrHandle;
    if (componentOrHandle._nativeTag) return componentOrHandle._nativeTag;
    if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) return componentOrHandle.canonical._nativeTag;
    componentOrHandle = findHostInstance(componentOrHandle);
    return null == componentOrHandle ? componentOrHandle : componentOrHandle.canonical ? componentOrHandle.canonical._nativeTag : componentOrHandle._nativeTag;
  }

  batchedUpdatesImpl = function batchedUpdatesImpl(fn, a) {
    var prevExecutionContext = executionContext;
    executionContext |= 1;

    try {
      return fn(a);
    } finally {
      executionContext = prevExecutionContext, executionContext === NoContext && flushSyncCallbackQueue();
    }
  };

  flushDiscreteUpdatesImpl = function flushDiscreteUpdatesImpl() {
    (executionContext & 49) === NoContext && (flushPendingDiscreteUpdates(), flushPassiveEffects());
  };

  var roots = new Map(),
      ReactNativeRenderer = {
    NativeComponent: function (findNodeHandle, findHostInstance) {
      return function (_React$Component) {
        function ReactNativeComponent() {
          if (!(this instanceof ReactNativeComponent)) throw new TypeError("Cannot call a class as a function");

          var call = _React$Component.apply(this, arguments);

          if (!this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return !call || "object" !== typeof call && "function" !== typeof call ? this : call;
        }

        _inherits(ReactNativeComponent, _React$Component);

        ReactNativeComponent.prototype.blur = function () {
          ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.focus = function () {
          ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.measure = function (callback) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
        };

        ReactNativeComponent.prototype.measureInWindow = function (callback) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
        };

        ReactNativeComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
        };

        ReactNativeComponent.prototype.setNativeProps = function (nativeProps) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          if (null != maybeInstance && !maybeInstance.canonical) {
            var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
            maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
            nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
            null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
          }
        };

        return ReactNativeComponent;
      }(React.Component);
    }(findNodeHandle, findHostInstance),
    findNodeHandle: findNodeHandle,
    dispatchCommand: function dispatchCommand(handle, command, args) {
      null != handle._nativeTag && ReactNativePrivateInterface.UIManager.dispatchViewManagerCommand(handle._nativeTag, command, args);
    },
    setNativeProps: function setNativeProps(handle, nativeProps) {
      null != handle._nativeTag && (nativeProps = diffProperties(null, emptyObject, nativeProps, handle.viewConfig.validAttributes), null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(handle._nativeTag, handle.viewConfig.uiViewClassName, nativeProps));
    },
    render: function render(element, containerTag, callback) {
      var root = roots.get(containerTag);

      if (!root) {
        root = new FiberRootNode(containerTag, 0, false);
        var uninitializedFiber = createFiber(3, null, null, 0);
        root.current = uninitializedFiber;
        uninitializedFiber.stateNode = root;
        roots.set(containerTag, root);
      }

      updateContainer(element, root, null, callback);

      a: if (element = root.current, element.child) switch (element.child.tag) {
        case 5:
          element = element.child.stateNode;
          break a;

        default:
          element = element.child.stateNode;
      } else element = null;

      return element;
    },
    unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
      var root = roots.get(containerTag);
      root && updateContainer(null, root, null, function () {
        roots.delete(containerTag);
      });
    },
    unmountComponentAtNodeAndRemoveContainer: function unmountComponentAtNodeAndRemoveContainer(containerTag) {
      ReactNativeRenderer.unmountComponentAtNode(containerTag);
      ReactNativePrivateInterface.UIManager.removeRootView(containerTag);
    },
    createPortal: function createPortal(children, containerTag) {
      return _createPortal(children, containerTag, null, 2 < arguments.length && undefined !== arguments[2] ? arguments[2] : null);
    },
    unstable_batchedUpdates: batchedUpdates,
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
      NativeMethodsMixin: function (findNodeHandle, findHostInstance) {
        return {
          measure: function measure(callback) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
          },
          measureInWindow: function measureInWindow(callback) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
          },
          measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
          },
          setNativeProps: function setNativeProps(nativeProps) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            if (null != maybeInstance && !maybeInstance.canonical) {
              var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
              maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
              nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
              null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
            }
          },
          focus: function focus() {
            ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
          },
          blur: function blur() {
            ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
          }
        };
      }(findNodeHandle, findHostInstance),
      computeComponentStackForErrorReporting: function computeComponentStackForErrorReporting(reactTag) {
        return (reactTag = getInstanceFromTag(reactTag)) ? getStackByFiberInDevAndProd(reactTag) : "";
      }
    }
  };

  (function (devToolsConfig) {
    var _findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
    return injectInternals(_extends({}, devToolsConfig, {
      overrideHookState: null,
      overrideProps: null,
      setSuspenseHandler: null,
      scheduleUpdate: null,
      currentDispatcherRef: ReactSharedInternals.ReactCurrentDispatcher,
      findHostInstanceByFiber: function findHostInstanceByFiber(fiber) {
        fiber = findCurrentHostFiber(fiber);
        return null === fiber ? null : fiber.stateNode;
      },
      findFiberByHostInstance: function findFiberByHostInstance(instance) {
        return _findFiberByHostInstance ? _findFiberByHostInstance(instance) : null;
      },
      findHostInstancesForRefresh: null,
      scheduleRefresh: null,
      scheduleRoot: null,
      setRefreshHandler: null,
      getCurrentFiber: null
    }));
  })({
    findFiberByHostInstance: getInstanceFromTag,
    getInspectorDataForViewTag: getInspectorDataForViewTag,
    bundleType: 0,
    version: "16.8.6",
    rendererPackageName: "react-native-renderer"
  });

  var ReactNativeRenderer$2 = {
    default: ReactNativeRenderer
  },
      ReactNativeRenderer$3 = ReactNativeRenderer$2 && ReactNativeRenderer || ReactNativeRenderer$2;
  module.exports = ReactNativeRenderer$3.default || ReactNativeRenderer$3;
},14443,[14344,14446,14566,10297,14575]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  _$$_REQUIRE(_dependencyMap[0]);
},14446,[10120]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (global.GLOBAL === undefined) {
    global.GLOBAL = global;
  }

  if (global.window === undefined) {
    global.window = global;
  }

  if (global.self === undefined) {
    global.self = global;
  }

  global.process = global.process || {};
  global.process.env = global.process.env || {};

  if (!global.process.env.NODE_ENV) {
    global.process.env.NODE_ENV = 'production';
  }
},14449,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (global.__RCTProfileIsProfiling) {
    var Systrace = _$$_REQUIRE(_dependencyMap[0]);

    Systrace.installReactHook();
    Systrace.setEnabled(true);
  }
},14452,[10054]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ExceptionsManager = _$$_REQUIRE(_dependencyMap[0]);

  ExceptionsManager.installConsoleErrorReporter();

  if (!global.__fbDisableExceptionsManager) {
    var handleError = function handleError(e, isFatal) {
      try {
        ExceptionsManager.handleException(e, isFatal);
      } catch (ee) {
        throw e;
      }
    };

    var ErrorUtils = _$$_REQUIRE(_dependencyMap[1]);

    ErrorUtils.setGlobalHandler(handleError);
  }
},14455,[10141,10051]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  var setPrototypeOf = _$$_REQUIRE(_dependencyMap[1]);

  var isNativeFunction = _$$_REQUIRE(_dependencyMap[2]);

  var construct = _$$_REQUIRE(_dependencyMap[3]);

  function _wrapNativeSuper(Class) {
    var _cache = typeof Map === "function" ? new Map() : undefined;

    module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {
      if (Class === null || !isNativeFunction(Class)) return Class;

      if (typeof Class !== "function") {
        throw new TypeError("Super expression must either be null or a function");
      }

      if (typeof _cache !== "undefined") {
        if (_cache.has(Class)) return _cache.get(Class);

        _cache.set(Class, Wrapper);
      }

      function Wrapper() {
        return construct(Class, arguments, getPrototypeOf(this).constructor);
      }

      Wrapper.prototype = Object.create(Class.prototype, {
        constructor: {
          value: Wrapper,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
      return setPrototypeOf(Wrapper, Class);
    };

    return _wrapNativeSuper(Class);
  }

  module.exports = _wrapNativeSuper;
},14458,[14377,14389,14461,14464]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _isNativeFunction(fn) {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
  }

  module.exports = _isNativeFunction;
},14461,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var setPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  function isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  function _construct(Parent, args, Class) {
    if (isNativeReflectConstruct()) {
      module.exports = _construct = Reflect.construct;
    } else {
      module.exports = _construct = function _construct(Parent, args, Class) {
        var a = [null];
        a.push.apply(a, args);
        var Constructor = Function.bind.apply(Parent, a);
        var instance = new Constructor();
        if (Class) setPrototypeOf(instance, Class.prototype);
        return instance;
      };
    }

    return _construct.apply(null, arguments);
  }

  module.exports = _construct;
},14464,[14389]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var Platform = _$$_REQUIRE(_dependencyMap[2]);

  var NativeModule = TurboModuleRegistry.getEnforcing('ExceptionsManager');
  var ExceptionsManager = {
    reportFatalException: function reportFatalException(message, stack, exceptionId) {
      NativeModule.reportFatalException(message, stack, exceptionId);
    },
    reportSoftException: function reportSoftException(message, stack, exceptionId) {
      NativeModule.reportSoftException(message, stack, exceptionId);
    },
    updateExceptionMessage: function updateExceptionMessage(message, stack, exceptionId) {
      NativeModule.updateExceptionMessage(message, stack, exceptionId);
    },
    dismissRedbox: function dismissRedbox() {
      if (NativeModule.dismissRedbox) {
        NativeModule.dismissRedbox();
      }
    },
    reportException: function reportException(data) {
      if (NativeModule.reportException) {
        NativeModule.reportException(data);
        return;
      }

      if (data.isFatal) {
        ExceptionsManager.reportFatalException(data.message, data.stack, data.id);
      } else {
        ExceptionsManager.reportSoftException(data.message, data.stack, data.id);
      }
    }
  };
  var _default = ExceptionsManager;
  exports.default = _default;
},14467,[14308,14341,10066]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillGlobal = _require.polyfillGlobal;

  polyfillGlobal('Promise', function () {
    return _$$_REQUIRE(_dependencyMap[1]);
  });
},14470,[14473,10159]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[0]);

  function polyfillObjectProperty(object, name, getValue) {
    var descriptor = Object.getOwnPropertyDescriptor(object, name);

    var _ref = descriptor || {},
        enumerable = _ref.enumerable,
        writable = _ref.writable,
        configurable = _ref.configurable;

    if (descriptor && !configurable) {
      return;
    }

    defineLazyObjectProperty(object, name, {
      get: getValue,
      enumerable: enumerable !== false,
      writable: writable !== false
    });
  }

  function polyfillGlobal(name, getValue) {
    polyfillObjectProperty(global, name, getValue);
  }

  module.exports = {
    polyfillObjectProperty: polyfillObjectProperty,
    polyfillGlobal: polyfillGlobal
  };
},14473,[10084]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Promise = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = Promise;

  Promise.prototype['finally'] = function (f) {
    return this.then(function (value) {
      return Promise.resolve(f()).then(function () {
        return value;
      });
    }, function (err) {
      return Promise.resolve(f()).then(function () {
        throw err;
      });
    });
  };
},14476,[10168]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillGlobal = _require.polyfillGlobal;

  polyfillGlobal('regeneratorRuntime', function () {
    delete global.regeneratorRuntime;
    return _$$_REQUIRE(_dependencyMap[1]);
  });
},14479,[14473,14482]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var runtime = function (exports) {
    "use strict";

    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var undefined;
    var $Symbol = typeof Symbol === "function" ? Symbol : {};
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

    function wrap(innerFn, outerFn, self, tryLocsList) {
      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
      var generator = Object.create(protoGenerator.prototype);
      var context = new Context(tryLocsList || []);
      generator._invoke = makeInvokeMethod(innerFn, self, context);
      return generator;
    }

    exports.wrap = wrap;

    function tryCatch(fn, obj, arg) {
      try {
        return {
          type: "normal",
          arg: fn.call(obj, arg)
        };
      } catch (err) {
        return {
          type: "throw",
          arg: err
        };
      }
    }

    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";
    var ContinueSentinel = {};

    function Generator() {}

    function GeneratorFunction() {}

    function GeneratorFunctionPrototype() {}

    var IteratorPrototype = {};

    IteratorPrototype[iteratorSymbol] = function () {
      return this;
    };

    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
      IteratorPrototype = NativeIteratorPrototype;
    }

    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
    GeneratorFunctionPrototype.constructor = GeneratorFunction;
    GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

    function defineIteratorMethods(prototype) {
      ["next", "throw", "return"].forEach(function (method) {
        prototype[method] = function (arg) {
          return this._invoke(method, arg);
        };
      });
    }

    exports.isGeneratorFunction = function (genFun) {
      var ctor = typeof genFun === "function" && genFun.constructor;
      return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
    };

    exports.mark = function (genFun) {
      if (Object.setPrototypeOf) {
        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
      } else {
        genFun.__proto__ = GeneratorFunctionPrototype;

        if (!(toStringTagSymbol in genFun)) {
          genFun[toStringTagSymbol] = "GeneratorFunction";
        }
      }

      genFun.prototype = Object.create(Gp);
      return genFun;
    };

    exports.awrap = function (arg) {
      return {
        __await: arg
      };
    };

    function AsyncIterator(generator, PromiseImpl) {
      function invoke(method, arg, resolve, reject) {
        var record = tryCatch(generator[method], generator, arg);

        if (record.type === "throw") {
          reject(record.arg);
        } else {
          var result = record.arg;
          var value = result.value;

          if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
            return PromiseImpl.resolve(value.__await).then(function (value) {
              invoke("next", value, resolve, reject);
            }, function (err) {
              invoke("throw", err, resolve, reject);
            });
          }

          return PromiseImpl.resolve(value).then(function (unwrapped) {
            result.value = unwrapped;
            resolve(result);
          }, function (error) {
            return invoke("throw", error, resolve, reject);
          });
        }
      }

      var previousPromise;

      function enqueue(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }

        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }

      this._invoke = enqueue;
    }

    defineIteratorMethods(AsyncIterator.prototype);

    AsyncIterator.prototype[asyncIteratorSymbol] = function () {
      return this;
    };

    exports.AsyncIterator = AsyncIterator;

    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
      if (PromiseImpl === undefined) PromiseImpl = Promise;
      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
      return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
        return result.done ? result.value : iter.next();
      });
    };

    function makeInvokeMethod(innerFn, self, context) {
      var state = GenStateSuspendedStart;
      return function invoke(method, arg) {
        if (state === GenStateExecuting) {
          throw new Error("Generator is already running");
        }

        if (state === GenStateCompleted) {
          if (method === "throw") {
            throw arg;
          }

          return doneResult();
        }

        context.method = method;
        context.arg = arg;

        while (true) {
          var delegate = context.delegate;

          if (delegate) {
            var delegateResult = maybeInvokeDelegate(delegate, context);

            if (delegateResult) {
              if (delegateResult === ContinueSentinel) continue;
              return delegateResult;
            }
          }

          if (context.method === "next") {
            context.sent = context._sent = context.arg;
          } else if (context.method === "throw") {
            if (state === GenStateSuspendedStart) {
              state = GenStateCompleted;
              throw context.arg;
            }

            context.dispatchException(context.arg);
          } else if (context.method === "return") {
            context.abrupt("return", context.arg);
          }

          state = GenStateExecuting;
          var record = tryCatch(innerFn, self, context);

          if (record.type === "normal") {
            state = context.done ? GenStateCompleted : GenStateSuspendedYield;

            if (record.arg === ContinueSentinel) {
              continue;
            }

            return {
              value: record.arg,
              done: context.done
            };
          } else if (record.type === "throw") {
            state = GenStateCompleted;
            context.method = "throw";
            context.arg = record.arg;
          }
        }
      };
    }

    function maybeInvokeDelegate(delegate, context) {
      var method = delegate.iterator[context.method];

      if (method === undefined) {
        context.delegate = null;

        if (context.method === "throw") {
          if (delegate.iterator["return"]) {
            context.method = "return";
            context.arg = undefined;
            maybeInvokeDelegate(delegate, context);

            if (context.method === "throw") {
              return ContinueSentinel;
            }
          }

          context.method = "throw";
          context.arg = new TypeError("The iterator does not provide a 'throw' method");
        }

        return ContinueSentinel;
      }

      var record = tryCatch(method, delegate.iterator, context.arg);

      if (record.type === "throw") {
        context.method = "throw";
        context.arg = record.arg;
        context.delegate = null;
        return ContinueSentinel;
      }

      var info = record.arg;

      if (!info) {
        context.method = "throw";
        context.arg = new TypeError("iterator result is not an object");
        context.delegate = null;
        return ContinueSentinel;
      }

      if (info.done) {
        context[delegate.resultName] = info.value;
        context.next = delegate.nextLoc;

        if (context.method !== "return") {
          context.method = "next";
          context.arg = undefined;
        }
      } else {
        return info;
      }

      context.delegate = null;
      return ContinueSentinel;
    }

    defineIteratorMethods(Gp);
    Gp[toStringTagSymbol] = "Generator";

    Gp[iteratorSymbol] = function () {
      return this;
    };

    Gp.toString = function () {
      return "[object Generator]";
    };

    function pushTryEntry(locs) {
      var entry = {
        tryLoc: locs[0]
      };

      if (1 in locs) {
        entry.catchLoc = locs[1];
      }

      if (2 in locs) {
        entry.finallyLoc = locs[2];
        entry.afterLoc = locs[3];
      }

      this.tryEntries.push(entry);
    }

    function resetTryEntry(entry) {
      var record = entry.completion || {};
      record.type = "normal";
      delete record.arg;
      entry.completion = record;
    }

    function Context(tryLocsList) {
      this.tryEntries = [{
        tryLoc: "root"
      }];
      tryLocsList.forEach(pushTryEntry, this);
      this.reset(true);
    }

    exports.keys = function (object) {
      var keys = [];

      for (var key in object) {
        keys.push(key);
      }

      keys.reverse();
      return function next() {
        while (keys.length) {
          var key = keys.pop();

          if (key in object) {
            next.value = key;
            next.done = false;
            return next;
          }
        }

        next.done = true;
        return next;
      };
    };

    function values(iterable) {
      if (iterable) {
        var iteratorMethod = iterable[iteratorSymbol];

        if (iteratorMethod) {
          return iteratorMethod.call(iterable);
        }

        if (typeof iterable.next === "function") {
          return iterable;
        }

        if (!isNaN(iterable.length)) {
          var i = -1,
              next = function next() {
            while (++i < iterable.length) {
              if (hasOwn.call(iterable, i)) {
                next.value = iterable[i];
                next.done = false;
                return next;
              }
            }

            next.value = undefined;
            next.done = true;
            return next;
          };

          return next.next = next;
        }
      }

      return {
        next: doneResult
      };
    }

    exports.values = values;

    function doneResult() {
      return {
        value: undefined,
        done: true
      };
    }

    Context.prototype = {
      constructor: Context,
      reset: function reset(skipTempReset) {
        this.prev = 0;
        this.next = 0;
        this.sent = this._sent = undefined;
        this.done = false;
        this.delegate = null;
        this.method = "next";
        this.arg = undefined;
        this.tryEntries.forEach(resetTryEntry);

        if (!skipTempReset) {
          for (var name in this) {
            if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
              this[name] = undefined;
            }
          }
        }
      },
      stop: function stop() {
        this.done = true;
        var rootEntry = this.tryEntries[0];
        var rootRecord = rootEntry.completion;

        if (rootRecord.type === "throw") {
          throw rootRecord.arg;
        }

        return this.rval;
      },
      dispatchException: function dispatchException(exception) {
        if (this.done) {
          throw exception;
        }

        var context = this;

        function handle(loc, caught) {
          record.type = "throw";
          record.arg = exception;
          context.next = loc;

          if (caught) {
            context.method = "next";
            context.arg = undefined;
          }

          return !!caught;
        }

        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          var record = entry.completion;

          if (entry.tryLoc === "root") {
            return handle("end");
          }

          if (entry.tryLoc <= this.prev) {
            var hasCatch = hasOwn.call(entry, "catchLoc");
            var hasFinally = hasOwn.call(entry, "finallyLoc");

            if (hasCatch && hasFinally) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              } else if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else if (hasCatch) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              }
            } else if (hasFinally) {
              if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else {
              throw new Error("try statement without catch or finally");
            }
          }
        }
      },
      abrupt: function abrupt(type, arg) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
            var finallyEntry = entry;
            break;
          }
        }

        if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
          finallyEntry = null;
        }

        var record = finallyEntry ? finallyEntry.completion : {};
        record.type = type;
        record.arg = arg;

        if (finallyEntry) {
          this.method = "next";
          this.next = finallyEntry.finallyLoc;
          return ContinueSentinel;
        }

        return this.complete(record);
      },
      complete: function complete(record, afterLoc) {
        if (record.type === "throw") {
          throw record.arg;
        }

        if (record.type === "break" || record.type === "continue") {
          this.next = record.arg;
        } else if (record.type === "return") {
          this.rval = this.arg = record.arg;
          this.method = "return";
          this.next = "end";
        } else if (record.type === "normal" && afterLoc) {
          this.next = afterLoc;
        }

        return ContinueSentinel;
      },
      finish: function finish(finallyLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.finallyLoc === finallyLoc) {
            this.complete(entry.completion, entry.afterLoc);
            resetTryEntry(entry);
            return ContinueSentinel;
          }
        }
      },
      "catch": function _catch(tryLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc === tryLoc) {
            var record = entry.completion;

            if (record.type === "throw") {
              var thrown = record.arg;
              resetTryEntry(entry);
            }

            return thrown;
          }
        }

        throw new Error("illegal catch attempt");
      },
      delegateYield: function delegateYield(iterable, resultName, nextLoc) {
        this.delegate = {
          iterator: values(iterable),
          resultName: resultName,
          nextLoc: nextLoc
        };

        if (this.method === "next") {
          this.arg = undefined;
        }

        return ContinueSentinel;
      }
    };
    return exports;
  }(typeof module === "object" ? module.exports : {});

  try {
    regeneratorRuntime = runtime;
  } catch (accidentalStrictMode) {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
},14482,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (!global.RN$Bridgeless) {
    var _require = _$$_REQUIRE(_dependencyMap[0]),
        polyfillGlobal = _require.polyfillGlobal;

    var defineLazyTimer = function defineLazyTimer(name) {
      polyfillGlobal(name, function () {
        return _$$_REQUIRE(_dependencyMap[1])[name];
      });
    };

    defineLazyTimer('setTimeout');
    defineLazyTimer('setInterval');
    defineLazyTimer('setImmediate');
    defineLazyTimer('clearTimeout');
    defineLazyTimer('clearInterval');
    defineLazyTimer('clearImmediate');
    defineLazyTimer('requestAnimationFrame');
    defineLazyTimer('cancelAnimationFrame');
    defineLazyTimer('requestIdleCallback');
    defineLazyTimer('cancelIdleCallback');
  }
},14485,[14473,10063]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('Timing');

  exports.default = _default;
},14488,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var performance = _$$_REQUIRE(_dependencyMap[0]);

  var performanceNow;

  if (performance.now) {
    performanceNow = function performanceNow() {
      return performance.now();
    };
  } else {
    performanceNow = function performanceNow() {
      return Date.now();
    };
  }

  module.exports = performanceNow;
},14491,[14494]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ExecutionEnvironment = _$$_REQUIRE(_dependencyMap[0]);

  var performance;

  if (ExecutionEnvironment.canUseDOM) {
    performance = window.performance || window.msPerformance || window.webkitPerformance;
  }

  module.exports = performance || {};
},14494,[14497]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
  var ExecutionEnvironment = {
    canUseDOM: canUseDOM,
    canUseWorkers: typeof Worker !== 'undefined',
    canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
    canUseViewport: canUseDOM && !!window.screen,
    isInWorker: !canUseDOM
  };
  module.exports = ExecutionEnvironment;
},14497,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillGlobal = _require.polyfillGlobal;

  polyfillGlobal('XMLHttpRequest', function () {
    return _$$_REQUIRE(_dependencyMap[1]);
  });
  polyfillGlobal('FormData', function () {
    return _$$_REQUIRE(_dependencyMap[2]);
  });
  polyfillGlobal('fetch', function () {
    return _$$_REQUIRE(_dependencyMap[3]).fetch;
  });
  polyfillGlobal('Headers', function () {
    return _$$_REQUIRE(_dependencyMap[3]).Headers;
  });
  polyfillGlobal('Request', function () {
    return _$$_REQUIRE(_dependencyMap[3]).Request;
  });
  polyfillGlobal('Response', function () {
    return _$$_REQUIRE(_dependencyMap[3]).Response;
  });
  polyfillGlobal('WebSocket', function () {
    return _$$_REQUIRE(_dependencyMap[4]);
  });
  polyfillGlobal('Blob', function () {
    return _$$_REQUIRE(_dependencyMap[5]);
  });
  polyfillGlobal('File', function () {
    return _$$_REQUIRE(_dependencyMap[6]);
  });
  polyfillGlobal('FileReader', function () {
    return _$$_REQUIRE(_dependencyMap[7]);
  });
  polyfillGlobal('URL', function () {
    return _$$_REQUIRE(_dependencyMap[8]).URL;
  });
  polyfillGlobal('URLSearchParams', function () {
    return _$$_REQUIRE(_dependencyMap[8]).URLSearchParams;
  });
  polyfillGlobal('AbortController', function () {
    return _$$_REQUIRE(_dependencyMap[9]).AbortController;
  });
  polyfillGlobal('AbortSignal', function () {
    return _$$_REQUIRE(_dependencyMap[9]).AbortSignal;
  });
},14500,[14473,10177,10219,10222,10228,10210,10234,10237,10240,14521]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('BlobModule');

  exports.default = _default;
},14503,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, '__esModule', {
    value: true
  });
  var privateData = new WeakMap();
  var wrappers = new WeakMap();

  function pd(event) {
    var retv = privateData.get(event);

    if (retv === null) {
      throw new TypeError("'this' is expected an Event object, but got " + JSON.stringify(event));
    }

    return retv;
  }

  function setCancelFlag(data) {
    if (data.passiveListener != null) {
      if (typeof console !== "undefined" && true) {}

      return;
    }

    if (!data.event.cancelable) {
      return;
    }

    data.canceled = true;

    if (typeof data.event.preventDefault === "function") {
      data.event.preventDefault();
    }
  }

  function Event(eventTarget, event) {
    privateData.set(this, {
      eventTarget: eventTarget,
      event: event,
      eventPhase: 2,
      currentTarget: eventTarget,
      canceled: false,
      stopped: false,
      immediateStopped: false,
      passiveListener: null,
      timeStamp: event.timeStamp || Date.now()
    });
    Object.defineProperty(this, "isTrusted", {
      value: false,
      enumerable: true
    });
    var keys = Object.keys(event);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!(key in this)) {
        Object.defineProperty(this, key, defineRedirectDescriptor(key));
      }
    }
  }

  Event.prototype = {
    get type() {
      return pd(this).event.type;
    },

    get target() {
      return pd(this).eventTarget;
    },

    get currentTarget() {
      return pd(this).currentTarget;
    },

    composedPath: function composedPath() {
      var currentTarget = pd(this).currentTarget;

      if (currentTarget == null) {
        return [];
      }

      return [currentTarget];
    },

    get NONE() {
      return 0;
    },

    get CAPTURING_PHASE() {
      return 1;
    },

    get AT_TARGET() {
      return 2;
    },

    get BUBBLING_PHASE() {
      return 3;
    },

    get eventPhase() {
      return pd(this).eventPhase;
    },

    stopPropagation: function stopPropagation() {
      var data = pd(this);
      data.stopped = true;

      if (typeof data.event.stopPropagation === "function") {
        data.event.stopPropagation();
      }
    },
    stopImmediatePropagation: function stopImmediatePropagation() {
      var data = pd(this);
      data.stopped = true;
      data.immediateStopped = true;

      if (typeof data.event.stopImmediatePropagation === "function") {
        data.event.stopImmediatePropagation();
      }
    },

    get bubbles() {
      return Boolean(pd(this).event.bubbles);
    },

    get cancelable() {
      return Boolean(pd(this).event.cancelable);
    },

    preventDefault: function preventDefault() {
      setCancelFlag(pd(this));
    },

    get defaultPrevented() {
      return pd(this).canceled;
    },

    get composed() {
      return Boolean(pd(this).event.composed);
    },

    get timeStamp() {
      return pd(this).timeStamp;
    },

    get srcElement() {
      return pd(this).eventTarget;
    },

    get cancelBubble() {
      return pd(this).stopped;
    },

    set cancelBubble(value) {
      if (!value) {
        return;
      }

      var data = pd(this);
      data.stopped = true;

      if (typeof data.event.cancelBubble === "boolean") {
        data.event.cancelBubble = true;
      }
    },

    get returnValue() {
      return !pd(this).canceled;
    },

    set returnValue(value) {
      if (!value) {
        setCancelFlag(pd(this));
      }
    },

    initEvent: function initEvent() {}
  };
  Object.defineProperty(Event.prototype, "constructor", {
    value: Event,
    configurable: true,
    writable: true
  });

  if (typeof window !== "undefined" && typeof window.Event !== "undefined" && typeof window.Event.prototype === "object") {
    Object.setPrototypeOf(Event.prototype, window.Event.prototype);
    wrappers.set(window.Event.prototype, Event);
  }

  function defineRedirectDescriptor(key) {
    return {
      get: function get() {
        return pd(this).event[key];
      },
      set: function set(value) {
        pd(this).event[key] = value;
      },
      configurable: true,
      enumerable: true
    };
  }

  function defineCallDescriptor(key) {
    return {
      value: function value() {
        var event = pd(this).event;
        return event[key].apply(event, arguments);
      },
      configurable: true,
      enumerable: true
    };
  }

  function defineWrapper(BaseEvent, proto) {
    var keys = Object.keys(proto);

    if (keys.length === 0) {
      return BaseEvent;
    }

    function CustomEvent(eventTarget, event) {
      BaseEvent.call(this, eventTarget, event);
    }

    CustomEvent.prototype = Object.create(BaseEvent.prototype, {
      constructor: {
        value: CustomEvent,
        configurable: true,
        writable: true
      }
    });

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!(key in BaseEvent.prototype)) {
        var descriptor = Object.getOwnPropertyDescriptor(proto, key);
        var isFunc = typeof descriptor.value === "function";
        Object.defineProperty(CustomEvent.prototype, key, isFunc ? defineCallDescriptor(key) : defineRedirectDescriptor(key));
      }
    }

    return CustomEvent;
  }

  function getWrapper(proto) {
    if (proto == null || proto === Object.prototype) {
      return Event;
    }

    var wrapper = wrappers.get(proto);

    if (wrapper == null) {
      wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);
      wrappers.set(proto, wrapper);
    }

    return wrapper;
  }

  function wrapEvent(eventTarget, event) {
    var Wrapper = getWrapper(Object.getPrototypeOf(event));
    return new Wrapper(eventTarget, event);
  }

  function isStopped(event) {
    return pd(event).immediateStopped;
  }

  function setEventPhase(event, eventPhase) {
    pd(event).eventPhase = eventPhase;
  }

  function setCurrentTarget(event, currentTarget) {
    pd(event).currentTarget = currentTarget;
  }

  function setPassiveListener(event, passiveListener) {
    pd(event).passiveListener = passiveListener;
  }

  var listenersMap = new WeakMap();
  var CAPTURE = 1;
  var BUBBLE = 2;
  var ATTRIBUTE = 3;

  function isObject(x) {
    return x !== null && typeof x === "object";
  }

  function getListeners(eventTarget) {
    var listeners = listenersMap.get(eventTarget);

    if (listeners == null) {
      throw new TypeError("'this' is expected an EventTarget object, but got another value.");
    }

    return listeners;
  }

  function defineEventAttributeDescriptor(eventName) {
    return {
      get: function get() {
        var listeners = getListeners(this);
        var node = listeners.get(eventName);

        while (node != null) {
          if (node.listenerType === ATTRIBUTE) {
            return node.listener;
          }

          node = node.next;
        }

        return null;
      },
      set: function set(listener) {
        if (typeof listener !== "function" && !isObject(listener)) {
          listener = null;
        }

        var listeners = getListeners(this);
        var prev = null;
        var node = listeners.get(eventName);

        while (node != null) {
          if (node.listenerType === ATTRIBUTE) {
            if (prev !== null) {
              prev.next = node.next;
            } else if (node.next !== null) {
              listeners.set(eventName, node.next);
            } else {
              listeners.delete(eventName);
            }
          } else {
            prev = node;
          }

          node = node.next;
        }

        if (listener !== null) {
          var newNode = {
            listener: listener,
            listenerType: ATTRIBUTE,
            passive: false,
            once: false,
            next: null
          };

          if (prev === null) {
            listeners.set(eventName, newNode);
          } else {
            prev.next = newNode;
          }
        }
      },
      configurable: true,
      enumerable: true
    };
  }

  function defineEventAttribute(eventTargetPrototype, eventName) {
    Object.defineProperty(eventTargetPrototype, "on" + eventName, defineEventAttributeDescriptor(eventName));
  }

  function defineCustomEventTarget(eventNames) {
    function CustomEventTarget() {
      EventTarget.call(this);
    }

    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {
      constructor: {
        value: CustomEventTarget,
        configurable: true,
        writable: true
      }
    });

    for (var i = 0; i < eventNames.length; ++i) {
      defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);
    }

    return CustomEventTarget;
  }

  function EventTarget() {
    if (this instanceof EventTarget) {
      listenersMap.set(this, new Map());
      return;
    }

    if (arguments.length === 1 && Array.isArray(arguments[0])) {
      return defineCustomEventTarget(arguments[0]);
    }

    if (arguments.length > 0) {
      var types = new Array(arguments.length);

      for (var i = 0; i < arguments.length; ++i) {
        types[i] = arguments[i];
      }

      return defineCustomEventTarget(types);
    }

    throw new TypeError("Cannot call a class as a function");
  }

  EventTarget.prototype = {
    addEventListener: function addEventListener(eventName, listener, options) {
      if (listener == null) {
        return;
      }

      if (typeof listener !== "function" && !isObject(listener)) {
        throw new TypeError("'listener' should be a function or an object.");
      }

      var listeners = getListeners(this);
      var optionsIsObj = isObject(options);
      var capture = optionsIsObj ? Boolean(options.capture) : Boolean(options);
      var listenerType = capture ? CAPTURE : BUBBLE;
      var newNode = {
        listener: listener,
        listenerType: listenerType,
        passive: optionsIsObj && Boolean(options.passive),
        once: optionsIsObj && Boolean(options.once),
        next: null
      };
      var node = listeners.get(eventName);

      if (node === undefined) {
        listeners.set(eventName, newNode);
        return;
      }

      var prev = null;

      while (node != null) {
        if (node.listener === listener && node.listenerType === listenerType) {
          return;
        }

        prev = node;
        node = node.next;
      }

      prev.next = newNode;
    },
    removeEventListener: function removeEventListener(eventName, listener, options) {
      if (listener == null) {
        return;
      }

      var listeners = getListeners(this);
      var capture = isObject(options) ? Boolean(options.capture) : Boolean(options);
      var listenerType = capture ? CAPTURE : BUBBLE;
      var prev = null;
      var node = listeners.get(eventName);

      while (node != null) {
        if (node.listener === listener && node.listenerType === listenerType) {
          if (prev !== null) {
            prev.next = node.next;
          } else if (node.next !== null) {
            listeners.set(eventName, node.next);
          } else {
            listeners.delete(eventName);
          }

          return;
        }

        prev = node;
        node = node.next;
      }
    },
    dispatchEvent: function dispatchEvent(event) {
      if (event == null || typeof event.type !== "string") {
        throw new TypeError('"event.type" should be a string.');
      }

      var listeners = getListeners(this);
      var eventName = event.type;
      var node = listeners.get(eventName);

      if (node == null) {
        return true;
      }

      var wrappedEvent = wrapEvent(this, event);
      var prev = null;

      while (node != null) {
        if (node.once) {
          if (prev !== null) {
            prev.next = node.next;
          } else if (node.next !== null) {
            listeners.set(eventName, node.next);
          } else {
            listeners.delete(eventName);
          }
        } else {
          prev = node;
        }

        setPassiveListener(wrappedEvent, node.passive ? node.listener : null);

        if (typeof node.listener === "function") {
          try {
            node.listener.call(this, wrappedEvent);
          } catch (err) {
            if (typeof console !== "undefined" && true) {}
          }
        } else if (node.listenerType !== ATTRIBUTE && typeof node.listener.handleEvent === "function") {
          node.listener.handleEvent(wrappedEvent);
        }

        if (isStopped(wrappedEvent)) {
          break;
        }

        node = node.next;
      }

      setPassiveListener(wrappedEvent, null);
      setEventPhase(wrappedEvent, 0);
      setCurrentTarget(wrappedEvent, null);
      return !wrappedEvent.defaultPrevented;
    }
  };
  Object.defineProperty(EventTarget.prototype, "constructor", {
    value: EventTarget,
    configurable: true,
    writable: true
  });

  if (typeof window !== "undefined" && typeof window.EventTarget !== "undefined") {
    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);
  }

  exports.defineEventAttribute = defineEventAttribute;
  exports.EventTarget = EventTarget;
  exports.default = EventTarget;
  module.exports = EventTarget;
  module.exports.EventTarget = module.exports["default"] = EventTarget;
  module.exports.defineEventAttribute = defineEventAttribute;
},14506,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('Networking');

  exports.default = _default;
},14509,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.WHATWGFetch = {});
  })(this, function (exports) {
    'use strict';

    var support = {
      searchParams: 'URLSearchParams' in self,
      iterable: 'Symbol' in self && 'iterator' in Symbol,
      blob: 'FileReader' in self && 'Blob' in self && function () {
        try {
          new Blob();
          return true;
        } catch (e) {
          return false;
        }
      }(),
      formData: 'FormData' in self,
      arrayBuffer: 'ArrayBuffer' in self
    };

    function isDataView(obj) {
      return obj && DataView.prototype.isPrototypeOf(obj);
    }

    if (support.arrayBuffer) {
      var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];

      var isArrayBufferView = ArrayBuffer.isView || function (obj) {
        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
      };
    }

    function normalizeName(name) {
      if (typeof name !== 'string') {
        name = String(name);
      }

      if (/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(name)) {
        throw new TypeError('Invalid character in header field name');
      }

      return name.toLowerCase();
    }

    function normalizeValue(value) {
      if (typeof value !== 'string') {
        value = String(value);
      }

      return value;
    }

    function iteratorFor(items) {
      var iterator = {
        next: function next() {
          var value = items.shift();
          return {
            done: value === undefined,
            value: value
          };
        }
      };

      if (support.iterable) {
        iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"] = function () {
          return iterator;
        };
      }

      return iterator;
    }

    function Headers(headers) {
      this.map = {};

      if (headers instanceof Headers) {
        headers.forEach(function (value, name) {
          this.append(name, value);
        }, this);
      } else if (Array.isArray(headers)) {
        headers.forEach(function (header) {
          this.append(header[0], header[1]);
        }, this);
      } else if (headers) {
        Object.getOwnPropertyNames(headers).forEach(function (name) {
          this.append(name, headers[name]);
        }, this);
      }
    }

    Headers.prototype.append = function (name, value) {
      name = normalizeName(name);
      value = normalizeValue(value);
      var oldValue = this.map[name];
      this.map[name] = oldValue ? oldValue + ', ' + value : value;
    };

    Headers.prototype['delete'] = function (name) {
      delete this.map[normalizeName(name)];
    };

    Headers.prototype.get = function (name) {
      name = normalizeName(name);
      return this.has(name) ? this.map[name] : null;
    };

    Headers.prototype.has = function (name) {
      return this.map.hasOwnProperty(normalizeName(name));
    };

    Headers.prototype.set = function (name, value) {
      this.map[normalizeName(name)] = normalizeValue(value);
    };

    Headers.prototype.forEach = function (callback, thisArg) {
      for (var name in this.map) {
        if (this.map.hasOwnProperty(name)) {
          callback.call(thisArg, this.map[name], name, this);
        }
      }
    };

    Headers.prototype.keys = function () {
      var items = [];
      this.forEach(function (value, name) {
        items.push(name);
      });
      return iteratorFor(items);
    };

    Headers.prototype.values = function () {
      var items = [];
      this.forEach(function (value) {
        items.push(value);
      });
      return iteratorFor(items);
    };

    Headers.prototype.entries = function () {
      var items = [];
      this.forEach(function (value, name) {
        items.push([name, value]);
      });
      return iteratorFor(items);
    };

    if (support.iterable) {
      Headers.prototype[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"] = Headers.prototype.entries;
    }

    function consumed(body) {
      if (body.bodyUsed) {
        return Promise.reject(new TypeError('Already read'));
      }

      body.bodyUsed = true;
    }

    function fileReaderReady(reader) {
      return new Promise(function (resolve, reject) {
        reader.onload = function () {
          resolve(reader.result);
        };

        reader.onerror = function () {
          reject(reader.error);
        };
      });
    }

    function readBlobAsArrayBuffer(blob) {
      var reader = new FileReader();
      var promise = fileReaderReady(reader);
      reader.readAsArrayBuffer(blob);
      return promise;
    }

    function readBlobAsText(blob) {
      var reader = new FileReader();
      var promise = fileReaderReady(reader);
      reader.readAsText(blob);
      return promise;
    }

    function readArrayBufferAsText(buf) {
      var view = new Uint8Array(buf);
      var chars = new Array(view.length);

      for (var i = 0; i < view.length; i++) {
        chars[i] = String.fromCharCode(view[i]);
      }

      return chars.join('');
    }

    function bufferClone(buf) {
      if (buf.slice) {
        return buf.slice(0);
      } else {
        var view = new Uint8Array(buf.byteLength);
        view.set(new Uint8Array(buf));
        return view.buffer;
      }
    }

    function Body() {
      this.bodyUsed = false;

      this._initBody = function (body) {
        this._bodyInit = body;

        if (!body) {
          this._bodyText = '';
        } else if (typeof body === 'string') {
          this._bodyText = body;
        } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
          this._bodyBlob = body;
        } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
          this._bodyFormData = body;
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this._bodyText = body.toString();
        } else if (support.arrayBuffer && support.blob && isDataView(body)) {
          this._bodyArrayBuffer = bufferClone(body.buffer);
          this._bodyInit = new Blob([this._bodyArrayBuffer]);
        } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
          this._bodyArrayBuffer = bufferClone(body);
        } else {
          this._bodyText = body = Object.prototype.toString.call(body);
        }

        if (!this.headers.get('content-type')) {
          if (typeof body === 'string') {
            this.headers.set('content-type', 'text/plain;charset=UTF-8');
          } else if (this._bodyBlob && this._bodyBlob.type) {
            this.headers.set('content-type', this._bodyBlob.type);
          } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
            this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
          }
        }
      };

      if (support.blob) {
        this.blob = function () {
          var rejected = consumed(this);

          if (rejected) {
            return rejected;
          }

          if (this._bodyBlob) {
            return Promise.resolve(this._bodyBlob);
          } else if (this._bodyArrayBuffer) {
            return Promise.resolve(new Blob([this._bodyArrayBuffer]));
          } else if (this._bodyFormData) {
            throw new Error('could not read FormData body as blob');
          } else {
            return Promise.resolve(new Blob([this._bodyText]));
          }
        };

        this.arrayBuffer = function () {
          if (this._bodyArrayBuffer) {
            return consumed(this) || Promise.resolve(this._bodyArrayBuffer);
          } else {
            return this.blob().then(readBlobAsArrayBuffer);
          }
        };
      }

      this.text = function () {
        var rejected = consumed(this);

        if (rejected) {
          return rejected;
        }

        if (this._bodyBlob) {
          return readBlobAsText(this._bodyBlob);
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as text');
        } else {
          return Promise.resolve(this._bodyText);
        }
      };

      if (support.formData) {
        this.formData = function () {
          return this.text().then(decode);
        };
      }

      this.json = function () {
        return this.text().then(JSON.parse);
      };

      return this;
    }

    var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

    function normalizeMethod(method) {
      var upcased = method.toUpperCase();
      return methods.indexOf(upcased) > -1 ? upcased : method;
    }

    function Request(input, options) {
      options = options || {};
      var body = options.body;

      if (input instanceof Request) {
        if (input.bodyUsed) {
          throw new TypeError('Already read');
        }

        this.url = input.url;
        this.credentials = input.credentials;

        if (!options.headers) {
          this.headers = new Headers(input.headers);
        }

        this.method = input.method;
        this.mode = input.mode;
        this.signal = input.signal;

        if (!body && input._bodyInit != null) {
          body = input._bodyInit;
          input.bodyUsed = true;
        }
      } else {
        this.url = String(input);
      }

      this.credentials = options.credentials || this.credentials || 'same-origin';

      if (options.headers || !this.headers) {
        this.headers = new Headers(options.headers);
      }

      this.method = normalizeMethod(options.method || this.method || 'GET');
      this.mode = options.mode || this.mode || null;
      this.signal = options.signal || this.signal;
      this.referrer = null;

      if ((this.method === 'GET' || this.method === 'HEAD') && body) {
        throw new TypeError('Body not allowed for GET or HEAD requests');
      }

      this._initBody(body);
    }

    Request.prototype.clone = function () {
      return new Request(this, {
        body: this._bodyInit
      });
    };

    function decode(body) {
      var form = new FormData();
      body.trim().split('&').forEach(function (bytes) {
        if (bytes) {
          var split = bytes.split('=');
          var name = split.shift().replace(/\+/g, ' ');
          var value = split.join('=').replace(/\+/g, ' ');
          form.append(decodeURIComponent(name), decodeURIComponent(value));
        }
      });
      return form;
    }

    function parseHeaders(rawHeaders) {
      var headers = new Headers();
      var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ');
      preProcessedHeaders.split(/\r?\n/).forEach(function (line) {
        var parts = line.split(':');
        var key = parts.shift().trim();

        if (key) {
          var value = parts.join(':').trim();
          headers.append(key, value);
        }
      });
      return headers;
    }

    Body.call(Request.prototype);

    function Response(bodyInit, options) {
      if (!options) {
        options = {};
      }

      this.type = 'default';
      this.status = options.status === undefined ? 200 : options.status;
      this.ok = this.status >= 200 && this.status < 300;
      this.statusText = 'statusText' in options ? options.statusText : 'OK';
      this.headers = new Headers(options.headers);
      this.url = options.url || '';

      this._initBody(bodyInit);
    }

    Body.call(Response.prototype);

    Response.prototype.clone = function () {
      return new Response(this._bodyInit, {
        status: this.status,
        statusText: this.statusText,
        headers: new Headers(this.headers),
        url: this.url
      });
    };

    Response.error = function () {
      var response = new Response(null, {
        status: 0,
        statusText: ''
      });
      response.type = 'error';
      return response;
    };

    var redirectStatuses = [301, 302, 303, 307, 308];

    Response.redirect = function (url, status) {
      if (redirectStatuses.indexOf(status) === -1) {
        throw new RangeError('Invalid status code');
      }

      return new Response(null, {
        status: status,
        headers: {
          location: url
        }
      });
    };

    exports.DOMException = self.DOMException;

    try {
      new exports.DOMException();
    } catch (err) {
      exports.DOMException = function (message, name) {
        this.message = message;
        this.name = name;
        var error = Error(message);
        this.stack = error.stack;
      };

      exports.DOMException.prototype = Object.create(Error.prototype);
      exports.DOMException.prototype.constructor = exports.DOMException;
    }

    function fetch(input, init) {
      return new Promise(function (resolve, reject) {
        var request = new Request(input, init);

        if (request.signal && request.signal.aborted) {
          return reject(new exports.DOMException('Aborted', 'AbortError'));
        }

        var xhr = new XMLHttpRequest();

        function abortXhr() {
          xhr.abort();
        }

        xhr.onload = function () {
          var options = {
            status: xhr.status,
            statusText: xhr.statusText,
            headers: parseHeaders(xhr.getAllResponseHeaders() || '')
          };
          options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
          var body = 'response' in xhr ? xhr.response : xhr.responseText;
          resolve(new Response(body, options));
        };

        xhr.onerror = function () {
          reject(new TypeError('Network request failed'));
        };

        xhr.ontimeout = function () {
          reject(new TypeError('Network request failed'));
        };

        xhr.onabort = function () {
          reject(new exports.DOMException('Aborted', 'AbortError'));
        };

        xhr.open(request.method, request.url, true);

        if (request.credentials === 'include') {
          xhr.withCredentials = true;
        } else if (request.credentials === 'omit') {
          xhr.withCredentials = false;
        }

        if ('responseType' in xhr && support.blob) {
          xhr.responseType = 'blob';
        }

        request.headers.forEach(function (value, name) {
          xhr.setRequestHeader(name, value);
        });

        if (request.signal) {
          request.signal.addEventListener('abort', abortXhr);

          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              request.signal.removeEventListener('abort', abortXhr);
            }
          };
        }

        xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
      });
    }

    fetch.polyfill = true;

    if (!self.fetch) {
      self.fetch = fetch;
      self.Headers = Headers;
      self.Request = Request;
      self.Response = Response;
    }

    exports.Headers = Headers;
    exports.Request = Request;
    exports.Response = Response;
    exports.fetch = fetch;
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
  });
},14512,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('WebSocketModule');

  exports.default = _default;
},14515,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('FileReaderModule');

  exports.default = _default;
},14518,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  Object.defineProperty(exports, '__esModule', {
    value: true
  });

  var eventTargetShim = _$$_REQUIRE(_dependencyMap[5]);

  var AbortSignal = function (_eventTargetShim$Even) {
    _inherits(AbortSignal, _eventTargetShim$Even);

    function AbortSignal() {
      var _this;

      _classCallCheck(this, AbortSignal);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AbortSignal).call(this));
      throw new TypeError("AbortSignal cannot be constructed directly");
      return _this;
    }

    _createClass(AbortSignal, [{
      key: "aborted",
      get: function get() {
        var aborted = abortedFlags.get(this);

        if (typeof aborted !== "boolean") {
          throw new TypeError("Expected 'this' to be an 'AbortSignal' object, but got " + (this === null ? "null" : typeof this));
        }

        return aborted;
      }
    }]);

    return AbortSignal;
  }(eventTargetShim.EventTarget);

  eventTargetShim.defineEventAttribute(AbortSignal.prototype, "abort");

  function createAbortSignal() {
    var signal = Object.create(AbortSignal.prototype);
    eventTargetShim.EventTarget.call(signal);
    abortedFlags.set(signal, false);
    return signal;
  }

  function abortSignal(signal) {
    if (abortedFlags.get(signal) !== false) {
      return;
    }

    abortedFlags.set(signal, true);
    signal.dispatchEvent({
      type: "abort"
    });
  }

  var abortedFlags = new WeakMap();
  Object.defineProperties(AbortSignal.prototype, {
    aborted: {
      enumerable: true
    }
  });

  if (typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag") === "symbol") {
    Object.defineProperty(AbortSignal.prototype, typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag", {
      configurable: true,
      value: "AbortSignal"
    });
  }

  var AbortController = function () {
    function AbortController() {
      _classCallCheck(this, AbortController);

      signals.set(this, createAbortSignal());
    }

    _createClass(AbortController, [{
      key: "abort",
      value: function abort() {
        abortSignal(getSignal(this));
      }
    }, {
      key: "signal",
      get: function get() {
        return getSignal(this);
      }
    }]);

    return AbortController;
  }();

  var signals = new WeakMap();

  function getSignal(controller) {
    var signal = signals.get(controller);

    if (signal == null) {
      throw new TypeError("Expected 'this' to be an 'AbortController' object, but got " + (controller === null ? "null" : typeof controller));
    }

    return signal;
  }

  Object.defineProperties(AbortController.prototype, {
    signal: {
      enumerable: true
    },
    abort: {
      enumerable: true
    }
  });

  if (typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag") === "symbol") {
    Object.defineProperty(AbortController.prototype, typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag", {
      configurable: true,
      value: "AbortController"
    });
  }

  exports.AbortController = AbortController;
  exports.AbortSignal = AbortSignal;
  exports.default = AbortController;
  module.exports = AbortController;
  module.exports.AbortController = module.exports["default"] = AbortController;
  module.exports.AbortSignal = AbortSignal;
},14521,[14320,14323,14371,14377,14386,14506]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (!global.alert) {
    global.alert = function (text) {
      _$$_REQUIRE(_dependencyMap[0]).alert('Alert', '' + text);
    };
  }
},14524,[10243]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('DialogManagerAndroid');

  exports.default = _default;
},14527,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _NativeDialogManagerAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  function emptyCallback() {}

  module.exports = {
    alertWithArgs: function alertWithArgs(args, callback) {
      if (!_NativeDialogManagerAndroid.default) {
        return;
      }

      _NativeDialogManagerAndroid.default.showAlert(args, emptyCallback, callback || emptyCallback);
    }
  };
},14530,[14305,14527]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillObjectProperty = _require.polyfillObjectProperty;

  var navigator = global.navigator;

  if (navigator === undefined) {
    global.navigator = navigator = {};
  }

  polyfillObjectProperty(navigator, 'product', function () {
    return 'ReactNative';
  });
},14533,[14473]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (!global.RN$Bridgeless) {
    var BatchedBridge = _$$_REQUIRE(_dependencyMap[0]);

    BatchedBridge.registerLazyCallableModule('Systrace', function () {
      return _$$_REQUIRE(_dependencyMap[1]);
    });
    BatchedBridge.registerLazyCallableModule('JSTimers', function () {
      return _$$_REQUIRE(_dependencyMap[2]);
    });
    BatchedBridge.registerLazyCallableModule('HeapCapture', function () {
      return _$$_REQUIRE(_dependencyMap[3]);
    });
    BatchedBridge.registerLazyCallableModule('SamplingProfiler', function () {
      return _$$_REQUIRE(_dependencyMap[4]);
    });
    BatchedBridge.registerLazyCallableModule('RCTLog', function () {
      return _$$_REQUIRE(_dependencyMap[5]);
    });
    BatchedBridge.registerLazyCallableModule('RCTDeviceEventEmitter', function () {
      return _$$_REQUIRE(_dependencyMap[6]);
    });
    BatchedBridge.registerLazyCallableModule('RCTNativeAppEventEmitter', function () {
      return _$$_REQUIRE(_dependencyMap[7]);
    });
    BatchedBridge.registerLazyCallableModule('GlobalPerformanceLogger', function () {
      return _$$_REQUIRE(_dependencyMap[8]);
    });
    BatchedBridge.registerLazyCallableModule('JSDevSupportModule', function () {
      return _$$_REQUIRE(_dependencyMap[9]);
    });
    {
      BatchedBridge.registerCallableModule('HMRClient', _$$_REQUIRE(_dependencyMap[10]));
    }
  }
},14536,[10045,10054,10063,14539,10261,10264,10087,10267,14548,10276,14557]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _NativeHeapCapture = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var HeapCapture = {
    captureHeap: function captureHeap(path) {
      var error = null;

      try {
        global.nativeCaptureHeap(path);
      } catch (e) {
        error = e.toString();
      }

      if (_NativeHeapCapture.default) {
        _NativeHeapCapture.default.captureComplete(path, error);
      }
    }
  };
  module.exports = HeapCapture;
},14539,[14305,14542]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('HeapCapture');

  exports.default = _default;
},14542,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('JSCSamplingProfiler');

  exports.default = _default;
},14545,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var createPerformanceLogger = _$$_REQUIRE(_dependencyMap[0]);

  var GlobalPerformanceLogger = createPerformanceLogger();
  module.exports = GlobalPerformanceLogger;
},14548,[14551]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Systrace = _$$_REQUIRE(_dependencyMap[0]);

  var infoLog = _$$_REQUIRE(_dependencyMap[1]);

  var performanceNow = global.nativeQPLTimestamp || global.nativePerformanceNow || _$$_REQUIRE(_dependencyMap[2]);

  var _cookies = {};
  var PRINT_TO_CONSOLE = false;

  function createPerformanceLogger() {
    var result = {
      _timespans: {},
      _extras: {},
      _points: {},
      addTimespan: function addTimespan(key, lengthInMs, description) {
        if (this._timespans[key]) {
          return;
        }

        this._timespans[key] = {
          description: description,
          totalTime: lengthInMs
        };
      },
      startTimespan: function startTimespan(key, description) {
        if (this._timespans[key]) {
          return;
        }

        this._timespans[key] = {
          description: description,
          startTime: performanceNow()
        };
        _cookies[key] = Systrace.beginAsyncEvent(key);
      },
      stopTimespan: function stopTimespan(key) {
        var timespan = this._timespans[key];

        if (!timespan || !timespan.startTime) {
          return;
        }

        if (timespan.endTime) {
          return;
        }

        timespan.endTime = performanceNow();
        timespan.totalTime = timespan.endTime - (timespan.startTime || 0);
        Systrace.endAsyncEvent(key, _cookies[key]);
        delete _cookies[key];
      },
      clear: function clear() {
        this._timespans = {};
        this._extras = {};
        this._points = {};
      },
      clearCompleted: function clearCompleted() {
        for (var _key in this._timespans) {
          if (this._timespans[_key].totalTime) {
            delete this._timespans[_key];
          }
        }

        this._extras = {};
        this._points = {};
      },
      clearExceptTimespans: function clearExceptTimespans(keys) {
        this._timespans = Object.keys(this._timespans).reduce(function (previous, key) {
          if (keys.indexOf(key) !== -1) {
            previous[key] = this._timespans[key];
          }

          return previous;
        }, {});
        this._extras = {};
        this._points = {};
      },
      currentTimestamp: function currentTimestamp() {
        return performanceNow();
      },
      getTimespans: function getTimespans() {
        return this._timespans;
      },
      hasTimespan: function hasTimespan(key) {
        return !!this._timespans[key];
      },
      logTimespans: function logTimespans() {},
      addTimespans: function addTimespans(newTimespans, labels) {
        for (var ii = 0, l = newTimespans.length; ii < l; ii += 2) {
          var label = labels[ii / 2];
          this.addTimespan(label, newTimespans[ii + 1] - newTimespans[ii], label);
        }
      },
      setExtra: function setExtra(key, value) {
        if (this._extras[key]) {
          return;
        }

        this._extras[key] = value;
      },
      getExtras: function getExtras() {
        return this._extras;
      },
      removeExtra: function removeExtra(key) {
        var value = this._extras[key];
        delete this._extras[key];
        return value;
      },
      logExtras: function logExtras() {},
      markPoint: function markPoint(key, timestamp) {
        var _timestamp;

        if (this._points[key]) {
          return;
        }

        this._points[key] = (_timestamp = timestamp) != null ? _timestamp : performanceNow();
      },
      getPoints: function getPoints() {
        return this._points;
      },
      logPoints: function logPoints() {},
      logEverything: function logEverything() {
        this.logTimespans();
        this.logExtras();
        this.logPoints();
      }
    };
    return result;
  }

  module.exports = createPerformanceLogger;
},14551,[10054,10273,14491]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('JSDevSupport');

  exports.default = _default;
},14554,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var HMRClientProdShim = {
    setup: function setup() {},
    enable: function enable() {},
    disable: function disable() {},
    registerBundle: function registerBundle() {},
    log: function log() {}
  };
  module.exports = HMRClientProdShim;
},14557,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function __fetchSegment(segmentId, options, callback) {
    var SegmentFetcher = _$$_REQUIRE(_dependencyMap[0]).default;

    SegmentFetcher.fetchSegment(segmentId, options, function (errorObject) {
      if (errorObject) {
        var error = new Error(errorObject.message);
        error.code = errorObject.code;
        callback(error);
      }

      callback(null);
    });
  }

  global.__fetchSegment = __fetchSegment;

  function __getSegment(segmentId, options, callback) {
    var SegmentFetcher = _$$_REQUIRE(_dependencyMap[0]).default;

    if (!SegmentFetcher.getSegment) {
      throw new Error('SegmentFetcher.getSegment must be defined');
    }

    SegmentFetcher.getSegment(segmentId, options, function (errorObject, path) {
      if (errorObject) {
        var error = new Error(errorObject.message);
        error.code = errorObject.code;
        callback(error);
      }

      callback(null, path);
    });
  }

  global.__getSegment = __getSegment;
},14560,[14563]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('SegmentFetcher');

  exports.default = _default;
},14563,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    get BatchedBridge() {
      return _$$_REQUIRE(_dependencyMap[0]);
    },

    get ExceptionsManager() {
      return _$$_REQUIRE(_dependencyMap[1]);
    },

    get Platform() {
      return _$$_REQUIRE(_dependencyMap[2]);
    },

    get RCTEventEmitter() {
      return _$$_REQUIRE(_dependencyMap[3]);
    },

    get ReactNativeViewConfigRegistry() {
      return _$$_REQUIRE(_dependencyMap[4]);
    },

    get TextInputState() {
      return _$$_REQUIRE(_dependencyMap[5]);
    },

    get UIManager() {
      return _$$_REQUIRE(_dependencyMap[6]);
    },

    get deepDiffer() {
      return _$$_REQUIRE(_dependencyMap[7]);
    },

    get deepFreezeAndThrowOnMutationInDev() {
      return _$$_REQUIRE(_dependencyMap[8]);
    },

    get flattenStyle() {
      return _$$_REQUIRE(_dependencyMap[9]);
    },

    get ReactFiberErrorDialog() {
      return _$$_REQUIRE(_dependencyMap[10]);
    }

  };
},14566,[10045,10141,10066,10282,14569,10285,10279,10288,10057,10291,14572]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var customBubblingEventTypes = {};
  var customDirectEventTypes = {};
  exports.customBubblingEventTypes = customBubblingEventTypes;
  exports.customDirectEventTypes = customDirectEventTypes;
  var viewConfigCallbacks = new Map();
  var viewConfigs = new Map();

  function processEventTypes(viewConfig) {
    var bubblingEventTypes = viewConfig.bubblingEventTypes,
        directEventTypes = viewConfig.directEventTypes;

    if (bubblingEventTypes != null) {
      for (var _topLevelType in bubblingEventTypes) {
        if (customBubblingEventTypes[_topLevelType] == null) {
          customBubblingEventTypes[_topLevelType] = bubblingEventTypes[_topLevelType];
        }
      }
    }

    if (directEventTypes != null) {
      for (var _topLevelType2 in directEventTypes) {
        if (customDirectEventTypes[_topLevelType2] == null) {
          customDirectEventTypes[_topLevelType2] = directEventTypes[_topLevelType2];
        }
      }
    }
  }

  exports.register = function (name, callback) {
    invariant(!viewConfigCallbacks.has(name), 'Tried to register two views with the same name %s', name);
    viewConfigCallbacks.set(name, callback);
    return name;
  };

  exports.get = function (name) {
    var viewConfig;

    if (!viewConfigs.has(name)) {
      var callback = viewConfigCallbacks.get(name);

      if (typeof callback !== 'function') {
        invariant(false, 'View config not found for name %s.%s', name, typeof name[0] === 'string' && /[a-z]/.test(name[0]) ? ' Make sure to start component names with a capital letter.' : '');
      }

      viewConfigCallbacks.set(name, null);
      viewConfig = callback();
      processEventTypes(viewConfig);
      viewConfigs.set(name, viewConfig);
    } else {
      viewConfig = viewConfigs.get(name);
    }

    invariant(viewConfig, 'View config not found for name %s', name);
    return viewConfig;
  };
},14569,[14326]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _ExceptionsManager = _$$_REQUIRE(_dependencyMap[0]);

  function showErrorDialog(capturedError) {
    var componentStack = capturedError.componentStack,
        error = capturedError.error;
    var errorToHandle;

    if (error instanceof Error) {
      errorToHandle = error;
    } else if (typeof error === 'string') {
      errorToHandle = new _ExceptionsManager.SyntheticError(error);
    } else {
      errorToHandle = new _ExceptionsManager.SyntheticError('Unspecified error');
    }

    try {
      errorToHandle.componentStack = componentStack;
    } catch (e) {}

    (0, _ExceptionsManager.handleException)(errorToHandle, false);
    return false;
  }

  module.exports = {
    showErrorDialog: showErrorDialog
  };
},14572,[10141]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  {
    module.exports = _$$_REQUIRE(_dependencyMap[0]);
  }
},14575,[14578]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /** @license React v0.15.0
   * scheduler.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _d = undefined,
      e = undefined,
      g = undefined,
      m = undefined,
      n = undefined;
  exports.unstable_now = undefined;
  exports.unstable_forceFrameRate = undefined;

  if ("undefined" === typeof window || "function" !== typeof MessageChannel) {
    var p = null,
        q = null,
        r = function r() {
      if (null !== p) try {
        var a = exports.unstable_now();
        p(true, a);
        p = null;
      } catch (b) {
        throw setTimeout(r, 0), b;
      }
    };

    exports.unstable_now = function () {
      return Date.now();
    };

    _d = function d(a) {
      null !== p ? setTimeout(_d, 0, a) : (p = a, setTimeout(r, 0));
    };

    e = function e(a, b) {
      q = setTimeout(a, b);
    };

    g = function g() {
      clearTimeout(q);
    };

    m = function m() {
      return false;
    };

    n = exports.unstable_forceFrameRate = function () {};
  } else {
    var t = window.performance,
        u = window.Date,
        v = window.setTimeout,
        w = window.clearTimeout,
        x = window.requestAnimationFrame,
        y = window.cancelAnimationFrame;
    "undefined" !== typeof console && ("function" !== typeof x && undefined, "function" !== typeof y && undefined);
    exports.unstable_now = "object" === typeof t && "function" === typeof t.now ? function () {
      return t.now();
    } : function () {
      return u.now();
    };
    var z = false,
        A = null,
        B = -1,
        C = -1,
        D = 33.33,
        E = -1,
        F = -1,
        G = 0,
        H = false;

    m = function m() {
      return exports.unstable_now() >= G;
    };

    n = function n() {};

    exports.unstable_forceFrameRate = function (a) {
      0 > a || 125 < a ? undefined : 0 < a ? (D = Math.floor(1E3 / a), H = true) : (D = 33.33, H = false);
    };

    var J = function J() {
      if (null !== A) {
        var a = exports.unstable_now(),
            b = 0 < G - a;

        try {
          A(b, a) || (A = null);
        } catch (c) {
          throw I.postMessage(null), c;
        }
      }
    },
        K = new MessageChannel(),
        I = K.port2;

    K.port1.onmessage = J;

    var L = function L(a) {
      if (null === A) F = E = -1, z = false;else {
        z = true;
        x(function (a) {
          w(B);
          L(a);
        });

        var b = function b() {
          G = exports.unstable_now() + D / 2;
          J();
          B = v(b, 3 * D);
        };

        B = v(b, 3 * D);

        if (-1 !== E && .1 < a - E) {
          var c = a - E;
          !H && -1 !== F && c < D && F < D && (D = c < F ? F : c, 8.33 > D && (D = 8.33));
          F = c;
        }

        E = a;
        G = a + D;
        I.postMessage(null);
      }
    };

    _d = function _d(a) {
      A = a;
      z || (z = true, x(function (a) {
        L(a);
      }));
    };

    e = function e(a, b) {
      C = v(function () {
        a(exports.unstable_now());
      }, b);
    };

    g = function g() {
      w(C);
      C = -1;
    };
  }

  var M = null,
      N = null,
      O = null,
      P = 3,
      Q = false,
      R = false,
      S = false;

  function T(a, b) {
    var c = a.next;
    if (c === a) M = null;else {
      a === M && (M = c);
      var f = a.previous;
      f.next = c;
      c.previous = f;
    }
    a.next = a.previous = null;
    c = a.callback;
    f = P;
    var l = O;
    P = a.priorityLevel;
    O = a;

    try {
      var h = a.expirationTime <= b;

      switch (P) {
        case 1:
          var k = c(h);
          break;

        case 2:
          k = c(h);
          break;

        case 3:
          k = c(h);
          break;

        case 4:
          k = c(h);
          break;

        case 5:
          k = c(h);
      }
    } catch (Z) {
      throw Z;
    } finally {
      P = f, O = l;
    }

    if ("function" === typeof k) if (b = a.expirationTime, a.callback = k, null === M) M = a.next = a.previous = a;else {
      k = null;
      h = M;

      do {
        if (b <= h.expirationTime) {
          k = h;
          break;
        }

        h = h.next;
      } while (h !== M);

      null === k ? k = M : k === M && (M = a);
      b = k.previous;
      b.next = k.previous = a;
      a.next = k;
      a.previous = b;
    }
  }

  function U(a) {
    if (null !== N && N.startTime <= a) {
      do {
        var b = N,
            c = b.next;
        if (b === c) N = null;else {
          N = c;
          var f = b.previous;
          f.next = c;
          c.previous = f;
        }
        b.next = b.previous = null;
        V(b, b.expirationTime);
      } while (null !== N && N.startTime <= a);
    }
  }

  function W(a) {
    S = false;
    U(a);
    R || (null !== M ? (R = true, _d(X)) : null !== N && e(W, N.startTime - a));
  }

  function X(a, b) {
    R = false;
    S && (S = false, g());
    U(b);
    Q = true;

    try {
      if (!a) for (; null !== M && M.expirationTime <= b;) {
        T(M, b), b = exports.unstable_now(), U(b);
      } else if (null !== M) {
        do {
          T(M, b), b = exports.unstable_now(), U(b);
        } while (null !== M && !m());
      }
      if (null !== M) return true;
      null !== N && e(W, N.startTime - b);
      return false;
    } finally {
      Q = false;
    }
  }

  function Y(a) {
    switch (a) {
      case 1:
        return -1;

      case 2:
        return 250;

      case 5:
        return 1073741823;

      case 4:
        return 1E4;

      default:
        return 5E3;
    }
  }

  function V(a, b) {
    if (null === M) M = a.next = a.previous = a;else {
      var c = null,
          f = M;

      do {
        if (b < f.expirationTime) {
          c = f;
          break;
        }

        f = f.next;
      } while (f !== M);

      null === c ? c = M : c === M && (M = a);
      b = c.previous;
      b.next = c.previous = a;
      a.next = c;
      a.previous = b;
    }
  }

  var aa = n;
  exports.unstable_ImmediatePriority = 1;
  exports.unstable_UserBlockingPriority = 2;
  exports.unstable_NormalPriority = 3;
  exports.unstable_IdlePriority = 5;
  exports.unstable_LowPriority = 4;

  exports.unstable_runWithPriority = function (a, b) {
    switch (a) {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        break;

      default:
        a = 3;
    }

    var c = P;
    P = a;

    try {
      return b();
    } finally {
      P = c;
    }
  };

  exports.unstable_next = function (a) {
    switch (P) {
      case 1:
      case 2:
      case 3:
        var b = 3;
        break;

      default:
        b = P;
    }

    var c = P;
    P = b;

    try {
      return a();
    } finally {
      P = c;
    }
  };

  exports.unstable_scheduleCallback = function (a, b, c) {
    var f = exports.unstable_now();

    if ("object" === typeof c && null !== c) {
      var l = c.delay;
      l = "number" === typeof l && 0 < l ? f + l : f;
      c = "number" === typeof c.timeout ? c.timeout : Y(a);
    } else c = Y(a), l = f;

    c = l + c;
    a = {
      callback: b,
      priorityLevel: a,
      startTime: l,
      expirationTime: c,
      next: null,
      previous: null
    };

    if (l > f) {
      c = l;
      if (null === N) N = a.next = a.previous = a;else {
        b = null;
        var h = N;

        do {
          if (c < h.startTime) {
            b = h;
            break;
          }

          h = h.next;
        } while (h !== N);

        null === b ? b = N : b === N && (N = a);
        c = b.previous;
        c.next = b.previous = a;
        a.next = b;
        a.previous = c;
      }
      null === M && N === a && (S ? g() : S = true, e(W, l - f));
    } else V(a, c), R || Q || (R = true, _d(X));

    return a;
  };

  exports.unstable_cancelCallback = function (a) {
    var b = a.next;

    if (null !== b) {
      if (a === b) a === M ? M = null : a === N && (N = null);else {
        a === M ? M = b : a === N && (N = b);
        var c = a.previous;
        c.next = b;
        b.previous = c;
      }
      a.next = a.previous = null;
    }
  };

  exports.unstable_wrapCallback = function (a) {
    var b = P;
    return function () {
      var c = P;
      P = b;

      try {
        return a.apply(this, arguments);
      } finally {
        P = c;
      }
    };
  };

  exports.unstable_getCurrentPriorityLevel = function () {
    return P;
  };

  exports.unstable_shouldYield = function () {
    var a = exports.unstable_now();
    U(a);
    return null !== O && null !== M && M.startTime <= a && M.expirationTime < O.expirationTime || m();
  };

  exports.unstable_requestPaint = aa;

  exports.unstable_continueExecution = function () {
    R || Q || (R = true, _d(X));
  };

  exports.unstable_pauseExecution = function () {};

  exports.unstable_getFirstCallbackNode = function () {
    return M;
  };
},14578,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactNativeViewViewConfigAndroid = {
    uiViewClassName: 'RCTView',
    bubblingEventTypes: {
      topSelect: {
        phasedRegistrationNames: {
          bubbled: 'onSelect',
          captured: 'onSelectCapture'
        }
      }
    },
    directEventTypes: {
      topClick: {
        registrationName: 'onClick'
      },
      topContentSizeChange: {
        registrationName: 'onContentSizeChange'
      },
      topLoadingError: {
        registrationName: 'onLoadingError'
      },
      topLoadingFinish: {
        registrationName: 'onLoadingFinish'
      },
      topLoadingStart: {
        registrationName: 'onLoadingStart'
      },
      topMessage: {
        registrationName: 'onMessage'
      },
      topMomentumScrollBegin: {
        registrationName: 'onMomentumScrollBegin'
      },
      topMomentumScrollEnd: {
        registrationName: 'onMomentumScrollEnd'
      },
      topScroll: {
        registrationName: 'onScroll'
      },
      topScrollBeginDrag: {
        registrationName: 'onScrollBeginDrag'
      },
      topScrollEndDrag: {
        registrationName: 'onScrollEndDrag'
      },
      topSelectionChange: {
        registrationName: 'onSelectionChange'
      }
    },
    validAttributes: {
      hasTVPreferredFocus: true,
      focusable: true,
      nativeBackgroundAndroid: true,
      nativeForegroundAndroid: true,
      nextFocusDown: true,
      nextFocusForward: true,
      nextFocusLeft: true,
      nextFocusRight: true,
      nextFocusUp: true
    }
  };
  module.exports = ReactNativeViewViewConfigAndroid;
},14581,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _verifyComponentAttributeEquivalence = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var ReactNativeViewConfigRegistry = _$$_REQUIRE(_dependencyMap[3]);

  var ReactNativeViewViewConfig = _$$_REQUIRE(_dependencyMap[4]);

  function registerGeneratedViewConfig(componentName, viewConfig) {
    var mergedViewConfig = {
      uiViewClassName: componentName,
      Commands: {},
      bubblingEventTypes: (0, _objectSpread2.default)({}, ReactNativeViewViewConfig.bubblingEventTypes, viewConfig.bubblingEventTypes || {}),
      directEventTypes: (0, _objectSpread2.default)({}, ReactNativeViewViewConfig.directEventTypes, viewConfig.directEventTypes || {}),
      validAttributes: (0, _objectSpread2.default)({}, ReactNativeViewViewConfig.validAttributes, viewConfig.validAttributes || {})
    };
    ReactNativeViewConfigRegistry.register(componentName, function () {
      (0, _verifyComponentAttributeEquivalence.default)(componentName, mergedViewConfig);
      return mergedViewConfig;
    });
  }

  module.exports = registerGeneratedViewConfig;
},14584,[14305,14314,14587,14569,14590]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.lefthandObjectDiff = lefthandObjectDiff;
  exports.getConfigWithoutViewProps = getConfigWithoutViewProps;
  exports.stringifyViewConfig = stringifyViewConfig;
  exports.default = undefined;

  var _ReactNativeViewViewConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var getNativeComponentAttributes = _$$_REQUIRE(_dependencyMap[2]);

  var IGNORED_KEYS = ['transform', 'hitSlop'];

  function verifyComponentAttributeEquivalence(componentName, config) {}

  function lefthandObjectDiff(leftObj, rightObj) {
    var differentKeys = {};

    function compare(leftItem, rightItem, key) {
      if (typeof leftItem !== typeof rightItem && leftItem != null) {
        differentKeys[key] = rightItem;
        return;
      }

      if (typeof leftItem === 'object') {
        var objDiff = lefthandObjectDiff(leftItem, rightItem);

        if (Object.keys(objDiff).length > 1) {
          differentKeys[key] = objDiff;
        }

        return;
      }

      if (leftItem !== rightItem) {
        differentKeys[key] = rightItem;
        return;
      }
    }

    for (var key in leftObj) {
      if (IGNORED_KEYS.includes(key)) {
        continue;
      }

      if (!rightObj) {
        differentKeys[key] = {};
      } else if (leftObj.hasOwnProperty(key)) {
        compare(leftObj[key], rightObj[key], key);
      }
    }

    return differentKeys;
  }

  function getConfigWithoutViewProps(viewConfig, propName) {
    if (!viewConfig[propName]) {
      return {};
    }

    return Object.keys(viewConfig[propName]).filter(function (prop) {
      return !_ReactNativeViewViewConfig.default[propName][prop];
    }).reduce(function (obj, prop) {
      obj[prop] = viewConfig[propName][prop];
      return obj;
    }, {});
  }

  function stringifyViewConfig(viewConfig) {
    return JSON.stringify(viewConfig, function (key, val) {
      if (typeof val === 'function') {
        return "\u0192 " + val.name;
      }

      return val;
    }, 2);
  }

  var _default = verifyComponentAttributeEquivalence;
  exports.default = _default;
},14587,[14305,14590,14593]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _ReactNativeViewViewConfigAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var ReactNativeViewConfig = {
    uiViewClassName: 'RCTView',
    baseModuleName: null,
    Manager: 'ViewManager',
    Commands: {},
    Constants: {},
    bubblingEventTypes: (0, _objectSpread2.default)({}, _ReactNativeViewViewConfigAndroid.default.bubblingEventTypes, {
      topBlur: {
        phasedRegistrationNames: {
          bubbled: 'onBlur',
          captured: 'onBlurCapture'
        }
      },
      topChange: {
        phasedRegistrationNames: {
          bubbled: 'onChange',
          captured: 'onChangeCapture'
        }
      },
      topEndEditing: {
        phasedRegistrationNames: {
          bubbled: 'onEndEditing',
          captured: 'onEndEditingCapture'
        }
      },
      topFocus: {
        phasedRegistrationNames: {
          bubbled: 'onFocus',
          captured: 'onFocusCapture'
        }
      },
      topKeyPress: {
        phasedRegistrationNames: {
          bubbled: 'onKeyPress',
          captured: 'onKeyPressCapture'
        }
      },
      topPress: {
        phasedRegistrationNames: {
          bubbled: 'onPress',
          captured: 'onPressCapture'
        }
      },
      topSubmitEditing: {
        phasedRegistrationNames: {
          bubbled: 'onSubmitEditing',
          captured: 'onSubmitEditingCapture'
        }
      },
      topTouchCancel: {
        phasedRegistrationNames: {
          bubbled: 'onTouchCancel',
          captured: 'onTouchCancelCapture'
        }
      },
      topTouchEnd: {
        phasedRegistrationNames: {
          bubbled: 'onTouchEnd',
          captured: 'onTouchEndCapture'
        }
      },
      topTouchMove: {
        phasedRegistrationNames: {
          bubbled: 'onTouchMove',
          captured: 'onTouchMoveCapture'
        }
      },
      topTouchStart: {
        phasedRegistrationNames: {
          bubbled: 'onTouchStart',
          captured: 'onTouchStartCapture'
        }
      }
    }),
    directEventTypes: (0, _objectSpread2.default)({}, _ReactNativeViewViewConfigAndroid.default.directEventTypes, {
      topAccessibilityAction: {
        registrationName: 'onAccessibilityAction'
      },
      topAccessibilityEscape: {
        registrationName: 'onAccessibilityEscape'
      },
      topAccessibilityTap: {
        registrationName: 'onAccessibilityTap'
      },
      topLayout: {
        registrationName: 'onLayout'
      },
      topMagicTap: {
        registrationName: 'onMagicTap'
      },
      onGestureHandlerEvent: {
        registrationName: 'onGestureHandlerEvent'
      },
      onGestureHandlerStateChange: {
        registrationName: 'onGestureHandlerStateChange'
      }
    }),
    validAttributes: (0, _objectSpread2.default)({}, _ReactNativeViewViewConfigAndroid.default.validAttributes, {
      accessibilityActions: true,
      accessibilityElementsHidden: true,
      accessibilityHint: true,
      accessibilityIgnoresInvertColors: true,
      accessibilityLabel: true,
      accessibilityLiveRegion: true,
      accessibilityRole: true,
      accessibilityStates: true,
      accessibilityState: true,
      accessibilityViewIsModal: true,
      accessible: true,
      alignContent: true,
      alignItems: true,
      alignSelf: true,
      aspectRatio: true,
      backfaceVisibility: true,
      backgroundColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderBottomColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderBottomEndRadius: true,
      borderBottomLeftRadius: true,
      borderBottomRightRadius: true,
      borderBottomStartRadius: true,
      borderBottomWidth: true,
      borderColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderEndColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderEndWidth: true,
      borderLeftColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderLeftWidth: true,
      borderRadius: true,
      borderRightColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderRightWidth: true,
      borderStartColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderStartWidth: true,
      borderStyle: true,
      borderTopColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderTopEndRadius: true,
      borderTopLeftRadius: true,
      borderTopRightRadius: true,
      borderTopStartRadius: true,
      borderTopWidth: true,
      borderWidth: true,
      bottom: true,
      clickable: true,
      collapsable: true,
      direction: true,
      display: true,
      elevation: true,
      end: true,
      flex: true,
      flexBasis: true,
      flexDirection: true,
      flexGrow: true,
      flexShrink: true,
      flexWrap: true,
      height: true,
      hitSlop: {
        diff: _$$_REQUIRE(_dependencyMap[4])
      },
      importantForAccessibility: true,
      justifyContent: true,
      left: true,
      margin: true,
      marginBottom: true,
      marginEnd: true,
      marginHorizontal: true,
      marginLeft: true,
      marginRight: true,
      marginStart: true,
      marginTop: true,
      marginVertical: true,
      maxHeight: true,
      maxWidth: true,
      minHeight: true,
      minWidth: true,
      nativeID: true,
      needsOffscreenAlphaCompositing: true,
      onAccessibilityAction: true,
      onAccessibilityEscape: true,
      onAccessibilityTap: true,
      onLayout: true,
      onMagicTap: true,
      opacity: true,
      overflow: true,
      padding: true,
      paddingBottom: true,
      paddingEnd: true,
      paddingHorizontal: true,
      paddingLeft: true,
      paddingRight: true,
      paddingStart: true,
      paddingTop: true,
      paddingVertical: true,
      pointerEvents: true,
      position: true,
      removeClippedSubviews: true,
      renderToHardwareTextureAndroid: true,
      right: true,
      rotation: true,
      scaleX: true,
      scaleY: true,
      shadowColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      shadowOffset: {
        diff: _$$_REQUIRE(_dependencyMap[5])
      },
      shadowOpacity: true,
      shadowRadius: true,
      shouldRasterizeIOS: true,
      start: true,
      style: {
        alignContent: true,
        alignItems: true,
        alignSelf: true,
        aspectRatio: true,
        backfaceVisibility: true,
        backgroundColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderBottomColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderBottomEndRadius: true,
        borderBottomLeftRadius: true,
        borderBottomRightRadius: true,
        borderBottomStartRadius: true,
        borderBottomWidth: true,
        borderColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderEndColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderEndWidth: true,
        borderLeftColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderLeftWidth: true,
        borderRadius: true,
        borderRightColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderRightWidth: true,
        borderStartColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderStartWidth: true,
        borderStyle: true,
        borderTopColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderTopEndRadius: true,
        borderTopLeftRadius: true,
        borderTopRightRadius: true,
        borderTopStartRadius: true,
        borderTopWidth: true,
        borderWidth: true,
        bottom: true,
        color: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        decomposedMatrix: true,
        direction: true,
        display: true,
        elevation: true,
        end: true,
        flex: true,
        flexBasis: true,
        flexDirection: true,
        flexGrow: true,
        flexShrink: true,
        flexWrap: true,
        fontFamily: true,
        fontSize: true,
        fontStyle: true,
        fontVariant: true,
        fontWeight: true,
        height: true,
        includeFontPadding: true,
        justifyContent: true,
        left: true,
        letterSpacing: true,
        lineHeight: true,
        margin: true,
        marginBottom: true,
        marginEnd: true,
        marginHorizontal: true,
        marginLeft: true,
        marginRight: true,
        marginStart: true,
        marginTop: true,
        marginVertical: true,
        maxHeight: true,
        maxWidth: true,
        minHeight: true,
        minWidth: true,
        opacity: true,
        overflow: true,
        overlayColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        padding: true,
        paddingBottom: true,
        paddingEnd: true,
        paddingHorizontal: true,
        paddingLeft: true,
        paddingRight: true,
        paddingStart: true,
        paddingTop: true,
        paddingVertical: true,
        position: true,
        resizeMode: true,
        right: true,
        rotation: true,
        scaleX: true,
        scaleY: true,
        shadowColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        shadowOffset: {
          diff: _$$_REQUIRE(_dependencyMap[5])
        },
        shadowOpacity: true,
        shadowRadius: true,
        start: true,
        textAlign: true,
        textAlignVertical: true,
        textDecorationColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        textDecorationLine: true,
        textDecorationStyle: true,
        textShadowColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        textShadowOffset: true,
        textShadowRadius: true,
        textTransform: true,
        tintColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        top: true,
        transform: {
          diff: _$$_REQUIRE(_dependencyMap[6])
        },
        transformMatrix: true,
        translateX: true,
        translateY: true,
        width: true,
        writingDirection: true,
        zIndex: true
      },
      testID: true,
      top: true,
      transform: {
        diff: _$$_REQUIRE(_dependencyMap[6])
      },
      translateX: true,
      translateY: true,
      width: true,
      zIndex: true
    })
  };
  module.exports = ReactNativeViewConfig;
},14590,[14305,14314,14581,10393,10408,10402,10411]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread = _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativeStyleAttributes = _$$_REQUIRE(_dependencyMap[2]);

  var UIManager = _$$_REQUIRE(_dependencyMap[3]);

  var insetsDiffer = _$$_REQUIRE(_dependencyMap[4]);

  var invariant = _$$_REQUIRE(_dependencyMap[5]);

  var matricesDiffer = _$$_REQUIRE(_dependencyMap[6]);

  var pointsDiffer = _$$_REQUIRE(_dependencyMap[7]);

  var processColor = _$$_REQUIRE(_dependencyMap[8]);

  var processColorArray = _$$_REQUIRE(_dependencyMap[9]);

  var resolveAssetSource = _$$_REQUIRE(_dependencyMap[10]);

  var sizesDiffer = _$$_REQUIRE(_dependencyMap[11]);

  var warning = _$$_REQUIRE(_dependencyMap[12]);

  function getNativeComponentAttributes(uiViewClassName) {
    var viewConfig = UIManager.getViewManagerConfig(uiViewClassName);
    invariant(viewConfig != null && viewConfig.NativeProps != null, 'requireNativeComponent: "%s" was not found in the UIManager.', uiViewClassName);
    var baseModuleName = viewConfig.baseModuleName,
        bubblingEventTypes = viewConfig.bubblingEventTypes,
        directEventTypes = viewConfig.directEventTypes;
    var nativeProps = viewConfig.NativeProps;

    while (baseModuleName) {
      var baseModule = UIManager.getViewManagerConfig(baseModuleName);

      if (!baseModule) {
        warning(false, 'Base module "%s" does not exist', baseModuleName);
        baseModuleName = null;
      } else {
        bubblingEventTypes = _objectSpread({}, baseModule.bubblingEventTypes, bubblingEventTypes);
        directEventTypes = _objectSpread({}, baseModule.directEventTypes, directEventTypes);
        nativeProps = _objectSpread({}, baseModule.NativeProps, nativeProps);
        baseModuleName = baseModule.baseModuleName;
      }
    }

    var validAttributes = {};

    for (var key in nativeProps) {
      var typeName = nativeProps[key];
      var diff = getDifferForType(typeName);
      var process = getProcessorForType(typeName);
      validAttributes[key] = diff == null && process == null ? true : {
        diff: diff,
        process: process
      };
    }

    validAttributes.style = ReactNativeStyleAttributes;

    _extends(viewConfig, {
      uiViewClassName: uiViewClassName,
      validAttributes: validAttributes,
      bubblingEventTypes: bubblingEventTypes,
      directEventTypes: directEventTypes
    });

    if (!hasAttachedDefaultEventTypes) {
      attachDefaultEventTypes(viewConfig);
      hasAttachedDefaultEventTypes = true;
    }

    return viewConfig;
  }

  var hasAttachedDefaultEventTypes = false;

  function attachDefaultEventTypes(viewConfig) {
    var constants = UIManager.getConstants();

    if (constants.ViewManagerNames || constants.LazyViewManagersEnabled) {
      viewConfig = merge(viewConfig, UIManager.getDefaultEventTypes());
    } else {
      viewConfig.bubblingEventTypes = merge(viewConfig.bubblingEventTypes, constants.genericBubblingEventTypes);
      viewConfig.directEventTypes = merge(viewConfig.directEventTypes, constants.genericDirectEventTypes);
    }
  }

  function merge(destination, source) {
    if (!source) {
      return destination;
    }

    if (!destination) {
      return source;
    }

    for (var key in source) {
      if (!source.hasOwnProperty(key)) {
        continue;
      }

      var sourceValue = source[key];

      if (destination.hasOwnProperty(key)) {
        var destinationValue = destination[key];

        if (typeof sourceValue === 'object' && typeof destinationValue === 'object') {
          sourceValue = merge(destinationValue, sourceValue);
        }
      }

      destination[key] = sourceValue;
    }

    return destination;
  }

  function getDifferForType(typeName) {
    switch (typeName) {
      case 'CATransform3D':
        return matricesDiffer;

      case 'CGPoint':
        return pointsDiffer;

      case 'CGSize':
        return sizesDiffer;

      case 'UIEdgeInsets':
        return insetsDiffer;
    }

    return null;
  }

  function getProcessorForType(typeName) {
    switch (typeName) {
      case 'CGColor':
      case 'UIColor':
        return processColor;

      case 'CGColorArray':
      case 'UIColorArray':
        return processColorArray;

      case 'CGImage':
      case 'UIImage':
      case 'RCTImageSource':
        return resolveAssetSource;

      case 'Color':
        return processColor;

      case 'ColorArray':
        return processColorArray;
    }

    return null;
  }

  module.exports = getNativeComponentAttributes;
},14593,[14344,14314,10378,10279,10408,14326,10411,10414,10393,14596,10417,10402,14332]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var processColor = _$$_REQUIRE(_dependencyMap[0]);

  function processColorArray(colors) {
    return colors == null ? null : colors.map(processColor);
  }

  module.exports = processColorArray;
},14596,[10393]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var androidScaleSuffix = {
    '0.75': 'ldpi',
    '1': 'mdpi',
    '1.5': 'hdpi',
    '2': 'xhdpi',
    '3': 'xxhdpi',
    '4': 'xxxhdpi'
  };

  function getAndroidAssetSuffix(scale) {
    if (scale.toString() in androidScaleSuffix) {
      return androidScaleSuffix[scale.toString()];
    }

    throw new Error('no such scale ' + scale.toString());
  }

  var drawableFileTypes = new Set(['gif', 'jpeg', 'jpg', 'png', 'svg', 'webp', 'xml']);

  function getAndroidResourceFolderName(asset, scale) {
    if (!drawableFileTypes.has(asset.type)) {
      return 'raw';
    }

    var suffix = getAndroidAssetSuffix(scale);

    if (!suffix) {
      throw new Error("Don't know which android drawable suffix to use for scale: " + scale + '\nAsset: ' + JSON.stringify(asset, null, '\t') + '\nPossible scales are:' + JSON.stringify(androidScaleSuffix, null, '\t'));
    }

    var androidFolder = 'drawable-' + suffix;
    return androidFolder;
  }

  function getAndroidResourceIdentifier(asset) {
    var folderPath = getBasePath(asset);
    return (folderPath + '/' + asset.name).toLowerCase().replace(/\//g, '_').replace(/([^a-z0-9_])/g, '').replace(/^assets_/, '');
  }

  function getBasePath(asset) {
    var basePath = asset.httpServerLocation;

    if (basePath[0] === '/') {
      basePath = basePath.substr(1);
    }

    return basePath;
  }

  module.exports = {
    getAndroidAssetSuffix: getAndroidAssetSuffix,
    getAndroidResourceFolderName: getAndroidResourceFolderName,
    getAndroidResourceIdentifier: getAndroidResourceIdentifier,
    getBasePath: getBasePath
  };
},14599,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('SourceCode');

  exports.default = _default;
},14602,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('AndroidProgressBar');

  exports.default = _default;
},14605,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _requireNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  function codegenNativeComponent(componentName, options) {
    var componentNameInUse = options && options.paperComponentName ? options.paperComponentName : componentName;

    if (options != null && options.paperComponentNameDeprecated != null) {
      if (_reactNative.UIManager.getViewManagerConfig(componentName)) {
        componentNameInUse = componentName;
      } else if (options.paperComponentNameDeprecated != null && _reactNative.UIManager.getViewManagerConfig(options.paperComponentNameDeprecated)) {
        componentNameInUse = options.paperComponentNameDeprecated;
      } else {
        throw new Error("Failed to find native component for either " + componentName + " or " + (options.paperComponentNameDeprecated || '(unknown)'));
      }
    }

    return (0, _requireNativeComponent.default)(componentNameInUse);
  }

  var _default = codegenNativeComponent;
  exports.default = _default;
},14608,[14305,10372,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedEdgeInsetsPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedStyleSheetPropType = _$$_REQUIRE(_dependencyMap[2]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedTextStylePropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var stylePropType = DeprecatedStyleSheetPropType(DeprecatedTextStylePropTypes);
  var DataDetectorTypes = ['phoneNumber', 'link', 'email', 'none', 'all'];
  module.exports = {
    ellipsizeMode: PropTypes.oneOf(['head', 'middle', 'tail', 'clip']),
    numberOfLines: PropTypes.number,
    textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),
    onLayout: PropTypes.func,
    onPress: PropTypes.func,
    onLongPress: PropTypes.func,
    pressRetentionOffset: DeprecatedEdgeInsetsPropType,
    selectable: PropTypes.bool,
    selectionColor: DeprecatedColorPropType,
    suppressHighlighting: PropTypes.bool,
    style: stylePropType,
    testID: PropTypes.string,
    nativeID: PropTypes.string,
    allowFontScaling: PropTypes.bool,
    maxFontSizeMultiplier: PropTypes.number,
    accessible: PropTypes.bool,
    adjustsFontSizeToFit: PropTypes.bool,
    minimumFontScale: PropTypes.number,
    disabled: PropTypes.bool,
    dataDetectorType: PropTypes.oneOf(DataDetectorTypes)
  };
},14611,[14419,14614,14617,10318,14434]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var PropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedEdgeInsetsPropType = PropTypes.shape({
    top: PropTypes.number,
    left: PropTypes.number,
    bottom: PropTypes.number,
    right: PropTypes.number
  });
  module.exports = DeprecatedEdgeInsetsPropType;
},14614,[10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var deprecatedCreateStrictShapeTypeChecker = _$$_REQUIRE(_dependencyMap[0]);

  var flattenStyle = _$$_REQUIRE(_dependencyMap[1]);

  function DeprecatedStyleSheetPropType(shape) {
    var shapePropType = deprecatedCreateStrictShapeTypeChecker(shape);
    return function (props, propName, componentName, location) {
      var newProps = props;

      if (props[propName]) {
        newProps = {};
        newProps[propName] = flattenStyle(props[propName]);
      }

      for (var _len = arguments.length, rest = new Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
        rest[_key - 4] = arguments[_key];
      }

      return shapePropType.apply(undefined, [newProps, propName, componentName, location].concat(rest));
    };
  }

  module.exports = DeprecatedStyleSheetPropType;
},14617,[14620,10291]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var merge = _$$_REQUIRE(_dependencyMap[1]);

  function deprecatedCreateStrictShapeTypeChecker(shapeTypes) {
    function checkType(isRequired, props, propName, componentName, location) {
      if (!props[propName]) {
        if (isRequired) {
          invariant(false, "Required object `" + propName + "` was not specified in " + ("`" + componentName + "`."));
        }

        return;
      }

      var propValue = props[propName];
      var propType = typeof propValue;
      var locationName = location || '(unknown)';

      if (propType !== 'object') {
        invariant(false, "Invalid " + locationName + " `" + propName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
      }

      var allKeys = merge(props[propName], shapeTypes);

      for (var _len = arguments.length, rest = new Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
        rest[_key - 5] = arguments[_key];
      }

      for (var _key2 in allKeys) {
        var checker = shapeTypes[_key2];

        if (!checker) {
          invariant(false, "Invalid props." + propName + " key `" + _key2 + "` supplied to `" + componentName + "`." + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
        }

        var error = checker.apply(undefined, [propValue, _key2, componentName, location].concat(rest));

        if (error) {
          invariant(false, error.message + '\nBad object: ' + JSON.stringify(props[propName], null, '  '));
        }
      }
    }

    function chainedCheckType(props, propName, componentName, location) {
      for (var _len2 = arguments.length, rest = new Array(_len2 > 4 ? _len2 - 4 : 0), _key3 = 4; _key3 < _len2; _key3++) {
        rest[_key3 - 4] = arguments[_key3];
      }

      return checkType.apply(undefined, [false, props, propName, componentName, location].concat(rest));
    }

    chainedCheckType.isRequired = checkType.bind(null, true);
    return chainedCheckType;
  }

  module.exports = deprecatedCreateStrictShapeTypeChecker;
},14620,[14326,10339]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = React.createContext(false);
},14623,[10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _NativeTVNavigationEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var Platform = _$$_REQUIRE(_dependencyMap[2]);

  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[3]);

  function TVEventHandler() {
    this.__nativeTVNavigationEventListener = null;
    this.__nativeTVNavigationEventEmitter = null;
  }

  TVEventHandler.prototype.enable = function (component, callback) {
    this.__nativeTVNavigationEventEmitter = new NativeEventEmitter(_NativeTVNavigationEventEmitter.default);
    this.__nativeTVNavigationEventListener = this.__nativeTVNavigationEventEmitter.addListener('onHWKeyEvent', function (data) {
      if (callback) {
        callback(component, data);
      }
    });
  };

  TVEventHandler.prototype.disable = function () {
    if (this.__nativeTVNavigationEventListener) {
      this.__nativeTVNavigationEventListener.remove();

      delete this.__nativeTVNavigationEventListener;
    }

    if (this.__nativeTVNavigationEventEmitter) {
      delete this.__nativeTVNavigationEventEmitter;
    }
  };

  module.exports = TVEventHandler;
},14626,[14305,14629,10066,10198]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('TVNavigationEventEmitter');

  exports.default = _default;
},14629,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var keyMirror = function keyMirror(obj) {
    var ret = {};
    var key;
    !(obj instanceof Object && !Array.isArray(obj)) ? invariant(false) : undefined;

    for (key in obj) {
      if (!obj.hasOwnProperty(key)) {
        continue;
      }

      ret[key] = key;
    }

    return ret;
  };

  module.exports = keyMirror;
},14632,[14635]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var validateFormat = function (format) {
    if (format === undefined) {
      throw new Error('invariant(...): Second argument must be a string.');
    }
  };

  function invariant(condition, format) {
    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    validateFormat(format);

    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
      } else {
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return String(args[argIndex++]);
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1;
      throw error;
    }
  }

  module.exports = invariant;
},14635,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function nullthrows(x, message) {
    if (x != null) {
      return x;
    }

    var error = new Error(message !== undefined ? message : 'Got unexpected ' + x);
    error.framesToPop = 1;
    throw error;
  }

  module.exports = nullthrows;
  module.exports.default = nullthrows;
  Object.defineProperty(module.exports, '__esModule', {
    value: true
  });
},14638,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = {
    DeprecatedAccessibilityRoles: ['none', 'button', 'link', 'search', 'image', 'keyboardkey', 'text', 'adjustable', 'imagebutton', 'header', 'summary', 'alert', 'checkbox', 'combobox', 'menu', 'menubar', 'menuitem', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'spinbutton', 'switch', 'tab', 'tablist', 'timer', 'toolbar'],
    DeprecatedAccessibilityStates: ['selected', 'disabled', 'checked', 'unchecked', 'busy', 'expanded', 'collapsed', 'hasPopup']
  };
},14641,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var _require = _$$_REQUIRE(_dependencyMap[1]),
      AnimatedEvent = _require.AnimatedEvent,
      attachNativeEvent = _require.attachNativeEvent;

  var AnimatedImplementation = _$$_REQUIRE(_dependencyMap[2]);

  var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[3]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[4]);

  var AnimatedProps = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedValue = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedValueXY = _$$_REQUIRE(_dependencyMap[7]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[8]);

  var emptyAnimation = {
    start: function start() {},
    stop: function stop() {},
    reset: function reset() {},
    _startNativeLoop: function _startNativeLoop() {},
    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return false;
    }
  };

  var spring = function spring(value, config) {
    var anyValue = value;
    return _objectSpread({}, emptyAnimation, {
      start: function start(callback) {
        anyValue.setValue(config.toValue);
        callback && callback({
          finished: true
        });
      }
    });
  };

  var timing = function timing(value, config) {
    var anyValue = value;
    return _objectSpread({}, emptyAnimation, {
      start: function start(callback) {
        anyValue.setValue(config.toValue);
        callback && callback({
          finished: true
        });
      }
    });
  };

  var decay = function decay(value, config) {
    return emptyAnimation;
  };

  var sequence = function sequence(animations) {
    return emptyAnimation;
  };

  var parallel = function parallel(animations, config) {
    return emptyAnimation;
  };

  var delay = function delay(time) {
    return emptyAnimation;
  };

  var stagger = function stagger(time, animations) {
    return emptyAnimation;
  };

  var loop = function loop(animation) {
    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        _ref$iterations = _ref.iterations,
        iterations = _ref$iterations === undefined ? -1 : _ref$iterations;

    return emptyAnimation;
  };

  var event = function event(argMapping, config) {
    return null;
  };

  module.exports = {
    Value: AnimatedValue,
    ValueXY: AnimatedValueXY,
    Interpolation: AnimatedInterpolation,
    Node: AnimatedNode,
    decay: decay,
    timing: timing,
    spring: spring,
    add: AnimatedImplementation.add,
    subtract: AnimatedImplementation.subtract,
    divide: AnimatedImplementation.divide,
    multiply: AnimatedImplementation.multiply,
    modulo: AnimatedImplementation.modulo,
    diffClamp: AnimatedImplementation.diffClamp,
    delay: delay,
    sequence: sequence,
    parallel: parallel,
    stagger: stagger,
    loop: loop,
    event: event,
    createAnimatedComponent: createAnimatedComponent,
    attachNativeEvent: attachNativeEvent,
    forkEvent: AnimatedImplementation.forkEvent,
    unforkEvent: AnimatedImplementation.unforkEvent,
    Event: AnimatedEvent,
    __PropsOnlyForTests: AnimatedProps
  };
},14644,[14314,10528,10525,10534,10537,10567,10531,10579,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('NativeAnimatedModule');

  exports.default = _default;
},14647,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _get = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[7]);

  var AnimatedValue = _$$_REQUIRE(_dependencyMap[8]);

  var AnimatedWithChildren = _$$_REQUIRE(_dependencyMap[9]);

  var AnimatedSubtraction = function (_AnimatedWithChildren) {
    _inherits(AnimatedSubtraction, _AnimatedWithChildren);

    function AnimatedSubtraction(a, b) {
      var _this;

      _classCallCheck(this, AnimatedSubtraction);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedSubtraction).call(this));
      _this._a = typeof a === 'number' ? new AnimatedValue(a) : a;
      _this._b = typeof b === 'number' ? new AnimatedValue(b) : b;
      return _this;
    }

    _createClass(AnimatedSubtraction, [{
      key: "__makeNative",
      value: function __makeNative() {
        this._a.__makeNative();

        this._b.__makeNative();

        _get(_getPrototypeOf(AnimatedSubtraction.prototype), "__makeNative", this).call(this);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        return this._a.__getValue() - this._b.__getValue();
      }
    }, {
      key: "interpolate",
      value: function interpolate(config) {
        return new AnimatedInterpolation(this, config);
      }
    }, {
      key: "__attach",
      value: function __attach() {
        this._a.__addChild(this);

        this._b.__addChild(this);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        this._a.__removeChild(this);

        this._b.__removeChild(this);

        _get(_getPrototypeOf(AnimatedSubtraction.prototype), "__detach", this).call(this);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        return {
          type: 'subtraction',
          input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
        };
      }
    }]);

    return AnimatedSubtraction;
  }(AnimatedWithChildren);

  module.exports = AnimatedSubtraction;
},14650,[14320,14323,14371,14377,14380,14386,10534,10537,10531,10543]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var FlatList = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(FlatList, {
    scrollEventThrottle: 0.0001
  });
},14653,[10657,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('AndroidSwipeRefreshLayout');

  exports.default = _default;
},14656,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('PullToRefreshView', {
    paperComponentName: 'RCTRefreshControl'
  });

  exports.default = _default;
},14659,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('FrameRateLogger');

  exports.default = _default;
},14662,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('KeyboardObserver');

  exports.default = _default;
},14665,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var OUTER_PROPS = _extends(Object.create(null), {
    margin: true,
    marginHorizontal: true,
    marginVertical: true,
    marginBottom: true,
    marginTop: true,
    marginLeft: true,
    marginRight: true,
    flex: true,
    flexGrow: true,
    flexShrink: true,
    flexBasis: true,
    alignSelf: true,
    height: true,
    minHeight: true,
    maxHeight: true,
    width: true,
    minWidth: true,
    maxWidth: true,
    position: true,
    left: true,
    right: true,
    bottom: true,
    top: true
  });

  function splitLayoutProps(props) {
    var inner = {};
    var outer = {};

    if (props) {
      Object.keys(props).forEach(function (k) {
        var value = props[k];

        if (OUTER_PROPS[k]) {
          outer[k] = value;
        } else {
          inner[k] = value;
        }
      });
    }

    return {
      outer: outer,
      inner: inner
    };
  }

  module.exports = splitLayoutProps;
},14668,[14344]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Image = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(Image);
},14671,[10606,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]);
},14674,[14677]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var runtime = function (exports) {
    "use strict";

    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var undefined;
    var $Symbol = typeof Symbol === "function" ? Symbol : {};
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

    function wrap(innerFn, outerFn, self, tryLocsList) {
      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
      var generator = Object.create(protoGenerator.prototype);
      var context = new Context(tryLocsList || []);
      generator._invoke = makeInvokeMethod(innerFn, self, context);
      return generator;
    }

    exports.wrap = wrap;

    function tryCatch(fn, obj, arg) {
      try {
        return {
          type: "normal",
          arg: fn.call(obj, arg)
        };
      } catch (err) {
        return {
          type: "throw",
          arg: err
        };
      }
    }

    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";
    var ContinueSentinel = {};

    function Generator() {}

    function GeneratorFunction() {}

    function GeneratorFunctionPrototype() {}

    var IteratorPrototype = {};

    IteratorPrototype[iteratorSymbol] = function () {
      return this;
    };

    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
      IteratorPrototype = NativeIteratorPrototype;
    }

    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
    GeneratorFunctionPrototype.constructor = GeneratorFunction;
    GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

    function defineIteratorMethods(prototype) {
      ["next", "throw", "return"].forEach(function (method) {
        prototype[method] = function (arg) {
          return this._invoke(method, arg);
        };
      });
    }

    exports.isGeneratorFunction = function (genFun) {
      var ctor = typeof genFun === "function" && genFun.constructor;
      return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
    };

    exports.mark = function (genFun) {
      if (Object.setPrototypeOf) {
        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
      } else {
        genFun.__proto__ = GeneratorFunctionPrototype;

        if (!(toStringTagSymbol in genFun)) {
          genFun[toStringTagSymbol] = "GeneratorFunction";
        }
      }

      genFun.prototype = Object.create(Gp);
      return genFun;
    };

    exports.awrap = function (arg) {
      return {
        __await: arg
      };
    };

    function AsyncIterator(generator, PromiseImpl) {
      function invoke(method, arg, resolve, reject) {
        var record = tryCatch(generator[method], generator, arg);

        if (record.type === "throw") {
          reject(record.arg);
        } else {
          var result = record.arg;
          var value = result.value;

          if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
            return PromiseImpl.resolve(value.__await).then(function (value) {
              invoke("next", value, resolve, reject);
            }, function (err) {
              invoke("throw", err, resolve, reject);
            });
          }

          return PromiseImpl.resolve(value).then(function (unwrapped) {
            result.value = unwrapped;
            resolve(result);
          }, function (error) {
            return invoke("throw", error, resolve, reject);
          });
        }
      }

      var previousPromise;

      function enqueue(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }

        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }

      this._invoke = enqueue;
    }

    defineIteratorMethods(AsyncIterator.prototype);

    AsyncIterator.prototype[asyncIteratorSymbol] = function () {
      return this;
    };

    exports.AsyncIterator = AsyncIterator;

    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
      if (PromiseImpl === undefined) PromiseImpl = Promise;
      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
      return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
        return result.done ? result.value : iter.next();
      });
    };

    function makeInvokeMethod(innerFn, self, context) {
      var state = GenStateSuspendedStart;
      return function invoke(method, arg) {
        if (state === GenStateExecuting) {
          throw new Error("Generator is already running");
        }

        if (state === GenStateCompleted) {
          if (method === "throw") {
            throw arg;
          }

          return doneResult();
        }

        context.method = method;
        context.arg = arg;

        while (true) {
          var delegate = context.delegate;

          if (delegate) {
            var delegateResult = maybeInvokeDelegate(delegate, context);

            if (delegateResult) {
              if (delegateResult === ContinueSentinel) continue;
              return delegateResult;
            }
          }

          if (context.method === "next") {
            context.sent = context._sent = context.arg;
          } else if (context.method === "throw") {
            if (state === GenStateSuspendedStart) {
              state = GenStateCompleted;
              throw context.arg;
            }

            context.dispatchException(context.arg);
          } else if (context.method === "return") {
            context.abrupt("return", context.arg);
          }

          state = GenStateExecuting;
          var record = tryCatch(innerFn, self, context);

          if (record.type === "normal") {
            state = context.done ? GenStateCompleted : GenStateSuspendedYield;

            if (record.arg === ContinueSentinel) {
              continue;
            }

            return {
              value: record.arg,
              done: context.done
            };
          } else if (record.type === "throw") {
            state = GenStateCompleted;
            context.method = "throw";
            context.arg = record.arg;
          }
        }
      };
    }

    function maybeInvokeDelegate(delegate, context) {
      var method = delegate.iterator[context.method];

      if (method === undefined) {
        context.delegate = null;

        if (context.method === "throw") {
          if (delegate.iterator["return"]) {
            context.method = "return";
            context.arg = undefined;
            maybeInvokeDelegate(delegate, context);

            if (context.method === "throw") {
              return ContinueSentinel;
            }
          }

          context.method = "throw";
          context.arg = new TypeError("The iterator does not provide a 'throw' method");
        }

        return ContinueSentinel;
      }

      var record = tryCatch(method, delegate.iterator, context.arg);

      if (record.type === "throw") {
        context.method = "throw";
        context.arg = record.arg;
        context.delegate = null;
        return ContinueSentinel;
      }

      var info = record.arg;

      if (!info) {
        context.method = "throw";
        context.arg = new TypeError("iterator result is not an object");
        context.delegate = null;
        return ContinueSentinel;
      }

      if (info.done) {
        context[delegate.resultName] = info.value;
        context.next = delegate.nextLoc;

        if (context.method !== "return") {
          context.method = "next";
          context.arg = undefined;
        }
      } else {
        return info;
      }

      context.delegate = null;
      return ContinueSentinel;
    }

    defineIteratorMethods(Gp);
    Gp[toStringTagSymbol] = "Generator";

    Gp[iteratorSymbol] = function () {
      return this;
    };

    Gp.toString = function () {
      return "[object Generator]";
    };

    function pushTryEntry(locs) {
      var entry = {
        tryLoc: locs[0]
      };

      if (1 in locs) {
        entry.catchLoc = locs[1];
      }

      if (2 in locs) {
        entry.finallyLoc = locs[2];
        entry.afterLoc = locs[3];
      }

      this.tryEntries.push(entry);
    }

    function resetTryEntry(entry) {
      var record = entry.completion || {};
      record.type = "normal";
      delete record.arg;
      entry.completion = record;
    }

    function Context(tryLocsList) {
      this.tryEntries = [{
        tryLoc: "root"
      }];
      tryLocsList.forEach(pushTryEntry, this);
      this.reset(true);
    }

    exports.keys = function (object) {
      var keys = [];

      for (var key in object) {
        keys.push(key);
      }

      keys.reverse();
      return function next() {
        while (keys.length) {
          var key = keys.pop();

          if (key in object) {
            next.value = key;
            next.done = false;
            return next;
          }
        }

        next.done = true;
        return next;
      };
    };

    function values(iterable) {
      if (iterable) {
        var iteratorMethod = iterable[iteratorSymbol];

        if (iteratorMethod) {
          return iteratorMethod.call(iterable);
        }

        if (typeof iterable.next === "function") {
          return iterable;
        }

        if (!isNaN(iterable.length)) {
          var i = -1,
              next = function next() {
            while (++i < iterable.length) {
              if (hasOwn.call(iterable, i)) {
                next.value = iterable[i];
                next.done = false;
                return next;
              }
            }

            next.value = undefined;
            next.done = true;
            return next;
          };

          return next.next = next;
        }
      }

      return {
        next: doneResult
      };
    }

    exports.values = values;

    function doneResult() {
      return {
        value: undefined,
        done: true
      };
    }

    Context.prototype = {
      constructor: Context,
      reset: function reset(skipTempReset) {
        this.prev = 0;
        this.next = 0;
        this.sent = this._sent = undefined;
        this.done = false;
        this.delegate = null;
        this.method = "next";
        this.arg = undefined;
        this.tryEntries.forEach(resetTryEntry);

        if (!skipTempReset) {
          for (var name in this) {
            if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
              this[name] = undefined;
            }
          }
        }
      },
      stop: function stop() {
        this.done = true;
        var rootEntry = this.tryEntries[0];
        var rootRecord = rootEntry.completion;

        if (rootRecord.type === "throw") {
          throw rootRecord.arg;
        }

        return this.rval;
      },
      dispatchException: function dispatchException(exception) {
        if (this.done) {
          throw exception;
        }

        var context = this;

        function handle(loc, caught) {
          record.type = "throw";
          record.arg = exception;
          context.next = loc;

          if (caught) {
            context.method = "next";
            context.arg = undefined;
          }

          return !!caught;
        }

        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          var record = entry.completion;

          if (entry.tryLoc === "root") {
            return handle("end");
          }

          if (entry.tryLoc <= this.prev) {
            var hasCatch = hasOwn.call(entry, "catchLoc");
            var hasFinally = hasOwn.call(entry, "finallyLoc");

            if (hasCatch && hasFinally) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              } else if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else if (hasCatch) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              }
            } else if (hasFinally) {
              if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else {
              throw new Error("try statement without catch or finally");
            }
          }
        }
      },
      abrupt: function abrupt(type, arg) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
            var finallyEntry = entry;
            break;
          }
        }

        if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
          finallyEntry = null;
        }

        var record = finallyEntry ? finallyEntry.completion : {};
        record.type = type;
        record.arg = arg;

        if (finallyEntry) {
          this.method = "next";
          this.next = finallyEntry.finallyLoc;
          return ContinueSentinel;
        }

        return this.complete(record);
      },
      complete: function complete(record, afterLoc) {
        if (record.type === "throw") {
          throw record.arg;
        }

        if (record.type === "break" || record.type === "continue") {
          this.next = record.arg;
        } else if (record.type === "return") {
          this.rval = this.arg = record.arg;
          this.method = "return";
          this.next = "end";
        } else if (record.type === "normal" && afterLoc) {
          this.next = afterLoc;
        }

        return ContinueSentinel;
      },
      finish: function finish(finallyLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.finallyLoc === finallyLoc) {
            this.complete(entry.completion, entry.afterLoc);
            resetTryEntry(entry);
            return ContinueSentinel;
          }
        }
      },
      "catch": function _catch(tryLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc === tryLoc) {
            var record = entry.completion;

            if (record.type === "throw") {
              var thrown = record.arg;
              resetTryEntry(entry);
            }

            return thrown;
          }
        }

        throw new Error("illegal catch attempt");
      },
      delegateYield: function delegateYield(iterable, resultName, nextLoc) {
        this.delegate = {
          iterator: values(iterable),
          resultName: resultName,
          nextLoc: nextLoc
        };

        if (this.method === "next") {
          this.arg = undefined;
        }

        return ContinueSentinel;
      }
    };
    return exports;
  }(typeof module === "object" ? module.exports : {});

  try {
    regeneratorRuntime = runtime;
  } catch (accidentalStrictMode) {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
},14677,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedEdgeInsetsPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedStyleSheetPropType = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedViewStylePropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var PlatformViewPropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var _require = _$$_REQUIRE(_dependencyMap[6]),
      DeprecatedAccessibilityRoles = _require.DeprecatedAccessibilityRoles,
      DeprecatedAccessibilityStates = _require.DeprecatedAccessibilityStates;

  var stylePropType = DeprecatedStyleSheetPropType(DeprecatedViewStylePropTypes);
  module.exports = _objectSpread({
    accessible: PropTypes.bool,
    accessibilityLabel: PropTypes.node,
    accessibilityHint: PropTypes.string,
    accessibilityActions: PropTypes.arrayOf(PropTypes.string),
    accessibilityIgnoresInvertColors: PropTypes.bool,
    accessibilityRole: PropTypes.oneOf(DeprecatedAccessibilityRoles),
    accessibilityStates: PropTypes.arrayOf(PropTypes.oneOf(DeprecatedAccessibilityStates)),
    accessibilityState: PropTypes.object,
    accessibilityLiveRegion: PropTypes.oneOf(['none', 'polite', 'assertive']),
    importantForAccessibility: PropTypes.oneOf(['auto', 'yes', 'no', 'no-hide-descendants']),
    accessibilityViewIsModal: PropTypes.bool,
    accessibilityElementsHidden: PropTypes.bool,
    onAccessibilityAction: PropTypes.func,
    onAccessibilityTap: PropTypes.func,
    onMagicTap: PropTypes.func,
    testID: PropTypes.string,
    nativeID: PropTypes.string,
    onResponderGrant: PropTypes.func,
    onResponderMove: PropTypes.func,
    onResponderReject: PropTypes.func,
    onResponderRelease: PropTypes.func,
    onResponderTerminate: PropTypes.func,
    onResponderTerminationRequest: PropTypes.func,
    onStartShouldSetResponder: PropTypes.func,
    onStartShouldSetResponderCapture: PropTypes.func,
    onMoveShouldSetResponder: PropTypes.func,
    onMoveShouldSetResponderCapture: PropTypes.func,
    hitSlop: DeprecatedEdgeInsetsPropType,
    onLayout: PropTypes.func,
    pointerEvents: PropTypes.oneOf(['box-none', 'none', 'box-only', 'auto']),
    style: stylePropType,
    removeClippedSubviews: PropTypes.bool,
    renderToHardwareTextureAndroid: PropTypes.bool,
    shouldRasterizeIOS: PropTypes.bool,
    collapsable: PropTypes.bool,
    needsOffscreenAlphaCompositing: PropTypes.bool
  }, PlatformViewPropTypes);
},14680,[14314,14614,14617,14437,10348,10318,14641]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  var ImageViewNativeComponent = requireNativeComponent('RCTImageView');
  module.exports = ImageViewNativeComponent;
},14683,[10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  var TextInlineImage = requireNativeComponent('RCTTextInlineImage');
  module.exports = TextInlineImage;
},14686,[10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ScrollView = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(ScrollView, {
    scrollEventThrottle: 0.0001
  });
},14689,[10609,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var SectionList = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(SectionList, {
    scrollEventThrottle: 0.0001
  });
},14692,[10744,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Text = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(Text);
},14695,[10483,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var View = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(View);
},14698,[10447,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = requireNativeComponent('AndroidCheckBox');
},14701,[10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function setAndForwardRef(_ref) {
    var getForwardedRef = _ref.getForwardedRef,
        setLocalRef = _ref.setLocalRef;
    return function forwardRef(ref) {
      var forwardedRef = getForwardedRef();
      setLocalRef(ref);

      if (typeof forwardedRef === 'function') {
        forwardedRef(ref);
      } else if (typeof forwardedRef === 'object' && forwardedRef != null) {
        forwardedRef.current = ref;
      }
    };
  }

  module.exports = setAndForwardRef;
},14704,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Commands = undefined;

  var _codegenNativeCommands = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var Commands = (0, _codegenNativeCommands.default)({
    supportedCommands: ['openDrawer', 'closeDrawer']
  });
  exports.Commands = Commands;

  var _default = (0, _codegenNativeComponent.default)('AndroidDrawerLayout');

  exports.default = _default;
},14707,[14308,14305,14710,14608,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _ReactNative = _$$_REQUIRE(_dependencyMap[0]);

  function codegenNativeCommands(options) {
    var commandObj = {};
    options.supportedCommands.forEach(function (command) {
      commandObj[command] = function (ref) {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        (0, _ReactNative.dispatchCommand)(ref, command, args);
      };
    });
    return commandObj;
  }

  var _default = codegenNativeCommands;
  exports.default = _default;
},14710,[10114]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('StatusBarManager');

  exports.default = _default;
},14713,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _RCTInputAccessoryViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[7]);

  var Platform = _$$_REQUIRE(_dependencyMap[8]);

  var React = _$$_REQUIRE(_dependencyMap[9]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[10]);

  var InputAccessoryView = function (_React$Component) {
    (0, _inherits2.default)(InputAccessoryView, _React$Component);

    function InputAccessoryView() {
      (0, _classCallCheck2.default)(this, InputAccessoryView);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InputAccessoryView).apply(this, arguments));
    }

    (0, _createClass2.default)(InputAccessoryView, [{
      key: "render",
      value: function render() {
        {}

        if (React.Children.count(this.props.children) === 0) {
          return null;
        }

        return React.createElement(_RCTInputAccessoryViewNativeComponent.default, {
          style: [this.props.style, styles.container],
          nativeID: this.props.nativeID,
          backgroundColor: this.props.backgroundColor
        }, this.props.children);
      }
    }]);
    return InputAccessoryView;
  }(React.Component);

  var styles = StyleSheet.create({
    container: {
      position: 'absolute'
    }
  });
  module.exports = InputAccessoryView;
},14746,[14305,14320,14323,14371,14377,14386,14749,14419,10066,10297,10441]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('RCTInputAccessoryView');

  exports.default = _default;
},14749,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('ModalManager');

  exports.default = _default;
},14752,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('ModalHostView', {
    interfaceOnly: true,
    paperComponentName: 'RCTModalHostView'
  });

  exports.default = _default;
},14755,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = React.createContext(0);
},14758,[10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('I18nManager');

  exports.default = _default;
},14761,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = (0, _reactNative.requireNativeComponent)('AndroidDropdownPicker');
},14764,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = (0, _reactNative.requireNativeComponent)('AndroidDialogPicker');
},14767,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[1]);

  var Platform = _$$_REQUIRE(_dependencyMap[2]);

  var React = _$$_REQUIRE(_dependencyMap[3]);

  var View = _$$_REQUIRE(_dependencyMap[4]);

  var exported;
  {
    var SafeAreaView = function SafeAreaView(props, forwardedRef) {
      var emulateUnlessSupported = props.emulateUnlessSupported,
          localProps = _objectWithoutProperties(props, ["emulateUnlessSupported"]);

      return React.createElement(View, _extends({}, localProps, {
        ref: forwardedRef
      }));
    };

    var SafeAreaViewRef = React.forwardRef(SafeAreaView);
    SafeAreaViewRef.displayName = 'SafeAreaView';
    exported = SafeAreaViewRef;
  }
  module.exports = exported;
},14770,[14344,14407,10066,10297,10447]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('Slider', {
    interfaceOnly: true,
    paperComponentName: 'RCTSlider'
  });

  exports.default = _default;
},14773,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('Switch', {
    paperComponentName: 'RCTSwitch'
  });

  exports.default = _default;
},14776,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      NativeComponent = _require.NativeComponent;

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = requireNativeComponent('AndroidSwitch');
},14779,[10114,10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedViewPropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var DocumentSelectionState = _$$_REQUIRE(_dependencyMap[4]);

  var Text = _$$_REQUIRE(_dependencyMap[5]);

  var DataDetectorTypes = ['phoneNumber', 'link', 'address', 'calendarEvent', 'none', 'all'];
  module.exports = _objectSpread({}, DeprecatedViewPropTypes, {
    autoCapitalize: PropTypes.oneOf(['none', 'sentences', 'words', 'characters']),
    autoCompleteType: PropTypes.oneOf(['cc-csc', 'cc-exp', 'cc-exp-month', 'cc-exp-year', 'cc-number', 'email', 'name', 'password', 'postal-code', 'street-address', 'tel', 'username', 'off']),
    autoCorrect: PropTypes.bool,
    spellCheck: PropTypes.bool,
    autoFocus: PropTypes.bool,
    allowFontScaling: PropTypes.bool,
    maxFontSizeMultiplier: PropTypes.number,
    editable: PropTypes.bool,
    keyboardType: PropTypes.oneOf(['default', 'email-address', 'numeric', 'phone-pad', 'number-pad', 'ascii-capable', 'numbers-and-punctuation', 'url', 'name-phone-pad', 'decimal-pad', 'twitter', 'web-search', 'visible-password']),
    keyboardAppearance: PropTypes.oneOf(['default', 'light', 'dark']),
    returnKeyType: PropTypes.oneOf(['done', 'go', 'next', 'search', 'send', 'none', 'previous', 'default', 'emergency-call', 'google', 'join', 'route', 'yahoo']),
    returnKeyLabel: PropTypes.string,
    maxLength: PropTypes.number,
    numberOfLines: PropTypes.number,
    disableFullscreenUI: PropTypes.bool,
    enablesReturnKeyAutomatically: PropTypes.bool,
    multiline: PropTypes.bool,
    textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),
    onBlur: PropTypes.func,
    onFocus: PropTypes.func,
    onChange: PropTypes.func,
    onChangeText: PropTypes.func,
    onContentSizeChange: PropTypes.func,
    onTextInput: PropTypes.func,
    onEndEditing: PropTypes.func,
    onSelectionChange: PropTypes.func,
    onSubmitEditing: PropTypes.func,
    onKeyPress: PropTypes.func,
    onLayout: PropTypes.func,
    onScroll: PropTypes.func,
    placeholder: PropTypes.string,
    placeholderTextColor: DeprecatedColorPropType,
    scrollEnabled: PropTypes.bool,
    secureTextEntry: PropTypes.bool,
    selectionColor: DeprecatedColorPropType,
    selectionState: PropTypes.instanceOf(DocumentSelectionState),
    selection: PropTypes.shape({
      start: PropTypes.number.isRequired,
      end: PropTypes.number
    }),
    value: PropTypes.string,
    defaultValue: PropTypes.string,
    clearButtonMode: PropTypes.oneOf(['never', 'while-editing', 'unless-editing', 'always']),
    clearTextOnFocus: PropTypes.bool,
    selectTextOnFocus: PropTypes.bool,
    blurOnSubmit: PropTypes.bool,
    style: Text.propTypes.style,
    underlineColorAndroid: DeprecatedColorPropType,
    inlineImageLeft: PropTypes.string,
    inlineImagePadding: PropTypes.number,
    rejectResponderTermination: PropTypes.bool,
    dataDetectorTypes: PropTypes.oneOfType([PropTypes.oneOf(DataDetectorTypes), PropTypes.arrayOf(PropTypes.oneOf(DataDetectorTypes))]),
    caretHidden: PropTypes.bool,
    contextMenuHidden: PropTypes.bool,
    inputAccessoryViewID: PropTypes.string,
    textContentType: PropTypes.oneOf(['none', 'URL', 'addressCity', 'addressCityAndState', 'addressState', 'countryName', 'creditCardNumber', 'emailAddress', 'familyName', 'fullStreetAddress', 'givenName', 'jobTitle', 'location', 'middleName', 'name', 'namePrefix', 'nameSuffix', 'nickname', 'organizationName', 'postalCode', 'streetAddressLine1', 'streetAddressLine2', 'sublocality', 'telephoneNumber', 'username', 'password', 'newPassword', 'oneTimeCode']),
    showSoftInputOnFocus: PropTypes.bool
  });
},14782,[14314,10318,14419,14680,10789,10483]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var keyOf = function keyOf(oneKeyObj) {
    var key;

    for (key in oneKeyObj) {
      if (!oneKeyObj.hasOwnProperty(key)) {
        continue;
      }

      return key;
    }

    return null;
  };

  module.exports = keyOf;
},14785,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('ActionSheetManager');

  exports.default = _default;
},14788,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('HeadlessJsTaskSupport');

  exports.default = _default;
},14791,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _wrapNativeSuper2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var HeadlessJsTaskError = function (_Error) {
    (0, _inherits2.default)(HeadlessJsTaskError, _Error);

    function HeadlessJsTaskError() {
      (0, _classCallCheck2.default)(this, HeadlessJsTaskError);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HeadlessJsTaskError).apply(this, arguments));
    }

    return HeadlessJsTaskError;
  }((0, _wrapNativeSuper2.default)(Error));

  exports.default = HeadlessJsTaskError;
},14794,[14305,14320,14371,14377,14386,14458]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('BugReporting');

  exports.default = _default;
},14797,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('RedBox');

  exports.default = _default;
},14800,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  var _GlobalPerformanceLogger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var PerformanceLoggerContext = React.createContext(_GlobalPerformanceLogger.default);
  module.exports = PerformanceLoggerContext;
},14803,[14305,14308,10297,14548]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[1]);

  var Text = _$$_REQUIRE(_dependencyMap[2]);

  var View = _$$_REQUIRE(_dependencyMap[3]);

  function ReactFabricIndicator() {
    return React.createElement(View, {
      style: styles.container
    }, React.createElement(Text, {
      style: styles.text
    }, "FABRIC"));
  }

  var styles = StyleSheet.create({
    container: {
      alignItems: 'center',
      justifyContent: 'center',
      backgroundColor: 'rgba(0,0,0, 0.25)',
      position: 'absolute',
      top: 0,
      right: 0,
      padding: 2
    },
    text: {
      fontSize: 6,
      color: '#ffffff'
    }
  });
  module.exports = ReactFabricIndicator;
},14806,[10297,10441,10483,10447]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('DeviceEventManager');

  exports.default = _default;
},14809,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _ReactNativePrivateInterface = _$$_REQUIRE(_dependencyMap[0]);

  var ReactFabric;
  {
    ReactFabric = _$$_REQUIRE(_dependencyMap[1]);
  }

  _ReactNativePrivateInterface.BatchedBridge.registerCallableModule('ReactFabric', ReactFabric);

  module.exports = ReactFabric;
},14812,[14566,14815]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativePrivateInterface = _$$_REQUIRE(_dependencyMap[2]),
      React = _$$_REQUIRE(_dependencyMap[3]),
      Scheduler = _$$_REQUIRE(_dependencyMap[4]);

  function ReactError(error) {
    error.name = "Invariant Violation";
    return error;
  }

  var eventPluginOrder = null,
      namesToPlugins = {};

  function recomputePluginOrdering() {
    if (eventPluginOrder) for (var pluginName in namesToPlugins) {
      var pluginModule = namesToPlugins[pluginName],
          pluginIndex = eventPluginOrder.indexOf(pluginName);
      if (!(-1 < pluginIndex)) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `" + pluginName + "`."));

      if (!plugins[pluginIndex]) {
        if (!pluginModule.extractEvents) throw ReactError(Error("EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `" + pluginName + "` does not."));
        plugins[pluginIndex] = pluginModule;
        pluginIndex = pluginModule.eventTypes;

        for (var eventName in pluginIndex) {
          var JSCompiler_inline_result = undefined;
          var dispatchConfig = pluginIndex[eventName],
              pluginModule$jscomp$0 = pluginModule,
              eventName$jscomp$0 = eventName;
          if (eventNameDispatchConfigs.hasOwnProperty(eventName$jscomp$0)) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same event name, `" + eventName$jscomp$0 + "`."));
          eventNameDispatchConfigs[eventName$jscomp$0] = dispatchConfig;
          var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

          if (phasedRegistrationNames) {
            for (JSCompiler_inline_result in phasedRegistrationNames) {
              phasedRegistrationNames.hasOwnProperty(JSCompiler_inline_result) && publishRegistrationName(phasedRegistrationNames[JSCompiler_inline_result], pluginModule$jscomp$0, eventName$jscomp$0);
            }

            JSCompiler_inline_result = true;
          } else dispatchConfig.registrationName ? (publishRegistrationName(dispatchConfig.registrationName, pluginModule$jscomp$0, eventName$jscomp$0), JSCompiler_inline_result = true) : JSCompiler_inline_result = false;

          if (!JSCompiler_inline_result) throw ReactError(Error("EventPluginRegistry: Failed to publish event `" + eventName + "` for plugin `" + pluginName + "`."));
        }
      }
    }
  }

  function publishRegistrationName(registrationName, pluginModule) {
    if (registrationNameModules[registrationName]) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same registration name, `" + registrationName + "`."));
    registrationNameModules[registrationName] = pluginModule;
  }

  var plugins = [],
      eventNameDispatchConfigs = {},
      registrationNameModules = {};

  function invokeGuardedCallbackImpl(name, func, context, a, b, c, d, e, f) {
    var funcArgs = Array.prototype.slice.call(arguments, 3);

    try {
      func.apply(context, funcArgs);
    } catch (error) {
      this.onError(error);
    }
  }

  var hasError = false,
      caughtError = null,
      hasRethrowError = false,
      rethrowError = null,
      reporter = {
    onError: function onError(error) {
      hasError = true;
      caughtError = error;
    }
  };

  function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
    hasError = false;
    caughtError = null;
    invokeGuardedCallbackImpl.apply(reporter, arguments);
  }

  function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
    invokeGuardedCallback.apply(this, arguments);

    if (hasError) {
      if (hasError) {
        var error = caughtError;
        hasError = false;
        caughtError = null;
      } else throw ReactError(Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue."));

      hasRethrowError || (hasRethrowError = true, rethrowError = error);
    }
  }

  var getFiberCurrentPropsFromNode = null,
      getInstanceFromNode = null,
      getNodeFromInstance = null;

  function executeDispatch(event, listener, inst) {
    var type = event.type || "unknown-event";
    event.currentTarget = getNodeFromInstance(inst);
    invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
    event.currentTarget = null;
  }

  function executeDirectDispatch(event) {
    var dispatchListener = event._dispatchListeners,
        dispatchInstance = event._dispatchInstances;
    if (Array.isArray(dispatchListener)) throw ReactError(Error("executeDirectDispatch(...): Invalid `event`."));
    event.currentTarget = dispatchListener ? getNodeFromInstance(dispatchInstance) : null;
    dispatchListener = dispatchListener ? dispatchListener(event) : null;
    event.currentTarget = null;
    event._dispatchListeners = null;
    event._dispatchInstances = null;
    return dispatchListener;
  }

  function accumulateInto(current, next) {
    if (null == next) throw ReactError(Error("accumulateInto(...): Accumulated items must not be null or undefined."));
    if (null == current) return next;

    if (Array.isArray(current)) {
      if (Array.isArray(next)) return current.push.apply(current, next), current;
      current.push(next);
      return current;
    }

    return Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  function forEachAccumulated(arr, cb, scope) {
    Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
  }

  var eventQueue = null;

  function executeDispatchesAndReleaseTopLevel(e) {
    if (e) {
      var dispatchListeners = e._dispatchListeners,
          dispatchInstances = e._dispatchInstances;
      if (Array.isArray(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !e.isPropagationStopped(); i++) {
        executeDispatch(e, dispatchListeners[i], dispatchInstances[i]);
      } else dispatchListeners && executeDispatch(e, dispatchListeners, dispatchInstances);
      e._dispatchListeners = null;
      e._dispatchInstances = null;
      e.isPersistent() || e.constructor.release(e);
    }
  }

  var injection = {
    injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
      if (eventPluginOrder) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React."));
      eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
      recomputePluginOrdering();
    },
    injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
      var isOrderingDirty = false,
          pluginName;

      for (pluginName in injectedNamesToPlugins) {
        if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
          var pluginModule = injectedNamesToPlugins[pluginName];

          if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
            if (namesToPlugins[pluginName]) throw ReactError(Error("EventPluginRegistry: Cannot inject two different event plugins using the same name, `" + pluginName + "`."));
            namesToPlugins[pluginName] = pluginModule;
            isOrderingDirty = true;
          }
        }
      }

      isOrderingDirty && recomputePluginOrdering();
    }
  };

  function getListener(inst, registrationName) {
    var listener = inst.stateNode;
    if (!listener) return null;
    var props = getFiberCurrentPropsFromNode(listener);
    if (!props) return null;
    listener = props[registrationName];

    a: switch (registrationName) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
        (props = !props.disabled) || (inst = inst.type, props = !("button" === inst || "input" === inst || "select" === inst || "textarea" === inst));
        inst = !props;
        break a;

      default:
        inst = false;
    }

    if (inst) return null;
    if (listener && "function" !== typeof listener) throw ReactError(Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type."));
    return listener;
  }

  function getParent(inst) {
    do {
      inst = inst.return;
    } while (inst && 5 !== inst.tag);

    return inst ? inst : null;
  }

  function traverseTwoPhase(inst, fn, arg) {
    for (var path = []; inst;) {
      path.push(inst), inst = getParent(inst);
    }

    for (inst = path.length; 0 < inst--;) {
      fn(path[inst], "captured", arg);
    }

    for (inst = 0; inst < path.length; inst++) {
      fn(path[inst], "bubbled", arg);
    }
  }

  function accumulateDirectionalDispatches(inst, phase, event) {
    if (phase = getListener(inst, event.dispatchConfig.phasedRegistrationNames[phase])) event._dispatchListeners = accumulateInto(event._dispatchListeners, phase), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }

  function accumulateTwoPhaseDispatchesSingle(event) {
    event && event.dispatchConfig.phasedRegistrationNames && traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }

  function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
      var targetInst = event._targetInst;
      targetInst = targetInst ? getParent(targetInst) : null;
      traverseTwoPhase(targetInst, accumulateDirectionalDispatches, event);
    }
  }

  function accumulateDirectDispatchesSingle(event) {
    if (event && event.dispatchConfig.registrationName) {
      var inst = event._targetInst;

      if (inst && event && event.dispatchConfig.registrationName) {
        var listener = getListener(inst, event.dispatchConfig.registrationName);
        listener && (event._dispatchListeners = accumulateInto(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst));
      }
    }
  }

  function functionThatReturnsTrue() {
    return true;
  }

  function functionThatReturnsFalse() {
    return false;
  }

  function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
    this.dispatchConfig = dispatchConfig;
    this._targetInst = targetInst;
    this.nativeEvent = nativeEvent;
    dispatchConfig = this.constructor.Interface;

    for (var propName in dispatchConfig) {
      dispatchConfig.hasOwnProperty(propName) && ((targetInst = dispatchConfig[propName]) ? this[propName] = targetInst(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName]);
    }

    this.isDefaultPrevented = (null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : false === nativeEvent.returnValue) ? functionThatReturnsTrue : functionThatReturnsFalse;
    this.isPropagationStopped = functionThatReturnsFalse;
    return this;
  }

  _extends(SyntheticEvent.prototype, {
    preventDefault: function preventDefault() {
      this.defaultPrevented = true;
      var event = this.nativeEvent;
      event && (event.preventDefault ? event.preventDefault() : "unknown" !== typeof event.returnValue && (event.returnValue = false), this.isDefaultPrevented = functionThatReturnsTrue);
    },
    stopPropagation: function stopPropagation() {
      var event = this.nativeEvent;
      event && (event.stopPropagation ? event.stopPropagation() : "unknown" !== typeof event.cancelBubble && (event.cancelBubble = true), this.isPropagationStopped = functionThatReturnsTrue);
    },
    persist: function persist() {
      this.isPersistent = functionThatReturnsTrue;
    },
    isPersistent: functionThatReturnsFalse,
    destructor: function destructor() {
      var Interface = this.constructor.Interface,
          propName;

      for (propName in Interface) {
        this[propName] = null;
      }

      this.nativeEvent = this._targetInst = this.dispatchConfig = null;
      this.isPropagationStopped = this.isDefaultPrevented = functionThatReturnsFalse;
      this._dispatchInstances = this._dispatchListeners = null;
    }
  });

  SyntheticEvent.Interface = {
    type: null,
    target: null,
    currentTarget: function currentTarget() {
      return null;
    },
    eventPhase: null,
    bubbles: null,
    cancelable: null,
    timeStamp: function timeStamp(event) {
      return event.timeStamp || Date.now();
    },
    defaultPrevented: null,
    isTrusted: null
  };

  SyntheticEvent.extend = function (Interface) {
    function E() {}

    function Class() {
      return Super.apply(this, arguments);
    }

    var Super = this;
    E.prototype = Super.prototype;
    var prototype = new E();

    _extends(prototype, Class.prototype);

    Class.prototype = prototype;
    Class.prototype.constructor = Class;
    Class.Interface = _extends({}, Super.Interface, Interface);
    Class.extend = Super.extend;
    addEventPoolingTo(Class);
    return Class;
  };

  addEventPoolingTo(SyntheticEvent);

  function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
    if (this.eventPool.length) {
      var instance = this.eventPool.pop();
      this.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
      return instance;
    }

    return new this(dispatchConfig, targetInst, nativeEvent, nativeInst);
  }

  function releasePooledEvent(event) {
    if (!(event instanceof this)) throw ReactError(Error("Trying to release an event instance into a pool of a different type."));
    event.destructor();
    10 > this.eventPool.length && this.eventPool.push(event);
  }

  function addEventPoolingTo(EventConstructor) {
    EventConstructor.eventPool = [];
    EventConstructor.getPooled = getPooledEvent;
    EventConstructor.release = releasePooledEvent;
  }

  var ResponderSyntheticEvent = SyntheticEvent.extend({
    touchHistory: function touchHistory() {
      return null;
    }
  });

  function isStartish(topLevelType) {
    return "topTouchStart" === topLevelType;
  }

  function isMoveish(topLevelType) {
    return "topTouchMove" === topLevelType;
  }

  var startDependencies = ["topTouchStart"],
      moveDependencies = ["topTouchMove"],
      endDependencies = ["topTouchCancel", "topTouchEnd"],
      touchBank = [],
      touchHistory = {
    touchBank: touchBank,
    numberActiveTouches: 0,
    indexOfSingleActiveTouch: -1,
    mostRecentTimeStamp: 0
  };

  function timestampForTouch(touch) {
    return touch.timeStamp || touch.timestamp;
  }

  function getTouchIdentifier(_ref) {
    _ref = _ref.identifier;
    if (null == _ref) throw ReactError(Error("Touch object is missing identifier."));
    return _ref;
  }

  function recordTouchStart(touch) {
    var identifier = getTouchIdentifier(touch),
        touchRecord = touchBank[identifier];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch)) : (touchRecord = {
      touchActive: true,
      startPageX: touch.pageX,
      startPageY: touch.pageY,
      startTimeStamp: timestampForTouch(touch),
      currentPageX: touch.pageX,
      currentPageY: touch.pageY,
      currentTimeStamp: timestampForTouch(touch),
      previousPageX: touch.pageX,
      previousPageY: touch.pageY,
      previousTimeStamp: timestampForTouch(touch)
    }, touchBank[identifier] = touchRecord);
    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
  }

  function recordTouchMove(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
  }

  function recordTouchEnd(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = false, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
  }

  var ResponderTouchHistoryStore = {
    recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
      if (isMoveish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove);else if (isStartish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches) for (topLevelType = 0; topLevelType < touchBank.length; topLevelType++) {
        if (nativeEvent = touchBank[topLevelType], null != nativeEvent && nativeEvent.touchActive) {
          touchHistory.indexOfSingleActiveTouch = topLevelType;
          break;
        }
      }
    },
    touchHistory: touchHistory
  };

  function accumulate(current, next) {
    if (null == next) throw ReactError(Error("accumulate(...): Accumulated items must not be null or undefined."));
    return null == current ? next : Array.isArray(current) ? current.concat(next) : Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  var responderInst = null,
      trackedTouchCount = 0;

  function changeResponder(nextResponderInst, blockHostResponder) {
    var oldResponderInst = responderInst;
    responderInst = nextResponderInst;
    if (null !== ResponderEventPlugin.GlobalResponderHandler) ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
  }

  var eventTypes = {
    startShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onStartShouldSetResponder",
        captured: "onStartShouldSetResponderCapture"
      },
      dependencies: startDependencies
    },
    scrollShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onScrollShouldSetResponder",
        captured: "onScrollShouldSetResponderCapture"
      },
      dependencies: ["topScroll"]
    },
    selectionChangeShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onSelectionChangeShouldSetResponder",
        captured: "onSelectionChangeShouldSetResponderCapture"
      },
      dependencies: ["topSelectionChange"]
    },
    moveShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onMoveShouldSetResponder",
        captured: "onMoveShouldSetResponderCapture"
      },
      dependencies: moveDependencies
    },
    responderStart: {
      registrationName: "onResponderStart",
      dependencies: startDependencies
    },
    responderMove: {
      registrationName: "onResponderMove",
      dependencies: moveDependencies
    },
    responderEnd: {
      registrationName: "onResponderEnd",
      dependencies: endDependencies
    },
    responderRelease: {
      registrationName: "onResponderRelease",
      dependencies: endDependencies
    },
    responderTerminationRequest: {
      registrationName: "onResponderTerminationRequest",
      dependencies: []
    },
    responderGrant: {
      registrationName: "onResponderGrant",
      dependencies: []
    },
    responderReject: {
      registrationName: "onResponderReject",
      dependencies: []
    },
    responderTerminate: {
      registrationName: "onResponderTerminate",
      dependencies: []
    }
  },
      ResponderEventPlugin = {
    _getResponder: function _getResponder() {
      return responderInst;
    },
    eventTypes: eventTypes,
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      if (isStartish(topLevelType)) trackedTouchCount += 1;else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (0 <= trackedTouchCount) --trackedTouchCount;else return undefined, null;
      ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);

      if (targetInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || 0 < trackedTouchCount && "topSelectionChange" === topLevelType || isStartish(topLevelType) || isMoveish(topLevelType))) {
        var JSCompiler_temp = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;
        if (responderInst) b: {
          var JSCompiler_temp$jscomp$0 = responderInst;

          for (var depthA = 0, tempA = JSCompiler_temp$jscomp$0; tempA; tempA = getParent(tempA)) {
            depthA++;
          }

          tempA = 0;

          for (var tempB = targetInst; tempB; tempB = getParent(tempB)) {
            tempA++;
          }

          for (; 0 < depthA - tempA;) {
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0), depthA--;
          }

          for (; 0 < tempA - depthA;) {
            targetInst = getParent(targetInst), tempA--;
          }

          for (; depthA--;) {
            if (JSCompiler_temp$jscomp$0 === targetInst || JSCompiler_temp$jscomp$0 === targetInst.alternate) break b;
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0);
            targetInst = getParent(targetInst);
          }

          JSCompiler_temp$jscomp$0 = null;
        } else JSCompiler_temp$jscomp$0 = targetInst;
        targetInst = JSCompiler_temp$jscomp$0 === responderInst;
        JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp, JSCompiler_temp$jscomp$0, nativeEvent, nativeEventTarget);
        JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory;
        targetInst ? forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingleSkipTarget) : forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingle);

        b: {
          JSCompiler_temp = JSCompiler_temp$jscomp$0._dispatchListeners;
          targetInst = JSCompiler_temp$jscomp$0._dispatchInstances;
          if (Array.isArray(JSCompiler_temp)) for (depthA = 0; depthA < JSCompiler_temp.length && !JSCompiler_temp$jscomp$0.isPropagationStopped(); depthA++) {
            if (JSCompiler_temp[depthA](JSCompiler_temp$jscomp$0, targetInst[depthA])) {
              JSCompiler_temp = targetInst[depthA];
              break b;
            }
          } else if (JSCompiler_temp && JSCompiler_temp(JSCompiler_temp$jscomp$0, targetInst)) {
            JSCompiler_temp = targetInst;
            break b;
          }
          JSCompiler_temp = null;
        }

        JSCompiler_temp$jscomp$0._dispatchInstances = null;
        JSCompiler_temp$jscomp$0._dispatchListeners = null;
        JSCompiler_temp$jscomp$0.isPersistent() || JSCompiler_temp$jscomp$0.constructor.release(JSCompiler_temp$jscomp$0);
        JSCompiler_temp && JSCompiler_temp !== responderInst ? (JSCompiler_temp$jscomp$0 = undefined, targetInst = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, JSCompiler_temp, nativeEvent, nativeEventTarget), targetInst.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(targetInst, accumulateDirectDispatchesSingle), depthA = true === executeDirectDispatch(targetInst), responderInst ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), tempB = !tempA._dispatchListeners || executeDirectDispatch(tempA), tempA.isPersistent() || tempA.constructor.release(tempA), tempB ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, [targetInst, tempA]), changeResponder(JSCompiler_temp, depthA)) : (JSCompiler_temp = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, JSCompiler_temp, nativeEvent, nativeEventTarget), JSCompiler_temp.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, JSCompiler_temp))) : (JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, targetInst), changeResponder(JSCompiler_temp, depthA)), JSCompiler_temp = JSCompiler_temp$jscomp$0) : JSCompiler_temp = null;
      } else JSCompiler_temp = null;

      JSCompiler_temp$jscomp$0 = responderInst && isStartish(topLevelType);
      targetInst = responderInst && isMoveish(topLevelType);
      depthA = responderInst && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType);
      if (JSCompiler_temp$jscomp$0 = JSCompiler_temp$jscomp$0 ? eventTypes.responderStart : targetInst ? eventTypes.responderMove : depthA ? eventTypes.responderEnd : null) JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp$jscomp$0, responderInst, nativeEvent, nativeEventTarget), JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, JSCompiler_temp$jscomp$0);
      JSCompiler_temp$jscomp$0 = responderInst && "topTouchCancel" === topLevelType;
      if (topLevelType = responderInst && !JSCompiler_temp$jscomp$0 && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType)) a: {
        if ((topLevelType = nativeEvent.touches) && 0 !== topLevelType.length) for (targetInst = 0; targetInst < topLevelType.length; targetInst++) {
          if (depthA = topLevelType[targetInst].target, null !== depthA && undefined !== depthA && 0 !== depthA) {
            tempA = getInstanceFromNode(depthA);

            b: {
              for (depthA = responderInst; tempA;) {
                if (depthA === tempA || depthA === tempA.alternate) {
                  depthA = true;
                  break b;
                }

                tempA = getParent(tempA);
              }

              depthA = false;
            }

            if (depthA) {
              topLevelType = false;
              break a;
            }
          }
        }
        topLevelType = true;
      }
      if (topLevelType = JSCompiler_temp$jscomp$0 ? eventTypes.responderTerminate : topLevelType ? eventTypes.responderRelease : null) nativeEvent = ResponderSyntheticEvent.getPooled(topLevelType, responderInst, nativeEvent, nativeEventTarget), nativeEvent.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(nativeEvent, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, nativeEvent), changeResponder(null);
      return JSCompiler_temp;
    },
    GlobalResponderHandler: null,
    injection: {
      injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
        ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
      }
    }
  },
      customBubblingEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customBubblingEventTypes,
      customDirectEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customDirectEventTypes;
  injection.injectEventPluginOrder(["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"]);
  injection.injectEventPluginsByName({
    ResponderEventPlugin: ResponderEventPlugin,
    ReactNativeBridgeEventPlugin: {
      eventTypes: {},
      extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        if (null == targetInst) return null;
        var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
            directDispatchConfig = customDirectEventTypes[topLevelType];
        if (!bubbleDispatchConfig && !directDispatchConfig) throw ReactError(Error('Unsupported top level event type "' + topLevelType + '" dispatched'));
        topLevelType = SyntheticEvent.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
        if (bubbleDispatchConfig) forEachAccumulated(topLevelType, accumulateTwoPhaseDispatchesSingle);else if (directDispatchConfig) forEachAccumulated(topLevelType, accumulateDirectDispatchesSingle);else return null;
        return topLevelType;
      }
    }
  });

  function getInstanceFromInstance(instanceHandle) {
    return instanceHandle;
  }

  getFiberCurrentPropsFromNode = function getFiberCurrentPropsFromNode(inst) {
    return inst.canonical.currentProps;
  };

  getInstanceFromNode = getInstanceFromInstance;

  getNodeFromInstance = function getNodeFromInstance(inst) {
    inst = inst.stateNode.canonical._nativeTag;
    if (!inst) throw ReactError(Error("All native instances should have a tag."));
    return inst;
  };

  ResponderEventPlugin.injection.injectGlobalResponderHandler({
    onChange: function onChange(from, to, blockNativeResponder) {
      null !== to ? ReactNativePrivateInterface.UIManager.setJSResponder(to.stateNode.canonical._nativeTag, blockNativeResponder) : ReactNativePrivateInterface.UIManager.clearJSResponder();
    }
  });
  var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  ReactSharedInternals.hasOwnProperty("ReactCurrentDispatcher") || (ReactSharedInternals.ReactCurrentDispatcher = {
    current: null
  });
  ReactSharedInternals.hasOwnProperty("ReactCurrentBatchConfig") || (ReactSharedInternals.ReactCurrentBatchConfig = {
    suspense: null
  });
  var hasSymbol = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for"),
      REACT_ELEMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") : 60103,
      REACT_PORTAL_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") : 60106,
      REACT_FRAGMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fragment") : 60107,
      REACT_STRICT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.strict_mode") : 60108,
      REACT_PROFILER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.profiler") : 60114,
      REACT_PROVIDER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.provider") : 60109,
      REACT_CONTEXT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.context") : 60110,
      REACT_CONCURRENT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.concurrent_mode") : 60111,
      REACT_FORWARD_REF_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.forward_ref") : 60112,
      REACT_SUSPENSE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense") : 60113,
      REACT_SUSPENSE_LIST_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense_list") : 60120,
      REACT_MEMO_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.memo") : 60115,
      REACT_LAZY_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.lazy") : 60116;
  hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fundamental");
  hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.responder");
  var MAYBE_ITERATOR_SYMBOL = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator");

  function getIteratorFn(maybeIterable) {
    if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
    maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
    return "function" === typeof maybeIterable ? maybeIterable : null;
  }

  function getComponentName(type) {
    if (null == type) return null;
    if ("function" === typeof type) return type.displayName || type.name || null;
    if ("string" === typeof type) return type;

    switch (type) {
      case REACT_FRAGMENT_TYPE:
        return "Fragment";

      case REACT_PORTAL_TYPE:
        return "Portal";

      case REACT_PROFILER_TYPE:
        return "Profiler";

      case REACT_STRICT_MODE_TYPE:
        return "StrictMode";

      case REACT_SUSPENSE_TYPE:
        return "Suspense";

      case REACT_SUSPENSE_LIST_TYPE:
        return "SuspenseList";
    }

    if ("object" === typeof type) switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return "Context.Consumer";

      case REACT_PROVIDER_TYPE:
        return "Context.Provider";

      case REACT_FORWARD_REF_TYPE:
        var innerType = type.render;
        innerType = innerType.displayName || innerType.name || "";
        return type.displayName || ("" !== innerType ? "ForwardRef(" + innerType + ")" : "ForwardRef");

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_LAZY_TYPE:
        if (type = 1 === type._status ? type._result : null) return getComponentName(type);
    }
    return null;
  }

  function isFiberMountedImpl(fiber) {
    var node = fiber;
    if (fiber.alternate) for (; node.return;) {
      node = node.return;
    } else {
      if (0 !== (node.effectTag & 2)) return 1;

      for (; node.return;) {
        if (node = node.return, 0 !== (node.effectTag & 2)) return 1;
      }
    }
    return 3 === node.tag ? 2 : 3;
  }

  function assertIsMounted(fiber) {
    if (2 !== isFiberMountedImpl(fiber)) throw ReactError(Error("Unable to find node on an unmounted component."));
  }

  function findCurrentFiberUsingSlowPath(fiber) {
    var alternate = fiber.alternate;

    if (!alternate) {
      alternate = isFiberMountedImpl(fiber);
      if (3 === alternate) throw ReactError(Error("Unable to find node on an unmounted component."));
      return 1 === alternate ? null : fiber;
    }

    for (var a = fiber, b = alternate;;) {
      var parentA = a.return;
      if (null === parentA) break;
      var parentB = parentA.alternate;

      if (null === parentB) {
        b = parentA.return;

        if (null !== b) {
          a = b;
          continue;
        }

        break;
      }

      if (parentA.child === parentB.child) {
        for (parentB = parentA.child; parentB;) {
          if (parentB === a) return assertIsMounted(parentA), fiber;
          if (parentB === b) return assertIsMounted(parentA), alternate;
          parentB = parentB.sibling;
        }

        throw ReactError(Error("Unable to find node on an unmounted component."));
      }

      if (a.return !== b.return) a = parentA, b = parentB;else {
        for (var didFindChild = false, _child = parentA.child; _child;) {
          if (_child === a) {
            didFindChild = true;
            a = parentA;
            b = parentB;
            break;
          }

          if (_child === b) {
            didFindChild = true;
            b = parentA;
            a = parentB;
            break;
          }

          _child = _child.sibling;
        }

        if (!didFindChild) {
          for (_child = parentB.child; _child;) {
            if (_child === a) {
              didFindChild = true;
              a = parentB;
              b = parentA;
              break;
            }

            if (_child === b) {
              didFindChild = true;
              b = parentB;
              a = parentA;
              break;
            }

            _child = _child.sibling;
          }

          if (!didFindChild) throw ReactError(Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue."));
        }
      }
      if (a.alternate !== b) throw ReactError(Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue."));
    }

    if (3 !== a.tag) throw ReactError(Error("Unable to find node on an unmounted component."));
    return a.stateNode.current === a ? fiber : alternate;
  }

  function findCurrentHostFiber(parent) {
    parent = findCurrentFiberUsingSlowPath(parent);
    if (!parent) return null;

    for (var node = parent;;) {
      if (5 === node.tag || 6 === node.tag) return node;
      if (node.child) node.child.return = node, node = node.child;else {
        if (node === parent) break;

        for (; !node.sibling;) {
          if (!node.return || node.return === parent) return null;
          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    return null;
  }

  function mountSafeCallback_NOT_REALLY_SAFE(context, callback) {
    return function () {
      if (callback && ("boolean" !== typeof context.__isMounted || context.__isMounted)) return callback.apply(context, arguments);
    };
  }

  var emptyObject = {},
      removedKeys = null,
      removedKeyCount = 0;

  function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (Array.isArray(node)) for (var i = node.length; i-- && 0 < removedKeyCount;) {
      restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
    } else if (node && 0 < removedKeyCount) for (i in removedKeys) {
      if (removedKeys[i]) {
        var nextProp = node[i];

        if (undefined !== nextProp) {
          var attributeConfig = validAttributes[i];

          if (attributeConfig) {
            "function" === typeof nextProp && (nextProp = true);
            "undefined" === typeof nextProp && (nextProp = null);
            if ("object" !== typeof attributeConfig) updatePayload[i] = nextProp;else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) nextProp = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[i] = nextProp;
            removedKeys[i] = false;
            removedKeyCount--;
          }
        }
      }
    }
  }

  function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    if (!updatePayload && prevProp === nextProp) return updatePayload;
    if (!prevProp || !nextProp) return nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload;
    if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) return diffProperties(updatePayload, prevProp, nextProp, validAttributes);

    if (Array.isArray(prevProp) && Array.isArray(nextProp)) {
      var minLength = prevProp.length < nextProp.length ? prevProp.length : nextProp.length,
          i;

      for (i = 0; i < minLength; i++) {
        updatePayload = diffNestedProperty(updatePayload, prevProp[i], nextProp[i], validAttributes);
      }

      for (; i < prevProp.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
      }

      for (; i < nextProp.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
      }

      return updatePayload;
    }

    return Array.isArray(prevProp) ? diffProperties(updatePayload, ReactNativePrivateInterface.flattenStyle(prevProp), nextProp, validAttributes) : diffProperties(updatePayload, prevProp, ReactNativePrivateInterface.flattenStyle(nextProp), validAttributes);
  }

  function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) return updatePayload;
    if (!Array.isArray(nextProp)) return diffProperties(updatePayload, emptyObject, nextProp, validAttributes);

    for (var i = 0; i < nextProp.length; i++) {
      updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    }

    return updatePayload;
  }

  function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) return updatePayload;
    if (!Array.isArray(prevProp)) return diffProperties(updatePayload, prevProp, emptyObject, validAttributes);

    for (var i = 0; i < prevProp.length; i++) {
      updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    }

    return updatePayload;
  }

  function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig, propKey;

    for (propKey in nextProps) {
      if (attributeConfig = validAttributes[propKey]) {
        var prevProp = prevProps[propKey];
        var nextProp = nextProps[propKey];
        "function" === typeof nextProp && (nextProp = true, "function" === typeof prevProp && (prevProp = true));
        "undefined" === typeof nextProp && (nextProp = null, "undefined" === typeof prevProp && (prevProp = null));
        removedKeys && (removedKeys[propKey] = false);
        if (updatePayload && undefined !== updatePayload[propKey]) {
          if ("object" !== typeof attributeConfig) updatePayload[propKey] = nextProp;else {
            if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[propKey] = attributeConfig;
          }
        } else if (prevProp !== nextProp) if ("object" !== typeof attributeConfig) ("object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp)) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp);else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) {
          if (undefined === prevProp || ("function" === typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : "object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp))) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = attributeConfig;
        } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), 0 < removedKeyCount && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
      }
    }

    for (var _propKey in prevProps) {
      undefined === nextProps[_propKey] && (!(attributeConfig = validAttributes[_propKey]) || updatePayload && undefined !== updatePayload[_propKey] || (prevProp = prevProps[_propKey], undefined !== prevProp && ("object" !== typeof attributeConfig || "function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[_propKey] = null, removedKeys || (removedKeys = {}), removedKeys[_propKey] || (removedKeys[_propKey] = true, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig))));
    }

    return updatePayload;
  }

  var restoreTarget = null,
      restoreQueue = null;

  function restoreStateOfTarget(target) {
    if (getInstanceFromNode(target)) throw ReactError(Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue."));
  }

  function batchedUpdatesImpl(fn, bookkeeping) {
    return fn(bookkeeping);
  }

  function flushDiscreteUpdatesImpl() {}

  var isInsideEventHandler = false;

  function batchedUpdates(fn, bookkeeping) {
    if (isInsideEventHandler) return fn(bookkeeping);
    isInsideEventHandler = true;

    try {
      return batchedUpdatesImpl(fn, bookkeeping);
    } finally {
      if (isInsideEventHandler = false, null !== restoreTarget || null !== restoreQueue) if (flushDiscreteUpdatesImpl(), restoreTarget && (bookkeeping = restoreTarget, fn = restoreQueue, restoreQueue = restoreTarget = null, restoreStateOfTarget(bookkeeping), fn)) for (bookkeeping = 0; bookkeeping < fn.length; bookkeeping++) {
        restoreStateOfTarget(fn[bookkeeping]);
      }
    }
  }

  function _inherits(subClass, superClass) {
    if ("function" !== typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
  }

  (function (_React$Component) {
    function ReactNativeComponent() {
      if (!(this instanceof ReactNativeComponent)) throw new TypeError("Cannot call a class as a function");

      var call = _React$Component.apply(this, arguments);

      if (!this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return !call || "object" !== typeof call && "function" !== typeof call ? this : call;
    }

    _inherits(ReactNativeComponent, _React$Component);

    ReactNativeComponent.prototype.blur = function () {};

    ReactNativeComponent.prototype.focus = function () {};

    ReactNativeComponent.prototype.measure = function () {};

    ReactNativeComponent.prototype.measureInWindow = function () {};

    ReactNativeComponent.prototype.measureLayout = function () {};

    ReactNativeComponent.prototype.setNativeProps = function () {};

    return ReactNativeComponent;
  })(React.Component);

  new Map();
  new Map();
  new Set();
  new Map();

  function dispatchEvent(target, topLevelType, nativeEvent) {
    batchedUpdates(function () {
      var events = nativeEvent.target;

      for (var events$jscomp$0 = null, i = 0; i < plugins.length; i++) {
        var possiblePlugin = plugins[i];
        possiblePlugin && (possiblePlugin = possiblePlugin.extractEvents(topLevelType, target, nativeEvent, events)) && (events$jscomp$0 = accumulateInto(events$jscomp$0, possiblePlugin));
      }

      events = events$jscomp$0;
      null !== events && (eventQueue = accumulateInto(eventQueue, events));
      events = eventQueue;
      eventQueue = null;

      if (events) {
        forEachAccumulated(events, executeDispatchesAndReleaseTopLevel);
        if (eventQueue) throw ReactError(Error("processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented."));
        if (hasRethrowError) throw events = rethrowError, hasRethrowError = false, rethrowError = null, events;
      }
    });
  }

  function shim$1() {
    throw ReactError(Error("The current renderer does not support hydration. This error is likely caused by a bug in React. Please file an issue."));
  }

  var _nativeFabricUIManage$1 = nativeFabricUIManager,
      createNode = _nativeFabricUIManage$1.createNode,
      cloneNode = _nativeFabricUIManage$1.cloneNode,
      cloneNodeWithNewChildren = _nativeFabricUIManage$1.cloneNodeWithNewChildren,
      cloneNodeWithNewChildrenAndProps = _nativeFabricUIManage$1.cloneNodeWithNewChildrenAndProps,
      cloneNodeWithNewProps = _nativeFabricUIManage$1.cloneNodeWithNewProps,
      createChildNodeSet = _nativeFabricUIManage$1.createChildSet,
      appendChildNode = _nativeFabricUIManage$1.appendChild,
      appendChildNodeToSet = _nativeFabricUIManage$1.appendChildToSet,
      completeRoot = _nativeFabricUIManage$1.completeRoot,
      registerEventHandler = _nativeFabricUIManage$1.registerEventHandler,
      fabricMeasure = _nativeFabricUIManage$1.measure,
      fabricMeasureInWindow = _nativeFabricUIManage$1.measureInWindow,
      fabricMeasureLayout = _nativeFabricUIManage$1.measureLayout,
      getViewConfigForType = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get,
      nextReactTag = 2;
  registerEventHandler && registerEventHandler(dispatchEvent);

  var ReactFabricHostComponent = function () {
    function ReactFabricHostComponent(tag, viewConfig, props, internalInstanceHandle) {
      if (!(this instanceof ReactFabricHostComponent)) throw new TypeError("Cannot call a class as a function");
      this._nativeTag = tag;
      this.viewConfig = viewConfig;
      this.currentProps = props;
      this._internalInstanceHandle = internalInstanceHandle;
    }

    ReactFabricHostComponent.prototype.blur = function () {
      ReactNativePrivateInterface.TextInputState.blurTextInput(this._nativeTag);
    };

    ReactFabricHostComponent.prototype.focus = function () {
      ReactNativePrivateInterface.TextInputState.focusTextInput(this._nativeTag);
    };

    ReactFabricHostComponent.prototype.measure = function (callback) {
      fabricMeasure(this._internalInstanceHandle.stateNode.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactFabricHostComponent.prototype.measureInWindow = function (callback) {
      fabricMeasureInWindow(this._internalInstanceHandle.stateNode.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactFabricHostComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
      "number" !== typeof relativeToNativeNode && relativeToNativeNode instanceof ReactFabricHostComponent && fabricMeasureLayout(this._internalInstanceHandle.stateNode.node, relativeToNativeNode._internalInstanceHandle.stateNode.node, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));
    };

    ReactFabricHostComponent.prototype.setNativeProps = function () {};

    return ReactFabricHostComponent;
  }();

  function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
    if (!hostContext.isInAParentText) throw ReactError(Error("Text strings must be rendered within a <Text> component."));
    hostContext = nextReactTag;
    nextReactTag += 2;
    return {
      node: createNode(hostContext, "RCTRawText", rootContainerInstance, {
        text: text
      }, internalInstanceHandle)
    };
  }

  var scheduleTimeout = setTimeout,
      cancelTimeout = clearTimeout;

  function cloneHiddenInstance(instance) {
    var node = instance.node;
    var updatePayload = diffProperties(null, emptyObject, {
      style: {
        display: "none"
      }
    }, instance.canonical.viewConfig.validAttributes);
    return {
      node: cloneNodeWithNewProps(node, updatePayload),
      canonical: instance.canonical
    };
  }

  var BEFORE_SLASH_RE = /^(.*)[\\\/]/;

  function getStackByFiberInDevAndProd(workInProgress) {
    var info = "";

    do {
      a: switch (workInProgress.tag) {
        case 3:
        case 4:
        case 6:
        case 7:
        case 10:
        case 9:
          var JSCompiler_inline_result = "";
          break a;

        default:
          var owner = workInProgress._debugOwner,
              source = workInProgress._debugSource,
              name = getComponentName(workInProgress.type);
          JSCompiler_inline_result = null;
          owner && (JSCompiler_inline_result = getComponentName(owner.type));
          owner = name;
          name = "";
          source ? name = " (at " + source.fileName.replace(BEFORE_SLASH_RE, "") + ":" + source.lineNumber + ")" : JSCompiler_inline_result && (name = " (created by " + JSCompiler_inline_result + ")");
          JSCompiler_inline_result = "\n    in " + (owner || "Unknown") + name;
      }

      info += JSCompiler_inline_result;
      workInProgress = workInProgress.return;
    } while (workInProgress);

    return info;
  }

  new Set();
  var valueStack = [],
      index = -1;

  function pop(cursor) {
    0 > index || (cursor.current = valueStack[index], valueStack[index] = null, index--);
  }

  function push(cursor, value) {
    index++;
    valueStack[index] = cursor.current;
    cursor.current = value;
  }

  var emptyContextObject = {},
      contextStackCursor = {
    current: emptyContextObject
  },
      didPerformWorkStackCursor = {
    current: false
  },
      previousContext = emptyContextObject;

  function getMaskedContext(workInProgress, unmaskedContext) {
    var contextTypes = workInProgress.type.contextTypes;
    if (!contextTypes) return emptyContextObject;
    var instance = workInProgress.stateNode;
    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
    var context = {},
        key;

    for (key in contextTypes) {
      context[key] = unmaskedContext[key];
    }

    instance && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return context;
  }

  function isContextProvider(type) {
    type = type.childContextTypes;
    return null !== type && undefined !== type;
  }

  function popContext(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function popTopLevelContextObject(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function pushTopLevelContextObject(fiber, context, didChange) {
    if (contextStackCursor.current !== emptyContextObject) throw ReactError(Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue."));
    push(contextStackCursor, context, fiber);
    push(didPerformWorkStackCursor, didChange, fiber);
  }

  function processChildContext(fiber, type, parentContext) {
    var instance = fiber.stateNode;
    fiber = type.childContextTypes;
    if ("function" !== typeof instance.getChildContext) return parentContext;
    instance = instance.getChildContext();

    for (var contextKey in instance) {
      if (!(contextKey in fiber)) throw ReactError(Error((getComponentName(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.'));
    }

    return _extends({}, parentContext, instance);
  }

  function pushContextProvider(workInProgress) {
    var instance = workInProgress.stateNode;
    instance = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
    previousContext = contextStackCursor.current;
    push(contextStackCursor, instance, workInProgress);
    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
    return true;
  }

  function invalidateContextProvider(workInProgress, type, didChange) {
    var instance = workInProgress.stateNode;
    if (!instance) throw ReactError(Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue."));
    didChange ? (type = processChildContext(workInProgress, type, previousContext), instance.__reactInternalMemoizedMergedChildContext = type, pop(didPerformWorkStackCursor, workInProgress), pop(contextStackCursor, workInProgress), push(contextStackCursor, type, workInProgress)) : pop(didPerformWorkStackCursor, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  }

  var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority,
      Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback,
      Scheduler_cancelCallback = Scheduler.unstable_cancelCallback,
      Scheduler_shouldYield = Scheduler.unstable_shouldYield,
      Scheduler_requestPaint = Scheduler.unstable_requestPaint,
      Scheduler_now = Scheduler.unstable_now,
      Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,
      Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority,
      Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,
      Scheduler_NormalPriority = Scheduler.unstable_NormalPriority,
      Scheduler_LowPriority = Scheduler.unstable_LowPriority,
      Scheduler_IdlePriority = Scheduler.unstable_IdlePriority,
      fakeCallbackNode = {},
      requestPaint = undefined !== Scheduler_requestPaint ? Scheduler_requestPaint : function () {},
      syncQueue = null,
      immediateQueueCallbackNode = null,
      isFlushingSyncQueue = false,
      initialTimeMs = Scheduler_now(),
      now = 1e4 > initialTimeMs ? Scheduler_now : function () {
    return Scheduler_now() - initialTimeMs;
  };

  function getCurrentPriorityLevel() {
    switch (Scheduler_getCurrentPriorityLevel()) {
      case Scheduler_ImmediatePriority:
        return 99;

      case Scheduler_UserBlockingPriority:
        return 98;

      case Scheduler_NormalPriority:
        return 97;

      case Scheduler_LowPriority:
        return 96;

      case Scheduler_IdlePriority:
        return 95;

      default:
        throw ReactError(Error("Unknown priority level."));
    }
  }

  function reactPriorityToSchedulerPriority(reactPriorityLevel) {
    switch (reactPriorityLevel) {
      case 99:
        return Scheduler_ImmediatePriority;

      case 98:
        return Scheduler_UserBlockingPriority;

      case 97:
        return Scheduler_NormalPriority;

      case 96:
        return Scheduler_LowPriority;

      case 95:
        return Scheduler_IdlePriority;

      default:
        throw ReactError(Error("Unknown priority level."));
    }
  }

  function runWithPriority$1(reactPriorityLevel, fn) {
    reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
    return Scheduler_runWithPriority(reactPriorityLevel, fn);
  }

  function scheduleCallback(reactPriorityLevel, callback, options) {
    reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
    return Scheduler_scheduleCallback(reactPriorityLevel, callback, options);
  }

  function scheduleSyncCallback(callback) {
    null === syncQueue ? (syncQueue = [callback], immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl)) : syncQueue.push(callback);
    return fakeCallbackNode;
  }

  function flushSyncCallbackQueue() {
    null !== immediateQueueCallbackNode && Scheduler_cancelCallback(immediateQueueCallbackNode);
    flushSyncCallbackQueueImpl();
  }

  function flushSyncCallbackQueueImpl() {
    if (!isFlushingSyncQueue && null !== syncQueue) {
      isFlushingSyncQueue = true;
      var i = 0;

      try {
        var queue = syncQueue;
        runWithPriority$1(99, function () {
          for (; i < queue.length; i++) {
            var callback = queue[i];

            do {
              callback = callback(true);
            } while (null !== callback);
          }
        });
        syncQueue = null;
      } catch (error) {
        throw null !== syncQueue && (syncQueue = syncQueue.slice(i + 1)), Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue), error;
      } finally {
        isFlushingSyncQueue = false;
      }
    }
  }

  function inferPriorityFromExpirationTime(currentTime, expirationTime) {
    if (1073741823 === expirationTime) return 99;
    if (1 === expirationTime) return 95;
    currentTime = 10 * (1073741821 - expirationTime) - 10 * (1073741821 - currentTime);
    return 0 >= currentTime ? 99 : 250 >= currentTime ? 98 : 5250 >= currentTime ? 97 : 95;
  }

  function is(x, y) {
    return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
  }

  var hasOwnProperty = Object.prototype.hasOwnProperty;

  function shallowEqual(objA, objB) {
    if (is(objA, objB)) return true;
    if ("object" !== typeof objA || null === objA || "object" !== typeof objB || null === objB) return false;
    var keysA = Object.keys(objA),
        keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) return false;

    for (keysB = 0; keysB < keysA.length; keysB++) {
      if (!hasOwnProperty.call(objB, keysA[keysB]) || !is(objA[keysA[keysB]], objB[keysA[keysB]])) return false;
    }

    return true;
  }

  function resolveDefaultProps(Component, baseProps) {
    if (Component && Component.defaultProps) {
      baseProps = _extends({}, baseProps);
      Component = Component.defaultProps;

      for (var propName in Component) {
        undefined === baseProps[propName] && (baseProps[propName] = Component[propName]);
      }
    }

    return baseProps;
  }

  function readLazyComponentType(lazyComponent) {
    var result = lazyComponent._result;

    switch (lazyComponent._status) {
      case 1:
        return result;

      case 2:
        throw result;

      case 0:
        throw result;

      default:
        lazyComponent._status = 0;
        result = lazyComponent._ctor;
        result = result();
        result.then(function (moduleObject) {
          0 === lazyComponent._status && (moduleObject = moduleObject.default, lazyComponent._status = 1, lazyComponent._result = moduleObject);
        }, function (error) {
          0 === lazyComponent._status && (lazyComponent._status = 2, lazyComponent._result = error);
        });

        switch (lazyComponent._status) {
          case 1:
            return lazyComponent._result;

          case 2:
            throw lazyComponent._result;
        }

        lazyComponent._result = result;
        throw result;
    }
  }

  var valueCursor = {
    current: null
  },
      currentlyRenderingFiber = null,
      lastContextDependency = null,
      lastContextWithAllBitsObserved = null;

  function resetContextDependencies() {
    lastContextWithAllBitsObserved = lastContextDependency = currentlyRenderingFiber = null;
  }

  function pushProvider(providerFiber, nextValue) {
    var context = providerFiber.type._context;
    push(valueCursor, context._currentValue2, providerFiber);
    context._currentValue2 = nextValue;
  }

  function popProvider(providerFiber) {
    var currentValue = valueCursor.current;
    pop(valueCursor, providerFiber);
    providerFiber.type._context._currentValue2 = currentValue;
  }

  function scheduleWorkOnParentPath(parent, renderExpirationTime) {
    for (; null !== parent;) {
      var alternate = parent.alternate;
      if (parent.childExpirationTime < renderExpirationTime) parent.childExpirationTime = renderExpirationTime, null !== alternate && alternate.childExpirationTime < renderExpirationTime && (alternate.childExpirationTime = renderExpirationTime);else if (null !== alternate && alternate.childExpirationTime < renderExpirationTime) alternate.childExpirationTime = renderExpirationTime;else break;
      parent = parent.return;
    }
  }

  function prepareToReadContext(workInProgress, renderExpirationTime) {
    currentlyRenderingFiber = workInProgress;
    lastContextWithAllBitsObserved = lastContextDependency = null;
    workInProgress = workInProgress.dependencies;
    null !== workInProgress && null !== workInProgress.firstContext && (workInProgress.expirationTime >= renderExpirationTime && (didReceiveUpdate = true), workInProgress.firstContext = null);
  }

  function readContext(context, observedBits) {
    if (lastContextWithAllBitsObserved !== context && false !== observedBits && 0 !== observedBits) {
      if ("number" !== typeof observedBits || 1073741823 === observedBits) lastContextWithAllBitsObserved = context, observedBits = 1073741823;
      observedBits = {
        context: context,
        observedBits: observedBits,
        next: null
      };

      if (null === lastContextDependency) {
        if (null === currentlyRenderingFiber) throw ReactError(Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."));
        lastContextDependency = observedBits;
        currentlyRenderingFiber.dependencies = {
          expirationTime: 0,
          firstContext: observedBits,
          responders: null
        };
      } else lastContextDependency = lastContextDependency.next = observedBits;
    }

    return context._currentValue2;
  }

  var hasForceUpdate = false;

  function createUpdateQueue(baseState) {
    return {
      baseState: baseState,
      firstUpdate: null,
      lastUpdate: null,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function cloneUpdateQueue(currentQueue) {
    return {
      baseState: currentQueue.baseState,
      firstUpdate: currentQueue.firstUpdate,
      lastUpdate: currentQueue.lastUpdate,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function createUpdate(expirationTime, suspenseConfig) {
    return {
      expirationTime: expirationTime,
      suspenseConfig: suspenseConfig,
      tag: 0,
      payload: null,
      callback: null,
      next: null,
      nextEffect: null
    };
  }

  function appendUpdateToQueue(queue, update) {
    null === queue.lastUpdate ? queue.firstUpdate = queue.lastUpdate = update : (queue.lastUpdate.next = update, queue.lastUpdate = update);
  }

  function enqueueUpdate(fiber, update) {
    var alternate = fiber.alternate;

    if (null === alternate) {
      var queue1 = fiber.updateQueue;
      var queue2 = null;
      null === queue1 && (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState));
    } else queue1 = fiber.updateQueue, queue2 = alternate.updateQueue, null === queue1 ? null === queue2 ? (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState), queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState)) : queue1 = fiber.updateQueue = cloneUpdateQueue(queue2) : null === queue2 && (queue2 = alternate.updateQueue = cloneUpdateQueue(queue1));

    null === queue2 || queue1 === queue2 ? appendUpdateToQueue(queue1, update) : null === queue1.lastUpdate || null === queue2.lastUpdate ? (appendUpdateToQueue(queue1, update), appendUpdateToQueue(queue2, update)) : (appendUpdateToQueue(queue1, update), queue2.lastUpdate = update);
  }

  function enqueueCapturedUpdate(workInProgress, update) {
    var workInProgressQueue = workInProgress.updateQueue;
    workInProgressQueue = null === workInProgressQueue ? workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState) : ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
    null === workInProgressQueue.lastCapturedUpdate ? workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update : (workInProgressQueue.lastCapturedUpdate.next = update, workInProgressQueue.lastCapturedUpdate = update);
  }

  function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
    var current = workInProgress.alternate;
    null !== current && queue === current.updateQueue && (queue = workInProgress.updateQueue = cloneUpdateQueue(queue));
    return queue;
  }

  function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
    switch (update.tag) {
      case 1:
        return workInProgress = update.payload, "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;

      case 3:
        workInProgress.effectTag = workInProgress.effectTag & -2049 | 64;

      case 0:
        workInProgress = update.payload;
        nextProps = "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;
        if (null === nextProps || undefined === nextProps) break;
        return _extends({}, prevState, nextProps);

      case 2:
        hasForceUpdate = true;
    }

    return prevState;
  }

  function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
    hasForceUpdate = false;
    queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

    for (var newBaseState = queue.baseState, newFirstUpdate = null, newExpirationTime = 0, update = queue.firstUpdate, resultState = newBaseState; null !== update;) {
      var updateExpirationTime = update.expirationTime;
      updateExpirationTime < renderExpirationTime ? (null === newFirstUpdate && (newFirstUpdate = update, newBaseState = resultState), newExpirationTime < updateExpirationTime && (newExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, update.suspenseConfig), resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastEffect ? queue.firstEffect = queue.lastEffect = update : (queue.lastEffect.nextEffect = update, queue.lastEffect = update)));
      update = update.next;
    }

    updateExpirationTime = null;

    for (update = queue.firstCapturedUpdate; null !== update;) {
      var _updateExpirationTime = update.expirationTime;
      _updateExpirationTime < renderExpirationTime ? (null === updateExpirationTime && (updateExpirationTime = update, null === newFirstUpdate && (newBaseState = resultState)), newExpirationTime < _updateExpirationTime && (newExpirationTime = _updateExpirationTime)) : (resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastCapturedEffect ? queue.firstCapturedEffect = queue.lastCapturedEffect = update : (queue.lastCapturedEffect.nextEffect = update, queue.lastCapturedEffect = update)));
      update = update.next;
    }

    null === newFirstUpdate && (queue.lastUpdate = null);
    null === updateExpirationTime ? queue.lastCapturedUpdate = null : workInProgress.effectTag |= 32;
    null === newFirstUpdate && null === updateExpirationTime && (newBaseState = resultState);
    queue.baseState = newBaseState;
    queue.firstUpdate = newFirstUpdate;
    queue.firstCapturedUpdate = updateExpirationTime;
    workInProgress.expirationTime = newExpirationTime;
    workInProgress.memoizedState = resultState;
  }

  function commitUpdateQueue(finishedWork, finishedQueue, instance) {
    null !== finishedQueue.firstCapturedUpdate && (null !== finishedQueue.lastUpdate && (finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate, finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate), finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null);
    commitUpdateEffects(finishedQueue.firstEffect, instance);
    finishedQueue.firstEffect = finishedQueue.lastEffect = null;
    commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
    finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
  }

  function commitUpdateEffects(effect, instance) {
    for (; null !== effect;) {
      var _callback3 = effect.callback;

      if (null !== _callback3) {
        effect.callback = null;
        var context = instance;
        if ("function" !== typeof _callback3) throw ReactError(Error("Invalid argument passed as callback. Expected a function. Instead received: " + _callback3));

        _callback3.call(context);
      }

      effect = effect.nextEffect;
    }
  }

  var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig,
      emptyRefsObject = new React.Component().refs;

  function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
    ctor = workInProgress.memoizedState;
    getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);
    getDerivedStateFromProps = null === getDerivedStateFromProps || undefined === getDerivedStateFromProps ? ctor : _extends({}, ctor, getDerivedStateFromProps);
    workInProgress.memoizedState = getDerivedStateFromProps;
    nextProps = workInProgress.updateQueue;
    null !== nextProps && 0 === workInProgress.expirationTime && (nextProps.baseState = getDerivedStateFromProps);
  }

  var classComponentUpdater = {
    isMounted: function isMounted(component) {
      return (component = component._reactInternalFiber) ? 2 === isFiberMountedImpl(component) : false;
    },
    enqueueSetState: function enqueueSetState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.payload = payload;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    },
    enqueueReplaceState: function enqueueReplaceState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.tag = 1;
      suspenseConfig.payload = payload;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    },
    enqueueForceUpdate: function enqueueForceUpdate(inst, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.tag = 2;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    }
  };

  function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
    workInProgress = workInProgress.stateNode;
    return "function" === typeof workInProgress.shouldComponentUpdate ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext) : ctor.prototype && ctor.prototype.isPureReactComponent ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState) : true;
  }

  function constructClassInstance(workInProgress, ctor, props) {
    var isLegacyContextConsumer = false,
        unmaskedContext = emptyContextObject;
    var context = ctor.contextType;
    "object" === typeof context && null !== context ? context = readContext(context) : (unmaskedContext = isContextProvider(ctor) ? previousContext : contextStackCursor.current, isLegacyContextConsumer = ctor.contextTypes, context = (isLegacyContextConsumer = null !== isLegacyContextConsumer && undefined !== isLegacyContextConsumer) ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject);
    ctor = new ctor(props, context);
    workInProgress.memoizedState = null !== ctor.state && undefined !== ctor.state ? ctor.state : null;
    ctor.updater = classComponentUpdater;
    workInProgress.stateNode = ctor;
    ctor._reactInternalFiber = workInProgress;
    isLegacyContextConsumer && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return ctor;
  }

  function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
    workInProgress = instance.state;
    "function" === typeof instance.componentWillReceiveProps && instance.componentWillReceiveProps(newProps, nextContext);
    "function" === typeof instance.UNSAFE_componentWillReceiveProps && instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
    instance.state !== workInProgress && classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }

  function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
    var instance = workInProgress.stateNode;
    instance.props = newProps;
    instance.state = workInProgress.memoizedState;
    instance.refs = emptyRefsObject;
    var contextType = ctor.contextType;
    "object" === typeof contextType && null !== contextType ? instance.context = readContext(contextType) : (contextType = isContextProvider(ctor) ? previousContext : contextStackCursor.current, instance.context = getMaskedContext(workInProgress, contextType));
    contextType = workInProgress.updateQueue;
    null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState);
    contextType = ctor.getDerivedStateFromProps;
    "function" === typeof contextType && (applyDerivedStateFromProps(workInProgress, ctor, contextType, newProps), instance.state = workInProgress.memoizedState);
    "function" === typeof ctor.getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || (ctor = instance.state, "function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount(), ctor !== instance.state && classComponentUpdater.enqueueReplaceState(instance, instance.state, null), contextType = workInProgress.updateQueue, null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState));
    "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4);
  }

  var isArray = Array.isArray;

  function coerceRef(returnFiber, current$$1, element) {
    returnFiber = element.ref;

    if (null !== returnFiber && "function" !== typeof returnFiber && "object" !== typeof returnFiber) {
      if (element._owner) {
        element = element._owner;
        var inst = undefined;

        if (element) {
          if (1 !== element.tag) throw ReactError(Error("Function components cannot have refs. Did you mean to use React.forwardRef()?"));
          inst = element.stateNode;
        }

        if (!inst) throw ReactError(Error("Missing owner for string ref " + returnFiber + ". This error is likely caused by a bug in React. Please file an issue."));
        var stringRef = "" + returnFiber;
        if (null !== current$$1 && null !== current$$1.ref && "function" === typeof current$$1.ref && current$$1.ref._stringRef === stringRef) return current$$1.ref;

        current$$1 = function current$$1(value) {
          var refs = inst.refs;
          refs === emptyRefsObject && (refs = inst.refs = {});
          null === value ? delete refs[stringRef] : refs[stringRef] = value;
        };

        current$$1._stringRef = stringRef;
        return current$$1;
      }

      if ("string" !== typeof returnFiber) throw ReactError(Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null."));
      if (!element._owner) throw ReactError(Error("Element ref was specified as a string (" + returnFiber + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information."));
    }

    return returnFiber;
  }

  function throwOnInvalidObjectType(returnFiber, newChild) {
    if ("textarea" !== returnFiber.type) throw ReactError(Error("Objects are not valid as a React child (found: " + ("[object Object]" === Object.prototype.toString.call(newChild) ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild) + ")."));
  }

  function ChildReconciler(shouldTrackSideEffects) {
    function deleteChild(returnFiber, childToDelete) {
      if (shouldTrackSideEffects) {
        var last = returnFiber.lastEffect;
        null !== last ? (last.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
        childToDelete.nextEffect = null;
        childToDelete.effectTag = 8;
      }
    }

    function deleteRemainingChildren(returnFiber, currentFirstChild) {
      if (!shouldTrackSideEffects) return null;

      for (; null !== currentFirstChild;) {
        deleteChild(returnFiber, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return null;
    }

    function mapRemainingChildren(returnFiber, currentFirstChild) {
      for (returnFiber = new Map(); null !== currentFirstChild;) {
        null !== currentFirstChild.key ? returnFiber.set(currentFirstChild.key, currentFirstChild) : returnFiber.set(currentFirstChild.index, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return returnFiber;
    }

    function useFiber(fiber, pendingProps, expirationTime) {
      fiber = createWorkInProgress(fiber, pendingProps, expirationTime);
      fiber.index = 0;
      fiber.sibling = null;
      return fiber;
    }

    function placeChild(newFiber, lastPlacedIndex, newIndex) {
      newFiber.index = newIndex;
      if (!shouldTrackSideEffects) return lastPlacedIndex;
      newIndex = newFiber.alternate;
      if (null !== newIndex) return newIndex = newIndex.index, newIndex < lastPlacedIndex ? (newFiber.effectTag = 2, lastPlacedIndex) : newIndex;
      newFiber.effectTag = 2;
      return lastPlacedIndex;
    }

    function placeSingleChild(newFiber) {
      shouldTrackSideEffects && null === newFiber.alternate && (newFiber.effectTag = 2);
      return newFiber;
    }

    function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
      if (null === current$$1 || 6 !== current$$1.tag) return current$$1 = createFiberFromText(textContent, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, textContent, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateElement(returnFiber, current$$1, element, expirationTime) {
      if (null !== current$$1 && current$$1.elementType === element.type) return expirationTime = useFiber(current$$1, element.props, expirationTime), expirationTime.ref = coerceRef(returnFiber, current$$1, element), expirationTime.return = returnFiber, expirationTime;
      expirationTime = createFiberFromTypeAndProps(element.type, element.key, element.props, null, returnFiber.mode, expirationTime);
      expirationTime.ref = coerceRef(returnFiber, current$$1, element);
      expirationTime.return = returnFiber;
      return expirationTime;
    }

    function updatePortal(returnFiber, current$$1, portal, expirationTime) {
      if (null === current$$1 || 4 !== current$$1.tag || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) return current$$1 = createFiberFromPortal(portal, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, portal.children || [], expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
      if (null === current$$1 || 7 !== current$$1.tag) return current$$1 = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, fragment, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function createChild(returnFiber, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = createFiberFromText("" + newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, null, newChild), expirationTime.return = returnFiber, expirationTime;

          case REACT_PORTAL_TYPE:
            return newChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return newChild = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null), newChild.return = returnFiber, newChild;
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
      var key = null !== oldFiber ? oldFiber.key : null;
      if ("string" === typeof newChild || "number" === typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return newChild.key === key ? newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key) : updateElement(returnFiber, oldFiber, newChild, expirationTime) : null;

          case REACT_PORTAL_TYPE:
            return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, expirationTime) : null;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return null !== key ? null : updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return existingChildren = existingChildren.get(newIdx) || null, updateTextNode(returnFiber, existingChildren, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, existingChildren, newChild.props.children, expirationTime, newChild.key) : updateElement(returnFiber, existingChildren, newChild, expirationTime);

          case REACT_PORTAL_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, updatePortal(returnFiber, existingChildren, newChild, expirationTime);
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return existingChildren = existingChildren.get(newIdx) || null, updateFragment(returnFiber, existingChildren, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
      for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;

      if (null === oldFiber) {
        for (; newIdx < newChildren.length; newIdx++) {
          oldFiber = createChild(returnFiber, newChildren[newIdx], expirationTime), null !== oldFiber && (currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber);
        }

        return resultingFirstChild;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); newIdx < newChildren.length; newIdx++) {
        nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, newChildren[newIdx], expirationTime), null !== nextOldFiber && (shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return resultingFirstChild;
    }

    function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
      var iteratorFn = getIteratorFn(newChildrenIterable);
      if ("function" !== typeof iteratorFn) throw ReactError(Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue."));
      newChildrenIterable = iteratorFn.call(newChildrenIterable);
      if (null == newChildrenIterable) throw ReactError(Error("An iterable object provided no iterator."));

      for (var previousNewFiber = iteratorFn = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null, step = newChildrenIterable.next(); null !== oldFiber && !step.done; newIdx++, step = newChildrenIterable.next()) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? iteratorFn = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), iteratorFn;

      if (null === oldFiber) {
        for (; !step.done; newIdx++, step = newChildrenIterable.next()) {
          step = createChild(returnFiber, step.value, expirationTime), null !== step && (currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
        }

        return iteratorFn;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); !step.done; newIdx++, step = newChildrenIterable.next()) {
        step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, expirationTime), null !== step && (shouldTrackSideEffects && null !== step.alternate && oldFiber.delete(null === step.key ? newIdx : step.key), currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return iteratorFn;
    }

    return function (returnFiber, currentFirstChild, newChild, expirationTime) {
      var isUnkeyedTopLevelFragment = "object" === typeof newChild && null !== newChild && newChild.type === REACT_FRAGMENT_TYPE && null === newChild.key;
      isUnkeyedTopLevelFragment && (newChild = newChild.props.children);
      var isObject = "object" === typeof newChild && null !== newChild;
      if (isObject) switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          a: {
            isObject = newChild.key;

            for (isUnkeyedTopLevelFragment = currentFirstChild; null !== isUnkeyedTopLevelFragment;) {
              if (isUnkeyedTopLevelFragment.key === isObject) {
                if (7 === isUnkeyedTopLevelFragment.tag ? newChild.type === REACT_FRAGMENT_TYPE : isUnkeyedTopLevelFragment.elementType === newChild.type) {
                  deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment.sibling);
                  currentFirstChild = useFiber(isUnkeyedTopLevelFragment, newChild.type === REACT_FRAGMENT_TYPE ? newChild.props.children : newChild.props, expirationTime);
                  currentFirstChild.ref = coerceRef(returnFiber, isUnkeyedTopLevelFragment, newChild);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                }

                deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment);
                break;
              } else deleteChild(returnFiber, isUnkeyedTopLevelFragment);

              isUnkeyedTopLevelFragment = isUnkeyedTopLevelFragment.sibling;
            }

            newChild.type === REACT_FRAGMENT_TYPE ? (currentFirstChild = createFiberFromFragment(newChild.props.children, returnFiber.mode, expirationTime, newChild.key), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, currentFirstChild, newChild), expirationTime.return = returnFiber, returnFiber = expirationTime);
          }

          return placeSingleChild(returnFiber);

        case REACT_PORTAL_TYPE:
          a: {
            for (isUnkeyedTopLevelFragment = newChild.key; null !== currentFirstChild;) {
              if (currentFirstChild.key === isUnkeyedTopLevelFragment) {
                if (4 === currentFirstChild.tag && currentFirstChild.stateNode.containerInfo === newChild.containerInfo && currentFirstChild.stateNode.implementation === newChild.implementation) {
                  deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                  currentFirstChild = useFiber(currentFirstChild, newChild.children || [], expirationTime);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                }

                deleteRemainingChildren(returnFiber, currentFirstChild);
                break;
              } else deleteChild(returnFiber, currentFirstChild);

              currentFirstChild = currentFirstChild.sibling;
            }

            currentFirstChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
            currentFirstChild.return = returnFiber;
            returnFiber = currentFirstChild;
          }

          return placeSingleChild(returnFiber);
      }
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = "" + newChild, null !== currentFirstChild && 6 === currentFirstChild.tag ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling), currentFirstChild = useFiber(currentFirstChild, newChild, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (deleteRemainingChildren(returnFiber, currentFirstChild), currentFirstChild = createFiberFromText(newChild, returnFiber.mode, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild), placeSingleChild(returnFiber);
      if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
      if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
      isObject && throwOnInvalidObjectType(returnFiber, newChild);
      if ("undefined" === typeof newChild && !isUnkeyedTopLevelFragment) switch (returnFiber.tag) {
        case 1:
        case 0:
          throw returnFiber = returnFiber.type, ReactError(Error((returnFiber.displayName || returnFiber.name || "Component") + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null."));
      }
      return deleteRemainingChildren(returnFiber, currentFirstChild);
    };
  }

  var reconcileChildFibers = ChildReconciler(true),
      mountChildFibers = ChildReconciler(false),
      NO_CONTEXT = {},
      contextStackCursor$1 = {
    current: NO_CONTEXT
  },
      contextFiberStackCursor = {
    current: NO_CONTEXT
  },
      rootInstanceStackCursor = {
    current: NO_CONTEXT
  };

  function requiredContext(c) {
    if (c === NO_CONTEXT) throw ReactError(Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue."));
    return c;
  }

  function pushHostContainer(fiber, nextRootInstance) {
    push(rootInstanceStackCursor, nextRootInstance, fiber);
    push(contextFiberStackCursor, fiber, fiber);
    push(contextStackCursor$1, NO_CONTEXT, fiber);
    pop(contextStackCursor$1, fiber);
    push(contextStackCursor$1, {
      isInAParentText: false
    }, fiber);
  }

  function popHostContainer(fiber) {
    pop(contextStackCursor$1, fiber);
    pop(contextFiberStackCursor, fiber);
    pop(rootInstanceStackCursor, fiber);
  }

  function pushHostContext(fiber) {
    requiredContext(rootInstanceStackCursor.current);
    var context = requiredContext(contextStackCursor$1.current);
    var nextContext = fiber.type;
    nextContext = "AndroidTextInput" === nextContext || "RCTMultilineTextInputView" === nextContext || "RCTSinglelineTextInputView" === nextContext || "RCTText" === nextContext || "RCTVirtualText" === nextContext;
    nextContext = context.isInAParentText !== nextContext ? {
      isInAParentText: nextContext
    } : context;
    context !== nextContext && (push(contextFiberStackCursor, fiber, fiber), push(contextStackCursor$1, nextContext, fiber));
  }

  function popHostContext(fiber) {
    contextFiberStackCursor.current === fiber && (pop(contextStackCursor$1, fiber), pop(contextFiberStackCursor, fiber));
  }

  var SubtreeSuspenseContextMask = 1,
      InvisibleParentSuspenseContext = 1,
      ForceSuspenseFallback = 2,
      suspenseStackCursor = {
    current: 0
  };

  function findFirstSuspended(row) {
    for (var node = row; null !== node;) {
      if (13 === node.tag) {
        if (null !== node.memoizedState) return node;
      } else if (19 === node.tag && undefined !== node.memoizedProps.revealOrder) {
        if (0 !== (node.effectTag & 64)) return node;
      } else if (null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === row) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === row) return null;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }

    return null;
  }

  function createResponderListener(responder, props) {
    return {
      responder: responder,
      props: props
    };
  }

  var NoEffect$1 = 0,
      UnmountSnapshot = 2,
      UnmountMutation = 4,
      MountMutation = 8,
      UnmountLayout = 16,
      MountLayout = 32,
      MountPassive = 64,
      UnmountPassive = 128,
      ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,
      renderExpirationTime$1 = 0,
      currentlyRenderingFiber$1 = null,
      currentHook = null,
      nextCurrentHook = null,
      firstWorkInProgressHook = null,
      workInProgressHook = null,
      nextWorkInProgressHook = null,
      remainingExpirationTime = 0,
      componentUpdateQueue = null,
      sideEffectTag = 0,
      didScheduleRenderPhaseUpdate = false,
      renderPhaseUpdates = null,
      numberOfReRenders = 0;

  function throwInvalidHookError() {
    throw ReactError(Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem."));
  }

  function areHookInputsEqual(nextDeps, prevDeps) {
    if (null === prevDeps) return false;

    for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
      if (!is(nextDeps[i], prevDeps[i])) return false;
    }

    return true;
  }

  function renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {
    renderExpirationTime$1 = nextRenderExpirationTime;
    currentlyRenderingFiber$1 = workInProgress;
    nextCurrentHook = null !== current ? current.memoizedState : null;
    ReactCurrentDispatcher$1.current = null === nextCurrentHook ? HooksDispatcherOnMount : HooksDispatcherOnUpdate;
    workInProgress = Component(props, refOrContext);

    if (didScheduleRenderPhaseUpdate) {
      do {
        didScheduleRenderPhaseUpdate = false, numberOfReRenders += 1, nextCurrentHook = null !== current ? current.memoizedState : null, nextWorkInProgressHook = firstWorkInProgressHook, componentUpdateQueue = workInProgressHook = currentHook = null, ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdate, workInProgress = Component(props, refOrContext);
      } while (didScheduleRenderPhaseUpdate);

      renderPhaseUpdates = null;
      numberOfReRenders = 0;
    }

    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    current = currentlyRenderingFiber$1;
    current.memoizedState = firstWorkInProgressHook;
    current.expirationTime = remainingExpirationTime;
    current.updateQueue = componentUpdateQueue;
    current.effectTag |= sideEffectTag;
    current = null !== currentHook && null !== currentHook.next;
    renderExpirationTime$1 = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    if (current) throw ReactError(Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement."));
    return workInProgress;
  }

  function resetHooks() {
    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    renderExpirationTime$1 = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    didScheduleRenderPhaseUpdate = false;
    renderPhaseUpdates = null;
    numberOfReRenders = 0;
  }

  function mountWorkInProgressHook() {
    var hook = {
      memoizedState: null,
      baseState: null,
      queue: null,
      baseUpdate: null,
      next: null
    };
    null === workInProgressHook ? firstWorkInProgressHook = workInProgressHook = hook : workInProgressHook = workInProgressHook.next = hook;
    return workInProgressHook;
  }

  function updateWorkInProgressHook() {
    if (null !== nextWorkInProgressHook) workInProgressHook = nextWorkInProgressHook, nextWorkInProgressHook = workInProgressHook.next, currentHook = nextCurrentHook, nextCurrentHook = null !== currentHook ? currentHook.next : null;else {
      if (null === nextCurrentHook) throw ReactError(Error("Rendered more hooks than during the previous render."));
      currentHook = nextCurrentHook;
      var newHook = {
        memoizedState: currentHook.memoizedState,
        baseState: currentHook.baseState,
        queue: currentHook.queue,
        baseUpdate: currentHook.baseUpdate,
        next: null
      };
      workInProgressHook = null === workInProgressHook ? firstWorkInProgressHook = newHook : workInProgressHook.next = newHook;
      nextCurrentHook = currentHook.next;
    }
    return workInProgressHook;
  }

  function basicStateReducer(state, action) {
    return "function" === typeof action ? action(state) : action;
  }

  function updateReducer(reducer) {
    var hook = updateWorkInProgressHook(),
        queue = hook.queue;
    if (null === queue) throw ReactError(Error("Should have a queue. This is likely a bug in React. Please file an issue."));
    queue.lastRenderedReducer = reducer;

    if (0 < numberOfReRenders) {
      var _dispatch = queue.dispatch;

      if (null !== renderPhaseUpdates) {
        var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

        if (undefined !== firstRenderPhaseUpdate) {
          renderPhaseUpdates.delete(queue);
          var newState = hook.memoizedState;

          do {
            newState = reducer(newState, firstRenderPhaseUpdate.action), firstRenderPhaseUpdate = firstRenderPhaseUpdate.next;
          } while (null !== firstRenderPhaseUpdate);

          is(newState, hook.memoizedState) || (didReceiveUpdate = true);
          hook.memoizedState = newState;
          hook.baseUpdate === queue.last && (hook.baseState = newState);
          queue.lastRenderedState = newState;
          return [newState, _dispatch];
        }
      }

      return [hook.memoizedState, _dispatch];
    }

    _dispatch = queue.last;
    var baseUpdate = hook.baseUpdate;
    newState = hook.baseState;
    null !== baseUpdate ? (null !== _dispatch && (_dispatch.next = null), _dispatch = baseUpdate.next) : _dispatch = null !== _dispatch ? _dispatch.next : null;

    if (null !== _dispatch) {
      var newBaseUpdate = firstRenderPhaseUpdate = null,
          _update = _dispatch,
          didSkip = false;

      do {
        var updateExpirationTime = _update.expirationTime;
        updateExpirationTime < renderExpirationTime$1 ? (didSkip || (didSkip = true, newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState), updateExpirationTime > remainingExpirationTime && (remainingExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, _update.suspenseConfig), newState = _update.eagerReducer === reducer ? _update.eagerState : reducer(newState, _update.action));
        baseUpdate = _update;
        _update = _update.next;
      } while (null !== _update && _update !== _dispatch);

      didSkip || (newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState);
      is(newState, hook.memoizedState) || (didReceiveUpdate = true);
      hook.memoizedState = newState;
      hook.baseUpdate = newBaseUpdate;
      hook.baseState = firstRenderPhaseUpdate;
      queue.lastRenderedState = newState;
    }

    return [hook.memoizedState, queue.dispatch];
  }

  function pushEffect(tag, create, destroy, deps) {
    tag = {
      tag: tag,
      create: create,
      destroy: destroy,
      deps: deps,
      next: null
    };
    null === componentUpdateQueue ? (componentUpdateQueue = {
      lastEffect: null
    }, componentUpdateQueue.lastEffect = tag.next = tag) : (create = componentUpdateQueue.lastEffect, null === create ? componentUpdateQueue.lastEffect = tag.next = tag : (destroy = create.next, create.next = tag, tag.next = destroy, componentUpdateQueue.lastEffect = tag));
    return tag;
  }

  function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = mountWorkInProgressHook();
    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, undefined, undefined === deps ? null : deps);
  }

  function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = updateWorkInProgressHook();
    deps = undefined === deps ? null : deps;
    var destroy = undefined;

    if (null !== currentHook) {
      var prevEffect = currentHook.memoizedState;
      destroy = prevEffect.destroy;

      if (null !== deps && areHookInputsEqual(deps, prevEffect.deps)) {
        pushEffect(NoEffect$1, create, destroy, deps);
        return;
      }
    }

    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, destroy, deps);
  }

  function imperativeHandleEffect(create, ref) {
    if ("function" === typeof ref) return create = create(), ref(create), function () {
      ref(null);
    };
    if (null !== ref && undefined !== ref) return create = create(), ref.current = create, function () {
      ref.current = null;
    };
  }

  function mountDebugValue() {}

  function dispatchAction(fiber, queue, action) {
    if (!(25 > numberOfReRenders)) throw ReactError(Error("Too many re-renders. React limits the number of renders to prevent an infinite loop."));
    var alternate = fiber.alternate;
    if (fiber === currentlyRenderingFiber$1 || null !== alternate && alternate === currentlyRenderingFiber$1) {
      if (didScheduleRenderPhaseUpdate = true, fiber = {
        expirationTime: renderExpirationTime$1,
        suspenseConfig: null,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      }, null === renderPhaseUpdates && (renderPhaseUpdates = new Map()), action = renderPhaseUpdates.get(queue), undefined === action) renderPhaseUpdates.set(queue, fiber);else {
        for (queue = action; null !== queue.next;) {
          queue = queue.next;
        }

        queue.next = fiber;
      }
    } else {
      var currentTime = requestCurrentTime(),
          _suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, fiber, _suspenseConfig);
      _suspenseConfig = {
        expirationTime: currentTime,
        suspenseConfig: _suspenseConfig,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      };
      var _last = queue.last;
      if (null === _last) _suspenseConfig.next = _suspenseConfig;else {
        var first = _last.next;
        null !== first && (_suspenseConfig.next = first);
        _last.next = _suspenseConfig;
      }
      queue.last = _suspenseConfig;
      if (0 === fiber.expirationTime && (null === alternate || 0 === alternate.expirationTime) && (alternate = queue.lastRenderedReducer, null !== alternate)) try {
        var currentState = queue.lastRenderedState,
            _eagerState = alternate(currentState, action);

        _suspenseConfig.eagerReducer = alternate;
        _suspenseConfig.eagerState = _eagerState;
        if (is(_eagerState, currentState)) return;
      } catch (error) {} finally {}
      scheduleUpdateOnFiber(fiber, currentTime);
    }
  }

  var ContextOnlyDispatcher = {
    readContext: readContext,
    useCallback: throwInvalidHookError,
    useContext: throwInvalidHookError,
    useEffect: throwInvalidHookError,
    useImperativeHandle: throwInvalidHookError,
    useLayoutEffect: throwInvalidHookError,
    useMemo: throwInvalidHookError,
    useReducer: throwInvalidHookError,
    useRef: throwInvalidHookError,
    useState: throwInvalidHookError,
    useDebugValue: throwInvalidHookError,
    useResponder: throwInvalidHookError
  },
      HooksDispatcherOnMount = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      mountWorkInProgressHook().memoizedState = [callback, undefined === deps ? null : deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return mountEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return mountEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return mountEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = mountWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: function useReducer(reducer, initialArg, init) {
      var hook = mountWorkInProgressHook();
      initialArg = undefined !== init ? init(initialArg) : initialArg;
      hook.memoizedState = hook.baseState = initialArg;
      reducer = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: reducer,
        lastRenderedState: initialArg
      };
      reducer = reducer.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, reducer);
      return [hook.memoizedState, reducer];
    },
    useRef: function useRef(initialValue) {
      var hook = mountWorkInProgressHook();
      initialValue = {
        current: initialValue
      };
      return hook.memoizedState = initialValue;
    },
    useState: function useState(initialState) {
      var hook = mountWorkInProgressHook();
      "function" === typeof initialState && (initialState = initialState());
      hook.memoizedState = hook.baseState = initialState;
      initialState = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: basicStateReducer,
        lastRenderedState: initialState
      };
      initialState = initialState.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, initialState);
      return [hook.memoizedState, initialState];
    },
    useDebugValue: mountDebugValue,
    useResponder: createResponderListener
  },
      HooksDispatcherOnUpdate = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      hook.memoizedState = [callback, deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return updateEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return updateEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return updateEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: updateReducer,
    useRef: function useRef() {
      return updateWorkInProgressHook().memoizedState;
    },
    useState: function useState(initialState) {
      return updateReducer(basicStateReducer, initialState);
    },
    useDebugValue: mountDebugValue,
    useResponder: createResponderListener
  },
      hydrationParentFiber = null,
      nextHydratableInstance = null,
      isHydrating = false;

  function tryHydrate(fiber, nextInstance) {
    switch (fiber.tag) {
      case 5:
        return nextInstance = shim$1(nextInstance, fiber.type, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 6:
        return nextInstance = shim$1(nextInstance, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 13:
        return false;

      default:
        return false;
    }
  }

  function tryToClaimNextHydratableInstance(fiber$jscomp$0) {
    if (isHydrating) {
      var nextInstance = nextHydratableInstance;

      if (nextInstance) {
        var firstAttemptedInstance = nextInstance;

        if (!tryHydrate(fiber$jscomp$0, nextInstance)) {
          nextInstance = shim$1(firstAttemptedInstance);

          if (!nextInstance || !tryHydrate(fiber$jscomp$0, nextInstance)) {
            fiber$jscomp$0.effectTag |= 2;
            isHydrating = false;
            hydrationParentFiber = fiber$jscomp$0;
            return;
          }

          var returnFiber = hydrationParentFiber,
              fiber = createFiber(5, null, null, 0);
          fiber.elementType = "DELETED";
          fiber.type = "DELETED";
          fiber.stateNode = firstAttemptedInstance;
          fiber.return = returnFiber;
          fiber.effectTag = 8;
          null !== returnFiber.lastEffect ? (returnFiber.lastEffect.nextEffect = fiber, returnFiber.lastEffect = fiber) : returnFiber.firstEffect = returnFiber.lastEffect = fiber;
        }

        hydrationParentFiber = fiber$jscomp$0;
        nextHydratableInstance = shim$1(nextInstance);
      } else fiber$jscomp$0.effectTag |= 2, isHydrating = false, hydrationParentFiber = fiber$jscomp$0;
    }
  }

  var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner,
      didReceiveUpdate = false;

  function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
    workInProgress.child = null === current$$1 ? mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime) : reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
  }

  function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    Component = Component.render;
    var ref = workInProgress.ref;
    prepareToReadContext(workInProgress, renderExpirationTime);
    nextProps = renderWithHooks(current$$1, workInProgress, Component, nextProps, ref, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, nextProps, renderExpirationTime);
    return workInProgress.child;
  }

  function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    if (null === current$$1) {
      var type = Component.type;
      if ("function" === typeof type && !shouldConstruct(type) && undefined === type.defaultProps && null === Component.compare && undefined === Component.defaultProps) return workInProgress.tag = 15, workInProgress.type = type, updateSimpleMemoComponent(current$$1, workInProgress, type, nextProps, updateExpirationTime, renderExpirationTime);
      current$$1 = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
      current$$1.ref = workInProgress.ref;
      current$$1.return = workInProgress;
      return workInProgress.child = current$$1;
    }

    type = current$$1.child;
    if (updateExpirationTime < renderExpirationTime && (updateExpirationTime = type.memoizedProps, Component = Component.compare, Component = null !== Component ? Component : shallowEqual, Component(updateExpirationTime, nextProps) && current$$1.ref === workInProgress.ref)) return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    current$$1 = createWorkInProgress(type, nextProps, renderExpirationTime);
    current$$1.ref = workInProgress.ref;
    current$$1.return = workInProgress;
    return workInProgress.child = current$$1;
  }

  function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    return null !== current$$1 && shallowEqual(current$$1.memoizedProps, nextProps) && current$$1.ref === workInProgress.ref && (didReceiveUpdate = false, updateExpirationTime < renderExpirationTime) ? bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
  }

  function markRef(current$$1, workInProgress) {
    var ref = workInProgress.ref;
    if (null === current$$1 && null !== ref || null !== current$$1 && current$$1.ref !== ref) workInProgress.effectTag |= 128;
  }

  function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    var context = isContextProvider(Component) ? previousContext : contextStackCursor.current;
    context = getMaskedContext(workInProgress, context);
    prepareToReadContext(workInProgress, renderExpirationTime);
    Component = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, Component, renderExpirationTime);
    return workInProgress.child;
  }

  function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    if (isContextProvider(Component)) {
      var hasContext = true;
      pushContextProvider(workInProgress);
    } else hasContext = false;

    prepareToReadContext(workInProgress, renderExpirationTime);
    if (null === workInProgress.stateNode) null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime), mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime), nextProps = true;else if (null === current$$1) {
      var instance = workInProgress.stateNode,
          oldProps = workInProgress.memoizedProps;
      instance.props = oldProps;
      var oldContext = instance.context,
          contextType = Component.contextType;
      "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType));
      var getDerivedStateFromProps = Component.getDerivedStateFromProps,
          hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate;
      hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType);
      hasForceUpdate = false;
      var oldState = workInProgress.memoizedState;
      oldContext = instance.state = oldState;
      var updateQueue = workInProgress.updateQueue;
      null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldContext = workInProgress.memoizedState);
      oldProps !== nextProps || oldState !== oldContext || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldContext = workInProgress.memoizedState), (oldProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldState, oldContext, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || ("function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount()), "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4)) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldContext), instance.props = nextProps, instance.state = oldContext, instance.context = contextType, nextProps = oldProps) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), nextProps = false);
    } else instance = workInProgress.stateNode, oldProps = workInProgress.memoizedProps, instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps), oldContext = instance.context, contextType = Component.contextType, "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType)), getDerivedStateFromProps = Component.getDerivedStateFromProps, (hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate) || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType), hasForceUpdate = false, oldContext = workInProgress.memoizedState, oldState = instance.state = oldContext, updateQueue = workInProgress.updateQueue, null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldState = workInProgress.memoizedState), oldProps !== nextProps || oldContext !== oldState || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldState = workInProgress.memoizedState), (getDerivedStateFromProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldContext, oldState, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillUpdate && "function" !== typeof instance.componentWillUpdate || ("function" === typeof instance.componentWillUpdate && instance.componentWillUpdate(nextProps, oldState, contextType), "function" === typeof instance.UNSAFE_componentWillUpdate && instance.UNSAFE_componentWillUpdate(nextProps, oldState, contextType)), "function" === typeof instance.componentDidUpdate && (workInProgress.effectTag |= 4), "function" === typeof instance.getSnapshotBeforeUpdate && (workInProgress.effectTag |= 256)) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldState), instance.props = nextProps, instance.state = oldState, instance.context = contextType, nextProps = getDerivedStateFromProps) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), nextProps = false);
    return finishClassComponent(current$$1, workInProgress, Component, nextProps, hasContext, renderExpirationTime);
  }

  function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
    markRef(current$$1, workInProgress);
    var didCaptureError = 0 !== (workInProgress.effectTag & 64);
    if (!shouldUpdate && !didCaptureError) return hasContext && invalidateContextProvider(workInProgress, Component, false), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    shouldUpdate = workInProgress.stateNode;
    ReactCurrentOwner$3.current = workInProgress;
    var nextChildren = didCaptureError && "function" !== typeof Component.getDerivedStateFromError ? null : shouldUpdate.render();
    workInProgress.effectTag |= 1;
    null !== current$$1 && didCaptureError ? (workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime), workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime)) : reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
    workInProgress.memoizedState = shouldUpdate.state;
    hasContext && invalidateContextProvider(workInProgress, Component, true);
    return workInProgress.child;
  }

  function pushHostRootContext(workInProgress) {
    var root = workInProgress.stateNode;
    root.pendingContext ? pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context) : root.context && pushTopLevelContextObject(workInProgress, root.context, false);
    pushHostContainer(workInProgress, root.containerInfo);
  }

  var SUSPENDED_MARKER = {};

  function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
    var mode = workInProgress.mode,
        nextProps = workInProgress.pendingProps,
        suspenseContext = suspenseStackCursor.current,
        nextState = null,
        nextDidTimeout = false,
        JSCompiler_temp;
    (JSCompiler_temp = 0 !== (workInProgress.effectTag & 64)) || (JSCompiler_temp = 0 !== (suspenseContext & ForceSuspenseFallback) && (null === current$$1 || null !== current$$1.memoizedState));
    JSCompiler_temp ? (nextState = SUSPENDED_MARKER, nextDidTimeout = true, workInProgress.effectTag &= -65) : null !== current$$1 && null === current$$1.memoizedState || undefined === nextProps.fallback || true === nextProps.unstable_avoidThisFallback || (suspenseContext |= InvisibleParentSuspenseContext);
    suspenseContext &= SubtreeSuspenseContextMask;
    push(suspenseStackCursor, suspenseContext, workInProgress);
    if (null === current$$1) {
      if (nextDidTimeout) {
        nextProps = nextProps.fallback;
        current$$1 = createFiberFromFragment(null, mode, 0, null);
        current$$1.return = workInProgress;
        if (0 === (workInProgress.mode & 2)) for (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, current$$1.child = nextDidTimeout; null !== nextDidTimeout;) {
          nextDidTimeout.return = current$$1, nextDidTimeout = nextDidTimeout.sibling;
        }
        renderExpirationTime = createFiberFromFragment(nextProps, mode, renderExpirationTime, null);
        renderExpirationTime.return = workInProgress;
        current$$1.sibling = renderExpirationTime;
        mode = current$$1;
      } else mode = renderExpirationTime = mountChildFibers(workInProgress, null, nextProps.children, renderExpirationTime);
    } else {
      if (null !== current$$1.memoizedState) {
        if (suspenseContext = current$$1.child, mode = suspenseContext.sibling, nextDidTimeout) {
          nextProps = nextProps.fallback;
          renderExpirationTime = createWorkInProgress(suspenseContext, suspenseContext.pendingProps, 0);
          renderExpirationTime.return = workInProgress;
          if (0 === (workInProgress.mode & 2) && (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextDidTimeout !== suspenseContext.child)) for (renderExpirationTime.child = nextDidTimeout; null !== nextDidTimeout;) {
            nextDidTimeout.return = renderExpirationTime, nextDidTimeout = nextDidTimeout.sibling;
          }
          nextProps = createWorkInProgress(mode, nextProps, mode.expirationTime);
          nextProps.return = workInProgress;
          renderExpirationTime.sibling = nextProps;
          mode = renderExpirationTime;
          renderExpirationTime.childExpirationTime = 0;
          renderExpirationTime = nextProps;
        } else mode = renderExpirationTime = reconcileChildFibers(workInProgress, suspenseContext.child, nextProps.children, renderExpirationTime);
      } else if (suspenseContext = current$$1.child, nextDidTimeout) {
        nextDidTimeout = nextProps.fallback;
        nextProps = createFiberFromFragment(null, mode, 0, null);
        nextProps.return = workInProgress;
        nextProps.child = suspenseContext;
        null !== suspenseContext && (suspenseContext.return = nextProps);
        if (0 === (workInProgress.mode & 2)) for (suspenseContext = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextProps.child = suspenseContext; null !== suspenseContext;) {
          suspenseContext.return = nextProps, suspenseContext = suspenseContext.sibling;
        }
        renderExpirationTime = createFiberFromFragment(nextDidTimeout, mode, renderExpirationTime, null);
        renderExpirationTime.return = workInProgress;
        nextProps.sibling = renderExpirationTime;
        renderExpirationTime.effectTag |= 2;
        mode = nextProps;
        nextProps.childExpirationTime = 0;
      } else renderExpirationTime = mode = reconcileChildFibers(workInProgress, suspenseContext, nextProps.children, renderExpirationTime);
      workInProgress.stateNode = current$$1.stateNode;
    }
    workInProgress.memoizedState = nextState;
    workInProgress.child = mode;
    return renderExpirationTime;
  }

  function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
    var renderState = workInProgress.memoizedState;
    null === renderState ? workInProgress.memoizedState = {
      isBackwards: isBackwards,
      rendering: null,
      last: lastContentRow,
      tail: tail,
      tailExpiration: 0,
      tailMode: tailMode
    } : (renderState.isBackwards = isBackwards, renderState.rendering = null, renderState.last = lastContentRow, renderState.tail = tail, renderState.tailExpiration = 0, renderState.tailMode = tailMode);
  }

  function updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime) {
    var nextProps = workInProgress.pendingProps,
        revealOrder = nextProps.revealOrder,
        tailMode = nextProps.tail;
    reconcileChildren(current$$1, workInProgress, nextProps.children, renderExpirationTime);
    nextProps = suspenseStackCursor.current;
    if (0 !== (nextProps & ForceSuspenseFallback)) nextProps = nextProps & SubtreeSuspenseContextMask | ForceSuspenseFallback, workInProgress.effectTag |= 64;else {
      if (null !== current$$1 && 0 !== (current$$1.effectTag & 64)) a: for (current$$1 = workInProgress.child; null !== current$$1;) {
        if (13 === current$$1.tag) {
          if (null !== current$$1.memoizedState) {
            current$$1.expirationTime < renderExpirationTime && (current$$1.expirationTime = renderExpirationTime);
            var alternate = current$$1.alternate;
            null !== alternate && alternate.expirationTime < renderExpirationTime && (alternate.expirationTime = renderExpirationTime);
            scheduleWorkOnParentPath(current$$1.return, renderExpirationTime);
          }
        } else if (null !== current$$1.child) {
          current$$1.child.return = current$$1;
          current$$1 = current$$1.child;
          continue;
        }

        if (current$$1 === workInProgress) break a;

        for (; null === current$$1.sibling;) {
          if (null === current$$1.return || current$$1.return === workInProgress) break a;
          current$$1 = current$$1.return;
        }

        current$$1.sibling.return = current$$1.return;
        current$$1 = current$$1.sibling;
      }
      nextProps &= SubtreeSuspenseContextMask;
    }
    push(suspenseStackCursor, nextProps, workInProgress);
    if (0 === (workInProgress.mode & 2)) workInProgress.memoizedState = null;else switch (revealOrder) {
      case "forwards":
        renderExpirationTime = workInProgress.child;

        for (revealOrder = null; null !== renderExpirationTime;) {
          nextProps = renderExpirationTime.alternate, null !== nextProps && null === findFirstSuspended(nextProps) && (revealOrder = renderExpirationTime), renderExpirationTime = renderExpirationTime.sibling;
        }

        renderExpirationTime = revealOrder;
        null === renderExpirationTime ? (revealOrder = workInProgress.child, workInProgress.child = null) : (revealOrder = renderExpirationTime.sibling, renderExpirationTime.sibling = null);
        initSuspenseListRenderState(workInProgress, false, revealOrder, renderExpirationTime, tailMode);
        break;

      case "backwards":
        renderExpirationTime = null;
        revealOrder = workInProgress.child;

        for (workInProgress.child = null; null !== revealOrder;) {
          nextProps = revealOrder.alternate;

          if (null !== nextProps && null === findFirstSuspended(nextProps)) {
            workInProgress.child = revealOrder;
            break;
          }

          nextProps = revealOrder.sibling;
          revealOrder.sibling = renderExpirationTime;
          renderExpirationTime = revealOrder;
          revealOrder = nextProps;
        }

        initSuspenseListRenderState(workInProgress, true, renderExpirationTime, null, tailMode);
        break;

      case "together":
        initSuspenseListRenderState(workInProgress, false, null, null, undefined);
        break;

      default:
        workInProgress.memoizedState = null;
    }
    return workInProgress.child;
  }

  function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
    null !== current$$1 && (workInProgress.dependencies = current$$1.dependencies);
    if (workInProgress.childExpirationTime < renderExpirationTime) return null;
    if (null !== current$$1 && workInProgress.child !== current$$1.child) throw ReactError(Error("Resuming work not yet implemented."));

    if (null !== workInProgress.child) {
      current$$1 = workInProgress.child;
      renderExpirationTime = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime);
      workInProgress.child = renderExpirationTime;

      for (renderExpirationTime.return = workInProgress; null !== current$$1.sibling;) {
        current$$1 = current$$1.sibling, renderExpirationTime = renderExpirationTime.sibling = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime), renderExpirationTime.return = workInProgress;
      }

      renderExpirationTime.sibling = null;
    }

    return workInProgress.child;
  }

  var _appendAllChildren = undefined,
      updateHostContainer = undefined,
      updateHostComponent$1 = undefined,
      updateHostText$1 = undefined;

  _appendAllChildren = function appendAllChildren(parent, workInProgress, needsVisibilityToggle, isHidden) {
    for (var node = workInProgress.child; null !== node;) {
      if (5 === node.tag) {
        var instance = node.stateNode;
        needsVisibilityToggle && isHidden && (instance = cloneHiddenInstance(instance, node.type, node.memoizedProps, node));
        appendChildNode(parent.node, instance.node);
      } else if (6 === node.tag) {
        instance = node.stateNode;
        if (needsVisibilityToggle && isHidden) throw Error("Not yet implemented.");
        appendChildNode(parent.node, instance.node);
      } else if (4 !== node.tag) {
        if (13 === node.tag && 0 !== (node.effectTag & 4) && (instance = null !== node.memoizedState)) {
          var primaryChildParent = node.child;

          if (null !== primaryChildParent && (null !== primaryChildParent.child && (primaryChildParent.child.return = primaryChildParent, _appendAllChildren(parent, primaryChildParent, true, instance)), instance = primaryChildParent.sibling, null !== instance)) {
            instance.return = node;
            node = instance;
            continue;
          }
        }

        if (null !== node.child) {
          node.child.return = node;
          node = node.child;
          continue;
        }
      }

      if (node === workInProgress) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === workInProgress) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  function appendAllChildrenToContainer(containerChildSet, workInProgress, needsVisibilityToggle, isHidden) {
    for (var node = workInProgress.child; null !== node;) {
      if (5 === node.tag) {
        var instance = node.stateNode;
        needsVisibilityToggle && isHidden && (instance = cloneHiddenInstance(instance, node.type, node.memoizedProps, node));
        appendChildNodeToSet(containerChildSet, instance.node);
      } else if (6 === node.tag) {
        instance = node.stateNode;
        if (needsVisibilityToggle && isHidden) throw Error("Not yet implemented.");
        appendChildNodeToSet(containerChildSet, instance.node);
      } else if (4 !== node.tag) {
        if (13 === node.tag && 0 !== (node.effectTag & 4) && (instance = null !== node.memoizedState)) {
          var primaryChildParent = node.child;

          if (null !== primaryChildParent && (null !== primaryChildParent.child && (primaryChildParent.child.return = primaryChildParent, appendAllChildrenToContainer(containerChildSet, primaryChildParent, true, instance)), instance = primaryChildParent.sibling, null !== instance)) {
            instance.return = node;
            node = instance;
            continue;
          }
        }

        if (null !== node.child) {
          node.child.return = node;
          node = node.child;
          continue;
        }
      }

      if (node === workInProgress) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === workInProgress) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  updateHostContainer = function updateHostContainer(workInProgress) {
    var portalOrRoot = workInProgress.stateNode;

    if (null !== workInProgress.firstEffect) {
      var container = portalOrRoot.containerInfo,
          newChildSet = createChildNodeSet(container);
      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);
      portalOrRoot.pendingChildren = newChildSet;
      workInProgress.effectTag |= 4;
      completeRoot(container, newChildSet);
    }
  };

  updateHostComponent$1 = function updateHostComponent$1(current, workInProgress, type, newProps) {
    type = current.stateNode;
    var oldProps = current.memoizedProps;
    if ((current = null === workInProgress.firstEffect) && oldProps === newProps) workInProgress.stateNode = type;else {
      var recyclableInstance = workInProgress.stateNode;
      requiredContext(contextStackCursor$1.current);
      var updatePayload = null;
      oldProps !== newProps && (oldProps = diffProperties(null, oldProps, newProps, recyclableInstance.canonical.viewConfig.validAttributes), recyclableInstance.canonical.currentProps = newProps, updatePayload = oldProps);
      current && null === updatePayload ? workInProgress.stateNode = type : (newProps = updatePayload, recyclableInstance = type.node, type = {
        node: current ? null !== newProps ? cloneNodeWithNewProps(recyclableInstance, newProps) : cloneNode(recyclableInstance) : null !== newProps ? cloneNodeWithNewChildrenAndProps(recyclableInstance, newProps) : cloneNodeWithNewChildren(recyclableInstance),
        canonical: type.canonical
      }, workInProgress.stateNode = type, current ? workInProgress.effectTag |= 4 : _appendAllChildren(type, workInProgress, false, false));
    }
  };

  updateHostText$1 = function updateHostText$1(current, workInProgress, oldText, newText) {
    oldText !== newText && (current = requiredContext(rootInstanceStackCursor.current), oldText = requiredContext(contextStackCursor$1.current), workInProgress.stateNode = createTextInstance(newText, current, oldText, workInProgress), workInProgress.effectTag |= 4);
  };

  function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
    switch (renderState.tailMode) {
      case "hidden":
        hasRenderedATailFallback = renderState.tail;

        for (var lastTailNode = null; null !== hasRenderedATailFallback;) {
          null !== hasRenderedATailFallback.alternate && (lastTailNode = hasRenderedATailFallback), hasRenderedATailFallback = hasRenderedATailFallback.sibling;
        }

        null === lastTailNode ? renderState.tail = null : lastTailNode.sibling = null;
        break;

      case "collapsed":
        lastTailNode = renderState.tail;

        for (var _lastTailNode = null; null !== lastTailNode;) {
          null !== lastTailNode.alternate && (_lastTailNode = lastTailNode), lastTailNode = lastTailNode.sibling;
        }

        null === _lastTailNode ? hasRenderedATailFallback || null === renderState.tail ? renderState.tail = null : renderState.tail.sibling = null : _lastTailNode.sibling = null;
    }
  }

  function unwindWork(workInProgress) {
    switch (workInProgress.tag) {
      case 1:
        isContextProvider(workInProgress.type) && popContext(workInProgress);
        var effectTag = workInProgress.effectTag;
        return effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 3:
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        effectTag = workInProgress.effectTag;
        if (0 !== (effectTag & 64)) throw ReactError(Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue."));
        workInProgress.effectTag = effectTag & -2049 | 64;
        return workInProgress;

      case 5:
        return popHostContext(workInProgress), null;

      case 13:
        return pop(suspenseStackCursor, workInProgress), effectTag = workInProgress.effectTag, effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 18:
        return null;

      case 19:
        return pop(suspenseStackCursor, workInProgress), null;

      case 4:
        return popHostContainer(workInProgress), null;

      case 10:
        return popProvider(workInProgress), null;

      default:
        return null;
    }
  }

  function createCapturedValue(value, source) {
    return {
      value: value,
      source: source,
      stack: getStackByFiberInDevAndProd(source)
    };
  }

  if ("function" !== typeof ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog) throw ReactError(Error("Expected ReactFiberErrorDialog.showErrorDialog to be a function."));

  function logCapturedError(capturedError) {
    false !== ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog(capturedError) && undefined;
  }

  var PossiblyWeakSet$1 = "function" === typeof WeakSet ? WeakSet : Set;

  function logError(boundary, errorInfo) {
    var source = errorInfo.source,
        stack = errorInfo.stack;
    null === stack && null !== source && (stack = getStackByFiberInDevAndProd(source));
    errorInfo = {
      componentName: null !== source ? getComponentName(source.type) : null,
      componentStack: null !== stack ? stack : "",
      error: errorInfo.value,
      errorBoundary: null,
      errorBoundaryName: null,
      errorBoundaryFound: false,
      willRetry: false
    };
    null !== boundary && 1 === boundary.tag && (errorInfo.errorBoundary = boundary.stateNode, errorInfo.errorBoundaryName = getComponentName(boundary.type), errorInfo.errorBoundaryFound = true, errorInfo.willRetry = true);

    try {
      logCapturedError(errorInfo);
    } catch (e) {
      setTimeout(function () {
        throw e;
      });
    }
  }

  function safelyCallComponentWillUnmount(current$$1, instance) {
    try {
      instance.props = current$$1.memoizedProps, instance.state = current$$1.memoizedState, instance.componentWillUnmount();
    } catch (unmountError) {
      captureCommitPhaseError(current$$1, unmountError);
    }
  }

  function safelyDetachRef(current$$1) {
    var ref = current$$1.ref;
    if (null !== ref) if ("function" === typeof ref) try {
      ref(null);
    } catch (refError) {
      captureCommitPhaseError(current$$1, refError);
    } else ref.current = null;
  }

  function commitHookEffectList(unmountTag, mountTag, finishedWork) {
    finishedWork = finishedWork.updateQueue;
    finishedWork = null !== finishedWork ? finishedWork.lastEffect : null;

    if (null !== finishedWork) {
      var effect = finishedWork = finishedWork.next;

      do {
        if ((effect.tag & unmountTag) !== NoEffect$1) {
          var destroy = effect.destroy;
          effect.destroy = undefined;
          undefined !== destroy && destroy();
        }

        (effect.tag & mountTag) !== NoEffect$1 && (destroy = effect.create, effect.destroy = destroy());
        effect = effect.next;
      } while (effect !== finishedWork);
    }
  }

  function commitUnmount(current$$1$jscomp$0, renderPriorityLevel) {
    "function" === typeof onCommitFiberUnmount && onCommitFiberUnmount(current$$1$jscomp$0);

    switch (current$$1$jscomp$0.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        var updateQueue = current$$1$jscomp$0.updateQueue;

        if (null !== updateQueue && (updateQueue = updateQueue.lastEffect, null !== updateQueue)) {
          var firstEffect = updateQueue.next;
          runWithPriority$1(97 < renderPriorityLevel ? 97 : renderPriorityLevel, function () {
            var effect = firstEffect;

            do {
              var destroy = effect.destroy;

              if (undefined !== destroy) {
                var current$$1 = current$$1$jscomp$0;

                try {
                  destroy();
                } catch (error) {
                  captureCommitPhaseError(current$$1, error);
                }
              }

              effect = effect.next;
            } while (effect !== firstEffect);
          });
        }

        break;

      case 1:
        safelyDetachRef(current$$1$jscomp$0);
        renderPriorityLevel = current$$1$jscomp$0.stateNode;
        "function" === typeof renderPriorityLevel.componentWillUnmount && safelyCallComponentWillUnmount(current$$1$jscomp$0, renderPriorityLevel);
        break;

      case 5:
        safelyDetachRef(current$$1$jscomp$0);
        break;

      case 4:
        createChildNodeSet(current$$1$jscomp$0.stateNode.containerInfo);
    }
  }

  function detachFiber(current$$1) {
    var alternate = current$$1.alternate;
    current$$1.return = null;
    current$$1.child = null;
    current$$1.memoizedState = null;
    current$$1.updateQueue = null;
    current$$1.dependencies = null;
    current$$1.alternate = null;
    current$$1.firstEffect = null;
    current$$1.lastEffect = null;
    current$$1.pendingProps = null;
    current$$1.memoizedProps = null;
    null !== alternate && detachFiber(alternate);
  }

  function commitWork(current$$1, finishedWork) {
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
        return;

      case 12:
        return;

      case 13:
        null !== finishedWork.memoizedState && (globalMostRecentFallbackTime = now());
        attachSuspenseRetryListeners(finishedWork);
        return;

      case 19:
        attachSuspenseRetryListeners(finishedWork);
        return;
    }

    switch (finishedWork.tag) {
      case 1:
      case 5:
      case 6:
      case 20:
        break;

      case 3:
      case 4:
        break;

      default:
        throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
    }
  }

  function attachSuspenseRetryListeners(finishedWork) {
    var thenables = finishedWork.updateQueue;

    if (null !== thenables) {
      finishedWork.updateQueue = null;
      var retryCache = finishedWork.stateNode;
      null === retryCache && (retryCache = finishedWork.stateNode = new PossiblyWeakSet$1());
      thenables.forEach(function (thenable) {
        var retry = resolveRetryThenable.bind(null, finishedWork, thenable);
        retryCache.has(thenable) || (retryCache.add(thenable), thenable.then(retry, retry));
      });
    }
  }

  var PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map;

  function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime, null);
    expirationTime.tag = 3;
    expirationTime.payload = {
      element: null
    };
    var error = errorInfo.value;

    expirationTime.callback = function () {
      hasUncaughtError || (hasUncaughtError = true, firstUncaughtError = error);
      logError(fiber, errorInfo);
    };

    return expirationTime;
  }

  function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime, null);
    expirationTime.tag = 3;
    var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

    if ("function" === typeof getDerivedStateFromError) {
      var error = errorInfo.value;

      expirationTime.payload = function () {
        logError(fiber, errorInfo);
        return getDerivedStateFromError(error);
      };
    }

    var inst = fiber.stateNode;
    null !== inst && "function" === typeof inst.componentDidCatch && (expirationTime.callback = function () {
      "function" !== typeof getDerivedStateFromError && (null === legacyErrorBoundariesThatAlreadyFailed ? legacyErrorBoundariesThatAlreadyFailed = new Set([this]) : legacyErrorBoundariesThatAlreadyFailed.add(this), logError(fiber, errorInfo));
      var stack = errorInfo.stack;
      this.componentDidCatch(errorInfo.value, {
        componentStack: null !== stack ? stack : ""
      });
    });
    return expirationTime;
  }

  var ceil = Math.ceil,
      ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher,
      ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,
      NoContext = 0,
      LegacyUnbatchedContext = 8,
      RenderContext = 16,
      CommitContext = 32,
      RootIncomplete = 0,
      RootErrored = 1,
      RootSuspended = 2,
      RootSuspendedWithDelay = 3,
      RootCompleted = 4,
      executionContext = NoContext,
      workInProgressRoot = null,
      workInProgress = null,
      renderExpirationTime = 0,
      workInProgressRootExitStatus = RootIncomplete,
      workInProgressRootLatestProcessedExpirationTime = 1073741823,
      workInProgressRootLatestSuspenseTimeout = 1073741823,
      workInProgressRootCanSuspendUsingConfig = null,
      workInProgressRootHasPendingPing = false,
      globalMostRecentFallbackTime = 0,
      FALLBACK_THROTTLE_MS = 500,
      nextEffect = null,
      hasUncaughtError = false,
      firstUncaughtError = null,
      legacyErrorBoundariesThatAlreadyFailed = null,
      rootDoesHavePassiveEffects = false,
      rootWithPendingPassiveEffects = null,
      pendingPassiveEffectsRenderPriority = 90,
      pendingPassiveEffectsExpirationTime = 0,
      rootsWithPendingDiscreteUpdates = null,
      nestedUpdateCount = 0,
      rootWithNestedUpdates = null,
      currentEventTime = 0;

  function requestCurrentTime() {
    return (executionContext & 48) !== NoContext ? 1073741821 - (now() / 10 | 0) : 0 !== currentEventTime ? currentEventTime : currentEventTime = 1073741821 - (now() / 10 | 0);
  }

  function computeExpirationForFiber(currentTime, fiber, suspenseConfig) {
    fiber = fiber.mode;
    if (0 === (fiber & 2)) return 1073741823;
    var priorityLevel = getCurrentPriorityLevel();
    if (0 === (fiber & 4)) return 99 === priorityLevel ? 1073741823 : 1073741822;
    if ((executionContext & RenderContext) !== NoContext) return renderExpirationTime;
    if (null !== suspenseConfig) currentTime = 1073741821 - 25 * (((1073741821 - currentTime + (suspenseConfig.timeoutMs | 0 || 5e3) / 10) / 25 | 0) + 1);else switch (priorityLevel) {
      case 99:
        currentTime = 1073741823;
        break;

      case 98:
        currentTime = 1073741821 - 10 * (((1073741821 - currentTime + 15) / 10 | 0) + 1);
        break;

      case 97:
      case 96:
        currentTime = 1073741821 - 25 * (((1073741821 - currentTime + 500) / 25 | 0) + 1);
        break;

      case 95:
        currentTime = 1;
        break;

      default:
        throw ReactError(Error("Expected a valid priority level"));
    }
    null !== workInProgressRoot && currentTime === renderExpirationTime && --currentTime;
    return currentTime;
  }

  function scheduleUpdateOnFiber(fiber, expirationTime) {
    if (50 < nestedUpdateCount) throw nestedUpdateCount = 0, rootWithNestedUpdates = null, ReactError(Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops."));
    fiber = markUpdateTimeFromFiberToRoot(fiber, expirationTime);

    if (null !== fiber) {
      fiber.pingTime = 0;
      var priorityLevel = getCurrentPriorityLevel();
      if (1073741823 === expirationTime) {
        if ((executionContext & LegacyUnbatchedContext) !== NoContext && (executionContext & 48) === NoContext) for (var callback = renderRoot(fiber, 1073741823, true); null !== callback;) {
          callback = callback(true);
        } else scheduleCallbackForRoot(fiber, 99, 1073741823), executionContext === NoContext && flushSyncCallbackQueue();
      } else scheduleCallbackForRoot(fiber, priorityLevel, expirationTime);
      (executionContext & 4) === NoContext || 98 !== priorityLevel && 99 !== priorityLevel || (null === rootsWithPendingDiscreteUpdates ? rootsWithPendingDiscreteUpdates = new Map([[fiber, expirationTime]]) : (priorityLevel = rootsWithPendingDiscreteUpdates.get(fiber), (undefined === priorityLevel || priorityLevel > expirationTime) && rootsWithPendingDiscreteUpdates.set(fiber, expirationTime)));
    }
  }

  function markUpdateTimeFromFiberToRoot(fiber, expirationTime) {
    fiber.expirationTime < expirationTime && (fiber.expirationTime = expirationTime);
    var alternate = fiber.alternate;
    null !== alternate && alternate.expirationTime < expirationTime && (alternate.expirationTime = expirationTime);
    var node = fiber.return,
        root = null;
    if (null === node && 3 === fiber.tag) root = fiber.stateNode;else for (; null !== node;) {
      alternate = node.alternate;
      node.childExpirationTime < expirationTime && (node.childExpirationTime = expirationTime);
      null !== alternate && alternate.childExpirationTime < expirationTime && (alternate.childExpirationTime = expirationTime);

      if (null === node.return && 3 === node.tag) {
        root = node.stateNode;
        break;
      }

      node = node.return;
    }
    null !== root && (expirationTime > root.firstPendingTime && (root.firstPendingTime = expirationTime), fiber = root.lastPendingTime, 0 === fiber || expirationTime < fiber) && (root.lastPendingTime = expirationTime);
    return root;
  }

  function scheduleCallbackForRoot(root, priorityLevel, expirationTime) {
    if (root.callbackExpirationTime < expirationTime) {
      var existingCallbackNode = root.callbackNode;
      null !== existingCallbackNode && existingCallbackNode !== fakeCallbackNode && Scheduler_cancelCallback(existingCallbackNode);
      root.callbackExpirationTime = expirationTime;
      1073741823 === expirationTime ? root.callbackNode = scheduleSyncCallback(runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime))) : (existingCallbackNode = null, 1 !== expirationTime && (existingCallbackNode = {
        timeout: 10 * (1073741821 - expirationTime) - now()
      }), root.callbackNode = scheduleCallback(priorityLevel, runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime)), existingCallbackNode));
    }
  }

  function runRootCallback(root, callback, isSync) {
    var prevCallbackNode = root.callbackNode,
        continuation = null;

    try {
      return continuation = callback(isSync), null !== continuation ? runRootCallback.bind(null, root, continuation) : null;
    } finally {
      null === continuation && prevCallbackNode === root.callbackNode && (root.callbackNode = null, root.callbackExpirationTime = 0);
    }
  }

  function resolveLocksOnRoot(root, expirationTime) {
    var firstBatch = root.firstBatch;
    return null !== firstBatch && firstBatch._defer && firstBatch._expirationTime >= expirationTime ? (scheduleCallback(97, function () {
      firstBatch._onComplete();

      return null;
    }), true) : false;
  }

  function flushPendingDiscreteUpdates() {
    if (null !== rootsWithPendingDiscreteUpdates) {
      var roots = rootsWithPendingDiscreteUpdates;
      rootsWithPendingDiscreteUpdates = null;
      roots.forEach(function (expirationTime, root) {
        scheduleSyncCallback(renderRoot.bind(null, root, expirationTime));
      });
      flushSyncCallbackQueue();
    }
  }

  function prepareFreshStack(root, expirationTime) {
    root.finishedWork = null;
    root.finishedExpirationTime = 0;
    var timeoutHandle = root.timeoutHandle;
    -1 !== timeoutHandle && (root.timeoutHandle = -1, cancelTimeout(timeoutHandle));
    if (null !== workInProgress) for (timeoutHandle = workInProgress.return; null !== timeoutHandle;) {
      var interruptedWork = timeoutHandle;

      switch (interruptedWork.tag) {
        case 1:
          var childContextTypes = interruptedWork.type.childContextTypes;
          null !== childContextTypes && undefined !== childContextTypes && popContext(interruptedWork);
          break;

        case 3:
          popHostContainer(interruptedWork);
          popTopLevelContextObject(interruptedWork);
          break;

        case 5:
          popHostContext(interruptedWork);
          break;

        case 4:
          popHostContainer(interruptedWork);
          break;

        case 13:
          pop(suspenseStackCursor, interruptedWork);
          break;

        case 19:
          pop(suspenseStackCursor, interruptedWork);
          break;

        case 10:
          popProvider(interruptedWork);
      }

      timeoutHandle = timeoutHandle.return;
    }
    workInProgressRoot = root;
    workInProgress = createWorkInProgress(root.current, null, expirationTime);
    renderExpirationTime = expirationTime;
    workInProgressRootExitStatus = RootIncomplete;
    workInProgressRootLatestSuspenseTimeout = workInProgressRootLatestProcessedExpirationTime = 1073741823;
    workInProgressRootCanSuspendUsingConfig = null;
    workInProgressRootHasPendingPing = false;
  }

  function renderRoot(root$jscomp$0, expirationTime, isSync) {
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
    if (root$jscomp$0.firstPendingTime < expirationTime) return null;
    if (isSync && root$jscomp$0.finishedExpirationTime === expirationTime) return commitRoot.bind(null, root$jscomp$0);
    flushPassiveEffects();
    if (root$jscomp$0 !== workInProgressRoot || expirationTime !== renderExpirationTime) prepareFreshStack(root$jscomp$0, expirationTime);else if (workInProgressRootExitStatus === RootSuspendedWithDelay) if (workInProgressRootHasPendingPing) prepareFreshStack(root$jscomp$0, expirationTime);else {
      var lastPendingTime = root$jscomp$0.lastPendingTime;
      if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
    }

    if (null !== workInProgress) {
      lastPendingTime = executionContext;
      executionContext |= RenderContext;
      var prevDispatcher = ReactCurrentDispatcher.current;
      null === prevDispatcher && (prevDispatcher = ContextOnlyDispatcher);
      ReactCurrentDispatcher.current = ContextOnlyDispatcher;

      if (isSync) {
        if (1073741823 !== expirationTime) {
          var currentTime = requestCurrentTime();
          if (currentTime < expirationTime) return executionContext = lastPendingTime, resetContextDependencies(), ReactCurrentDispatcher.current = prevDispatcher, renderRoot.bind(null, root$jscomp$0, currentTime);
        }
      } else currentEventTime = 0;

      do {
        try {
          if (isSync) for (; null !== workInProgress;) {
            workInProgress = performUnitOfWork(workInProgress);
          } else for (; null !== workInProgress && !Scheduler_shouldYield();) {
            workInProgress = performUnitOfWork(workInProgress);
          }
          break;
        } catch (thrownValue) {
          resetContextDependencies();
          resetHooks();
          currentTime = workInProgress;
          if (null === currentTime || null === currentTime.return) throw prepareFreshStack(root$jscomp$0, expirationTime), executionContext = lastPendingTime, thrownValue;

          a: {
            var root = root$jscomp$0,
                returnFiber = currentTime.return,
                sourceFiber = currentTime,
                value = thrownValue,
                renderExpirationTime$jscomp$0 = renderExpirationTime;
            sourceFiber.effectTag |= 1024;
            sourceFiber.firstEffect = sourceFiber.lastEffect = null;

            if (null !== value && "object" === typeof value && "function" === typeof value.then) {
              var thenable = value,
                  hasInvisibleParentBoundary = 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext);
              value = returnFiber;

              do {
                var JSCompiler_temp;
                if (JSCompiler_temp = 13 === value.tag) null !== value.memoizedState ? JSCompiler_temp = false : (JSCompiler_temp = value.memoizedProps, JSCompiler_temp = undefined === JSCompiler_temp.fallback ? false : true !== JSCompiler_temp.unstable_avoidThisFallback ? true : hasInvisibleParentBoundary ? false : true);

                if (JSCompiler_temp) {
                  returnFiber = value.updateQueue;
                  null === returnFiber ? (returnFiber = new Set(), returnFiber.add(thenable), value.updateQueue = returnFiber) : returnFiber.add(thenable);

                  if (0 === (value.mode & 2)) {
                    value.effectTag |= 64;
                    sourceFiber.effectTag &= -1957;
                    1 === sourceFiber.tag && (null === sourceFiber.alternate ? sourceFiber.tag = 17 : (renderExpirationTime$jscomp$0 = createUpdate(1073741823, null), renderExpirationTime$jscomp$0.tag = 2, enqueueUpdate(sourceFiber, renderExpirationTime$jscomp$0)));
                    sourceFiber.expirationTime = 1073741823;
                    break a;
                  }

                  sourceFiber = root;
                  root = renderExpirationTime$jscomp$0;
                  hasInvisibleParentBoundary = sourceFiber.pingCache;
                  null === hasInvisibleParentBoundary ? (hasInvisibleParentBoundary = sourceFiber.pingCache = new PossiblyWeakMap(), returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)) : (returnFiber = hasInvisibleParentBoundary.get(thenable), undefined === returnFiber && (returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)));
                  returnFiber.has(root) || (returnFiber.add(root), sourceFiber = pingSuspendedRoot.bind(null, sourceFiber, thenable, root), thenable.then(sourceFiber, sourceFiber));
                  value.effectTag |= 2048;
                  value.expirationTime = renderExpirationTime$jscomp$0;
                  break a;
                }

                value = value.return;
              } while (null !== value);

              value = Error((getComponentName(sourceFiber.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + getStackByFiberInDevAndProd(sourceFiber));
            }

            workInProgressRootExitStatus !== RootCompleted && (workInProgressRootExitStatus = RootErrored);
            value = createCapturedValue(value, sourceFiber);
            sourceFiber = returnFiber;

            do {
              switch (sourceFiber.tag) {
                case 3:
                  sourceFiber.effectTag |= 2048;
                  sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                  renderExpirationTime$jscomp$0 = createRootErrorUpdate(sourceFiber, value, renderExpirationTime$jscomp$0);
                  enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                  break a;

                case 1:
                  if (thenable = value, root = sourceFiber.type, returnFiber = sourceFiber.stateNode, 0 === (sourceFiber.effectTag & 64) && ("function" === typeof root.getDerivedStateFromError || null !== returnFiber && "function" === typeof returnFiber.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(returnFiber)))) {
                    sourceFiber.effectTag |= 2048;
                    sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                    renderExpirationTime$jscomp$0 = createClassErrorUpdate(sourceFiber, thenable, renderExpirationTime$jscomp$0);
                    enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                    break a;
                  }

              }

              sourceFiber = sourceFiber.return;
            } while (null !== sourceFiber);
          }

          workInProgress = completeUnitOfWork(currentTime);
        }
      } while (1);

      executionContext = lastPendingTime;
      resetContextDependencies();
      ReactCurrentDispatcher.current = prevDispatcher;
      if (null !== workInProgress) return renderRoot.bind(null, root$jscomp$0, expirationTime);
    }

    root$jscomp$0.finishedWork = root$jscomp$0.current.alternate;
    root$jscomp$0.finishedExpirationTime = expirationTime;
    if (resolveLocksOnRoot(root$jscomp$0, expirationTime)) return null;
    workInProgressRoot = null;

    switch (workInProgressRootExitStatus) {
      case RootIncomplete:
        throw ReactError(Error("Should have a work-in-progress."));

      case RootErrored:
        return lastPendingTime = root$jscomp$0.lastPendingTime, lastPendingTime < expirationTime ? renderRoot.bind(null, root$jscomp$0, lastPendingTime) : isSync ? commitRoot.bind(null, root$jscomp$0) : (prepareFreshStack(root$jscomp$0, expirationTime), scheduleSyncCallback(renderRoot.bind(null, root$jscomp$0, expirationTime)), null);

      case RootSuspended:
        if (1073741823 === workInProgressRootLatestProcessedExpirationTime && !isSync && (isSync = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(), 10 < isSync)) {
          if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
          lastPendingTime = root$jscomp$0.lastPendingTime;
          if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
          root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync);
          return null;
        }

        return commitRoot.bind(null, root$jscomp$0);

      case RootSuspendedWithDelay:
        if (!isSync) {
          if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
          isSync = root$jscomp$0.lastPendingTime;
          if (isSync < expirationTime) return renderRoot.bind(null, root$jscomp$0, isSync);
          1073741823 !== workInProgressRootLatestSuspenseTimeout ? isSync = 10 * (1073741821 - workInProgressRootLatestSuspenseTimeout) - now() : 1073741823 === workInProgressRootLatestProcessedExpirationTime ? isSync = 0 : (isSync = 10 * (1073741821 - workInProgressRootLatestProcessedExpirationTime) - 5e3, lastPendingTime = now(), expirationTime = 10 * (1073741821 - expirationTime) - lastPendingTime, isSync = lastPendingTime - isSync, 0 > isSync && (isSync = 0), isSync = (120 > isSync ? 120 : 480 > isSync ? 480 : 1080 > isSync ? 1080 : 1920 > isSync ? 1920 : 3e3 > isSync ? 3e3 : 4320 > isSync ? 4320 : 1960 * ceil(isSync / 1960)) - isSync, expirationTime < isSync && (isSync = expirationTime));
          if (10 < isSync) return root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync), null;
        }

        return commitRoot.bind(null, root$jscomp$0);

      case RootCompleted:
        return !isSync && 1073741823 !== workInProgressRootLatestProcessedExpirationTime && null !== workInProgressRootCanSuspendUsingConfig && (lastPendingTime = workInProgressRootLatestProcessedExpirationTime, prevDispatcher = workInProgressRootCanSuspendUsingConfig, expirationTime = prevDispatcher.busyMinDurationMs | 0, 0 >= expirationTime ? expirationTime = 0 : (isSync = prevDispatcher.busyDelayMs | 0, lastPendingTime = now() - (10 * (1073741821 - lastPendingTime) - (prevDispatcher.timeoutMs | 0 || 5e3)), expirationTime = lastPendingTime <= isSync ? 0 : isSync + expirationTime - lastPendingTime), 10 < expirationTime) ? (root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), expirationTime), null) : commitRoot.bind(null, root$jscomp$0);

      default:
        throw ReactError(Error("Unknown root exit status."));
    }
  }

  function markRenderEventTimeAndConfig(expirationTime, suspenseConfig) {
    expirationTime < workInProgressRootLatestProcessedExpirationTime && 1 < expirationTime && (workInProgressRootLatestProcessedExpirationTime = expirationTime);
    null !== suspenseConfig && expirationTime < workInProgressRootLatestSuspenseTimeout && 1 < expirationTime && (workInProgressRootLatestSuspenseTimeout = expirationTime, workInProgressRootCanSuspendUsingConfig = suspenseConfig);
  }

  function performUnitOfWork(unitOfWork) {
    var next = beginWork$$1(unitOfWork.alternate, unitOfWork, renderExpirationTime);
    unitOfWork.memoizedProps = unitOfWork.pendingProps;
    null === next && (next = completeUnitOfWork(unitOfWork));
    ReactCurrentOwner$2.current = null;
    return next;
  }

  function completeUnitOfWork(unitOfWork) {
    workInProgress = unitOfWork;

    do {
      var current$$1 = workInProgress.alternate;
      unitOfWork = workInProgress.return;

      if (0 === (workInProgress.effectTag & 1024)) {
        a: {
          var current = current$$1;
          current$$1 = workInProgress;
          var renderExpirationTime$jscomp$0 = renderExpirationTime,
              newProps = current$$1.pendingProps;

          switch (current$$1.tag) {
            case 2:
              break;

            case 16:
              break;

            case 15:
            case 0:
              break;

            case 1:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 3:
              popHostContainer(current$$1);
              popTopLevelContextObject(current$$1);
              renderExpirationTime$jscomp$0 = current$$1.stateNode;
              renderExpirationTime$jscomp$0.pendingContext && (renderExpirationTime$jscomp$0.context = renderExpirationTime$jscomp$0.pendingContext, renderExpirationTime$jscomp$0.pendingContext = null);
              if (null === current || null === current.child) current$$1.effectTag &= -3;
              updateHostContainer(current$$1);
              break;

            case 5:
              popHostContext(current$$1);
              renderExpirationTime$jscomp$0 = requiredContext(rootInstanceStackCursor.current);
              var type = current$$1.type;
              if (null !== current && null != current$$1.stateNode) updateHostComponent$1(current, current$$1, type, newProps, renderExpirationTime$jscomp$0), current.ref !== current$$1.ref && (current$$1.effectTag |= 128);else if (newProps) {
                requiredContext(contextStackCursor$1.current);
                current = newProps;
                var rootContainerInstance = renderExpirationTime$jscomp$0;
                renderExpirationTime$jscomp$0 = current$$1;
                newProps = nextReactTag;
                nextReactTag += 2;
                type = getViewConfigForType(type);
                var updatePayload = diffProperties(null, emptyObject, current, type.validAttributes);
                rootContainerInstance = createNode(newProps, type.uiViewClassName, rootContainerInstance, updatePayload, renderExpirationTime$jscomp$0);
                current = new ReactFabricHostComponent(newProps, type, current, renderExpirationTime$jscomp$0);
                current = {
                  node: rootContainerInstance,
                  canonical: current
                };

                _appendAllChildren(current, current$$1, false, false);

                current$$1.stateNode = current;
                null !== current$$1.ref && (current$$1.effectTag |= 128);
              } else if (null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
              break;

            case 6:
              if (current && null != current$$1.stateNode) updateHostText$1(current, current$$1, current.memoizedProps, newProps);else {
                if ("string" !== typeof newProps && null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
                current = requiredContext(rootInstanceStackCursor.current);
                renderExpirationTime$jscomp$0 = requiredContext(contextStackCursor$1.current);
                current$$1.stateNode = createTextInstance(newProps, current, renderExpirationTime$jscomp$0, current$$1);
              }
              break;

            case 11:
              break;

            case 13:
              pop(suspenseStackCursor, current$$1);
              newProps = current$$1.memoizedState;

              if (0 !== (current$$1.effectTag & 64)) {
                current$$1.expirationTime = renderExpirationTime$jscomp$0;
                break a;
              }

              renderExpirationTime$jscomp$0 = null !== newProps;
              newProps = false;
              null !== current && (type = current.memoizedState, newProps = null !== type, renderExpirationTime$jscomp$0 || null === type || (type = current.child.sibling, null !== type && (rootContainerInstance = current$$1.firstEffect, null !== rootContainerInstance ? (current$$1.firstEffect = type, type.nextEffect = rootContainerInstance) : (current$$1.firstEffect = current$$1.lastEffect = type, type.nextEffect = null), type.effectTag = 8)));
              if (renderExpirationTime$jscomp$0 && !newProps && 0 !== (current$$1.mode & 2)) if (null === current && true !== current$$1.memoizedProps.unstable_avoidThisFallback || 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext)) workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootSuspended);else if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) workInProgressRootExitStatus = RootSuspendedWithDelay;
              renderExpirationTime$jscomp$0 && (current$$1.effectTag |= 4);
              break;

            case 7:
              break;

            case 8:
              break;

            case 12:
              break;

            case 4:
              popHostContainer(current$$1);
              updateHostContainer(current$$1);
              break;

            case 10:
              popProvider(current$$1);
              break;

            case 9:
              break;

            case 14:
              break;

            case 17:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 18:
              break;

            case 19:
              pop(suspenseStackCursor, current$$1);
              newProps = current$$1.memoizedState;
              if (null === newProps) break;
              type = 0 !== (current$$1.effectTag & 64);
              rootContainerInstance = newProps.rendering;
              if (null === rootContainerInstance) {
                if (type) cutOffTailIfNeeded(newProps, false);else {
                  if (workInProgressRootExitStatus !== RootIncomplete || null !== current && 0 !== (current.effectTag & 64)) for (current = current$$1.child; null !== current;) {
                    rootContainerInstance = findFirstSuspended(current);

                    if (null !== rootContainerInstance) {
                      current$$1.effectTag |= 64;
                      cutOffTailIfNeeded(newProps, false);
                      current = rootContainerInstance.updateQueue;
                      null !== current && (current$$1.updateQueue = current, current$$1.effectTag |= 4);
                      current$$1.firstEffect = current$$1.lastEffect = null;
                      current = renderExpirationTime$jscomp$0;

                      for (renderExpirationTime$jscomp$0 = current$$1.child; null !== renderExpirationTime$jscomp$0;) {
                        newProps = renderExpirationTime$jscomp$0, type = current, newProps.effectTag &= 2, newProps.nextEffect = null, newProps.firstEffect = null, newProps.lastEffect = null, rootContainerInstance = newProps.alternate, null === rootContainerInstance ? (newProps.childExpirationTime = 0, newProps.expirationTime = type, newProps.child = null, newProps.memoizedProps = null, newProps.memoizedState = null, newProps.updateQueue = null, newProps.dependencies = null) : (newProps.childExpirationTime = rootContainerInstance.childExpirationTime, newProps.expirationTime = rootContainerInstance.expirationTime, newProps.child = rootContainerInstance.child, newProps.memoizedProps = rootContainerInstance.memoizedProps, newProps.memoizedState = rootContainerInstance.memoizedState, newProps.updateQueue = rootContainerInstance.updateQueue, type = rootContainerInstance.dependencies, newProps.dependencies = null === type ? null : {
                          expirationTime: type.expirationTime,
                          firstContext: type.firstContext,
                          responders: type.responders
                        }), renderExpirationTime$jscomp$0 = renderExpirationTime$jscomp$0.sibling;
                      }

                      push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask | ForceSuspenseFallback, current$$1);
                      current$$1 = current$$1.child;
                      break a;
                    }

                    current = current.sibling;
                  }
                }
              } else {
                if (!type) if (current = findFirstSuspended(rootContainerInstance), null !== current) {
                  if (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, true), null === newProps.tail && "hidden" === newProps.tailMode) {
                    current = current.updateQueue;
                    null !== current && (current$$1.updateQueue = current, current$$1.effectTag |= 4);
                    current$$1 = current$$1.lastEffect = newProps.lastEffect;
                    null !== current$$1 && (current$$1.nextEffect = null);
                    break;
                  }
                } else now() > newProps.tailExpiration && 1 < renderExpirationTime$jscomp$0 && (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, false), current$$1.expirationTime = current$$1.childExpirationTime = renderExpirationTime$jscomp$0 - 1);
                newProps.isBackwards ? (rootContainerInstance.sibling = current$$1.child, current$$1.child = rootContainerInstance) : (current = newProps.last, null !== current ? current.sibling = rootContainerInstance : current$$1.child = rootContainerInstance, newProps.last = rootContainerInstance);
              }

              if (null !== newProps.tail) {
                0 === newProps.tailExpiration && (newProps.tailExpiration = now() + 500);
                current = newProps.tail;
                newProps.rendering = current;
                newProps.tail = current.sibling;
                newProps.lastEffect = current$$1.lastEffect;
                current.sibling = null;
                renderExpirationTime$jscomp$0 = suspenseStackCursor.current;
                renderExpirationTime$jscomp$0 = type ? renderExpirationTime$jscomp$0 & SubtreeSuspenseContextMask | ForceSuspenseFallback : renderExpirationTime$jscomp$0 & SubtreeSuspenseContextMask;
                push(suspenseStackCursor, renderExpirationTime$jscomp$0, current$$1);
                current$$1 = current;
                break a;
              }

              break;

            case 20:
              break;

            default:
              throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
          }

          current$$1 = null;
        }

        current = workInProgress;

        if (1 === renderExpirationTime || 1 !== current.childExpirationTime) {
          renderExpirationTime$jscomp$0 = 0;

          for (newProps = current.child; null !== newProps;) {
            type = newProps.expirationTime, rootContainerInstance = newProps.childExpirationTime, type > renderExpirationTime$jscomp$0 && (renderExpirationTime$jscomp$0 = type), rootContainerInstance > renderExpirationTime$jscomp$0 && (renderExpirationTime$jscomp$0 = rootContainerInstance), newProps = newProps.sibling;
          }

          current.childExpirationTime = renderExpirationTime$jscomp$0;
        }

        if (null !== current$$1) return current$$1;
        null !== unitOfWork && 0 === (unitOfWork.effectTag & 1024) && (null === unitOfWork.firstEffect && (unitOfWork.firstEffect = workInProgress.firstEffect), null !== workInProgress.lastEffect && (null !== unitOfWork.lastEffect && (unitOfWork.lastEffect.nextEffect = workInProgress.firstEffect), unitOfWork.lastEffect = workInProgress.lastEffect), 1 < workInProgress.effectTag && (null !== unitOfWork.lastEffect ? unitOfWork.lastEffect.nextEffect = workInProgress : unitOfWork.firstEffect = workInProgress, unitOfWork.lastEffect = workInProgress));
      } else {
        current$$1 = unwindWork(workInProgress, renderExpirationTime);
        if (null !== current$$1) return current$$1.effectTag &= 1023, current$$1;
        null !== unitOfWork && (unitOfWork.firstEffect = unitOfWork.lastEffect = null, unitOfWork.effectTag |= 1024);
      }

      current$$1 = workInProgress.sibling;
      if (null !== current$$1) return current$$1;
      workInProgress = unitOfWork;
    } while (null !== workInProgress);

    workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootCompleted);
    return null;
  }

  function commitRoot(root) {
    var renderPriorityLevel = getCurrentPriorityLevel();
    runWithPriority$1(99, commitRootImpl.bind(null, root, renderPriorityLevel));
    null !== rootWithPendingPassiveEffects && scheduleCallback(97, function () {
      flushPassiveEffects();
      return null;
    });
    return null;
  }

  function commitRootImpl(root, renderPriorityLevel) {
    flushPassiveEffects();
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
    var finishedWork = root.finishedWork,
        expirationTime = root.finishedExpirationTime;
    if (null === finishedWork) return null;
    root.finishedWork = null;
    root.finishedExpirationTime = 0;
    if (finishedWork === root.current) throw ReactError(Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue."));
    root.callbackNode = null;
    root.callbackExpirationTime = 0;
    var updateExpirationTimeBeforeCommit = finishedWork.expirationTime,
        childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;
    updateExpirationTimeBeforeCommit = childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit ? childExpirationTimeBeforeCommit : updateExpirationTimeBeforeCommit;
    root.firstPendingTime = updateExpirationTimeBeforeCommit;
    updateExpirationTimeBeforeCommit < root.lastPendingTime && (root.lastPendingTime = updateExpirationTimeBeforeCommit);
    root === workInProgressRoot && (workInProgress = workInProgressRoot = null, renderExpirationTime = 0);
    1 < finishedWork.effectTag ? null !== finishedWork.lastEffect ? (finishedWork.lastEffect.nextEffect = finishedWork, updateExpirationTimeBeforeCommit = finishedWork.firstEffect) : updateExpirationTimeBeforeCommit = finishedWork : updateExpirationTimeBeforeCommit = finishedWork.firstEffect;

    if (null !== updateExpirationTimeBeforeCommit) {
      childExpirationTimeBeforeCommit = executionContext;
      executionContext |= CommitContext;
      ReactCurrentOwner$2.current = null;
      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (; null !== nextEffect;) {
            if (0 !== (nextEffect.effectTag & 256)) {
              var current$$1 = nextEffect.alternate,
                  finishedWork$jscomp$0 = nextEffect;

              switch (finishedWork$jscomp$0.tag) {
                case 0:
                case 11:
                case 15:
                  commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork$jscomp$0);
                  break;

                case 1:
                  if (finishedWork$jscomp$0.effectTag & 256 && null !== current$$1) {
                    var prevProps = current$$1.memoizedProps,
                        prevState = current$$1.memoizedState,
                        instance = finishedWork$jscomp$0.stateNode,
                        snapshot = instance.getSnapshotBeforeUpdate(finishedWork$jscomp$0.elementType === finishedWork$jscomp$0.type ? prevProps : resolveDefaultProps(finishedWork$jscomp$0.type, prevProps), prevState);
                    instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                  }

                  break;

                case 3:
                case 5:
                case 6:
                case 4:
                case 17:
                  break;

                default:
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
              }
            }

            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (current$$1 = renderPriorityLevel; null !== nextEffect;) {
            var effectTag = nextEffect.effectTag;

            if (effectTag & 128) {
              var current$$1$jscomp$0 = nextEffect.alternate;

              if (null !== current$$1$jscomp$0) {
                var currentRef = current$$1$jscomp$0.ref;
                null !== currentRef && ("function" === typeof currentRef ? currentRef(null) : currentRef.current = null);
              }
            }

            switch (effectTag & 14) {
              case 2:
                nextEffect.effectTag &= -3;
                break;

              case 6:
                nextEffect.effectTag &= -3;
                commitWork(nextEffect.alternate, nextEffect);
                break;

              case 4:
                commitWork(nextEffect.alternate, nextEffect);
                break;

              case 8:
                prevProps = nextEffect;

                a: for (prevState = prevProps, instance = current$$1, snapshot = prevState;;) {
                  if (commitUnmount(snapshot, instance), null !== snapshot.child) snapshot.child.return = snapshot, snapshot = snapshot.child;else {
                    if (snapshot === prevState) break;

                    for (; null === snapshot.sibling;) {
                      if (null === snapshot.return || snapshot.return === prevState) break a;
                      snapshot = snapshot.return;
                    }

                    snapshot.sibling.return = snapshot.return;
                    snapshot = snapshot.sibling;
                  }
                }

                detachFiber(prevProps);
            }

            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      root.current = finishedWork;
      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (effectTag = expirationTime; null !== nextEffect;) {
            var effectTag$jscomp$0 = nextEffect.effectTag;

            if (effectTag$jscomp$0 & 36) {
              var current$$1$jscomp$1 = nextEffect.alternate;
              current$$1$jscomp$0 = nextEffect;
              currentRef = effectTag;

              switch (current$$1$jscomp$0.tag) {
                case 0:
                case 11:
                case 15:
                  commitHookEffectList(UnmountLayout, MountLayout, current$$1$jscomp$0);
                  break;

                case 1:
                  var instance$jscomp$0 = current$$1$jscomp$0.stateNode;
                  if (current$$1$jscomp$0.effectTag & 4) if (null === current$$1$jscomp$1) instance$jscomp$0.componentDidMount();else {
                    var prevProps$jscomp$0 = current$$1$jscomp$0.elementType === current$$1$jscomp$0.type ? current$$1$jscomp$1.memoizedProps : resolveDefaultProps(current$$1$jscomp$0.type, current$$1$jscomp$1.memoizedProps);
                    instance$jscomp$0.componentDidUpdate(prevProps$jscomp$0, current$$1$jscomp$1.memoizedState, instance$jscomp$0.__reactInternalSnapshotBeforeUpdate);
                  }
                  var updateQueue = current$$1$jscomp$0.updateQueue;
                  null !== updateQueue && commitUpdateQueue(current$$1$jscomp$0, updateQueue, instance$jscomp$0, currentRef);
                  break;

                case 3:
                  var _updateQueue = current$$1$jscomp$0.updateQueue;

                  if (null !== _updateQueue) {
                    current$$1 = null;
                    if (null !== current$$1$jscomp$0.child) switch (current$$1$jscomp$0.child.tag) {
                      case 5:
                        current$$1 = current$$1$jscomp$0.child.stateNode.canonical;
                        break;

                      case 1:
                        current$$1 = current$$1$jscomp$0.child.stateNode;
                    }
                    commitUpdateQueue(current$$1$jscomp$0, _updateQueue, current$$1, currentRef);
                  }

                  break;

                case 5:
                  if (null === current$$1$jscomp$1 && current$$1$jscomp$0.effectTag & 4) throw ReactError(Error("The current renderer does not support mutation. This error is likely caused by a bug in React. Please file an issue."));
                  break;

                case 6:
                  break;

                case 4:
                  break;

                case 12:
                  break;

                case 13:
                case 19:
                case 17:
                case 20:
                  break;

                default:
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
              }
            }

            if (effectTag$jscomp$0 & 128) {
              var ref = nextEffect.ref;

              if (null !== ref) {
                var instance$jscomp$1 = nextEffect.stateNode;

                switch (nextEffect.tag) {
                  case 5:
                    var instanceToUse = instance$jscomp$1.canonical;
                    break;

                  default:
                    instanceToUse = instance$jscomp$1;
                }

                "function" === typeof ref ? ref(instanceToUse) : ref.current = instanceToUse;
              }
            }

            effectTag$jscomp$0 & 512 && (rootDoesHavePassiveEffects = true);
            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      nextEffect = null;
      requestPaint();
      executionContext = childExpirationTimeBeforeCommit;
    } else root.current = finishedWork;

    if (rootDoesHavePassiveEffects) rootDoesHavePassiveEffects = false, rootWithPendingPassiveEffects = root, pendingPassiveEffectsExpirationTime = expirationTime, pendingPassiveEffectsRenderPriority = renderPriorityLevel;else for (nextEffect = updateExpirationTimeBeforeCommit; null !== nextEffect;) {
      renderPriorityLevel = nextEffect.nextEffect, nextEffect.nextEffect = null, nextEffect = renderPriorityLevel;
    }
    renderPriorityLevel = root.firstPendingTime;
    0 !== renderPriorityLevel ? (effectTag$jscomp$0 = requestCurrentTime(), effectTag$jscomp$0 = inferPriorityFromExpirationTime(effectTag$jscomp$0, renderPriorityLevel), scheduleCallbackForRoot(root, effectTag$jscomp$0, renderPriorityLevel)) : legacyErrorBoundariesThatAlreadyFailed = null;
    "function" === typeof onCommitFiberRoot && onCommitFiberRoot(finishedWork.stateNode, expirationTime);
    1073741823 === renderPriorityLevel ? root === rootWithNestedUpdates ? nestedUpdateCount++ : (nestedUpdateCount = 0, rootWithNestedUpdates = root) : nestedUpdateCount = 0;
    if (hasUncaughtError) throw hasUncaughtError = false, root = firstUncaughtError, firstUncaughtError = null, root;
    if ((executionContext & LegacyUnbatchedContext) !== NoContext) return null;
    flushSyncCallbackQueue();
    return null;
  }

  function flushPassiveEffects() {
    if (null === rootWithPendingPassiveEffects) return false;
    var root = rootWithPendingPassiveEffects,
        expirationTime = pendingPassiveEffectsExpirationTime,
        renderPriorityLevel = pendingPassiveEffectsRenderPriority;
    rootWithPendingPassiveEffects = null;
    pendingPassiveEffectsExpirationTime = 0;
    pendingPassiveEffectsRenderPriority = 90;
    return runWithPriority$1(97 < renderPriorityLevel ? 97 : renderPriorityLevel, flushPassiveEffectsImpl.bind(null, root, expirationTime));
  }

  function flushPassiveEffectsImpl(root) {
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Cannot flush passive effects while already rendering."));
    var prevExecutionContext = executionContext;
    executionContext |= CommitContext;

    for (root = root.current.firstEffect; null !== root;) {
      try {
        var finishedWork = root;
        if (0 !== (finishedWork.effectTag & 512)) switch (finishedWork.tag) {
          case 0:
          case 11:
          case 15:
            commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork), commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
        }
      } catch (error) {
        if (null === root) throw ReactError(Error("Should be working on an effect."));
        captureCommitPhaseError(root, error);
      }

      finishedWork = root.nextEffect;
      root.nextEffect = null;
      root = finishedWork;
    }

    executionContext = prevExecutionContext;
    flushSyncCallbackQueue();
    return true;
  }

  function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
    sourceFiber = createCapturedValue(error, sourceFiber);
    sourceFiber = createRootErrorUpdate(rootFiber, sourceFiber, 1073741823);
    enqueueUpdate(rootFiber, sourceFiber);
    rootFiber = markUpdateTimeFromFiberToRoot(rootFiber, 1073741823);
    null !== rootFiber && scheduleCallbackForRoot(rootFiber, 99, 1073741823);
  }

  function captureCommitPhaseError(sourceFiber, error) {
    if (3 === sourceFiber.tag) captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);else for (var fiber = sourceFiber.return; null !== fiber;) {
      if (3 === fiber.tag) {
        captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
        break;
      } else if (1 === fiber.tag) {
        var instance = fiber.stateNode;

        if ("function" === typeof fiber.type.getDerivedStateFromError || "function" === typeof instance.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(instance))) {
          sourceFiber = createCapturedValue(error, sourceFiber);
          sourceFiber = createClassErrorUpdate(fiber, sourceFiber, 1073741823);
          enqueueUpdate(fiber, sourceFiber);
          fiber = markUpdateTimeFromFiberToRoot(fiber, 1073741823);
          null !== fiber && scheduleCallbackForRoot(fiber, 99, 1073741823);
          break;
        }
      }

      fiber = fiber.return;
    }
  }

  function pingSuspendedRoot(root, thenable, suspendedTime) {
    var pingCache = root.pingCache;
    null !== pingCache && pingCache.delete(thenable);
    workInProgressRoot === root && renderExpirationTime === suspendedTime ? workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && 1073741823 === workInProgressRootLatestProcessedExpirationTime && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS ? prepareFreshStack(root, renderExpirationTime) : workInProgressRootHasPendingPing = true : root.lastPendingTime < suspendedTime || (thenable = root.pingTime, 0 !== thenable && thenable < suspendedTime || (root.pingTime = suspendedTime, root.finishedExpirationTime === suspendedTime && (root.finishedExpirationTime = 0, root.finishedWork = null), thenable = requestCurrentTime(), thenable = inferPriorityFromExpirationTime(thenable, suspendedTime), scheduleCallbackForRoot(root, thenable, suspendedTime)));
  }

  function resolveRetryThenable(boundaryFiber, thenable) {
    var retryCache = boundaryFiber.stateNode;
    null !== retryCache && retryCache.delete(thenable);
    retryCache = requestCurrentTime();
    thenable = computeExpirationForFiber(retryCache, boundaryFiber, null);
    retryCache = inferPriorityFromExpirationTime(retryCache, thenable);
    boundaryFiber = markUpdateTimeFromFiberToRoot(boundaryFiber, thenable);
    null !== boundaryFiber && scheduleCallbackForRoot(boundaryFiber, retryCache, thenable);
  }

  var beginWork$$1 = undefined;

  beginWork$$1 = function beginWork$$1(current$$1, workInProgress, renderExpirationTime) {
    var updateExpirationTime = workInProgress.expirationTime;
    if (null !== current$$1) {
      if (current$$1.memoizedProps !== workInProgress.pendingProps || didPerformWorkStackCursor.current) didReceiveUpdate = true;else {
        if (updateExpirationTime < renderExpirationTime) {
          didReceiveUpdate = false;

          switch (workInProgress.tag) {
            case 3:
              pushHostRootContext(workInProgress);
              break;

            case 5:
              pushHostContext(workInProgress);
              break;

            case 1:
              isContextProvider(workInProgress.type) && pushContextProvider(workInProgress);
              break;

            case 4:
              pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
              break;

            case 10:
              pushProvider(workInProgress, workInProgress.memoizedProps.value);
              break;

            case 13:
              if (null !== workInProgress.memoizedState) {
                updateExpirationTime = workInProgress.child.childExpirationTime;
                if (0 !== updateExpirationTime && updateExpirationTime >= renderExpirationTime) return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
                push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                return null !== workInProgress ? workInProgress.sibling : null;
              }

              push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
              break;

            case 19:
              updateExpirationTime = workInProgress.childExpirationTime >= renderExpirationTime;

              if (0 !== (current$$1.effectTag & 64)) {
                if (updateExpirationTime) return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
                workInProgress.effectTag |= 64;
              }

              var renderState = workInProgress.memoizedState;
              null !== renderState && (renderState.rendering = null, renderState.tail = null);
              push(suspenseStackCursor, suspenseStackCursor.current, workInProgress);
              if (!updateExpirationTime) return null;
          }

          return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        }
      }
    } else didReceiveUpdate = false;
    workInProgress.expirationTime = 0;

    switch (workInProgress.tag) {
      case 2:
        updateExpirationTime = workInProgress.type;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        renderState = getMaskedContext(workInProgress, contextStackCursor.current);
        prepareToReadContext(workInProgress, renderExpirationTime);
        renderState = renderWithHooks(null, workInProgress, updateExpirationTime, current$$1, renderState, renderExpirationTime);
        workInProgress.effectTag |= 1;

        if ("object" === typeof renderState && null !== renderState && "function" === typeof renderState.render && undefined === renderState.$$typeof) {
          workInProgress.tag = 1;
          resetHooks();

          if (isContextProvider(updateExpirationTime)) {
            var hasContext = true;
            pushContextProvider(workInProgress);
          } else hasContext = false;

          workInProgress.memoizedState = null !== renderState.state && undefined !== renderState.state ? renderState.state : null;
          var getDerivedStateFromProps = updateExpirationTime.getDerivedStateFromProps;
          "function" === typeof getDerivedStateFromProps && applyDerivedStateFromProps(workInProgress, updateExpirationTime, getDerivedStateFromProps, current$$1);
          renderState.updater = classComponentUpdater;
          workInProgress.stateNode = renderState;
          renderState._reactInternalFiber = workInProgress;
          mountClassInstance(workInProgress, updateExpirationTime, current$$1, renderExpirationTime);
          workInProgress = finishClassComponent(null, workInProgress, updateExpirationTime, true, hasContext, renderExpirationTime);
        } else workInProgress.tag = 0, reconcileChildren(null, workInProgress, renderState, renderExpirationTime), workInProgress = workInProgress.child;

        return workInProgress;

      case 16:
        renderState = workInProgress.elementType;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        renderState = readLazyComponentType(renderState);
        workInProgress.type = renderState;
        hasContext = workInProgress.tag = resolveLazyComponentTag(renderState);
        current$$1 = resolveDefaultProps(renderState, current$$1);

        switch (hasContext) {
          case 0:
            workInProgress = updateFunctionComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 1:
            workInProgress = updateClassComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 11:
            workInProgress = updateForwardRef(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 14:
            workInProgress = updateMemoComponent(null, workInProgress, renderState, resolveDefaultProps(renderState.type, current$$1), updateExpirationTime, renderExpirationTime);
            break;

          default:
            throw ReactError(Error("Element type is invalid. Received a promise that resolves to: " + renderState + ". Lazy element type must resolve to a class or function."));
        }

        return workInProgress;

      case 0:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateFunctionComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 1:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateClassComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 3:
        pushHostRootContext(workInProgress);
        updateExpirationTime = workInProgress.updateQueue;
        if (null === updateExpirationTime) throw ReactError(Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue."));
        renderState = workInProgress.memoizedState;
        renderState = null !== renderState ? renderState.element : null;
        processUpdateQueue(workInProgress, updateExpirationTime, workInProgress.pendingProps, null, renderExpirationTime);
        updateExpirationTime = workInProgress.memoizedState.element;
        updateExpirationTime === renderState ? workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : (reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress = workInProgress.child);
        return workInProgress;

      case 5:
        return pushHostContext(workInProgress), null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), updateExpirationTime = workInProgress.pendingProps.children, markRef(current$$1, workInProgress), reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 6:
        return null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), null;

      case 13:
        return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);

      case 4:
        return pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo), updateExpirationTime = workInProgress.pendingProps, null === current$$1 ? workInProgress.child = reconcileChildFibers(workInProgress, null, updateExpirationTime, renderExpirationTime) : reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 11:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateForwardRef(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 7:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps, renderExpirationTime), workInProgress.child;

      case 8:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 12:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 10:
        a: {
          updateExpirationTime = workInProgress.type._context;
          renderState = workInProgress.pendingProps;
          getDerivedStateFromProps = workInProgress.memoizedProps;
          hasContext = renderState.value;
          pushProvider(workInProgress, hasContext);

          if (null !== getDerivedStateFromProps) {
            var oldValue = getDerivedStateFromProps.value;
            hasContext = is(oldValue, hasContext) ? 0 : ("function" === typeof updateExpirationTime._calculateChangedBits ? updateExpirationTime._calculateChangedBits(oldValue, hasContext) : 1073741823) | 0;

            if (0 === hasContext) {
              if (getDerivedStateFromProps.children === renderState.children && !didPerformWorkStackCursor.current) {
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                break a;
              }
            } else for (oldValue = workInProgress.child, null !== oldValue && (oldValue.return = workInProgress); null !== oldValue;) {
              var list = oldValue.dependencies;

              if (null !== list) {
                getDerivedStateFromProps = oldValue.child;

                for (var dependency = list.firstContext; null !== dependency;) {
                  if (dependency.context === updateExpirationTime && 0 !== (dependency.observedBits & hasContext)) {
                    1 === oldValue.tag && (dependency = createUpdate(renderExpirationTime, null), dependency.tag = 2, enqueueUpdate(oldValue, dependency));
                    oldValue.expirationTime < renderExpirationTime && (oldValue.expirationTime = renderExpirationTime);
                    dependency = oldValue.alternate;
                    null !== dependency && dependency.expirationTime < renderExpirationTime && (dependency.expirationTime = renderExpirationTime);
                    scheduleWorkOnParentPath(oldValue.return, renderExpirationTime);
                    list.expirationTime < renderExpirationTime && (list.expirationTime = renderExpirationTime);
                    break;
                  }

                  dependency = dependency.next;
                }
              } else getDerivedStateFromProps = 10 === oldValue.tag ? oldValue.type === workInProgress.type ? null : oldValue.child : oldValue.child;

              if (null !== getDerivedStateFromProps) getDerivedStateFromProps.return = oldValue;else for (getDerivedStateFromProps = oldValue; null !== getDerivedStateFromProps;) {
                if (getDerivedStateFromProps === workInProgress) {
                  getDerivedStateFromProps = null;
                  break;
                }

                oldValue = getDerivedStateFromProps.sibling;

                if (null !== oldValue) {
                  oldValue.return = getDerivedStateFromProps.return;
                  getDerivedStateFromProps = oldValue;
                  break;
                }

                getDerivedStateFromProps = getDerivedStateFromProps.return;
              }
              oldValue = getDerivedStateFromProps;
            }
          }

          reconcileChildren(current$$1, workInProgress, renderState.children, renderExpirationTime);
          workInProgress = workInProgress.child;
        }

        return workInProgress;

      case 9:
        return renderState = workInProgress.type, hasContext = workInProgress.pendingProps, updateExpirationTime = hasContext.children, prepareToReadContext(workInProgress, renderExpirationTime), renderState = readContext(renderState, hasContext.unstable_observedBits), updateExpirationTime = updateExpirationTime(renderState), workInProgress.effectTag |= 1, reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 14:
        return renderState = workInProgress.type, hasContext = resolveDefaultProps(renderState, workInProgress.pendingProps), hasContext = resolveDefaultProps(renderState.type, hasContext), updateMemoComponent(current$$1, workInProgress, renderState, hasContext, updateExpirationTime, renderExpirationTime);

      case 15:
        return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);

      case 17:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), workInProgress.tag = 1, isContextProvider(updateExpirationTime) ? (current$$1 = true, pushContextProvider(workInProgress)) : current$$1 = false, prepareToReadContext(workInProgress, renderExpirationTime), constructClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), mountClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), finishClassComponent(null, workInProgress, updateExpirationTime, true, current$$1, renderExpirationTime);

      case 19:
        return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
    }

    throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
  };

  var onCommitFiberRoot = null,
      onCommitFiberUnmount = null;

  function injectInternals(internals) {
    if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return false;
    var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (hook.isDisabled || !hook.supportsFiber) return true;

    try {
      var rendererID = hook.inject(internals);

      onCommitFiberRoot = function onCommitFiberRoot(root) {
        try {
          hook.onCommitFiberRoot(rendererID, root, undefined, 64 === (root.current.effectTag & 64));
        } catch (err) {}
      };

      onCommitFiberUnmount = function onCommitFiberUnmount(fiber) {
        try {
          hook.onCommitFiberUnmount(rendererID, fiber);
        } catch (err) {}
      };
    } catch (err) {}

    return true;
  }

  function FiberNode(tag, pendingProps, key, mode) {
    this.tag = tag;
    this.key = key;
    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
    this.index = 0;
    this.ref = null;
    this.pendingProps = pendingProps;
    this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
    this.mode = mode;
    this.effectTag = 0;
    this.lastEffect = this.firstEffect = this.nextEffect = null;
    this.childExpirationTime = this.expirationTime = 0;
    this.alternate = null;
  }

  function createFiber(tag, pendingProps, key, mode) {
    return new FiberNode(tag, pendingProps, key, mode);
  }

  function shouldConstruct(Component) {
    Component = Component.prototype;
    return !(!Component || !Component.isReactComponent);
  }

  function resolveLazyComponentTag(Component) {
    if ("function" === typeof Component) return shouldConstruct(Component) ? 1 : 0;

    if (undefined !== Component && null !== Component) {
      Component = Component.$$typeof;
      if (Component === REACT_FORWARD_REF_TYPE) return 11;
      if (Component === REACT_MEMO_TYPE) return 14;
    }

    return 2;
  }

  function createWorkInProgress(current, pendingProps) {
    var workInProgress = current.alternate;
    null === workInProgress ? (workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode), workInProgress.elementType = current.elementType, workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.pendingProps = pendingProps, workInProgress.effectTag = 0, workInProgress.nextEffect = null, workInProgress.firstEffect = null, workInProgress.lastEffect = null);
    workInProgress.childExpirationTime = current.childExpirationTime;
    workInProgress.expirationTime = current.expirationTime;
    workInProgress.child = current.child;
    workInProgress.memoizedProps = current.memoizedProps;
    workInProgress.memoizedState = current.memoizedState;
    workInProgress.updateQueue = current.updateQueue;
    pendingProps = current.dependencies;
    workInProgress.dependencies = null === pendingProps ? null : {
      expirationTime: pendingProps.expirationTime,
      firstContext: pendingProps.firstContext,
      responders: pendingProps.responders
    };
    workInProgress.sibling = current.sibling;
    workInProgress.index = current.index;
    workInProgress.ref = current.ref;
    return workInProgress;
  }

  function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime) {
    var fiberTag = 2;
    owner = type;
    if ("function" === typeof type) shouldConstruct(type) && (fiberTag = 1);else if ("string" === typeof type) fiberTag = 5;else a: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);

      case REACT_CONCURRENT_MODE_TYPE:
        fiberTag = 8;
        mode |= 7;
        break;

      case REACT_STRICT_MODE_TYPE:
        fiberTag = 8;
        mode |= 1;
        break;

      case REACT_PROFILER_TYPE:
        return type = createFiber(12, pendingProps, key, mode | 8), type.elementType = REACT_PROFILER_TYPE, type.type = REACT_PROFILER_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_TYPE:
        return type = createFiber(13, pendingProps, key, mode), type.type = REACT_SUSPENSE_TYPE, type.elementType = REACT_SUSPENSE_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_LIST_TYPE:
        return type = createFiber(19, pendingProps, key, mode), type.elementType = REACT_SUSPENSE_LIST_TYPE, type.expirationTime = expirationTime, type;

      default:
        if ("object" === typeof type && null !== type) switch (type.$$typeof) {
          case REACT_PROVIDER_TYPE:
            fiberTag = 10;
            break a;

          case REACT_CONTEXT_TYPE:
            fiberTag = 9;
            break a;

          case REACT_FORWARD_REF_TYPE:
            fiberTag = 11;
            break a;

          case REACT_MEMO_TYPE:
            fiberTag = 14;
            break a;

          case REACT_LAZY_TYPE:
            fiberTag = 16;
            owner = null;
            break a;
        }
        throw ReactError(Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (null == type ? type : typeof type) + "."));
    }
    key = createFiber(fiberTag, pendingProps, key, mode);
    key.elementType = type;
    key.type = owner;
    key.expirationTime = expirationTime;
    return key;
  }

  function createFiberFromFragment(elements, mode, expirationTime, key) {
    elements = createFiber(7, elements, key, mode);
    elements.expirationTime = expirationTime;
    return elements;
  }

  function createFiberFromText(content, mode, expirationTime) {
    content = createFiber(6, content, null, mode);
    content.expirationTime = expirationTime;
    return content;
  }

  function createFiberFromPortal(portal, mode, expirationTime) {
    mode = createFiber(4, null !== portal.children ? portal.children : [], portal.key, mode);
    mode.expirationTime = expirationTime;
    mode.stateNode = {
      containerInfo: portal.containerInfo,
      pendingChildren: null,
      implementation: portal.implementation
    };
    return mode;
  }

  function FiberRootNode(containerInfo, tag, hydrate) {
    this.tag = tag;
    this.current = null;
    this.containerInfo = containerInfo;
    this.pingCache = this.pendingChildren = null;
    this.finishedExpirationTime = 0;
    this.finishedWork = null;
    this.timeoutHandle = -1;
    this.pendingContext = this.context = null;
    this.hydrate = hydrate;
    this.callbackNode = this.firstBatch = null;
    this.pingTime = this.lastPendingTime = this.firstPendingTime = this.callbackExpirationTime = 0;
  }

  function findHostInstance(component) {
    var fiber = component._reactInternalFiber;

    if (undefined === fiber) {
      if ("function" === typeof component.render) throw ReactError(Error("Unable to find node on an unmounted component."));
      throw ReactError(Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component)));
    }

    component = findCurrentHostFiber(fiber);
    return null === component ? null : component.stateNode;
  }

  function updateContainer(element, container, parentComponent, callback) {
    var current$$1 = container.current,
        currentTime = requestCurrentTime(),
        suspenseConfig = ReactCurrentBatchConfig.suspense;
    current$$1 = computeExpirationForFiber(currentTime, current$$1, suspenseConfig);
    currentTime = container.current;

    a: if (parentComponent) {
      parentComponent = parentComponent._reactInternalFiber;

      b: {
        if (2 !== isFiberMountedImpl(parentComponent) || 1 !== parentComponent.tag) throw ReactError(Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue."));
        var parentContext = parentComponent;

        do {
          switch (parentContext.tag) {
            case 3:
              parentContext = parentContext.stateNode.context;
              break b;

            case 1:
              if (isContextProvider(parentContext.type)) {
                parentContext = parentContext.stateNode.__reactInternalMemoizedMergedChildContext;
                break b;
              }

          }

          parentContext = parentContext.return;
        } while (null !== parentContext);

        throw ReactError(Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue."));
      }

      if (1 === parentComponent.tag) {
        var Component = parentComponent.type;

        if (isContextProvider(Component)) {
          parentComponent = processChildContext(parentComponent, Component, parentContext);
          break a;
        }
      }

      parentComponent = parentContext;
    } else parentComponent = emptyContextObject;

    null === container.context ? container.context = parentComponent : container.pendingContext = parentComponent;
    container = callback;
    suspenseConfig = createUpdate(current$$1, suspenseConfig);
    suspenseConfig.payload = {
      element: element
    };
    container = undefined === container ? null : container;
    null !== container && (suspenseConfig.callback = container);
    enqueueUpdate(currentTime, suspenseConfig);
    scheduleUpdateOnFiber(currentTime, current$$1);
    return current$$1;
  }

  function _createPortal(children, containerInfo, implementation) {
    var key = 3 < arguments.length && undefined !== arguments[3] ? arguments[3] : null;
    return {
      $$typeof: REACT_PORTAL_TYPE,
      key: null == key ? null : "" + key,
      children: children,
      containerInfo: containerInfo,
      implementation: implementation
    };
  }

  function _inherits$1(subClass, superClass) {
    if ("function" !== typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
  }

  var getInspectorDataForViewTag = undefined;

  getInspectorDataForViewTag = function getInspectorDataForViewTag() {
    throw ReactError(Error("getInspectorDataForViewTag() is not available in production"));
  };

  var fabricDispatchCommand = nativeFabricUIManager.dispatchCommand;

  function findNodeHandle(componentOrHandle) {
    if (null == componentOrHandle) return null;
    if ("number" === typeof componentOrHandle) return componentOrHandle;
    if (componentOrHandle._nativeTag) return componentOrHandle._nativeTag;
    if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) return componentOrHandle.canonical._nativeTag;
    componentOrHandle = findHostInstance(componentOrHandle);
    return null == componentOrHandle ? componentOrHandle : componentOrHandle.canonical ? componentOrHandle.canonical._nativeTag : componentOrHandle._nativeTag;
  }

  batchedUpdatesImpl = function batchedUpdatesImpl(fn, a) {
    var prevExecutionContext = executionContext;
    executionContext |= 1;

    try {
      return fn(a);
    } finally {
      executionContext = prevExecutionContext, executionContext === NoContext && flushSyncCallbackQueue();
    }
  };

  flushDiscreteUpdatesImpl = function flushDiscreteUpdatesImpl() {
    (executionContext & 49) === NoContext && (flushPendingDiscreteUpdates(), flushPassiveEffects());
  };

  var roots = new Map(),
      ReactFabric = {
    NativeComponent: function (findNodeHandle, findHostInstance) {
      return function (_React$Component) {
        function ReactNativeComponent() {
          if (!(this instanceof ReactNativeComponent)) throw new TypeError("Cannot call a class as a function");

          var call = _React$Component.apply(this, arguments);

          if (!this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return !call || "object" !== typeof call && "function" !== typeof call ? this : call;
        }

        _inherits$1(ReactNativeComponent, _React$Component);

        ReactNativeComponent.prototype.blur = function () {
          ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.focus = function () {
          ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.measure = function (callback) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
        };

        ReactNativeComponent.prototype.measureInWindow = function (callback) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
        };

        ReactNativeComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
        };

        ReactNativeComponent.prototype.setNativeProps = function (nativeProps) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          if (null != maybeInstance && !maybeInstance.canonical) {
            var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
            maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
            nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
            null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
          }
        };

        return ReactNativeComponent;
      }(React.Component);
    }(findNodeHandle, findHostInstance),
    findNodeHandle: findNodeHandle,
    setNativeProps: function setNativeProps() {},
    dispatchCommand: function dispatchCommand(handle, command, args) {
      null != handle._nativeTag && null != handle._internalInstanceHandle && fabricDispatchCommand(handle._internalInstanceHandle.stateNode.node, command, args);
    },
    render: function render(element, containerTag, callback) {
      var root = roots.get(containerTag);

      if (!root) {
        root = new FiberRootNode(containerTag, 0, false);
        var uninitializedFiber = createFiber(3, null, null, 0);
        root.current = uninitializedFiber;
        uninitializedFiber.stateNode = root;
        roots.set(containerTag, root);
      }

      updateContainer(element, root, null, callback);

      a: if (element = root.current, element.child) switch (element.child.tag) {
        case 5:
          element = element.child.stateNode.canonical;
          break a;

        default:
          element = element.child.stateNode;
      } else element = null;

      return element;
    },
    unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
      var root = roots.get(containerTag);
      root && updateContainer(null, root, null, function () {
        roots.delete(containerTag);
      });
    },
    createPortal: function createPortal(children, containerTag) {
      return _createPortal(children, containerTag, null, 2 < arguments.length && undefined !== arguments[2] ? arguments[2] : null);
    },
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
      NativeMethodsMixin: function (findNodeHandle, findHostInstance) {
        return {
          measure: function measure(callback) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
          },
          measureInWindow: function measureInWindow(callback) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
          },
          measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
          },
          setNativeProps: function setNativeProps(nativeProps) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            if (null != maybeInstance && !maybeInstance.canonical) {
              var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
              maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
              nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
              null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
            }
          },
          focus: function focus() {
            ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
          },
          blur: function blur() {
            ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
          }
        };
      }(findNodeHandle, findHostInstance)
    }
  };

  (function (devToolsConfig) {
    var _findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
    return injectInternals(_extends({}, devToolsConfig, {
      overrideHookState: null,
      overrideProps: null,
      setSuspenseHandler: null,
      scheduleUpdate: null,
      currentDispatcherRef: ReactSharedInternals.ReactCurrentDispatcher,
      findHostInstanceByFiber: function findHostInstanceByFiber(fiber) {
        fiber = findCurrentHostFiber(fiber);
        return null === fiber ? null : fiber.stateNode;
      },
      findFiberByHostInstance: function findFiberByHostInstance(instance) {
        return _findFiberByHostInstance ? _findFiberByHostInstance(instance) : null;
      },
      findHostInstancesForRefresh: null,
      scheduleRefresh: null,
      scheduleRoot: null,
      setRefreshHandler: null,
      getCurrentFiber: null
    }));
  })({
    findFiberByHostInstance: getInstanceFromInstance,
    getInspectorDataForViewTag: getInspectorDataForViewTag,
    bundleType: 0,
    version: "16.8.6",
    rendererPackageName: "react-native-renderer"
  });

  var ReactFabric$2 = {
    default: ReactFabric
  },
      ReactFabric$3 = ReactFabric$2 && ReactFabric || ReactFabric$2;
  module.exports = ReactFabric$3.default || ReactFabric$3;
},14815,[14344,14446,14566,10297,14575]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('AppState');

  exports.default = _default;
},14818,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('AsyncSQLiteDBStorage') || TurboModuleRegistry.get('AsyncLocalStorage');

  exports.default = _default;
},14821,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('Clipboard');

  exports.default = _default;
},14824,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('DatePickerAndroid');

  exports.default = _default;
},14827,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _NativeImagePickerIOS = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var ImagePickerIOS = {
    canRecordVideos: function canRecordVideos(callback) {
      (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
      return _NativeImagePickerIOS.default.canRecordVideos(callback);
    },
    canUseCamera: function canUseCamera(callback) {
      (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
      return _NativeImagePickerIOS.default.canUseCamera(callback);
    },
    openCameraDialog: function openCameraDialog(config, successCallback, cancelCallback) {
      (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
      var newConfig = {
        videoMode: true,
        unmirrorFrontFacingCamera: false
      };

      if (config.videoMode != null) {
        newConfig.videoMode = config.videoMode;
      }

      if (config.unmirrorFrontFacingCamera != null) {
        newConfig.unmirrorFrontFacingCamera = config.unmirrorFrontFacingCamera;
      }

      return _NativeImagePickerIOS.default.openCameraDialog(newConfig, successCallback, cancelCallback);
    },
    openSelectDialog: function openSelectDialog(config, successCallback, cancelCallback) {
      (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
      var newConfig = {
        showImages: true,
        showVideos: false
      };

      if (config.showImages != null) {
        newConfig.showImages = config.showImages;
      }

      if (config.showVideos != null) {
        newConfig.showVideos = config.showVideos;
      }

      return _NativeImagePickerIOS.default.openSelectDialog(newConfig, successCallback, cancelCallback);
    }
  };
  module.exports = ImagePickerIOS;
},14830,[14305,14833,14326]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('ImagePickerIOS');

  exports.default = _default;
},14833,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _default = _Platform.default.OS === 'android' ? TurboModuleRegistry.getEnforcing('IntentAndroid') : TurboModuleRegistry.getEnforcing('LinkingManager');

  exports.default = _default;
},14836,[14305,14308,14341,10066]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TouchHistoryMath = {
    centroidDimension: function centroidDimension(touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {
      var touchBank = touchHistory.touchBank;
      var total = 0;
      var count = 0;
      var oneTouchData = touchHistory.numberActiveTouches === 1 ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch] : null;

      if (oneTouchData !== null) {
        if (oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter) {
          total += ofCurrent && isXAxis ? oneTouchData.currentPageX : ofCurrent && !isXAxis ? oneTouchData.currentPageY : !ofCurrent && isXAxis ? oneTouchData.previousPageX : oneTouchData.previousPageY;
          count = 1;
        }
      } else {
        for (var i = 0; i < touchBank.length; i++) {
          var touchTrack = touchBank[i];

          if (touchTrack !== null && touchTrack !== undefined && touchTrack.touchActive && touchTrack.currentTimeStamp >= touchesChangedAfter) {
            var toAdd = undefined;

            if (ofCurrent && isXAxis) {
              toAdd = touchTrack.currentPageX;
            } else if (ofCurrent && !isXAxis) {
              toAdd = touchTrack.currentPageY;
            } else if (!ofCurrent && isXAxis) {
              toAdd = touchTrack.previousPageX;
            } else {
              toAdd = touchTrack.previousPageY;
            }

            total += toAdd;
            count++;
          }
        }
      }

      return count > 0 ? total / count : TouchHistoryMath.noCentroid;
    },
    currentCentroidXOfTouchesChangedAfter: function currentCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, true);
    },
    currentCentroidYOfTouchesChangedAfter: function currentCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, true);
    },
    previousCentroidXOfTouchesChangedAfter: function previousCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, false);
    },
    previousCentroidYOfTouchesChangedAfter: function previousCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, false);
    },
    currentCentroidX: function currentCentroidX(touchHistory) {
      return TouchHistoryMath.centroidDimension(touchHistory, 0, true, true);
    },
    currentCentroidY: function currentCentroidY(touchHistory) {
      return TouchHistoryMath.centroidDimension(touchHistory, 0, false, true);
    },
    noCentroid: -1
  };
  module.exports = TouchHistoryMath;
},14839,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('PermissionsAndroid');

  exports.default = _default;
},14842,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('PushNotificationManager');

  exports.default = _default;
},14845,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('ShareModule');

  exports.default = _default;
},14848,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _NativeTimePickerAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var TimePickerAndroid = function () {
    function TimePickerAndroid() {
      (0, _classCallCheck2.default)(this, TimePickerAndroid);
    }

    (0, _createClass2.default)(TimePickerAndroid, null, [{
      key: "open",
      value: function open(options) {
        return _regenerator.default.async(function open$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!_NativeTimePickerAndroid.default) {
                  _context.next = 4;
                  break;
                }

                return _context.abrupt("return", _NativeTimePickerAndroid.default.open(options));

              case 4:
                return _context.abrupt("return", Promise.reject({
                  message: 'TimePickerAndroid is not supported on this platform.'
                }));

              case 5:
              case "end":
                return _context.stop();
            }
          }
        });
      }
    }]);
    return TimePickerAndroid;
  }();

  TimePickerAndroid.timeSetAction = 'timeSetAction';
  TimePickerAndroid.dismissedAction = 'dismissedAction';
  module.exports = TimePickerAndroid;
},14851,[14305,14674,14320,14323,14854]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('TimePickerAndroid');

  exports.default = _default;
},14854,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('ToastAndroid');

  exports.default = _default;
},14857,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = useWindowDimensions;

  var _Dimensions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));

  function useWindowDimensions() {
    var dims = _Dimensions.default.get('window');

    var forceUpdate = React.useState(false)[1].bind(null, function (v) {
      return !v;
    });
    var initialDims = React.useState(dims)[0];
    React.useEffect(function () {
      _Dimensions.default.addEventListener('change', forceUpdate);

      var latestDims = _Dimensions.default.get('window');

      if (latestDims !== initialDims) {
        forceUpdate();
      }

      return function () {
        _Dimensions.default.removeEventListener('change', forceUpdate);
      };
    }, [forceUpdate, initialDims]);
    return dims;
  }
},14860,[14308,14305,10429,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var deepFreezeAndThrowOnMutationInDev = _$$_REQUIRE(_dependencyMap[0]);

  var UTFSequence = deepFreezeAndThrowOnMutationInDev({
    BOM: "\uFEFF",
    BULLET: "\u2022",
    BULLET_SP: "\xA0\u2022\xA0",
    MIDDOT: "\xB7",
    MIDDOT_SP: "\xA0\xB7\xA0",
    MIDDOT_KATAKANA: "\u30FB",
    MDASH: "\u2014",
    MDASH_SP: "\xA0\u2014\xA0",
    NDASH: "\u2013",
    NDASH_SP: "\xA0\u2013\xA0",
    NBSP: "\xA0",
    PIZZA: "\uD83C\uDF55",
    TRIANGLE_LEFT: "\u25C0",
    TRIANGLE_RIGHT: "\u25B6"
  });
  module.exports = UTFSequence;
},14863,[10057]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('Vibration');

  exports.default = _default;
},14866,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var React = _$$_REQUIRE(_dependencyMap[5]);

  var YellowBox;
  {
    YellowBox = function (_React$Component2) {
      _inherits(YellowBox, _React$Component2);

      function YellowBox() {
        _classCallCheck(this, YellowBox);

        return _possibleConstructorReturn(this, _getPrototypeOf(YellowBox).apply(this, arguments));
      }

      _createClass(YellowBox, [{
        key: "render",
        value: function render() {
          return null;
        }
      }], [{
        key: "ignoreWarnings",
        value: function ignoreWarnings(patterns) {}
      }, {
        key: "install",
        value: function install() {}
      }, {
        key: "uninstall",
        value: function uninstall() {}
      }]);

      return YellowBox;
    }(React.Component);
  }
  module.exports = YellowBox;
},14869,[14320,14323,14371,14377,14386,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var PropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var PointPropType = PropTypes.shape({
    x: PropTypes.number,
    y: PropTypes.number
  });
  module.exports = PointPropType;
},14872,[10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  ;

  (function (isNode) {
    var Public = function Public(clone) {
      return merge(clone === true, false, arguments);
    },
        publicName = 'merge';

    Public.recursive = function (clone) {
      return merge(clone === true, true, arguments);
    };

    Public.clone = function (input) {
      var output = input,
          type = typeOf(input),
          index,
          size;

      if (type === 'array') {
        output = [];
        size = input.length;

        for (index = 0; index < size; ++index) {
          output[index] = Public.clone(input[index]);
        }
      } else if (type === 'object') {
        output = {};

        for (index in input) {
          output[index] = Public.clone(input[index]);
        }
      }

      return output;
    };

    function merge_recursive(base, extend) {
      if (typeOf(base) !== 'object') return extend;

      for (var key in extend) {
        if (typeOf(base[key]) === 'object' && typeOf(extend[key]) === 'object') {
          base[key] = merge_recursive(base[key], extend[key]);
        } else {
          base[key] = extend[key];
        }
      }

      return base;
    }

    function merge(clone, recursive, argv) {
      var result = argv[0],
          size = argv.length;
      if (clone || typeOf(result) !== 'object') result = {};

      for (var index = 0; index < size; ++index) {
        var item = argv[index],
            type = typeOf(item);
        if (type !== 'object') continue;

        for (var key in item) {
          if (key === '__proto__') continue;
          var sitem = clone ? Public.clone(item[key]) : item[key];

          if (recursive) {
            result[key] = merge_recursive(result[key], sitem);
          } else {
            result[key] = sitem;
          }
        }
      }

      return result;
    }

    function typeOf(input) {
      return {}.toString.call(input).slice(8, -1).toLowerCase();
    }

    if (isNode) {
      module.exports = Public;
    } else {
      window[publicName] = Public;
    }
  })(typeof module === 'object' && module && typeof module.exports === 'object' && module.exports);
},14914,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = extractColor;
  exports.integerColor = exports.colorNames = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var colorNames = {
    aliceblue: [240, 248, 255],
    antiquewhite: [250, 235, 215],
    aqua: [0, 255, 255],
    aquamarine: [127, 255, 212],
    azure: [240, 255, 255],
    beige: [245, 245, 220],
    bisque: [255, 228, 196],
    black: [0, 0, 0],
    blanchedalmond: [255, 235, 205],
    blue: [0, 0, 255],
    blueviolet: [138, 43, 226],
    brown: [165, 42, 42],
    burlywood: [222, 184, 135],
    cadetblue: [95, 158, 160],
    chartreuse: [127, 255, 0],
    chocolate: [210, 105, 30],
    coral: [255, 127, 80],
    cornflowerblue: [100, 149, 237],
    cornsilk: [255, 248, 220],
    crimson: [220, 20, 60],
    cyan: [0, 255, 255],
    darkblue: [0, 0, 139],
    darkcyan: [0, 139, 139],
    darkgoldenrod: [184, 134, 11],
    darkgray: [169, 169, 169],
    darkgreen: [0, 100, 0],
    darkgrey: [169, 169, 169],
    darkkhaki: [189, 183, 107],
    darkmagenta: [139, 0, 139],
    darkolivegreen: [85, 107, 47],
    darkorange: [255, 140, 0],
    darkorchid: [153, 50, 204],
    darkred: [139, 0, 0],
    darksalmon: [233, 150, 122],
    darkseagreen: [143, 188, 143],
    darkslateblue: [72, 61, 139],
    darkslategray: [47, 79, 79],
    darkslategrey: [47, 79, 79],
    darkturquoise: [0, 206, 209],
    darkviolet: [148, 0, 211],
    deeppink: [255, 20, 147],
    deepskyblue: [0, 191, 255],
    dimgray: [105, 105, 105],
    dimgrey: [105, 105, 105],
    dodgerblue: [30, 144, 255],
    firebrick: [178, 34, 34],
    floralwhite: [255, 250, 240],
    forestgreen: [34, 139, 34],
    fuchsia: [255, 0, 255],
    gainsboro: [220, 220, 220],
    ghostwhite: [248, 248, 255],
    gold: [255, 215, 0],
    goldenrod: [218, 165, 32],
    gray: [128, 128, 128],
    green: [0, 128, 0],
    greenyellow: [173, 255, 47],
    grey: [128, 128, 128],
    honeydew: [240, 255, 240],
    hotpink: [255, 105, 180],
    indianred: [205, 92, 92],
    indigo: [75, 0, 130],
    ivory: [255, 255, 240],
    khaki: [240, 230, 140],
    lavender: [230, 230, 250],
    lavenderblush: [255, 240, 245],
    lawngreen: [124, 252, 0],
    lemonchiffon: [255, 250, 205],
    lightblue: [173, 216, 230],
    lightcoral: [240, 128, 128],
    lightcyan: [224, 255, 255],
    lightgoldenrodyellow: [250, 250, 210],
    lightgray: [211, 211, 211],
    lightgreen: [144, 238, 144],
    lightgrey: [211, 211, 211],
    lightpink: [255, 182, 193],
    lightsalmon: [255, 160, 122],
    lightseagreen: [32, 178, 170],
    lightskyblue: [135, 206, 250],
    lightslategray: [119, 136, 153],
    lightslategrey: [119, 136, 153],
    lightsteelblue: [176, 196, 222],
    lightyellow: [255, 255, 224],
    lime: [0, 255, 0],
    limegreen: [50, 205, 50],
    linen: [250, 240, 230],
    magenta: [255, 0, 255],
    maroon: [128, 0, 0],
    mediumaquamarine: [102, 205, 170],
    mediumblue: [0, 0, 205],
    mediumorchid: [186, 85, 211],
    mediumpurple: [147, 112, 219],
    mediumseagreen: [60, 179, 113],
    mediumslateblue: [123, 104, 238],
    mediumspringgreen: [0, 250, 154],
    mediumturquoise: [72, 209, 204],
    mediumvioletred: [199, 21, 133],
    midnightblue: [25, 25, 112],
    mintcream: [245, 255, 250],
    mistyrose: [255, 228, 225],
    moccasin: [255, 228, 181],
    navajowhite: [255, 222, 173],
    navy: [0, 0, 128],
    oldlace: [253, 245, 230],
    olive: [128, 128, 0],
    olivedrab: [107, 142, 35],
    orange: [255, 165, 0],
    orangered: [255, 69, 0],
    orchid: [218, 112, 214],
    palegoldenrod: [238, 232, 170],
    palegreen: [152, 251, 152],
    paleturquoise: [175, 238, 238],
    palevioletred: [219, 112, 147],
    papayawhip: [255, 239, 213],
    peachpuff: [255, 218, 185],
    peru: [205, 133, 63],
    pink: [255, 192, 203],
    plum: [221, 160, 221],
    powderblue: [176, 224, 230],
    purple: [128, 0, 128],
    rebeccapurple: [102, 51, 153],
    red: [255, 0, 0],
    rosybrown: [188, 143, 143],
    royalblue: [65, 105, 225],
    saddlebrown: [139, 69, 19],
    salmon: [250, 128, 114],
    sandybrown: [244, 164, 96],
    seagreen: [46, 139, 87],
    seashell: [255, 245, 238],
    sienna: [160, 82, 45],
    silver: [192, 192, 192],
    skyblue: [135, 206, 235],
    slateblue: [106, 90, 205],
    slategray: [112, 128, 144],
    slategrey: [112, 128, 144],
    snow: [255, 250, 250],
    springgreen: [0, 255, 127],
    steelblue: [70, 130, 180],
    tan: [210, 180, 140],
    teal: [0, 128, 128],
    thistle: [216, 191, 216],
    tomato: [255, 99, 71],
    turquoise: [64, 224, 208],
    violet: [238, 130, 238],
    wheat: [245, 222, 179],
    white: [255, 255, 255],
    whitesmoke: [245, 245, 245],
    yellow: [255, 255, 0],
    yellowgreen: [154, 205, 50]
  };
  exports.colorNames = colorNames;

  for (var name in colorNames) {
    if (colorNames.hasOwnProperty(name)) {
      var color = colorNames[name];
      var r = color[0];
      var g = color[1];
      var b = color[2];
      colorNames[name] = (0xff000000 | r << 16 | g << 8 | b) >>> 0;
    }
  }

  Object.freeze(colorNames);

  function hslToRgb(hsl) {
    var h = hsl[0] / 360;
    var s = hsl[1] / 100;
    var l = hsl[2] / 100;
    var t1;
    var t2;
    var t3;
    var rgb;
    var val;

    if (s === 0) {
      val = l * 255;
      return [val, val, val];
    }

    if (l < 0.5) {
      t2 = l * (1 + s);
    } else {
      t2 = l + s - l * s;
    }

    t1 = 2 * l - t2;
    rgb = [0, 0, 0];

    for (var i = 0; i < 3; i++) {
      t3 = h + 0.3333333333333333 * -(i - 1);

      if (t3 < 0) {
        t3++;
      }

      if (t3 > 1) {
        t3--;
      }

      if (6 * t3 < 1) {
        val = t1 + (t2 - t1) * 6 * t3;
      } else if (2 * t3 < 1) {
        val = t2;
      } else if (3 * t3 < 2) {
        val = t1 + (t2 - t1) * (0.6666666666666666 - t3) * 6;
      } else {
        val = t1;
      }

      rgb[i] = val;
    }

    return rgb;
  }

  function hwbToRgb(hwb) {
    var h = hwb[0] / 360;
    var wh = hwb[1] / 100;
    var bl = hwb[2] / 100;
    var ratio = wh + bl;
    var i;
    var v;
    var f;
    var n;

    if (ratio > 1) {
      wh /= ratio;
      bl /= ratio;
    }

    i = Math.floor(6 * h);
    v = 1 - bl;
    f = 6 * h - i;

    if ((i & 0x01) !== 0) {
      f = 1 - f;
    }

    n = wh + f * (v - wh);
    var r;
    var g;
    var b;

    switch (i) {
      default:
      case 6:
      case 0:
        r = v;
        g = n;
        b = wh;
        break;

      case 1:
        r = n;
        g = v;
        b = wh;
        break;

      case 2:
        r = wh;
        g = v;
        b = n;
        break;

      case 3:
        r = wh;
        g = n;
        b = v;
        break;

      case 4:
        r = n;
        g = wh;
        b = v;
        break;

      case 5:
        r = v;
        g = wh;
        b = n;
        break;
    }

    return [r, g, b];
  }

  function clamp(num, min, max) {
    return Math.min(Math.max(min, num), max);
  }

  var abbr = /^#([a-f0-9]{3,4})$/i;
  var hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;
  var rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;
  var per = /^rgba?\(\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;
  var keyword = /(\D+)/;

  function rgbFromString(string) {
    var rgb = [0, 0, 0, 1];
    var match;
    var i;
    var hexAlpha;

    if (match = string.match(hex)) {
      hexAlpha = match[2];
      match = match[1];

      for (i = 0; i < 3; i++) {
        var i2 = i * 2;
        rgb[i] = parseInt(match.slice(i2, i2 + 2), 16) / 255;
      }

      if (hexAlpha) {
        rgb[3] = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;
      }
    } else if (match = string.match(abbr)) {
      match = match[1];
      hexAlpha = match[3];

      for (i = 0; i < 3; i++) {
        rgb[i] = parseInt(match[i] + match[i], 16) / 255;
      }

      if (hexAlpha) {
        rgb[3] = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;
      }
    } else if (match = string.match(rgba)) {
      for (i = 0; i < 3; i++) {
        rgb[i] = parseInt(match[i + 1], 0) / 255;
      }

      if (match[4]) {
        rgb[3] = parseFloat(match[4]);
      }
    } else if (match = string.match(per)) {
      for (i = 0; i < 3; i++) {
        rgb[i] = parseFloat(match[i + 1]) / 100;
      }

      if (match[4]) {
        rgb[3] = parseFloat(match[4]);
      }
    } else if (match = string.match(keyword)) {
      if (match[1] === 'transparent') {
        return [0, 0, 0, 0];
      }

      rgb = colorNames[match[1]];

      if (!(typeof rgb === 'number')) {
        return null;
      }

      return integerColor(rgb);
    } else {
      return null;
    }

    for (i = 0; i < 4; i++) {
      rgb[i] = clamp(rgb[i], 0, 1);
    }

    return rgb;
  }

  var hslRegEx = /^hsla?\(\s*([+-]?(?:\d*\.)?\d+)(?:deg)?\s*,\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;

  function rgbFromHslString(string) {
    var match = string.match(hslRegEx);

    if (!match) {
      return null;
    }

    var alpha = parseFloat(match[4]);
    var h = (parseFloat(match[1]) + 360) % 360;
    var s = clamp(parseFloat(match[2]), 0, 100);
    var l = clamp(parseFloat(match[3]), 0, 100);
    var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
    return hslToRgb([h, s, l, a]);
  }

  var hwbRegEx = /^hwb\(\s*([+-]?\d*[.]?\d+)(?:deg)?\s*,\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;

  function rgbFromHwbString(string) {
    var match = string.match(hwbRegEx);

    if (!match) {
      return null;
    }

    var alpha = parseFloat(match[4]);
    var h = (parseFloat(match[1]) % 360 + 360) % 360;
    var w = clamp(parseFloat(match[2]), 0, 100);
    var b = clamp(parseFloat(match[3]), 0, 100);
    var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
    return hwbToRgb([h, w, b, a]);
  }

  function colorFromString(string) {
    var prefix = string.substring(0, 3).toLowerCase();

    switch (prefix) {
      case 'hsl':
        return rgbFromHslString(string);

      case 'hwb':
        return rgbFromHwbString(string);

      default:
        return rgbFromString(string);
    }
  }

  var identity = function identity(x) {
    return x;
  };

  var toSignedInt32 = function toSignedInt32(x) {
    return x | 0x0;
  };

  var integerColor = _reactNative.Platform.OS === 'android' ? toSignedInt32 : identity;
  exports.integerColor = integerColor;

  function extractColor(color) {
    if (typeof color === 'number') {
      if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
        return integerColor(color);
      }

      return null;
    }

    var parsedColor = typeof color === 'string' ? colorFromString(color) : color;

    if (!Array.isArray(parsedColor)) {
      return parsedColor;
    }

    var r = parsedColor[0];
    var g = parsedColor[1];
    var b = parsedColor[2];
    var a = parsedColor[3];
    var int32Color = ((a === undefined ? 0xff000000 : Math.round(a * 255) << 24) | Math.round(r * 255) << 16 | Math.round(g * 255) << 8 | Math.round(b * 255)) >>> 0;
    return integerColor(int32Color);
  }
},14917,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  function peg$subclass(child, parent) {
    function ctor() {
      this.constructor = child;
    }

    ctor.prototype = parent.prototype;
    child.prototype = new ctor();
  }

  function peg$SyntaxError(message, expected, found, location) {
    this.message = message;
    this.expected = expected;
    this.found = found;
    this.location = location;
    this.name = "SyntaxError";

    if (typeof Error.captureStackTrace === "function") {
      Error.captureStackTrace(this, peg$SyntaxError);
    }
  }

  peg$subclass(peg$SyntaxError, Error);

  peg$SyntaxError.buildMessage = function (expected, found) {
    var DESCRIBE_EXPECTATION_FNS = {
      literal: function literal(expectation) {
        return "\"" + literalEscape(expectation.text) + "\"";
      },
      "class": function _class(expectation) {
        var escapedParts = "",
            i;

        for (i = 0; i < expectation.parts.length; i++) {
          escapedParts += expectation.parts[i] instanceof Array ? classEscape(expectation.parts[i][0]) + "-" + classEscape(expectation.parts[i][1]) : classEscape(expectation.parts[i]);
        }

        return "[" + (expectation.inverted ? "^" : "") + escapedParts + "]";
      },
      any: function any(expectation) {
        return "any character";
      },
      end: function end(expectation) {
        return "end of input";
      },
      other: function other(expectation) {
        return expectation.description;
      }
    };

    function hex(ch) {
      return ch.charCodeAt(0).toString(16).toUpperCase();
    }

    function literalEscape(s) {
      return s.replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (ch) {
        return '\\x0' + hex(ch);
      }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) {
        return '\\x' + hex(ch);
      });
    }

    function classEscape(s) {
      return s.replace(/\\/g, '\\\\').replace(/\]/g, '\\]').replace(/\^/g, '\\^').replace(/-/g, '\\-').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (ch) {
        return '\\x0' + hex(ch);
      }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) {
        return '\\x' + hex(ch);
      });
    }

    function describeExpectation(expectation) {
      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
    }

    function describeExpected(expected) {
      var descriptions = new Array(expected.length),
          i,
          j;

      for (i = 0; i < expected.length; i++) {
        descriptions[i] = describeExpectation(expected[i]);
      }

      descriptions.sort();

      if (descriptions.length > 0) {
        for (i = 1, j = 1; i < descriptions.length; i++) {
          if (descriptions[i - 1] !== descriptions[i]) {
            descriptions[j] = descriptions[i];
            j++;
          }
        }

        descriptions.length = j;
      }

      switch (descriptions.length) {
        case 1:
          return descriptions[0];

        case 2:
          return descriptions[0] + " or " + descriptions[1];

        default:
          return descriptions.slice(0, -1).join(", ") + ", or " + descriptions[descriptions.length - 1];
      }
    }

    function describeFound(found) {
      return found ? "\"" + literalEscape(found) + "\"" : "end of input";
    }

    return "Expected " + describeExpected(expected) + " but " + describeFound(found) + " found.";
  };

  function peg$parse(input, options) {
    options = options !== undefined ? options : {};

    var peg$FAILED = {},
        peg$startRuleFunctions = {
      transformList: peg$parsetransformList
    },
        peg$startRuleFunction = peg$parsetransformList,
        peg$c0 = function peg$c0(ts) {
      return ts;
    },
        peg$c1 = function peg$c1(t, ts) {
      return multiply_matrices(t, ts);
    },
        peg$c2 = "matrix",
        peg$c3 = peg$literalExpectation("matrix", false),
        peg$c4 = "(",
        peg$c5 = peg$literalExpectation("(", false),
        peg$c6 = ")",
        peg$c7 = peg$literalExpectation(")", false),
        peg$c8 = function peg$c8(a, b, c, d, e, f) {
      return [a, c, e, b, d, f];
    },
        peg$c9 = "translate",
        peg$c10 = peg$literalExpectation("translate", false),
        peg$c11 = function peg$c11(tx, ty) {
      return [1, 0, tx, 0, 1, ty || 0];
    },
        peg$c12 = "scale",
        peg$c13 = peg$literalExpectation("scale", false),
        peg$c14 = function peg$c14(sx, sy) {
      return [sx, 0, 0, 0, sy === null ? sx : sy, 0];
    },
        peg$c15 = "rotate",
        peg$c16 = peg$literalExpectation("rotate", false),
        peg$c17 = function peg$c17(angle, c) {
      var cos = Math.cos(deg2rad * angle);
      var sin = Math.sin(deg2rad * angle);

      if (c !== null) {
        var x = c[0];
        var y = c[1];
        return [cos, -sin, cos * -x + -sin * -y + x, sin, cos, sin * -x + cos * -y + y];
      }

      return [cos, -sin, 0, sin, cos, 0];
    },
        peg$c18 = "skewX",
        peg$c19 = peg$literalExpectation("skewX", false),
        peg$c20 = function peg$c20(angle) {
      return [1, Math.tan(deg2rad * angle), 0, 0, 1, 0];
    },
        peg$c21 = "skewY",
        peg$c22 = peg$literalExpectation("skewY", false),
        peg$c23 = function peg$c23(angle) {
      return [1, 0, 0, Math.tan(deg2rad * angle), 1, 0];
    },
        peg$c24 = function peg$c24(f) {
      return parseFloat(f.join(""));
    },
        peg$c25 = function peg$c25(i) {
      return parseInt(i.join(""));
    },
        peg$c26 = function peg$c26(n) {
      return n;
    },
        peg$c27 = function peg$c27(n1, n2) {
      return [n1, n2];
    },
        peg$c28 = ",",
        peg$c29 = peg$literalExpectation(",", false),
        peg$c30 = function peg$c30(ds) {
      return ds.join("");
    },
        peg$c31 = function peg$c31(f) {
      return f.join("");
    },
        peg$c32 = function peg$c32(d) {
      return d.join("");
    },
        peg$c33 = peg$otherExpectation("fractionalConstant"),
        peg$c34 = ".",
        peg$c35 = peg$literalExpectation(".", false),
        peg$c36 = function peg$c36(d1, d2) {
      return [d1 ? d1.join("") : null, ".", d2.join("")].join("");
    },
        peg$c37 = /^[eE]/,
        peg$c38 = peg$classExpectation(["e", "E"], false, false),
        peg$c39 = function peg$c39(e) {
      return [e[0], e[1], e[2].join("")].join("");
    },
        peg$c40 = /^[+\-]/,
        peg$c41 = peg$classExpectation(["+", "-"], false, false),
        peg$c42 = /^[0-9]/,
        peg$c43 = peg$classExpectation([["0", "9"]], false, false),
        peg$c44 = /^[ \t\r\n]/,
        peg$c45 = peg$classExpectation([" ", "\t", "\r", "\n"], false, false),
        peg$currPos = 0,
        peg$savedPos = 0,
        peg$posDetailsCache = [{
      line: 1,
      column: 1
    }],
        peg$maxFailPos = 0,
        peg$maxFailExpected = [],
        peg$silentFails = 0,
        peg$result;

    if ("startRule" in options) {
      if (!(options.startRule in peg$startRuleFunctions)) {
        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
      }

      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
    }

    function peg$literalExpectation(text, ignoreCase) {
      return {
        type: "literal",
        text: text,
        ignoreCase: ignoreCase
      };
    }

    function peg$classExpectation(parts, inverted, ignoreCase) {
      return {
        type: "class",
        parts: parts,
        inverted: inverted,
        ignoreCase: ignoreCase
      };
    }

    function peg$endExpectation() {
      return {
        type: "end"
      };
    }

    function peg$otherExpectation(description) {
      return {
        type: "other",
        description: description
      };
    }

    function peg$computePosDetails(pos) {
      var details = peg$posDetailsCache[pos],
          p;

      if (details) {
        return details;
      } else {
        p = pos - 1;

        while (!peg$posDetailsCache[p]) {
          p--;
        }

        details = peg$posDetailsCache[p];
        details = {
          line: details.line,
          column: details.column
        };

        while (p < pos) {
          if (input.charCodeAt(p) === 10) {
            details.line++;
            details.column = 1;
          } else {
            details.column++;
          }

          p++;
        }

        peg$posDetailsCache[pos] = details;
        return details;
      }
    }

    function peg$computeLocation(startPos, endPos) {
      var startPosDetails = peg$computePosDetails(startPos),
          endPosDetails = peg$computePosDetails(endPos);
      return {
        start: {
          offset: startPos,
          line: startPosDetails.line,
          column: startPosDetails.column
        },
        end: {
          offset: endPos,
          line: endPosDetails.line,
          column: endPosDetails.column
        }
      };
    }

    function peg$fail(expected) {
      if (peg$currPos < peg$maxFailPos) {
        return;
      }

      if (peg$currPos > peg$maxFailPos) {
        peg$maxFailPos = peg$currPos;
        peg$maxFailExpected = [];
      }

      peg$maxFailExpected.push(expected);
    }

    function peg$buildSimpleError(message, location) {
      return new peg$SyntaxError(message, null, null, location);
    }

    function peg$buildStructuredError(expected, found, location) {
      return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);
    }

    function peg$parsetransformList() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsewsp();

      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsewsp();
      }

      if (s1 !== peg$FAILED) {
        s2 = peg$parsetransforms();

        if (s2 === peg$FAILED) {
          s2 = null;
        }

        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parsewsp();

          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parsewsp();
          }

          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c0(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsetransforms() {
      var s0, s1, s2, s3;
      s0 = peg$currPos;
      s1 = peg$parsetransform();

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsecommaWsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsecommaWsp();
        }

        if (s2 !== peg$FAILED) {
          s3 = peg$parsetransforms();

          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c1(s1, s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      if (s0 === peg$FAILED) {
        s0 = peg$parsetransform();
      }

      return s0;
    }

    function peg$parsetransform() {
      var s0;
      s0 = peg$parsematrix();

      if (s0 === peg$FAILED) {
        s0 = peg$parsetranslate();

        if (s0 === peg$FAILED) {
          s0 = peg$parsescale();

          if (s0 === peg$FAILED) {
            s0 = peg$parserotate();

            if (s0 === peg$FAILED) {
              s0 = peg$parseskewX();

              if (s0 === peg$FAILED) {
                s0 = peg$parseskewY();
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsematrix() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 6) === peg$c2) {
        s1 = peg$c2;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c3);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWsp();

                if (s6 !== peg$FAILED) {
                  s7 = peg$parsenumber();

                  if (s7 !== peg$FAILED) {
                    s8 = peg$parsecommaWsp();

                    if (s8 !== peg$FAILED) {
                      s9 = peg$parsenumber();

                      if (s9 !== peg$FAILED) {
                        s10 = peg$parsecommaWsp();

                        if (s10 !== peg$FAILED) {
                          s11 = peg$parsenumber();

                          if (s11 !== peg$FAILED) {
                            s12 = peg$parsecommaWsp();

                            if (s12 !== peg$FAILED) {
                              s13 = peg$parsenumber();

                              if (s13 !== peg$FAILED) {
                                s14 = peg$parsecommaWsp();

                                if (s14 !== peg$FAILED) {
                                  s15 = peg$parsenumber();

                                  if (s15 !== peg$FAILED) {
                                    s16 = [];
                                    s17 = peg$parsewsp();

                                    while (s17 !== peg$FAILED) {
                                      s16.push(s17);
                                      s17 = peg$parsewsp();
                                    }

                                    if (s16 !== peg$FAILED) {
                                      if (input.charCodeAt(peg$currPos) === 41) {
                                        s17 = peg$c6;
                                        peg$currPos++;
                                      } else {
                                        s17 = peg$FAILED;

                                        if (peg$silentFails === 0) {
                                          peg$fail(peg$c7);
                                        }
                                      }

                                      if (s17 !== peg$FAILED) {
                                        peg$savedPos = s0;
                                        s1 = peg$c8(s5, s7, s9, s11, s13, s15);
                                        s0 = s1;
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsetranslate() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 9) === peg$c9) {
        s1 = peg$c9;
        peg$currPos += 9;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c10);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWspNumber();

                if (s6 === peg$FAILED) {
                  s6 = null;
                }

                if (s6 !== peg$FAILED) {
                  s7 = [];
                  s8 = peg$parsewsp();

                  while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    s8 = peg$parsewsp();
                  }

                  if (s7 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 41) {
                      s8 = peg$c6;
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;

                      if (peg$silentFails === 0) {
                        peg$fail(peg$c7);
                      }
                    }

                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c11(s5, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsescale() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 5) === peg$c12) {
        s1 = peg$c12;
        peg$currPos += 5;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c13);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWspNumber();

                if (s6 === peg$FAILED) {
                  s6 = null;
                }

                if (s6 !== peg$FAILED) {
                  s7 = [];
                  s8 = peg$parsewsp();

                  while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    s8 = peg$parsewsp();
                  }

                  if (s7 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 41) {
                      s8 = peg$c6;
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;

                      if (peg$silentFails === 0) {
                        peg$fail(peg$c7);
                      }
                    }

                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c14(s5, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parserotate() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 6) === peg$c15) {
        s1 = peg$c15;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c16);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWspTwoNumbers();

                if (s6 === peg$FAILED) {
                  s6 = null;
                }

                if (s6 !== peg$FAILED) {
                  s7 = [];
                  s8 = peg$parsewsp();

                  while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    s8 = peg$parsewsp();
                  }

                  if (s7 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 41) {
                      s8 = peg$c6;
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;

                      if (peg$silentFails === 0) {
                        peg$fail(peg$c7);
                      }
                    }

                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c17(s5, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseskewX() {
      var s0, s1, s2, s3, s4, s5, s6, s7;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 5) === peg$c18) {
        s1 = peg$c18;
        peg$currPos += 5;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c19);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = [];
                s7 = peg$parsewsp();

                while (s7 !== peg$FAILED) {
                  s6.push(s7);
                  s7 = peg$parsewsp();
                }

                if (s6 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 41) {
                    s7 = peg$c6;
                    peg$currPos++;
                  } else {
                    s7 = peg$FAILED;

                    if (peg$silentFails === 0) {
                      peg$fail(peg$c7);
                    }
                  }

                  if (s7 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c20(s5);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseskewY() {
      var s0, s1, s2, s3, s4, s5, s6, s7;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 5) === peg$c21) {
        s1 = peg$c21;
        peg$currPos += 5;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c22);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = [];
                s7 = peg$parsewsp();

                while (s7 !== peg$FAILED) {
                  s6.push(s7);
                  s7 = peg$parsewsp();
                }

                if (s6 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 41) {
                    s7 = peg$c6;
                    peg$currPos++;
                  } else {
                    s7 = peg$FAILED;

                    if (peg$silentFails === 0) {
                      peg$fail(peg$c7);
                    }
                  }

                  if (s7 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c23(s5);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsenumber() {
      var s0, s1, s2, s3;
      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parsesign();

      if (s2 === peg$FAILED) {
        s2 = null;
      }

      if (s2 !== peg$FAILED) {
        s3 = peg$parsefloatingPointConstant();

        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c24(s1);
      }

      s0 = s1;

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = peg$parsesign();

        if (s2 === peg$FAILED) {
          s2 = null;
        }

        if (s2 !== peg$FAILED) {
          s3 = peg$parseintegerConstant();

          if (s3 !== peg$FAILED) {
            s2 = [s2, s3];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }

        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c25(s1);
        }

        s0 = s1;
      }

      return s0;
    }

    function peg$parsecommaWspNumber() {
      var s0, s1, s2;
      s0 = peg$currPos;
      s1 = peg$parsecommaWsp();

      if (s1 !== peg$FAILED) {
        s2 = peg$parsenumber();

        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c26(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsecommaWspTwoNumbers() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = peg$parsecommaWsp();

      if (s1 !== peg$FAILED) {
        s2 = peg$parsenumber();

        if (s2 !== peg$FAILED) {
          s3 = peg$parsecommaWsp();

          if (s3 !== peg$FAILED) {
            s4 = peg$parsenumber();

            if (s4 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c27(s2, s4);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsecommaWsp() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsewsp();

      if (s2 !== peg$FAILED) {
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          s2 = peg$parsewsp();
        }
      } else {
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        s2 = peg$parsecomma();

        if (s2 === peg$FAILED) {
          s2 = null;
        }

        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parsewsp();

          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parsewsp();
          }

          if (s3 !== peg$FAILED) {
            s1 = [s1, s2, s3];
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parsecomma();

        if (s1 !== peg$FAILED) {
          s2 = [];
          s3 = peg$parsewsp();

          while (s3 !== peg$FAILED) {
            s2.push(s3);
            s3 = peg$parsewsp();
          }

          if (s2 !== peg$FAILED) {
            s1 = [s1, s2];
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      }

      return s0;
    }

    function peg$parsecomma() {
      var s0;

      if (input.charCodeAt(peg$currPos) === 44) {
        s0 = peg$c28;
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c29);
        }
      }

      return s0;
    }

    function peg$parseintegerConstant() {
      var s0, s1;
      s0 = peg$currPos;
      s1 = peg$parsedigitSequence();

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c30(s1);
      }

      s0 = s1;
      return s0;
    }

    function peg$parsefloatingPointConstant() {
      var s0, s1, s2, s3;
      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parsefractionalConstant();

      if (s2 !== peg$FAILED) {
        s3 = peg$parseexponent();

        if (s3 === peg$FAILED) {
          s3 = null;
        }

        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c31(s1);
      }

      s0 = s1;

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = peg$parsedigitSequence();

        if (s2 !== peg$FAILED) {
          s3 = peg$parseexponent();

          if (s3 !== peg$FAILED) {
            s2 = [s2, s3];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }

        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c32(s1);
        }

        s0 = s1;
      }

      return s0;
    }

    function peg$parsefractionalConstant() {
      var s0, s1, s2, s3;
      peg$silentFails++;
      s0 = peg$currPos;
      s1 = peg$parsedigitSequence();

      if (s1 === peg$FAILED) {
        s1 = null;
      }

      if (s1 !== peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 46) {
          s2 = peg$c34;
          peg$currPos++;
        } else {
          s2 = peg$FAILED;

          if (peg$silentFails === 0) {
            peg$fail(peg$c35);
          }
        }

        if (s2 !== peg$FAILED) {
          s3 = peg$parsedigitSequence();

          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c36(s1, s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parsedigitSequence();

        if (s1 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 46) {
            s2 = peg$c34;
            peg$currPos++;
          } else {
            s2 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c35);
            }
          }

          if (s2 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c32(s1);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      }

      peg$silentFails--;

      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c33);
        }
      }

      return s0;
    }

    function peg$parseexponent() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = peg$currPos;

      if (peg$c37.test(input.charAt(peg$currPos))) {
        s2 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s2 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c38);
        }
      }

      if (s2 !== peg$FAILED) {
        s3 = peg$parsesign();

        if (s3 === peg$FAILED) {
          s3 = null;
        }

        if (s3 !== peg$FAILED) {
          s4 = peg$parsedigitSequence();

          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c39(s1);
      }

      s0 = s1;
      return s0;
    }

    function peg$parsesign() {
      var s0;

      if (peg$c40.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c41);
        }
      }

      return s0;
    }

    function peg$parsedigitSequence() {
      var s0, s1;
      s0 = [];
      s1 = peg$parsedigit();

      if (s1 !== peg$FAILED) {
        while (s1 !== peg$FAILED) {
          s0.push(s1);
          s1 = peg$parsedigit();
        }
      } else {
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsedigit() {
      var s0;

      if (peg$c42.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c43);
        }
      }

      return s0;
    }

    function peg$parsewsp() {
      var s0;

      if (peg$c44.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c45);
        }
      }

      return s0;
    }

    var deg2rad = Math.PI / 180;

    function multiply_matrices(l, r) {
      var al = l[0];
      var cl = l[1];
      var el = l[2];
      var bl = l[3];
      var dl = l[4];
      var fl = l[5];
      var ar = r[0];
      var cr = r[1];
      var er = r[2];
      var br = r[3];
      var dr = r[4];
      var fr = r[5];
      var a = al * ar + cl * br;
      var c = al * cr + cl * dr;
      var e = al * er + cl * fr + el;
      var b = bl * ar + dl * br;
      var d = bl * cr + dl * dr;
      var f = bl * er + dl * fr + fl;
      return [a, c, e, b, d, f];
    }

    peg$result = peg$startRuleFunction();

    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
      return peg$result;
    } else {
      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
        peg$fail(peg$endExpectation());
      }

      throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));
    }
  }

  module.exports = {
    SyntaxError: peg$SyntaxError,
    parse: peg$parse
  };
},14920,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.pickNotNil = pickNotNil;
  exports.idPattern = undefined;

  function pickNotNil(object) {
    var result = {};

    for (var key in object) {
      if (object.hasOwnProperty(key)) {
        var value = object[key];

        if (value !== undefined && value !== null) {
          result[key] = value;
        }
      }
    }

    return result;
  }

  var idPattern = /#([^)]+)\)?$/;
  exports.idPattern = idPattern;
},14923,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    objectBoundingBox: 0,
    userSpaceOnUse: 1
  };
  exports.default = _default;
},14926,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _extractTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _extractViewBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _units = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var Pattern = function (_Shape) {
    (0, _inherits2.default)(Pattern, _Shape);

    function Pattern() {
      (0, _classCallCheck2.default)(this, Pattern);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Pattern).apply(this, arguments));
    }

    (0, _createClass2.default)(Pattern, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var patternTransform = props.patternTransform,
            transform = props.transform,
            id = props.id,
            x = props.x,
            y = props.y,
            width = props.width,
            height = props.height,
            patternUnits = props.patternUnits,
            patternContentUnits = props.patternContentUnits,
            children = props.children,
            viewBox = props.viewBox,
            preserveAspectRatio = props.preserveAspectRatio;
        var matrix = (0, _extractTransform.default)(patternTransform || transform || props);
        return _react.default.createElement(RNSVGPattern, (0, _extends2.default)({
          ref: this.refMethod,
          name: id,
          x: x,
          y: y,
          width: width,
          height: height,
          matrix: matrix,
          patternTransform: matrix,
          patternUnits: _units.default[patternUnits] || 0,
          patternContentUnits: patternContentUnits ? _units.default[patternContentUnits] : 1
        }, (0, _extractViewBox.default)({
          viewBox: viewBox,
          preserveAspectRatio: preserveAspectRatio
        })), children);
      }
    }]);
    return Pattern;
  }(_Shape2.default);

  exports.default = Pattern;
  Pattern.displayName = 'Pattern';
  Pattern.defaultProps = {
    x: '0%',
    y: '0%',
    width: '100%',
    height: '100%'
  };
  var RNSVGPattern = (0, _reactNative.requireNativeComponent)('RNSVGPattern');
},14929,[14305,14344,14320,14323,14371,14377,14386,10297,10033,11554,11644,14926,11497]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _extractTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _extractProps = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[12]));

  var _units = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var Mask = function (_Shape) {
    (0, _inherits2.default)(Mask, _Shape);

    function Mask() {
      (0, _classCallCheck2.default)(this, Mask);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Mask).apply(this, arguments));
    }

    (0, _createClass2.default)(Mask, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var maskTransform = props.maskTransform,
            transform = props.transform,
            x = props.x,
            y = props.y,
            width = props.width,
            height = props.height,
            maskUnits = props.maskUnits,
            maskContentUnits = props.maskContentUnits,
            children = props.children;
        return _react.default.createElement(RNSVGMask, (0, _extends2.default)({
          ref: this.refMethod
        }, (0, _extractProps.default)((0, _objectSpread2.default)({}, (0, _extractProps.propsAndStyles)(props), {
          x: null,
          y: null
        }), this), {
          x: x,
          y: y,
          width: width,
          height: height,
          maskTransform: (0, _extractTransform.default)(maskTransform || transform || props),
          maskUnits: maskUnits !== undefined ? _units.default[maskUnits] : 0,
          maskContentUnits: maskContentUnits !== undefined ? _units.default[maskContentUnits] : 1
        }), children);
      }
    }]);
    return Mask;
  }(_Shape2.default);

  exports.default = Mask;
  Mask.displayName = 'Mask';
  Mask.defaultProps = {
    x: '0%',
    y: '0%',
    width: '100%',
    height: '100%'
  };
  var RNSVGMask = (0, _reactNative.requireNativeComponent)('RNSVGMask');
},14932,[14308,14305,14344,14314,14320,14323,14371,14377,14386,10297,10033,11554,11509,14926,11497]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object.keys(descriptor).forEach(function (key) {
      desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
      desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
      return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== undefined) {
      desc.value = desc.initializer ? desc.initializer.call(context) : undefined;
      desc.initializer = undefined;
    }

    if (desc.initializer === undefined) {
      Object.defineProperty(target, property, desc);
      desc = null;
    }

    return desc;
  }

  module.exports = _applyDecoratedDescriptor;
},22393,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayWithHoles = _$$_REQUIRE(_dependencyMap[0]);

  var iterableToArray = _$$_REQUIRE(_dependencyMap[1]);

  var nonIterableRest = _$$_REQUIRE(_dependencyMap[2]);

  function _toArray(arr) {
    return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();
  }

  module.exports = _toArray;
},22396,[14350,14365,14356]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   */
  'use strict';

  var base64 = _$$_REQUIRE(_dependencyMap[0]);

  var ieee754 = _$$_REQUIRE(_dependencyMap[1]);

  exports.Buffer = Buffer;
  exports.SlowBuffer = SlowBuffer;
  exports.INSPECT_MAX_BYTES = 50;
  var K_MAX_LENGTH = 0x7fffffff;
  exports.kMaxLength = K_MAX_LENGTH;
  Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();

  if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && true) {}

  function typedArraySupport() {
    try {
      var arr = new Uint8Array(1);
      arr.__proto__ = {
        __proto__: Uint8Array.prototype,
        foo: function foo() {
          return 42;
        }
      };
      return arr.foo() === 42;
    } catch (e) {
      return false;
    }
  }

  Object.defineProperty(Buffer.prototype, 'parent', {
    enumerable: true,
    get: function get() {
      if (!Buffer.isBuffer(this)) return undefined;
      return this.buffer;
    }
  });
  Object.defineProperty(Buffer.prototype, 'offset', {
    enumerable: true,
    get: function get() {
      if (!Buffer.isBuffer(this)) return undefined;
      return this.byteOffset;
    }
  });

  function createBuffer(length) {
    if (length > K_MAX_LENGTH) {
      throw new RangeError('The value "' + length + '" is invalid for option "size"');
    }

    var buf = new Uint8Array(length);
    buf.__proto__ = Buffer.prototype;
    return buf;
  }

  function Buffer(arg, encodingOrOffset, length) {
    if (typeof arg === 'number') {
      if (typeof encodingOrOffset === 'string') {
        throw new TypeError('The "string" argument must be of type string. Received type number');
      }

      return allocUnsafe(arg);
    }

    return from(arg, encodingOrOffset, length);
  }

  if (typeof Symbol !== 'undefined' && (typeof Symbol === "function" ? Symbol.species : "@@species") != null && Buffer[typeof Symbol === "function" ? Symbol.species : "@@species"] === Buffer) {
    Object.defineProperty(Buffer, typeof Symbol === "function" ? Symbol.species : "@@species", {
      value: null,
      configurable: true,
      enumerable: false,
      writable: false
    });
  }

  Buffer.poolSize = 8192;

  function from(value, encodingOrOffset, length) {
    if (typeof value === 'string') {
      return fromString(value, encodingOrOffset);
    }

    if (ArrayBuffer.isView(value)) {
      return fromArrayLike(value);
    }

    if (value == null) {
      throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
    }

    if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {
      return fromArrayBuffer(value, encodingOrOffset, length);
    }

    if (typeof value === 'number') {
      throw new TypeError('The "value" argument must not be of type number. Received type number');
    }

    var valueOf = value.valueOf && value.valueOf();

    if (valueOf != null && valueOf !== value) {
      return Buffer.from(valueOf, encodingOrOffset, length);
    }

    var b = fromObject(value);
    if (b) return b;

    if (typeof Symbol !== 'undefined' && (typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive") != null && typeof value[typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive"] === 'function') {
      return Buffer.from(value[typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive"]('string'), encodingOrOffset, length);
    }

    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
  }

  Buffer.from = function (value, encodingOrOffset, length) {
    return from(value, encodingOrOffset, length);
  };

  Buffer.prototype.__proto__ = Uint8Array.prototype;
  Buffer.__proto__ = Uint8Array;

  function assertSize(size) {
    if (typeof size !== 'number') {
      throw new TypeError('"size" argument must be of type number');
    } else if (size < 0) {
      throw new RangeError('The value "' + size + '" is invalid for option "size"');
    }
  }

  function alloc(size, fill, encoding) {
    assertSize(size);

    if (size <= 0) {
      return createBuffer(size);
    }

    if (fill !== undefined) {
      return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);
    }

    return createBuffer(size);
  }

  Buffer.alloc = function (size, fill, encoding) {
    return alloc(size, fill, encoding);
  };

  function allocUnsafe(size) {
    assertSize(size);
    return createBuffer(size < 0 ? 0 : checked(size) | 0);
  }

  Buffer.allocUnsafe = function (size) {
    return allocUnsafe(size);
  };

  Buffer.allocUnsafeSlow = function (size) {
    return allocUnsafe(size);
  };

  function fromString(string, encoding) {
    if (typeof encoding !== 'string' || encoding === '') {
      encoding = 'utf8';
    }

    if (!Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding);
    }

    var length = byteLength(string, encoding) | 0;
    var buf = createBuffer(length);
    var actual = buf.write(string, encoding);

    if (actual !== length) {
      buf = buf.slice(0, actual);
    }

    return buf;
  }

  function fromArrayLike(array) {
    var length = array.length < 0 ? 0 : checked(array.length) | 0;
    var buf = createBuffer(length);

    for (var i = 0; i < length; i += 1) {
      buf[i] = array[i] & 255;
    }

    return buf;
  }

  function fromArrayBuffer(array, byteOffset, length) {
    if (byteOffset < 0 || array.byteLength < byteOffset) {
      throw new RangeError('"offset" is outside of buffer bounds');
    }

    if (array.byteLength < byteOffset + (length || 0)) {
      throw new RangeError('"length" is outside of buffer bounds');
    }

    var buf;

    if (byteOffset === undefined && length === undefined) {
      buf = new Uint8Array(array);
    } else if (length === undefined) {
      buf = new Uint8Array(array, byteOffset);
    } else {
      buf = new Uint8Array(array, byteOffset, length);
    }

    buf.__proto__ = Buffer.prototype;
    return buf;
  }

  function fromObject(obj) {
    if (Buffer.isBuffer(obj)) {
      var len = checked(obj.length) | 0;
      var buf = createBuffer(len);

      if (buf.length === 0) {
        return buf;
      }

      obj.copy(buf, 0, 0, len);
      return buf;
    }

    if (obj.length !== undefined) {
      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
        return createBuffer(0);
      }

      return fromArrayLike(obj);
    }

    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
      return fromArrayLike(obj.data);
    }
  }

  function checked(length) {
    if (length >= K_MAX_LENGTH) {
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + ' bytes');
    }

    return length | 0;
  }

  function SlowBuffer(length) {
    if (+length != length) {
      length = 0;
    }

    return Buffer.alloc(+length);
  }

  Buffer.isBuffer = function isBuffer(b) {
    return b != null && b._isBuffer === true && b !== Buffer.prototype;
  };

  Buffer.compare = function compare(a, b) {
    if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);
    if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);

    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
      throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
    }

    if (a === b) return 0;
    var x = a.length;
    var y = b.length;

    for (var i = 0, len = Math.min(x, y); i < len; ++i) {
      if (a[i] !== b[i]) {
        x = a[i];
        y = b[i];
        break;
      }
    }

    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
  };

  Buffer.isEncoding = function isEncoding(encoding) {
    switch (String(encoding).toLowerCase()) {
      case 'hex':
      case 'utf8':
      case 'utf-8':
      case 'ascii':
      case 'latin1':
      case 'binary':
      case 'base64':
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return true;

      default:
        return false;
    }
  };

  Buffer.concat = function concat(list, length) {
    if (!Array.isArray(list)) {
      throw new TypeError('"list" argument must be an Array of Buffers');
    }

    if (list.length === 0) {
      return Buffer.alloc(0);
    }

    var i;

    if (length === undefined) {
      length = 0;

      for (i = 0; i < list.length; ++i) {
        length += list[i].length;
      }
    }

    var buffer = Buffer.allocUnsafe(length);
    var pos = 0;

    for (i = 0; i < list.length; ++i) {
      var buf = list[i];

      if (isInstance(buf, Uint8Array)) {
        buf = Buffer.from(buf);
      }

      if (!Buffer.isBuffer(buf)) {
        throw new TypeError('"list" argument must be an Array of Buffers');
      }

      buf.copy(buffer, pos);
      pos += buf.length;
    }

    return buffer;
  };

  function byteLength(string, encoding) {
    if (Buffer.isBuffer(string)) {
      return string.length;
    }

    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
      return string.byteLength;
    }

    if (typeof string !== 'string') {
      throw new TypeError("The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type " + typeof string);
    }

    var len = string.length;
    var mustMatch = arguments.length > 2 && arguments[2] === true;
    if (!mustMatch && len === 0) return 0;
    var loweredCase = false;

    for (;;) {
      switch (encoding) {
        case 'ascii':
        case 'latin1':
        case 'binary':
          return len;

        case 'utf8':
        case 'utf-8':
          return utf8ToBytes(string).length;

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return len * 2;

        case 'hex':
          return len >>> 1;

        case 'base64':
          return base64ToBytes(string).length;

        default:
          if (loweredCase) {
            return mustMatch ? -1 : utf8ToBytes(string).length;
          }

          encoding = ('' + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  }

  Buffer.byteLength = byteLength;

  function slowToString(encoding, start, end) {
    var loweredCase = false;

    if (start === undefined || start < 0) {
      start = 0;
    }

    if (start > this.length) {
      return '';
    }

    if (end === undefined || end > this.length) {
      end = this.length;
    }

    if (end <= 0) {
      return '';
    }

    end >>>= 0;
    start >>>= 0;

    if (end <= start) {
      return '';
    }

    if (!encoding) encoding = 'utf8';

    while (true) {
      switch (encoding) {
        case 'hex':
          return hexSlice(this, start, end);

        case 'utf8':
        case 'utf-8':
          return utf8Slice(this, start, end);

        case 'ascii':
          return asciiSlice(this, start, end);

        case 'latin1':
        case 'binary':
          return latin1Slice(this, start, end);

        case 'base64':
          return base64Slice(this, start, end);

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return utf16leSlice(this, start, end);

        default:
          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
          encoding = (encoding + '').toLowerCase();
          loweredCase = true;
      }
    }
  }

  Buffer.prototype._isBuffer = true;

  function swap(b, n, m) {
    var i = b[n];
    b[n] = b[m];
    b[m] = i;
  }

  Buffer.prototype.swap16 = function swap16() {
    var len = this.length;

    if (len % 2 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 16-bits');
    }

    for (var i = 0; i < len; i += 2) {
      swap(this, i, i + 1);
    }

    return this;
  };

  Buffer.prototype.swap32 = function swap32() {
    var len = this.length;

    if (len % 4 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 32-bits');
    }

    for (var i = 0; i < len; i += 4) {
      swap(this, i, i + 3);
      swap(this, i + 1, i + 2);
    }

    return this;
  };

  Buffer.prototype.swap64 = function swap64() {
    var len = this.length;

    if (len % 8 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 64-bits');
    }

    for (var i = 0; i < len; i += 8) {
      swap(this, i, i + 7);
      swap(this, i + 1, i + 6);
      swap(this, i + 2, i + 5);
      swap(this, i + 3, i + 4);
    }

    return this;
  };

  Buffer.prototype.toString = function toString() {
    var length = this.length;
    if (length === 0) return '';
    if (arguments.length === 0) return utf8Slice(this, 0, length);
    return slowToString.apply(this, arguments);
  };

  Buffer.prototype.toLocaleString = Buffer.prototype.toString;

  Buffer.prototype.equals = function equals(b) {
    if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');
    if (this === b) return true;
    return Buffer.compare(this, b) === 0;
  };

  Buffer.prototype.inspect = function inspect() {
    var str = '';
    var max = exports.INSPECT_MAX_BYTES;
    str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();
    if (this.length > max) str += ' ... ';
    return '<Buffer ' + str + '>';
  };

  Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
    if (isInstance(target, Uint8Array)) {
      target = Buffer.from(target, target.offset, target.byteLength);
    }

    if (!Buffer.isBuffer(target)) {
      throw new TypeError("The \"target\" argument must be one of type Buffer or Uint8Array. Received type " + typeof target);
    }

    if (start === undefined) {
      start = 0;
    }

    if (end === undefined) {
      end = target ? target.length : 0;
    }

    if (thisStart === undefined) {
      thisStart = 0;
    }

    if (thisEnd === undefined) {
      thisEnd = this.length;
    }

    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
      throw new RangeError('out of range index');
    }

    if (thisStart >= thisEnd && start >= end) {
      return 0;
    }

    if (thisStart >= thisEnd) {
      return -1;
    }

    if (start >= end) {
      return 1;
    }

    start >>>= 0;
    end >>>= 0;
    thisStart >>>= 0;
    thisEnd >>>= 0;
    if (this === target) return 0;
    var x = thisEnd - thisStart;
    var y = end - start;
    var len = Math.min(x, y);
    var thisCopy = this.slice(thisStart, thisEnd);
    var targetCopy = target.slice(start, end);

    for (var i = 0; i < len; ++i) {
      if (thisCopy[i] !== targetCopy[i]) {
        x = thisCopy[i];
        y = targetCopy[i];
        break;
      }
    }

    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
  };

  function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
    if (buffer.length === 0) return -1;

    if (typeof byteOffset === 'string') {
      encoding = byteOffset;
      byteOffset = 0;
    } else if (byteOffset > 0x7fffffff) {
      byteOffset = 0x7fffffff;
    } else if (byteOffset < -2147483648) {
      byteOffset = -2147483648;
    }

    byteOffset = +byteOffset;

    if (numberIsNaN(byteOffset)) {
      byteOffset = dir ? 0 : buffer.length - 1;
    }

    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;

    if (byteOffset >= buffer.length) {
      if (dir) return -1;else byteOffset = buffer.length - 1;
    } else if (byteOffset < 0) {
      if (dir) byteOffset = 0;else return -1;
    }

    if (typeof val === 'string') {
      val = Buffer.from(val, encoding);
    }

    if (Buffer.isBuffer(val)) {
      if (val.length === 0) {
        return -1;
      }

      return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
    } else if (typeof val === 'number') {
      val = val & 0xFF;

      if (typeof Uint8Array.prototype.indexOf === 'function') {
        if (dir) {
          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
        } else {
          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
        }
      }

      return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
    }

    throw new TypeError('val must be string, number or Buffer');
  }

  function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
    var indexSize = 1;
    var arrLength = arr.length;
    var valLength = val.length;

    if (encoding !== undefined) {
      encoding = String(encoding).toLowerCase();

      if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
        if (arr.length < 2 || val.length < 2) {
          return -1;
        }

        indexSize = 2;
        arrLength /= 2;
        valLength /= 2;
        byteOffset /= 2;
      }
    }

    function read(buf, i) {
      if (indexSize === 1) {
        return buf[i];
      } else {
        return buf.readUInt16BE(i * indexSize);
      }
    }

    var i;

    if (dir) {
      var foundIndex = -1;

      for (i = byteOffset; i < arrLength; i++) {
        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
          if (foundIndex === -1) foundIndex = i;
          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
        } else {
          if (foundIndex !== -1) i -= i - foundIndex;
          foundIndex = -1;
        }
      }
    } else {
      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;

      for (i = byteOffset; i >= 0; i--) {
        var found = true;

        for (var j = 0; j < valLength; j++) {
          if (read(arr, i + j) !== read(val, j)) {
            found = false;
            break;
          }
        }

        if (found) return i;
      }
    }

    return -1;
  }

  Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
    return this.indexOf(val, byteOffset, encoding) !== -1;
  };

  Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
  };

  Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
  };

  function hexWrite(buf, string, offset, length) {
    offset = Number(offset) || 0;
    var remaining = buf.length - offset;

    if (!length) {
      length = remaining;
    } else {
      length = Number(length);

      if (length > remaining) {
        length = remaining;
      }
    }

    var strLen = string.length;

    if (length > strLen / 2) {
      length = strLen / 2;
    }

    for (var i = 0; i < length; ++i) {
      var parsed = parseInt(string.substr(i * 2, 2), 16);
      if (numberIsNaN(parsed)) return i;
      buf[offset + i] = parsed;
    }

    return i;
  }

  function utf8Write(buf, string, offset, length) {
    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
  }

  function asciiWrite(buf, string, offset, length) {
    return blitBuffer(asciiToBytes(string), buf, offset, length);
  }

  function latin1Write(buf, string, offset, length) {
    return asciiWrite(buf, string, offset, length);
  }

  function base64Write(buf, string, offset, length) {
    return blitBuffer(base64ToBytes(string), buf, offset, length);
  }

  function ucs2Write(buf, string, offset, length) {
    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
  }

  Buffer.prototype.write = function write(string, offset, length, encoding) {
    if (offset === undefined) {
      encoding = 'utf8';
      length = this.length;
      offset = 0;
    } else if (length === undefined && typeof offset === 'string') {
      encoding = offset;
      length = this.length;
      offset = 0;
    } else if (isFinite(offset)) {
      offset = offset >>> 0;

      if (isFinite(length)) {
        length = length >>> 0;
        if (encoding === undefined) encoding = 'utf8';
      } else {
        encoding = length;
        length = undefined;
      }
    } else {
      throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
    }

    var remaining = this.length - offset;
    if (length === undefined || length > remaining) length = remaining;

    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
      throw new RangeError('Attempt to write outside buffer bounds');
    }

    if (!encoding) encoding = 'utf8';
    var loweredCase = false;

    for (;;) {
      switch (encoding) {
        case 'hex':
          return hexWrite(this, string, offset, length);

        case 'utf8':
        case 'utf-8':
          return utf8Write(this, string, offset, length);

        case 'ascii':
          return asciiWrite(this, string, offset, length);

        case 'latin1':
        case 'binary':
          return latin1Write(this, string, offset, length);

        case 'base64':
          return base64Write(this, string, offset, length);

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return ucs2Write(this, string, offset, length);

        default:
          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
          encoding = ('' + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  };

  Buffer.prototype.toJSON = function toJSON() {
    return {
      type: 'Buffer',
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };

  function base64Slice(buf, start, end) {
    if (start === 0 && end === buf.length) {
      return base64.fromByteArray(buf);
    } else {
      return base64.fromByteArray(buf.slice(start, end));
    }
  }

  function utf8Slice(buf, start, end) {
    end = Math.min(buf.length, end);
    var res = [];
    var i = start;

    while (i < end) {
      var firstByte = buf[i];
      var codePoint = null;
      var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;

      if (i + bytesPerSequence <= end) {
        var secondByte, thirdByte, fourthByte, tempCodePoint;

        switch (bytesPerSequence) {
          case 1:
            if (firstByte < 0x80) {
              codePoint = firstByte;
            }

            break;

          case 2:
            secondByte = buf[i + 1];

            if ((secondByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;

              if (tempCodePoint > 0x7F) {
                codePoint = tempCodePoint;
              }
            }

            break;

          case 3:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];

            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;

              if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
                codePoint = tempCodePoint;
              }
            }

            break;

          case 4:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];
            fourthByte = buf[i + 3];

            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;

              if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
                codePoint = tempCodePoint;
              }
            }

        }
      }

      if (codePoint === null) {
        codePoint = 0xFFFD;
        bytesPerSequence = 1;
      } else if (codePoint > 0xFFFF) {
        codePoint -= 0x10000;
        res.push(codePoint >>> 10 & 0x3FF | 0xD800);
        codePoint = 0xDC00 | codePoint & 0x3FF;
      }

      res.push(codePoint);
      i += bytesPerSequence;
    }

    return decodeCodePointsArray(res);
  }

  var MAX_ARGUMENTS_LENGTH = 0x1000;

  function decodeCodePointsArray(codePoints) {
    var len = codePoints.length;

    if (len <= MAX_ARGUMENTS_LENGTH) {
      return String.fromCharCode.apply(String, codePoints);
    }

    var res = '';
    var i = 0;

    while (i < len) {
      res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
    }

    return res;
  }

  function asciiSlice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);

    for (var i = start; i < end; ++i) {
      ret += String.fromCharCode(buf[i] & 0x7F);
    }

    return ret;
  }

  function latin1Slice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);

    for (var i = start; i < end; ++i) {
      ret += String.fromCharCode(buf[i]);
    }

    return ret;
  }

  function hexSlice(buf, start, end) {
    var len = buf.length;
    if (!start || start < 0) start = 0;
    if (!end || end < 0 || end > len) end = len;
    var out = '';

    for (var i = start; i < end; ++i) {
      out += toHex(buf[i]);
    }

    return out;
  }

  function utf16leSlice(buf, start, end) {
    var bytes = buf.slice(start, end);
    var res = '';

    for (var i = 0; i < bytes.length; i += 2) {
      res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
    }

    return res;
  }

  Buffer.prototype.slice = function slice(start, end) {
    var len = this.length;
    start = ~~start;
    end = end === undefined ? len : ~~end;

    if (start < 0) {
      start += len;
      if (start < 0) start = 0;
    } else if (start > len) {
      start = len;
    }

    if (end < 0) {
      end += len;
      if (end < 0) end = 0;
    } else if (end > len) {
      end = len;
    }

    if (end < start) end = start;
    var newBuf = this.subarray(start, end);
    newBuf.__proto__ = Buffer.prototype;
    return newBuf;
  };

  function checkOffset(offset, ext, length) {
    if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');
    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');
  }

  Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;

    while (++i < byteLength && (mul *= 0x100)) {
      val += this[offset + i] * mul;
    }

    return val;
  };

  Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;

    if (!noAssert) {
      checkOffset(offset, byteLength, this.length);
    }

    var val = this[offset + --byteLength];
    var mul = 1;

    while (byteLength > 0 && (mul *= 0x100)) {
      val += this[offset + --byteLength] * mul;
    }

    return val;
  };

  Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 1, this.length);
    return this[offset];
  };

  Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] | this[offset + 1] << 8;
  };

  Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] << 8 | this[offset + 1];
  };

  Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;
  };

  Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
  };

  Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;

    while (++i < byteLength && (mul *= 0x100)) {
      val += this[offset + i] * mul;
    }

    mul *= 0x80;
    if (val >= mul) val -= Math.pow(2, 8 * byteLength);
    return val;
  };

  Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    var i = byteLength;
    var mul = 1;
    var val = this[offset + --i];

    while (i > 0 && (mul *= 0x100)) {
      val += this[offset + --i] * mul;
    }

    mul *= 0x80;
    if (val >= mul) val -= Math.pow(2, 8 * byteLength);
    return val;
  };

  Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 1, this.length);
    if (!(this[offset] & 0x80)) return this[offset];
    return (0xff - this[offset] + 1) * -1;
  };

  Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    var val = this[offset] | this[offset + 1] << 8;
    return val & 0x8000 ? val | 0xFFFF0000 : val;
  };

  Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    var val = this[offset + 1] | this[offset] << 8;
    return val & 0x8000 ? val | 0xFFFF0000 : val;
  };

  Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
  };

  Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
  };

  Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, true, 23, 4);
  };

  Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, false, 23, 4);
  };

  Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, true, 52, 8);
  };

  Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, false, 52, 8);
  };

  function checkInt(buf, value, offset, ext, max, min) {
    if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
    if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
  }

  Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;

    if (!noAssert) {
      var maxBytes = Math.pow(2, 8 * byteLength) - 1;
      checkInt(this, value, offset, byteLength, maxBytes, 0);
    }

    var mul = 1;
    var i = 0;
    this[offset] = value & 0xFF;

    while (++i < byteLength && (mul *= 0x100)) {
      this[offset + i] = value / mul & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;

    if (!noAssert) {
      var maxBytes = Math.pow(2, 8 * byteLength) - 1;
      checkInt(this, value, offset, byteLength, maxBytes, 0);
    }

    var i = byteLength - 1;
    var mul = 1;
    this[offset + i] = value & 0xFF;

    while (--i >= 0 && (mul *= 0x100)) {
      this[offset + i] = value / mul & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
    this[offset] = value & 0xff;
    return offset + 1;
  };

  Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    return offset + 2;
  };

  Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
    return offset + 2;
  };

  Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
    this[offset + 3] = value >>> 24;
    this[offset + 2] = value >>> 16;
    this[offset + 1] = value >>> 8;
    this[offset] = value & 0xff;
    return offset + 4;
  };

  Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
    return offset + 4;
  };

  Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      var limit = Math.pow(2, 8 * byteLength - 1);
      checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }

    var i = 0;
    var mul = 1;
    var sub = 0;
    this[offset] = value & 0xFF;

    while (++i < byteLength && (mul *= 0x100)) {
      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
        sub = 1;
      }

      this[offset + i] = (value / mul >> 0) - sub & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      var limit = Math.pow(2, 8 * byteLength - 1);
      checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }

    var i = byteLength - 1;
    var mul = 1;
    var sub = 0;
    this[offset + i] = value & 0xFF;

    while (--i >= 0 && (mul *= 0x100)) {
      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
        sub = 1;
      }

      this[offset + i] = (value / mul >> 0) - sub & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -128);
    if (value < 0) value = 0xff + value + 1;
    this[offset] = value & 0xff;
    return offset + 1;
  };

  Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -32768);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    return offset + 2;
  };

  Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -32768);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
    return offset + 2;
  };

  Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    this[offset + 2] = value >>> 16;
    this[offset + 3] = value >>> 24;
    return offset + 4;
  };

  Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);
    if (value < 0) value = 0xffffffff + value + 1;
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
    return offset + 4;
  };

  function checkIEEE754(buf, value, offset, ext, max, min) {
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
    if (offset < 0) throw new RangeError('Index out of range');
  }

  function writeFloat(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
    }

    ieee754.write(buf, value, offset, littleEndian, 23, 4);
    return offset + 4;
  }

  Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
    return writeFloat(this, value, offset, true, noAssert);
  };

  Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
    return writeFloat(this, value, offset, false, noAssert);
  };

  function writeDouble(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157e+308);
    }

    ieee754.write(buf, value, offset, littleEndian, 52, 8);
    return offset + 8;
  }

  Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
    return writeDouble(this, value, offset, true, noAssert);
  };

  Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
    return writeDouble(this, value, offset, false, noAssert);
  };

  Buffer.prototype.copy = function copy(target, targetStart, start, end) {
    if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');
    if (!start) start = 0;
    if (!end && end !== 0) end = this.length;
    if (targetStart >= target.length) targetStart = target.length;
    if (!targetStart) targetStart = 0;
    if (end > 0 && end < start) end = start;
    if (end === start) return 0;
    if (target.length === 0 || this.length === 0) return 0;

    if (targetStart < 0) {
      throw new RangeError('targetStart out of bounds');
    }

    if (start < 0 || start >= this.length) throw new RangeError('Index out of range');
    if (end < 0) throw new RangeError('sourceEnd out of bounds');
    if (end > this.length) end = this.length;

    if (target.length - targetStart < end - start) {
      end = target.length - targetStart + start;
    }

    var len = end - start;

    if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
      this.copyWithin(targetStart, start, end);
    } else if (this === target && start < targetStart && targetStart < end) {
      for (var i = len - 1; i >= 0; --i) {
        target[i + targetStart] = this[i + start];
      }
    } else {
      Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);
    }

    return len;
  };

  Buffer.prototype.fill = function fill(val, start, end, encoding) {
    if (typeof val === 'string') {
      if (typeof start === 'string') {
        encoding = start;
        start = 0;
        end = this.length;
      } else if (typeof end === 'string') {
        encoding = end;
        end = this.length;
      }

      if (encoding !== undefined && typeof encoding !== 'string') {
        throw new TypeError('encoding must be a string');
      }

      if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
        throw new TypeError('Unknown encoding: ' + encoding);
      }

      if (val.length === 1) {
        var code = val.charCodeAt(0);

        if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {
          val = code;
        }
      }
    } else if (typeof val === 'number') {
      val = val & 255;
    }

    if (start < 0 || this.length < start || this.length < end) {
      throw new RangeError('Out of range index');
    }

    if (end <= start) {
      return this;
    }

    start = start >>> 0;
    end = end === undefined ? this.length : end >>> 0;
    if (!val) val = 0;
    var i;

    if (typeof val === 'number') {
      for (i = start; i < end; ++i) {
        this[i] = val;
      }
    } else {
      var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);
      var len = bytes.length;

      if (len === 0) {
        throw new TypeError('The value "' + val + '" is invalid for argument "value"');
      }

      for (i = 0; i < end - start; ++i) {
        this[i + start] = bytes[i % len];
      }
    }

    return this;
  };

  var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;

  function base64clean(str) {
    str = str.split('=')[0];
    str = str.trim().replace(INVALID_BASE64_RE, '');
    if (str.length < 2) return '';

    while (str.length % 4 !== 0) {
      str = str + '=';
    }

    return str;
  }

  function toHex(n) {
    if (n < 16) return '0' + n.toString(16);
    return n.toString(16);
  }

  function utf8ToBytes(string, units) {
    units = units || Infinity;
    var codePoint;
    var length = string.length;
    var leadSurrogate = null;
    var bytes = [];

    for (var i = 0; i < length; ++i) {
      codePoint = string.charCodeAt(i);

      if (codePoint > 0xD7FF && codePoint < 0xE000) {
        if (!leadSurrogate) {
          if (codePoint > 0xDBFF) {
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
            continue;
          } else if (i + 1 === length) {
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
            continue;
          }

          leadSurrogate = codePoint;
          continue;
        }

        if (codePoint < 0xDC00) {
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
          leadSurrogate = codePoint;
          continue;
        }

        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
      } else if (leadSurrogate) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
      }

      leadSurrogate = null;

      if (codePoint < 0x80) {
        if ((units -= 1) < 0) break;
        bytes.push(codePoint);
      } else if (codePoint < 0x800) {
        if ((units -= 2) < 0) break;
        bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
      } else if (codePoint < 0x10000) {
        if ((units -= 3) < 0) break;
        bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
      } else if (codePoint < 0x110000) {
        if ((units -= 4) < 0) break;
        bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
      } else {
        throw new Error('Invalid code point');
      }
    }

    return bytes;
  }

  function asciiToBytes(str) {
    var byteArray = [];

    for (var i = 0; i < str.length; ++i) {
      byteArray.push(str.charCodeAt(i) & 0xFF);
    }

    return byteArray;
  }

  function utf16leToBytes(str, units) {
    var c, hi, lo;
    var byteArray = [];

    for (var i = 0; i < str.length; ++i) {
      if ((units -= 2) < 0) break;
      c = str.charCodeAt(i);
      hi = c >> 8;
      lo = c % 256;
      byteArray.push(lo);
      byteArray.push(hi);
    }

    return byteArray;
  }

  function base64ToBytes(str) {
    return base64.toByteArray(base64clean(str));
  }

  function blitBuffer(src, dst, offset, length) {
    for (var i = 0; i < length; ++i) {
      if (i + offset >= dst.length || i >= src.length) break;
      dst[i + offset] = src[i];
    }

    return i;
  }

  function isInstance(obj, type) {
    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
  }

  function numberIsNaN(obj) {
    return obj !== obj;
  }
},22399,[10207,22402]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  exports.read = function (buffer, offset, isLE, mLen, nBytes) {
    var e, m;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var nBits = -7;
    var i = isLE ? nBytes - 1 : 0;
    var d = isLE ? -1 : 1;
    var s = buffer[offset + i];
    i += d;
    e = s & (1 << -nBits) - 1;
    s >>= -nBits;
    nBits += eLen;

    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

    m = e & (1 << -nBits) - 1;
    e >>= -nBits;
    nBits += mLen;

    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

    if (e === 0) {
      e = 1 - eBias;
    } else if (e === eMax) {
      return m ? NaN : (s ? -1 : 1) * Infinity;
    } else {
      m = m + Math.pow(2, mLen);
      e = e - eBias;
    }

    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
  };

  exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
    var e, m, c;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
    var i = isLE ? 0 : nBytes - 1;
    var d = isLE ? 1 : -1;
    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
    value = Math.abs(value);

    if (isNaN(value) || value === Infinity) {
      m = isNaN(value) ? 1 : 0;
      e = eMax;
    } else {
      e = Math.floor(Math.log(value) / Math.LN2);

      if (value * (c = Math.pow(2, -e)) < 1) {
        e--;
        c *= 2;
      }

      if (e + eBias >= 1) {
        value += rt / c;
      } else {
        value += rt * Math.pow(2, 1 - eBias);
      }

      if (value * c >= 2) {
        e++;
        c /= 2;
      }

      if (e + eBias >= eMax) {
        m = 0;
        e = eMax;
      } else if (e + eBias >= 1) {
        m = (value * c - 1) * Math.pow(2, mLen);
        e = e + eBias;
      } else {
        m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
        e = 0;
      }
    }

    for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

    e = e << mLen | m;
    eLen += mLen;

    for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

    buffer[offset + i - d] |= s * 128;
  };
},22402,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, '__esModule', {
    value: true
  });
  var UNKNOWN_FUNCTION = '<unknown>';

  function parse(stackString) {
    var lines = stackString.split('\n');
    return lines.reduce(function (stack, line) {
      var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);

      if (parseResult) {
        stack.push(parseResult);
      }

      return stack;
    }, []);
  }

  var chromeRe = /^\s*at (.*?) ?\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\/|[a-z]:\\|\\\\).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i;
  var chromeEvalRe = /\((\S*)(?::(\d+))(?::(\d+))\)/;

  function parseChrome(line) {
    var parts = chromeRe.exec(line);

    if (!parts) {
      return null;
    }

    var isNative = parts[2] && parts[2].indexOf('native') === 0;
    var isEval = parts[2] && parts[2].indexOf('eval') === 0;
    var submatch = chromeEvalRe.exec(parts[2]);

    if (isEval && submatch != null) {
      parts[2] = submatch[1];
      parts[3] = submatch[2];
      parts[4] = submatch[3];
    }

    return {
      file: !isNative ? parts[2] : null,
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: isNative ? [parts[2]] : [],
      lineNumber: parts[3] ? +parts[3] : null,
      column: parts[4] ? +parts[4] : null
    };
  }

  var winjsRe = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i;

  function parseWinjs(line) {
    var parts = winjsRe.exec(line);

    if (!parts) {
      return null;
    }

    return {
      file: parts[2],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: [],
      lineNumber: +parts[3],
      column: parts[4] ? +parts[4] : null
    };
  }

  var geckoRe = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\[native).*?|[^@]*bundle)(?::(\d+))?(?::(\d+))?\s*$/i;
  var geckoEvalRe = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i;

  function parseGecko(line) {
    var parts = geckoRe.exec(line);

    if (!parts) {
      return null;
    }

    var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;
    var submatch = geckoEvalRe.exec(parts[3]);

    if (isEval && submatch != null) {
      parts[3] = submatch[1];
      parts[4] = submatch[2];
      parts[5] = null;
    }

    return {
      file: parts[3],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: parts[2] ? parts[2].split(',') : [],
      lineNumber: parts[4] ? +parts[4] : null,
      column: parts[5] ? +parts[5] : null
    };
  }

  var javaScriptCoreRe = /^\s*(?:([^@]*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i;

  function parseJSC(line) {
    var parts = javaScriptCoreRe.exec(line);

    if (!parts) {
      return null;
    }

    return {
      file: parts[3],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: [],
      lineNumber: +parts[4],
      column: parts[5] ? +parts[5] : null
    };
  }

  var nodeRe = /^\s*at (?:((?:\[object object\])?[^\\/]+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i;

  function parseNode(line) {
    var parts = nodeRe.exec(line);

    if (!parts) {
      return null;
    }

    return {
      file: parts[2],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: [],
      lineNumber: +parts[3],
      column: parts[4] ? +parts[4] : null
    };
  }

  exports.parse = parse;
},22405,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Radio", {
    enumerable: true,
    get: function get() {
      return _radio.Radio;
    }
  });
  Object.defineProperty(exports, "Switch", {
    enumerable: true,
    get: function get() {
      return _switch.Switch;
    }
  });
  Object.defineProperty(exports, "Checkbox", {
    enumerable: true,
    get: function get() {
      return _checkbox.Checkbox;
    }
  });
  Object.defineProperty(exports, "ImageButton", {
    enumerable: true,
    get: function get() {
      return _imageButton.ImageButton;
    }
  });
  Object.defineProperty(exports, "TitleBar", {
    enumerable: true,
    get: function get() {
      return _titleBar.TitleBar;
    }
  });
  Object.defineProperty(exports, "NavigationBar", {
    enumerable: true,
    get: function get() {
      return _navigationBar.NavigationBar;
    }
  });
  Object.defineProperty(exports, "Card", {
    enumerable: true,
    get: function get() {
      return _card.Card;
    }
  });
  Object.defineProperty(exports, "MHCard", {
    enumerable: true,
    get: function get() {
      return _card.MHCard;
    }
  });
  Object.defineProperty(exports, "ModeCard", {
    enumerable: true,
    get: function get() {
      return _card.ModeCard;
    }
  });
  Object.defineProperty(exports, "IndependentCard", {
    enumerable: true,
    get: function get() {
      return _card.IndependentCard;
    }
  });
  Object.defineProperty(exports, "NormalGear", {
    enumerable: true,
    get: function get() {
      return _gear.NormalGear;
    }
  });
  Object.defineProperty(exports, "SlideGear", {
    enumerable: true,
    get: function get() {
      return _gear.SlideGear;
    }
  });
  Object.defineProperty(exports, "DragGear", {
    enumerable: true,
    get: function get() {
      return _gear.DragGear;
    }
  });
  Object.defineProperty(exports, "Separator", {
    enumerable: true,
    get: function get() {
      return _separator.Separator;
    }
  });
  Object.defineProperty(exports, "StringSpinner", {
    enumerable: true,
    get: function get() {
      return _spinner.StringSpinner;
    }
  });
  Object.defineProperty(exports, "NumberSpinner", {
    enumerable: true,
    get: function get() {
      return _spinner.NumberSpinner;
    }
  });
  Object.defineProperty(exports, "MHDatePicker", {
    enumerable: true,
    get: function get() {
      return _mhDatePicker.MHDatePicker;
    }
  });
  Object.defineProperty(exports, "AbstractDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.AbstractDialog;
    }
  });
  Object.defineProperty(exports, "ActionSheet", {
    enumerable: true,
    get: function get() {
      return _dialog.ActionSheet;
    }
  });
  Object.defineProperty(exports, "ChoiceDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.ChoiceDialog;
    }
  });
  Object.defineProperty(exports, "InputDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.InputDialog;
    }
  });
  Object.defineProperty(exports, "LoadingDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.LoadingDialog;
    }
  });
  Object.defineProperty(exports, "MessageDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.MessageDialog;
    }
  });
  Object.defineProperty(exports, "PinCodeDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.PinCodeDialog;
    }
  });
  Object.defineProperty(exports, "ProgressDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.ProgressDialog;
    }
  });
  Object.defineProperty(exports, "ShareDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.ShareDialog;
    }
  });
  Object.defineProperty(exports, "ListItem", {
    enumerable: true,
    get: function get() {
      return _listItem.ListItem;
    }
  });
  Object.defineProperty(exports, "ChoiceItem", {
    enumerable: true,
    get: function get() {
      return _listItem.ChoiceItem;
    }
  });
  Object.defineProperty(exports, "ListItemWithSlider", {
    enumerable: true,
    get: function get() {
      return _listItem.ListItemWithSlider;
    }
  });
  Object.defineProperty(exports, "ListItemWithSwitch", {
    enumerable: true,
    get: function get() {
      return _listItem.ListItemWithSwitch;
    }
  });
  Object.defineProperty(exports, "FadeSlide", {
    enumerable: true,
    get: function get() {
      return _fadeSlide.FadeSlide;
    }
  });
  Object.defineProperty(exports, "BlankPage", {
    enumerable: true,
    get: function get() {
      return _blankPage.BlankPage;
    }
  });
  Object.defineProperty(exports, "TouchableView", {
    enumerable: true,
    get: function get() {
      return _touchableView.TouchableView;
    }
  });
  Object.defineProperty(exports, "Locale", {
    enumerable: true,
    get: function get() {
      return _locale.Locale;
    }
  });
  Object.defineProperty(exports, "ConfigProvider", {
    enumerable: true,
    get: function get() {
      return _configProvider.ConfigProvider;
    }
  });

  var _radio = _$$_REQUIRE(_dependencyMap[0]);

  var _switch = _$$_REQUIRE(_dependencyMap[1]);

  var _checkbox = _$$_REQUIRE(_dependencyMap[2]);

  var _imageButton = _$$_REQUIRE(_dependencyMap[3]);

  var _titleBar = _$$_REQUIRE(_dependencyMap[4]);

  var _navigationBar = _$$_REQUIRE(_dependencyMap[5]);

  var _card = _$$_REQUIRE(_dependencyMap[6]);

  var _gear = _$$_REQUIRE(_dependencyMap[7]);

  var _separator = _$$_REQUIRE(_dependencyMap[8]);

  var _spinner = _$$_REQUIRE(_dependencyMap[9]);

  var _mhDatePicker = _$$_REQUIRE(_dependencyMap[10]);

  var _dialog = _$$_REQUIRE(_dependencyMap[11]);

  var _listItem = _$$_REQUIRE(_dependencyMap[12]);

  var _fadeSlide = _$$_REQUIRE(_dependencyMap[13]);

  var _blankPage = _$$_REQUIRE(_dependencyMap[14]);

  var _touchableView = _$$_REQUIRE(_dependencyMap[15]);

  var _locale = _$$_REQUIRE(_dependencyMap[16]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[17]);
},22411,[22414,22447,22783,22792,22798,22855,22861,22879,22903,22909,22921,22993,23026,23047,23053,23062,22933,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Radio", {
    enumerable: true,
    get: function get() {
      return _Radio.default;
    }
  });

  var _Radio = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22414,[14305,22417]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var Radio = function (_Component) {
    (0, _inherits2.default)(Radio, _Component);

    function Radio(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Radio);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Radio).call(this, props));
      _this.colorSwitchCircle = new _DynamicColor.default('#ffffff', 'rgba(255,255,255,0.90)');

      _this.changeStatus = function (scaleTo, opacityTo) {
        var _this$state = _this.state,
            scale = _this$state.scale,
            opacity = _this$state.opacity;

        _reactNative.Animated.parallel([_reactNative.Animated.spring(scale, {
          toValue: scaleTo,
          bounciness: 15,
          speed: 9
        }), _reactNative.Animated.timing(opacity, {
          toValue: opacityTo,
          duration: 200
        })]).start();
      };

      _this.changeRadioCheck = function () {
        var _this$props = _this.props,
            changeCheck = _this$props.changeCheck,
            id = _this$props.id;
        changeCheck(id);
      };

      (0, _reportDecorator.referenceReport)('Radio');
      var isChecked = props.isChecked;
      var circleOpacity = isChecked ? 1 : 0;
      var circleScale = isChecked ? 0.5 : 0.4;
      _this.state = {
        scale: new _reactNative.Animated.Value(circleScale),
        opacity: new _reactNative.Animated.Value(circleOpacity)
      };
      return _this;
    }

    (0, _createClass2.default)(Radio, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var isChecked = nextProps.isChecked;

        if (isChecked) {
          this.changeStatus(0.5, 1);
        } else {
          this.changeStatus(0.4, 0);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme, _this$context$theme2;

        var colorScheme = this.context.colorScheme;
        var _this$props2 = this.props,
            smallCircleBg = _this$props2.smallCircleBg,
            isChecked = _this$props2.isChecked,
            bigCircleStyle = _this$props2.bigCircleStyle,
            disabled = _this$props2.disabled,
            accessible = _this$props2.accessible,
            accessibilityRole = _this$props2.accessibilityRole,
            label = _this$props2.label,
            accessibilityLabel = _this$props2.accessibilityLabel,
            accessibilityHint = _this$props2.accessibilityHint,
            accessibilityState = _this$props2.accessibilityState;
        var checkedBigCircleStyle = {
          borderColorChecked: '#32BAC0',
          backgroundColorChecked: '#32BAC0',
          borderColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBtnGrayNor,
          backgroundColor: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorBtnGrayNor
        };

        if (this.props.checkedBigCircleStyle) {
          checkedBigCircleStyle = this.props.checkedBigCircleStyle;
        }

        var _checkedBigCircleStyl = checkedBigCircleStyle,
            borderColorChecked = _checkedBigCircleStyl.borderColorChecked,
            backgroundColorChecked = _checkedBigCircleStyl.backgroundColorChecked,
            borderColor = _checkedBigCircleStyl.borderColor,
            backgroundColor = _checkedBigCircleStyl.backgroundColor;
        var _this$state2 = this.state,
            scale = _this$state2.scale,
            opacity = _this$state2.opacity;
        var colorSmallCircleBg = smallCircleBg || this.colorSwitchCircle.color(colorScheme);
        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          onPress: this.changeRadioCheck,
          disabled: disabled
        }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props, {
          accessibilityRole: accessibilityRole || _accessibilityHelper.AccessibilityRoles.radio,
          accessibilityLabel: accessibilityLabel || label,
          accessibilityState: accessibilityState || {
            disabled: !!disabled,
            checked: !!isChecked
          }
        }))), _react.default.createElement(_reactNative.View, {
          style: [styles.btn, bigCircleStyle, {
            borderColor: isChecked ? borderColorChecked : borderColor,
            backgroundColor: isChecked ? backgroundColorChecked : backgroundColor,
            opacity: disabled ? 0.3 : 1
          }]
        }, _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.smallCircle, bigCircleStyle, {
            borderWidth: 0,
            transform: [{
              scale: scale
            }],
            opacity: opacity,
            backgroundColor: colorSmallCircleBg
          }]
        })));
      }
    }]);
    return Radio;
  }(_react.Component);

  Radio.contextType = _configProvider.ConfigContext;
  Radio.defaultProps = {
    bigCircleStyle: {},
    smallCircleBg: '#FFFFFF',
    isChecked: false,
    changeCheck: function changeCheck() {},
    id: -1,
    disabled: false
  };
  Radio.propTypes = (0, _objectSpread2.default)({
    bigCircleStyle: _propTypes.default.object,
    checkedBigCircleStyle: _propTypes.default.object,
    smallCircleBg: _propTypes.default.string,
    isChecked: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    changeCheck: _propTypes.default.func,
    id: _propTypes.default.number
  }, _accessibilityHelper.AccessibilityPropTypes);

  var styles = _reactNative.StyleSheet.create({
    btn: {
      justifyContent: 'center',
      alignItems: 'center',
      borderStyle: 'solid',
      borderWidth: 0,
      borderRadius: 11,
      width: 22,
      height: 22
    },
    smallCircle: {
      borderRadius: 11,
      width: 22,
      height: 22
    }
  });

  var _default = Radio;
  exports.default = _default;
},22417,[14308,14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22420,22423,22426,22435]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getAccessibilityConfig = getAccessibilityConfig;
  exports.AccessibilityPropTypes = exports.AccessibilityRoles = undefined;

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var isAndroid = _reactNative.Platform.OS === 'android';
  var roles = ['none', 'button', 'link', 'search', 'image', 'keyboardkey', 'text', 'adjustable', 'imagebutton', 'header', 'summary', 'alert', 'checkbox', 'combobox', 'menu', 'menubar', 'menuitem', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'spinbutton', 'switch', 'tab', 'tablist', 'timer', 'toolbar'];
  var AccessibilityRoles = roles.reduce(function (total, role) {
    (0, _extends3.default)(total, (0, _defineProperty2.default)({}, role, role));
    return total;
  }, {});
  exports.AccessibilityRoles = AccessibilityRoles;
  var AccessibilityPropTypes = {
    accessible: _propTypes.default.bool,
    accessibilityRole: _propTypes.default.oneOf(roles),
    accessibilityLabel: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    accessibilityHint: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    accessibilityState: _propTypes.default.shape({
      disabled: _propTypes.default.bool,
      selected: _propTypes.default.bool,
      checked: _propTypes.default.bool,
      busy: _propTypes.default.bool,
      expanded: _propTypes.default.bool
    }),
    accessibilityValue: _propTypes.default.shape({
      min: _propTypes.default.number,
      max: _propTypes.default.number,
      now: _propTypes.default.number,
      text: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])
    })
  };
  exports.AccessibilityPropTypes = AccessibilityPropTypes;
  var elementWithoutText = ['image', 'imagebutton'];

  function getAccessibilityConfig(accessibilityConfig) {
    var accessible = accessibilityConfig.accessible,
        accessibilityRole = accessibilityConfig.accessibilityRole,
        accessibilityLabel = accessibilityConfig.accessibilityLabel,
        accessibilityHint = accessibilityConfig.accessibilityHint,
        accessibilityState = accessibilityConfig.accessibilityState,
        accessibilityValue = accessibilityConfig.accessibilityValue;
    var isAccessible = accessible !== false;
    var accessibility = {
      accessible: isAccessible
    };

    if (!accessibility.accessible) {
      if (isAndroid) {
        accessibility.focusable = false;
      }

      return accessibility;
    }

    accessibility.accessibilityRole = String(accessibilityRole || AccessibilityRoles.none);

    if (accessibilityLabel !== undefined && accessibilityLabel !== null) {
      accessibility.accessibilityLabel = String(accessibilityLabel);
    } else if (elementWithoutText.includes(accessibility.accessibilityRole)) {
      accessibility.accessibilityLabel = ' ';
    }

    if (accessibilityHint !== undefined && accessibilityHint !== null) {
      accessibility.accessibilityHint = String(accessibilityHint);
    }

    if (accessibilityState && typeof accessibilityState === 'object') {
      accessibility.accessibilityState = accessibilityState;
    }

    if (accessibilityValue && typeof accessibilityValue === 'object') {
      accessibility.accessibilityValue = accessibilityValue;
    }

    return accessibility;
  }
},22420,[14305,14317,14344,10033,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.withReport = withReport;
  exports.referenceReport = undefined;

  var _construct2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var MIOTPackage = _reactNative.NativeModules.MIOTPackage;

  function _doReport(moduleName, methodName, success, cost) {
    var errcode = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 200404;

    if (!MIOTPackage) {
      return;
    }

    var reportInfo = {
      module: moduleName,
      method: methodName,
      success: success,
      cost: cost,
      tip: '6.0.0.0.114',
      errcode: errcode
    };
    MIOTPackage.apiReport(reportInfo);
  }

  var referenceReport = function referenceReport(moduleName) {
    var methodName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'constructor';
    {
      _doReport(moduleName, methodName, true, 0);
    }
  };

  exports.referenceReport = referenceReport;

  function withReport(target, moduleName) {
    if (MIOTPackage && typeof Proxy === 'function') {
      return new Proxy(target, {
        construct: function construct(target, args) {
          referenceReport(moduleName);
          return (0, _construct2.default)(target, (0, _toConsumableArray2.default)(args));
        }
      });
    } else {
      return target;
    }
  }
},22423,[14305,14464,14359,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ConfigProvider = exports.ConfigConsumer = exports.ConfigContext = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _themes = _$$_REQUIRE(_dependencyMap[9]);

  var _mihome = _$$_REQUIRE(_dependencyMap[10]);

  var ConfigContext = (0, _react.createContext)({
    language: _mihome.language,
    theme: (0, _themes.getTheme)('default', _mihome.currentDarkMode),
    colorScheme: _mihome.currentDarkMode,
    environment: 'mihome',
    media: {
      screenType: 'phone'
    }
  });
  exports.ConfigContext = ConfigContext;
  var ConfigConsumer = ConfigContext.Consumer;
  exports.ConfigConsumer = ConfigConsumer;

  var ConfigProvider = function (_PureComponent) {
    (0, _inherits2.default)(ConfigProvider, _PureComponent);

    function ConfigProvider() {
      (0, _classCallCheck2.default)(this, ConfigProvider);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ConfigProvider).apply(this, arguments));
    }

    (0, _createClass2.default)(ConfigProvider, [{
      key: "render",
      value: function render() {
        var config = {
          language: this.props.language || 'zh',
          theme: (0, _themes.getTheme)('default', this.props.colorScheme || 'light'),
          colorScheme: this.props.colorScheme || 'light',
          environment: this.props.environment || 'native',
          media: (0, _objectSpread2.default)({
            screenType: 'phone'
          }, this.props.media)
        };
        return _react.default.createElement(ConfigContext.Provider, {
          value: (0, _objectSpread2.default)({}, config)
        }, this.props.children);
      }
    }]);
    return ConfigProvider;
  }(_react.PureComponent);

  exports.ConfigProvider = ConfigProvider;
},22426,[14308,14305,14314,14320,14323,14371,14377,14386,10297,22429,22444]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getTheme = getTheme;
  Object.defineProperty(exports, "ITheme", {
    enumerable: true,
    get: function get() {
      return _ITheme.default;
    }
  });

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _ITheme = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var themes = {
    default: _default.default
  };

  function getTheme() {
    var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';
    var colorScheme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'light';
    var result = {};
    Object.entries(themes[theme]).forEach(function (_ref) {
      var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
          key = _ref2[0],
          value = _ref2[1];

      result[key] = value[colorScheme];
    });
    return result;
  }
},22429,[14305,14347,22432,22441]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var defaultTheme = {
    colorPrimary: new _DynamicColor.default('#32bac0', '#25a9af'),
    colorPrimaryFocus: new _DynamicColor.default('#25a9af', '#158b90'),
    colorPrimaryDisabled: new _DynamicColor.default('rgba(50,186,192,0.3)', 'rgba(37,169,175, 0.3)'),
    colorWarn: new _DynamicColor.default('#f43f31', '#d92719'),
    colorWarnFocus: new _DynamicColor.default('#d53c32', '#b62920'),
    colorWarnDisabled: new _DynamicColor.default('rgba(244,63,49,0.3)', '#b62920'),
    colorBlack: new _DynamicColor.default('#000000', '#e6e6e6'),
    colorGrayHeavier: new _DynamicColor.default('#333333', '#cccccc'),
    colorGrayHeavy: new _DynamicColor.default('#4c4c4c', '#b3b3b3'),
    colorGrayNormal: new _DynamicColor.default('#666666', '#999999'),
    colorGrayLight: new _DynamicColor.default('#7f7f7f', '#808080'),
    colorGrayLighter: new _DynamicColor.default('#999999', '#666666'),
    colorWhite: new _DynamicColor.default('#ffffff', '#000000'),
    colorWhite2: new _DynamicColor.default('#ffffff', 'rgba(255,255,255,0.9)'),
    colorBlack1: new _DynamicColor.default('#000000', '#ffffff'),
    colorToast: new _DynamicColor.default('#4c4c4c', 'rgba(255,255,255,0.7)'),
    colorPlaceHolder: new _DynamicColor.default('rgba(0,0,0,0.3)', 'rgba(255,255,255,0.9)'),
    colorBtnGreenNor: new _DynamicColor.default('#32bac0', '#25a9af'),
    colorBtnGreenPres: new _DynamicColor.default('#25a9af', '#158b90'),
    colorBtnGrayNor: new _DynamicColor.default('#f5f5f5', '#333333'),
    colorBtnGrayPres: new _DynamicColor.default('#e2e2e2', '#666666'),
    colorBtnGreenOpaNor: new _DynamicColor.default('rgba(50,186,192,0.1)', 'rgba(37,169,175,0.20)'),
    colorBtnGreenOpaPres: new _DynamicColor.default('rgba(50,186,192,0.3)', 'rgba(50,186,192,0.3)'),
    colorBackground: new _DynamicColor.default('#f7f7f7', '#000000'),
    colorOverLayerBlack: new _DynamicColor.default('rgba(0,0,0,0.4)', 'rgba(0,0,0,0.6)'),
    colorSeparator: new _DynamicColor.default('#e5e5e5', '#262626'),
    colorForeground: new _DynamicColor.default('#ffffff', '#1a1a1a'),
    colorSlideLeft: new _DynamicColor.default('#D9D9D9', 'rgba(255,255,255,0.08)'),
    colorInputBackground: new _DynamicColor.default('#F5F5F5', 'rgba(255,255,255,0.10)'),
    colorInputBorder: new _DynamicColor.default('rgba(244,63,49,0.2)', 'rgba(217,39,25,0.2)'),
    colorGearBackground: new _DynamicColor.default('#EDEEEF', 'rgba(255,255,255,0.20)'),
    iconViewPress: new _DynamicColor.default('#B0B6B8', '#52595B'),
    iconViewNor: new _DynamicColor.default('#F7F7F7', 'rgba(255,255,255,0.20)'),
    listUnderlayColor: new _DynamicColor.default('#ECECEC', 'rgba(255,255,255,0.20)'),
    barChartItem: new _DynamicColor.default('#FFE4BD', 'rgba(230,142,16,0.3)'),
    barChartItemSelected: new _DynamicColor.default('#FFA626', '#E68E10')
  };
  var _default = defaultTheme;
  exports.default = _default;
},22432,[14305,22435]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _check = _$$_REQUIRE(_dependencyMap[3]);

  var DynamicColor = function () {
    function DynamicColor(light, dark) {
      (0, _classCallCheck2.default)(this, DynamicColor);

      if (_check.isMiHome) {
        this.light = "xm" + light;
        this.dark = "xm" + dark;
      } else {
        this.light = light;
        this.dark = dark;
      }
    }

    (0, _createClass2.default)(DynamicColor, [{
      key: "color",
      value: function color() {
        var colorScheme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';
        return colorScheme === 'light' ? this.light : this.dark;
      }
    }]);
    return DynamicColor;
  }();

  var _default = DynamicColor;
  exports.default = _default;
},22435,[14305,14320,14323,22438]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.isAndroid = exports.isIOS = exports.isMiHome = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var MIOTPackage = _reactNative.NativeModules.MIOTPackage;
  var isMiHome = !!MIOTPackage;
  exports.isMiHome = isMiHome;
  var isIOS = _reactNative.Platform.OS === 'ios';
  exports.isIOS = isIOS;
  var isAndroid = _reactNative.Platform.OS === 'android';
  exports.isAndroid = isAndroid;
},22438,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  ;
},22441,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.language = exports.currentDarkMode = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var MIOTHost = _reactNative.Platform.OS === 'ios' ? _reactNative.NativeModules.MHPluginSDK : _reactNative.NativeModules.MIOTHost;
  var MIOTService = _reactNative.NativeModules.MIOTService;
  var LanguageNameMap = _reactNative.Platform.OS === 'ios' ? {
    zh: ['zh_CN', 'zh-CN', 'zh-Hans'],
    zh_tw: ['zh_TW', 'zh-TW', 'zh-Hant'],
    zh_hk: ['zh_HK', 'zh-HK', 'zh-Hant-HK'],
    zh_bo: /bo($|_)/,
    en: /^en($|_)/,
    es: /^es($|_)/,
    ko: /^ko($|_)/,
    ru: /^ru($|_)/,
    it: /^it($|_)/,
    fr: /^fr($|_)/,
    de: /^de($|_)/,
    id: /^id($|_)/,
    pl: /^pl($|_)/,
    vi: /^vi($|_)/,
    ja: /^ja($|_)/,
    th: /^th($|_)/,
    pt: /^pt($|_)/,
    nl: /^nl($|_)/,
    ar: /^ar($|_)/,
    tr: /^tr($|_)/
  } : {
    zh: ['zh', 'zh_CN'],
    zh_tw: 'zh_TW',
    zh_hk: 'zh_HK',
    zh_bo: /bo($|_)/,
    en: /^en($|_)/,
    es: /^es($|_)/,
    ko: /^ko($|_)/,
    ru: /^ru($|_)/,
    it: /^it($|_)/,
    fr: /^fr($|_)/,
    de: /^de($|_)/,
    id: /(^|_)id($|_)/,
    pl: /^pl($|_)/,
    vi: /^vi($|_)/,
    ja: /^ja($|_)/,
    th: /^th($|_)/,
    pt: /^pt($|_)/,
    nl: /^nl($|_)/,
    ar: /^ar($|_)/,
    tr: /^tr($|_)/
  };

  function getStandardLanguageName(name, nameMap) {
    if (!name) return 'en';

    var std = function std(n) {
      return n.toLowerCase().replace(/-/g, '_');
    };

    name = std(name);
    var ns = Object.keys(nameMap);

    for (var i = 0; i < ns.length; i++) {
      var lang = ns[i];
      var nm = nameMap[lang];
      if (!nm) continue;

      if (Array.isArray(nm)) {
        for (var j = 0; j < nm.length; j++) {
          if (typeof nm[j].test === 'function') {
            if (nm[j].test(name)) return lang;
          } else if (name == std(nm[j])) {
            return lang;
          }
        }
      } else if (typeof nm === 'function') {
        if (nm(name)) return lang;
      } else if (typeof nm.test === 'function') {
        if (nm.test(name)) return lang;
      } else if (name == std(nm)) {
        return lang;
      }
    }

    return 'en';
  }

  function getSystemLanguage() {
    return getStandardLanguageName((MIOTHost == null ? undefined : MIOTHost.language) || 'en', LanguageNameMap);
  }

  var currentDarkMode = (MIOTService == null ? undefined : MIOTService.currentDarkMode) || 'light';
  exports.currentDarkMode = currentDarkMode;
  var language = getSystemLanguage();
  exports.language = language;
},22444,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Switch", {
    enumerable: true,
    get: function get() {
      return _Switch.default;
    }
  });

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22447,[14305,22450]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[11]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[14]);

  var OFF_COLOR = '#f0f0f0';
  var BORDER_COLOR = 'rgba(0,0,0,0.1)';
  var BACK_WIDTH = 44;
  var BACK_HEIGHT = 24;
  var BORDER_WIDTH = _reactNative.StyleSheet.hairlineWidth;
  var ratio = 4;
  var minMargin = 2.5;

  var Switch = function (_React$Component) {
    (0, _inherits2.default)(Switch, _React$Component);

    function Switch(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Switch);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Switch).call(this, props));
      _this.colorSwitchCircle = new _DynamicColor.default('#ffffff', '#ebebeb');
      _this.colorSwitchOff = new _DynamicColor.default('#E5E5E5', '#333333');
      (0, _reportDecorator.referenceReport)('Switch');
      _this.state = {
        value: _this.props.value
      };
      var _this$props$style = _this.props.style,
          width = _this$props$style.width,
          height = _this$props$style.height;
      var backWidth = width || BACK_WIDTH;
      var backHeight = height || BACK_HEIGHT;
      var margin = backHeight / ratio < minMargin ? minMargin : Math.round(backHeight / ratio);
      var circleSize = backHeight / 2;
      _this.offsetXMax = backWidth - backHeight;
      var toValue = _this.props.value ? _this.offsetXMax : 0;
      _this.offsetX = new _reactNative.Animated.Value(toValue);
      _this.backStyle = {
        width: backWidth,
        height: backHeight,
        borderRadius: backHeight / 2
      };
      _this.circleStyle = {
        margin: margin,
        width: circleSize,
        height: circleSize,
        borderRadius: circleSize / 2
      };
      return _this;
    }

    (0, _createClass2.default)(Switch, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.value !== this.state.value) {
          this.setState({
            value: newProps.value
          }, this.animated);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$context = this.context,
            theme = _this$context.theme,
            colorScheme = _this$context.colorScheme;
        var onTintColor = this.props.onTintColor ? this.props.onTintColor : theme.colorPrimary;
        var tintColor = this.props.tintColor ? this.props.tintColor : this.colorSwitchOff.color(colorScheme);
        var backgroundColor = this.state.value ? onTintColor : tintColor;
        var opacity = this.props.disabled ? 0.3 : 1;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            opacity: opacity
          }]
        }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          style: [styles.back, this.backStyle, {
            backgroundColor: backgroundColor
          }],
          disabled: this.props.disabled,
          activeOpacity: 0.8,
          onPress: function onPress() {
            return _this2._onValueChange();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props, {
          accessibilityRole: this.props.accessibilityRole || _accessibilityHelper.AccessibilityRoles.switch,
          accessibilityState: this.props.accessibilityState || {
            disabled: this.props.disabled,
            checked: !!this.state.value
          }
        }))), this.context.colorScheme === 'dark' ? _react.default.createElement(_reactNative.Animated.Image, {
          style: [styles.circle, this.circleStyle, {
            backgroundColor: this.colorSwitchCircle.color(colorScheme),
            transform: [{
              translateX: this.offsetX
            }]
          }]
        }) : _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.circle, this.circleStyle, {
            backgroundColor: this.colorSwitchCircle.color(colorScheme),
            transform: [{
              translateX: this.offsetX
            }]
          }]
        })));
      }
    }, {
      key: "animated",
      value: function animated() {
        var toValue = this.state.value ? this.offsetXMax : 0;

        _reactNative.Animated.spring(this.offsetX, {
          toValue: toValue,
          bounciness: 9,
          speed: 9
        }).start();
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange() {
        var _this3 = this;

        var value = !this.state.value;
        this.setState({
          value: value
        }, function () {
          _this3.animated();

          if (typeof _this3.props.onValueChange === 'function') {
            _this3.props.onValueChange(value);
          }
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.animated();
      }
    }]);
    return Switch;
  }(_react.default.Component);

  Switch.contextType = _configProvider.ConfigContext;
  Switch.propTypes = (0, _objectSpread2.default)({
    value: _propTypes.default.bool.isRequired,
    style: _propTypes.default.object,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    disabled: _propTypes.default.bool,
    onValueChange: _propTypes.default.func.isRequired
  }, _accessibilityHelper.AccessibilityPropTypes);
  Switch.defaultProps = {
    value: false,
    style: {},
    disabled: false
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    back: {
      justifyContent: 'center'
    },
    circle: {
      position: 'absolute',
      backgroundColor: '#fff'
    }
  });

  var _default = Switch;
  exports.default = _default;
},22450,[14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22426,22435,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Images", {
    enumerable: true,
    get: function get() {
      return _Images.default;
    }
  });
  Object.defineProperty(exports, "Styles", {
    enumerable: true,
    get: function get() {
      return _Styles.default;
    }
  });

  var _Images = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _Styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
},22453,[14305,22456,22780]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    common: {
      right_arrow: _$$_REQUIRE(_dependencyMap[0]),
      close: _$$_REQUIRE(_dependencyMap[1]),
      mihome: _$$_REQUIRE(_dependencyMap[2]),
      selectIcon: _$$_REQUIRE(_dependencyMap[3])
    },
    navigation: {
      dot: _$$_REQUIRE(_dependencyMap[4]),
      dark: {
        add: {
          normal: _$$_REQUIRE(_dependencyMap[5]),
          press: _$$_REQUIRE(_dependencyMap[6]),
          disable: _$$_REQUIRE(_dependencyMap[7])
        },
        back: {
          normal: _$$_REQUIRE(_dependencyMap[8]),
          press: _$$_REQUIRE(_dependencyMap[9]),
          disable: _$$_REQUIRE(_dependencyMap[10])
        },
        close: {
          normal: _$$_REQUIRE(_dependencyMap[11]),
          press: _$$_REQUIRE(_dependencyMap[12]),
          disable: _$$_REQUIRE(_dependencyMap[13])
        },
        collect: {
          normal: _$$_REQUIRE(_dependencyMap[14]),
          press: _$$_REQUIRE(_dependencyMap[15]),
          disable: _$$_REQUIRE(_dependencyMap[16])
        },
        complete: {
          normal: _$$_REQUIRE(_dependencyMap[17]),
          press: _$$_REQUIRE(_dependencyMap[18]),
          disable: _$$_REQUIRE(_dependencyMap[19])
        },
        delete: {
          normal: _$$_REQUIRE(_dependencyMap[20]),
          press: _$$_REQUIRE(_dependencyMap[21]),
          disable: _$$_REQUIRE(_dependencyMap[22])
        },
        detail: {
          normal: _$$_REQUIRE(_dependencyMap[23]),
          press: _$$_REQUIRE(_dependencyMap[24]),
          disable: _$$_REQUIRE(_dependencyMap[25])
        },
        more: {
          normal: _$$_REQUIRE(_dependencyMap[26]),
          press: _$$_REQUIRE(_dependencyMap[27]),
          disable: _$$_REQUIRE(_dependencyMap[28])
        },
        next: {
          normal: _$$_REQUIRE(_dependencyMap[29]),
          press: _$$_REQUIRE(_dependencyMap[30]),
          disable: _$$_REQUIRE(_dependencyMap[31])
        },
        profile: {
          normal: _$$_REQUIRE(_dependencyMap[32]),
          press: _$$_REQUIRE(_dependencyMap[33]),
          disable: _$$_REQUIRE(_dependencyMap[34])
        },
        qr: {
          normal: _$$_REQUIRE(_dependencyMap[35]),
          press: _$$_REQUIRE(_dependencyMap[36]),
          disable: _$$_REQUIRE(_dependencyMap[37])
        },
        search: {
          normal: _$$_REQUIRE(_dependencyMap[38]),
          press: _$$_REQUIRE(_dependencyMap[39]),
          disable: _$$_REQUIRE(_dependencyMap[40])
        },
        select_all: {
          normal: _$$_REQUIRE(_dependencyMap[41]),
          press: _$$_REQUIRE(_dependencyMap[42]),
          disable: _$$_REQUIRE(_dependencyMap[43])
        },
        selected_all: {
          normal: _$$_REQUIRE(_dependencyMap[44]),
          press: _$$_REQUIRE(_dependencyMap[45]),
          disable: _$$_REQUIRE(_dependencyMap[46])
        },
        setting: {
          normal: _$$_REQUIRE(_dependencyMap[47]),
          press: _$$_REQUIRE(_dependencyMap[48]),
          disable: _$$_REQUIRE(_dependencyMap[49])
        },
        share: {
          normal: _$$_REQUIRE(_dependencyMap[50]),
          press: _$$_REQUIRE(_dependencyMap[51]),
          disable: _$$_REQUIRE(_dependencyMap[52])
        },
        edit: {
          normal: _$$_REQUIRE(_dependencyMap[53]),
          press: _$$_REQUIRE(_dependencyMap[54]),
          disable: _$$_REQUIRE(_dependencyMap[55])
        },
        record: {
          normal: _$$_REQUIRE(_dependencyMap[56]),
          press: _$$_REQUIRE(_dependencyMap[57]),
          disable: _$$_REQUIRE(_dependencyMap[58])
        },
        orientation: {
          normal: _$$_REQUIRE(_dependencyMap[59]),
          press: _$$_REQUIRE(_dependencyMap[60]),
          disable: _$$_REQUIRE(_dependencyMap[61])
        },
        save: {
          normal: _$$_REQUIRE(_dependencyMap[62]),
          press: _$$_REQUIRE(_dependencyMap[63]),
          disable: _$$_REQUIRE(_dependencyMap[64])
        }
      },
      light: {
        add: {
          normal: _$$_REQUIRE(_dependencyMap[65]),
          press: _$$_REQUIRE(_dependencyMap[66]),
          disable: _$$_REQUIRE(_dependencyMap[67])
        },
        back: {
          normal: _$$_REQUIRE(_dependencyMap[68]),
          press: _$$_REQUIRE(_dependencyMap[69]),
          disable: _$$_REQUIRE(_dependencyMap[70])
        },
        close: {
          normal: _$$_REQUIRE(_dependencyMap[71]),
          press: _$$_REQUIRE(_dependencyMap[72]),
          disable: _$$_REQUIRE(_dependencyMap[73])
        },
        collect: {
          normal: _$$_REQUIRE(_dependencyMap[74]),
          press: _$$_REQUIRE(_dependencyMap[75]),
          disable: _$$_REQUIRE(_dependencyMap[76])
        },
        complete: {
          normal: _$$_REQUIRE(_dependencyMap[77]),
          press: _$$_REQUIRE(_dependencyMap[78]),
          disable: _$$_REQUIRE(_dependencyMap[79])
        },
        delete: {
          normal: _$$_REQUIRE(_dependencyMap[80]),
          press: _$$_REQUIRE(_dependencyMap[81]),
          disable: _$$_REQUIRE(_dependencyMap[82])
        },
        detail: {
          normal: _$$_REQUIRE(_dependencyMap[83]),
          press: _$$_REQUIRE(_dependencyMap[84]),
          disable: _$$_REQUIRE(_dependencyMap[85])
        },
        more: {
          normal: _$$_REQUIRE(_dependencyMap[86]),
          press: _$$_REQUIRE(_dependencyMap[87]),
          disable: _$$_REQUIRE(_dependencyMap[88])
        },
        next: {
          normal: _$$_REQUIRE(_dependencyMap[89]),
          press: _$$_REQUIRE(_dependencyMap[90]),
          disable: _$$_REQUIRE(_dependencyMap[91])
        },
        profile: {
          normal: _$$_REQUIRE(_dependencyMap[92]),
          press: _$$_REQUIRE(_dependencyMap[93]),
          disable: _$$_REQUIRE(_dependencyMap[94])
        },
        qr: {
          normal: _$$_REQUIRE(_dependencyMap[95]),
          press: _$$_REQUIRE(_dependencyMap[96]),
          disable: _$$_REQUIRE(_dependencyMap[97])
        },
        search: {
          normal: _$$_REQUIRE(_dependencyMap[98]),
          press: _$$_REQUIRE(_dependencyMap[99]),
          disable: _$$_REQUIRE(_dependencyMap[100])
        },
        select_all: {
          normal: _$$_REQUIRE(_dependencyMap[101]),
          press: _$$_REQUIRE(_dependencyMap[102]),
          disable: _$$_REQUIRE(_dependencyMap[103])
        },
        selected_all: {
          normal: _$$_REQUIRE(_dependencyMap[104]),
          press: _$$_REQUIRE(_dependencyMap[105]),
          disable: _$$_REQUIRE(_dependencyMap[106])
        },
        setting: {
          normal: _$$_REQUIRE(_dependencyMap[107]),
          press: _$$_REQUIRE(_dependencyMap[108]),
          disable: _$$_REQUIRE(_dependencyMap[109])
        },
        share: {
          normal: _$$_REQUIRE(_dependencyMap[110]),
          press: _$$_REQUIRE(_dependencyMap[111]),
          disable: _$$_REQUIRE(_dependencyMap[112])
        },
        edit: {
          normal: _$$_REQUIRE(_dependencyMap[113]),
          press: _$$_REQUIRE(_dependencyMap[114]),
          disable: _$$_REQUIRE(_dependencyMap[115])
        },
        record: {
          normal: _$$_REQUIRE(_dependencyMap[116]),
          press: _$$_REQUIRE(_dependencyMap[117]),
          disable: _$$_REQUIRE(_dependencyMap[118])
        },
        orientation: {
          normal: _$$_REQUIRE(_dependencyMap[119]),
          press: _$$_REQUIRE(_dependencyMap[120]),
          disable: _$$_REQUIRE(_dependencyMap[121])
        },
        save: {
          normal: _$$_REQUIRE(_dependencyMap[122]),
          press: _$$_REQUIRE(_dependencyMap[123]),
          disable: _$$_REQUIRE(_dependencyMap[124])
        }
      }
    },
    loading: {
      dark: {
        empty: _$$_REQUIRE(_dependencyMap[125])
      },
      light: {
        empty: _$$_REQUIRE(_dependencyMap[126])
      }
    },
    sort: {
      light: {
        normal: _$$_REQUIRE(_dependencyMap[127]),
        press: _$$_REQUIRE(_dependencyMap[128])
      },
      dark: {
        normal: _$$_REQUIRE(_dependencyMap[129]),
        press: _$$_REQUIRE(_dependencyMap[130])
      }
    }
  };
  exports.default = _default;
},22456,[22459,22462,22465,22468,22471,22474,22477,22480,22483,22486,22489,22492,22495,22498,22501,22504,22507,22510,22513,22516,22519,22522,22525,22528,22531,22534,22537,22540,22543,22546,22549,22552,22555,22558,22561,22564,22567,22570,22573,22576,22579,22582,22585,22588,22591,22594,22597,22600,22603,22606,22609,22612,22615,22618,22621,22624,23188,23191,23194,23251,23254,23257,23260,23263,23266,22627,22630,22633,22636,22639,22642,22645,22648,22651,22654,22657,22660,22663,22666,22669,22672,22675,22678,22681,22684,22687,22690,22693,22696,22699,22702,22705,22708,22711,22714,22717,22720,22723,22726,22729,22732,22735,22738,22741,22744,22747,22750,22753,22756,22759,22762,22765,22768,22771,22774,22777,23197,23200,23203,23269,23272,23275,23278,23281,23284,23206,23209,23287,23290,23293,23296]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 24,
    "height": 24,
    "scales": [1, 1.5, 2, 3, 4],
    "hash": "429182adb27a0752e9ed335169b6e7cd",
    "name": "right_arrow",
    "type": "png"
  });
},22459,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 20,
    "height": 20,
    "scales": [2, 3],
    "hash": "513efe08c931e5bdfb2d0fade0a99585",
    "name": "close",
    "type": "png"
  });
},22462,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 170,
    "height": 170,
    "scales": [1],
    "hash": "c749a1206e5e8038ce207871a9d3efdf",
    "name": "mihome",
    "type": "png"
  });
},22465,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 6,
    "height": 10,
    "scales": [2, 3],
    "hash": "0fa399f5d3ff3ccfa6349b4fadce3ec2",
    "name": "select_icon",
    "type": "png"
  });
},22468,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d64f463ebe229908246c9458f507dbf3",
    "name": "dot",
    "type": "png"
  });
},22471,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9bd423b230418efeb7f166e7d58ef6ba",
    "name": "add_n_dark",
    "type": "png"
  });
},22474,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "eadfcd6310ce848ab88c395d24515f67",
    "name": "add_p_dark",
    "type": "png"
  });
},22477,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "212ae3dd040f06a3b7275f07bac925ac",
    "name": "add_d_dark",
    "type": "png"
  });
},22480,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0d175986353189419a421f22df98236c",
    "name": "back_n_dark",
    "type": "png"
  });
},22483,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "61088f5ae4334497423ed4ba4d0efd57",
    "name": "back_p_dark",
    "type": "png"
  });
},22486,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d71a75220ff84f218dc74b8c9d643d9d",
    "name": "back_d_dark",
    "type": "png"
  });
},22489,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "3aa862c6c1a8e0d751e6c0060ec8e936",
    "name": "close_n_dark",
    "type": "png"
  });
},22492,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "67a1d09012ca0bf153eec6d399bdf8cb",
    "name": "close_p_dark",
    "type": "png"
  });
},22495,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "38396687cc2aed9e12a24f0e4d8d6d52",
    "name": "close_d_dark",
    "type": "png"
  });
},22498,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "c0aa419f7ab32a31ece8cbe06f3df918",
    "name": "collect_n_dark",
    "type": "png"
  });
},22501,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "92d1cf303e84b2f49636c7f1774bb117",
    "name": "collect_p_dark",
    "type": "png"
  });
},22504,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f63b4a7eadbd183ff6f0528a77f85fa9",
    "name": "collect_d_dark",
    "type": "png"
  });
},22507,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0a4bc632ff6618367f4a8268b94539e0",
    "name": "complete_n_dark",
    "type": "png"
  });
},22510,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "e1ce6460ed6bea45b04c8408365aeb55",
    "name": "complete_p_dark",
    "type": "png"
  });
},22513,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "aea57b6079a28e34f5cdf64aeefa9d10",
    "name": "complete_d_dark",
    "type": "png"
  });
},22516,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "5b4f878534e8df6f1db628336f7942a1",
    "name": "delete_n_dark",
    "type": "png"
  });
},22519,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "5fe3bd8bd680430c3c0893cd838509ac",
    "name": "delete_p_dark",
    "type": "png"
  });
},22522,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a62a8690a84ac16c06ddc49e2500035a",
    "name": "delete_d_dark",
    "type": "png"
  });
},22525,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "06d360cd217e890d502905d042d8ab70",
    "name": "detail_n_dark",
    "type": "png"
  });
},22528,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "36adf09873ef8f4cb8e9c3293a073b2c",
    "name": "detail_p_dark",
    "type": "png"
  });
},22531,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a6260dff61235a9308ccae6a43f6326c",
    "name": "detail_d_dark",
    "type": "png"
  });
},22534,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "01768feec61a58fedc099e1bce9944a1",
    "name": "more_n_dark",
    "type": "png"
  });
},22537,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "818473fe7ed624d1ef8a94b71fb44f85",
    "name": "more_p_dark",
    "type": "png"
  });
},22540,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bddb75affe70f164ce1e438f4409f17b",
    "name": "more_d_dark",
    "type": "png"
  });
},22543,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8ec7c38f272c0f55f23be22336145074",
    "name": "next_n_dark",
    "type": "png"
  });
},22546,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f0d7968b2b57b3029789298b23cfc17f",
    "name": "next_p_dark",
    "type": "png"
  });
},22549,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "46c88f2e3560d5b2d85fe2577eda345b",
    "name": "next_d_dark",
    "type": "png"
  });
},22552,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "3fc8a34d07b39ab0975eeea5513b8c29",
    "name": "profile_n_dark",
    "type": "png"
  });
},22555,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "4e4af3425de30ca74529cd83a5fa8cc4",
    "name": "profile_p_dark",
    "type": "png"
  });
},22558,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "1e146ef52c0cd2c2b1296453ae202c3b",
    "name": "profile_d_dark",
    "type": "png"
  });
},22561,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "43558cf6431c2a80d0996e83087ed74a",
    "name": "qr_n_dark",
    "type": "png"
  });
},22564,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ca67ebbf39a108d2051be0f43022b309",
    "name": "qr_p_dark",
    "type": "png"
  });
},22567,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bf1c3f93c8df793ac79b6fb7ae12b368",
    "name": "qr_d_dark",
    "type": "png"
  });
},22570,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ef8d45b7107fa1997a340a6cde17d846",
    "name": "search_n_dark",
    "type": "png"
  });
},22573,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9f3cbff8a37a52b57f9630e779cbbf50",
    "name": "search_p_dark",
    "type": "png"
  });
},22576,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9bc47c03cb46538e397812dbe9130779",
    "name": "search_d_dark",
    "type": "png"
  });
},22579,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ec06b11be77df9693ec1e8e5eee2584a",
    "name": "select_all_n_dark",
    "type": "png"
  });
},22582,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0d6d205ce85797276f1e56d9f3a69036",
    "name": "select_all_p_dark",
    "type": "png"
  });
},22585,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "af7f244b41795961799676b2bb03572b",
    "name": "select_all_d_dark",
    "type": "png"
  });
},22588,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "feb1e39bc2f9f74ffa3b5e43dd2576d0",
    "name": "selected_all_n_dark",
    "type": "png"
  });
},22591,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "1edf29ddf9b1bd821cb81f0545ae4213",
    "name": "selected_all_p_dark",
    "type": "png"
  });
},22594,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f332bb6a35b954c4b5a5a156b5a318cb",
    "name": "selected_all_d_dark",
    "type": "png"
  });
},22597,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ea3bcaa2adbb2e5c69d294c1a785f1ff",
    "name": "setting_n_dark",
    "type": "png"
  });
},22600,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0f4e2e5b336a3e6df2ee61b442d525f8",
    "name": "setting_p_dark",
    "type": "png"
  });
},22603,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "399e720ce64e830a32e655050ca9650c",
    "name": "setting_d_dark",
    "type": "png"
  });
},22606,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ac348a4120eb9a807f6f26de2d54ed6c",
    "name": "share_n_dark",
    "type": "png"
  });
},22609,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "48ccaaa711bb0765271a227810c0b2a5",
    "name": "share_p_dark",
    "type": "png"
  });
},22612,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "af7d9b9276788b5babab6dee0010718a",
    "name": "share_d_dark",
    "type": "png"
  });
},22615,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d0600233b9840af9fb9d2c886a2c1318",
    "name": "edit_n_dark",
    "type": "png"
  });
},22618,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "dfed43b3fb99a8a6f29255d2fcb85595",
    "name": "edit_p_dark",
    "type": "png"
  });
},22621,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "be2507d558cd74c7be64aa2d95701cd1",
    "name": "edit_d_dark",
    "type": "png"
  });
},22624,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8bafdbd4b0404adf0853ac00532b1e79",
    "name": "add_n_light",
    "type": "png"
  });
},22627,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0164cec94f8ec71e4e9adb97fc870ab3",
    "name": "add_p_light",
    "type": "png"
  });
},22630,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0ceb7837a4c9b50b2cc41ae511436394",
    "name": "add_d_light",
    "type": "png"
  });
},22633,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d35c428ca5b361dee0fc11c6ed857d85",
    "name": "back_n_light",
    "type": "png"
  });
},22636,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "40ac17d325f10a6d829ad1555800ce72",
    "name": "back_p_light",
    "type": "png"
  });
},22639,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "65d7cc395c9e1964da242475a5cf5463",
    "name": "back_d_light",
    "type": "png"
  });
},22642,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ea16ea01af17c8f1d5a1a75cfa0fa4da",
    "name": "close_n_light",
    "type": "png"
  });
},22645,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2],
    "hash": "120e386ff9e57f96b116f4a74926eec6",
    "name": "close_p_light",
    "type": "png"
  });
},22648,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "2b639ed6f188a166393c35cbebba5a98",
    "name": "close_d_light",
    "type": "png"
  });
},22651,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "dbb118618abcff775dce42a48115207d",
    "name": "collect_n_light",
    "type": "png"
  });
},22654,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "c191261b7355631ee834af49dc32685f",
    "name": "collect_p_light",
    "type": "png"
  });
},22657,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "18f9db9e4605e20d0fd44ca7d0f23fbd",
    "name": "collect_d_light",
    "type": "png"
  });
},22660,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "b1bd45768499eff55cc3d05773043ad9",
    "name": "complete_n_light",
    "type": "png"
  });
},22663,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "4eb8ac68188682e0cd6e1c8eeada1caf",
    "name": "complete_p_light",
    "type": "png"
  });
},22666,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7da108cda8573079daeea58daa1f9804",
    "name": "complete_d_light",
    "type": "png"
  });
},22669,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "276b44f481b127e60909bef6af54bec1",
    "name": "delete_n_light",
    "type": "png"
  });
},22672,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8506cca89f55c8cc2eed16cc74f56943",
    "name": "delete_p_light",
    "type": "png"
  });
},22675,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9da9b53b85d9dceca54de2cac5418b19",
    "name": "delete_d_light",
    "type": "png"
  });
},22678,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d1829d99bed03923f1b8f1ebf0010130",
    "name": "detail_n_light",
    "type": "png"
  });
},22681,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d50634fa85b7ae6995b9e3e87d5a4d4d",
    "name": "detail_p_light",
    "type": "png"
  });
},22684,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "64fe4c41e9f9e03cb43bdf9ef74c3b1d",
    "name": "detail_d_light",
    "type": "png"
  });
},22687,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7d796b935e6bc3314cb02944228d96ba",
    "name": "more_n_light",
    "type": "png"
  });
},22690,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f72680ce6545ce33ea92cd05d6d0b781",
    "name": "more_p_light",
    "type": "png"
  });
},22693,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "b1555c8200e8033bd520e486c62d50f6",
    "name": "more_d_light",
    "type": "png"
  });
},22696,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "b06e919c1aabe23c6b6204ed4c6be2f2",
    "name": "next_n_light",
    "type": "png"
  });
},22699,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d9e2fbca34f818935153d5cd14bfe308",
    "name": "next_p_light",
    "type": "png"
  });
},22702,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a83f2f4e7a6a06ec0aca2e5d9c2d6425",
    "name": "next_d_light",
    "type": "png"
  });
},22705,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "80df0a9c305f460e686305b20a4121e5",
    "name": "profile_n_light",
    "type": "png"
  });
},22708,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a324d91d85f4ebb75c79d149113d2986",
    "name": "profile_p_light",
    "type": "png"
  });
},22711,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a27828fbcbc4f32763f5b16003e77fda",
    "name": "profile_d_light",
    "type": "png"
  });
},22714,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bc698fecd6edf342a8abd9935a26c54f",
    "name": "qr_n_light",
    "type": "png"
  });
},22717,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7148f22f62b47295594876ac7e59b627",
    "name": "qr_p_light",
    "type": "png"
  });
},22720,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "1d5e61ff437c1fed89412bb1414b0e12",
    "name": "qr_d_light",
    "type": "png"
  });
},22723,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f51992416b82a3978180624bbcd3aa6b",
    "name": "search_n_light",
    "type": "png"
  });
},22726,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7343717d2172db8e7e809f333304bf18",
    "name": "search_p_light",
    "type": "png"
  });
},22729,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8ca380593445ff388dc5d46cc2f9372b",
    "name": "search_d_light",
    "type": "png"
  });
},22732,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9df30e16d642ba2f9208fe5fb6912941",
    "name": "select_all_n_light",
    "type": "png"
  });
},22735,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "e07a585ed15f6298ceda6c57d112af5a",
    "name": "select_all_p_light",
    "type": "png"
  });
},22738,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "79a9f622c8a14ca78e1c22fbb7552f93",
    "name": "select_all_d_light",
    "type": "png"
  });
},22741,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "31ceea4acc13d14db8013f4e9f285a5c",
    "name": "selected_all_n_light",
    "type": "png"
  });
},22744,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "6e5cd5f673df012ba88b127147b7fcf8",
    "name": "selected_all_p_light",
    "type": "png"
  });
},22747,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "efc658ab288e2a7a6812d5043c23101b",
    "name": "selected_all_d_light",
    "type": "png"
  });
},22750,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "84f010399151dba78c3632943d118f51",
    "name": "setting_n_light",
    "type": "png"
  });
},22753,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "3443dad864861e535b7069114e900875",
    "name": "setting_p_light",
    "type": "png"
  });
},22756,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "e8c9e0ccf400909f5fafc5876055be7c",
    "name": "setting_d_light",
    "type": "png"
  });
},22759,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d169ce4c6a497c942dc9e79158cb31d0",
    "name": "share_n_light",
    "type": "png"
  });
},22762,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "5267a30047ef07ac0f81f0d2c41eb9d4",
    "name": "share_p_light",
    "type": "png"
  });
},22765,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "2bbd5837d46a53fa4cfd901ff339721f",
    "name": "share_d_light",
    "type": "png"
  });
},22768,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "20eeed0f6e9ec17338bd85b45f839d5e",
    "name": "edit_n_light",
    "type": "png"
  });
},22771,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bcf1344a655071e586f35b03c192b126",
    "name": "edit_p_light",
    "type": "png"
  });
},22774,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7ba5916e8c4ce832feb18527d230fed6",
    "name": "edit_d_light",
    "type": "png"
  });
},22777,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var PADDING = 24;
  var SEPARATOR_HEIGHT = _reactNative.StyleSheet.hairlineWidth;
  var HAIRLINE_COLOR = 'rgba(0,0,0,0.15)';
  var MODAL_MARGIN = 0;
  var MODAL_WIDTH = width - 0;
  var _default = {
    MODAL_MARGIN: MODAL_MARGIN,
    common: {
      padding: PADDING,
      MHGreen: '#32BAC0',
      underlayColor: 'rgba(0,0,0,0.05)',
      hairlineColor: HAIRLINE_COLOR,
      backgroundColor: '#f7f7f7',
      separatorHeight: SEPARATOR_HEIGHT,
      title: {
        fontSize: 16,
        lineHeight: 20,
        color: '#000'
      },
      subtitle: {
        fontSize: 13,
        color: 'rgba(0,0,0,0.6)'
      },
      separator: {
        height: SEPARATOR_HEIGHT,
        backgroundColor: HAIRLINE_COLOR
      }
    },
    dialog: {
      background: {
        flex: 1,
        backgroundColor: 'rgba(0,0,0,0.4)'
      },
      modal: {
        position: 'absolute',
        bottom: 0,
        marginHorizontal: MODAL_MARGIN,
        width: MODAL_WIDTH,
        borderTopEndRadius: 20,
        borderTopStartRadius: 20,
        paddingBottom: 30,
        backgroundColor: '#fff'
      },
      padModal: {
        borderRadius: 20,
        bottom: null,
        width: MODAL_WIDTH * 0.75,
        position: 'absolute',
        paddingBottom: 30,
        backgroundColor: '#fff',
        marginHorizontal: MODAL_MARGIN
      },
      title: {
        titleHeightThin: 73,
        titleHeightFat: 83
      },
      subtitle: {
        width: MODAL_WIDTH * 0.75,
        textAlign: 'center',
        fontSize: 13,
        color: '#666'
      },
      buttons: {
        height: 46,
        flexDirection: 'row',
        backgroundColor: 'transparent',
        justifyContent: 'center',
        alignItems: 'center',
        marginHorizontal: 27
      },
      button: {
        flex: 1,
        backgroundColor: 'transparent',
        justifyContent: 'center',
        alignItems: 'center',
        marginHorizontal: 27
      },
      buttonText: {
        fontSize: 14,
        lineHeight: 19,
        color: '#666',
        fontFamily: 'D-DINCondensed-Bold'
      }
    }
  };
  exports.default = _default;
},22780,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Checkbox", {
    enumerable: true,
    get: function get() {
      return _Checkbox.default;
    }
  });

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22783,[14305,22786]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Checkable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var SIZE = 40;
  var UNCHECKED_BORDER_COLOR = 'rgba(0,0,0,0.1)';

  var Checkbox = function (_React$Component) {
    (0, _inherits2.default)(Checkbox, _React$Component);

    function Checkbox(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, Checkbox);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Checkbox).call(this, props, context));
      _this.UNCHECKED_BACKGROUNDCOLOR = new _DynamicColor.default('#F5F5F5', '#333333');
      _this.backgroundColor = new _reactNative.Animated.Value(0);
      (0, _reportDecorator.referenceReport)('Checkbox');
      _this.state = {
        checked: _this.props.checked
      };
      return _this;
    }

    (0, _createClass2.default)(Checkbox, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.checked !== this.state.checked) {
          this.setState({
            checked: newProps.checked
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var colorScheme = this.context.colorScheme;
        var toValue = this.state.checked ? 1 : 0;
        var backgroundColor = this.backgroundColor.interpolate({
          inputRange: [0, 1],
          outputRange: [this.UNCHECKED_BACKGROUNDCOLOR.color(colorScheme), this.props.checkedColor]
        });
        var _this$props$style = this.props.style,
            borderWidth = _this$props$style.borderWidth,
            borderColor = _this$props$style.borderColor,
            width = _this$props$style.width,
            height = _this$props$style.height;
        var size = Math.min(width || SIZE, height || SIZE);
        var borderStyle = this.state.checked ? {
          borderWidth: 0
        } : {
          borderWidth: borderWidth || 0,
          borderColor: borderColor || UNCHECKED_BORDER_COLOR
        };

        _reactNative.Animated.timing(this.backgroundColor, {
          toValue: toValue,
          duration: 200
        }).start();

        return _react.default.createElement(_reactNative.Animated.View, {
          opacity: this.props.disabled ? 0.3 : 1,
          style: [styles.container, this.props.style, borderStyle, {
            backgroundColor: backgroundColor
          }]
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          disabled: this.props.disabled,
          onPress: function onPress() {
            return _this2._onValueChange();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props, {
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
          accessibilityLabel: this.props.accessibilityLabel || this.props.label,
          accessibilityState: {
            disabled: !!this.props.disabled,
            checked: !!this.state.checked
          }
        }))), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            justifyContent: 'center',
            alignItems: 'center'
          }
        }, _react.default.createElement(_Checkable.default, {
          size: size,
          visible: this.state.checked
        }))));
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange() {
        var checked = !this.state.checked;

        if (this.props.onValueChange) {
          this.props.onValueChange(checked);
        }

        this.setState({
          checked: checked
        });
      }
    }]);
    return Checkbox;
  }(_react.default.Component);

  Checkbox.contextType = _configProvider.ConfigContext;
  Checkbox.propTypes = {
    style: _propTypes.default.object,
    disabled: _propTypes.default.bool,
    checked: _propTypes.default.bool,
    onValueChange: _propTypes.default.func,
    checkedColor: _propTypes.default.string,
    label: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Checkbox.defaultProps = {
    style: {},
    disabled: false,
    checked: false,
    checkedColor: _resources.Styles.common.MHGreen
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: SIZE,
      height: SIZE
    }
  });

  var _default = Checkbox;
  exports.default = _default;
},22786,[14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22453,22789,22435,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  var Surface = _reactNative.ART.Surface,
      Shape = _reactNative.ART.Shape,
      Path = _reactNative.ART.Path,
      Transform = _reactNative.ART.Transform;

  var Rectangle = function (_React$Component) {
    (0, _inherits2.default)(Rectangle, _React$Component);

    function Rectangle() {
      (0, _classCallCheck2.default)(this, Rectangle);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Rectangle).apply(this, arguments));
    }

    (0, _createClass2.default)(Rectangle, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            width = _this$props.width,
            height = _this$props.height;
        if (width < height) return null;
        var newWidth = width - height;
        var path = Path().moveTo(height / 2 - width / 2, height / 2).arc(0, -height, height / 2).line(newWidth, 0).arc(0, height, height / 2).line(-newWidth, 0).close();
        return _react.default.createElement(Shape, (0, _extends2.default)({
          transform: new Transform().rotate(this.props.degree)
        }, this.props, {
          d: path
        }));
      }
    }]);
    return Rectangle;
  }(_react.default.Component);

  Rectangle.propTypes = {
    width: _propTypes.default.number.isRequired,
    height: _propTypes.default.number.isRequired,
    degree: _propTypes.default.number.isRequired
  };

  var AnimatedRectangle = _reactNative.Animated.createAnimatedComponent(Rectangle);

  var degree = 45;

  var Checkable = function (_React$Component2) {
    (0, _inherits2.default)(Checkable, _React$Component2);

    function Checkable(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, Checkable);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Checkable).call(this, props, context));
      _this.state = {
        animatedWidth: new _reactNative.Animated.Value(0)
      };
      var size = _this.props.size;
      var containerHeight = size;
      var leftWidth = size * 0.43;
      var rightWidth = size - leftWidth;
      var intersectionHeight = Math.floor(size * 2 / 3);
      var leftRectangleWidth = intersectionHeight / 1.5;
      var rightRectangleWidth = size / 1.2;
      var rectangleHeight = size / 10;
      _this.animationConfig = {
        toValue: rightRectangleWidth,
        speed: 9,
        bounciness: 9
      };
      _this.containerHeight = containerHeight;
      _this.leftWidth = leftWidth;
      _this.rightWidth = rightWidth;
      _this.intersectionHeight = intersectionHeight;
      _this.leftRectangleWidth = leftRectangleWidth;
      _this.rightRectangleWidth = rightRectangleWidth;
      _this.rectangleHeight = rectangleHeight;
      return _this;
    }

    (0, _createClass2.default)(Checkable, [{
      key: "render",
      value: function render() {
        if (!this.props.visible) {
          this.preVisible = false;
          return _react.default.createElement(_reactNative.View, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          }));
        }

        if (!this.preVisible) {
          this.state.animatedWidth.setValue(0);

          _reactNative.Animated.spring(this.state.animatedWidth, this.animationConfig).start();
        }

        this.preVisible = true;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: {
            flexDirection: 'row'
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(Surface, {
          width: this.leftWidth,
          height: this.containerHeight,
          style: {
            backgroundColor: 'transparent'
          }
        }, _react.default.createElement(AnimatedRectangle, {
          degree: degree,
          fill: "#fff",
          width: this.leftRectangleWidth,
          height: this.rectangleHeight,
          y: this.intersectionHeight,
          x: this.leftWidth
        })), _react.default.createElement(Surface, {
          width: this.rightWidth,
          height: this.containerHeight,
          style: {
            backgroundColor: 'transparent',
            marginLeft: -0.5
          }
        }, _react.default.createElement(AnimatedRectangle, {
          degree: -45,
          fill: "#fff",
          width: this.state.animatedWidth,
          height: this.rectangleHeight,
          y: this.intersectionHeight,
          x: 0
        })));
      }
    }]);
    return Checkable;
  }(_react.default.Component);

  exports.default = Checkable;
  Checkable.propTypes = {
    size: _propTypes.default.number.isRequired,
    visible: _propTypes.default.bool.isRequired
  };
  Checkable.defaultProps = {
    size: 50,
    visible: false
  };
},22789,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "ImageButton", {
    enumerable: true,
    get: function get() {
      return _ImageButton.default;
    }
  });

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22792,[14305,22795]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[11]);

  var ImageButton = function (_React$Component) {
    (0, _inherits2.default)(ImageButton, _React$Component);

    function ImageButton(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ImageButton);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ImageButton).call(this, props));
      (0, _reportDecorator.referenceReport)('ImageButton');
      _this.state = {
        buttonPressed: false
      };
      return _this;
    }

    (0, _createClass2.default)(ImageButton, [{
      key: "_buttonPressIn",
      value: function _buttonPressIn() {
        this.setState({
          buttonPressed: true
        });
      }
    }, {
      key: "_buttonPressOut",
      value: function _buttonPressOut() {
        this.setState({
          buttonPressed: false
        });
      }
    }, {
      key: "_isButtonPressed",
      value: function _isButtonPressed() {
        return this.state.buttonPressed;
      }
    }, {
      key: "render",
      value: function render() {
        var source = this.props.source;

        if (this._isButtonPressed() && this.props.highlightedSource) {
          source = this.props.highlightedSource;
        }

        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          disabled: this.props.disabled,
          onPress: this.props.onPress,
          onPressIn: this._buttonPressIn.bind(this),
          onPressOut: this._buttonPressOut.bind(this)
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.imagebutton,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: !!this.props.disabled
          }
        })), _react.default.createElement(_reactNative.Image, {
          style: this.props.style,
          source: source
        }));
      }
    }]);
    return ImageButton;
  }(_react.default.Component);

  ImageButton.initialState = {
    buttonPressed: false
  };
  ImageButton.propTypes = {
    source: _propTypes.default.any,
    highlightedSource: _propTypes.default.any,
    onPress: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    style: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ImageButton.defaultProps = {
    source: null,
    highlightedSource: null,
    onPress: null
  };
  var _default = ImageButton;
  exports.default = _default;
},22795,[14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "TitleBar", {
    enumerable: true,
    get: function get() {
      return _TitleBar.default;
    }
  });

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22798,[14305,22801]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _reactNativeIphoneXHelper = _$$_REQUIRE(_dependencyMap[11]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[12]);

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[13]);

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

  var isIOS = _reactNative.Platform.OS === 'ios';

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var statusBarHeight = (0, _reactNativeIphoneXHelper.getStatusBarHeight)(true);
  var titleHeight = 55;
  var imgHeight = 28;
  var containerHeight = (_reactNative.StatusBar.currentHeight || 0) + titleHeight;
  var marginV = 13.5;
  var marginH = 14;
  var dotSize = 10;

  var TitleBar = function (_Component) {
    (0, _inherits2.default)(TitleBar, _Component);

    function TitleBar(props) {
      var _this;

      (0, _classCallCheck2.default)(this, TitleBar);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TitleBar).call(this, props));
      (0, _reportDecorator.referenceReport)('TitleBar');
      return _this;
    }

    (0, _createClass2.default)(TitleBar, [{
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        this.isDarkStyle = this.props.type === 'dark';

        if (_reactNative.Platform.OS == 'android') {
          _reactNative.StatusBar.setTranslucent(true);
        }
      }
    }, {
      key: "render",
      value: function render() {
        this.isDarkStyle = this.props.type === 'dark';

        if (this.context.colorScheme === 'dark') {
          if (this.isDarkStyle === false) {
            if (this.props.style !== undefined && this.props.style.backgroundColor !== undefined) {
              this.props.style.backgroundColor = "xm" + this.props.style.backgroundColor;
            }
          }

          this.isDarkStyle = false;
        } else if (this.context.colorScheme === 'dark') {
          this.isDarkStyle = false;
        }

        this.isDarkStyle ? _reactNative.StatusBar.setBarStyle('dark-content') : _reactNative.StatusBar.setBarStyle('light-content');
        var containerStyle = this.isDarkStyle ? styles.blackTitleBarContainer : styles.lightTitleBarContainer;
        var leftWidth = this.props.leftTextStyle ? this.props.leftTextStyle.width : 0;
        var rightWidth = this.props.rightTextStyle ? this.props.rightTextStyle.width : 0;
        var titleTextStyle = this.isDarkStyle ? styles.blackTitleText : styles.whiteTitleText;
        var subtitleTextStyle = this.isDarkStyle ? styles.blackSubtitleText : styles.whiteSubtitleText;
        var leftRightTextStyle = this.isDarkStyle ? styles.blackLeftRightText : styles.whiteLeftRightText;
        var back_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[18]) : _$$_REQUIRE(_dependencyMap[19]);
        var back_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[20]) : _$$_REQUIRE(_dependencyMap[21]);
        var set_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[22]) : _$$_REQUIRE(_dependencyMap[23]);
        var set_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[24]) : _$$_REQUIRE(_dependencyMap[25]);
        var share_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[26]) : _$$_REQUIRE(_dependencyMap[27]);
        var share_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[28]) : _$$_REQUIRE(_dependencyMap[29]);
        var more_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[30]) : _$$_REQUIRE(_dependencyMap[31]);
        var more_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[32]) : _$$_REQUIRE(_dependencyMap[33]);
        var message = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[34]) : _$$_REQUIRE(_dependencyMap[34]);

        var _ref = this.props.style || {},
            height = _ref.height;

        var containerHeight = {};
        var dotTop = {};
        var offset;

        if (height !== undefined) {
          containerHeight = {
            height: (_reactNative.StatusBar.currentHeight || 0) + height
          };
          offset = height - titleHeight;
          dotTop = {
            top: statusBarHeight + marginV + offset
          };
        }

        return _react.default.createElement(_reactNavigation.SafeAreaView, {
          style: [containerStyle, this.props.style, containerHeight]
        }, this.props.leftText ? _react.default.createElement(_reactNativeUiKitten.RkButton, (0, _extends2.default)({
          onPress: this.props.onPressLeft,
          contentStyle: [leftRightTextStyle, this.props.leftTextStyle],
          style: [leftRightTextStyle, {
            height: this.props.onPressLeft ? titleHeight : 0,
            width: leftWidth || 56
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressLeft ? this.props.accessible : false,
          accessibilityLabel: this.props.leftAccessibilityLabel || this.props.leftText,
          accessibilityHint: this.props.leftAccessibilityHint
        })), this.props.leftText) : _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
          onPress: this.props.onPressLeft,
          style: [styles.img, {
            height: this.props.onPressLeft ? imgHeight : 0
          }],
          source: back_n,
          highlightedSource: back_p
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressLeft ? this.props.accessible : false,
          accessibilityLabel: this.props.leftAccessibilityLabel,
          accessibilityHint: this.props.leftAccessibilityHint
        }))), _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
          onPress: this.props.onPressLeft2,
          style: [styles.img, {
            marginLeft: 0,
            height: this.props.onPressLeft2 ? imgHeight : 0
          }],
          source: set_n,
          highlightedSource: set_p
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressLeft2 ? this.props.accessible : false,
          accessibilityLabel: this.props.left2AccessibilityLabel,
          accessibilityHint: this.props.left2AccessibilityHint
        }))), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.textContainer]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.header
        })), _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: [titleTextStyle, this.props.titleStyle],
          allowFontScaling: this.props.allowFontScaling,
          onPress: this.props.onPressTitle
        }, this.props.title), this.props.subTitle ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: [subtitleTextStyle, this.props.subtitleStyle],
          allowFontScaling: this.props.allowFontScaling,
          onPress: this.props.onPressTitle
        }, this.props.subTitle) : null), _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
          onPress: this.props.onPressRight2,
          style: [styles.img, {
            marginRight: 0,
            height: this.props.onPressRight2 ? imgHeight : 0
          }],
          source: share_n,
          highlightedSource: share_p
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressRight2 ? this.props.accessible : false,
          accessibilityLabel: this.props.right2AccessibilityLabel,
          accessibilityHint: this.props.right2AccessibilityHint
        }))), this.props.rightText ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNativeUiKitten.RkButton, (0, _extends2.default)({
          onPress: this.props.onPressRight,
          contentStyle: [leftRightTextStyle, this.props.rightTextStyle],
          style: [leftRightTextStyle, {
            height: this.props.onPressRight ? titleHeight : 0,
            width: rightWidth || 56
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressRight ? this.props.accessible : false,
          accessibilityLabel: this.props.rightAccessibilityLabel || this.props.rightText,
          accessibilityHint: this.props.rightAccessibilityHint
        })), this.props.rightText), this.props.showDot && _react.default.createElement(_reactNative.Image, {
          style: [styles.dot],
          resizeMode: "contain",
          source: message
        })) : _react.default.createElement(_reactNative.View, null, _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
          onPress: this.props.onPressRight,
          style: [styles.img, {
            height: this.props.onPressRight ? imgHeight : 0
          }],
          source: more_n,
          highlightedSource: more_p
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressRight ? this.props.accessible : false,
          accessibilityLabel: this.props.rightAccessibilityLabel,
          accessibilityHint: this.props.rightAccessibilityHint
        }))), this.props.showDot && _react.default.createElement(_reactNative.Image, {
          style: [styles.dot],
          resizeMode: "contain",
          source: message
        })));
      }
    }]);
    return TitleBar;
  }(_react.Component);

  TitleBar.contextType = _configProvider.ConfigContext;
  TitleBar.propTypes = {
    type: _propTypes.default.oneOf(['dark', 'light']),
    leftTextStyle: _propTypes.default.any,
    rightTextStyle: _propTypes.default.any,
    style: _propTypes.default.any,
    leftText: _propTypes.default.string,
    rightText: _propTypes.default.string,
    onPressLeft: _propTypes.default.func,
    onPressLeft2: _propTypes.default.func,
    onPressRight: _propTypes.default.func,
    onPressRight2: _propTypes.default.func,
    onPressTitle: _propTypes.default.func,
    title: _propTypes.default.string,
    subTitle: _propTypes.default.string,
    titleStyle: _reactNative.Text.propTypes.style,
    subtitleStyle: _reactNative.Text.propTypes.style,
    allowFontScaling: _propTypes.default.bool,
    showDot: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    leftAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    leftAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    left2AccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    left2AccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    rightAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    rightAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    right2AccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    right2AccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  TitleBar.defaultProps = {
    type: 'light',
    allowFontScaling: true,
    titleStyle: {},
    subtitleStyle: {}
  };

  var styles = _reactNative.StyleSheet.create({
    lightTitleBarContainer: {
      flexDirection: 'row',
      width: width,
      alignItems: 'flex-end',
      height: containerHeight,
      backgroundColor: 'xmblack'
    },
    blackTitleBarContainer: {
      flexDirection: 'row',
      width: width,
      alignItems: 'flex-end',
      height: containerHeight,
      backgroundColor: 'xmwhite'
    },
    textContainer: {
      minHeight: titleHeight,
      flex: 1,
      alignItems: 'stretch',
      justifyContent: 'center'
    },
    blackTitleText: {
      color: 'xm#000000cc',
      fontSize: 15,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    whiteTitleText: {
      color: 'xm#ffffffcc',
      fontSize: 15,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    blackSubtitleText: {
      color: 'xm#00000088',
      fontSize: 12,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    whiteSubtitleText: {
      color: 'xm#ffffff88',
      fontSize: 12,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    blackLeftRightText: {
      backgroundColor: 'xm#0000',
      color: 'xm#00000088',
      fontSize: 14,
      alignItems: 'center',
      justifyContent: 'center',
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    whiteLeftRightText: {
      backgroundColor: 'xm#0000',
      color: 'xm#ffffff88',
      fontSize: 14,
      alignItems: 'center',
      justifyContent: 'center',
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    img: {
      width: imgHeight,
      height: imgHeight,
      resizeMode: 'contain',
      marginHorizontal: marginH,
      marginVertical: marginV
    },
    dot: {
      position: 'absolute',
      width: dotSize,
      height: dotSize,
      resizeMode: 'contain',
      right: marginH,
      top: marginV
    }
  });

  var _default = TitleBar;
  exports.default = _default;
},22801,[14308,14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13696,11251,10918,22795,22426,22420,22423,22804,22807,22810,22813,22816,22819,22822,22825,22828,22831,22834,22837,22840,22843,22846,22849,22852]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "3ac342e621b9ffa0c200ab5ec4651fd5",
    "name": "std_tittlebar_main_device_back_normal",
    "type": "png"
  });
},22804,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "3b5c33e031f042072bfd34104bdd2f0e",
    "name": "std_tittlebar_main_device_back_white_normal",
    "type": "png"
  });
},22807,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "03d2a427cd538718957f203472bb1909",
    "name": "std_tittlebar_main_device_back_press",
    "type": "png"
  });
},22810,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "e2cd9dae60d00bdaaf370d0ce935bcd1",
    "name": "std_tittlebar_main_device_back_white_press",
    "type": "png"
  });
},22813,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 87,
    "height": 87,
    "scales": [1],
    "hash": "1f87d21e189f8407cf2193f497a3009b",
    "name": "std_tittlebar_main_device_back2_normal",
    "type": "png"
  });
},22816,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 87,
    "height": 87,
    "scales": [1],
    "hash": "245580044e6fde980a40017d0a84b8a0",
    "name": "std_titlebar_setting_back_normal",
    "type": "png"
  });
},22819,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 87,
    "height": 87,
    "scales": [1],
    "hash": "58b0bbb3fe18c3f9f403a7462df13b16",
    "name": "std_tittlebar_main_device_back2_press",
    "type": "png"
  });
},22822,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 87,
    "height": 87,
    "scales": [1],
    "hash": "04afc8dcfd074448cf6df1dd0ccc1834",
    "name": "std_titlebar__setting_back_press",
    "type": "png"
  });
},22825,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "c1de7bdd3f696c32718913b813324785",
    "name": "std_tittlebar_main_device_share_normal",
    "type": "png"
  });
},22828,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "f7e6cada2c77978f5ba39df82526dbd4",
    "name": "std_tittlebar_main_device_share_white_normal",
    "type": "png"
  });
},22831,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "94f64d86d775616685fbd8d0551af687",
    "name": "std_tittlebar_main_device_share_press",
    "type": "png"
  });
},22834,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "44be9deb2614f593e6ef99df7db8de8e",
    "name": "std_tittlebar_main_device_share_white_press",
    "type": "png"
  });
},22837,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "a5bb68ab122b74c581fd2454e5218cea",
    "name": "std_tittlebar_main_device_more_normal",
    "type": "png"
  });
},22840,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "24d81d84c61d4181f21e615e4a6d3918",
    "name": "std_tittlebar_main_device_more_white_normal",
    "type": "png"
  });
},22843,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "1fe8ece2871c461ef1644d01f207c332",
    "name": "std_tittlebar_main_device_more_press",
    "type": "png"
  });
},22846,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "d6f11d70982f64f3a70d831f321355fe",
    "name": "std_tittlebar_main_device_more_white_press",
    "type": "png"
  });
},22849,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 30,
    "height": 30,
    "scales": [1],
    "hash": "522ed59eaa31441e8b11ae8bab872663",
    "name": "std_tittlebar_main_device_massage_point",
    "type": "png"
  });
},22852,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "NavigationBar", {
    enumerable: true,
    get: function get() {
      return _NavigationBar.default;
    }
  });

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22855,[14305,22858]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Images = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

  var _font = _$$_REQUIRE(_dependencyMap[18]);

  var TYPE = {
    DARK: 'dark',
    LIGHT: 'light'
  };
  Object.freeze(TYPE);
  var ICON = {
    ADD: 'add',
    BACK: 'back',
    CLOSE: 'close',
    COLLECT: 'collect',
    COMPLETE: 'complete',
    DELETE: 'delete',
    DETAIL: 'detail',
    MORE: 'more',
    NEXT: 'next',
    PROFILE: 'profile',
    QR: 'qr',
    SEARCH: 'search',
    SELECT_ALL: 'select_all',
    SELECTED_ALL: 'selected_all',
    SETTING: 'setting',
    SHARE: 'share',
    EDIT: 'edit',
    RECORD: 'record',
    ORIENTATION: 'orientation',
    SAVE: 'save'
  };
  Object.freeze(ICON);
  var _Images$navigation = _Images.default.navigation,
      light = _Images$navigation.light,
      dark = _Images$navigation.dark,
      dot = _Images$navigation.dot;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var navigationBarHeightThin = 53;
  var navigationBarHeightFat = 65;
  var paddingHorizontal = 9;
  var iconSize = 40;
  var lightTitleColor = 'xm#000000';
  var darkTitleColor = 'xm#ffffff';
  var colorSubtitleNormal = new _DynamicColor.default('rgba(0,0,0,0.60)', 'rgba(255,255,255,0.50)');
  var colorSubtitleWarning = new _DynamicColor.default('#f43f31', '#d92719');
  var colorSubtitleException = new _DynamicColor.default('#f5a623', '#db8e0d');
  var COLOR_SUBTITLE = {
    normal: colorSubtitleNormal,
    warning: colorSubtitleWarning,
    exception: colorSubtitleException
  };

  var NavigationBar = function (_Component) {
    (0, _inherits2.default)(NavigationBar, _Component);

    function NavigationBar(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, NavigationBar);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NavigationBar).call(this, props, context));
      (0, _reportDecorator.referenceReport)('NavigationBar');
      return _this;
    }

    (0, _createClass2.default)(NavigationBar, [{
      key: "getIconsOfType",
      value: function getIconsOfType(arr) {
        var icons = this.isDarkStyle ? dark : light;
        return arr.map(function (item) {
          var key = item.key,
              disable = item.disable;

          if (disable) {
            item.source = icons[key] ? icons[key].disable : null;
            item.highlightedSource = null;
          } else {
            item.source = icons[key] ? icons[key].normal : null;
            item.highlightedSource = icons[key] ? icons[key].press : null;
          }

          return item;
        }).filter(function (item) {
          return item.source;
        });
      }
    }, {
      key: "renderIcons",
      value: function renderIcons(arr) {
        var _this2 = this;

        var icons = (arr || []).slice(0, 2);
        return icons.map(function (icon, i) {
          if (!icon.source) {
            return _react.default.createElement(_reactNative.View, {
              key: icon.key + i,
              style: {
                width: iconSize
              }
            });
          }

          return _react.default.createElement(_reactNative.View, {
            key: icon.key + i,
            style: {
              width: iconSize,
              height: iconSize
            }
          }, icon.showDot ? _react.default.createElement(_reactNative.Image, {
            style: styles.dot,
            resizeMode: "contain",
            source: dot
          }) : null, _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
            disabled: !!icon.disable,
            onPress: icon.onPress,
            style: styles.icon,
            source: icon.source,
            highlightedSource: icon.highlightedSource
          }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, icon, {
            accessible: icon.accessible || _this2.props.accessible,
            accessibilityLabel: icon.accessibilityLabel,
            accessibilityHint: icon.accessibilityHint
          })))));
        });
      }
    }, {
      key: "renderTitle",
      value: function renderTitle() {
        var _this$props = this.props,
            title = _this$props.title,
            subtitle = _this$props.subtitle,
            subtitleStyle = _this$props.subtitleStyle,
            titleStyle = _this$props.titleStyle,
            onPressTitle = _this$props.onPressTitle;
        var titleColor = {
          color: this.isDarkStyle ? darkTitleColor : lightTitleColor
        };
        var newSubtitleStyle = (0, _objectSpread2.default)({
          colorType: 'normal',
          fontSize: 14,
          fontFamily: 'MI-LANTING--GBK1-Light'
        }, subtitleStyle);
        var customSubtitleStyle = {
          fontFamily: newSubtitleStyle.fontFamily,
          fontSize: newSubtitleStyle.fontSize,
          lineHeight: newSubtitleStyle.fontSize * 1.3,
          color: this.isDarkStyle ? COLOR_SUBTITLE[newSubtitleStyle.colorType].dark : COLOR_SUBTITLE[newSubtitleStyle.colorType][this.context.colorScheme]
        };
        var newTitleStyle = (0, _objectSpread2.default)({
          fontSize: 18
        }, titleStyle);
        var customTitleStyle = {
          fontSize: newTitleStyle.fontSize,
          lineHeight: newTitleStyle.fontSize * 1.3
        };
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.titleContainer]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.header
        })), _react.default.isValidElement(title) ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          numberOfLines: this.props.titleNumberOfLines,
          style: [styles.titleView, titleColor],
          onPress: onPressTitle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), title || '') : _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: this.props.titleNumberOfLines,
          allowFontScaling: this.props.allowFontScaling,
          style: [styles.title, titleColor, customTitleStyle],
          onPress: onPressTitle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), title || ''), subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.subtitle, customSubtitleStyle],
          numberOfLines: this.props.subtitleNumberOfLines,
          allowFontScaling: this.props.allowFontScaling,
          onPress: onPressTitle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), subtitle) : null);
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        this.updateStyleType(this.props, newProps);
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        this.updateStyleType(this.props, null);
      }
    }, {
      key: "updateStyleType",
      value: function updateStyleType(props, newProps) {
        var newIsDartStyle = (newProps ? newProps.type : props.type) === TYPE.DARK;
        this.shouldKeepColor = false;

        if (this.context.colorScheme === 'dark') {
          if (newIsDartStyle) {
            this.shouldKeepColor = true;
          }

          newIsDartStyle = true;
        } else {
          newIsDartStyle = this.context.colorScheme === 'dark' ? true : (newProps ? newProps.type : props.type) === TYPE.DARK;
        }

        if (newIsDartStyle !== this.isDarkStyle) {
          this.isDarkStyle = newIsDartStyle;

          _reactNative.StatusBar.setBarStyle(this.isDarkStyle ? 'light-content' : 'dark-content');

          if (_reactNative.Platform.OS == 'android') {
            _reactNative.StatusBar.setTranslucent(true);
          }
        }
      }
    }, {
      key: "render",
      value: function render() {
        var leftIcons = this.getIconsOfType(this.props.left);
        var rightIcons = this.getIconsOfType(this.props.right);
        leftIcons.length < rightIcons.length && leftIcons.push({});
        leftIcons.length > rightIcons.length && rightIcons.unshift({});
        var containerHeight = this.props.subtitle ? navigationBarHeightFat : navigationBarHeightThin;
        var backgroundColor = this.props.backgroundColor ? this.props.backgroundColor : this.isDarkStyle ? 'xm#000000' : 'xm#ffffff';

        if (this.shouldKeepColor && this.props.backgroundColor) {
          backgroundColor = "xm" + this.props.backgroundColor;
        }

        var containerStyle = {
          backgroundColor: backgroundColor
        };
        return _react.default.createElement(_reactNative.SafeAreaView, {
          style: [containerStyle, {
            paddingTop: _reactNative.StatusBar.currentHeight
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            minHeight: containerHeight
          }, this.props.useOrientation ? {} : {
            width: width
          }]
        }, this.renderIcons(leftIcons), this.renderTitle(), this.renderIcons(rightIcons)));
      }
    }]);
    return NavigationBar;
  }(_react.Component);

  NavigationBar.propTypes = {
    type: _propTypes.default.oneOf([TYPE.DARK, TYPE.LIGHT]),
    useOrientation: _propTypes.default.bool,
    style: _propTypes.default.object,
    left: _propTypes.default.arrayOf(_propTypes.default.shape({
      key: _propTypes.default.string,
      onPress: _propTypes.default.func,
      disable: _propTypes.default.bool,
      accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    right: _propTypes.default.array,
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    subtitleStyle: _propTypes.default.shape({
      fontFamily: _propTypes.default.string,
      fontSize: _propTypes.default.number,
      colorType: _propTypes.default.oneOf(['normal', 'warning', 'exception'])
    }),
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    titleStyle: _propTypes.default.shape({
      fontSize: _propTypes.default.number
    }),
    allowFontScaling: _propTypes.default.bool,
    backgroundColor: _propTypes.default.any,
    onPressTitle: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  NavigationBar.defaultProps = {
    type: TYPE.LIGHT,
    left: [],
    right: [],
    subtitleStyle: {
      fontFamily: 'sans-serif',
      colorType: 'normal',
      fontSize: 14
    },
    allowFontScaling: true,
    titleNumberOfLines: 1,
    subtitleNumberOfLines: 1,
    useOrientation: false,
    titleStyle: {
      fontSize: 18
    }
  };
  NavigationBar.TYPE = TYPE;
  NavigationBar.ICON = ICON;
  NavigationBar.contextType = _configProvider.ConfigContext;

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingHorizontal: paddingHorizontal,
      flexDirection: 'row',
      alignItems: 'center'
    },
    titleContainer: {
      flex: 1,
      alignSelf: 'center',
      justifyContent: 'center',
      alignItems: 'stretch',
      marginHorizontal: 5
    },
    title: (0, _objectSpread2.default)({
      fontSize: 18,
      lineHeight: 24,
      textAlignVertical: 'center',
      textAlign: 'center'
    }, _font.FontPrimary),
    titleView: (0, _objectSpread2.default)({
      fontSize: 16,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    }, _font.FontPrimary),
    subtitle: (0, _objectSpread2.default)({
      fontSize: 14,
      lineHeight: 18,
      textAlignVertical: 'center',
      textAlign: 'center'
    }, _font.FontSecondary),
    icon: {
      position: 'absolute',
      width: iconSize,
      height: iconSize
    },
    dot: {
      width: iconSize,
      height: iconSize
    }
  });

  var _default = NavigationBar;
  exports.default = _default;
},22858,[14308,14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22435,22456,22795,22426,22420,22423,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Card", {
    enumerable: true,
    get: function get() {
      return _Card.default;
    }
  });
  Object.defineProperty(exports, "CardProps", {
    enumerable: true,
    get: function get() {
      return _Card.CardProps;
    }
  });
  Object.defineProperty(exports, "MHCard", {
    enumerable: true,
    get: function get() {
      return _MHCard.default;
    }
  });
  Object.defineProperty(exports, "MHCardProps", {
    enumerable: true,
    get: function get() {
      return _MHCard.MHCardProps;
    }
  });
  Object.defineProperty(exports, "ModeCard", {
    enumerable: true,
    get: function get() {
      return _ModeCard.default;
    }
  });
  Object.defineProperty(exports, "ModeCardProps", {
    enumerable: true,
    get: function get() {
      return _ModeCard.ModeCardProps;
    }
  });
  Object.defineProperty(exports, "IndependentCard", {
    enumerable: true,
    get: function get() {
      return _IndependentCard.default;
    }
  });
  Object.defineProperty(exports, "GearCard", {
    enumerable: true,
    get: function get() {
      return _GearCard.default;
    }
  });
  Object.defineProperty(exports, "ListCard", {
    enumerable: true,
    get: function get() {
      return _ListCard.default;
    }
  });

  var _Card = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  var _MHCard = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));

  var _ModeCard = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var _IndependentCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _GearCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _ListCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
},22861,[14305,14308,22864,22870,22873,22876,23299,23302]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeShadow = _$$_REQUIRE(_dependencyMap[10]);

  var _CardBase = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var DURATION = 250;
  var DEFAULT_STYLE = {
    HEIGHT: 66,
    WIDTH: width - 30,
    RADIUS: 8,
    MARGIN_TOP: {
      marginTop: 15
    }
  };

  var Card = function (_React$Component) {
    (0, _inherits2.default)(Card, _React$Component);

    function Card(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, Card);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Card).call(this, props, context));
      (0, _reportDecorator.referenceReport)('Card');
      _this.state = {
        showShadow: _this.props.visible && _this.props.showShadow
      };
      return _this;
    }

    (0, _createClass2.default)(Card, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        var _this2 = this;

        if (newProps.showShadow === false) return;
        if (newProps.visible === this.props.visible) return;

        if (newProps.visible === false) {
          this.setState({
            showShadow: false
          });
        } else if (newProps.visible === true) {
          setTimeout(function () {
            return _this2.setState({
              showShadow: true
            });
          }, DURATION);
        }
      }
    }, {
      key: "renderCardIOS",
      value: function renderCardIOS() {
        var shadowIOS = this.props.showShadow ? {
          position: 'relative',
          shadowColor: this.props.shadowColor,
          shadowOpacity: this.props.shadowOpacity,
          shadowOffset: {
            width: 0,
            height: 8
          }
        } : {};

        var cardStyle = _reactNative.StyleSheet.flatten([{}, DEFAULT_STYLE.MARGIN_TOP, this.props.cardStyle, shadowIOS]);

        return _react.default.createElement(_CardBase.default, (0, _extends2.default)({}, this.props, {
          cardStyle: cardStyle
        }));
      }
    }, {
      key: "renderCardAndroid",
      value: function renderCardAndroid() {
        if (!this.state.showShadow) {
          var cardStyle = _reactNative.StyleSheet.flatten([{}, DEFAULT_STYLE.MARGIN_TOP, this.props.cardStyle]);

          return _react.default.createElement(_CardBase.default, (0, _extends2.default)({}, this.props, {
            cardStyle: cardStyle
          }));
        } else {
          var _this$props$cardStyle = this.props.cardStyle,
              _width = _this$props$cardStyle.width,
              height = _this$props$cardStyle.height,
              borderRadius = _this$props$cardStyle.borderRadius;

          var _this$getCorrectStyle = this.getCorrectStyle(),
              shadowAndroidStyle = _this$getCorrectStyle.shadowAndroidStyle,
              _cardStyle = _this$getCorrectStyle.cardStyle;

          var shadowAndroid = {
            width: _width || DEFAULT_STYLE.WIDTH,
            height: height || DEFAULT_STYLE.HEIGHT,
            radius: borderRadius || DEFAULT_STYLE.RADIUS,
            color: this.props.shadowColor,
            border: 10,
            opacity: this.props.shadowOpacity,
            x: 0,
            y: 6,
            style: shadowAndroidStyle
          };
          return _react.default.createElement(_reactNativeShadow.BoxShadow, {
            setting: shadowAndroid
          }, _react.default.createElement(_CardBase.default, (0, _extends2.default)({}, this.props, {
            cardStyle: _cardStyle
          })));
        }
      }
    }, {
      key: "getCorrectStyle",
      value: function getCorrectStyle() {
        var _this3 = this;

        var shadowAndroidStyle = (0, _extends2.default)({}, DEFAULT_STYLE.MARGIN_TOP);
        var cardStyle = {};
        Object.keys(this.props.cardStyle).forEach(function (key) {
          if (key.toString().startsWith('margin')) {
            shadowAndroidStyle[key] = _this3.props.cardStyle[key];
          } else {
            cardStyle[key] = _this3.props.cardStyle[key];
          }
        });
        return {
          shadowAndroidStyle: shadowAndroidStyle,
          cardStyle: cardStyle
        };
      }
    }, {
      key: "render",
      value: function render() {
        return _reactNative.Platform.select({
          android: this.renderCardAndroid(),
          ios: this.renderCardIOS()
        });
      }
    }]);
    return Card;
  }(_react.default.Component);

  Card.propTypes = {
    innerView: _propTypes.default.object,
    icon: _propTypes.default.number,
    text: _propTypes.default.string,
    visible: _propTypes.default.bool,
    showDismiss: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    dismiss: _propTypes.default.func,
    showShadow: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    cardStyle: _propTypes.default.object,
    iconStyle: _propTypes.default.object,
    textStyle: _propTypes.default.object,
    underlayColor: _propTypes.default.string,
    shadowColor: _propTypes.default.string,
    shadowOpacity: _propTypes.default.number,
    unlimitedHeightEnable: _propTypes.default.bool,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    dismissAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    dismissAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Card.defaultProps = {
    visible: true,
    showDismiss: false,
    disabled: false,
    showShadow: true,
    cardStyle: {},
    shadowColor: '#000',
    shadowOpacity: 0.03,
    unlimitedHeightEnable: false,
    allowFontScaling: true
  };
  var _default = Card;
  exports.default = _default;
},22864,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13699,22867,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var DURATION_OUT = 250;
  var DURATION_IN = 250;
  var DEFAULT_STYLE = {
    MARGIN_H: 15,
    HEIGHT: 66,
    WIDTH: width - 30,
    ICON_SIZE: 35,
    CLOSE_AREA: 30,
    CLOSE_SIZE: 20
  };

  var CardBase = function (_React$Component) {
    (0, _inherits2.default)(CardBase, _React$Component);

    function CardBase(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, CardBase);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CardBase).call(this, props, context));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onPress = _this$props.onPress;

        if (disabled) {
          return;
        }

        if (onPress && actionName === 'activate') {
          onPress();
        }
      };

      var _this$props$cardStyle = _this.props.cardStyle,
          height = _this$props$cardStyle.height,
          marginTop = _this$props$cardStyle.marginTop;
      _this.cardHeight = height || DEFAULT_STYLE.HEIGHT;
      var initValue = _this.props.visible ? 1 : 0;
      _this.height = new _reactNative.Animated.Value(initValue);
      _this.opacity = new _reactNative.Animated.Value(initValue);
      _this.marginTop = marginTop || 0;
      return _this;
    }

    (0, _createClass2.default)(CardBase, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.height.addListener(function (e) {
          _this2.refCard && _this2.refCard.setNativeProps({
            marginTop: _this2.marginTop * e.value
          });
        });
      }
    }, {
      key: "renderInner",
      value: function renderInner() {
        if (this.props.innerView === undefined) {
          var theme = this.context.theme;
          var _this$props2 = this.props,
              icon = _this$props2.icon,
              text = _this$props2.text,
              iconStyle = _this$props2.iconStyle,
              textStyle = _this$props2.textStyle;
          var textLine = this.props.numberOfLines == undefined ? 1 : this.props.numberOfLines;
          if (textLine < 0) textLine = 0;
          return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({
            style: [styles.innerContainer, {
              opacity: this.opacity
            }]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: this.props.onPress ? _accessibilityHelper.AccessibilityRoles.button : _accessibilityHelper.AccessibilityRoles.text,
            accessibilityHint: this.props.accessibilityHint || (this.props.onPress ? text : ''),
            accessibilityState: {
              disabled: !!this.props.disabled
            }
          }), {
            accessibilityActions: [{
              name: 'activate'
            }],
            onAccessibilityAction: this.onAccessibilityAction
          }), icon ? _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
            style: [styles.innerIcon, iconStyle],
            source: icon,
            resizeMode: "contain"
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          }))) : null, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: [styles.innerText, {
              color: theme.colorBlack
            }, textStyle],
            numberOfLines: textLine,
            ellipsizeMode: "tail",
            allowFontScaling: this.props.allowFontScaling
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: true
          })), text || ''));
        }

        return _react.default.createElement(_reactNative.Animated.View, {
          style: [{
            flex: 1
          }, {
            opacity: this.opacity
          }]
        }, this.props.innerView);
      }
    }, {
      key: "renderClose",
      value: function renderClose() {
        var _this3 = this;

        if (!this.props.showDismiss) return null;
        return _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: styles.closeArea,
          underlayColor: "transparent",
          onPress: function onPress() {
            return _this3.dismiss();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.dismissAccessibilityLabel || 'close',
          accessibilityHint: this.props.dismissAccessibilityHint || 'close'
        })), _react.default.createElement(_reactNative.Animated.Image, {
          style: [styles.close, {
            opacity: this.opacity
          }],
          source: _resources.Images.common.close
        }));
      }
    }, {
      key: "getCorrectStyle",
      value: function getCorrectStyle(cardStyle) {
        var animatedViewStyle = {};
        var containerStyle = {};
        Object.keys(cardStyle).forEach(function (key) {
          if (key.toString().startsWith('margin') || key.toString() === 'width') {
            animatedViewStyle[key] = cardStyle[key];
          } else {
            containerStyle[key] = cardStyle[key];
          }
        });
        return {
          animatedViewStyle: animatedViewStyle,
          containerStyle: containerStyle
        };
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var theme = this.context.theme;
        var toValue = this.props.visible ? 1 : 0;
        var underlayColor = theme == null ? undefined : theme.listUnderlayColor;
        if (this.props.underlayColor) underlayColor = this.props.underlayColor;

        if (!this.props.visible) {
          _reactNative.Animated.parallel([_reactNative.Animated.timing(this.height, {
            toValue: toValue,
            duration: DURATION_OUT,
            easing: _reactNative.Easing.ease
          }), _reactNative.Animated.timing(this.opacity, {
            toValue: toValue,
            duration: 100,
            easing: _reactNative.Easing.ease
          })], {
            stopTogether: false
          }).start();
        } else {
          _reactNative.Animated.parallel([_reactNative.Animated.timing(this.opacity, {
            toValue: toValue,
            duration: 125,
            easing: _reactNative.Easing.ease,
            delay: 125
          }), _reactNative.Animated.timing(this.height, {
            toValue: toValue,
            duration: DURATION_IN,
            easing: _reactNative.Easing.ease
          })]).start();
        }

        var cardStyle = _reactNative.StyleSheet.flatten([styles.container, this.props.cardStyle]);

        var _this$getCorrectStyle = this.getCorrectStyle(cardStyle),
            animatedViewStyle = _this$getCorrectStyle.animatedViewStyle,
            containerStyle = _this$getCorrectStyle.containerStyle;

        return _react.default.createElement(_reactNative.Animated.View, {
          ref: function ref(_ref2) {
            _this4.refCard = _ref2;
          },
          style: [animatedViewStyle, {
            opacity: this.opacity,
            height: this.props.unlimitedHeightEnable ? undefined : this.height.interpolate({
              inputRange: [0, 1],
              outputRange: [0, this.cardHeight]
            })
          }]
        }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: [{
            backgroundColor: theme.colorForeground
          }, containerStyle, {
            flex: 1
          }],
          underlayColor: underlayColor,
          disabled: this.props.disabled,
          onPress: this.props.onPress
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, this.renderInner(), this.renderClose())));
      }
    }, {
      key: "dismiss",
      value: function dismiss() {
        this.props.dismiss && this.props.dismiss();
      }
    }]);
    return CardBase;
  }(_react.default.Component);

  exports.default = CardBase;
  CardBase.contextType = _configProvider.ConfigContext;
  CardBase.propTypes = {
    innerView: _propTypes.default.object,
    icon: _propTypes.default.number,
    text: _propTypes.default.string,
    showDismiss: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    dismiss: _propTypes.default.func,
    visible: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    cardStyle: _propTypes.default.object,
    iconStyle: _propTypes.default.object,
    textStyle: _propTypes.default.object,
    underlayColor: _propTypes.default.string,
    unlimitedHeightEnable: _propTypes.default.bool,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    dismissAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    dismissAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  CardBase.defaultProps = {
    showDismiss: false,
    disabled: false,
    visible: true,
    unlimitedHeightEnable: false,
    allowFontScaling: true
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: DEFAULT_STYLE.WIDTH
    },
    innerContainer: {
      flex: 1,
      alignItems: 'center',
      flexDirection: 'row',
      paddingHorizontal: DEFAULT_STYLE.MARGIN_H
    },
    innerIcon: {
      width: DEFAULT_STYLE.ICON_SIZE,
      height: DEFAULT_STYLE.ICON_SIZE,
      marginRight: DEFAULT_STYLE.MARGIN_H
    },
    innerText: {
      flex: 1,
      fontSize: 14
    },
    closeArea: {
      width: DEFAULT_STYLE.CLOSE_AREA,
      height: DEFAULT_STYLE.CLOSE_AREA,
      position: 'absolute',
      top: 0,
      right: 0,
      justifyContent: 'center',
      alignItems: 'center'
    },
    close: {
      width: DEFAULT_STYLE.CLOSE_SIZE,
      height: DEFAULT_STYLE.CLOSE_SIZE
    }
  });
},22867,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22426,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var CARD_TYPE = {
    NORMAL: 'normal',
    SWITCH: 'switch'
  };
  Object.freeze(CARD_TYPE);
  var CARD_RADIUS_TYPE = {
    ALL: 'all',
    NONE: 'none',
    TOP: 'top',
    BOTTOM: 'bottom'
  };
  Object.freeze(CARD_RADIUS_TYPE);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var cardMargin = 10;
  var cardWidth = width - 20;
  var cardHeight = 80;
  var cardPadding = 20;
  var ICON_SIZE = 40;

  var ARROW_SIZE = _reactNative.Platform.select({
    android: 26,
    ios: 24
  });

  var disabledOpacity = 0.35;

  var MHCard = function (_React$Component) {
    (0, _inherits2.default)(MHCard, _React$Component);

    function MHCard(props) {
      var _CARD_RADIUS_TYPE$ALL;

      var _this;

      (0, _classCallCheck2.default)(this, MHCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MHCard).call(this, props));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            cardType = _this$props.cardType,
            onPress = _this$props.onPress,
            onValueChange = _this$props.onValueChange,
            switchValue = _this$props.switchValue;

        if (disabled) {
          return;
        }

        if (actionName === 'activate' && cardType === CARD_TYPE.SWITCH && typeof onValueChange === 'function') {
          onValueChange(!switchValue);
        }

        if (actionName === 'activate' && cardType === CARD_TYPE.NORMAL && typeof onPress === 'function') {
          onPress();
        }
      };

      (0, _reportDecorator.referenceReport)('MHCard');
      _this.radiusStyle = (_CARD_RADIUS_TYPE$ALL = {}, (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.ALL, {
        borderRadius: 10
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.NONE, {
        borderRadius: 0
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.TOP, {
        borderTopLeftRadius: 10,
        borderTopRightRadius: 10
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.BOTTOM, {
        borderBottomLeftRadius: 10,
        borderBottomRightRadius: 10
      }), _CARD_RADIUS_TYPE$ALL)[_this.props.cardRadiusType];
      _this.cardStyle = _reactNative.StyleSheet.flatten([_this.radiusStyle, {
        width: cardWidth,
        height: cardHeight,
        marginTop: _this.props.marginTop
      }]);
      return _this;
    }

    (0, _createClass2.default)(MHCard, [{
      key: "renderInnerView",
      value: function renderInnerView() {
        var theme = this.context.theme;
        var opacityStyle = {
          opacity: this.props.disabled ? disabledOpacity : 1
        };
        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 1 : this.props.subtitleNumberOfLines;
        if (subtitleLine < 0) subtitleLine = 0;
        var rightTextLine = this.props.rightTextNumberOfLines == undefined ? 2 : this.props.rightTextNumberOfLines;
        if (rightTextLine < 0) rightTextLine = 0;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, this.radiusStyle, opacityStyle, this.props.style]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: this.props.cardType === CARD_TYPE.SWITCH ? _accessibilityHelper.AccessibilityRoles.switch : this.props.onPress ? _accessibilityHelper.AccessibilityRoles.button : _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: this.props.cardType === CARD_TYPE.SWITCH ? {
            disabled: !!this.props.disabled,
            checked: this.props.switchValue
          } : {
            disabled: !!this.props.disabled
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.iconContainer, this.props.iconContainerStyle]
        }, _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
          style: [styles.icon, this.props.iconStyle],
          source: this.props.icon,
          resizeMode: "contain"
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })))), _react.default.createElement(_reactNative.View, {
          style: styles.textContainer
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [_resources.Styles.common.title, this.props.unlimitedHeightEnable ? {
            height: undefined,
            lineHeight: undefined
          } : {}, this.props.titleStyle],
          numberOfLines: titleLine
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title || ''), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.subtitle, {
            color: theme.colorGrayNormal
          }, this.props.unlimitedHeightEnable ? {
            height: undefined,
            lineHeight: undefined
          } : {}, this.props.subtitleStyle],
          numberOfLines: subtitleLine
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle) : null), this.props.rightText ? _react.default.createElement(_reactNative.View, {
          style: {
            maxWidth: '33%'
          }
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.rightText, {
            color: theme.colorBlack
          }, this.props.unlimitedHeightEnable ? {
            height: undefined,
            lineHeight: undefined
          } : {}, this.props.rightTextStyle],
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: rightTextLine
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.rightText || '')) : null), this.renderRight());
      }
    }, {
      key: "renderRight",
      value: function renderRight() {
        if (this.props.cardType === CARD_TYPE.NORMAL) {
          if (this.props.hideArrow) return null;
          return _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
            style: styles.arrow,
            source: _resources.Images.common.right_arrow,
            resizeMode: "contain"
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })));
        }

        if (this.props.cardType === CARD_TYPE.SWITCH) {
          return _react.default.createElement(_Switch.default, (0, _extends2.default)({
            value: this.props.switchValue
          }, this.props, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })));
        }
      }
    }, {
      key: "render",
      value: function render() {
        var cardStyle = _reactNative.StyleSheet.flatten([this.cardStyle, !this.props.allowFontScaling ? {
          height: undefined
        } : {}]);

        return _react.default.createElement(_Card.default, (0, _extends2.default)({
          innerView: this.renderInnerView(),
          cardStyle: cardStyle
        }, this.props));
      }
    }]);
    return MHCard;
  }(_react.default.Component);

  MHCard.contextType = _configProvider.ConfigContext;
  MHCard.propTypes = {
    cardType: _propTypes.default.oneOf([CARD_TYPE.NORMAL, CARD_TYPE.SWITCH]),
    cardRadiusType: _propTypes.default.oneOf([CARD_RADIUS_TYPE.ALL, CARD_RADIUS_TYPE.NONE, CARD_RADIUS_TYPE.TOP, CARD_RADIUS_TYPE.BOTTOM]),
    style: _propTypes.default.object,
    iconContainerStyle: _propTypes.default.object,
    icon: _propTypes.default.number.isRequired,
    iconStyle: _propTypes.default.object,
    title: _propTypes.default.string.isRequired,
    titleStyle: _propTypes.default.object,
    subtitle: _propTypes.default.string,
    subtitleStyle: _propTypes.default.object,
    rightText: _propTypes.default.string,
    rightTextStyle: _propTypes.default.object,
    hideArrow: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    switchValue: _propTypes.default.bool,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    onValueChange: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    visible: _propTypes.default.bool,
    showShadow: _propTypes.default.bool,
    marginTop: _propTypes.default.number,
    unlimitedHeightEnable: _propTypes.default.bool,
    allowFontScaling: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    rightTextNumberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  MHCard.defaultProps = {
    cardType: CARD_TYPE.NORMAL,
    cardRadiusType: CARD_RADIUS_TYPE.ALL,
    icon: _resources.Images.common.mihome,
    hideArrow: false,
    switchValue: false,
    disabled: false,
    visible: true,
    showShadow: false,
    marginTop: 0,
    unlimitedHeightEnable: false,
    allowFontScaling: true
  };
  MHCard.CARD_TYPE = CARD_TYPE;
  MHCard.CARD_RADIUS_TYPE = CARD_RADIUS_TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      paddingHorizontal: cardPadding,
      flexDirection: 'row',
      alignItems: 'center'
    },
    iconContainer: {
      width: ICON_SIZE,
      height: ICON_SIZE,
      justifyContent: 'center',
      alignItems: 'center'
    },
    icon: {
      width: ICON_SIZE,
      height: ICON_SIZE,
      borderRadius: 20
    },
    textContainer: {
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center',
      marginLeft: 14
    },
    titleContainer: {
      flex: 1,
      justifyContent: 'center'
    },
    subtitle: {
      fontSize: 12,
      lineHeight: 16
    },
    rightText: {
      paddingLeft: 10,
      textAlign: 'right',
      fontSize: 16
    },
    arrow: {
      width: ARROW_SIZE,
      height: ARROW_SIZE
    }
  });

  var _default = MHCard;
  exports.default = _default;
},22870,[14305,14344,14317,14320,14323,14371,14377,14386,10318,10297,10033,22453,22864,22450,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _resources = _$$_REQUIRE(_dependencyMap[13]);

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

  var radiusValue = 10;
  var iconLength = 56;
  var padding3 = 30;
  var padding4 = 28;
  var padding5 = 20;
  var CARD_RADIUS_TYPE = {
    ALL: 'all',
    NONE: 'none',
    TOP: 'top',
    BOTTOM: 'bottom'
  };

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var ModeCard = function (_Component) {
    (0, _inherits2.default)(ModeCard, _Component);

    function ModeCard(props) {
      var _CARD_RADIUS_TYPE$ALL;

      var _this;

      (0, _classCallCheck2.default)(this, ModeCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ModeCard).call(this, props));

      _this.createModesRN = function () {
        var _this$props = _this.props,
            modes = _this$props.modes,
            descriptionStyle = _this$props.descriptionStyle,
            activeDescriptionStyle = _this$props.activeDescriptionStyle,
            accessible = _this$props.accessible;
        var theme = _this.context.theme;
        var length = modes.length;
        var modeStyle = {};
        var iconStyle = {};

        if (length === 4) {
          iconLength = 50;
          modeStyle = {
            width: iconLength,
            marginRight: 33
          };
          iconStyle = {
            width: iconLength,
            height: iconLength
          };
        } else if (length === 5) {
          iconLength = 46;
          modeStyle = {
            width: iconLength,
            marginRight: 17
          };
          iconStyle = {
            width: iconLength,
            height: iconLength
          };
        }

        var modesRN = modes.map(function (mode, index) {
          var isDisabled = mode.isDisabled,
              isActive = mode.isActive,
              icon = mode.icon,
              description = mode.description,
              isPressing = mode.isPressing,
              accessibilityLabel = mode.accessibilityLabel,
              accessibilityHint = mode.accessibilityHint;
          var iconSource = -1;
          var iconOpacity = 1;
          var descriptionRN = null;
          var last = {};
          var activeDescription = {};
          var descriptionOpacity = 1;

          if (isDisabled && isActive) {
            iconSource = icon.activeDisabled;
          } else if (isDisabled) {
            iconSource = icon.normal;
            iconOpacity = 0.3;
          } else if (isActive) {
            iconSource = icon.active;
            activeDescription = {
              color: _resources.Styles.common.MHGreen
            };
            (0, _extends2.default)(activeDescription, activeDescriptionStyle);
          } else if (isPressing) {
            iconSource = icon.press;
          } else {
            iconSource = icon.normal;
          }

          if (isDisabled) {
            descriptionOpacity = 0.3;
          }

          if (description && length < 5) {
            var style = _reactNative.StyleSheet.flatten([styles.description, _this.props.unlimitedHeightEnable ? {
              fontSize: undefined,
              lineHeight: undefined
            } : {}]);

            var textLine = _this.props.numberOfLines == undefined ? 1 : _this.props.numberOfLines;
            if (textLine < 0) textLine = 0;
            descriptionRN = _react.default.createElement(_reactNative.Text, {
              style: [{
                color: theme.colorGrayLight
              }, style, descriptionStyle, activeDescription, {
                opacity: descriptionOpacity
              }],
              numberOfLines: textLine
            }, ' ', description);
          }

          if (index === length - 1) {
            last = {
              marginRight: 0
            };
          }

          return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
            key: index,
            onPressIn: function onPressIn() {
              _this.pressInIcon(index);
            },
            onPressOut: function onPressOut() {
              _this.pressOutIcon(index);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.radio,
            accessibilityLabel: accessibilityLabel || description,
            accessibilityHint: accessibilityHint,
            accessibilityState: {
              disabled: !!isDisabled,
              selected: !!isActive
            }
          })), _react.default.createElement(_reactNative.View, {
            style: [styles.mode, modeStyle, last]
          }, _react.default.createElement(_reactNative.Image, {
            style: [styles.icon, {
              opacity: iconOpacity
            }, iconStyle],
            resizeMode: "contain",
            source: iconSource
          }), descriptionRN));
        });
        return modesRN;
      };

      _this.pressInIcon = function (index) {
        var _this$props2 = _this.props,
            pressIn = _this$props2.pressIn,
            modesKey = _this$props2.modesKey;

        if (pressIn && modesKey) {
          pressIn(index, modesKey);
        }
      };

      _this.pressOutIcon = function (index) {
        var _this$props3 = _this.props,
            pressOut = _this$props3.pressOut,
            modesKey = _this$props3.modesKey;

        if (pressOut && modesKey) {
          pressOut(index, modesKey);
        }
      };

      _this.renderModeCard = function () {
        var theme = _this.context.theme;
        var modes = _this.props.modes;
        var length = modes.length;
        var cardPadding = {};

        if (length === 4) {
          cardPadding = {
            paddingTop: padding4,
            paddingBottom: padding4
          };
        } else if (length === 5) {
          cardPadding = {
            paddingTop: padding5,
            paddingBottom: padding5
          };
        }

        return _react.default.createElement(_reactNative.View, {
          style: [styles.card, {
            backgroundColor: theme.colorForeground
          }, _this.radius, cardPadding]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.main
        }, _this.createModesRN()));
      };

      (0, _reportDecorator.referenceReport)('ModeCard');
      _this.cardWrapStyle = {};
      var _modes = props.modes;
      var _length = _modes.length;
      var cardWrapStyle = {
        height: 116
      };

      var hasDescription = _modes.some(function (mode) {
        return mode.description;
      });

      if (_length === 3 && hasDescription) {
        cardWrapStyle = {
          height: 140
        };
      } else if (_length === 4 && !hasDescription) {
        cardWrapStyle = {
          height: 106
        };
      } else if (_length === 4 && hasDescription) {
        cardWrapStyle = {
          height: 130
        };
      } else if (_length === 5) {
        cardWrapStyle = {
          height: 86
        };
      }

      _this.cardWrapStyle = cardWrapStyle;
      _this.radius = (_CARD_RADIUS_TYPE$ALL = {}, (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.ALL, {
        borderRadius: radiusValue
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.NONE, {
        borderRadius: 0
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.TOP, {
        borderTopLeftRadius: radiusValue,
        borderTopRightRadius: radiusValue
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.BOTTOM, {
        borderBottomLeftRadius: radiusValue,
        borderBottomRightRadius: radiusValue
      }), _CARD_RADIUS_TYPE$ALL)[props.radiusType];
      return _this;
    }

    (0, _createClass2.default)(ModeCard, [{
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "render",
      value: function render() {
        var _this$props4 = this.props,
            showShadow = _this$props4.showShadow,
            modeCardStyle = _this$props4.modeCardStyle;
        var defaultCardStyle = {
          marginTop: 0,
          width: width - 20
        };
        var mixCardStyle = (0, _objectSpread2.default)({}, defaultCardStyle, modeCardStyle, this.cardWrapStyle, this.radius, !this.props.allowFontScaling ? {
          height: undefined
        } : {});
        return _react.default.createElement(_Card.default, {
          showShadow: showShadow,
          disabled: true,
          innerView: this.renderModeCard(),
          cardStyle: mixCardStyle,
          allowFontScaling: this.props.allowFontScaling,
          unlimitedHeightEnable: this.props.unlimitedHeightEnable,
          numberOfLines: this.props.numberOfLines
        });
      }
    }]);
    return ModeCard;
  }(_react.Component);

  ModeCard.contextType = _configProvider.ConfigContext;
  ModeCard.defaultProps = {
    radiusType: 'all',
    modes: [{
      description: '',
      icon: {},
      isDisabled: false,
      isActive: false,
      isPressing: false
    }],
    pressIn: function pressIn() {},
    pressOut: function pressOut() {},
    modesKey: '',
    descriptionStyle: {},
    activeDescriptionStyle: {},
    showShadow: true,
    modeCardStyle: {},
    unlimitedHeightEnable: false,
    allowFontScaling: true
  };
  ModeCard.propTypes = {
    radiusType: _propTypes.default.string,
    modesKey: _propTypes.default.string,
    modes: _propTypes.default.arrayOf(_propTypes.default.shape({
      isDisabled: _propTypes.default.bool,
      isActive: _propTypes.default.bool,
      icon: _propTypes.default.shape({
        normal: _propTypes.default.any,
        press: _propTypes.default.any,
        active: _propTypes.default.any,
        activeDisabled: _propTypes.default.any
      }),
      description: _propTypes.default.string,
      isPressing: _propTypes.default.bool,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    pressIn: _propTypes.default.func,
    pressOut: _propTypes.default.func,
    descriptionStyle: _propTypes.default.object,
    activeDescriptionStyle: _propTypes.default.object,
    showShadow: _propTypes.default.bool,
    modeCardStyle: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };

  var styles = _reactNative.StyleSheet.create({
    card: {
      paddingTop: padding3,
      paddingBottom: padding3
    },
    main: {
      flexDirection: 'row',
      justifyContent: 'center'
    },
    mode: {
      width: iconLength,
      marginRight: 40
    },
    icon: {
      width: iconLength,
      height: iconLength
    },
    description: {
      fontSize: 13,
      marginTop: 10,
      textAlign: 'center',
      lineHeight: 14
    }
  });

  var _default = ModeCard;
  exports.default = _default;
},22873,[14308,14305,14314,14317,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22864,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[14]);

  var radiusValue = 10;
  var pictureLength = 40;
  var OFF_COLOR = '#f0f0f0';

  var IndependentCard = function (_Component) {
    (0, _inherits2.default)(IndependentCard, _Component);

    function IndependentCard(props) {
      var _this;

      (0, _classCallCheck2.default)(this, IndependentCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(IndependentCard).call(this, props));

      _this.changeSwitchValue = function () {
        var _this$props = _this.props,
            value = _this$props.value,
            changeValue = _this$props.changeValue,
            switchKey = _this$props.switchKey;

        if (changeValue) {
          changeValue(value, switchKey);
        }
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props2 = _this.props,
            disabled = _this$props2.disabled,
            disabledCard = _this$props2.disabledCard,
            changeValue = _this$props2.changeValue,
            value = _this$props2.value,
            switchKey = _this$props2.switchKey;

        if (disabled || disabledCard) {
          return;
        }

        if (actionName === 'activate' && typeof changeValue === 'function') {
          changeValue(value, switchKey);
        }
      };

      (0, _reportDecorator.referenceReport)('IndependentCard');
      _this.state = {
        radius: {}
      };
      return _this;
    }

    (0, _createClass2.default)(IndependentCard, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var radius = {};
        this.setState(function (state, props) {
          var radiusType = props.radiusType;

          switch (radiusType) {
            case 'none':
              radius = {};
              break;

            case 'top':
              radius = {
                borderTopLeftRadius: radiusValue,
                borderTopRightRadius: radiusValue
              };
              break;

            case 'bottom':
              radius = {
                borderBottomLeftRadius: radiusValue,
                borderBottomRightRadius: radiusValue
              };
              break;

            default:
              radius = {
                borderRadius: radiusValue
              };
          }

          return {
            radius: radius
          };
        });
      }
    }, {
      key: "render",
      value: function render() {
        var theme = this.context.theme;
        var _this$props3 = this.props,
            picture = _this$props3.picture,
            title1 = _this$props3.title1,
            title2 = _this$props3.title2,
            value = _this$props3.value,
            onTintColor = _this$props3.onTintColor,
            tintColor = _this$props3.tintColor,
            switchStyle = _this$props3.switchStyle,
            disabled = _this$props3.disabled,
            disabledCard = _this$props3.disabledCard,
            accessible = _this$props3.accessible,
            accessibilityLabel = _this$props3.accessibilityLabel,
            accessibilityHint = _this$props3.accessibilityHint;

        var subTitleRN = _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.title2, {
            color: theme.colorGrayNormal
          }],
          numberOfLines: 1
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), title2);

        var subTitle = title2 ? subTitleRN : null;
        var opacity = disabledCard ? 0.3 : 1;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.card, {
            opacity: opacity
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.switch,
          accessibilityLabel: accessibilityLabel,
          accessibilityHint: accessibilityHint,
          accessibilityState: {
            disabled: disabled,
            checked: !!value
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
          source: picture,
          style: styles.picture
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }))), _react.default.createElement(_reactNative.View, {
          style: styles.title
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: 1,
          style: [styles.title1, {
            color: theme.colorBlack
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), title1), subTitle), _react.default.createElement(_reactNative.View, {
          style: styles.switchView
        }, _react.default.createElement(_Switch.default, (0, _extends2.default)({
          value: value,
          onValueChange: this.changeSwitchValue,
          onTintColor: onTintColor,
          tintColor: tintColor,
          style: switchStyle,
          disabled: disabled
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })))));
      }
    }]);
    return IndependentCard;
  }(_react.Component);

  IndependentCard.contextType = _configProvider.ConfigContext;
  IndependentCard.defaultProps = {
    radiusType: 'all',
    picture: -1,
    title1: '',
    title2: '',
    value: false,
    switchKey: '',
    changeValue: function changeValue() {},
    onTintColor: '',
    tintColor: '',
    switchStyle: {},
    disabled: false,
    disabledCard: false
  };
  IndependentCard.propTypes = {
    radiusType: _propTypes.default.string,
    picture: _propTypes.default.number,
    title1: _propTypes.default.string,
    title2: _propTypes.default.string,
    switchKey: _propTypes.default.string,
    value: _propTypes.default.bool,
    changeValue: _propTypes.default.func,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    switchStyle: _propTypes.default.object,
    disabled: _propTypes.default.bool,
    disabledCard: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };

  var styles = _reactNative.StyleSheet.create({
    card: {
      flex: 1,
      height: 80,
      paddingLeft: 20,
      paddingRight: 20,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-between'
    },
    picture: {
      width: pictureLength,
      height: pictureLength,
      borderRadius: 20,
      marginRight: 14
    },
    title: {
      flex: 1
    },
    title1: {
      fontSize: 15
    },
    title2: {
      fontSize: 12
    },
    switchView: {
      paddingLeft: 30
    }
  });

  var _default = IndependentCard;
  exports.default = _default;
},22876,[14308,14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22450,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "DragGear", {
    enumerable: true,
    get: function get() {
      return _DragGear.default;
    }
  });
  Object.defineProperty(exports, "NormalGear", {
    enumerable: true,
    get: function get() {
      return _NormalGear.default;
    }
  });
  Object.defineProperty(exports, "SlideGear", {
    enumerable: true,
    get: function get() {
      return _SlideGear.default;
    }
  });

  var _DragGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _NormalGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
},22879,[14305,22882,22894,22897]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _Block = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Clickable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      screenWidth = _Dimensions$get.width;

  var DEFAULT_SIZE = 50;
  var DEFAULT_MARGIN = 12;
  var BIGGER_SIZE = 1.35;
  var dragStartAnimationConfig = {
    toValue: BIGGER_SIZE,
    duration: 50,
    useNativeDriver: true
  };
  var releaseAnimationConfig = {
    toValue: 1,
    duration: _reactNative.Platform.select({
      ios: 160,
      android: 100
    }),
    useNativeDriver: true
  };

  var DragGear = function (_React$Component) {
    (0, _inherits2.default)(DragGear, _React$Component);

    function DragGear(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, DragGear);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DragGear).call(this, props, context));
      (0, _reportDecorator.referenceReport)('DragGear');

      if (_this.props.options.length === 0) {
        _this.showNothing = true;
        return (0, _possibleConstructorReturn2.default)(_this);
      }

      var _this$getCorrectLayou = _this.getCorrectLayout(),
          optionWidth = _this$getCorrectLayou.optionWidth,
          margin = _this$getCorrectLayou.margin,
          containerWidth = _this$getCorrectLayou.containerWidth;

      _this.optionWidth = optionWidth;
      _this.margin = margin;
      _this.containerWidth = containerWidth;

      if (_this.optionWidth < 20) {
        _this.showNothing = true;

        _Logger.default.warn('在目前maxWidth下显示不了这么多选项，请重新规划');

        return (0, _possibleConstructorReturn2.default)(_this);
      }

      _this.state = {
        pan: new _reactNative.Animated.Value(0),
        moveX: new _reactNative.Animated.Value(0),
        scale: new _reactNative.Animated.Value(1),
        selectIndex: _this.props.selectIndex,
        currentOption: _this.props.options[_this.props.selectIndex],
        dragToValueMin: 0,
        dragToValueMax: 0
      };
      _this.offset = 0;
      _this.panResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
          return true;
        },
        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
          return false;
        },
        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
          return true;
        },
        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
          return true;
        },
        onShouldBlockNativeResponder: function onShouldBlockNativeResponder() {
          return false;
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return false;
        },
        onPanResponderGrant: _this._onPanResponderGrant.bind((0, _assertThisInitialized2.default)(_this)),
        onPanResponderMove: _reactNative.Animated.event([null, {
          dx: _this.state.pan,
          moveX: _this.state.moveX
        }]),
        onPanResponderRelease: _this._onPanResponderRelease.bind((0, _assertThisInitialized2.default)(_this))
      });
      return _this;
    }

    (0, _createClass2.default)(DragGear, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (this.showNothing) return;
        var selectIndex = newProps.selectIndex;

        if (selectIndex !== this.props.selectIndex) {
          if (selectIndex < 0 || selectIndex >= this.props.options.length) return;
          this.onPress(selectIndex);
        }
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        var _this2 = this;

        this.state.pan.addListener(function (e) {
          if (_this2.pressToChoose && _reactNative.Platform.OS === 'ios') {
            var moveX = _this2.currentCoord + e.value;

            var index = _this2.getClosetIndex(moveX);

            _this2.setState({
              currentOption: _this2.props.options[index]
            });
          }
        });

        if (_reactNative.Platform.OS === 'ios') {
          this.state.moveX.addListener(function (e) {
            var index = _this2.getClosetIndex(e.value);

            _this2.setState({
              currentOption: _this2.props.options[index]
            });
          });
        }
      }
    }, {
      key: "getClosetIndex",
      value: function getClosetIndex(moveX) {
        var adjustCoord = moveX - this.offset;
        var diffs = this.coords.map(function (coord) {
          return Math.abs(coord - adjustCoord);
        });
        return diffs.indexOf(Math.min.apply(Math, (0, _toConsumableArray2.default)(diffs)));
      }
    }, {
      key: "_onPanResponderGrant",
      value: function _onPanResponderGrant(e) {
        _reactNative.Animated.timing(this.state.scale, dragStartAnimationConfig).start();

        var pageX = e.nativeEvent.pageX;
        this.offset = pageX - this.currentCoord;
        this.pressToChoose = false;
      }
    }, {
      key: "_onPanResponderRelease",
      value: function _onPanResponderRelease(e, gesture) {
        var index = this.getClosetIndex(gesture.moveX);
        this.animated2TargetIndex(index);

        if (this.props.onSelect) {
          this.props.onSelect(index);
        }
      }
    }, {
      key: "animated2TargetIndex",
      value: function animated2TargetIndex(index) {
        var _this3 = this;

        this.offset = 0;
        this.setState({
          selectIndex: index
        }, function () {
          _this3.getDragRange(function () {
            _this3.state.pan.setValue(0);

            _reactNative.Animated.timing(_this3.state.scale, releaseAnimationConfig).start(function () {
              if (_reactNative.Platform.OS == 'android') {
                _this3.setState({
                  currentOption: _this3.props.options[index]
                });
              }
            });
          });
        });
      }
    }, {
      key: "getCorrectLayout",
      value: function getCorrectLayout() {
        var optionWidth = this.props.normalStyle.width || DEFAULT_SIZE;
        var _this$props = this.props,
            margin = _this$props.margin,
            maxWidth = _this$props.maxWidth;
        var length = this.props.options.length;
        this.length = length;
        var containerWidth = (optionWidth + margin) * length + margin;
        if (containerWidth <= maxWidth) return {
          optionWidth: optionWidth,
          margin: margin,
          containerWidth: containerWidth
        };
        var newOptionWidth = Math.floor(maxWidth / (length + (length + 1) * 0.5));
        var newMargin = newOptionWidth / 2;
        var newContainerWidth = (3 * length + 1) * newMargin;
        return {
          optionWidth: newOptionWidth,
          margin: newMargin,
          containerWidth: newContainerWidth
        };
      }
    }, {
      key: "calculateCoord",
      value: function calculateCoord() {
        var _this4 = this;

        this._container.measure(function (x, y, w, h, px, py) {
          var startCoord = x - _this4.optionWidth / 2;
          _this4.coords = [];

          for (var i = 0; i < _this4.props.options.length; i++) {
            _this4.coords[i] = startCoord + (_this4.optionWidth + _this4.margin) * (i + 1);
          }

          _this4.getDragRange();
        });
      }
    }, {
      key: "getDragRange",
      value: function getDragRange(callback) {
        var _this5 = this;

        this.currentCoord = this.coords[this.state.selectIndex];
        this.dragToValueArray = this.coords.map(function (coord) {
          return coord - _this5.currentCoord;
        });
        this.setState({
          dragToValueMin: this.dragToValueArray[0] || 0,
          dragToValueMax: this.dragToValueArray[this.length - 1] || 0
        }, function () {
          callback && callback();
        });
      }
    }, {
      key: "renderOptions",
      value: function renderOptions() {
        var _this6 = this;

        var style = _reactNative.StyleSheet.flatten([this.props.normalStyle, {
          width: this.optionWidth,
          height: this.optionWidth,
          borderRadius: this.optionWidth / 2,
          borderWidth: 0
        }]);

        var selectIndex = this.state.selectIndex;
        return this.props.options.map(function (option, index) {
          return _react.default.createElement(_Clickable.default, (0, _extends2.default)({
            key: option,
            allowFontScaling: _this6.props.allowFontScaling,
            numberOfLines: _this6.props.numberOfLines,
            onPress: function onPress() {
              return _this6.onPress(index);
            },
            text: option,
            select: selectIndex === index,
            style: style,
            textStyle: _this6.props.textStyle
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this6.props.accessible,
            accessibilityLabel: _this6.props.clickAccessibilityLables[index] || option,
            accessibilityHint: _this6.props.clickAccessibilityHints[index]
          })));
        });
      }
    }, {
      key: "renderDraggable",
      value: function renderDraggable() {
        var _this$state = this.state,
            min = _this$state.dragToValueMin,
            max = _this$state.dragToValueMax;
        if (min === undefined) return null;
        var position = {
          position: 'absolute',
          left: -min
        };
        var innerCircle = {
          width: this.optionWidth,
          height: this.optionWidth,
          borderRadius: this.optionWidth / 2,
          backgroundColor: this.props.selectColor,
          alignItems: 'center',
          justifyContent: 'center'
        };
        var touchArea = {
          width: this.optionWidth + this.margin * 2,
          height: this.optionWidth * BIGGER_SIZE,
          backgroundColor: 'transparent',
          alignItems: 'center',
          justifyContent: 'center'
        };
        var panStyle = {
          transform: [{
            translateX: this.state.pan.interpolate({
              inputRange: [min - 1, min, max, max + 1],
              outputRange: [min, min, max, max]
            })
          }, {
            scale: this.state.scale
          }]
        };
        return _react.default.createElement(_Block.default, {
          panHandlers: this.panResponder.panHandlers,
          style: [position, panStyle]
        }, _react.default.createElement(_reactNative.View, {
          style: touchArea
        }, _react.default.createElement(_reactNative.View, {
          style: innerCircle
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [this.props.textStyle, {
            color: '#fff'
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }), {
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: this.props.numberOfLines
        }), this.state.currentOption))));
      }
    }, {
      key: "render",
      value: function render() {
        var _this7 = this;

        if (this.showNothing) return null;
        var container = {
          width: this.containerWidth,
          height: this.optionWidth * BIGGER_SIZE
        };
        return _react.default.createElement(_reactNative.View, {
          onLayout: function onLayout() {
            return _this7.calculateCoord();
          },
          ref: function ref(container) {
            return _this7._container = container;
          },
          style: [this.props.containerStyle, styles.container, container]
        }, this.renderOptions(), this.renderDraggable());
      }
    }, {
      key: "onPress",
      value: function onPress(index) {
        var _this8 = this;

        this.pressToChoose = true;

        _reactNative.Animated.sequence([_reactNative.Animated.timing(this.state.scale, dragStartAnimationConfig), _reactNative.Animated.timing(this.state.pan, {
          toValue: this.dragToValueArray[index],
          duration: 200,
          useNativeDriver: true
        })]).start(function () {
          return _this8.animated2TargetIndex(index);
        });

        if (this.props.onSelect) {
          this.props.onSelect(index);
        }
      }
    }]);
    return DragGear;
  }(_react.default.Component);

  DragGear.propTypes = {
    options: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])).isRequired,
    containerStyle: _propTypes.default.object,
    normalStyle: _propTypes.default.object,
    textStyle: _propTypes.default.object,
    margin: _propTypes.default.number,
    maxWidth: _propTypes.default.number,
    selectColor: _propTypes.default.string,
    selectIndex: _propTypes.default.number,
    onSelect: _propTypes.default.func.isRequired,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    clickAccessibilityLables: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityLabel),
    clickAccessibilityHints: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityHint)
  };
  DragGear.defaultProps = {
    options: [],
    normalStyle: {},
    margin: DEFAULT_MARGIN,
    maxWidth: screenWidth,
    selectColor: '#f0ac3d',
    selectIndex: 0,
    allowFontScaling: true,
    clickAccessibilityLables: [],
    clickAccessibilityHints: []
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-evenly'
    }
  });

  var _default = DragGear;
  exports.default = _default;
},22882,[14305,14344,14359,14320,14323,14371,14377,14374,14386,10318,10297,10033,22885,22888,22891,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  var Block = function (_React$Component) {
    (0, _inherits2.default)(Block, _React$Component);

    function Block() {
      (0, _classCallCheck2.default)(this, Block);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Block).apply(this, arguments));
    }

    (0, _createClass2.default)(Block, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({
          style: this.props.style
        }, this.props.panHandlers), _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          onLongPress: this.props.onLongPress
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.children));
      }
    }]);
    return Block;
  }(_react.default.Component);

  exports.default = Block;
  Block.propTypes = {
    style: _propTypes.default.any,
    panHandlers: _propTypes.default.object,
    onLongPress: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };
},22885,[14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  var SIZE = 40;
  var TEXT_COLOR = '#bbb';
  var BORDER_COLOR = '#ccc';

  var Clickable = function (_React$Component) {
    (0, _inherits2.default)(Clickable, _React$Component);

    function Clickable() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Clickable);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Clickable)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.animatedValue = new _reactNative.Animated.Value(0);
      return _this;
    }

    (0, _createClass2.default)(Clickable, [{
      key: "render",
      value: function render() {
        var color = this.props.select ? '#fff' : TEXT_COLOR;
        var boderStyle = this.props.select ? {
          borderWidth: 0
        } : {
          borderColor: BORDER_COLOR,
          borderWidth: 1
        };
        var backgroundColor = this.props.select ? this.props.selectColor : '#fff';
        return _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.animationContainer, boderStyle, this.props.style, {
            backgroundColor: backgroundColor
          }]
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          onPress: this.props.onPress
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.radio,
          accessibilityLabel: this.props.accessibilityLabel || this.props.text,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            checked: !!this.props.select
          }
        })), _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.text, this.props.textStyle, {
            color: color
          }],
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: this.props.numberOfLines
        }, this.props.text))));
      }
    }]);
    return Clickable;
  }(_react.default.Component);

  exports.default = Clickable;
  Clickable.propTypes = {
    select: _propTypes.default.bool,
    selectColor: _propTypes.default.string,
    style: _propTypes.default.object,
    onPress: _propTypes.default.func.isRequired,
    text: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]).isRequired,
    textStyle: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Clickable.defaultProps = {
    select: false,
    selectColor: '#f0ac3d',
    allowFontScaling: true
  };

  var styles = _reactNative.StyleSheet.create({
    animationContainer: {
      width: SIZE,
      height: SIZE,
      borderRadius: 20
    },
    container: {
      flex: 1,
      justifyContent: 'center',
      alignItems: 'center'
    },
    text: {
      fontSize: 11,
      textAlign: 'center'
    }
  });
},22888,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var Logger = function () {
    function Logger() {
      (0, _classCallCheck2.default)(this, Logger);
    }

    (0, _createClass2.default)(Logger, null, [{
      key: "warn",
      value: function warn(message) {
        var styles = ["color: " + Logger.theme.warning.color, "background: " + Logger.theme.warning.background, 'padding: 5px', 'font-size: 14px'].join(';');
      }
    }]);
    return Logger;
  }();

  Logger.theme = {
    ok: {
      background: 'purple',
      color: 'white'
    },
    error: {
      background: 'red',
      color: 'white'
    },
    warning: {
      background: 'darkorange',
      color: 'white'
    },
    attention: {
      background: '#ffdc00',
      color: 'black'
    },
    success: {
      background: '#bada55',
      color: 'black'
    },
    info: {
      background: '#abdcfb',
      color: 'black'
    },
    default: {
      background: 'white',
      color: 'black'
    }
  };
  var _default = Logger;
  exports.default = _default;
},22891,[14305,14320,14323]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _Clickable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[11]);

  var _Logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      screenWidth = _Dimensions$get.width;

  var DEFAULT_SIZE = 50;
  var DEFAULT_MARGIN = 12;

  var NormalGear = function (_React$Component) {
    (0, _inherits2.default)(NormalGear, _React$Component);

    function NormalGear(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, NormalGear);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NormalGear).call(this, props, context));
      (0, _reportDecorator.referenceReport)('NormalGear');

      if (_this.props.options.length === 0) {
        _this.showNothing = true;
        return (0, _possibleConstructorReturn2.default)(_this);
      }

      var _this$getCorrectLayou = _this.getCorrectLayout(),
          optionWidth = _this$getCorrectLayou.optionWidth,
          margin = _this$getCorrectLayou.margin,
          containerWidth = _this$getCorrectLayou.containerWidth;

      _this.optionWidth = optionWidth;
      _this.margin = margin;
      _this.containerWidth = containerWidth;

      if (_this.optionWidth < 20) {
        _this.showNothing = true;

        _Logger.default.warn('在目前maxWidth下显示不了这么多选项，请重新规划');

        return (0, _possibleConstructorReturn2.default)(_this);
      }

      _this.selectArray = Array.from({
        length: _this.props.options.length
      }, function () {
        return false;
      });
      var selectArray = Array.from(_this.selectArray);
      selectArray[_this.props.selectIndex] = true;
      _this.state = {
        selectArray: selectArray
      };
      return _this;
    }

    (0, _createClass2.default)(NormalGear, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (this.showNothing) return;
        var selectIndex = newProps.selectIndex;

        if (selectIndex !== this.props.selectIndex) {
          if (selectIndex < 0 || selectIndex >= this.props.options.length) return;
          this.onPress(selectIndex);
        }
      }
    }, {
      key: "renderOptions",
      value: function renderOptions() {
        var _this2 = this;

        var style = _reactNative.StyleSheet.flatten([this.props.normalStyle, {
          width: this.optionWidth,
          height: this.optionWidth,
          borderRadius: this.optionWidth / 2
        }]);

        return this.props.options.map(function (option, index) {
          return _react.default.createElement(_Clickable.default, (0, _extends2.default)({
            key: option,
            allowFontScaling: _this2.props.allowFontScaling,
            numberOfLines: _this2.props.numberOfLines,
            select: _this2.state.selectArray[index],
            selectColor: _this2.props.selectColor,
            onPress: function onPress() {
              return _this2.onPress(index);
            },
            text: option,
            style: style,
            textStyle: _this2.props.textStyle
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityLabel: _this2.props.clickAccessibilityLables[index] || option,
            accessibilityHint: _this2.props.clickAccessibilityHints[index]
          })));
        });
      }
    }, {
      key: "getCorrectLayout",
      value: function getCorrectLayout() {
        var optionWidth = this.props.normalStyle.width || DEFAULT_SIZE;
        var _this$props = this.props,
            margin = _this$props.margin,
            maxWidth = _this$props.maxWidth;
        var length = this.props.options.length;
        var containerWidth = (optionWidth + margin) * length + margin;
        if (containerWidth <= maxWidth) return {
          optionWidth: optionWidth,
          margin: margin,
          containerWidth: containerWidth
        };
        var newOptionWidth = Math.floor(maxWidth / (length + (length + 1) * 0.5));
        var newMargin = newOptionWidth / 2;
        var newContainerWidth = (3 * length + 1) * newMargin;
        return {
          optionWidth: newOptionWidth,
          margin: newMargin,
          containerWidth: newContainerWidth
        };
      }
    }, {
      key: "render",
      value: function render() {
        if (this.showNothing) return null;
        return _react.default.createElement(_reactNative.View, {
          style: [this.props.containerStyle, styles.container, {
            width: this.containerWidth
          }]
        }, this.renderOptions());
      }
    }, {
      key: "onPress",
      value: function onPress(index) {
        var selectArray = Array.from(this.selectArray);
        selectArray[index] = true;
        this.setState({
          selectArray: selectArray
        });

        if (this.props.onSelect) {
          this.props.onSelect(index);
        }
      }
    }]);
    return NormalGear;
  }(_react.default.Component);

  NormalGear.propTypes = {
    options: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])).isRequired,
    containerStyle: _propTypes.default.object,
    normalStyle: _propTypes.default.object,
    textStyle: _propTypes.default.object,
    margin: _propTypes.default.number,
    maxWidth: _propTypes.default.number,
    selectColor: _propTypes.default.string,
    selectIndex: _propTypes.default.number,
    onSelect: _propTypes.default.func.isRequired,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    clickAccessibilityLables: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityLabel),
    clickAccessibilityHints: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityHint)
  };
  NormalGear.defaultProps = {
    options: [],
    normalStyle: {},
    margin: DEFAULT_MARGIN,
    maxWidth: screenWidth,
    selectIndex: 0,
    allowFontScaling: true,
    clickAccessibilityLables: [],
    clickAccessibilityHints: []
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-evenly'
    }
  });

  var _default = NormalGear;
  exports.default = _default;
},22894,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22888,22420,22891,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _Styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Block = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _reactNativeLinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _color = _$$_REQUIRE(_dependencyMap[15]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[17]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[18]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[19]);

  var TYPE = {
    CIRCLE: 'circle',
    RECTANGLE: 'rectangle'
  };
  var CONTENTTYPE = {
    NUM: 'num',
    COLOR: 'color',
    COLORTEM: 'colorTem'
  };
  var COLORRANGE = {
    "0.00": '#FFA100',
    "0.10": '#FFFA00',
    "0.20": '#9AFF00',
    "0.30": '#01FF00',
    "0.40": '#00FDA4',
    "0.50": '#00EEFF',
    "0.60": '#007CFF',
    "0.70": '#0600F9',
    "0.80": '#BF00FC',
    "0.90": '#FF0081',
    "1.00": '#FF0000'
  };
  var COLORTEMRANGE = {
    "0.00": '#FFAE00',
    "0.50": '#F6EFD6',
    "1.00": '#8AB2D4'
  };
  Object.freeze(TYPE);
  Object.freeze(CONTENTTYPE);
  var DEFAULT_SIZE = 40;
  var MIN_MARGIN = 3;
  var MARGIN = 7.5;
  var MAX_MARGIN = 10;
  var DEFAULT_HEIGHT = 55;
  var DEFAULT_BLOCK_COLOR = '#FFFFFF';

  var SlideGear = function (_React$Component) {
    (0, _inherits2.default)(SlideGear, _React$Component);

    function SlideGear(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, SlideGear);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SlideGear).call(this, props, context));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;

        var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
            firstCoord = _assertThisInitialize.firstCoord,
            endCoord = _assertThisInitialize.endCoord,
            currentCoord = _assertThisInitialize.currentCoord,
            coords = _assertThisInitialize.coords,
            optionStep = _assertThisInitialize.optionStep,
            length = _assertThisInitialize.length;

        var everyCoord = (optionStep ? endCoord - firstCoord : coords[length - 1] - coords[0]) / 10;
        var moveX = 0;

        switch (actionName) {
          case 'increment':
            moveX = currentCoord + everyCoord;
            break;

          case 'decrement':
            moveX = currentCoord - everyCoord;
            break;
        }

        _this.accessbilittMockReleaseCallback({
          moveX: moveX
        });
      };

      _this.accessbilittMockReleaseCallback = function (gesture) {
        var coord = gesture.moveX - _this.offset;

        if (_this.optionStep) {
          if (coord >= _this.firstCoord && coord <= _this.endCoord) {
            _this.currentCoord = coord;
          } else {
            _this.currentCoord = coord < _this.firstCoord ? _this.firstCoord : _this.endCoord;
          }
        } else {
          var min = _this.coords[0];
          var max = _this.coords[_this.length - 1];

          if (coord >= min && coord <= max) {
            _this.currentCoord = coord;
          } else {
            _this.currentCoord = coord < min ? min : max;
          }
        }

        var index = _this.getClosetIndex(gesture.moveX);

        if (_this.props.contentType !== CONTENTTYPE.COLOR) {
          _this.value = Math.max(0, Math.min(_this.length - 1, index));
        }

        if (_this.props.onSlidingComplete) {
          if (_this.props.contentType === CONTENTTYPE.COLOR) {
            var colorValue = _this.getColorFromValue(index);

            _this.value = _this.props.value;

            _this.props.onSlidingComplete(colorValue);
          } else {
            _this.props.onSlidingComplete(index);

            _this.value = _this.props.value;
          }
        }
      };

      (0, _reportDecorator.referenceReport)('SlideGear');

      if (_this.props.options.length === 0) {
        if (!_this.props.optionStep) {
          _this.showNothing = true;
          return (0, _possibleConstructorReturn2.default)(_this);
        } else {
          _this.optionMin = _this.props.optionMin;
          _this.optionMax = _this.props.optionMax;
          _this.optionStep = _this.props.optionStep;
          _this.length = (_this.optionMax - _this.optionMin) / _this.optionStep + 1;
        }
      } else {
        _this.options = _this.props.options;
        _this.length = _this.props.options.length;
      }

      var _this$getCorrectLayou = _this.getCorrectLayout(),
          margin = _this$getCorrectLayou.margin,
          blockWidth = _this$getCorrectLayou.blockWidth,
          blockHeight = _this$getCorrectLayou.blockHeight,
          containerHeight = _this$getCorrectLayou.containerHeight;

      _this.margin = margin;
      _this.blockWidth = blockWidth;
      _this.blockHeight = blockHeight;
      _this.containerHeight = containerHeight;
      _this.value = _this.props.value;
      _this.state = {
        pan: new _reactNative.Animated.Value(0),
        moveX: new _reactNative.Animated.Value(0),
        value: _this.props.value,
        dragToValueMin: 0,
        dragToValueMax: 0
      };
      _this.translateX = 0;
      _this.offset = 0;

      _this.constructPanResponder(props);

      return _this;
    }

    (0, _createClass2.default)(SlideGear, [{
      key: "constructPanResponder",
      value: function constructPanResponder(props) {
        this.panResponder = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
            return true;
          },
          onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
            return false;
          },
          onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
            return !props.disabled;
          },
          onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
            return !props.disabled;
          },
          onShouldBlockNativeResponder: function onShouldBlockNativeResponder() {
            return true;
          },
          onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
            return false;
          },
          onPanResponderGrant: this._onPanResponderGrant.bind(this),
          onPanResponderMove: _reactNative.Animated.event([null, {
            dx: this.state.pan,
            moveX: this.state.moveX
          }]),
          onPanResponderRelease: this._onPanResponderRelease.bind(this),
          onPanResponderTerminate: this._onPanResponderRelease.bind(this)
        });
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (this.sliding) {
          return;
        }

        var value = newProps.value,
            disabled = newProps.disabled;

        if (disabled !== this.props.disabled) {
          this.constructPanResponder(newProps);
        }

        if (this.optionStep) {
          var optionMin = newProps.optionMin,
              optionMax = newProps.optionMax,
              optionStep = newProps.optionStep;

          if (optionMin === this.state.optionMin && optionMax === this.state.optionMax && optionStep === this.state.optionStep && value === this.props.value) {
            return;
          }

          this.optionMin = optionMin;
          this.optionMax = optionMax;
          this.optionStep = optionStep;
          this.length = (this.optionMax - this.optionMin) / this.optionStep + 1;

          if (value !== this.props.value) {
            this.value = value;
          }
        } else {
          var options = newProps.options;
          if (value === this.value && this.isSameArray(options, this.props.options)) return;

          if (!this.isSameArray(options, this.props.options)) {
            if (!(options instanceof Array) || options.length === 0) {
              this.showNothing = true;
              return;
            } else {
              this.showNothing = false;
              this.options = options;
              this.length = options.length;
            }
          }

          if (value !== this.props.value) {
            if (value < 0 || value >= this.length) {
              this.value = 0;
            } else {
              this.value = value;
            }
          }
        }

        this.calculateCoord(this.containerLayout);
      }
    }, {
      key: "isSameArray",
      value: function isSameArray(arr1, arr2) {
        if (!(arr1 instanceof Array) || !(arr2 instanceof Array)) return false;
        if (arr1.length !== arr2.length) return false;

        for (var i = 0; i < arr1.length; i++) {
          if (arr1[i] !== arr2[i]) return false;
        }

        return true;
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        var _this2 = this;

        this.state.pan.addListener(function (e) {
          var _this2$state = _this2.state,
              min = _this2$state.dragToValueMin,
              max = _this2$state.dragToValueMax;

          if (e.value >= min && e.value <= max) {
            _this2.translateX = e.value;
          } else {
            _this2.translateX = e.value < min ? min : max;
          }

          _this2._background.setNativeProps({
            width: _this2.translateX + _this2.margin * 2 + _this2.blockWidth - _this2.state.dragToValueMin
          });
        });
        this.state.moveX.addListener(function (e) {
          var index = _this2.getClosetIndex(e.value);

          if (_this2.props.onValueChange) {
            if (_this2.props.contentType === CONTENTTYPE.COLOR) {
              var colorValue = _this2.getColorFromValue(index);

              _this2.props.onValueChange(colorValue);
            } else {
              _this2.props.onValueChange(index);
            }
          }
        });
      }
    }, {
      key: "getClosetIndex",
      value: function getClosetIndex(moveX) {
        var adjustCoord = moveX - this.offset;

        if (this.optionStep) {
          var value;

          if (adjustCoord <= this.firstCoord) {
            value = this.optionMin;
          } else if (adjustCoord >= this.endCoord) {
            value = this.optionMax;
          } else {
            var index = Math.round((adjustCoord - this.firstCoord) / this.d);
            value = index * this.optionStep + this.optionMin;
            if (value > this.optionMax) value = this.optionMax;
          }

          return value;
        } else {
          var diffs = this.coords.map(function (coord) {
            return Math.abs(coord - adjustCoord);
          });
          return diffs.indexOf(Math.min.apply(Math, (0, _toConsumableArray2.default)(diffs)));
        }
      }
    }, {
      key: "getColorFromValue",
      value: function getColorFromValue(value) {
        var getter = (0, _color.colorGetterforRange)(this.props.colorRangeObject);
        var colorHex = getter.getColorFromPercent((value - this.props.optionMin) / (this.props.optionMax - this.props.optionMin) * 100);
        var colorValue = (0, _color.transformHexToDigtal)(colorHex);
        return colorValue;
      }
    }, {
      key: "getValueFromColor",
      value: function getValueFromColor(colorValue) {
        var getter = (0, _color.colorGetterforRange)(this.props.colorRangeObject);
        var percent = getter.getPercentFromColor((0, _color.transformDigtalToHex)(colorValue));
        var value = this.props.optionMin + (this.props.optionMax - this.props.optionMin) * (percent / 100);
        return value;
      }
    }, {
      key: "_onPanResponderGrant",
      value: function _onPanResponderGrant(e) {
        this.sliding = true;
        this.state.pan.setOffset(this.translateX);
        this.state.pan.setValue(0);
        var pageX = e.nativeEvent.pageX;
        this.offset = pageX - this.currentCoord;
      }
    }, {
      key: "_onPanResponderRelease",
      value: function _onPanResponderRelease(e, gesture) {
        var coord = gesture.moveX - this.offset;

        if (this.optionStep) {
          if (coord >= this.firstCoord && coord <= this.endCoord) {
            this.currentCoord = coord;
          } else {
            this.currentCoord = coord < this.firstCoord ? this.firstCoord : this.endCoord;
          }
        } else {
          var min = this.coords[0];
          var max = this.coords[this.length - 1];

          if (coord >= min && coord <= max) {
            this.currentCoord = coord;
          } else {
            this.currentCoord = coord < min ? min : max;
          }
        }

        var index = this.getClosetIndex(gesture.moveX);

        if (this.props.contentType !== CONTENTTYPE.COLOR) {
          this.value = index;
        }

        if (this.props.onSlidingComplete) {
          if (this.props.contentType === CONTENTTYPE.COLOR) {
            var colorValue = this.getColorFromValue(index);
            this.value = colorValue;
            this.props.onSlidingComplete(colorValue);
          } else {
            this.props.onSlidingComplete(index);
            this.value = index;
          }
        }

        this.offset = 0;
        this.sliding = false;
      }
    }, {
      key: "getCorrectLayout",
      value: function getCorrectLayout() {
        var containerHeight = this.props.containerStyle.height || DEFAULT_HEIGHT;
        var blockWidth = this.props.blockStyle.width || DEFAULT_SIZE;
        var margin = ~~(containerHeight / 10);
        margin = margin > MAX_MARGIN ? MAX_MARGIN : margin;
        margin = margin < MIN_MARGIN ? MIN_MARGIN : margin;
        var blockHeight = containerHeight - margin * 2;
        return {
          margin: margin,
          blockWidth: this.props.type === TYPE.CIRCLE ? blockHeight : blockWidth,
          blockHeight: blockHeight,
          containerHeight: containerHeight
        };
      }
    }, {
      key: "_onLayout",
      value: function _onLayout() {
        var _this3 = this;

        this._container.measure(function (x, y, w, h, px, py) {
          _this3.calculateCoord({
            x: x,
            y: y,
            w: w,
            h: h,
            px: px,
            py: py
          });
        });
      }
    }, {
      key: "calculateCoord",
      value: function calculateCoord(obj) {
        if (!obj) {
          return;
        }

        var x = obj.x,
            w = obj.w;
        this.containerLayout = obj;
        var offset = this.margin * 2 + this.blockWidth;
        var startCoord = x + offset / 2;
        var d = (w - offset) / (this.length - 1);
        this.d = d;

        if (d <= 0) {}

        if (!this.optionStep) {
          this.coords = this.options.map(function (v, i) {
            return d > 0 ? startCoord + d * i : 0;
          });
          this.currentCoord = this.coords[this.value];
        } else {
          this.firstCoord = startCoord;
          this.endCoord = startCoord + d * (this.length - 1);

          if (this.props.contentType !== CONTENTTYPE.COLOR) {
            this.currentCoord = startCoord + d * ((this.value - this.optionMin) / this.optionStep);
          } else {
            var value = this.getValueFromColor(this.value);
            this.currentCoord = startCoord + d * Math.round((value - this.optionMin) / this.optionStep);
          }
        }

        this.totalWidth = w;
        this.getDragRange();
      }
    }, {
      key: "getDragRange",
      value: function getDragRange(callback) {
        var _this4 = this;

        if (!this.optionStep) {
          this.setState({
            dragToValueMin: this.coords[0] - this.currentCoord || 0,
            dragToValueMax: this.coords[this.length - 1] - this.currentCoord || 0
          }, function () {
            callback && callback();

            _this4.state.pan.setOffset(0);

            _this4.state.pan.setValue(0);
          });
        } else {
          this.setState({
            dragToValueMin: this.firstCoord - this.currentCoord || 0,
            dragToValueMax: this.endCoord - this.currentCoord || 0
          }, function () {
            callback && callback();

            _this4.state.pan.setOffset(0);

            _this4.state.pan.setValue(0);
          });
        }
      }
    }, {
      key: "renderDraggable",
      value: function renderDraggable() {
        var _this$state = this.state,
            min = _this$state.dragToValueMin,
            max = _this$state.dragToValueMax;
        var colorScheme = this.context.colorScheme;
        if (min === undefined) return null;
        var position = {
          position: 'absolute',
          left: -min - this.margin,
          top: -this.margin
        };
        var innerCircle = this.props.type === TYPE.CIRCLE ? {
          width: this.blockHeight,
          height: this.blockHeight,
          borderRadius: this.blockHeight / 2
        } : {
          width: this.blockWidth,
          height: this.blockHeight,
          borderRadius: 0
        };
        var touchArea = {
          width: this.blockWidth + this.margin * 4,
          height: this.containerHeight + this.margin * 2,
          backgroundColor: 'transparent',
          alignItems: 'center',
          justifyContent: 'center'
        };
        var panStyle = {
          transform: [{
            translateX: this.state.pan.interpolate({
              inputRange: [min - 1, min, max, max + 1],
              outputRange: [min, min, max, max]
            })
          }]
        };
        var whiteNoDark = new _DynamicColor.default('#FFFFFF', 'rgba(255,255,255,0.9)');
        var greyNoDark = new _DynamicColor.default('rgba(255,255,255,0.3)', 'rgba(255,255,255,0.3)');
        return _react.default.createElement(_Block.default, {
          panHandlers: this.panResponder.panHandlers,
          style: [position, panStyle]
        }, _react.default.createElement(_reactNative.View, {
          style: touchArea
        }, _react.default.createElement(_reactNative.View, {
          style: [{
            backgroundColor: this.props.disabled ? greyNoDark.color(colorScheme) : whiteNoDark.color(colorScheme)
          }, this.props.blockStyle, innerCircle]
        })));
      }
    }, {
      key: "renderBackground",
      value: function renderBackground() {
        var _this$context$theme,
            _this5 = this;

        var opacityValue = this.props.disabled ? 0.3 : 1;
        var leftTextColorValue = this.props.disabled && this.props.leftTextOffColor ? this.props.leftTextOffColor : this.props.leftTextColor;
        var _this$state2 = this.state,
            min = _this$state2.dragToValueMin,
            max = _this$state2.dragToValueMax;
        if (min === undefined) return null;
        var minimumTrackTintColor = this.props.minimumTrackTintColor ? this.props.minimumTrackTintColor : (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBtnGreenNor;

        if (this.props.disabled) {
          var _this$context$theme2;

          minimumTrackTintColor = (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorSlideLeft;
        }

        return _react.default.createElement(_reactNative.Animated.View, {
          ref: function ref(background) {
            return _this5._background = background;
          },
          style: {
            position: 'absolute',
            width: this.state.pan.interpolate({
              inputRange: [min - 1, min, max, max + 1],
              outputRange: [this.margin * 2 + this.blockWidth, this.margin * 2 + this.blockWidth, this.totalWidth, this.totalWidth]
            }),
            height: this.containerHeight,
            borderRadius: this.props.type === TYPE.CIRCLE ? this.containerHeight / 2 : 0,
            backgroundColor: this.props.contentType === CONTENTTYPE.NUM ? minimumTrackTintColor : '',
            opacity: opacityValue
          }
        }, this.props.showEndText ? _react.default.createElement(_reactNative.View, {
          style: [styles.textContainer, {
            margin: this.margin,
            alignSelf: 'flex-start',
            minWidth: this.blockWidth + this.margin * 2,
            height: this.blockHeight
          }]
        }, _react.default.createElement(_reactNative.Text, {
          accessible: false,
          focusable: false,
          style: [styles.text, {
            color: leftTextColorValue
          }, this.props.leftTextStyle],
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: this.props.numberOfLines
        }, this.optionStep ? this.optionMin : this.options[0])) : null);
      }
    }, {
      key: "renderRightText",
      value: function renderRightText() {
        var opacityValue = this.props.disabled ? 0.3 : 1;
        var rightTextColorValue = this.props.disabled && this.props.rightTextOffColor ? this.props.rightTextOffColor : this.props.rightTextColor;
        var width = this.blockWidth + this.margin * 2;

        if (this.optionStep && this.optionMax > 999999) {
          width += 20;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [styles.textContainer, {
            margin: this.margin,
            alignSelf: 'flex-end',
            minWidth: width,
            height: this.blockHeight,
            opacity: opacityValue
          }]
        }, this.props.showEndText ? _react.default.createElement(_reactNative.Text, {
          accessible: false,
          style: [styles.text, {
            color: rightTextColorValue
          }, this.props.rightTextStyle],
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: this.props.numberOfLines
        }, this.optionStep ? this.optionMax : this.options[this.length - 1]) : null);
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme3,
            _this6 = this;

        if (this.showNothing) return null;
        var maximumTrackTintColor = this.props.maximumTrackTintColor ? this.props.maximumTrackTintColor : (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorBtnGrayNor;
        var containerStyle = {
          height: this.containerHeight,
          borderRadius: this.props.type === TYPE.CIRCLE ? this.containerHeight / 2 : 0,
          backgroundColor: this.props.contentType === CONTENTTYPE.NUM ? maximumTrackTintColor : ''
        };
        var opacityValue = this.props.disabled ? 0.3 : 1;
        var leftTextColorValue = this.props.disabled && this.props.leftTextOffColor ? this.props.leftTextOffColor : this.props.leftTextColor;
        var rightTextColorValue = this.props.disabled && this.props.rightTextOffColor ? this.props.rightTextOffColor : this.props.rightTextColor;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          onLayout: function onLayout() {
            return _this6._onLayout();
          },
          ref: function ref(container) {
            return _this6._container = container;
          },
          style: [this.props.containerStyle, containerStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: !!this.props.disabled
          },
          accessibilityValue: {
            min: this.state.dragToValueMin,
            max: this.state.dragToValueMax,
            now: this.value
          }
        }), {
          accessibilityActions: [{
            name: 'increment'
          }, {
            name: 'decrement'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), this.props.contentType === CONTENTTYPE.NUM ? _react.default.createElement(_reactNative.View, null, this.renderRightText(), this.renderBackground(), this.renderDraggable()) : _react.default.createElement(_reactNativeLinearGradient.default, {
          start: {
            x: 0,
            y: 0
          },
          end: {
            x: 1,
            y: 0
          },
          locations: this.props.contentType === CONTENTTYPE.COLOR ? Object.keys(this.props.colorRangeObject).map(function (value) {
            return Number(value);
          }) : Object.keys(this.props.colorTemRangeObject).map(function (value) {
            return Number(value);
          }),
          colors: this.props.contentType === CONTENTTYPE.COLOR ? Object.values(this.props.colorRangeObject) : Object.values(this.props.colorTemRangeObject),
          style: {
            borderRadius: this.props.type === TYPE.CIRCLE ? this.containerHeight / 2 : 0
          }
        }, this.renderRightText(), this.renderBackground(), this.renderDraggable()));
      }
    }]);
    return SlideGear;
  }(_react.default.Component);

  SlideGear.contextType = _configProvider.ConfigContext;
  SlideGear.propTypes = {
    type: _propTypes.default.oneOf([TYPE.CIRCLE, TYPE.RECTANGLE]),
    options: _propTypes.default.array.isRequired,
    showEndText: _propTypes.default.bool,
    containerStyle: _propTypes.default.object,
    blockStyle: _propTypes.default.object,
    minimumTrackTintColor: _propTypes.default.string,
    leftTextColor: _propTypes.default.string,
    leftTextOffColor: _propTypes.default.string,
    leftTextStyle: _reactNative.Text.propTypes.style,
    maximumTrackTintColor: _propTypes.default.string,
    rightTextColor: _propTypes.default.string,
    rightTextOffColor: _propTypes.default.string,
    rightTextStyle: _reactNative.Text.propTypes.style,
    value: _propTypes.default.number,
    disabled: _propTypes.default.bool,
    onValueChange: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func.isRequired,
    optionMin: _propTypes.default.number,
    optionMax: _propTypes.default.number,
    optionStep: _propTypes.default.number,
    contentType: _propTypes.default.oneOf([CONTENTTYPE.NUM, CONTENTTYPE.COLOR, CONTENTTYPE.COLORTEM]),
    colorRangeObject: _propTypes.default.object,
    colorTemRangeObject: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  SlideGear.defaultProps = {
    type: TYPE.CIRCLE,
    options: [],
    showEndText: true,
    containerStyle: {},
    blockStyle: {},
    minimumTrackTintColor: _Styles.default.common.MHGreen,
    leftTextColor: '#eee',
    leftTextOffColor: 'rgba(127, 127, 127, 0.3)',
    leftTextStyle: {},
    rightTextColor: '#999',
    rightTextOffColor: 'rgba(127, 127, 127, 0.3)',
    rightTextStyle: {},
    value: 0,
    disabled: false,
    optionMin: 0,
    optionMax: 0,
    optionStep: 0,
    contentType: CONTENTTYPE.NUM,
    colorRangeObject: COLORRANGE,
    colorTemRangeObject: COLORTEMRANGE,
    allowFontScaling: true
  };
  SlideGear.TYPE = TYPE;
  SlideGear.CONTENTTYPE = CONTENTTYPE;

  var styles = _reactNative.StyleSheet.create({
    textContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    text: {
      fontSize: 15,
      width: '100%',
      textAlign: 'center'
    }
  });

  var _default = SlideGear;
  exports.default = _default;
},22897,[14305,14344,14359,14320,14323,14371,14377,14374,14386,10318,10297,10033,22780,22885,14299,22900,22435,22420,22423,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.fixHex = fixHex;
  exports.transformHexToDigtal = transformHexToDigtal;
  exports.transformDigtalToHex = transformDigtalToHex;
  exports.colorGetterforRange = colorGetterforRange;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  function fixHex(hex) {
    hex = hex.replace(/[^0-9a-fA-F]/, '').split('');
    var length = hex.length;

    if (length < 6) {
      hex = [hex[0] || 0, hex[0] || 0, hex[1] || 0, hex[1] || 0, hex[2] || 0, hex[2] || 0];
    }

    hex = "#" + hex.slice(0, 6).join('');
    return hex.toUpperCase();
  }

  function transformHexToDigtal(hex) {
    hex = fixHex(hex).slice(1);
    return parseInt(hex, 16);
  }

  function transformDigtalToHex(digtal) {
    return ("#" + ("000000" + digtal.toString(16)).slice(-6)).toUpperCase();
  }

  function splitRgb(color) {
    color = fixHex(color);

    var _color$split = color.split(''),
        _color$split2 = (0, _slicedToArray2.default)(_color$split, 7),
        _1 = _color$split2[0],
        r1 = _color$split2[1],
        r2 = _color$split2[2],
        g1 = _color$split2[3],
        g2 = _color$split2[4],
        b1 = _color$split2[5],
        b2 = _color$split2[6];

    var r = parseInt(r1 + r2, 16);
    var g = parseInt(g1 + g2, 16);
    var b = parseInt(b1 + b2, 16);
    return {
      r: r,
      g: g,
      b: b
    };
  }

  function colorGetterforRange(range) {
    var colors = formatColors(range);

    function formatColors(range) {
      var colors = [];

      for (var k in range) {
        if (range.hasOwnProperty(k)) {
          var p = parseFloat(k);
          var c = fixHex(range[k]);

          if (typeof p === 'number' && p >= 0 && p <= 1) {
            colors.push([p, c]);
          }
        }
      }

      colors.sort(function (a, b) {
        return a[0] > b[0] ? 1 : -1;
      });

      if (colors.length < 1) {
        colors = [[0, '#000000'], [1, '#ffffff']];
      }

      if (colors[0][0] > 0) {
        colors[0] = [0, colors[0][1]];
      }

      if (colors[colors.length - 1][0] < 1) {
        colors[colors.length - 1] = [1, colors[colors.length - 1][1]];
      }

      return colors;
    }

    function getColorFromPercent(p) {
      p = Math.max(0, Math.min(1, p / 100));
      var s1 = null;
      var s2 = null;

      for (var i = 1, l = colors.length; i < l; i++) {
        var c = colors[i];
        var cp = colors[i - 1];

        if (cp[0] <= p && c[0] >= p) {
          s1 = cp;
          s2 = c;
          break;
        }
      }

      if (s1[0] >= s2[0]) {
        return s1[1];
      }

      var p0 = (p - s1[0]) / (s2[0] - s1[0]);

      var _splitRgb = splitRgb(s1[1]),
          r1 = _splitRgb.r,
          g1 = _splitRgb.g,
          b1 = _splitRgb.b;

      var _splitRgb2 = splitRgb(s2[1]),
          r2 = _splitRgb2.r,
          g2 = _splitRgb2.g,
          b2 = _splitRgb2.b;

      var r = parseInt(p0 * r2 + (1 - p0) * r1, 10);
      var g = parseInt(p0 * g2 + (1 - p0) * g1, 10);
      var b = parseInt(p0 * b2 + (1 - p0) * b1, 10);
      return "#" + ("00" + r.toString(16)).slice(-2) + ("00" + g.toString(16)).slice(-2) + ("00" + b.toString(16)).slice(-2);
    }

    function getPercentFromColor(color) {
      var _splitRgb3 = splitRgb(color),
          r = _splitRgb3.r,
          g = _splitRgb3.g,
          b = _splitRgb3.b;

      for (var i = 0, l = 1000; i < l; i++) {
        var c = getColorFromPercent(i / 10);

        var _splitRgb4 = splitRgb(c),
            rc = _splitRgb4.r,
            gc = _splitRgb4.g,
            bc = _splitRgb4.b;

        if (Math.abs(r - rc) <= 5 && Math.abs(g - gc) <= 5 && Math.abs(b - bc) <= 5) {
          return i / 10;
        }
      }

      return 50;
    }

    function getPercentFromColorV2(color) {
      var _splitRgb5 = splitRgb(color),
          r = _splitRgb5.r,
          g = _splitRgb5.g,
          b = _splitRgb5.b;

      for (var i = 0, l = 1000; i < l; i++) {
        var c = getColorFromPercent(i / 10);

        var _splitRgb6 = splitRgb(c),
            rc = _splitRgb6.r,
            gc = _splitRgb6.g,
            bc = _splitRgb6.b;

        if (Math.abs(r - rc) <= 5 && Math.abs(g - gc) <= 5 && Math.abs(b - bc) <= 5) {
          return i / 10;
        }
      }

      return -1;
    }

    return {
      getColorFromPercent: getColorFromPercent,
      getPercentFromColor: getPercentFromColor,
      getPercentFromColorV2: getPercentFromColorV2
    };
  }
},22900,[14305,14347]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Separator", {
    enumerable: true,
    get: function get() {
      return _Separator.default;
    }
  });

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22903,[14305,22906]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _resources = _$$_REQUIRE(_dependencyMap[9]);

  var TYPE = {
    ROW: 'row',
    COLUMN: 'column'
  };

  var Separator = function (_React$PureComponent) {
    (0, _inherits2.default)(Separator, _React$PureComponent);

    function Separator() {
      (0, _classCallCheck2.default)(this, Separator);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Separator).apply(this, arguments));
    }

    (0, _createClass2.default)(Separator, [{
      key: "render",
      value: function render() {
        var separatorContainer;
        var separatorStyle;

        if (this.props.type === TYPE.ROW) {
          var maxHeight = {};

          if (this.props.style && this.props.style.height) {
            if (this.props.style.height > 1) {
              maxHeight = {
                height: 1
              };
            }
          }

          separatorContainer = {
            backgroundColor: 'transparent',
            height: 1,
            justifyContent: 'center'
          };
          separatorStyle = _reactNative.StyleSheet.flatten([_resources.Styles.common.separator, this.props.style, maxHeight]);
        } else {
          var maxWidth = {};

          if (this.props.style && this.props.style.width) {
            if (this.props.style.width > 1) {
              maxWidth = {
                width: 1
              };
            }
          }

          separatorContainer = {
            backgroundColor: 'transparent',
            width: 1,
            alignItems: 'center'
          };
          separatorStyle = _reactNative.StyleSheet.flatten([{
            width: _reactNative.StyleSheet.hairlineWidth,
            backgroundColor: _resources.Styles.common.hairlineColor
          }, this.props.style, maxWidth]);
        }

        return _reactNative.Platform.select({
          android: _react.default.createElement(_reactNative.View, {
            style: separatorContainer
          }, _react.default.createElement(_reactNative.View, {
            style: separatorStyle
          })),
          ios: _react.default.createElement(_reactNative.View, {
            style: separatorStyle
          })
        });
      }
    }]);
    return Separator;
  }(_react.default.PureComponent);

  Separator.propTypes = {
    type: _propTypes.default.string,
    style: _propTypes.default.any
  };
  Separator.defaultProps = {
    type: TYPE.ROW
  };
  var _default = Separator;
  exports.default = _default;
},22906,[14305,14320,14323,14371,14377,14386,10297,10033,10318,22453]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "StringSpinner", {
    enumerable: true,
    get: function get() {
      return _StringSpinner.default;
    }
  });
  Object.defineProperty(exports, "NumberSpinner", {
    enumerable: true,
    get: function get() {
      return _NumberSpinner.default;
    }
  });

  var _StringSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _NumberSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
},22909,[14305,22912,22918]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[11]);

  var _nativeModules = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var StringSpinner = function (_React$Component) {
    (0, _inherits2.default)(StringSpinner, _React$Component);

    function StringSpinner(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, StringSpinner);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(StringSpinner).call(this, props, context));
      (0, _reportDecorator.referenceReport)('StringSpinner');
      _this.gestureHandlers = {};

      if (_this.props.onChangeStart && _reactNative.Platform.OS === 'ios') {
        _this.gestureHandlers = {
          onStartShouldSetResponder: function onStartShouldSetResponder() {
            return true;
          },
          onResponderStart: function onResponderStart() {
            _this.props.onChangeStart();
          }
        };
      }

      return _this;
    }

    (0, _createClass2.default)(StringSpinner, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var pickerStyle = this.props.pickerInnerStyle;

        if (pickerStyle && pickerStyle.textColor) {
          pickerStyle.textColor = pickerStyle.textColor + "text";
        }

        if (pickerStyle && pickerStyle.selectTextColor) {
          pickerStyle.selectTextColor = pickerStyle.selectTextColor + "text";
        }

        if (pickerStyle && pickerStyle.unitTextColor) {
          pickerStyle.unitTextColor = pickerStyle.unitTextColor + "text";
        }

        return _react.default.createElement(_nativeModules.MIOTStringPicker, (0, _extends2.default)({}, this.gestureHandlers, this.props, pickerStyle, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }), {
          onValueChanged: function onValueChanged(event) {
            if (_this2.props.onValueChanged) {
              _this2.props.onValueChanged((0, _objectSpread2.default)({}, event.nativeEvent));
            }
          }
        }));
      }
    }]);
    return StringSpinner;
  }(_react.default.Component);

  StringSpinner.propTypes = (0, _objectSpread2.default)({
    visible: _propTypes.default.bool,
    dataSource: _propTypes.default.array,
    defaultValue: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.array]),
    onValueChanged: _propTypes.default.func,
    pickerInnerStyle: _propTypes.default.object
  }, _reactNative.ViewPropTypes, {
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  });
  var _default = StringSpinner;
  exports.default = _default;
},22912,[14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22420,22915,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.MIOTStringPicker = exports.MIOTNumberPicker = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var MIOTNumberPicker = (0, _reactNative.requireNativeComponent)('MIOTNumberPicker');
  exports.MIOTNumberPicker = MIOTNumberPicker;
  var MIOTStringPicker = (0, _reactNative.requireNativeComponent)('MHStringPicker');
  exports.MIOTStringPicker = MIOTStringPicker;
},22915,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _StringSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _nativeModules = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var isAndroid = _reactNative.Platform.OS === 'android';
  var NumberPicker = isAndroid ? _nativeModules.MIOTNumberPicker : null;

  var NumberSpinner = function (_React$Component) {
    (0, _inherits2.default)(NumberSpinner, _React$Component);

    function NumberSpinner(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, NumberSpinner);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NumberSpinner).call(this, props, context));
      (0, _reportDecorator.referenceReport)('NumberSpinner');
      return _this;
    }

    (0, _createClass2.default)(NumberSpinner, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return isAndroid ? _react.default.createElement(NumberPicker, (0, _extends2.default)({}, this.props, this.props.pickerInnerStyle, {
          lineStyle: this.props.lineStyle || 'default',
          onValueChanged: function onValueChanged(event) {
            if (_this2.props.onNumberChanged) {
              var val = event.nativeEvent || {};
              var result = {
                newValue: parseFloat("" + val.newValue),
                oldValue: parseFloat("" + val.oldValue)
              };

              _this2.props.onNumberChanged(result);
            }
          }
        })) : _react.default.createElement(_StringSpinner.default, (0, _extends2.default)({
          type: 1
        }, this.props, {
          defaultValue: "" + this.props.defaultValue,
          onValueChanged: this.props.onNumberChanged
        }));
      }
    }]);
    return NumberSpinner;
  }(_react.default.Component);

  NumberSpinner.defaultProps = {
    valueFormat: _reactNative.Platform.select({
      ios: '%0.0f'
    })
  };
  NumberSpinner.propTypes = (0, _objectSpread2.default)({
    visible: _propTypes.default.bool,
    unit: _propTypes.default.string,
    maxValue: _propTypes.default.number,
    minValue: _propTypes.default.number,
    interval: _propTypes.default.number,
    defaultValue: _propTypes.default.number,
    valueFormat: _propTypes.default.string,
    onNumberChanged: _propTypes.default.func
  }, _reactNative.ViewPropTypes);
  var _default = NumberSpinner;
  exports.default = _default;
},22918,[14305,14314,14344,14320,14323,14371,14377,14386,10318,10297,10033,22912,22915,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "MHDatePicker", {
    enumerable: true,
    get: function get() {
      return _MHDatePicker.default;
    }
  });

  var _MHDatePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22921,[14305,22924]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[13]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _string = _$$_REQUIRE(_dependencyMap[16]);

  var _StringSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _utils = _$$_REQUIRE(_dependencyMap[18]);

  var _locale = _$$_REQUIRE(_dependencyMap[19]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[20]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[21]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[22]);

  var _popButton = _$$_REQUIRE(_dependencyMap[23]);

  var _font = _$$_REQUIRE(_dependencyMap[24]);

  var _singleDataSource;

  var TYPE = {
    SINGLE: 'single',
    TIME24: 'time24',
    TIME12: 'time12',
    DATE: 'date'
  };
  Object.freeze(TYPE);
  var SINGLE_TYPE = {
    MONTH: 'month',
    DAY: 'day',
    HOUR: 'hour',
    MINUTE: 'minute',
    SECOND: 'second'
  };
  Object.freeze(SINGLE_TYPE);
  var screenBackgroundColor = 'rgba(0,0,0,0.4)';
  var margin = 0;
  var borderRadius = 20;
  var titleHeightThin = 62;
  var titleHeightFat = 78;
  var rowHeight = 48;

  var pickerContainerHeight = _reactNative.Platform.select({
    android: 240,
    ios: 224
  });

  var buttonHeight = 46;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var modalWidth = width - 0;
  var months = (0, _utils.constructArray)(12, true, false);
  var days = (0, _utils.constructArray)(31, true, false);
  var hours24 = (0, _utils.constructArray)(24, true, true);
  var hours12 = hours24.slice(1, 13);
  var minutes = (0, _utils.constructArray)(60, true, true);
  var singleDataSource = (_singleDataSource = {}, (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.MONTH, months), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.DAY, days), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.HOUR, (0, _utils.constructArray)(24, true, false)), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.MINUTE, (0, _utils.constructArray)(60, true, false)), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.SECOND, (0, _utils.constructArray)(60, true, false)), _singleDataSource);
  Object.freeze(singleDataSource);
  var days31 = ['01', '03', '05', '07', '08', '10', '12'];
  var days30 = ['04', '06', '09', '11'];
  var defaultYearOffset = 15;

  var MHDatePicker = function (_React$Component) {
    (0, _inherits2.default)(MHDatePicker, _React$Component);

    function MHDatePicker(props, context) {
      var _context$media, _context$media2;

      var _this;

      (0, _classCallCheck2.default)(this, MHDatePicker);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MHDatePicker).call(this, props));
      _this.colorDatePickerSelectBg = new _DynamicColor.default('#f3f3f3', '#242424');
      (0, _reportDecorator.referenceReport)('MHDatePicker');

      var _this$init = _this.init(props, context),
          currentArray = _this$init.currentArray,
          dataSourceArray = _this$init.dataSourceArray;

      var subtitle = _this.getSubtitle(currentArray, context);

      _this.state = {
        visible: _this.props.visible,
        dataSourceArray: dataSourceArray,
        currentArray: currentArray,
        subtitle: subtitle
      };
      _this.responsiveDialogStyle = ((_context$media = context.media) == null ? undefined : _context$media.screenType) === 'tablet' ? {
        alignItems: 'center',
        justifyContent: 'center',
        flexDirection: 'column'
      } : {};
      _this.responsiveDialogModalStyle = ((_context$media2 = context.media) == null ? undefined : _context$media2.screenType) === 'tablet' ? _Styles.default.dialog.padModal : {};
      return _this;
    }

    (0, _createClass2.default)(MHDatePicker, [{
      key: "getSubtitle",
      value: function getSubtitle(arr, context) {
        var _TYPE$DATE$TYPE$TIME;

        if (this.props.type === TYPE.SINGLE) {
          var count = parseInt(arr[0], 10);
          var unit = count > 1 ? _locale.Locale.of(context.language)[this.props.singleType + "s"] : _locale.Locale.of(context.language)[this.props.singleType];
          return (0, _string.formatString)(_locale.Locale.of(context.language).singleSubTitle, count, unit);
        }

        return _string.formatString.apply(undefined, [(_TYPE$DATE$TYPE$TIME = {}, (0, _defineProperty2.default)(_TYPE$DATE$TYPE$TIME, TYPE.DATE, _locale.Locale.of(context.language).dateSubTitle), (0, _defineProperty2.default)(_TYPE$DATE$TYPE$TIME, TYPE.TIME24, _locale.Locale.of(context.language).time24SubTitle), (0, _defineProperty2.default)(_TYPE$DATE$TYPE$TIME, TYPE.TIME12, _locale.Locale.of(context.language).time12SubTitle), _TYPE$DATE$TYPE$TIME)[this.props.type]].concat((0, _toConsumableArray2.default)(arr)));
      }
    }, {
      key: "convert",
      value: function convert(cur, context) {
        var type = this.props.type;

        if (cur instanceof Date) {
          switch (type) {
            case TYPE.DATE:
              return this.convert([cur.getFullYear(), cur.getMonth() + 1, cur.getDate()], context);

            case TYPE.TIME24:
              return this.convert([cur.getHours(), cur.getMinutes()], context);

            case TYPE.TIME12:
              return this.convertTo12([cur.getHours(), cur.getMinutes()], context);

            case TYPE.SINGLE:
              return ['01'];

            default:
              return ['01'];
          }
        } else if (cur instanceof Array) {
          switch (type) {
            case TYPE.DATE:
              return cur.slice(0, 3).map(function (v, i) {
                return i === 0 ? "" + v : ("0" + v).slice(-2);
              });

            case TYPE.TIME24:
              return cur.slice(0, 2).map(function (v) {
                return ("0" + v).slice(-2);
              });

            case TYPE.TIME12:
              return this.convertTo12(cur, context);

            case TYPE.SINGLE:
              return cur.slice(0, 1).map(function (v) {
                return ("0" + v).slice(-2);
              });

            default:
              return ['01'];
          }
        } else if (typeof cur === 'string' || typeof cur === 'number') {
            return ["" + cur];
          } else {
              return ['01'];
            }
      }
    }, {
      key: "convertTo12",
      value: function convertTo12(arr, context) {
        if (arr.length === 2) {
          var newArr = arr.map(function (v) {
            return parseInt(v);
          });

          if (newArr.every(function (v) {
            return Number.isInteger;
          })) {
            var res;

            if (newArr[0] === 0) {
              res = [_locale.Locale.of(context.language).am, 12, newArr[1]];
            } else {
              var timeSystemString = newArr[0] > 11 ? _locale.Locale.of(context.language).pm : _locale.Locale.of(context.language).am;
              var hour = newArr[0] > 12 ? "" + (newArr[0] - 12) : "" + newArr[0];
              var minute = "" + newArr[1];
              res = [timeSystemString, hour, minute];
            }

            return res.map(function (v, i) {
              return i > 0 ? ("0" + v).slice(-2) : v;
            });
          }
        }

        return this.convert(new Date(), context);
      }
    }, {
      key: "slice",
      value: function slice(arr, head, tail) {
        if (head === undefined && tail === undefined) return arr;
        var index = arr.indexOf(("0" + head).slice(-2)) || 0;
        var lastIndex = arr.lastIndexOf(("0" + tail).slice(-2)) || arr.length - 1;
        return arr.slice(index, lastIndex + 1);
      }
    }, {
      key: "getYears",
      value: function getYears(min, max, context) {
        this.min = this.convert(min, context);
        this.max = this.convert(max, context);
        var minY = Number.parseInt(this.min[0]);
        var maxY = Number.parseInt(this.max[0]);
        return this.generateArray(minY, maxY);
      }
    }, {
      key: "generateArray",
      value: function generateArray(min, max) {
        if (min > max) {
          return [];
        }

        return Array.from({
          length: max - min + 1
        }, function (v, i) {
          return i + min;
        }).map(function (v) {
          return "" + v;
        });
      }
    }, {
      key: "init",
      value: function init(props, context) {
        var type = props.type,
            singleType = props.singleType,
            current = props.current,
            min = props.min,
            max = props.max;
        var currentArray = this.convert(current || new Date(), context);

        switch (type) {
          case TYPE.DATE:
            var yearNow = new Date().getFullYear();
            var minDefault = new Date();
            minDefault.setFullYear(yearNow - defaultYearOffset);
            var maxDefault = new Date();
            maxDefault.setFullYear(yearNow + defaultYearOffset);
            var years = this.getYears(min || minDefault, max || maxDefault, context);
            var dataSourceArray = [years, months, days];
            this.updateDays(currentArray, dataSourceArray);
            this.unitArray = [_locale.Locale.of(context.language).yearUnit, _locale.Locale.of(context.language).monthUnit, _locale.Locale.of(context.language).dayUnit];
            return {
              currentArray: currentArray,
              dataSourceArray: dataSourceArray
            };

          case TYPE.TIME24:
            this.unitArray = [_locale.Locale.of(context.language).hourUnit, _locale.Locale.of(context.language).minuteUnit];
            return {
              currentArray: currentArray,
              dataSourceArray: [hours24, minutes]
            };

          case TYPE.TIME12:
            this.unitArray = ['', _locale.Locale.of(context.language).hourUnit, _locale.Locale.of(context.language).minuteUnit];
            return {
              currentArray: currentArray,
              dataSourceArray: [[_locale.Locale.of(context.language).am, _locale.Locale.of(context.language).pm], hours12, minutes]
            };

          case TYPE.SINGLE:
          default:
            this.unitArray = [_locale.Locale.of(context.language)[singleType + "Unit"]];
            return {
              currentArray: currentArray,
              dataSourceArray: [this.slice(singleDataSource[singleType], min, max)]
            };
        }
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }

        if (newProps.current === undefined || newProps.current !== this.props.current) {
          var currentArray = this.convert(newProps.current || new Date(), this.context);
          this.setState({
            currentArray: currentArray,
            subtitle: this.getSubtitle(currentArray, this.context)
          });
        }
      }
    }, {
      key: "checkUnlimitedHeightEnable",
      value: function checkUnlimitedHeightEnable() {
        var result = false;

        if (this.props.datePickerStyle && this.props.datePickerStyle.hasOwnProperty('unlimitedHeightEnable')) {
          result = this.props.datePickerStyle.unlimitedHeightEnable;
        }

        return result;
      }
    }, {
      key: "renderTitle",
      value: function renderTitle() {
        var theme = this.context.theme;
        var styleHeight = {
          height: this.props.showSubtitle ? titleHeightFat : titleHeightThin
        };
        var heightStyle = {
          height: styleHeight.height,
          minHeight: styleHeight.height
        };

        if (this.checkUnlimitedHeightEnable()) {
          heightStyle.height = null;
        }

        var numberOfLines = {
          titleNumberOfLines: 1,
          subTitleNumberOfLines: 1
        };

        if (this.props.datePickerStyle) {
          if (this.props.datePickerStyle.hasOwnProperty('titleNumberOfLines')) {
            numberOfLines.titleNumberOfLines = this.props.datePickerStyle.titleNumberOfLines;
          }

          if (this.props.datePickerStyle.hasOwnProperty('subTitleNumberOfLines')) {
            numberOfLines.subTitleNumberOfLines = this.props.datePickerStyle.subTitleNumberOfLines;
          }
        }

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.titleContainer, heightStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel
        })), _react.default.createElement(_reactNative.Text, {
          numberOfLines: numberOfLines.titleNumberOfLines,
          allowFontScaling: this.props.datePickerStyle.allowFontScaling,
          style: [styles.title, {
            color: theme == null ? undefined : theme.colorBlack
          }, this.props.datePickerStyle.titleStyle]
        }, this.props.title || ''), this.props.showSubtitle ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: numberOfLines.subTitleNumberOfLines,
          allowFontScaling: this.props.datePickerStyle.allowFontScaling,
          style: [styles.subtitle, {
            color: theme == null ? undefined : theme.colorGrayNormal
          }, this.props.datePickerStyle.subTitleStyle]
        }, this.state.subtitle) : null);
      }
    }, {
      key: "renderContent",
      value: function renderContent() {
        var _this2 = this;

        var _this$context = this.context,
            theme = _this$context.theme,
            colorScheme = _this$context.colorScheme,
            media = _this$context.media;
        var _this$state = this.state,
            currentArray = _this$state.currentArray,
            dataSourceArray = _this$state.dataSourceArray;
        var length = currentArray.length;
        var actualWidth = (media == null ? undefined : media.screenType) === 'tablet' ? _Styles.default.dialog.padModal.width : this.modalWidth;
        var normalWidth = actualWidth / length;
        var yearWidth = normalWidth + 10;
        var monthWidth = (actualWidth - yearWidth) / 2;
        var tempPickerInnerStyle = {
          lineColor: 'transparent',
          textColor: theme.colorGrayLighter,
          fontSize: 17,
          selectTextColor: theme.colorPrimary,
          selectFontSize: 19,
          unitTextColor: theme.colorPrimary,
          unitFontSize: 10,
          rowHeight: rowHeight,
          selectBgColor: 'transparent'
        };

        if (this.props.datePickerStyle && this.props.datePickerStyle.hasOwnProperty('pickerInnerStyle')) {
          tempPickerInnerStyle = this.props.datePickerStyle.pickerInnerStyle;
        }

        tempPickerInnerStyle.allowFontScaling = this.props.datePickerStyle.allowFontScaling;
        return _react.default.createElement(_reactNative.View, {
          style: styles.pickerContainer
        }, dataSourceArray.map(function (dataSource, index) {
          var style = {
            width: normalWidth
          };

          if (_this2.props.type === TYPE.DATE) {
            if (index === 0) style = {
              width: yearWidth
            };else style = {
              width: monthWidth
            };
          }

          return _react.default.createElement(_reactNative.View, {
            key: index + _this2.unitArray[index],
            style: [{
              flexDirection: 'row'
            }, style]
          }, _react.default.createElement(_StringSpinner.default, (0, _extends2.default)({
            key: index + _this2.unitArray[index],
            style: style,
            unit: _this2.unitArray[index],
            dataSource: dataSource,
            defaultValue: currentArray[index],
            pickerInnerStyle: tempPickerInnerStyle,
            onValueChanged: function onValueChanged(data) {
              return _this2._onValueChanged(index, data);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
            accessibilityLabel: _this2.props.accessibilityLabel,
            accessibilityHint: _this2.props.accessibilityHint,
            accessibilityValue: {
              min: Array.isArray(_this2.min) ? _this2.min[index] : 0,
              max: Array.isArray(_this2.max) ? _this2.max[index] : 0,
              now: _this2.state.currentArray[index]
            }
          }))));
        }));
      }
    }, {
      key: "renderButton",
      value: function renderButton() {
        var _this$props$datePicke,
            _this3 = this,
            _this$props$datePicke2;

        var heightStyle = {
          height: styles.buttons.minHeight,
          minHeight: styles.buttons.minHeight
        };

        if (this.checkUnlimitedHeightEnable()) {
          heightStyle.height = null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [styles.buttons, heightStyle]
        }, _react.default.createElement(_popButton.PopButton, {
          sizeLevel: "medium",
          style: {
            marginRight: 6
          },
          title: _locale.Locale.of(this.context.language).cancel,
          titleStyle: this.props.datePickerStyle.leftButtonStyle,
          titleColor: (_this$props$datePicke = this.props.datePickerStyle.leftButtonStyle) == null ? undefined : _this$props$datePicke.color,
          backgroundColor: this.props.datePickerStyle.leftButtonBgStyle,
          colorType: "grayLayerBlack",
          onPress: function onPress() {
            return _this3.dismiss();
          },
          allowFontScaling: this.props.datePickerStyle.allowFontScaling
        }), _react.default.createElement(_popButton.PopButton, {
          sizeLevel: "medium",
          style: {
            marginLeft: 6
          },
          title: _locale.Locale.of(this.context.language).ok,
          titleStyle: this.props.datePickerStyle.rightButtonStyle,
          titleColor: (_this$props$datePicke2 = this.props.datePickerStyle.rightButtonStyle) == null ? undefined : _this$props$datePicke2.color,
          backgroundColor: this.props.datePickerStyle.rightButtonBgStyle,
          colorType: "grayLayerBlue",
          onPress: function onPress() {
            return _this3.confirm();
          },
          allowFontScaling: this.props.datePickerStyle.allowFontScaling
        }));
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var theme = this.context.theme;

        var _Dimensions$get2 = _reactNative.Dimensions.get('window'),
            width = _Dimensions$get2.width,
            height = _Dimensions$get2.height;

        this.modalWidth = width - 0;
        return _react.default.createElement(_reactNative.Modal, {
          animationType: this.props.animationType,
          transparent: true,
          visible: this.state.visible,
          onRequestClose: function onRequestClose() {
            return _this4.dismiss();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.background, this.responsiveDialogStyle]
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: function onPress() {
            return _this4.dismiss();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            width: width,
            height: height
          }
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.modal, {
            backgroundColor: theme == null ? undefined : theme.colorForeground,
            width: this.modalWidth
          }, this.responsiveDialogModalStyle]
        }, this.renderTitle(), this.renderContent(), this.renderButton())));
      }
    }, {
      key: "updateDays",
      value: function updateDays(newCurrentArray, newDataSourceArray) {
        var _newCurrentArray = (0, _slicedToArray2.default)(newCurrentArray, 3),
            year = _newCurrentArray[0],
            month = _newCurrentArray[1],
            day = _newCurrentArray[2];

        if (days31.includes(month)) {
          newDataSourceArray[2] = days;
        } else if (days30.includes(month)) {
          newDataSourceArray[2] = days.slice(0, 30);
        } else {
          if ((0, _utils.isLeapYear)(parseInt(year))) {
            newDataSourceArray[2] = days.slice(0, 29);
          } else {
            newDataSourceArray[2] = days.slice(0, 28);
          }
        }

        if (!newDataSourceArray[2].includes(day)) {
          newCurrentArray[2] = newDataSourceArray[2][newDataSourceArray[2].length - 1];
        }
      }
    }, {
      key: "_onValueChanged",
      value: function _onValueChanged(index, data) {
        var _this5 = this;

        var newCurrentArray = (0, _toConsumableArray2.default)(this.state.currentArray);
        newCurrentArray[index] = data.newValue;
        var newDataSourceArray = (0, _toConsumableArray2.default)(this.state.dataSourceArray);
        this.setState({
          currentArray: newCurrentArray,
          subtitle: this.getSubtitle(newCurrentArray, this.context)
        }, function (_) {
          _this5.props.onValueChange && _this5.props.onValueChange({
            rawArray: _this5.state.currentArray,
            rawString: _this5.state.subtitle,
            date: _this5.array2Date()
          });

          if (_this5.props.type === TYPE.DATE) {
            var needUpdate = false;

            if ((0, _utils.compareDateArray)(newCurrentArray, _this5.max) > 0) {
              newCurrentArray = _this5.max;
              needUpdate = true;
            }

            if ((0, _utils.compareDateArray)(newCurrentArray, _this5.min) < 0) {
              newCurrentArray = _this5.min;
              needUpdate = true;
            }

            _this5.updateDays(newCurrentArray, newDataSourceArray);

            if (newDataSourceArray[2].length !== _this5.state.dataSourceArray[2].length) {
              needUpdate = true;
            }

            needUpdate && _this5.setState({
              subtitle: _this5.getSubtitle(newCurrentArray, _this5.context),
              currentArray: newCurrentArray,
              dataSourceArray: newDataSourceArray
            });
          }
        });
      }
    }, {
      key: "dismiss",
      value: function dismiss() {
        this.setState({
          visible: false
        });
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "array2Date",
      value: function array2Date() {
        var currentArray = this.state.currentArray;
        var date = new Date();

        switch (this.props.type) {
          case TYPE.DATE:
            date.setFullYear(currentArray[0]);
            date.setMonth(parseInt(currentArray[1], 10) - 1, parseInt(currentArray[2], 10));
            date.setDate(parseInt(currentArray[2], 10));
            break;

          case TYPE.TIME24:
            date.setHours(currentArray[0]);
            date.setMinutes(currentArray[1]);
            break;

          case TYPE.TIME12:
            var hour = parseInt(currentArray[1], 10);

            if (currentArray[0] === _locale.Locale.of(this.context.language).am) {
              hour = hour === 12 ? 0 : hour;
            } else {
              hour = hour < 12 ? hour + 12 : hour;
            }

            date.setHours(hour);
            date.setMinutes(currentArray[2]);
            break;

          case TYPE.SINGLE:
          default:
            return null;
        }

        return date;
      }
    }, {
      key: "confirm",
      value: function confirm() {
        if (this.props.onSelect) {
          this.props.onSelect({
            rawArray: this.state.currentArray,
            rawString: this.state.subtitle,
            date: this.array2Date()
          });
        }

        this.dismiss();
      }
    }]);
    return MHDatePicker;
  }(_react.default.Component);

  MHDatePicker.contextType = _configProvider.ConfigContext;
  MHDatePicker.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    title: _propTypes.default.string,
    showSubtitle: _propTypes.default.bool,
    confirmColor: _propTypes.default.string,
    type: _propTypes.default.oneOf([TYPE.DATE, TYPE.SINGLE, TYPE.TIME12, TYPE.TIME24]),
    singleType: _propTypes.default.oneOf([SINGLE_TYPE.MONTH, SINGLE_TYPE.DAY, SINGLE_TYPE.HOUR, SINGLE_TYPE.MINUTE, SINGLE_TYPE.SECOND]),
    current: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.instanceOf(Date)]).isRequired,
    min: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.instanceOf(Date)]),
    max: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.instanceOf(Date)]),
    datePickerStyle: _propTypes.default.object,
    onSelect: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  MHDatePicker.defaultProps = {
    animationType: 'fade',
    visible: false,
    title: '开启时间',
    showSubtitle: true,
    confirmColor: _Styles.default.common.MHGreen,
    type: TYPE.TIME24,
    singleType: SINGLE_TYPE.MINUTE,
    datePickerStyle: {
      unlimitedHeightEnable: false,
      allowFontScaling: true,
      titleNumberOfLines: 1,
      subTitleNumberOfLines: 1,
      titleStyle: null,
      subTitleStyle: null,
      leftButtonNumberOfLines: 1,
      rightButtonNumberOfLines: 1,
      leftButtonStyle: null,
      rightButtonStyle: null,
      rightButtonBgStyle: null,
      leftButtonBgStyle: null
    },
    onSelect: function onSelect() {},
    accessible: true
  };
  MHDatePicker.TYPE = TYPE;
  MHDatePicker.SINGLE_TYPE = SINGLE_TYPE;

  var styles = _reactNative.StyleSheet.create({
    background: {
      flex: 1,
      backgroundColor: screenBackgroundColor
    },
    modal: {
      position: 'absolute',
      bottom: 0,
      paddingBottom: 20,
      width: modalWidth,
      marginHorizontal: margin,
      borderTopLeftRadius: borderRadius,
      borderTopRightRadius: borderRadius
    },
    titleContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    title: (0, _objectSpread2.default)({
      lineHeight: 22,
      marginTop: 25,
      fontSize: 16
    }, _font.FontPrimary),
    subtitle: (0, _objectSpread2.default)({
      width: modalWidth,
      textAlign: 'center',
      fontSize: 14,
      marginTop: 5
    }, _font.FontPrimary),
    pickerContainer: {
      flexDirection: 'row',
      height: pickerContainerHeight,
      justifyContent: 'space-between'
    },
    buttons: {
      minHeight: buttonHeight,
      flexDirection: 'row',
      backgroundColor: 'transparent',
      justifyContent: 'space-around',
      marginHorizontal: 27
    }
  });

  var _default = MHDatePicker;
  exports.default = _default;
},22924,[14305,14314,14347,14344,14359,14320,14323,14371,14377,14386,14317,10318,10297,10033,22435,22780,22927,22912,22930,22933,22426,22420,22423,23212,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.formatString = undefined;
  var placeholderRegex = /(\{[\d|\w]+\})/;

  var formatString = function formatString(str) {
    for (var _len = arguments.length, valuesForPlaceholders = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      valuesForPlaceholders[_key - 1] = arguments[_key];
    }

    return (str || '').split(placeholderRegex).filter(function (textPart) {
      return !!textPart;
    }).map(function (textPart) {
      if (textPart.match(placeholderRegex)) {
        var matchedKey = textPart.slice(1, -1);
        var valueForPlaceholder = valuesForPlaceholders[matchedKey];

        if (valueForPlaceholder == undefined) {
          var valueFromObjectPlaceholder = valuesForPlaceholders[0][matchedKey];

          if (valueFromObjectPlaceholder !== undefined) {
            valueForPlaceholder = valueFromObjectPlaceholder;
          } else {
            return valueForPlaceholder;
          }
        }

        return valueForPlaceholder;
      }

      return textPart;
    }).join('');
  };

  exports.formatString = formatString;
},22927,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.constructArray = constructArray;
  exports.isLeapYear = isLeapYear;
  exports.compareDateArray = compareDateArray;

  function constructArray(length) {
    var zeroPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    var fromZero = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var maxLength = (length - (fromZero ? 1 : 0)).toString().length;
    return Array.from({
      length: length
    }, function (v, i) {
      return ((zeroPrefix ? '0000000000000' : '') + (i + (fromZero ? 0 : 1))).slice(-maxLength);
    });
  }

  function isLeapYear(year) {
    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0 && year % 3200 !== 0;
  }

  function compareDateArray(arrA, arrB) {
    return Number(arrA.join('')) - Number(arrB.join(''));
  }
},22930,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Locale = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var langs = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var Locale = function () {
    function Locale() {
      (0, _classCallCheck2.default)(this, Locale);
    }

    (0, _createClass2.default)(Locale, null, [{
      key: "of",
      value: function of() {
        var lang = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'zh';
        return langs[lang];
      }
    }]);
    return Locale;
  }();

  exports.Locale = Locale;
},22933,[14308,14305,14320,14323,22936]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "zh", {
    enumerable: true,
    get: function get() {
      return _zh.zh;
    }
  });
  Object.defineProperty(exports, "zh_tw", {
    enumerable: true,
    get: function get() {
      return _zh_tw.zh_tw;
    }
  });
  Object.defineProperty(exports, "zh_hk", {
    enumerable: true,
    get: function get() {
      return _zh_hk.zh_hk;
    }
  });
  Object.defineProperty(exports, "en", {
    enumerable: true,
    get: function get() {
      return _en.en;
    }
  });
  Object.defineProperty(exports, "ko", {
    enumerable: true,
    get: function get() {
      return _ko.ko;
    }
  });
  Object.defineProperty(exports, "ru", {
    enumerable: true,
    get: function get() {
      return _ru.ru;
    }
  });
  Object.defineProperty(exports, "es", {
    enumerable: true,
    get: function get() {
      return _es.es;
    }
  });
  Object.defineProperty(exports, "fr", {
    enumerable: true,
    get: function get() {
      return _fr.fr;
    }
  });
  Object.defineProperty(exports, "it", {
    enumerable: true,
    get: function get() {
      return _it.it;
    }
  });
  Object.defineProperty(exports, "de", {
    enumerable: true,
    get: function get() {
      return _de.de;
    }
  });
  Object.defineProperty(exports, "id", {
    enumerable: true,
    get: function get() {
      return _id.id;
    }
  });
  Object.defineProperty(exports, "pl", {
    enumerable: true,
    get: function get() {
      return _pl.pl;
    }
  });
  Object.defineProperty(exports, "vi", {
    enumerable: true,
    get: function get() {
      return _vi.vi;
    }
  });
  Object.defineProperty(exports, "ja", {
    enumerable: true,
    get: function get() {
      return _ja.ja;
    }
  });
  Object.defineProperty(exports, "th", {
    enumerable: true,
    get: function get() {
      return _th.th;
    }
  });
  Object.defineProperty(exports, "tr", {
    enumerable: true,
    get: function get() {
      return _tr.tr;
    }
  });
  Object.defineProperty(exports, "nl", {
    enumerable: true,
    get: function get() {
      return _nl.nl;
    }
  });
  Object.defineProperty(exports, "pt", {
    enumerable: true,
    get: function get() {
      return _pt.pt;
    }
  });

  var _zh = _$$_REQUIRE(_dependencyMap[0]);

  var _zh_tw = _$$_REQUIRE(_dependencyMap[1]);

  var _zh_hk = _$$_REQUIRE(_dependencyMap[2]);

  var _en = _$$_REQUIRE(_dependencyMap[3]);

  var _ko = _$$_REQUIRE(_dependencyMap[4]);

  var _ru = _$$_REQUIRE(_dependencyMap[5]);

  var _es = _$$_REQUIRE(_dependencyMap[6]);

  var _fr = _$$_REQUIRE(_dependencyMap[7]);

  var _it = _$$_REQUIRE(_dependencyMap[8]);

  var _de = _$$_REQUIRE(_dependencyMap[9]);

  var _id = _$$_REQUIRE(_dependencyMap[10]);

  var _pl = _$$_REQUIRE(_dependencyMap[11]);

  var _vi = _$$_REQUIRE(_dependencyMap[12]);

  var _ja = _$$_REQUIRE(_dependencyMap[13]);

  var _th = _$$_REQUIRE(_dependencyMap[14]);

  var _tr = _$$_REQUIRE(_dependencyMap[15]);

  var _nl = _$$_REQUIRE(_dependencyMap[16]);

  var _pt = _$$_REQUIRE(_dependencyMap[17]);
},22936,[22939,22942,22945,22948,22951,22954,22957,22960,22963,22966,22969,22972,22975,22978,22981,22984,22987,22990]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.zh = undefined;
  var zh = {
    setting: '设置',
    featureSetting: '功能设置',
    commonSetting: '通用设置',
    name: '设备名称',
    location: '位置管理',
    memberSet: '按键设置',
    share: '设备共享',
    btGateway: '蓝牙网关',
    voiceAuth: '语音授权',
    ifttt: '智能场景',
    firmwareUpgrade: '固件升级',
    more: '更多设置',
    help: '使用帮助',
    legalInfo: '法律信息',
    deleteDevice: '删除设备',
    autoUpgrade: '固件自动升级',
    checkUpgrade: '检查固件升级',
    security: '安全设置',
    networkInfo: '网络信息',
    feedback: '反馈问题',
    timezone: '设备时区',
    addToDesktop: '添加桌面快捷方式',
    cancel: '取消',
    ok: '确定',
    am: '上午',
    pm: '下午',
    months: '个月',
    days: '天',
    hours: '小时',
    minutes: '分钟',
    seconds: '秒钟',
    month: '个月',
    day: '天',
    hour: '小时',
    minute: '分钟',
    second: '秒钟',
    yearUnit: '年',
    monthUnit: '月',
    dayUnit: '日',
    hourUnit: '时',
    minuteUnit: '分',
    secondUnit: '秒',
    dateSubTitle: '{0}年{1}月{2}日',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{0} {1}:{2}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '退出',
    firmwareUpgradeUpdate: '升级',
    firmwareUpgradeLook: '去看看',
    firmwareUpgradeForceUpdate: '由于您当前的设备固件版本过低，一些功能可能无法正常使用。请升级至最新版本，以体验更丰富的功能',
    firmwareUpgradeForceUpdating: '您的设备正在升级，请稍后，以体验更丰富的功能',
    firmwareUpgradeNewPre: '检测到设备有最新固件版本',
    firmwareUpgradeNewSub: '，是否升级',
    handling: '操作中...',
    error: '处理失败，请稍后再试',
    createLightGroup: '创建灯组（新）',
    manageLightGroup: '灯组管理（新）',
    deleteLightGroup: '解散灯组',
    selectPlugin: '请选择喜欢的插件样式使用',
    traditionalPlugin: '传统插件',
    standardPlugin: '标准插件',
    recommended: '（推荐使用）',
    changeSteps: '如需更改插件样式，可按照如下步骤操作',
    stepOne: '第一步：点击插件右上角进入更多设置',
    stepTwo: '第二步：在通用设置里找到“标准插件”，\n操作开关即可切换标准插件/传统插件',
    starting: '开始体验',
    switching: '切换中…',
    switchedSucess: '切换成功',
    switchedfail: '切换失败',
    guideFeedback: '意见反馈',
    next: '下一步'
  };
  exports.zh = zh;
},22939,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.zh_tw = undefined;
  var zh_tw = {
    setting: '設定',
    featureSetting: '裝置設定',
    commonSetting: '一般設定',
    name: '裝置名稱',
    location: '位置管理',
    memberSet: '按鍵設定',
    share: '裝置共用',
    btGateway: '藍牙網關',
    voiceAuth: '語音授權',
    ifttt: '智能場景',
    firmwareUpgrade: '韌體更新',
    more: '更多設定',
    help: '使用説明',
    legalInfo: '法律資訊',
    deleteDevice: '刪除裝置',
    autoUpgrade: '韌體自动更新',
    checkUpgrade: '檢查韌體更新',
    security: '安全設定',
    networkInfo: '網路資訊',
    feedback: '反饋問題',
    timezone: '裝置時區',
    addToDesktop: '新増捷徑至桌面',
    cancel: '取消',
    ok: '確認',
    am: '上午',
    pm: '下午',
    months: '個月',
    days: '天',
    hours: '小時',
    minutes: '分鐘',
    seconds: '秒鐘',
    month: '個月',
    day: '天',
    hour: '小時',
    minute: '分鐘',
    second: '秒鐘',
    yearUnit: '年',
    monthUnit: '月',
    dayUnit: '日',
    hourUnit: '時',
    minuteUnit: '分',
    secondUnit: '秒',
    dateSubTitle: '{0}年{1}月{2}日',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{0} {1}:{2}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '退出',
    firmwareUpgradeUpdate: '升級',
    firmwareUpgradeLook: '看看',
    firmwareUpgradeForceUpdate: '由於您目前的用戶端版本過低，一些功能可能無法正常使用。 請升級最新版本，以體驗更豐富的功能',
    firmwareUpgradeForceUpdating: '您的裝置正在升級，請稍後，以體驗更豐富的功能',
    firmwareUpgradeNewPre: '檢測到裝置有最新韌體版本',
    firmwareUpgradeNewSub: '，是否升級？',
    handling: '執行中...',
    error: '處理失敗，請重試',
    createLightGroup: '建立燈組 (新)',
    manageLightGroup: '燈組管理 (新)',
    deleteLightGroup: '解散燈組',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.zh_tw = zh_tw;
},22942,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.zh_hk = undefined;
  var zh_hk = {
    setting: '設定',
    featureSetting: '裝置設定',
    commonSetting: '一般設定',
    name: '裝置名稱',
    location: '位置管理',
    memberSet: '按鍵設定',
    share: '裝置共用',
    btGateway: '藍牙網關',
    voiceAuth: '語音授權',
    ifttt: '智慧場景',
    firmwareUpgrade: '韌體更新',
    more: '更多設定',
    help: '使用説明',
    legalInfo: '法律資訊',
    deleteDevice: '刪除裝置',
    autoUpgrade: '韌體自动更新',
    checkUpgrade: '檢查韌體更新',
    security: '安全設定',
    networkInfo: '網路資訊',
    feedback: '反饋問題',
    timezone: '裝置時區',
    addToDesktop: '新增捷徑到桌面',
    cancel: '取消',
    ok: '確認',
    am: '上午',
    pm: '下午',
    months: '個月',
    days: '天',
    hours: '小時',
    minutes: '分鐘',
    seconds: '秒鐘',
    month: '個月',
    day: '天',
    hour: '小時',
    minute: '分鐘',
    second: '秒鐘',
    yearUnit: '年',
    monthUnit: '月',
    dayUnit: '日',
    hourUnit: '時',
    minuteUnit: '分',
    secondUnit: '秒',
    dateSubTitle: '{0}年{1}月{2}日',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{0} {1}:{2}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '退出',
    firmwareUpgradeUpdate: '升級',
    firmwareUpgradeLook: '去看看',
    firmwareUpgradeForceUpdate: '由於您目前的用戶端版本過低，一些功能可能無法正常使用。 請升級最新版本，以體驗更豐富的功能',
    firmwareUpgradeForceUpdating: '您的裝置正在升級，請稍後，以體驗更豐富的功能',
    firmwareUpgradeNewPre: '檢測到裝置有最新韌體版本',
    firmwareUpgradeNewSub: '，是否升級？',
    handling: '執行中...',
    error: '處理失敗，請重試',
    createLightGroup: '建立燈組（新）',
    manageLightGroup: '燈組管理（新）',
    deleteLightGroup: '解散燈組',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.zh_hk = zh_hk;
},22945,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.en = undefined;
  var en = {
    setting: 'Settings',
    featureSetting: 'Device settings',
    commonSetting: 'General settings',
    name: 'Device name',
    location: 'Manage location',
    memberSet: 'Key settings',
    share: 'Share device',
    btGateway: 'BLE Gateway',
    voiceAuth: 'Voice authorization',
    ifttt: 'Automation',
    firmwareUpgrade: 'Firmware update',
    more: 'Additional settings',
    help: 'Help',
    legalInfo: 'Legal information',
    deleteDevice: 'Delete device',
    autoUpgrade: 'Automatically update firmware',
    checkUpgrade: 'Check for firmware update',
    security: 'Security settings',
    networkInfo: 'Network info',
    feedback: 'Feedback',
    timezone: 'Device time zone',
    addToDesktop: 'Add to Home screen',
    cancel: 'Cancel',
    ok: 'Confirm',
    am: 'AM',
    pm: 'PM',
    months: 'months',
    days: 'days',
    hours: 'hours',
    minutes: 'minutes',
    seconds: 'seconds',
    month: 'month',
    day: 'day',
    hour: 'hour',
    minute: 'minute',
    second: 'second',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Exit',
    firmwareUpgradeUpdate: 'Update',
    firmwareUpgradeLook: 'Take a look',
    firmwareUpgradeForceUpdate: 'Current firmware may be too old to run some features. Update to the latest version for better experience.',
    firmwareUpgradeForceUpdating: 'Your device is updating, try again later',
    firmwareUpgradeNewPre: 'Firmware update ',
    firmwareUpgradeNewSub: ' available. Update now?',
    handling: 'Running…',
    error: 'Could not operate, please try again later',
    createLightGroup: 'Create light group(new)',
    manageLightGroup: 'Manage devices(new)',
    deleteLightGroup: 'Disband light group',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.en = en;
},22948,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ko = undefined;
  var ko = {
    setting: '설정',
    featureSetting: '기기 설정',
    commonSetting: '일반 설정',
    name: '기기 이름',
    location: '위치 관리',
    memberSet: '버튼 설정',
    share: '기기 공유',
    btGateway: 'BLE 게이트웨이',
    voiceAuth: '음성 권한',
    ifttt: '자동화',
    firmwareUpgrade: '펌웨어 업데이트',
    more: '추가 설정',
    help: '도움말',
    legalInfo: '법률 정보',
    deleteDevice: '기기 제거',
    autoUpgrade: '펌웨어 자동 업데이트',
    checkUpgrade: '펌웨어 업데이트 확인',
    security: '보안 설정',
    networkInfo: '네트워크 정보',
    feedback: '피드백',
    timezone: '디바이스 시간대',
    addToDesktop: '홈 화면에 추가',
    cancel: '취소',
    ok: '정보 확인',
    am: '오전',
    pm: '오후',
    months: '달',
    days: '일',
    hours: '시간',
    minutes: '분',
    seconds: '초',
    month: '월',
    day: '일',
    hour: '시',
    minute: '분',
    second: '초',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '나가기',
    firmwareUpgradeUpdate: '업데이트',
    firmwareUpgradeLook: '확인해보세요',
    firmwareUpgradeForceUpdate: '현재 펌웨어 버전이 너무 오래되었습니다. 몇몇 기능이 정상적으로 작동하지 않을 수 있습니다. 더 나은 사용을 위해 최신 버전으로 업데이트 하십시오.',
    firmwareUpgradeForceUpdating: '기기를 업데이트 중입니다. 나중에 다시 시도하십시오.',
    firmwareUpgradeNewPre: '펌웨어 업데이트 ',
    firmwareUpgradeNewSub: ' 가능, 지금 업데이트 하시겠습니까?',
    handling: '실행 중...',
    error: '다시 시도',
    createLightGroup: '전등 그룹 생성(신규)',
    manageLightGroup: '전등 그룹 관리(신규)',
    deleteLightGroup: '전등 그룹 해제',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.ko = ko;
},22951,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ru = undefined;
  var ru = {
    setting: 'Настройки',
    featureSetting: 'Настройки устройств',
    commonSetting: 'Общие настройки',
    name: 'Имя устройства',
    location: 'Управление местами',
    memberSet: 'Настройка кнопок',
    share: 'Поделиться устройством',
    btGateway: 'BLE шлюз',
    voiceAuth: 'Голосовая авторизация',
    ifttt: 'Автоматизация',
    firmwareUpgrade: 'Проверить наличие обновлений',
    more: 'Дополнительные настройки',
    help: 'Справка',
    legalInfo: 'Легальная информация',
    deleteDevice: 'Удалить устройство',
    autoUpgrade: 'Автоматическое обновление встроенного ПО',
    checkUpgrade: 'Проверить наличие обновлений',
    security: 'Параметры безопасности',
    networkInfo: 'Информация о сети',
    feedback: 'Отзыв',
    timezone: 'Часовой пояс устройства',
    addToDesktop: 'Добавить на главный экран',
    cancel: 'Отменить',
    ok: 'Подтвердить',
    am: 'ДП',
    pm: 'ПП',
    months: 'месяцы',
    days: 'дни',
    hours: 'часы',
    minutes: 'минуты',
    seconds: 'секунды',
    month: 'месяц ',
    day: 'день',
    hour: 'час ',
    minute: 'минута',
    second: 'сеунда',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Выход',
    firmwareUpgradeUpdate: 'Обновление',
    firmwareUpgradeLook: 'Посмотреть',
    firmwareUpgradeForceUpdate: 'Текущая версия ПО устарела, некоторые возможности могут быть недоступны. Обновите до последней версии ПО.',
    firmwareUpgradeForceUpdating: 'Устройство обновляется, попробуйте позже',
    firmwareUpgradeNewPre: 'Доступно обновление ПО ',
    firmwareUpgradeNewSub: ', обновить сейчас?',
    handling: 'Загрузка...',
    error: 'Попробовать снова',
    createLightGroup: 'Создать группу светильников (новинка)',
    manageLightGroup: 'Управление устройствами (новинка)',
    deleteLightGroup: 'Расформировать группу светильников',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.ru = ru;
},22954,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.es = undefined;
  var es = {
    setting: 'Ajustes',
    featureSetting: 'Ajustes de dispositivo',
    commonSetting: 'Ajustes generales',
    name: 'Nombre del dispositivo',
    location: 'Gestionar ubicaciones',
    memberSet: 'Ajustes de los botones',
    share: 'Compartir dispositivo',
    btGateway: 'Entrada BLE',
    voiceAuth: 'Autorización de voz',
    ifttt: 'Automatización',
    firmwareUpgrade: 'Actualizaciones de firmware',
    more: 'Ajustes adicionales',
    help: 'Ayuda',
    legalInfo: 'Información legal',
    deleteDevice: 'Eliminar dispositivo',
    autoUpgrade: 'Actualizar automáticamente el firmware',
    checkUpgrade: 'Buscar actualizaciones de firmware',
    security: 'Ajustes de seguridad',
    networkInfo: 'Información de red',
    feedback: 'Comentario',
    timezone: 'Zona horaria del dispositivo',
    addToDesktop: 'Añadir a la pantalla de Inicio',
    cancel: 'Cancelar',
    ok: 'Confirmar',
    am: 'AM',
    pm: 'PM',
    months: 'meses',
    days: 'días',
    hours: 'horas',
    minutes: 'minutos',
    seconds: 'segundos',
    month: 'meses',
    day: 'día',
    hour: 'hora',
    minute: 'minuto',
    second: 'segundo ',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Salir',
    firmwareUpgradeUpdate: 'Actualizar',
    firmwareUpgradeLook: 'Echa un vistazo',
    firmwareUpgradeForceUpdate: 'La versión de firmware actual es demasiado antigua, puede que algunas características no funcionen correctamente. Actualiza a la última versión para una mejor experiencia.',
    firmwareUpgradeForceUpdating: 'Tu dispositivo se está actualizando, inténtalo más tarde',
    firmwareUpgradeNewPre: 'Actualización ',
    firmwareUpgradeNewSub: ' de firmware disponible, ¿actualizar ahora?',
    handling: 'Ejecutándose...',
    error: 'Reintentar',
    createLightGroup: 'Crear grupo de luces (nuevo)',
    manageLightGroup: 'Administrar dispositivos (nuevo)',
    deleteLightGroup: 'Deshacer grupo de luces',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.es = es;
},22957,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.fr = undefined;
  var fr = {
    setting: 'Paramètres',
    featureSetting: "Paramètres de l'appareil",
    commonSetting: 'Paramètres généraux',
    name: "Nom de l'appareil",
    location: 'Gérer emplacement',
    memberSet: 'Paramètres des boutons',
    share: "Partager l'appareil",
    btGateway: 'Passerelle BLE',
    voiceAuth: 'Autorisation vocale',
    ifttt: 'Automatisation',
    firmwareUpgrade: 'Mise à jour logiciel',
    more: 'Paramètres supplémentaires',
    help: 'Aide',
    legalInfo: 'Information légale',
    deleteDevice: "Supprimer l'appareil",
    autoUpgrade: 'Mettre à jour le logiciel automatiquement',
    checkUpgrade: 'Vérifier les mises à jour du micrologiciel',
    security: 'Paramètres de sécurité',
    networkInfo: 'Informations sur le réseau',
    feedback: 'Commentaire',
    timezone: 'Fuseau horaire de l’appareil',
    addToDesktop: "Ajouter à l'écran d'accueil",
    cancel: 'Annuler',
    ok: 'Confirmer',
    am: 'AM',
    pm: 'PM',
    months: 'mois',
    days: 'jours',
    hours: 'heures',
    minutes: 'minutes',
    seconds: 'secondes',
    month: 'mois',
    day: 'jours',
    hour: 'heure',
    minute: 'minute',
    second: 'seconde',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Quitter',
    firmwareUpgradeUpdate: 'Mettre à jour',
    firmwareUpgradeLook: 'Jeter un coup d\'œil',
    firmwareUpgradeForceUpdate: 'La version actuelle du micrologiciel est trop ancienne. Certaines fonctionnalités peuvent ne pas fonctionner correctement. Mettez à jour la dernière version pour une meilleure expérience',
    firmwareUpgradeForceUpdating: 'Votre appareil est en cours de mise à jour. Réessayez plus tard',
    firmwareUpgradeNewPre: 'Mise à jour du micrologiciel ',
    firmwareUpgradeNewSub: ' disponible. Mettre à jour maintenant ?',
    handling: 'En cours d’exécution…',
    error: "Échec de l'opération, veuillez réessayer plus tard",
    createLightGroup: 'Créer un groupe d’éclairage (nouveau)',
    manageLightGroup: 'Gérer les appareils (nouveau)',
    deleteLightGroup: 'Supprimer un groupe d’éclairage',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.fr = fr;
},22960,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.it = undefined;
  var it = {
    setting: 'Impostazioni',
    featureSetting: 'Impostazioni dispositivo',
    commonSetting: 'Impostazioni generali',
    name: 'Nome dispositivo',
    location: 'Gestisci posizione',
    memberSet: 'Impostazioni pulsante',
    share: 'Condividi dispositivo',
    btGateway: 'Gateway BLE',
    voiceAuth: 'Autorizzazione vocale',
    ifttt: 'Automazione',
    firmwareUpgrade: 'Aggiornamento firmware',
    more: 'Impostazioni aggiuntive',
    help: 'Guida',
    legalInfo: 'Informazioni legali',
    deleteDevice: 'Rimuovi dispositivo',
    autoUpgrade: 'Aggiorna automaticamente il firmware',
    checkUpgrade: 'Controlla aggiornamento firmware',
    security: 'Impostazioni di sicurezza',
    networkInfo: 'Informazioni di rete',
    feedback: 'Feedback',
    timezone: 'Fuso orario del dispositivo',
    addToDesktop: 'Aggiungi a schermata iniziale',
    cancel: 'Annulla',
    ok: 'Conferma',
    am: 'AM',
    pm: 'PM',
    months: 'Mesi',
    days: 'Giorni',
    hours: 'Ore',
    minutes: 'Minuti',
    seconds: 'Secondi',
    month: 'Mese',
    day: 'Giorno',
    hour: 'Ora',
    minute: 'Minuto',
    second: 'Secondo',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Esci',
    firmwareUpgradeUpdate: 'Aggiorna',
    firmwareUpgradeLook: 'Guarda',
    firmwareUpgradeForceUpdate: "La versione firmware in uso è obsoleta. Alcune funzioni potrebbero non funzionare correttamente. Aggiorna all'ultima versione per una migliore esperienza.",
    firmwareUpgradeForceUpdating: 'Il dispositivo è in fase di aggiornamento. Riprova più tardi',
    firmwareUpgradeNewPre: 'Aggiornamento firmware ',
    firmwareUpgradeNewSub: ' disponibile. Aggiornare adesso?',
    handling: 'In esecuzione…',
    error: 'Potrebbe non funzionare, riprova più tardi',
    createLightGroup: 'Crea gruppo luci(nuovo)',
    manageLightGroup: 'Gestisci dispositivi(nuovo)',
    deleteLightGroup: 'Elimina gruppo luci',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.it = it;
},22963,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.de = undefined;
  var de = {
    setting: 'Einstellungen',
    featureSetting: 'Geräteinstellungen',
    commonSetting: 'Allgemeine einstellungen',
    name: 'Gerätename',
    location: 'Standort verwalten',
    memberSet: 'Schaltflächen-Einstellungen',
    share: 'Gerät teilen',
    btGateway: 'BLE-Gateway',
    voiceAuth: 'Sprachautorisierung',
    ifttt: 'Automatisierung',
    firmwareUpgrade: 'Firmware-Aktualisierung',
    more: 'Zusätzliche Einstellungen',
    help: 'Hilfe',
    legalInfo: 'Rechtsinformation',
    deleteDevice: 'Gerät entfernen',
    autoUpgrade: 'Firmware automatisch aktualisieren',
    checkUpgrade: 'Nach Firmware-Aktualisierung suchen.',
    security: 'Sicherheitseinstellungen',
    networkInfo: 'Netzwerk-Info',
    feedback: 'Feedback',
    timezone: 'Gerätezeitzone',
    addToDesktop: 'Zum Startbildschirm hinzufügen',
    cancel: 'Abbrechen',
    ok: 'Bestätigen',
    am: 'AM',
    pm: 'PM',
    months: 'Monate',
    days: 'Tage',
    hours: 'Stunden',
    minutes: 'Minuten',
    seconds: 'Sekunden',
    month: 'Monat ',
    day: 'Tag ',
    hour: 'Stunde ',
    minute: 'Minute ',
    second: 'Sekunde ',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Beenden',
    firmwareUpgradeUpdate: 'Aktualisieren',
    firmwareUpgradeLook: 'Ansehen',
    firmwareUpgradeForceUpdate: 'Die aktuelle Firmware ist möglicherweise zu alt, um einige Funktionen auszuführen. Aktualisieren Sie auf die neueste Version, um eine verbesserte Funktionsausführung zu erzielen.',
    firmwareUpgradeForceUpdating: 'Ihr Gerät wird aktualisiert, versuchen Sie es später erneut',
    firmwareUpgradeNewPre: 'Firmware-Aktualisierung ',
    firmwareUpgradeNewSub: ' verfügbar, jetzt aktualisieren?',
    handling: 'Wird ausgeführt...',
    error: 'Funktionierte nicht, bitte versuchen Sie es später erneut.',
    createLightGroup: 'Lichtgruppe erstellen (neu)',
    manageLightGroup: 'Geräte verwalten (neu)',
    deleteLightGroup: 'Lichtgruppe auflösen',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.de = de;
},22966,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.id = undefined;
  var id = {
    setting: 'Pengaturan',
    featureSetting: 'Pengaturan perangkat',
    commonSetting: 'Pengaturan umum',
    name: 'Nama perangkat',
    location: 'Kelola lokasi',
    memberSet: 'Pengaturan tombol',
    share: 'Bagikan perangkat',
    btGateway: 'Gerbang BLE',
    voiceAuth: 'Otorisasi suara',
    ifttt: 'Otomatisasi',
    firmwareUpgrade: 'Pembaruan firmware',
    more: 'Pengaturan tambahan',
    help: 'Bantuan',
    legalInfo: 'Informasi hukum',
    deleteDevice: 'Hapus perangkat',
    autoUpgrade: 'Perbarui firmware secara otomatis',
    checkUpgrade: 'Periksa pembaruan firmware',
    security: 'Pengaturan keamanan',
    networkInfo: 'Pengaturan jaringan',
    feedback: 'Umpan balik',
    timezone: 'Zona waktu perangkat',
    addToDesktop: 'Tambahkan ke layar Beranda',
    cancel: 'Batal',
    ok: 'Konfirmasi',
    am: 'AM',
    pm: 'PM',
    months: 'bulan',
    days: 'hari',
    hours: 'jam',
    minutes: 'menit',
    seconds: 'detik',
    month: 'bulan',
    day: 'hari ',
    hour: 'jam',
    minute: 'menit',
    second: 'detik',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Keluar',
    firmwareUpgradeUpdate: 'Perbarui',
    firmwareUpgradeLook: 'Lihat',
    firmwareUpgradeForceUpdate: 'Versi firmware saat ini sudah terlalu lama. Beberapa fitur mungkin tidak berfungsi dengan benar. Perbarui ke versi terbaru untuk menikmati pengalaman yang lebih baik.',
    firmwareUpgradeForceUpdating: 'Perangkat sedang diperbarui, coba lagi nanti',
    firmwareUpgradeNewPre: 'Pembaruan firmware ',
    firmwareUpgradeNewSub: ' tersedia, perbarui sekarang?',
    handling: 'Menjalankan...',
    error: 'Tidak dapat beroperasi, coba lagi nanti',
    createLightGroup: 'Buat grup lampu(baru)',
    manageLightGroup: 'Kelola perangkat(baru)',
    deleteLightGroup: 'Hapus grup lampu',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.id = id;
},22969,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.pl = undefined;
  var pl = {
    setting: 'Ustawienia',
    featureSetting: 'Ustawienia urządzenia',
    commonSetting: 'Ustawienia ogólne',
    name: 'Nazwa urządzenia',
    location: 'Zarządzaj lokalizacją',
    memberSet: 'Ustawienia przycisku',
    share: 'Udostępnij urządzenie',
    btGateway: 'Bramka BLE',
    voiceAuth: 'Autoryzacja głosu',
    ifttt: 'Automatyzacja',
    firmwareUpgrade: 'Aktualizacja oprogramowania sprzętowego',
    more: 'Dodatkowe ustawienia',
    help: 'Pomoc',
    legalInfo: 'Informacje prawne',
    deleteDevice: 'Usuń urządzenie',
    autoUpgrade: 'Automatyczna aktualizacja oprogramowania sprzętowego',
    checkUpgrade: 'Sprawdź aktualizacje oprogramowania sprzętowego',
    security: 'Ustawienia bezpieczeństwa',
    networkInfo: 'Informacje o sieci',
    feedback: 'Informacje zwrotne',
    timezone: 'Strefa czasowa urządzenia',
    addToDesktop: 'Dodaj do ekranu głównego',
    cancel: 'Anuluj',
    ok: 'Potwierdź',
    am: 'AM ',
    pm: 'PM',
    months: 'miesiące',
    days: 'dni',
    hours: 'godziny',
    minutes: 'minuty',
    seconds: 'sekundy',
    month: 'miesiąc',
    day: 'dzień',
    hour: 'godzina',
    minute: 'minuta',
    second: 'sekunda',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Wyjdź',
    firmwareUpgradeUpdate: 'Aktualizuj',
    firmwareUpgradeLook: 'Przeglądaj',
    firmwareUpgradeForceUpdate: 'Aktualna wersja oprogramowania sprzętowego jest zbyt stara, aby niektóre funkcje działały poprawnie. Zaktualizuj do najnowszej wersji, aby działo sprawniej.',
    firmwareUpgradeForceUpdating: 'Urządzenie jest aktualizowane, spróbuj ponownie później.',
    firmwareUpgradeNewPre: 'Dostępna jest aktualizacja oprogramowania sprzętowego',
    firmwareUpgradeNewSub: '. Zaktualizować teraz?',
    handling: 'Pracuje…',
    error: 'Spróbuj ponownie',
    createLightGroup: 'Utwórz grupę oświetleniową (nowość)',
    manageLightGroup: 'Zarządzaj urządzeniami (nowość)',
    deleteLightGroup: 'Rozgrupuj grupę oświetleniową',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.pl = pl;
},22972,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.vi = undefined;
  var vi = {
    setting: 'Cài đặt',
    featureSetting: 'Cài đặt thiết bị',
    commonSetting: 'Cài đặt chung',
    name: 'Tên thiết bị',
    location: 'Quản lí vị trí',
    memberSet: 'Cài đặt nút',
    share: 'Chia sẻ thiết bị',
    btGateway: 'Cổng BLE',
    voiceAuth: 'Cấp quyền bằng giọng nói',
    ifttt: 'Tự động',
    firmwareUpgrade: 'Kiểm tra bản cập nhật chương trình cơ sở',
    more: 'Cài đặt khác',
    help: 'Trợ giúp',
    legalInfo: 'Thông tin hợp pháp',
    deleteDevice: 'Xóa thiết bị',
    autoUpgrade: 'Tự động cập nhật chương trình cơ sở',
    checkUpgrade: 'Kiểm tra bản cập nhật chương trình cơ sở',
    security: 'Cài đặt bảo mật',
    networkInfo: 'Thiết lập mạng',
    feedback: 'Phản hồi',
    timezone: 'Múi giờ thiết bị',
    addToDesktop: 'Thêm vào Màn hình chính',
    cancel: 'Huỷ bỏ',
    ok: 'Xác nhận',
    am: 'Sáng',
    pm: 'Tối',
    months: 'Tháng',
    days: 'Ngày',
    hours: 'Giờ',
    minutes: 'Phút',
    seconds: 'Giây',
    month: 'Tháng',
    day: 'Ngày',
    hour: 'Giờ',
    minute: 'Phút',
    second: 'Giây',
    yearUnit: 'Năm',
    monthUnit: 'Tháng',
    dayUnit: 'Ngày',
    hourUnit: 'Giờ',
    minuteUnit: 'Phút',
    secondUnit: 'Giây',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Thoát',
    firmwareUpgradeUpdate: 'Cập nhật',
    firmwareUpgradeLook: 'Xem xét',
    firmwareUpgradeForceUpdate: 'Phiên bản chương trình cơ sở hiện tại quá cũ, một số tính năng có thể không hoạt động bình thường. Cập nhật lên phiên bản mới nhất để có trải nghiệm tốt hơn.',
    firmwareUpgradeForceUpdating: 'Thiết bị của bạn đang cập nhật, hãy thử lại sau',
    firmwareUpgradeNewPre: 'Đã có bản cập nhật chương trình cơ sở ',
    firmwareUpgradeNewSub: ', cập nhật ngay bây giờ?',
    handling: 'Đang thực hiện',
    error: 'Thử lại',
    createLightGroup: 'Tạo nhóm đèn (mới)',
    manageLightGroup: 'Quản lý thiết bị (mới)',
    deleteLightGroup: 'Hủy nhóm đèn',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.vi = vi;
},22975,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ja = undefined;
  var ja = {
    setting: '設定',
    featureSetting: 'デバイス設定',
    commonSetting: '全般設定',
    name: 'デバイス名',
    location: '位置を管理する',
    memberSet: 'ボタン設定',
    share: 'デバイスを共有する',
    btGateway: 'BLE ゲートウェイ',
    voiceAuth: '音声承認',
    ifttt: '自動化',
    firmwareUpgrade: 'ファームウェア更新する',
    more: '詳細設定',
    help: 'ヘルプ',
    legalInfo: '法情報',
    deleteDevice: 'デバイスを削除する',
    autoUpgrade: 'ファームウェアの自動アップグレード',
    checkUpgrade: 'ファームウェア更新プログラムの有無を確認する',
    security: 'セキュリティ設定',
    networkInfo: 'ネットワーク情報',
    feedback: 'フィードバック',
    timezone: 'デバイスタイムゾーン',
    addToDesktop: 'ホーム画面に追加する',
    cancel: 'キャンセル',
    ok: '確定',
    am: '午前',
    pm: '午後',
    months: '月',
    days: '日',
    hours: '時間',
    minutes: '分',
    seconds: '秒',
    month: '月',
    day: '日',
    hour: '時間',
    minute: '分',
    second: '秒',
    yearUnit: '年',
    monthUnit: '月',
    dayUnit: '日',
    hourUnit: '時',
    minuteUnit: '分',
    secondUnit: '秒',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '終了',
    firmwareUpgradeUpdate: '更新',
    firmwareUpgradeLook: '調べる',
    firmwareUpgradeForceUpdate: '現在ご使用のファームウェアは旧バージョンのため、一部の機能が正しく作動しない場合があります。より良いエクスペリエンスのために、最新バージョンに更新してください。',
    firmwareUpgradeForceUpdating: 'デバイス更新中です。後ほど再試行してください。',
    firmwareUpgradeNewPre: 'ファームウェア更新',
    firmwareUpgradeNewSub: '使用可能です。今すぐ更新しますか？',
    handling: '実行中',
    error: '再試行する',
    createLightGroup: '照明グループ作成（新）',
    manageLightGroup: '照明グループ管理（新）',
    deleteLightGroup: '照明グループ解除',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.ja = ja;
},22978,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.th = undefined;
  var th = {
    setting: 'การตั้งค่า',
    featureSetting: 'การตั้งค่าอุปกรณ์',
    commonSetting: 'การตั้งค่าทั่วไป',
    name: 'ชื่ออุปกรณ์',
    location: 'จัดการตำแหน่งที่ตั้ง',
    memberSet: 'การตั้งค่าปุ่ม',
    share: 'แชร์อุปกรณ์',
    btGateway: 'เกตเวย์ BLE',
    voiceAuth: 'การอนุญาตด้วยเสียง',
    ifttt: 'ระบบอัตโนมัติ',
    firmwareUpgrade: 'การอัปเดตเฟิร์มแวร์',
    more: 'การตั้งค่าเพิ่มเติม',
    help: 'ความช่วยเหลือ',
    legalInfo: 'ข้อมูลทางกฎหมาย',
    deleteDevice: 'ลบอุปกรณ์ออก',
    autoUpgrade: 'อัปเดตเฟิร์มแวร์โดยอัตโนมัติ',
    checkUpgrade: 'ตรวจสอบหาการอัปเดตเฟิร์มแวร์',
    security: 'การตั้งค่าความปลอดภัย',
    networkInfo: 'การตั้งค่าเครือข่าย',
    feedback: 'คำติชม',
    timezone: 'โซนเวลาของอุปกรณ์',
    addToDesktop: 'เพิ่มไปยังหน้าโฮม',
    cancel: 'ยกเลิก',
    ok: 'ตกลง',
    am: 'AM',
    pm: 'PM',
    months: 'เดือน',
    days: 'วัน',
    hours: 'ชั่วโมง',
    minutes: 'นาที',
    seconds: 'วินาที',
    month: 'เดือน',
    day: 'วัน',
    hour: 'ชั่วโมง',
    minute: 'นาที',
    second: 'วินาที',
    yearUnit: 'ปี',
    monthUnit: 'เดือน',
    dayUnit: 'วัน',
    hourUnit: 'ชั่วโมง',
    minuteUnit: 'นาที',
    secondUnit: 'วินาที',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'ออก',
    firmwareUpgradeUpdate: 'อัปเดต',
    firmwareUpgradeLook: 'ลองดู',
    firmwareUpgradeForceUpdate: 'เวอร์ชั่นเฟิร์มแวร์ปัจจุบันเก่าไป ฟีเจอร์บางอย่างอาจทำงานไม่ถูกต้อง อัปเดตเป็นเวอร์ชั่นล่าสุดเพื่อประสบการณ์การใช้งานที่ดีขึ้น',
    firmwareUpgradeForceUpdating: 'อุปกรณ์กำลังอัปเดต ลองอีกครั้งในภายหลัง',
    firmwareUpgradeNewPre: 'เฟิร์มแวร์อัปเดต ',
    firmwareUpgradeNewSub: ' ใช้ได้แล้ว อัปเดตตอนนี้หรือไม่',
    handling: 'ในการดำเนินการ',
    error: 'ลองอีกครั้ง',
    createLightGroup: 'สร้างกลุ่มแสงไฟ(ใหม่)',
    manageLightGroup: 'จัดการอุปกรณ์(ใหม่)',
    deleteLightGroup: 'สลายกลุ่มแสงไฟ',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.th = th;
},22981,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.tr = undefined;
  var tr = {
    setting: 'Ayarlar',
    featureSetting: 'Cihaz ayarları',
    commonSetting: 'Genel ayarlar',
    name: 'Cihaz adı',
    location: 'Konum yönetimi',
    memberSet: 'Tuş ayarları',
    share: 'Cihazı paylaş',
    btGateway: 'BLE ağ geçidi',
    voiceAuth: 'Sesli yetkilendirme',
    ifttt: 'Otomasyon',
    firmwareUpgrade: 'Cihaz güncelleştirmeleri',
    more: 'Ek ayarlar',
    help: 'Yardım',
    legalInfo: 'Yasal bilgi',
    deleteDevice: 'Cihazı sil',
    autoUpgrade: 'Ürün yazılımını otomatik olarak güncelle',
    checkUpgrade: 'Üretici yazılımı güncelleştirmelerini denetle',
    security: 'Güvenlik ayarları',
    networkInfo: 'Ağ bilgileri',
    feedback: 'Geri bildirimlerim',
    timezone: 'Cihazın saat dilimi',
    addToDesktop: 'Ana ekrana ekleyin',
    cancel: 'İptal ',
    ok: 'Onayla',
    am: 'AM',
    pm: 'PM',
    months: 'aylar',
    days: 'günler',
    hours: 'saatler',
    minutes: 'dakikalar',
    seconds: 'saniyeler',
    month: 'ay',
    day: 'gün',
    hour: 'saat',
    minute: 'dakika',
    second: 'saniye',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: 'sa. ',
    minuteUnit: 'dk.',
    secondUnit: 'sn.',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Çıkış',
    firmwareUpgradeUpdate: 'Şimdi güncelleştir',
    firmwareUpgradeLook: 'Şimdi göz atın',
    firmwareUpgradeForceUpdate: 'Mevcut ürün yazılımı bazı özellikleri çalıştırmak için çok eski olabilir. Daha iyi bir deneyim için en son sürüme güncelleyin.',
    firmwareUpgradeForceUpdating: 'Cihazınız güncelleştiriliyor, daha sonra yeniden deneyin',
    firmwareUpgradeNewPre: 'Üretici yazılımı güncelleştirmesi',
    firmwareUpgradeNewSub: 'kullanılabilir. Şimdi güncelleştir',
    handling: 'İşleniyor…',
    error: 'Kon niet werken, probeer het later opnieuw.',
    createLightGroup: 'Işık grubu oluştur (yeni)',
    manageLightGroup: 'Cihazları yönet (yeni)',
    deleteLightGroup: 'Işık grubunu kaldır',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.tr = tr;
},22984,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.nl = undefined;
  var nl = {
    setting: 'Instellingen',
    featureSetting: 'Apparaatinstellingen',
    commonSetting: 'Algemene instellingen',
    name: 'Apparaatnaam',
    location: 'Locatiebeheer',
    memberSet: 'Toetsinstellingen',
    share: 'Apparaat delen',
    btGateway: 'BLE-gateway',
    voiceAuth: 'Autorisatie via spraak',
    ifttt: 'Automatisering',
    firmwareUpgrade: 'Updates van het apparaat',
    more: 'Extra instellingen',
    help: 'Help',
    legalInfo: 'Legale informatie',
    deleteDevice: 'Apparaat verwijderen',
    autoUpgrade: 'Firmware automatisch bijwerken',
    checkUpgrade: 'Controleren op firmware-updates',
    security: 'Beveiligingsinstellingen',
    networkInfo: 'Netwerkgegevens',
    feedback: 'Mijn feedback',
    timezone: 'Tijdzone van het apparaat',
    addToDesktop: 'Toevoegen aan het startscherm',
    cancel: 'Annuleren',
    ok: 'Bevestigen',
    am: 'AM',
    pm: 'PM',
    months: 'Maanden',
    days: 'Dagen',
    hours: 'Uren',
    minutes: 'Minuten',
    seconds: 'Seconden',
    month: 'Maand ',
    day: 'Dag ',
    hour: 'Uur',
    minute: 'Minuut',
    second: 'Seconde ',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Afsluiten',
    firmwareUpgradeUpdate: 'Nu updaten',
    firmwareUpgradeLook: 'Nu rondkijken',
    firmwareUpgradeForceUpdate: 'De huidige firmware is mogelijk te oud om bepaalde functies uit te voeren. Update naar de nieuwste versie voor een betere ervaring.',
    firmwareUpgradeForceUpdating: 'Uw toestel is aan het updaten, probeer het later nog eens',
    firmwareUpgradeNewPre: 'Firmware-update',
    firmwareUpgradeNewSub: 'beschikbaar. Nu updaten',
    handling: 'Verwerken...',
    error: 'Kon niet werken, probeer het later opnieuw',
    createLightGroup: 'Lichtgroep aanmaken (nieuw)',
    manageLightGroup: 'Apparaten beheren (nieuw)',
    deleteLightGroup: 'Lichtgroep opheffen',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.nl = nl;
},22987,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.pt = undefined;
  var pt = {
    setting: 'Configurações',
    featureSetting: 'Configurações do dispositivo',
    commonSetting: 'Configurações gerais',
    name: 'Nome do dispositivo',
    location: 'Gerenciamento de localização',
    memberSet: 'Configurações do teclado',
    share: 'Compartilhar dispositivo',
    btGateway: 'Gateway BLE',
    voiceAuth: 'Autorização de voz',
    ifttt: 'Automação',
    firmwareUpgrade: 'Atualizações de dispositivo',
    more: 'Configurações adicionais',
    help: 'Ajuda',
    legalInfo: 'Informação legal',
    deleteDevice: 'Excluir dispositivo',
    autoUpgrade: 'Atualizar automaticamente o firmware',
    checkUpgrade: 'Verificar se há atualizações de firmware',
    security: 'Configurações de segurança',
    networkInfo: 'Informações de rede',
    feedback: 'Meu feedback',
    timezone: 'Fuso horário do dispositivo',
    addToDesktop: 'Adicionar à tela de início',
    cancel: 'Cancelar',
    ok: 'Confirmar',
    am: 'Manhã',
    pm: 'Tarde',
    months: 'meses',
    days: 'dias',
    hours: 'horas',
    minutes: 'minutos',
    seconds: 'segundos',
    month: 'mês',
    day: 'dia',
    hour: 'hora',
    minute: 'minuto',
    second: 'segundo',
    yearUnit: 'a',
    monthUnit: 'm',
    dayUnit: 'd',
    hourUnit: 'h',
    minuteUnit: 'min',
    secondUnit: 's',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Sair',
    firmwareUpgradeUpdate: 'Atualizar agora',
    firmwareUpgradeLook: 'Ver agora',
    firmwareUpgradeForceUpdate: 'O firmware atual pode ser muito antigo para executar alguns recursos. Atualize para a versão mais recente para obter uma melhor experiência.',
    firmwareUpgradeForceUpdating: 'Seu dispositivo está sendo atualizado. Tente novamente mais tarde',
    firmwareUpgradeNewPre: 'Atualização de firmware',
    firmwareUpgradeNewSub: 'disponível. Atualizar agora',
    handling: 'Processando...',
    error: 'Não foi possível operar, tente novamente mais tarde',
    createLightGroup: 'Criar grupo de lâmpadas (novo)',
    manageLightGroup: 'Gerenciar dispositivos (novo)',
    deleteLightGroup: 'Desfazer grupo de lâmpadas',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.pt = pt;
},22990,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "AbstractDialog", {
    enumerable: true,
    get: function get() {
      return _AbstractDialog.default;
    }
  });
  Object.defineProperty(exports, "ActionSheet", {
    enumerable: true,
    get: function get() {
      return _ActionSheet.default;
    }
  });
  Object.defineProperty(exports, "ChoiceDialog", {
    enumerable: true,
    get: function get() {
      return _ChoiceDialog.default;
    }
  });
  Object.defineProperty(exports, "InputDialog", {
    enumerable: true,
    get: function get() {
      return _InputDialog.default;
    }
  });
  Object.defineProperty(exports, "LoadingDialog", {
    enumerable: true,
    get: function get() {
      return _LoadingDialog.default;
    }
  });
  Object.defineProperty(exports, "MessageDialog", {
    enumerable: true,
    get: function get() {
      return _MessageDialog.default;
    }
  });
  Object.defineProperty(exports, "PinCodeDialog", {
    enumerable: true,
    get: function get() {
      return _PinCodeDialog.default;
    }
  });
  Object.defineProperty(exports, "ProgressDialog", {
    enumerable: true,
    get: function get() {
      return _ProgressDialog.default;
    }
  });
  Object.defineProperty(exports, "ShareDialog", {
    enumerable: true,
    get: function get() {
      return _ShareDialog.default;
    }
  });
  Object.defineProperty(exports, "InputView", {
    enumerable: true,
    get: function get() {
      return _InputView.default;
    }
  });

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _ActionSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _ChoiceDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _InputDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _MessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _PinCodeDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _ProgressDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _ShareDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _InputView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
},22993,[14305,22996,22999,23005,23008,23011,23014,23017,23020,23023,23221]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _resources = _$$_REQUIRE(_dependencyMap[9]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[11]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[12]);

  var _locale = _$$_REQUIRE(_dependencyMap[13]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _Logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _PopButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _font = _$$_REQUIRE(_dependencyMap[17]);

  var MODAL_MARGIN = _resources.Styles.MODAL_MARGIN;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var underlayColor = 'rgba(0,0,0,.05)';

  var AbstractDialog = function (_React$Component) {
    (0, _inherits2.default)(AbstractDialog, _React$Component);

    function AbstractDialog(props, context) {
      var _this$context$media, _this$context$media2, _this$context$media3;

      var _this;

      (0, _classCallCheck2.default)(this, AbstractDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AbstractDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('AbstractDialog');
      _this.state = {
        visible: _this.props.visible
      };
      _this.MARGIN_MODAL = _this.props.useNewTheme ? 0 : 10;
      _this.responsiveContentStyle = ((_this$context$media = _this.context.media) == null ? undefined : _this$context$media.screenType) === 'tablet' ? {
        width: width * 0.75
      } : {};
      _this.responsiveDialogStyle = ((_this$context$media2 = _this.context.media) == null ? undefined : _this$context$media2.screenType) === 'tablet' ? {
        alignItems: 'center',
        justifyContent: 'center',
        flexDirection: 'column'
      } : {};
      _this.responsiveDialogModalStyle = ((_this$context$media3 = _this.context.media) == null ? undefined : _this$context$media3.screenType) === 'tablet' ? _resources.Styles.dialog.padModal : {};
      return _this;
    }

    (0, _createClass2.default)(AbstractDialog, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (this.state.visible === true) {
          var onModalShow = this.props.onModalShow;

          if (typeof onModalShow === 'function') {
            onModalShow();
          }
        }
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps, prevState) {
        if (prevState.visible === false && this.state.visible === true) {
          var onModalShow = this.props.onModalShow;

          if (typeof onModalShow === 'function') {
            onModalShow();
          }
        }

        if (prevState.visible === true && this.state.visible === false) {
          var onModalHide = this.props.onModalHide;

          if (typeof onModalHide === 'function') {
            onModalHide();
          }
        }
      }
    }, {
      key: "_checkUnlimitedHeightEnable",
      value: function _checkUnlimitedHeightEnable() {
        var result = false;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('unlimitedHeightEnable')) {
          result = this.props.dialogStyle.unlimitedHeightEnable;
        }

        return result;
      }
    }, {
      key: "renderTitle",
      value: function renderTitle() {
        if (!this.props.showTitle) return null;
        var _Styles$dialog$title = _resources.Styles.dialog.title,
            titleHeightFat = _Styles$dialog$title.titleHeightFat,
            titleHeightThin = _Styles$dialog$title.titleHeightThin;
        var theme = this.context.theme;
        var height = {
          height: this.props.showSubtitle ? titleHeightFat : titleHeightThin
        };
        var marginBottom = this.props.showSubtitle ? {
          marginBottom: 0
        } : {};
        var language = this.context.language;
        var titleLines = 1;

        if (language !== 'zh') {
          titleLines = 3;
          height.maxHeight = 86;
        }

        var fontFamily = {};

        if (_reactNative.Platform.OS === 'android') {
          fontFamily.fontFamily = '';
        }

        var titleNumberOfLines = titleLines;
        var subTitleNumberOfLines = 1;

        if (this.props.dialogStyle) {
          if (this.props.dialogStyle.hasOwnProperty('titleNumberOfLines') && this.props.dialogStyle.titleNumberOfLines > 1) {
            titleNumberOfLines = this.props.dialogStyle.titleNumberOfLines;
            height = null;
          }

          if (this.props.dialogStyle.hasOwnProperty('subTitleNumberOfLines') && this.props.dialogStyle.subTitleNumberOfLines > 1) {
            subTitleNumberOfLines = this.props.dialogStyle.subTitleNumberOfLines;
            height = null;
          }

          if (this._checkUnlimitedHeightEnable()) {
            height = null;
          }
        }

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.titleContainer, height, {
            backgroundColor: 'transparent'
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), _react.default.createElement(_reactNative.Text, {
          numberOfLines: titleNumberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          style: [{
            width: _resources.Styles.dialog.modal.width * 0.75,
            textAlign: 'center',
            fontSize: 16,
            color: theme.colorBlack,
            marginTop: height ? 7 : 10
          }, marginBottom, _font.FontPrimary, this.props.dialogStyle.titleStyle]
        }, this.props.title || ''), this.props.showSubtitle ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: subTitleNumberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          style: [_resources.Styles.dialog.subtitle, {
            color: theme.colorGrayNormal,
            marginTop: 5
          }, this.props.dialogStyle.subTitleStyle]
        }, this.props.subtitle) : null);
      }
    }, {
      key: "renderContent",
      value: function renderContent() {
        if (this.props.children) return this.props.children;
        return _react.default.createElement(_reactNative.View, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        }), this.props.useNewTheme ? null : _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
          style: [styles.content, this.responsiveContentStyle]
        }, _react.default.createElement(_reactNative.Text, null, "\u2B06\uFE0F\u53EF\u81EA\u5B9A\u4E49\u6807\u9898\u548C\u526F\u6807\u9898\u2B06\uFE0F"), _react.default.createElement(_reactNative.Text, null, "\u53EF\u81EA\u5B9A\u4E49\u5185\u5BB9"), _react.default.createElement(_reactNative.Text, null, "\u2B07\uFE0F\u53EF\u81EA\u5B9A\u4E49\u6309\u94AE\u6587\u5B57\u548C\u6837\u5F0F\u2B07\uFE0F")), this.props.useNewTheme ? null : _react.default.createElement(_Separator.default, null));
      }
    }, {
      key: "renderButtonGroup",
      value: function renderButtonGroup() {
        if (!this.props.showButton) return null;
        var buttons = this.props.buttons;

        if (!buttons) {
          buttons = [{
            text: _locale.Locale.of(this.context.language).cancel
          }, {
            text: _locale.Locale.of(this.context.language).ok
          }];
        }

        if (this.props.useNewTheme) {
          if (buttons.length === 1) return this.renderOneButton(buttons);
          if (buttons.length === 2) return this.renderTwoButtons(buttons);
        } else {
          if (buttons.length === 1) return this.renderOneButtonDeprecated(buttons);
          if (buttons.length === 2) return this.renderTwoButtonsDeprecated(buttons);
        }

        _Logger.default.warn('只允许设置1～2个按钮');

        return null;
      }
    }, {
      key: "renderOneButton",
      value: function renderOneButton(buttons) {
        var _this2 = this;

        var button0 = buttons[0];
        if (typeof button0 !== 'object') return null;
        var callback = button0.callback;

        if (callback === undefined || !(callback instanceof Function)) {
          callback = function callback() {
            return _this2.dismiss();
          };
        }

        var height = _resources.Styles.dialog.buttons.height;
        var buttonNumberOfLines;

        if (button0.hasOwnProperty('numberOfLines')) {
          buttonNumberOfLines = button0.numberOfLines;

          if (buttonNumberOfLines > 1) {
            height = null;
          }
        }

        var allowFontScaling = this.props.dialogStyle.allowFontScaling;

        if (button0.hasOwnProperty('allowFontScaling')) {
          allowFontScaling = button0.allowFontScaling;
        }

        if (this._checkUnlimitedHeightEnable()) {
          height = null;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [_resources.Styles.dialog.button, {
            height: height
          }]
        }, _react.default.createElement(_PopButton.default, (0, _extends2.default)({
          sizeLevel: "regular",
          title: button0.text || _locale.Locale.of(this.context.language).cancel,
          titleStyle: button0.style,
          titleColor: button0.titleColor,
          onPress: callback,
          colorType: button0.colorType || 'blueLayerWhite',
          disabled: button0.disabled,
          backgroundColor: button0.backgroundColor,
          allowFontScaling: allowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button0.accessibilityHint
        }))));
      }
    }, {
      key: "renderTwoButtons",
      value: function renderTwoButtons(buttons) {
        var _this3 = this;

        var button0 = buttons[0];
        var button1 = buttons[1];
        if (typeof button0 !== 'object' || typeof button1 !== 'object') return null;
        var callback0 = button0.callback;
        var callback1 = button1.callback;

        if (callback0 === undefined || !(callback0 instanceof Function)) {
          callback0 = function callback0() {
            return _this3.dismiss();
          };
        }

        if (callback1 === undefined || !(callback1 instanceof Function)) {
          callback1 = function callback1() {
            return _this3.dismiss();
          };
        }

        var height = _resources.Styles.dialog.buttons.height;
        var button0NumberOfLines;
        var button1NumberOfLines;

        if (button0.hasOwnProperty('numberOfLines')) {
          button0NumberOfLines = button0.numberOfLines;

          if (button0NumberOfLines > 1) {
            height = null;
          }
        }

        if (button1.hasOwnProperty('numberOfLines')) {
          button1NumberOfLines = button1.numberOfLines;

          if (button1NumberOfLines > 1) {
            height = null;
          }
        }

        if (this._checkUnlimitedHeightEnable()) {
          height = null;
        }

        var button0AllowFontScaling = this.props.dialogStyle.allowFontScaling;
        var button1AllowFontScaling = button0AllowFontScaling;

        if (button0.hasOwnProperty('allowFontScaling')) {
          button0AllowFontScaling = button0.allowFontScaling;
        }

        if (button1.hasOwnProperty('allowFontScaling')) {
          button1AllowFontScaling = button0.allowFontScaling;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [_resources.Styles.dialog.buttons, {
            height: height
          }]
        }, _react.default.createElement(_PopButton.default, (0, _extends2.default)({
          sizeLevel: "medium",
          style: {
            marginRight: 8
          },
          title: button0.text || _locale.Locale.of(this.context.language).cancel,
          titleStyle: button0.style,
          titleColor: button0.titleColor,
          onPress: callback0,
          colorType: button0.colorType,
          disabled: button0.disabled,
          backgroundColor: button0.backgroundColor,
          allowFontScaling: button0AllowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button0.accessibilityHint
        }))), _react.default.createElement(_PopButton.default, (0, _extends2.default)({
          sizeLevel: "medium",
          style: {
            marginLeft: 8
          },
          title: button1.text || _locale.Locale.of(this.context.language).ok,
          titleStyle: button1.style,
          titleColor: button1.titleColor,
          onPress: callback1,
          colorType: button1.colorType || 'blueLayerWhite',
          disabled: button1.disabled,
          backgroundColor: button1.backgroundColor,
          allowFontScaling: button1AllowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button1.accessibilityHint
        }))));
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var theme = this.context.theme;

        var _Dimensions$get2 = _reactNative.Dimensions.get('window'),
            width = _Dimensions$get2.width,
            height = _Dimensions$get2.height;

        return _react.default.createElement(_reactNative.Modal, {
          animationType: this.props.animationType,
          transparent: true,
          visible: this.state.visible,
          onRequestClose: function onRequestClose() {
            return _this4.dismiss();
          }
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [_resources.Styles.dialog.background, {
            backgroundColor: this.props.hasShade ? theme.colorOverLayerBlack : 'transparent'
          }, this.responsiveDialogStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: this.props.accessibilityLabel
        })), _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          onPress: function onPress() {
            return _this4.layerDismiss();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: this.props.layerDismissAccessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: {
            width: width,
            height: height
          }
        })), _react.default.createElement(_reactNative.View, {
          style: [_resources.Styles.dialog.modal, {
            backgroundColor: theme.colorForeground,
            width: width - this.MARGIN_MODAL * 2,
            marginHorizontal: this.MARGIN_MODAL
          }, this.props.useNewTheme ? null : styles.modalDeprecated, this.props.style, this.responsiveDialogModalStyle]
        }, this.renderTitle(), this.renderContent(), this.renderButtonGroup())));
      }
    }, {
      key: "dismiss",
      value: function dismiss() {
        this.setState({
          visible: false
        });
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "layerDismiss",
      value: function layerDismiss() {
        if (this.props.canDismiss) {
          this.setState({
            visible: false
          });
          this.props.onDismiss && this.props.onDismiss();
        }
      }
    }, {
      key: "renderOneButtonDeprecated",
      value: function renderOneButtonDeprecated(buttons) {
        var _this5 = this;

        var button0 = buttons[0];
        if (typeof button0 !== 'object') return null;
        var callback = button0.callback;

        if (callback === undefined || !(callback instanceof Function)) {
          callback = function callback() {
            return _this5.dismiss();
          };
        }

        var height = _resources.Styles.dialog.buttons.height;
        var buttonNumberOfLines;

        if (button0.hasOwnProperty('numberOfLines')) {
          buttonNumberOfLines = button0.numberOfLines;

          if (buttonNumberOfLines > 1) {
            height = null;
          }
        }

        var allowFontScaling = this.props.dialogStyle.allowFontScaling;

        if (button0.hasOwnProperty('allowFontScaling')) {
          allowFontScaling = button0.allowFontScaling;
        }

        if (this._checkUnlimitedHeightEnable()) {
          height = null;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.buttons, {
            height: height
          }]
        }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: {
            flex: 1
          },
          onPress: callback,
          underlayColor: underlayColor
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button0.accessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: _resources.Styles.dialog.button
        }, _react.default.createElement(_reactNative.Text, {
          style: [_resources.Styles.dialog.buttonText, {
            color: theme.colorGrayNormal
          }, button0.style],
          numberOfLines: buttonNumberOfLines,
          allowFontScaling: allowFontScaling
        }, button0.text || _locale.Locale.of(this.context.language).ok))));
      }
    }, {
      key: "renderTwoButtonsDeprecated",
      value: function renderTwoButtonsDeprecated(buttons) {
        var _this6 = this;

        var button0 = buttons[0];
        var button1 = buttons[1];
        if (typeof button0 !== 'object' || typeof button1 !== 'object') return null;
        var callback0 = button0.callback;
        var callback1 = button1.callback;

        if (callback0 === undefined || !(callback0 instanceof Function)) {
          callback0 = function callback0() {
            return _this6.dismiss();
          };
        }

        if (callback1 === undefined || !(callback1 instanceof Function)) {
          callback1 = function callback1() {
            return _this6.dismiss();
          };
        }

        var height = _resources.Styles.dialog.buttons.height;
        var button0NumberOfLines;
        var button1NumberOfLines;

        if (button0.hasOwnProperty('numberOfLines')) {
          button0NumberOfLines = button0.numberOfLines;

          if (button0NumberOfLines > 1) {
            height = null;
          }
        }

        if (button1.hasOwnProperty('numberOfLines')) {
          button1NumberOfLines = button1.numberOfLines;

          if (button1NumberOfLines > 1) {
            height = null;
          }
        }

        if (this._checkUnlimitedHeightEnable()) {
          height = null;
        }

        var button0AllowFontScaling = this.props.dialogStyle.allowFontScaling;
        var button1AllowFontScaling = button0AllowFontScaling;

        if (button0.hasOwnProperty('allowFontScaling')) {
          button0AllowFontScaling = button0.allowFontScaling;
        }

        if (button1.hasOwnProperty('allowFontScaling')) {
          button1AllowFontScaling = button0.allowFontScaling;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.buttons, {
            height: height
          }]
        }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: {
            flex: 1
          },
          onPress: callback0,
          underlayColor: underlayColor
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button0.accessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: _resources.Styles.dialog.button
        }, _react.default.createElement(_reactNative.Text, {
          style: [_resources.Styles.dialog.buttonText, {
            color: theme.colorGrayNormal
          }, button0.style],
          numberOfLines: button0NumberOfLines,
          allowFontScaling: button0AllowFontScaling
        }, button0.text || _locale.Locale.of(this.context.language).cancel))), _reactNative.Platform.select({
          android: _react.default.createElement(_Separator.default, {
            type: "column",
            style: {
              flex: 1
            }
          }),
          ios: _react.default.createElement(_Separator.default, {
            type: "column",
            style: {
              height: '100%'
            }
          })
        }), _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: {
            flex: 1
          },
          onPress: callback1,
          underlayColor: underlayColor
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button1.accessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: _resources.Styles.dialog.button
        }, _react.default.createElement(_reactNative.Text, {
          style: [_resources.Styles.dialog.buttonText, {
            color: theme.colorPrimary
          }, button1.style],
          numberOfLines: button1NumberOfLines,
          allowFontScaling: button1AllowFontScaling
        }, button1.text || _locale.Locale.of(this.context.language).ok))));
      }
    }]);
    return AbstractDialog;
  }(_react.default.Component);

  AbstractDialog.contextType = _configProvider.ConfigContext;
  AbstractDialog.defaultProps = {
    animationType: 'fade',
    visible: false,
    showTitle: true,
    showSubtitle: false,
    dialogStyle: {
      unlimitedHeightEnable: false,
      allowFontScaling: true,
      titleNumberOfLines: 1,
      subTitleNumberOfLines: 1,
      titleStyle: {},
      subTitleStyle: {}
    },
    canDismiss: true,
    buttons: null,
    showButton: true,
    hasShade: true,
    useNewTheme: false
  };

  var styles = _reactNative.StyleSheet.create({
    titleContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    content: {
      width: width - 20,
      height: 150,
      justifyContent: 'center',
      alignItems: 'center'
    },
    modalDeprecated: {
      bottom: 20,
      paddingBottom: 0,
      borderRadius: 20
    },
    buttons: {
      height: 46,
      flexDirection: 'row',
      backgroundColor: 'transparent',
      justifyContent: 'center',
      alignItems: 'center',
      flex: 1
    }
  });

  var _default = AbstractDialog;
  exports.default = _default;
},22996,[14305,14344,14320,14323,14371,14377,14386,10297,10033,22453,22906,22420,22423,22933,22426,22891,23215,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _ChoiceItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[14]);

  var _font = _$$_REQUIRE(_dependencyMap[15]);

  var ActionSheet = function (_React$Component) {
    (0, _inherits2.default)(ActionSheet, _React$Component);
    (0, _createClass2.default)(ActionSheet, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }]);

    function ActionSheet(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ActionSheet);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ActionSheet).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ActionSheet');
      _this.state = {
        visible: props.visible
      };
      return _this;
    }

    (0, _createClass2.default)(ActionSheet, [{
      key: "renderItem",
      value: function renderItem(item) {
        var _this2 = this;

        return _react.default.createElement(_ChoiceItem.default, (0, _extends2.default)({
          title: item.title || '',
          titleStyle: [(0, _objectSpread2.default)({
            textAlign: 'left',
            fontSize: 16,
            lineHeight: 22,
            marginLeft: 30
          }, _font.FontPrimary), this.props.dialogStyle.itemTitleStyle],
          subtitle: item.subtitle || '',
          subtitleStyle: [{
            textAlign: 'left',
            marginLeft: 30
          }, this.props.dialogStyle.itemSubtitleStyle],
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          unlimitedHeightEnable: this.props.dialogStyle.unlimitedHeightEnable,
          titleNumberOfLines: this.props.dialogStyle.itemTitleNumberOfLines,
          subtitleNumberOfLines: this.props.dialogStyle.itemSubtitleNumberOfLines,
          onPress: function onPress() {
            return _this2._onPress(item.onPress);
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: item.accessibilityLabel,
          accessibilityHint: item.accessibilityHint
        })));
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var showTitle = !!this.props.title;
        var paddingTop = showTitle ? 0 : 14;
        var maxHeight = this.props.options && this.props.options[0] && this.props.options[0].subtitle ? 576 : 594;
        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.state.visible,
          dialogStyle: this.props.dialogStyle,
          showTitle: showTitle,
          title: this.props.title,
          buttons: this.props.buttons,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          onDismiss: function onDismiss() {
            return _this3._onDismiss();
          },
          useNewTheme: true,
          style: this.props.modalStyle,
          canDismiss: this.props.canDismiss
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible
        })), _react.default.createElement(_reactNative.FlatList, {
          style: {
            marginBottom: 16,
            paddingTop: paddingTop,
            maxHeight: maxHeight
          },
          data: this.props.options,
          renderItem: function renderItem(_ref) {
            var item = _ref.item;
            return _this3.renderItem(item);
          },
          keyExtractor: function keyExtractor(item, index) {
            return (item.title || '') + index;
          }
        }));
      }
    }, {
      key: "_onPress",
      value: function _onPress(callback) {
        callback && callback();
        this.setState({
          visible: false
        });

        this._onDismiss();
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }]);
    return ActionSheet;
  }(_react.default.Component);

  ActionSheet.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    dialogStyle: _propTypes.default.object,
    options: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      subtitle: _propTypes.default.string,
      onPress: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    canDismiss: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  ActionSheet.defaultProps = {
    options: [],
    canDismiss: true,
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      itemTitleStyle: {},
      itemSubtitleStyle: {},
      itemTitleNumberOfLines: 1,
      itemSubtitleNumberOfLines: 1
    }
  };
  var _default = ActionSheet;
  exports.default = _default;
},22999,[14305,14344,14314,14320,14371,14377,14323,14386,10318,10297,10033,23002,22996,22420,22423,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _font = _$$_REQUIRE(_dependencyMap[14]);

  var thinHeight = 54;
  var fatHeight = 72;
  var checkboxSize = 22;
  var TYPE = {
    STATELESS: 'stateless',
    SINGLE: 'single',
    MULTIPLE: 'multiple'
  };
  Object.freeze(TYPE);

  var ChoiceItem = function (_React$Component) {
    (0, _inherits2.default)(ChoiceItem, _React$Component);

    function ChoiceItem(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ChoiceItem);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ChoiceItem).call(this, props, context));
      _this.state = {
        selected: props.selected
      };
      return _this;
    }

    (0, _createClass2.default)(ChoiceItem, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.selected !== this.state.selected) {
          this.setState({
            selected: newProps.selected
          });
        }
      }
    }, {
      key: "renderIcon",
      value: function renderIcon() {
        if (this.props.type === TYPE.STATELESS) return null;

        if (!this.state.selected || this.props.type === TYPE.MULTIPLE) {
          return _react.default.createElement(_reactNative.View, {
            style: {
              width: 38,
              height: fatHeight
            }
          });
        }

        var paddingTop = {
          paddingTop: 22
        };
        if (this.props.subtitle) paddingTop.paddingTop = 31;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.iconContainer, paddingTop]
        }, _react.default.createElement(_reactNative.Image, {
          source: this.props.icon,
          resizeMode: "contain",
          style: styles.icon
        }));
      }
    }, {
      key: "renderText",
      value: function renderText() {
        var theme = this.context.theme;
        var color = {};
        var textAlign = {};
        if (this.state.selected) color.color = this.props.color;
        if (this.props.type === TYPE.STATELESS) textAlign.textAlign = 'center';
        var adaptedFontStyle = {};

        if (!this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined,
            lineHeight: undefined
          };
        }

        return _react.default.createElement(_reactNative.View, {
          style: styles.textContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.title, {
            color: theme.colorBlack
          }, _font.FontPrimary, color, textAlign, adaptedFontStyle, this.props.titleStyle],
          numberOfLines: this.props.titleNumberOfLines,
          allowFontScaling: this.props.allowFontScaling
        }, this.props.title), this.props.subtitle ? _react.default.createElement(_reactNative.Text, {
          style: [styles.subtitle, {
            color: theme.colorGrayNormal
          }, _font.FontSecondary, color, textAlign, adaptedFontStyle, this.props.subtitleStyle],
          numberOfLines: this.props.subtitleNumberOfLines,
          allowFontScaling: this.props.allowFontScaling
        }, this.props.subtitle) : null);
      }
    }, {
      key: "renderCheckbox",
      value: function renderCheckbox() {
        var _this2 = this;

        if (this.props.type !== TYPE.MULTIPLE) return null;
        return _react.default.createElement(_Checkbox.default, {
          style: {
            width: checkboxSize,
            height: checkboxSize,
            borderRadius: 11,
            marginRight: 30
          },
          checked: this.state.selected,
          checkedColor: this.props.color,
          onValueChange: function onValueChange(selected) {
            return _this2._onValueChange(selected);
          }
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme,
            _this3 = this;

        var height = {
          height: thinHeight
        };

        if (this.props.subtitle) {
          height.height = fatHeight;
        }

        var heightStyle = {
          minHeight: height.height,
          height: height.height
        };

        if (this.props.unlimitedHeightEnable) {
          heightStyle.height = null;
        }

        return _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          underlayColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.listUnderlayColor,
          onPress: function onPress() {
            return _this3._onPress();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.radio,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            selected: this.state.selected,
            checked: this.state.selected
          }
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.container, heightStyle]
        }, this.renderIcon(), this.renderText(), this.renderCheckbox()));
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange(selected) {
        this.setState({
          selected: selected
        });

        if (this.props.onPress) {
          this.props.onPress(selected);
        }
      }
    }, {
      key: "_onPress",
      value: function _onPress() {
        var type = this.props.type;
        var selected = this.state.selected;

        if (type !== TYPE.STATELESS) {
          if (type === TYPE.MULTIPLE) selected = !selected;
          if (type === TYPE.SINGLE) selected = true;
          this.setState({
            selected: selected
          });
        }

        if (this.props.onPress) {
          this.props.onPress(selected);
        }
      }
    }]);
    return ChoiceItem;
  }(_react.default.Component);

  exports.default = ChoiceItem;
  ChoiceItem.contextType = _configProvider.ConfigContext;
  ChoiceItem.propTypes = {
    type: _propTypes.default.oneOf([TYPE.STATELESS, TYPE.SINGLE, TYPE.MULTIPLE]),
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    selected: _propTypes.default.bool,
    color: _propTypes.default.string,
    icon: _propTypes.default.number,
    onPress: _propTypes.default.func,
    unlimitedHeightEnable: _propTypes.default.bool,
    allowFontScaling: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    titleStyle: _reactNative.Text.propTypes.style,
    subtitleStyle: _reactNative.Text.propTypes.style,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ChoiceItem.defaultProps = {
    type: TYPE.STATELESS,
    selected: false,
    color: _resources.Styles.common.MHGreen,
    icon: _resources.Images.common.selectIcon,
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    titleNumberOfLines: 1,
    subtitleNumberOfLines: 1,
    titleStyle: {},
    subtitleStyle: {}
  };
  ChoiceItem.TYPE = TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    iconContainer: {
      width: 38,
      alignSelf: 'stretch',
      alignItems: 'center'
    },
    icon: {
      width: 10,
      height: 10
    },
    textContainer: {
      flex: 1,
      justifyContent: 'center'
    },
    title: {
      alignSelf: 'stretch',
      fontSize: 16,
      lineHeight: 22
    },
    subtitle: {
      alignSelf: 'stretch',
      fontSize: 13,
      lineHeight: 18
    }
  });
},23002,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22786,22426,22420,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _ChoiceItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var TYPE = {
    SINGLE: 'single',
    MULTIPLE: 'multiple'
  };
  Object.freeze(TYPE);

  var ChoiceDialog = function (_React$Component) {
    (0, _inherits2.default)(ChoiceDialog, _React$Component);

    function ChoiceDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ChoiceDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ChoiceDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ChoiceDialog');
      var buttons = props.buttons;

      if (buttons instanceof Array) {
        var button = buttons[buttons.length - 1];

        if (button && button.callback) {
          var callbackOrigin = button.callback;

          button.callback = function () {
            var selectedIndexArray = [];
            var selectedIndex;

            for (var i = 0; i < _this.state.selectedArray.length; i++) {
              var item = _this.state.selectedArray[i];

              if (item) {
                selectedIndexArray.push(i);
                selectedIndex = i;
              }
            }

            if (_this.props.type === TYPE.SINGLE) _this.props.onSelect && _this.props.onSelect([selectedIndex]);
            callbackOrigin(selectedIndexArray);
          };
        }
      }

      _this.buttons = buttons;
      var selectedArray = Array.from({
        length: props.options.length
      }, function (v, i) {
        return props.selectedIndexArray.includes(i);
      });
      _this.state = {
        visible: props.visible,
        selectedArray: selectedArray
      };
      return _this;
    }

    (0, _createClass2.default)(ChoiceDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }

        var selectedArray = Array.from({
          length: newProps.options.length
        }, function (v, i) {
          return newProps.selectedIndexArray.includes(i);
        });
        this.setState({
          selectedArray: selectedArray
        });
      }
    }, {
      key: "_onPress",
      value: function _onPress(selected, index) {
        if (selected) {} else {}

        if (this.props.type === TYPE.SINGLE) {
          var selectedArray = Array.from({
            length: this.props.options.length
          }, function () {
            return false;
          });
          selectedArray[index] = selected;

          if (this.props.useNewType) {
            this.setState({
              selectedArray: selectedArray
            });
          } else {
            this.setState({
              selectedArray: selectedArray,
              visible: false
            });

            this._onDismiss();

            this.props.onSelect && this.props.onSelect([index]);
          }
        } else {
          var _selectedArray = this.state.selectedArray;
          _selectedArray[index] = selected;
          this.setState({
            selectedArray: _selectedArray
          });
        }
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var showButton = this.props.type === TYPE.MULTIPLE || this.props.useNewType;
        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.state.visible,
          title: this.props.title,
          dialogStyle: this.props.dialogStyle,
          showButton: showButton,
          buttons: this.buttons,
          style: this.props.modalStyle,
          useNewTheme: true,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          onDismiss: function onDismiss() {
            return _this2._onDismiss();
          },
          canDismiss: this.props.canDismiss
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessibilityLabel: this.props.accessible
        })), _react.default.createElement(_reactNative.View, {
          style: {
            marginBottom: 16
          }
        }, this.props.options.map(function (option, index) {
          return _react.default.createElement(_reactNative.View, {
            key: (option.title || '') + index
          }, _react.default.createElement(_ChoiceItem.default, (0, _extends2.default)({
            type: _this2.props.type,
            title: option.title || '',
            titleStyle: _this2.props.dialogStyle.itemTitleStyle,
            subtitleStyle: _this2.props.dialogStyle.itemSubtitleStyle,
            allowFontScaling: _this2.props.dialogStyle.allowFontScaling,
            unlimitedHeightEnable: _this2.props.dialogStyle.unlimitedHeightEnable,
            titleNumberOfLines: _this2.props.dialogStyle.itemTitleNumberOfLines,
            subtitleNumberOfLines: _this2.props.dialogStyle.itemSubtitleNumberOfLines,
            subtitle: option.subtitle || '',
            selected: _this2.state.selectedArray[index],
            color: _this2.props.color,
            icon: _this2.props.icon,
            onPress: function onPress(selected) {
              return _this2._onPress(selected, index);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityLabel: option.accessibilityLabel,
            accessibilityHint: option.accessibilityHint
          }))));
        })));
      }
    }]);
    return ChoiceDialog;
  }(_react.default.Component);

  ChoiceDialog.propTypes = {
    animationType: _propTypes.default.string,
    type: _propTypes.default.oneOf([TYPE.STATELESS, TYPE.SINGLE, TYPE.MULTIPLE]),
    visible: _propTypes.default.bool,
    options: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      subtitle: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    selectedIndexArray: _propTypes.default.arrayOf(_propTypes.default.number),
    color: _propTypes.default.string,
    icon: _propTypes.default.number,
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func
    })),
    title: _propTypes.default.string,
    dialogStyle: _propTypes.default.object,
    onSelect: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    canDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  ChoiceDialog.defaultProps = {
    useNewType: false,
    type: TYPE.SINGLE,
    options: [],
    selectedIndexArray: [],
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      titleStyle: {},
      itemTitleStyle: {},
      itemSubtitleStyle: {},
      itemTitleNumberOfLines: 1,
      itemSubtitleNumberOfLines: 1
    },
    canDismiss: true
  };
  ChoiceDialog.TYPE = TYPE;
  var _default = ChoiceDialog;
  exports.default = _default;
},23005,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,23002,22996,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _InputView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var paddingHorizontal = 27;
  var paddingVertical = 28;
  var paddingTop = 9;
  var paddingBottom = 6;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      height = _Dimensions$get.height,
      width = _Dimensions$get.width;

  var TYPE = {
    SIMPLE: 'simple',
    UNDERLINE: 'underline',
    CHECKBOX: 'checkbox',
    BOTH: 'both'
  };
  Object.freeze(TYPE);

  var InputDialog = function (_React$Component) {
    (0, _inherits2.default)(InputDialog, _React$Component);

    function InputDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, InputDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InputDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('InputDialog');
      _this.state = {
        checked: props.checkboxData.checked || false,
        disButton: props.noInputDisButton
      };
      _this.textInputArray = [];

      _this.process(props);

      return _this;
    }

    (0, _createClass2.default)(InputDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(props) {
        this.setState({
          checked: props.checkboxData.checked || false
        });
        this.processButton(props);
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        if (prevProps.visible && !this.props.visible) {
          this.textInputArray = [];
          this.setState({
            disButton: this.props.noInputDisButton
          });
        } else if (!prevProps.visible && this.props.visible) {
          this.textInputArray = [];

          for (var i = 0; i < ((_this$props$inputs = this.props.inputs) == null ? undefined : _this$props$inputs.length) || 0; i++) {
            var _this$props$inputs;

            var input = this.props.inputs[i];

            if (input !== undefined) {
              this.textInputArray.push(input.defaultValue || '');
            }
          }

          if (this.props.noInputDisButton) {
            var result = this.isInputArrayEmpty(this.textInputArray);
            if (result !== this.state.disButton) this.setState({
              disButton: result
            });
          }
        }
      }
    }, {
      key: "processButton",
      value: function processButton(props) {
        var _this2 = this;

        var buttons = props.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];

          if (button && button.callback) {
            var callbackOrigin = button.callback;

            button.callback = function () {
              callbackOrigin({
                hasPressUnderlineText: _this2.hasPressUnderlineText,
                checked: _this2.state.checked,
                textInputArray: _this2.textInputArray
              });
            };
          }
        }

        this.buttons = buttons;
        this.hasPressUnderlineText = false;
      }
    }, {
      key: "process",
      value: function process(props) {
        var _this3 = this;

        var inputs = props.inputs;

        if (props.inputs === null || props.inputs === undefined) {
          inputs = [{
            defaultValue: '',
            textInputProps: {
              autoFocus: true
            }
          }];
        }

        var _loop = function _loop(i) {
          var input = inputs[i];

          if (input !== undefined) {
            _this3.textInputArray.push(input.defaultValue || '');

            var onChangeTextOrigin = input.onChangeText;

            input.onChangeText = function (text) {
              _this3._onChangeText(text, i);

              if (onChangeTextOrigin instanceof Function) {
                onChangeTextOrigin(text);
              }
            };
          }
        };

        for (var i = 0; i < inputs.length; i++) {
          _loop(i);
        }

        this.inputs = inputs;
        this.processButton(props);
      }
    }, {
      key: "isInputArrayEmpty",
      value: function isInputArrayEmpty(arr) {
        for (var _iterator = arr, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
          var _ref;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
          }

          var _element = _ref;
          if (_element === '' || typeof _element === undefined || _element === null) return true;
        }

        return false;
      }
    }, {
      key: "_onChangeText",
      value: function _onChangeText(text, index) {
        this.textInputArray[index] = text;

        if (this.props.noInputDisButton) {
          var result = this.isInputArrayEmpty(this.textInputArray);
          if (result !== this.state.disButton) this.setState({
            disButton: result
          });
        }
      }
    }, {
      key: "renderUpExtra",
      value: function renderUpExtra() {
        var _this4 = this;

        if ((this.props.type === TYPE.BOTH || this.props.type === TYPE.UNDERLINE) && !this.props.underlineData.useNewTheme) {
          var _this$props$underline = this.props.underlineData,
              leftText = _this$props$underline.leftText,
              underlineText = _this$props$underline.underlineText,
              accessibilityLabel = _this$props$underline.accessibilityLabel,
              accessibilityHint = _this$props$underline.accessibilityHint;
          var leftTextNumberOfLines = 1;
          var underlineTextNumberOfLines = 1;

          if (this.props.underlineData && this.props.underlineData.hasOwnProperty('leftTextNumberOfLines')) {
            leftTextNumberOfLines = this.props.underlineData.leftTextNumberOfLines;
          }

          if (this.props.underlineData && this.props.underlineData.hasOwnProperty('underlineTextNumberOfLines')) {
            underlineTextNumberOfLines = this.props.underlineData.underlineTextNumberOfLines;
          }

          return _react.default.createElement(_reactNative.View, {
            style: [styles.underlineContainer, {
              paddingBottom: 5,
              paddingTop: 0
            }]
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            numberOfLines: leftTextNumberOfLines,
            allowFontScaling: this.props.dialogStyle.allowFontScaling,
            style: [styles.label, this.props.underlineData.leftTextStyle]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
          })), leftText || ''), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: [styles.underlineText, {
              color: this.props.color
            }, this.props.underlineData.underlineTextStyle],
            numberOfLines: underlineTextNumberOfLines,
            allowFontScaling: this.props.dialogStyle.allowFontScaling,
            onPress: function onPress() {
              return _this4.onPressUnderlineText();
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
            accessibilityLabel: accessibilityLabel,
            accessibilityHint: accessibilityHint
          })), underlineText || ''));
        }

        return null;
      }
    }, {
      key: "renderDownUnderline",
      value: function renderDownUnderline() {
        var _this5 = this;

        if ((this.props.type === TYPE.BOTH || this.props.type === TYPE.UNDERLINE) && this.props.underlineData.useNewTheme) {
          var _this$props$underline2 = this.props.underlineData,
              underlineText = _this$props$underline2.underlineText,
              accessibilityLabel = _this$props$underline2.accessibilityLabel,
              accessibilityHint = _this$props$underline2.accessibilityHint;
          var underlineTextNumberOfLines = 1;

          if (this.props.underlineData && this.props.underlineData.hasOwnProperty('underlineTextNumberOfLines')) {
            underlineTextNumberOfLines = this.props.underlineData.underlineTextNumberOfLines;
          }

          return _react.default.createElement(_reactNative.View, {
            style: [styles.underlineContainer]
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: [styles.underlineText, {
              color: this.props.color,
              textAlign: 'left'
            }, this.props.underlineData.underlineTextStyle],
            numberOfLines: underlineTextNumberOfLines,
            allowFontScaling: this.props.dialogStyle.allowFontScaling,
            onPress: function onPress() {
              return _this5.onPressUnderlineText();
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
            accessibilityLabel: accessibilityLabel,
            accessibilityHint: accessibilityHint
          })), underlineText || ''));
        }

        return null;
      }
    }, {
      key: "renderWarnText",
      value: function renderWarnText() {
        var _this$context$theme;

        return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.inputWarnText, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorWarn
          }],
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), this.props.inputWarnText);
      }
    }, {
      key: "renderInputView",
      value: function renderInputView(input, index) {
        var _this6 = this;

        if (input === undefined) return null;
        var accessibilityLabel = input.accessibilityLabel,
            accessibilityHint = input.accessibilityHint;
        var marginTop = index === 0 ? 0 : 7;
        var onChangeTextOrigin = input.onChangeText;

        input.onChangeText = function (text) {
          _this6._onChangeText(text, index);

          if (onChangeTextOrigin instanceof Function) {
            onChangeTextOrigin(text);
          }
        };

        return _react.default.createElement(_InputView.default, (0, _extends2.default)({
          key: index + (input.placeholder || ''),
          style: {
            marginTop: marginTop
          },
          placeholder: input.placeholder || '',
          onChangeText: input.onChangeText,
          defaultValue: input.defaultValue || '',
          textInputProps: input.textInputProps || {},
          type: input.type,
          borderColor: input.borderColor,
          isCorrect: input.isCorrect
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: accessibilityLabel,
          accessibilityHint: accessibilityHint
        })));
      }
    }, {
      key: "renderInputGroup",
      value: function renderInputGroup() {
        var input0 = this.props.inputs ? this.props.inputs[0] : [{
          defaultValue: '',
          textInputProps: {
            autoFocus: true
          }
        }];
        var input1 = this.props.inputs ? this.props.inputs.length > 1 ? this.props.inputs[1] : undefined : undefined;
        return _react.default.createElement(_reactNative.View, {
          flexDirection: 'column',
          alignItems: 'center',
          justifyContent: 'center'
        }, this.renderInputView(input0, 0), input0.hasOwnProperty('isCorrect') && !input0.isCorrect ? this.renderWarnText() : null, this.renderInputView(input1, 1));
      }
    }, {
      key: "renderDownExtra",
      value: function renderDownExtra() {
        var _this7 = this;

        if (this.props.type === TYPE.BOTH || this.props.type === TYPE.CHECKBOX) {
          var _this$context$theme2;

          var _this$props$checkboxD = this.props.checkboxData,
              text = _this$props$checkboxD.text,
              accessibilityLabel = _this$props$checkboxD.accessibilityLabel,
              accessibilityHint = _this$props$checkboxD.accessibilityHint;
          var numberOfLines = 1;

          if (this.props.checkboxData && this.props.checkboxData.hasOwnProperty('numberOfLines')) {
            numberOfLines = this.props.checkboxData.numberOfLines;
          }

          return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            onPress: function onPress() {
              return _this7.onPressCheckbox();
            },
            activeOpacity: 1,
            style: {
              paddingTop: paddingTop,
              marginHorizontal: 13
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
            accessibilityLabel: accessibilityLabel || text,
            accessibilityHint: accessibilityHint,
            accessibilityState: {
              disabled: false,
              checked: this.state.checked
            }
          })), _react.default.createElement(_reactNative.View, {
            style: [styles.checkboxContainer]
          }, _react.default.createElement(_Checkbox.default, {
            checked: this.state.checked,
            checkedColor: this.props.color,
            style: {
              width: 22,
              height: 22,
              borderRadius: 11
            },
            onValueChange: function onValueChange(checked) {
              _this7.setState({
                checked: checked
              });
            }
          }), _react.default.createElement(_reactNative.Text, {
            style: [styles.checkboxText, {
              color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayHeavier
            }, this.props.checkboxData.textStyle],
            numberOfLines: numberOfLines,
            allowFontScaling: this.props.dialogStyle.allowFontScaling
          }, text || '')));
        }

        return null;
      }
    }, {
      key: "render",
      value: function render() {
        var _this8 = this;

        var buttons = this.buttons;

        if (this.props.noInputDisButton && buttons instanceof Array) {
          var button = buttons[buttons.length - 1];
          button.disabled = this.state.disButton;
          button.colorType = this.state.disButton ? 'grayLayerBlack' : 'blueLayerWhite';
        }

        var absDialogStyle = _reactNative.Platform.OS === 'ios' ? {
          bottom: ~~(height * 0.45),
          borderRadius: 20,
          marginHorizontal: 10,
          width: width - 20
        } : {};
        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.props.visible,
          title: this.props.title,
          buttons: this.buttons,
          dialogStyle: this.props.dialogStyle,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          onDismiss: function onDismiss() {
            return _this8._onDismiss();
          },
          showSubtitle: !this.props.isCorrect,
          subtitle: this.props.warnText,
          canDismiss: this.props.canDismiss,
          useNewTheme: true,
          dialogStyle: {
            subTitleStyle: {
              color: '#F43F31',
              fontSize: 14,
              lineHeight: 19
            }
          },
          style: absDialogStyle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.container]
        }, this.renderUpExtra(), this.renderInputGroup(), this.renderDownUnderline(), this.renderDownExtra()));
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
        this.setState({
          disButton: this.props.noInputDisButton
        });
      }
    }, {
      key: "onPressUnderlineText",
      value: function onPressUnderlineText() {
        this.hasPressUnderlineText = true;
        var onPress = this.props.underlineData.onPress;
        onPress && onPress();
      }
    }, {
      key: "onPressCheckbox",
      value: function onPressCheckbox() {
        this.setState({
          checked: !this.state.checked
        });
      }
    }]);
    return InputDialog;
  }(_react.default.Component);

  InputDialog.contextType = _configProvider.ConfigContext;
  InputDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    type: _propTypes.default.oneOf([TYPE.SIMPLE, TYPE.UNDERLINE, TYPE.CHECKBOX, TYPE.BOTH]),
    color: _propTypes.default.string,
    title: _propTypes.default.string,
    dialogStyle: _propTypes.default.object,
    extra: _propTypes.default.object,
    underlineData: _propTypes.default.shape({
      useNewTheme: _propTypes.default.bool,
      leftText: _propTypes.default.string,
      underlineText: _propTypes.default.string,
      onPress: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    }),
    inputs: _propTypes.default.arrayOf(_propTypes.default.shape({
      placeholder: _propTypes.default.string,
      defaultValue: _propTypes.default.string,
      onChangeText: _propTypes.default.func,
      textInputProps: _propTypes.default.object,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    checkboxData: _propTypes.default.shape({
      checked: _propTypes.default.bool,
      text: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    }),
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    isCorrect: _propTypes.default.bool,
    inputWarnText: _propTypes.default.string,
    warnText: _propTypes.default.string,
    noInputDisButton: _propTypes.default.bool,
    canDismiss: _propTypes.default.bool
  };
  InputDialog.defaultProps = {
    type: TYPE.SIMPLE,
    color: _resources.Styles.common.MHGreen,
    underlineData: {},
    checkboxData: {},
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      titleNumberOfLines: 1,
      titleStyle: {}
    },
    buttons: [{
      text: '取消'
    }, {
      text: '确定'
    }],
    inputs: [{
      placeholder: '自定义占位字符',
      defaultValue: '',
      textInputProps: {
        autoFocus: true
      }
    }],
    isCorrect: true,
    inputWarnText: '输入错误',
    warnText: '结果错误',
    noInputDisButton: false,
    canDismiss: true
  };
  InputDialog.TYPE = TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingHorizontal: paddingHorizontal,
      paddingBottom: paddingVertical,
      backgroundColor: 'transparent',
      borderRadius: _resources.Styles.dialog.modal.borderRadius
    },
    underlineContainer: {
      marginHorizontal: 13,
      paddingTop: paddingTop,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-around'
    },
    label: {
      fontSize: 14,
      lineHeight: 19,
      color: 'rgba(0,0,0,0.8)',
      flex: 1
    },
    underlineText: {
      flex: 1,
      textAlign: 'right',
      lineHeight: 19,
      textDecorationLine: 'underline',
      fontSize: 14
    },
    checkboxContainer: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    checkboxText: {
      flex: 1,
      marginLeft: 7,
      fontSize: 14,
      lineHeight: 19
    },
    inputWarnText: {
      alignSelf: 'flex-start',
      marginHorizontal: 19,
      marginTop: 9,
      fontSize: 14,
      lineHeight: 19,
      flex: 1
    }
  });

  var _default = InputDialog;
  exports.default = _default;
},23008,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22786,22996,22426,23221,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeIndicators = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var _Icons = _$$_REQUIRE(_dependencyMap[16]);

  var LoadingDialog = function (_React$Component) {
    (0, _inherits2.default)(LoadingDialog, _React$Component);

    function LoadingDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LoadingDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LoadingDialog).call(this, props, context));

      _this.onShowView = function () {
        _this.state.rotate.setValue(0);

        _reactNative.Animated.timing(_this.state.rotate, {
          toValue: 1,
          useNativeDriver: true,
          duration: 1000
        }).start(function () {
          return _this.onShowView();
        });
      };

      (0, _reportDecorator.referenceReport)('LoadingDialog');
      _this.state = {
        visible: _this.props.visible,
        rotate: new _reactNative.Animated.Value(0)
      };
      _this.uselesscode = _reactNativeIndicators.BallIndicator;
      return _this;
    }

    (0, _createClass2.default)(LoadingDialog, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.onShowView();
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this,
            _this$context$theme;

        var timeout = this.props.timeout;
        var paddingTop = 25;

        if (timeout && typeof parseInt(timeout) === 'number') {
          if (!this.state.visible) {
            clearTimeout(this.timer);
            this.timer = null;
          } else if (!this.timer) {
            this.timer = setTimeout(function () {
              _this2.setState({
                visible: false
              });

              _this2.props.onDismiss && _this2.props.onDismiss();
            }, parseInt(timeout));
          }
        }

        var pic = this.context.colorScheme === 'dark' ? _Icons.Icons.loadingPicDark : _Icons.Icons.loadingPicLight;

        var imageView = _react.default.createElement(_reactNative.Animated.Image, {
          source: pic,
          style: {
            marginLeft: 1,
            backgroundColor: 'transparent',
            width: 20,
            height: 20,
            transform: [{
              rotate: this.state.rotate.interpolate({
                inputRange: [0, 1],
                outputRange: ['0deg', '360deg']
              })
            }]
          }
        });

        var heightStyle = {
          height: styles.container.height,
          minHeight: styles.container.height
        };

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('textNumberOfLines')) {
          if (this.props.dialogStyle.textNumberOfLines > 1) {
            heightStyle.height = null;
          }
        }

        if (this.props.dialogStyle && this.props.dialogStyle.unlimitedHeightEnable) {
          heightStyle.height = null;
        }

        return _react.default.createElement(_AbstractDialog.default, {
          animationType: this.props.animationType,
          visible: this.state.visible,
          showTitle: false,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          canDismiss: false,
          showButton: false,
          accessible: this.props.accessible,
          useNewTheme: true
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, heightStyle, {
            paddingTop: paddingTop
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), imageView, _react.default.createElement(_reactNative.Text, {
          style: [styles.message, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorGrayHeavier
          }, this.props.dialogStyle.messageStyle],
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          numberOfLines: this.props.dialogStyle.textNumberOfLines
        }, this.props.message || '')));
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        clearTimeout(this.timer);
      }
    }]);
    return LoadingDialog;
  }(_react.default.Component);

  LoadingDialog.contextType = _configProvider.ConfigContext;
  LoadingDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    message: _propTypes.default.string,
    timeout: _propTypes.default.number,
    dialogStyle: _propTypes.default.object,
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  LoadingDialog.defaultProps = {
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      messageStyle: {}
    }
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      height: 65,
      flexDirection: 'row',
      alignItems: 'center',
      paddingHorizontal: 27,
      borderTopEndRadius: _resources.Styles.dialog.modal.borderTopEndRadius,
      borderTopStartRadius: _resources.Styles.dialog.modal.borderTopStartRadius
    },
    message: {
      marginLeft: 15,
      flex: 1,
      fontSize: 16
    }
  });

  var _default = LoadingDialog;
  exports.default = _default;
},23011,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13711,22453,22996,22426,22420,22423,23080]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[16]);

  var _font = _$$_REQUIRE(_dependencyMap[17]);

  var paddingHorizontal = 40;
  var paddingVertical = 28;
  var paddingTop = 17;
  var TYPE = {
    SIMPLE: 'simple',
    UNDERLINE: 'underline',
    CHECKBOX: 'checkbox',
    SUBTEXT: 'subtext'
  };
  Object.freeze(TYPE);

  var MessageDialog = function (_React$Component) {
    (0, _inherits2.default)(MessageDialog, _React$Component);

    function MessageDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, MessageDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MessageDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('MessageDialog');
      _this.state = {
        checked: props.extra.checked || false
      };

      _this.process(props);

      return _this;
    }

    (0, _createClass2.default)(MessageDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(props) {
        this.setState({
          checked: props.extra.checked || false
        });
        this.process(props);
      }
    }, {
      key: "process",
      value: function process(props) {
        var _this2 = this;

        this.hasPressUnderlineText = false;
        var buttons = props.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];

          if (button && button.callback) {
            var callbackOrigin = button.callback;

            button.callback = function () {
              if (props.type === TYPE.UNDERLINE) {
                callbackOrigin({
                  hasPressUnderlineText: _this2.hasPressUnderlineText
                });
              } else if (props.type === TYPE.CHECKBOX) {
                callbackOrigin({
                  checked: _this2.state.checked
                });
              } else {
                callbackOrigin({});
              }
            };
          }
        }

        this.buttons = buttons;
      }
    }, {
      key: "renderExtra",
      value: function renderExtra() {
        var _this3 = this,
            _this$context$theme,
            _this$context$theme2;

        var extraTextNumberOfLines = 1;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('extraTextNumberOfLines')) {
          extraTextNumberOfLines = this.props.dialogStyle.extraTextNumberOfLines;
        }

        switch (this.props.type) {
          case TYPE.SIMPLE:
            return null;

          case TYPE.UNDERLINE:
            return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
              style: [styles.extraContainer, {
                paddingTop: paddingTop
              }]
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
              accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
              accessibilityHint: this.props.accessibilityHint
            })), _react.default.createElement(_reactNative.Text, {
              numberOfLines: extraTextNumberOfLines,
              allowFontScaling: this.props.dialogStyle.allowFontScaling,
              style: [styles.underlineText, {
                color: this.props.color
              }, this.props.dialogStyle.extraTextStyle],
              onPress: function onPress() {
                return _this3.onPressUnderlineText();
              }
            }, this.props.extraText || ''));

          case TYPE.CHECKBOX:
            return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
              onPress: function onPress() {
                return _this3.onPressCheckbox();
              },
              activeOpacity: 1,
              style: {
                paddingTop: paddingTop
              }
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: false
            })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
              style: styles.extraContainer
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
              accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
              accessibilityHint: this.props.accessibilityHint,
              accessibilityState: {
                disabled: false,
                checked: this.state.checked
              }
            })), _react.default.createElement(_Checkbox.default, {
              checked: this.state.checked,
              checkedColor: this.props.color,
              style: {
                width: 22,
                height: 22,
                borderRadius: 11
              },
              onValueChange: function onValueChange(checked) {
                _this3.setState({
                  checked: checked
                });
              }
            }), _react.default.createElement(_reactNative.Text, {
              style: [styles.checkboxText, {
                color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorGrayHeavier
              }, this.props.dialogStyle.extraTextStyle],
              numberOfLines: extraTextNumberOfLines,
              allowFontScaling: this.props.dialogStyle.allowFontScaling
            }, this.props.extraText || '')));

          case TYPE.SUBTEXT:
            extraTextNumberOfLines = 15;

            if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('extraTextNumberOfLines')) {
              extraTextNumberOfLines = this.props.dialogStyle.extraTextNumberOfLines;
            }

            return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
              style: {
                paddingTop: 10
              }
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
              accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
              accessibilityHint: this.props.accessibilityHint
            })), _react.default.createElement(_reactNative.Text, {
              numberOfLines: extraTextNumberOfLines,
              allowFontScaling: this.props.dialogStyle.allowFontScaling,
              style: [styles.subText, {
                color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayLighter
              }, this.props.dialogStyle.extraTextStyle]
            }, this.props.extraText || ''));

          default:
            return null;
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this,
            _this$context$theme3;

        var showTitle = !!this.props.title;
        var paddingTop = showTitle ? {
          paddingTop: 8
        } : {};
        var messageNumberOfLines = 15;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('messageNumberOfLines')) {
          messageNumberOfLines = this.props.dialogStyle.messageNumberOfLines;
        }

        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.props.visible,
          title: this.props.title,
          showTitle: showTitle,
          buttons: this.buttons,
          dialogStyle: this.props.dialogStyle,
          onModalShow: this.props.onModalShow,
          style: this.props.modalStyle,
          onModalHide: this.props.onModalHide,
          canDismiss: this.props.canDismiss,
          onDismiss: function onDismiss() {
            return _this4._onDismiss();
          },
          useNewTheme: true
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.container, paddingTop]
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: messageNumberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          style: [styles.message, {
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayHeavier
          }, this.props.messageStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), this.props.message || ''), this.renderExtra()));
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "onPressUnderlineText",
      value: function onPressUnderlineText() {
        this.hasPressUnderlineText = true;
        var onPress = this.props.extra.onPress;
        onPress && onPress();
      }
    }, {
      key: "onPressCheckbox",
      value: function onPressCheckbox() {
        this.setState({
          checked: !this.state.checked
        });
      }
    }]);
    return MessageDialog;
  }(_react.default.Component);

  MessageDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    type: _propTypes.default.oneOf([TYPE.SIMPLE, TYPE.UNDERLINE, TYPE.CHECKBOX]),
    color: _propTypes.default.string,
    title: _propTypes.default.string,
    message: _propTypes.default.string,
    messageStyle: _reactNative.Text.propTypes.style,
    extraText: _propTypes.default.string,
    extra: _propTypes.default.object,
    buttons: _propTypes.default.arrayOf(_propTypes.default.object),
    dialogStyle: _propTypes.default.object,
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    modalStyle: _propTypes.default.object,
    canDismiss: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  MessageDialog.defaultProps = {
    type: TYPE.SIMPLE,
    color: _resources.Styles.common.MHGreen,
    message: '请自定义提示文案',
    messageStyle: {},
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      titleNumberOfLines: 1,
      messageNumberOfLines: 15,
      titleStyle: {},
      extraTextStyle: {}
    },
    canDismiss: true,
    extra: {}
  };
  MessageDialog.TYPE = TYPE;
  MessageDialog.contextType = _configProvider.ConfigContext;

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingHorizontal: paddingHorizontal,
      paddingVertical: paddingVertical,
      borderTopEndRadius: _resources.Styles.dialog.modal.borderTopEndRadius,
      borderTopStartRadius: _resources.Styles.dialog.modal.borderTopStartRadius
    },
    message: (0, _objectSpread2.default)({
      fontSize: 16,
      lineHeight: 22
    }, _font.FontSecondary),
    subText: (0, _objectSpread2.default)({
      fontSize: 12,
      lineHeight: 16
    }, _font.FontSecondary),
    underlineText: {
      flex: 1,
      textDecorationLine: 'underline',
      fontSize: 14
    },
    extraContainer: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    checkboxText: {
      flex: 1,
      marginLeft: 7,
      fontSize: 14
    }
  });

  var _default = MessageDialog;
  exports.default = _default;
},23014,[14305,14314,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22786,22996,22420,22423,22426,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var paddingHorizontal = 25;
  var paddingVertical = 28;
  var marginVertical = 26;
  var blockSize = 48;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      height = _Dimensions$get.height,
      width = _Dimensions$get.width;

  var PinCodeDialog = function (_React$Component) {
    (0, _inherits2.default)(PinCodeDialog, _React$Component);
    (0, _createClass2.default)(PinCodeDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(props) {
        if (props.visible === true) {
          this.setState({
            numArr: Array.from({
              length: this.digit
            }, function () {
              return undefined;
            }),
            value: ''
          });
        }

        this.setState({
          checked: (props.checkboxData || {})['checked'] || false
        });
        this.process(props);
      }
    }]);

    function PinCodeDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, PinCodeDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PinCodeDialog).call(this, props, context));

      _this.fadeInView = function () {
        var animationSequence = _reactNative.Animated.sequence([_reactNative.Animated.timing(_this.state.fadeAnim, {
          toValue: 1,
          duration: 490,
          easing: _reactNative.Easing.exp,
          useNativeDriver: true
        }), _reactNative.Animated.timing(_this.state.fadeAnim, {
          toValue: 0,
          duration: 490,
          easing: _reactNative.Easing.exp,
          useNativeDriver: true
        })]);

        _reactNative.Animated.loop(animationSequence).start();

        return _react.default.createElement(_reactNative.Animated.View, {
          style: {
            width: 2,
            height: 18,
            borderRadius: 0.5,
            backgroundColor: '#32BAC0',
            opacity: _this.state.fadeAnim
          }
        });
      };

      (0, _reportDecorator.referenceReport)('PinCodeDialog');
      _this.digit = _this.props.digit;

      if (_this.digit > 6 || _this.digit < 3) {
        _this.digit = 6;
      }

      var numArr = Array.from({
        length: _this.digit
      }, function () {
        return undefined;
      });
      _this.state = {
        numArr: numArr,
        value: '',
        checked: (props.checkboxData || {})['checked'] || false,
        fadeAnim: new _reactNative.Animated.Value(0)
      };

      _this.process(props);

      return _this;
    }

    (0, _createClass2.default)(PinCodeDialog, [{
      key: "process",
      value: function process(props) {
        var _this2 = this;

        var buttons = props.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];

          if (button && button.callback) {
            var callbackOrigin = button.callback;

            button.callback = function () {
              callbackOrigin({
                checked: _this2.state.checked,
                numArr: _this2.state.numArr
              });
            };
          }
        }

        this.buttons = buttons;
      }
    }, {
      key: "_onChangeText",
      value: function _onChangeText(text) {
        if (/^\d*$/.test(text)) {
          if (text.length <= this.digit) {
            var numArr = this.state.numArr.map(function (v, i) {
              return text[i];
            });
            this.setState({
              numArr: numArr
            });
          }

          this.setState({
            value: text.slice(0, this.digit)
          });
        } else {
          var value = text.match(/\d*/)[0];
          this.setState({
            value: value
          });
        }
      }
    }, {
      key: "renderUpExtra",
      value: function renderUpExtra() {
        var _this$context$theme;

        if (!this.props.message) return null;
        var numberOfLines = 15;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('messageNumberOfLines')) {
          numberOfLines = this.props.dialogStyle.messageNumberOfLines;
        }

        return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.message, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorGrayHeavier
          }, this.props.dialogStyle.messageStyle],
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          numberOfLines: numberOfLines
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), this.props.message || '');
      }
    }, {
      key: "renderTextGroup",
      value: function renderTextGroup() {
        var _this3 = this;

        var focusIndex = this.state.numArr.indexOf(undefined);
        return Array.from({
          length: this.digit
        }, function (v, i) {
          return i;
        }).map(function (v, i) {
          var _this3$context$theme3, _this3$context$theme4;

          var marginLeft = i === 0 ? {} : {
            marginLeft: 66 / _this3.digit
          };
          var borderColor = {};
          var boxView;

          if (i < focusIndex - 1 || focusIndex === -1) {
            var _this3$context$theme;

            boxView = _react.default.createElement(_reactNative.View, {
              style: {
                width: 8,
                height: 8,
                backgroundColor: (_this3$context$theme = _this3.context.theme) == null ? undefined : _this3$context$theme.colorBlack1,
                borderRadius: 4
              }
            });
          } else if (i === focusIndex) {
            boxView = _this3.fadeInView();
          } else {
            var _this3$context$theme2;

            boxView = _react.default.createElement(_reactNative.Text, {
              style: [styles.blockText, {
                color: (_this3$context$theme2 = _this3.context.theme) == null ? undefined : _this3$context$theme2.colorBlack1
              }, _this3.props.dialogStyle.digitStyle],
              selectionColor: 'green',
              allowFontScaling: _this3.props.dialogStyle.allowFontScaling
            }, _this3.state.numArr[i] || '');
          }

          return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            key: i,
            style: [styles.blockContainer, {
              backgroundColor: (_this3$context$theme3 = _this3.context.theme) == null ? undefined : _this3$context$theme3.colorBtnGrayNor,
              borderColor: (_this3$context$theme4 = _this3.context.theme) == null ? undefined : _this3$context$theme4.colorBtnGrayNor
            }, marginLeft, borderColor]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this3.props.accessible
          })), boxView);
        });
      }
    }, {
      key: "renderDownExtra",
      value: function renderDownExtra() {
        var _this4 = this,
            _this$context$theme2;

        if (!(this.props.checkboxData instanceof Object)) return null;
        var numberOfLines = 1;

        if (this.props.checkboxData && this.props.checkboxData.hasOwnProperty('numberOfLines')) {
          numberOfLines = this.props.checkboxData.numberOfLines;
        }

        var _this$props$checkboxD = this.props.checkboxData,
            text = _this$props$checkboxD.text,
            accessibilityLabel = _this$props$checkboxD.accessibilityLabel,
            accessibilityHint = _this$props$checkboxD.accessibilityHint;
        return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          onPress: function onPress() {
            return _this4.onPressCheckbox();
          },
          activeOpacity: 1
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
          accessibilityLabel: accessibilityLabel,
          accessibilityHint: accessibilityHint,
          accessibilityState: {
            disabled: false,
            checked: this.state.checked
          }
        })), _react.default.createElement(_reactNative.View, {
          style: styles.checkboxContainer
        }, _react.default.createElement(_Checkbox.default, {
          checked: this.state.checked,
          checkedColor: this.props.color,
          style: {
            width: 22,
            height: 22,
            borderRadius: 11
          },
          onValueChange: function onValueChange(checked) {
            _this4.setState({
              checked: checked
            });
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: [styles.checkboxText, {
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayHeavier
          }, this.props.checkboxData.textStyle],
          numberOfLines: numberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, text || '')));
      }
    }, {
      key: "render",
      value: function render() {
        var _this5 = this;

        var buttons = this.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];
          button.disabled = this.state.value === '';
          button.colorType = this.state.value === '' ? 'grayLayerBlack' : 'blueLayerWhite';
        }

        var absDialogStyle = _reactNative.Platform.OS === 'ios' ? {
          bottom: ~~(height * 0.4),
          borderRadius: 20,
          marginHorizontal: 10,
          width: width - 20
        } : {};
        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.props.visible,
          title: this.props.title,
          buttons: this.buttons,
          dialogStyle: this.props.dialogStyle,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          style: this.props.modalStyle,
          onDismiss: function onDismiss() {
            return _this5._onDismiss();
          },
          useNewTheme: true,
          canDismiss: this.props.canDismiss,
          style: absDialogStyle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.container]
        }, this.renderUpExtra(), _react.default.createElement(_reactNative.View, {
          style: styles.pinCodeContainer
        }, _react.default.createElement(_reactNative.View, {
          style: styles.textGroup
        }, this.renderTextGroup()), _react.default.createElement(_reactNative.TextInput, {
          autoFocus: true,
          caretHidden: true,
          style: styles.textinput,
          value: this.state.value,
          underlineColorAndroid: "transparent",
          onChangeText: function onChangeText(text) {
            return _this5._onChangeText(text);
          },
          keyboardType: "numeric"
        })), this.renderDownExtra()));
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "onPressCheckbox",
      value: function onPressCheckbox() {
        this.setState({
          checked: !this.state.checked
        });
      }
    }]);
    return PinCodeDialog;
  }(_react.default.Component);

  PinCodeDialog.contextType = _configProvider.ConfigContext;
  PinCodeDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    title: _propTypes.default.string,
    message: _propTypes.default.string,
    digit: _propTypes.default.oneOf([3, 4, 5, 6]),
    color: _propTypes.default.any,
    dialogStyle: _propTypes.default.object,
    checkboxData: _propTypes.default.shape({
      checked: _propTypes.default.bool,
      text: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    }),
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    modalStyle: _propTypes.default.object,
    canDismiss: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  PinCodeDialog.defaultProps = {
    digit: 6,
    color: _resources.Styles.common.MHGreen,
    checkboxData: {},
    dialogStyle: {
      unlimitedHeightEnable: false,
      allowFontScaling: true,
      titleNumberOfLines: 1,
      messageNumberOfLines: 15,
      titleStyle: {},
      messageStyle: {},
      digitStyle: {}
    },
    canDismiss: true
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingHorizontal: paddingHorizontal,
      paddingBottom: paddingVertical,
      borderRadius: _resources.Styles.dialog.modal.borderRadius
    },
    message: {
      fontSize: 16,
      lineHeight: 22,
      flex: 1,
      marginHorizontal: 15
    },
    pinCodeContainer: {
      marginVertical: marginVertical,
      marginBottom: 12,
      alignItems: 'center',
      justifyContent: 'center'
    },
    textinput: {
      position: 'absolute',
      width: _resources.Styles.dialog.modal.width - 50,
      height: 50,
      backgroundColor: 'transparent',
      color: 'transparent'
    },
    textGroup: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    blockContainer: {
      height: blockSize,
      width: blockSize,
      borderRadius: 10,
      borderWidth: 2,
      alignItems: 'center',
      justifyContent: 'center'
    },
    blockText: {
      fontSize: 20
    },
    checkboxContainer: {
      flexDirection: 'row',
      alignItems: 'center',
      marginHorizontal: 15
    },
    checkboxText: {
      flex: 1,
      marginLeft: 7,
      fontSize: 14,
      lineHeight: 19
    }
  });

  var _default = PinCodeDialog;
  exports.default = _default;
},23017,[14305,14344,14320,14371,14377,14323,14386,10318,10297,10033,22453,22786,22996,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var Progress = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _resources = _$$_REQUIRE(_dependencyMap[12]);

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var padding = 27;

  var ProgressDialog = function (_React$Component) {
    (0, _inherits2.default)(ProgressDialog, _React$Component);

    function ProgressDialog(props, context) {
      var _this$context$media;

      var _this;

      (0, _classCallCheck2.default)(this, ProgressDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ProgressDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ProgressDialog');
      _this.state = {
        visible: _this.props.visible
      };
      _this.responsiveProgressWidth = (((_this$context$media = _this.context.media) == null ? undefined : _this$context$media.screenType) === 'tablet' ? _resources.Styles.dialog.padModal.width : _resources.Styles.dialog.modal.width) - 54;
      return _this;
    }

    (0, _createClass2.default)(ProgressDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this,
            _this$context$theme,
            _this$context$theme2,
            _this$context$theme3;

        if (this.props.autoDismiss && this.state.visible === true && this.props.progress >= 1) {
          this.timer = setTimeout(function () {
            _this2.setState({
              visible: false
            });

            _this2.props.onDismiss && _this2.props.onDismiss();
          }, 350);
        }

        var progressText = Math.round(this.props.progress * 100) + "%";
        var messageNumberOfLines = 1;

        if (this.props.dialogStyle) {
          if (this.props.dialogStyle.hasOwnProperty('messageNumberOfLines') && this.props.dialogStyle.messageNumberOfLines > 1) {
            messageNumberOfLines = this.props.dialogStyle.messageNumberOfLines;
          }
        }

        var unfilledColor = (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBtnGrayNor;

        if (this.props.unfilledColor) {
          unfilledColor = this.props.unfilledColor;
        }

        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.state.visible,
          showTitle: false,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          canDismiss: false,
          showButton: false,
          useNewTheme: true
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, {
            backgroundColor: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorForeground
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.progressbar,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityValue: this.props.accessibilityValue || {
            text: progressText
          }
        })), _react.default.createElement(_reactNative.View, {
          style: styles.messageContainer
        }, _react.default.createElement(_reactNative.Text, {
          numberOfLines: messageNumberOfLines,
          style: [styles.message, {
            flex: 1,
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayHeavier
          }, this.props.dialogStyle.messageStyle],
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, this.props.message || ''), _react.default.createElement(_reactNative.Text, {
          style: [styles.message, {
            minWidth: 45,
            textAlign: 'right'
          }, {
            color: this.props.textColor
          }, this.props.dialogStyle.progressTextStyle],
          numberOfLines: 1,
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, progressText)), _react.default.createElement(Progress.Bar, {
          style: {
            marginBottom: messageNumberOfLines > 1 ? 10 : 0
          },
          progress: this.props.progress,
          color: this.props.color,
          unfilledColor: unfilledColor,
          width: this.responsiveProgressWidth,
          height: 6,
          borderRadius: 5.5,
          borderWidth: 0,
          borderColor: "#e5e5e5",
          useNativeDriver: true
        })));
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        clearTimeout(this.timer);
      }
    }]);
    return ProgressDialog;
  }(_react.default.Component);

  ProgressDialog.contextType = _configProvider.ConfigContext;
  ProgressDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    message: _propTypes.default.string,
    progress: _propTypes.default.number,
    color: _propTypes.default.string,
    unfilledColor: _propTypes.default.string,
    textColor: _propTypes.default.string,
    autoDismiss: _propTypes.default.bool,
    dialogStyle: _propTypes.default.object,
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityValue: _accessibilityHelper.AccessibilityPropTypes.accessibilityValue
  };
  ProgressDialog.defaultProps = {
    progress: 0,
    color: _resources.Styles.common.MHGreen,
    textColor: _resources.Styles.common.MHGreen,
    autoDismiss: false,
    dialogStyle: {
      allowFontScaling: true,
      messageNumberOfLines: 1,
      messageStyle: {},
      progressTextStyle: {}
    }
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      minHeight: 86,
      paddingHorizontal: padding,
      justifyContent: 'center',
      paddingTop: 20,
      borderTopEndRadius: _resources.Styles.dialog.modal.borderTopEndRadius,
      borderTopStartRadius: _resources.Styles.dialog.modal.borderTopStartRadius
    },
    messageContainer: {
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center',
      marginBottom: 12
    },
    message: {
      fontSize: 16
    }
  });

  var _default = ProgressDialog;
  exports.default = _default;
},23020,[14308,14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13636,22453,22996,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeSwiper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[16]);

  var paddingHorizontal = 40;
  var paddingBottomSmall = 20;
  var paddingBottomLarge = 28;
  var iconSize = 48;
  var optionHeight = 80;
  var testIcon = _resources.Images.common.mihome;

  var ShareDialog = function (_React$Component) {
    (0, _inherits2.default)(ShareDialog, _React$Component);

    function ShareDialog(props, context) {
      var _this$context$media;

      var _this;

      (0, _classCallCheck2.default)(this, ShareDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ShareDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ShareDialog');
      _this.state = {
        swiperVisible: false,
        pressed: -1,
        checked: props.checked || false
      };
      _this.pages = Array.from({
        length: Math.ceil(props.options.length / 8)
      }, function (v, i) {
        return props.options.slice(8 * i, 8 * i + 8);
      });
      _this.iconMargin = ~~(((((_this$context$media = _this.context.media) == null ? undefined : _this$context$media.screenType) === 'tablet' ? _resources.Styles.dialog.padModal.width : _resources.Styles.dialog.modal.width) - 80 - 192) / 3);
      return _this;
    }

    (0, _createClass2.default)(ShareDialog, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.setState({
          swiperVisible: true
        });
      }
    }, {
      key: "renderCheckBox",
      value: function renderCheckBox() {
        var _this2 = this,
            _this$context$theme;

        var extraTextNumberOfLines = 1;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('extraTextNumberOfLines')) {
          extraTextNumberOfLines = this.props.dialogStyle.extraTextNumberOfLines;
        }

        return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          onPress: function onPress() {
            return _this2.onPressCheckbox();
          },
          activeOpacity: 1,
          style: {
            paddingTop: 10,
            paddingHorizontal: paddingHorizontal
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: styles.extraContainer
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
          accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: false,
            checked: this.state.checked
          }
        })), _react.default.createElement(_Checkbox.default, {
          checked: this.state.checked,
          checkedColor: this.props.checkColor,
          style: {
            width: 22,
            height: 22,
            borderRadius: 11
          },
          onValueChange: function onValueChange(checked) {
            _this2.setState({
              checked: checked
            });
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: [styles.checkboxText, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorGrayHeavier
          }, this.props.dialogStyle.extraTextStyle],
          numberOfLines: extraTextNumberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, this.props.extraText || '')));
      }
    }, {
      key: "renderIcons",
      value: function renderIcons(options, index) {
        var _this3 = this;

        var numberOfLines = 1;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('itemTextNumberOfLines')) {
          numberOfLines = this.props.dialogStyle.itemTextNumberOfLines;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          key: index + "0",
          style: styles.optionsPage
        }, options.map(function (option, index) {
          if (option === undefined) return null;
          var marginLeft = index % 4 === 0 ? {} : {
            marginLeft: _this3.iconMargin
          };
          var scale = _this3.state.pressed === index ? 0.95 : 1;
          var opacity = _this3.state.pressed === index ? 0.88 : 1;
          return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
            key: index + (option.text || ''),
            onPress: option.callback,
            onPressIn: function onPressIn() {
              return _this3.setState({
                pressed: index
              });
            },
            onPressOut: function onPressOut() {
              return _this3.setState({
                pressed: -1
              });
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this3.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityLabel: option.accessibilityLabel || option.text || '',
            accessibilityHint: option.accessibilityHint
          })), _react.default.createElement(_reactNative.View, {
            style: [styles.optionContainer, marginLeft]
          }, _react.default.createElement(_reactNative.Image, {
            style: [styles.icon, {
              transform: [{
                scale: scale
              }]
            }],
            source: option.icon,
            resizeMode: "center"
          }), _react.default.createElement(_reactNative.Text, {
            style: [styles.optionText, {
              opacity: opacity,
              color: theme.colorGrayHeavier
            }, _this3.props.dialogStyle.itemTextStyle],
            numberOfLines: numberOfLines,
            allowFontScaling: _this3.props.dialogStyle.allowFontScaling
          }, option.text || '')));
        }));
      }
    }, {
      key: "renderIconsPages",
      value: function renderIconsPages(options) {
        var _this4 = this;

        if (options.length < 9) return this.renderIcons(options, 0);
        if (!this.state.swiperVisible) return _react.default.createElement(_reactNative.View, {
          style: styles.swiper
        });
        var theme = this.context.theme;
        return _react.default.createElement(_reactNativeSwiper.default, (0, _extends2.default)({
          style: styles.swiper,
          autoplay: false,
          loop: false,
          paginationStyle: styles.paginationStyle,
          dotColor: "rgba(0,0,0,0.2)",
          activeDotColor: theme.colorPrimary,
          dotStyle: styles.dot,
          activeDotStyle: styles.dot
        }, {
          accessibilityLabel: '',
          accessibilityHint: _reactNative.Platform.OS === 'ios' ? '' : ' '
        }), this.pages.map(function (options, index) {
          return _this4.renderIcons(options, index);
        }));
      }
    }, {
      key: "render",
      value: function render() {
        var _this5 = this;

        var theme = this.context.theme;
        var paddingBottom = this.props.options.length > 8 ? {
          paddingBottom: paddingBottomLarge
        } : {
          paddingBottom: paddingBottomSmall
        };
        var hasCheckBox = !!this.props.extraText;
        return _react.default.createElement(_AbstractDialog.default, {
          animationType: this.props.animationType,
          visible: this.props.visible,
          title: this.props.title,
          dialogStyle: this.props.dialogStyle,
          buttons: this.props.buttons,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          onDismiss: function onDismiss() {
            return _this5._onDismiss();
          },
          style: this.props.modalStyle,
          canDismiss: this.props.canDismiss,
          useNewTheme: true
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            backgroundColor: theme.colorForeground
          }, paddingBottom]
        }, this.renderIconsPages(this.props.options), hasCheckBox && this.renderCheckBox()));
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "onPressCheckbox",
      value: function onPressCheckbox() {
        this.setState({
          checked: !this.state.checked
        });
      }
    }]);
    return ShareDialog;
  }(_react.default.Component);

  ShareDialog.contextType = _configProvider.ConfigContext;
  ShareDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    title: _propTypes.default.string,
    dialogStyle: _propTypes.default.object,
    modalStyle: _propTypes.default.object,
    canDismiss: _propTypes.default.bool,
    options: _propTypes.default.arrayOf(_propTypes.default.shape({
      icon: _propTypes.default.any,
      text: _propTypes.default.string,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    checked: _propTypes.default.bool,
    checkColor: _propTypes.default.string,
    extraText: _propTypes.default.string,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ShareDialog.defaultProps = {
    options: Array.from({
      length: 6
    }, function () {
      return {
        icon: testIcon,
        text: ['米家', '微信', 'QQ', '微博', '朋友圈', '收藏', '即刻'][~~(Math.random() * 7)],
        callback: function callback() {
          return undefined;
        }
      };
    }),
    dialogStyle: {
      unlimitedHeightEnable: false,
      allowFontScaling: true,
      titleNumberOfLines: 1,
      itemTextNumberOfLines: 1
    },
    canDismiss: true,
    checkColor: _resources.Styles.common.MHGreen
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      borderRadius: _resources.Styles.dialog.modal.borderRadius
    },
    extraContainer: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    swiper: {
      height: 173,
      marginTop: 9
    },
    optionsPage: {
      flexDirection: 'row',
      flexWrap: 'wrap',
      paddingHorizontal: paddingHorizontal
    },
    optionContainer: {
      minHeight: optionHeight,
      alignItems: 'center'
    },
    icon: {
      width: iconSize,
      height: iconSize
    },
    optionText: {
      marginTop: 4,
      marginBottom: 10,
      width: iconSize,
      textAlign: 'center',
      fontSize: 12
    },
    paginationStyle: {
      position: 'absolute',
      bottom: 0
    },
    dot: {
      width: 6,
      height: 6
    },
    checkboxText: {
      flex: 1,
      marginLeft: 7,
      fontSize: 14,
      color: '#333333'
    }
  });

  var _default = ShareDialog;
  exports.default = _default;
},23023,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13663,22453,22786,22996,22420,22423,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "ChoiceItem", {
    enumerable: true,
    get: function get() {
      return _ChoiceItem.default;
    }
  });
  Object.defineProperty(exports, "ListItem", {
    enumerable: true,
    get: function get() {
      return _ListItem.default;
    }
  });
  Object.defineProperty(exports, "ListItemWithSlider", {
    enumerable: true,
    get: function get() {
      return _ListItemWithSlider.default;
    }
  });
  Object.defineProperty(exports, "ListItemWithSwitch", {
    enumerable: true,
    get: function get() {
      return _ListItemWithSwitch.default;
    }
  });

  var _ChoiceItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _ListItemWithSlider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _ListItemWithSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
},23026,[14305,23002,23029,23038,23044]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _TouchableView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _resources = _$$_REQUIRE(_dependencyMap[12]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var _font = _$$_REQUIRE(_dependencyMap[17]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var dot = _$$_REQUIRE(_dependencyMap[18]);

  var THIN_HEIGHT = 58;
  var PADDING = 29;
  var dotSize = 8;

  var ICON_SIZE = _reactNative.Platform.select({
    android: 26,
    ios: 24
  });

  var ListItem = function (_React$Component) {
    (0, _inherits2.default)(ListItem, _React$Component);

    function ListItem(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ListItem);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItem).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ListItem');
      return _this;
    }

    (0, _createClass2.default)(ListItem, [{
      key: "render",
      value: function render() {
        var _this$context$theme, _this$context$theme2, _this$context$theme3, _this$context$theme4;

        var extraContainerStyle = {};

        if (this.props.subtitle) {
          extraContainerStyle = {
            paddingVertical: this.props.leftIcon ? 8 : 15,
            height: 77
          };
        }

        var leftIconContainerStyle = {};

        if (this.props.leftIcon) {
          leftIconContainerStyle = {
            height: 70,
            paddingLeft: 22
          };
        }

        var extraRightStyle = {};

        if (!this.props.hideArrow) {
          extraRightStyle = {
            maxWidth: this.props.valueMaxWidth || '30%'
          };
        } else {
          extraRightStyle = {
            maxWidth: this.props.valueMaxWidth || '35%'
          };
        }

        var valueStyle = {
          marginRight: 7,
          textAlignVertical: 'center',
          textAlign: 'right'
        };
        var adaptedFontStyle = {};

        if (this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined
          };
        }

        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 2 : this.props.subtitleNumberOfLines;
        var valueLine = this.props.valueNumberOfLines == undefined ? 2 : this.props.valueNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        if (subtitleLine < 0) subtitleLine = 0;
        if (valueLine < 0) valueLine = 0;

        if (_reactNative.Platform.OS === 'android') {
          valueStyle.height = THIN_HEIGHT;
        }

        var titleHeight, subtitleHeight;

        if (this.props.titleStyle) {
          titleHeight = this.props.titleStyle.fontSize ? this.props.titleStyle.fontSize + 6 : 22;
        }

        if (this.props.subtitleStyle) {
          subtitleHeight = this.props.subtitleStyle.fontSize ? this.props.titleStyle.fontSize + 5 : 18;
        }

        return _react.default.createElement(_reactNative.View, {
          style: {
            opacity: this.props.disabled ? 0.3 : 1
          }
        }, _react.default.createElement(_TouchableView.default, (0, _extends2.default)({
          disabled: this.props.disabled,
          underlayColor: this.props.underlayColor,
          onPress: this.props.onPress,
          onLongPress: this.props.onLongPress,
          delayLongPress: this.props.delayLongPress,
          viewStyle: [styles.container, {
            backgroundColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorWhite
          }, this.props.containerStyle, leftIconContainerStyle, extraContainerStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: this.props.disabled
          }
        })), this.props.leftIcon ? _react.default.createElement(_reactNative.Image, {
          style: styles.leftIcon,
          source: this.props.leftIcon
        }) : null, _react.default.createElement(_reactNative.View, {
          style: [styles.left]
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            paddingBottom: 1
          }
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: titleLine,
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.title, this.props.useNewType ? (0, _objectSpread2.default)({}, _font.FontPrimary) : (0, _objectSpread2.default)({}, _font.FontPrimary), {
            lineHeight: titleHeight,
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorBlack,
            flex: 1
          }, this.props.titleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title)), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: subtitleLine,
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.subtitle, (0, _objectSpread2.default)({
            lineHeight: subtitleHeight,
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayLighter
          }, _font.FontSecondary), this.props.subtitleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle) : null), _react.default.createElement(_reactNative.View, {
          style: {
            width: 10
          }
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.right, extraRightStyle]
        }, this.props.value ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: valueLine,
          allowFontScaling: this.props.allowFontScaling,
          ellipsizeMode: "tail",
          style: [_resources.Styles.common.subtitle, (0, _objectSpread2.default)({
            color: (_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorGrayLighter
          }, _font.FontSecondary), this.props.valueStyle, valueStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.value) : null), this.props.showDot ? _react.default.createElement(_reactNative.Image, {
          style: [styles.dot, this.props.dotStyle],
          resizeMode: "contain",
          source: dot
        }) : null, !this.props.hideArrow ? _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _resources.Images.common.right_arrow
        }) : null), this.renderSeparator());
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator() {
        if (!this.props.showSeparator || this.props.useNewType) return null;
        return this.props.separator || _react.default.createElement(_Separator.default, {
          style: {
            marginLeft: _resources.Styles.common.padding
          }
        });
      }
    }]);
    return ListItem;
  }(_react.default.Component);

  ListItem.contextType = _configProvider.ConfigContext;
  ListItem.propTypes = {
    title: _propTypes.default.string.isRequired,
    subtitle: _propTypes.default.string,
    value: _propTypes.default.string,
    onPress: _propTypes.default.func.isRequired,
    onLongPress: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    showSeparator: _propTypes.default.bool,
    hideArrow: _propTypes.default.bool,
    showDot: _propTypes.default.bool,
    separator: _propTypes.default.element,
    containerStyle: _propTypes.default.object,
    titleStyle: _propTypes.default.object,
    subtitleStyle: _propTypes.default.object,
    valueStyle: _propTypes.default.object,
    dotStyle: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    valueNumberOfLines: _propTypes.default.number,
    underlayColor: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ListItem.defaultProps = {
    title: '',
    subtitle: '',
    value: '',
    onPress: function onPress() {},
    onLongPress: function onLongPress() {},
    disabled: false,
    showSeparator: true,
    hideArrow: false,
    showDot: false,
    containerStyle: {},
    titleStyle: {},
    subtitleStyle: {},
    valueStyle: {},
    dotStyle: {},
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    leftIcon: null,
    useNewType: false,
    underlayColor: _resources.Styles.common.underlayColor
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width,
      height: THIN_HEIGHT,
      paddingHorizontal: PADDING,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    },
    left: {
      flex: 1
    },
    right: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'flex-start'
    },
    icon: {
      width: ICON_SIZE,
      height: ICON_SIZE
    },
    dot: {
      width: dotSize,
      height: dotSize
    },
    leftIcon: {
      resizeMode: 'contain',
      width: 56,
      height: 56,
      marginRight: 2
    }
  });

  var _default = ListItem;
  exports.default = _default;
},23029,[14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,23032,22453,22906,22426,22420,22423,23041,23035]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[11]);

  var TouchableView = function (_React$Component) {
    (0, _inherits2.default)(TouchableView, _React$Component);

    function TouchableView(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, TouchableView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TouchableView).call(this, props, context));
      _this.state = {
        inPress: false
      };
      return _this;
    }

    (0, _createClass2.default)(TouchableView, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({}, this.props, {
          delayLongPress: this.props.delayLongPress,
          delayPressIn: this.props.delayPressIn,
          delayPressOut: this.props.delayPressOut,
          disabled: this.props.disabled,
          onLongPress: this.props.onLongPress,
          onPress: this.props.onPress,
          onPressIn: function onPressIn() {
            _this2.setState({
              inPress: true
            });
          },
          onPressOut: function onPressOut() {
            _this2.setState({
              inPress: false
            });
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: [{
            backgroundColor: '#fff'
          }, this.props.viewStyle, this.state.inPress ? {
            backgroundColor: this.props.underlayColor
          } : {}]
        }, this.props.children));
      }
    }]);
    return TouchableView;
  }(_react.default.Component);

  exports.default = TouchableView;
  TouchableView.propTypes = {
    delayLongPress: _propTypes.default.number,
    delayPressIn: _propTypes.default.number,
    delayPressOut: _propTypes.default.number,
    disabled: _propTypes.default.bool,
    onLongPress: _propTypes.default.func,
    onPress: _propTypes.default.func,
    viewStyle: _reactNative.ViewPropTypes.style,
    underlayColor: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };
  TouchableView.defaultProps = {
    delayLongPress: 100,
    delayPressIn: 100,
    delayPressOut: 100,
    disabled: false,
    viewStyle: {},
    underlayColor: _resources.Styles.common.underlayColor
  };
},23032,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 30,
    "height": 30,
    "scales": [1],
    "hash": "522ed59eaa31441e8b11ae8bab872663",
    "name": "dot",
    "type": "png"
  });
},23035,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeSlider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _font = _$$_REQUIRE(_dependencyMap[13]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var HEIGHT = 104;
  var PADDING = 29;
  var THUMB_SIZE = 24;
  var THUMB_TOUCH_SIZE = {
    width: 50,
    height: 50
  };

  var ListItemWithSlider = function (_React$Component) {
    (0, _inherits2.default)(ListItemWithSlider, _React$Component);

    function ListItemWithSlider(props, context) {
      var _this$context$theme, _this$context$theme2, _this$context$theme3;

      var _this;

      (0, _classCallCheck2.default)(this, ListItemWithSlider);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItemWithSlider).call(this, props, context));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$sliderProps = _this.sliderProps,
            minimumValue = _this$sliderProps.minimumValue,
            maximumValue = _this$sliderProps.maximumValue,
            step = _this$sliderProps.step;
        var disabled = _this.props.disabled;

        if (disabled) {
          return;
        }

        var value = _this.state.value;
        var totalSteps = (maximumValue - minimumValue) / step;
        var everyStep = totalSteps >= 10 ? Math.floor(totalSteps / 10) : 1;
        var currentStep = (value - minimumValue) / step;
        var actionStep = currentStep;

        switch (actionName) {
          case 'increment':
            actionStep += everyStep;
            break;

          case 'decrement':
            actionStep -= everyStep;
            break;
        }

        var targetValue = Math.min(maximumValue, Math.max(minimumValue, actionStep * step + minimumValue));

        _this._onValueChange(targetValue, function () {
          _this._onSlidingComplete(targetValue);
        });
      };

      (0, _reportDecorator.referenceReport)('ListItemWithSlider');
      _this.sliderProps = (0, _extends2.default)({
        minimumValue: 0,
        maximumValue: 100,
        step: 1,
        value: 50
      }, _this.props.sliderProps);
      _this.sliderStyle = (0, _extends2.default)({
        minimumTrackTintColor: (_this$context$theme = _this.context.theme) == null ? undefined : _this$context$theme.colorPrimary,
        maximumTrackTintColor: (_this$context$theme2 = _this.context.theme) == null ? undefined : _this$context$theme2.colorBtnGrayNor,
        thumbTintColor: (_this$context$theme3 = _this.context.theme) == null ? undefined : _this$context$theme3.colorPrimary
      }, _this.props.sliderStyle);
      _this.state = {
        value: _this.sliderProps.value,
        valueStr: _this.format(_this.sliderProps.value)
      };
      return _this;
    }

    (0, _createClass2.default)(ListItemWithSlider, [{
      key: "renderGear",
      value: function renderGear() {
        var _this2 = this;

        var gear;

        if (this.props.useNewType) {
          gear = _react.default.createElement(_SlideGear.default, (0, _extends2.default)({
            value: this.state.value,
            containerStyle: {
              height: 26
            },
            showEndText: false,
            optionMin: this.sliderProps.minimumValue,
            optionMax: this.sliderProps.maximumValue,
            optionStep: this.sliderProps.step,
            onValueChange: function onValueChange(value) {
              return _this2._onValueChange(value);
            },
            onSlidingComplete: function onSlidingComplete(value) {
              return _this2._onSlidingComplete(value);
            },
            minimumTrackTintColor: this.sliderStyle.minimumTrackTintColor,
            maximumTrackTintColor: this.sliderStyle.maximumTrackTintColor,
            disabled: this.props.disabled
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })));
        } else {
          gear = _react.default.createElement(_reactNativeSlider.default, (0, _extends2.default)({
            disabled: this.props.disabled,
            style: [this.sliderStyle.style],
            maximumValue: this.sliderProps.maximumValue,
            minimumValue: this.sliderProps.minimumValue,
            step: this.sliderProps.step,
            minimumTrackTintColor: this.sliderStyle.minimumTrackTintColor,
            maximumTrackTintColor: this.sliderStyle.maximumTrackTintColor,
            thumbTintColor: this.sliderStyle.thumbTintColor,
            thumbTouchSize: THUMB_TOUCH_SIZE,
            trackStyle: [styles.trackStyle, this.sliderStyle.trackStyle],
            thumbStyle: [styles.thumbStyle, this.sliderStyle.thumbStyle],
            value: this.state.value,
            onValueChange: function onValueChange(value) {
              return _this2._onValueChange(value);
            },
            onSlidingComplete: function onSlidingComplete(value) {
              return _this2._onSlidingComplete(value);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })));
        }

        return gear;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme4, _this$context$theme5, _this$context$theme6;

        var extraStyle = {
          maxWidth: (width - 58) * 0.7
        };

        if (this.props.containerStyle.width) {
          extraStyle = {
            maxWidth: (this.props.containerStyle.width - 58) * 0.7
          };
        }

        var adaptedFontStyle = {};

        if (this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined
          };
        }

        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        var valueLine = this.props.valueNumberOfLines == undefined ? 1 : this.props.valueNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        if (valueLine < 0) valueLine = 0;
        var titleHeight, subtitleHeight;

        if (this.props.titleStyle) {
          titleHeight = this.props.titleStyle.fontSize ? this.props.titleStyle.fontSize + 6 : 22;
        }

        if (this.props.subtitleStyle) {
          subtitleHeight = this.props.valueStyle.fontSize ? this.props.valueStyle.fontSize + 5 : 18;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [{
            backgroundColor: '#fff'
          }, {
            opacity: this.props.disabled ? 0.3 : 1
          }]
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, {
            backgroundColor: (_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorWhite
          }, this.props.containerStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: !!this.props.disabled
          },
          accessibilityValue: {
            min: this.sliderProps.minimumValue,
            max: this.sliderProps.maximumValue,
            now: this.state.value
          }
        }), {
          accessibilityActions: [{
            name: 'increment'
          }, {
            name: 'decrement'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.up]
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: titleLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.title, {
            lineHeight: titleHeight,
            color: (_this$context$theme5 = this.context.theme) == null ? undefined : _this$context$theme5.colorBlack
          }, _font.FontPrimary, this.props.titleStyle, extraStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title), _react.default.createElement(_reactNative.View, {
          style: [styles.separatorCol, this.props.unlimitedHeightEnable ? {
            height: '80%'
          } : {}]
        }), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.value, {
            color: (_this$context$theme6 = this.context.theme) == null ? undefined : _this$context$theme6.colorGrayLighter,
            lineHeight: subtitleHeight
          }, _font.FontSecondary, this.props.valueStyle, adaptedFontStyle],
          numberOfLines: valueLine,
          allowFontScaling: this.props.allowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle || this.state.valueStr)), _react.default.createElement(_reactNative.View, {
          style: styles.down
        }, this.renderGear())), this.renderSeparator());
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator() {
        if (!this.props.showSeparator) return null;
        return this.props.separator || _react.default.createElement(_Separator.default, null);
      }
    }, {
      key: "format",
      value: function format(val) {
        if (this.props.showWithPercent) {
          var _this$sliderProps2 = this.sliderProps,
              min = _this$sliderProps2.minimumValue,
              max = _this$sliderProps2.maximumValue;
          return Math.round((val - min) / (max - min) * 100) + " %";
        }

        return val + " " + this.props.unit;
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        if (nextProps.sliderProps === undefined) return;

        if (typeof nextProps.sliderProps.value !== 'number') {
          return;
        }

        var _nextProps$sliderProp = nextProps.sliderProps,
            value = _nextProps$sliderProp.value,
            minimumValue = _nextProps$sliderProp.minimumValue,
            maximumValue = _nextProps$sliderProp.maximumValue;

        if (minimumValue !== undefined && minimumValue !== this.sliderProps.minimumValue) {
          this.sliderProps.minimumValue = minimumValue;
        }

        if (maximumValue !== undefined && maximumValue !== this.sliderProps.maximumValue) {
          this.sliderProps.maximumValue = maximumValue;
        }

        if (value !== this.state.value) {
          this.setState({
            value: value,
            valueStr: this.format(value)
          });
        }
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange(value) {
        this.setState({
          value: value,
          valueStr: this.format(value)
        });

        if (this.props.onValueChange) {
          this.props.onValueChange(value);
        }
      }
    }, {
      key: "_onSlidingComplete",
      value: function _onSlidingComplete(value) {
        if (this.props.onSlidingComplete) {
          this.props.onSlidingComplete(value);
        }
      }
    }]);
    return ListItemWithSlider;
  }(_react.default.Component);

  ListItemWithSlider.propTypes = {
    title: _propTypes.default.string.isRequired,
    subtitle: _propTypes.default.string,
    sliderProps: _propTypes.default.object,
    showWithPercent: _propTypes.default.bool,
    unit: _propTypes.default.string,
    sliderStyle: _propTypes.default.object,
    onValueChange: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func.isRequired,
    disabled: _propTypes.default.bool,
    containerStyle: _propTypes.default.object,
    titleStyle: _propTypes.default.object,
    valueStyle: _propTypes.default.object,
    showSeparator: _propTypes.default.bool,
    separator: _propTypes.default.element,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    valueNumberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    useNewType: _propTypes.default.bool
  };
  ListItemWithSlider.defaultProps = {
    title: '',
    subtitle: '',
    showWithPercent: true,
    unit: '',
    disabled: false,
    containerStyle: {},
    titleStyle: {},
    valueStyle: {},
    showSeparator: false,
    onSlidingComplete: function onSlidingComplete() {},
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    useNewType: false
  };
  ListItemWithSlider.contextType = _configProvider.ConfigContext;

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width,
      backgroundColor: '#fff',
      paddingHorizontal: PADDING,
      height: HEIGHT
    },
    up: {
      marginTop: 13,
      flexDirection: 'row',
      alignItems: 'center'
    },
    down: {
      flex: 1,
      justifyContent: 'center',
      marginTop: 15,
      marginBottom: 21
    },
    separatorCol: {
      height: 14,
      width: 0.5,
      marginHorizontal: 8,
      backgroundColor: 'rgba(0,0,0,0.2)'
    },
    value: {
      fontSize: 13,
      color: '#999999',
      lineHeight: 16,
      flex: 1
    },
    trackStyle: {
      height: 2,
      borderRadius: 1
    },
    thumbStyle: {
      width: THUMB_SIZE,
      height: THUMB_SIZE,
      borderRadius: 12
    }
  });

  var _default = ListItemWithSlider;
  exports.default = _default;
},23038,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13687,22453,22906,23041,22426,22897,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.FontDefault = exports.FontSecondary = exports.FontPrimary = exports.FontDsDigital = exports.FontLantingProNormal = exports.FontLantingProMedium = exports.FontLantingLight = exports.FontKmedium = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var FontKmedium = 'KMedium';
  exports.FontKmedium = FontKmedium;
  var FontLantingLight = 'MI-LANTING--GBK1-Light';
  exports.FontLantingLight = FontLantingLight;
  var FontLantingProMedium = 'MILanPro_MEDIUM--GB1-4';
  exports.FontLantingProMedium = FontLantingProMedium;
  var FontLantingProNormal = 'MILanPro_NORMAL--GB1-4';
  exports.FontLantingProNormal = FontLantingProNormal;
  var FontDsDigital = 'DS-Digital';
  exports.FontDsDigital = FontDsDigital;
  var FontPrimary = {
    fontFamily: 'sans-serif-medium',
    fontWeight: _reactNative.Platform.OS === 'ios' ? '500' : 'normal'
  };
  exports.FontPrimary = FontPrimary;
  var FontSecondary = {
    fontFamily: 'sans-serif',
    fontWeight: 'normal'
  };
  exports.FontSecondary = FontSecondary;
  var FontDefault = _reactNative.Platform.OS === 'ios' ? null : FontKmedium;
  exports.FontDefault = FontDefault;
},23041,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _TouchableView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _popButton = _$$_REQUIRE(_dependencyMap[14]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _Images = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[17]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[19]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[20]);

  var _font = _$$_REQUIRE(_dependencyMap[21]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var THIN_HEIGHT = 58;
  var PADDING = 29;
  var checkboxSize = 22;
  var Line_Height = 24;
  var TYPE = {
    SWITCH: 'switch',
    CHOICE: 'choice',
    BUTTON: 'button',
    SORT: 'sort'
  };
  Object.freeze(TYPE);

  var ListItemWithSwitch = function (_React$Component) {
    (0, _inherits2.default)(ListItemWithSwitch, _React$Component);

    function ListItemWithSwitch(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ListItemWithSwitch);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItemWithSwitch).call(this, props, context));
      _this.colorForVerticalLine = new _DynamicColor.default('#E5E5E5', 'rgba(255,255,255,0.15)');

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onValueChange = _this$props.onValueChange,
            onPress = _this$props.onPress,
            value = _this$props.value;

        if (disabled) {
          return;
        }

        if (actionName === 'activate' && typeof onValueChange === 'function') {
          onValueChange(!value);
        }

        if (actionName === 'activate' && typeof onPress === 'function') {
          onPress();
        }
      };

      (0, _reportDecorator.referenceReport)('ListItemWithSwitch');
      return _this;
    }

    (0, _createClass2.default)(ListItemWithSwitch, [{
      key: "renderRight",
      value: function renderRight() {
        var _this2 = this,
            _this$props$buttonOpt,
            _this$props$buttonOpt2,
            _this$props$buttonOpt3,
            _this$props$buttonOpt4,
            _this$props$buttonOpt5,
            _this$props$buttonOpt6,
            _this$props$choiceOpt,
            _this$props$choiceOpt2,
            _this$props$choiceOpt3;

        var rightView;
        var rightSortView;

        if (this.props.type === TYPE.SORT) {
          var _this$props$sortOptio, _this$props$sortOptio2;

          var source = this.context.colorScheme === 'dark' ? _Images.default.sort.dark.normal : _Images.default.sort.light.normal;
          rightSortView = _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            disabled: this.props.disabled,
            activeOpacity: 0.8,
            style: {
              width: 35,
              height: 40,
              justifyContent: 'center',
              alignItems: 'flex-end'
            },
            onPress: (_this$props$sortOptio = this.props.sortOption) == null ? undefined : _this$props$sortOptio.onPress,
            onLongPress: (_this$props$sortOptio2 = this.props.sortOption) == null ? undefined : _this$props$sortOptio2.onLongPress
          }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityLabel: this.props.accessibilityLabel || this.props.title,
            accessibilityHint: this.props.accessibilityHint
          })), _react.default.createElement(_reactNative.Image, {
            source: source
          }));
        }

        switch (this.props.type) {
          case TYPE.SWITCH:
            rightView = _react.default.createElement(_Switch.default, (0, _extends2.default)({
              style: this.props.switchStyle,
              value: this.props.value,
              disabled: this.props.disabled,
              tintColor: this.props.tintColor,
              onTintColor: this.props.onTintColor,
              onValueChange: function onValueChange(value) {
                return _this2._onValueChange(value);
              }
            }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityLabel: this.props.accessibilityLabel || this.props.title,
              accessibilityHint: this.props.accessibilityHint
            })));
            break;

          case TYPE.BUTTON:
            rightView = _react.default.createElement(_popButton.PopButton, (0, _extends2.default)({
              sizeLevel: 'small',
              title: (_this$props$buttonOpt = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt.title,
              disabled: this.props.disabled,
              backgroundColor: (_this$props$buttonOpt2 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt2.backgroundColor,
              titleStyle: (_this$props$buttonOpt3 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt3.titleStyle,
              titleColor: (_this$props$buttonOpt4 = this.props.buttonOption) == null ? undefined : (_this$props$buttonOpt5 = _this$props$buttonOpt4.titleStyle) == null ? undefined : _this$props$buttonOpt5.color,
              allowFontScaling: this.props.allowFontScaling,
              onPress: (_this$props$buttonOpt6 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt6.onPress
            }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityLabel: this.props.accessibilityLabel || this.props.title,
              accessibilityHint: this.props.accessibilityHint
            })));
            break;

          case TYPE.CHOICE:
            rightView = _react.default.createElement(_Checkbox.default, (0, _extends2.default)({
              style: {
                width: checkboxSize,
                height: checkboxSize,
                borderRadius: 11
              },
              disabled: this.props.disabled,
              checked: (_this$props$choiceOpt = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt.checked,
              checkedColor: (_this$props$choiceOpt2 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt2.checkedColor,
              onValueChange: (_this$props$choiceOpt3 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt3.onValueChange
            }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityLabel: this.props.accessibilityLabel || this.props.title,
              accessibilityHint: this.props.accessibilityHint
            })));
            break;

          case TYPE.SORT:
            rightView = rightSortView;
            break;

          default:
            rightView = null;
            break;
        }

        return rightView;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme, _this$context$theme2, _this$context$theme3, _this$context$theme4;

        var extraContainerStyle = {};

        if (this.props.subtitle) {
          extraContainerStyle = {
            paddingVertical: this.props.leftIcon ? 8 : 15,
            height: 77
          };
        }

        var leftIconContainerStyle = {};

        if (this.props.leftIcon) {
          leftIconContainerStyle = {
            height: 70,
            paddingLeft: 22
          };
        }

        var extraStyle = {};

        if (this.props.valueText) {
          extraStyle.maxWidth = (width - 58) * 0.4;

          if (this.props.containerStyle.width) {
            extraStyle.maxWidth = (this.props.containerStyle.width - 58) * 0.4;
          }
        }

        var adaptedFontStyle = {};
        var adaptedContainerStyle = {};

        if (this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined
          };
          adaptedContainerStyle = {
            height: undefined,
            paddingVertical: 10
          };
        }

        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 2 : this.props.subtitleNumberOfLines;
        var valueLine = this.props.valueNumberOfLines == undefined ? 1 : this.props.valueNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        if (subtitleLine < 0) subtitleLine = 0;
        if (valueLine < 0) valueLine = 0;
        var titleHeight, subtitleHeight;

        if (this.props.titleStyle) {
          titleHeight = this.props.titleStyle.fontSize ? this.props.titleStyle.fontSize + 6 : 22;
        }

        if (this.props.subtitleStyle) {
          subtitleHeight = this.props.subtitleStyle.fontSize ? this.props.titleStyle.fontSize + 5 : 18;
        }

        var showVerticalLine = false;

        if (this.props.type == TYPE.SWITCH && this.props.showVerticalLine) {
          showVerticalLine = true;
        }

        return _react.default.createElement(_reactNative.View, {
          style: {
            opacity: this.props.disabled ? 0.3 : 1
          }
        }, _react.default.createElement(_TouchableView.default, (0, _extends2.default)({
          disabled: !this.props.onPress ? true : this.props.disabled,
          underlayColor: _resources.Styles.common.underlayColor,
          onPress: this.props.onPress,
          viewStyle: [styles.container, {
            backgroundColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorWhite
          }, this.props.containerStyle, leftIconContainerStyle, extraContainerStyle, adaptedContainerStyle]
        }, this.props.onPress ? (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }) : (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.switch,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: this.props.disabled,
            checked: this.props.value
          }
        }), {
          accessibilityActions: this.props.onPress ? [] : [{
            name: 'activate'
          }],
          onAccessibilityAction: this.props.onPress ? null : this.onAccessibilityAction
        }), this.props.leftIcon ? _react.default.createElement(_reactNative.Image, {
          style: styles.leftIcon,
          source: this.props.leftIcon
        }) : null, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: styles.left
        }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: this.props.disabled
          }
        }), {
          accessibilityActions: !this.props.onPress ? [] : [{
            name: 'activate'
          }],
          onAccessibilityAction: !this.props.onPress ? null : this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.up]
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: titleLine,
          allowFontScaling: this.props.allowFontScaling,
          ellipsizeMode: "tail",
          style: [_resources.Styles.common.title, _font.FontPrimary, {
            lineHeight: titleHeight,
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorBlack
          }, extraStyle, this.props.titleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title), this.props.valueText ? _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            flex: 1
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.separatorCol]
        }), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: valueLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.subtitle, {
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayLighter
          }, _font.FontSecondary, this.props.valueTextStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.valueText)) : null), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: subtitleLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.subtitle, {
            lineHeight: subtitleHeight,
            color: (_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorGrayLighter
          }, this.props.subtitleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle) : null), _react.default.createElement(_reactNative.View, {
          style: [styles.right, showVerticalLine ? {
            flexDirection: 'row',
            justifyContent: 'space-between'
          } : {}]
        }, showVerticalLine ? _react.default.createElement(_reactNative.View, {
          style: [styles.verticalLine, {
            backgroundColor: this.colorForVerticalLine[this.context.colorScheme]
          }]
        }) : null, this.renderRight())), this.renderSeparator());
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator() {
        if (!this.props.showSeparator || this.props.useNewType) return null;
        return this.props.separator || _react.default.createElement(_Separator.default, {
          style: {
            marginLeft: _resources.Styles.common.padding
          }
        });
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange(value) {
        if (this.props.onValueChange) {
          this.props.onValueChange(value);
        }
      }
    }]);
    return ListItemWithSwitch;
  }(_react.default.Component);

  ListItemWithSwitch.contextType = _configProvider.ConfigContext;
  ListItemWithSwitch.propTypes = {
    type: _propTypes.default.oneOf([TYPE.SWITCH, TYPE.BUTTON, TYPE.CHOICE, TYPE.SORT]),
    title: _propTypes.default.string.isRequired,
    subtitle: _propTypes.default.string,
    valueText: _propTypes.default.string,
    value: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    onValueChange: _propTypes.default.func.isRequired,
    showSeparator: _propTypes.default.bool,
    separator: _propTypes.default.element,
    containerStyle: _propTypes.default.object,
    titleStyle: _propTypes.default.object,
    subtitleStyle: _propTypes.default.object,
    valueTextStyle: _propTypes.default.object,
    switchStyle: _propTypes.default.object,
    tintColor: _propTypes.default.string,
    onTintColor: _propTypes.default.string,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    valueNumberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    buttonOption: _propTypes.default.object,
    choiceOption: _propTypes.default.object,
    sortOption: _propTypes.default.object,
    showVerticalLine: _propTypes.default.bool
  };
  ListItemWithSwitch.defaultProps = {
    type: TYPE.SWITCH,
    title: '',
    subtitle: '',
    valueText: '',
    value: false,
    disabled: false,
    showSeparator: true,
    containerStyle: {},
    titleStyle: {},
    subtitleStyle: {},
    valueTextStyle: {},
    switchStyle: {},
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    leftIcon: null,
    useNewType: false,
    showVerticalLine: false
  };
  ListItemWithSwitch.TYPE = TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width,
      height: THIN_HEIGHT,
      paddingHorizontal: PADDING,
      flexDirection: 'row',
      alignItems: 'center'
    },
    left: {
      flex: 3
    },
    right: {
      flex: 1,
      alignItems: 'flex-end',
      maxWidth: 80
    },
    up: {
      flexDirection: 'row',
      alignItems: 'center',
      paddingVertical: 2
    },
    separatorCol: {
      height: 14,
      width: 0.5,
      marginHorizontal: 5,
      backgroundColor: 'rgba(0,0,0,0.2)'
    },
    leftIcon: {
      resizeMode: 'contain',
      width: 56,
      height: 56,
      marginRight: 2
    },
    verticalLine: {
      height: Line_Height,
      width: 0.5,
      marginLeft: 15,
      marginRight: 5
    }
  });

  var _default = ListItemWithSwitch;
  exports.default = _default;
},23044,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,23032,22906,22450,23212,22786,22456,22426,22435,22420,22423,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "FadeSlide", {
    enumerable: true,
    get: function get() {
      return _FadeSlide.default;
    }
  });

  var _FadeSlide = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23047,[14305,23050]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[10]);

  var FadeSlide = function (_Component) {
    (0, _inherits2.default)(FadeSlide, _Component);

    function FadeSlide(props) {
      var _this;

      (0, _classCallCheck2.default)(this, FadeSlide);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(FadeSlide).call(this, props));

      _this.changeStatus = function (heightTo, opacityTo) {
        var _this$state = _this.state,
            height = _this$state.height,
            opacity = _this$state.opacity;

        _reactNative.Animated.parallel([_reactNative.Animated.timing(height, {
          toValue: heightTo,
          duration: 250
        }), _reactNative.Animated.timing(opacity, {
          toValue: opacityTo,
          duration: 250
        })]).start();
      };

      (0, _reportDecorator.referenceReport)('FadeSlide');
      var isShown = props.isShown,
          childrenHeight = props.childrenHeight;
      var blockOpacity = isShown ? 1 : 0;
      var blockHeight = isShown ? childrenHeight : 0;
      _this.state = {
        height: new _reactNative.Animated.Value(blockHeight),
        opacity: new _reactNative.Animated.Value(blockOpacity)
      };
      return _this;
    }

    (0, _createClass2.default)(FadeSlide, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var isShown = nextProps.isShown,
            childrenHeight = nextProps.childrenHeight;

        if (isShown) {
          this.changeStatus(childrenHeight, 1);
        } else {
          this.changeStatus(0, 0);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$state2 = this.state,
            opacity = _this$state2.opacity,
            height = _this$state2.height;
        return _react.default.createElement(_reactNative.Animated.View, {
          style: {
            opacity: opacity,
            height: height
          }
        }, this.props.children);
      }
    }]);
    return FadeSlide;
  }(_react.Component);

  FadeSlide.defaultProps = {
    isShown: false,
    childrenHeight: 0
  };
  FadeSlide.propTypes = {
    isShown: _propTypes.default.bool,
    childrenHeight: _propTypes.default.number
  };
  var _default = FadeSlide;
  exports.default = _default;
},23050,[14308,14305,14320,14323,14371,14377,14386,10318,10297,10033,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "BlankPage", {
    enumerable: true,
    get: function get() {
      return _BlankPage.default;
    }
  });

  var _BlankPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23053,[14305,23056]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _font = _$$_REQUIRE(_dependencyMap[15]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var ratio = 0.2;
  var imageMarginTop = height * ratio;
  var imageContainerSize = 138;
  var imageWidth = 84;
  var imageHeight = 114;

  var imageSource = _$$_REQUIRE(_dependencyMap[16]);

  var padding = 40;
  var safeBottom = 20;
  var TYPE = {
    BUTTON: 'button',
    UNDERLINE: 'underline'
  };
  Object.freeze(TYPE);

  var BlankPage = function (_React$Component) {
    (0, _inherits2.default)(BlankPage, _React$Component);

    function BlankPage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, BlankPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BlankPage).call(this, props));
      (0, _reportDecorator.referenceReport)('BlankPage');
      return _this;
    }

    (0, _createClass2.default)(BlankPage, [{
      key: "renderCenter",
      value: function renderCenter() {
        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: styles.center
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: styles.imageContainer
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel || this.props.message,
          accessibilityHint: this.props.accessibilityHint
        })), _react.default.createElement(_reactNative.Image, {
          source: this.props.icon,
          style: [styles.image, this.props.iconStyle],
          resizeMode: "contain"
        })), _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: [styles.message, {
            color: theme.colorGrayLighter
          }]
        }, this.props.message), this.props.desc ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: 3,
          style: [styles.desc, {
            marginTop: 10,
            color: theme.colorGrayLighter
          }]
        }, this.props.desc || '') : null);
      }
    }, {
      key: "renderBottom",
      value: function renderBottom() {
        var _this2 = this;

        var theme = this.context.theme;

        if (this.props.type === TYPE.UNDERLINE) {
          var _this$props$underline = this.props.underline,
              _text = _this$props$underline.text,
              _callback = _this$props$underline.callback,
              _textStyle = _this$props$underline.textStyle;
          return _react.default.createElement(_reactNative.View, {
            style: [styles.bottom, {
              marginBottom: 40
            }]
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            onPress: function onPress() {
              return _this2.onPress(_callback);
            },
            numberOfLines: 1,
            style: [styles.desc, {
              textDecorationLine: 'underline',
              color: theme.colorPrimary,
              textAlign: 'center'
            }, _textStyle]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
            accessibilityLabel: _text,
            accessibilityHint: this.props.accessibilityHint
          })), _text));
        }

        var _this$props$button = this.props.button,
            text = _this$props$button.text,
            callback = _this$props$button.callback,
            buttonStyle = _this$props$button.buttonStyle,
            textStyle = _this$props$button.textStyle;
        return _react.default.createElement(_reactNative.View, {
          style: styles.bottom
        }, this.props.extraInfo ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: 2,
          style: [styles.desc, {
            color: theme.colorGrayLighter
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.extraInfo,
          accessibilityHint: this.props.accessibilityHint
        })), this.props.extraInfo) : null, _react.default.createElement(_reactNativeUiKitten.RkButton, (0, _extends2.default)({
          style: [styles.buttonContainer, {
            backgroundColor: theme.colorPrimary
          }, buttonStyle],
          onPress: function onPress() {
            return _this2.onPress(callback);
          },
          activeOpacity: 0.8
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: text,
          accessibilityHint: this.props.accessibilityHint
        })), _react.default.createElement(_reactNative.Text, {
          style: [styles.buttonText, _font.FontPrimary, textStyle]
        }, text)));
      }
    }, {
      key: "onPress",
      value: function onPress(callback) {
        if (typeof callback === 'function') {
          callback();
        } else {}
      }
    }, {
      key: "render",
      value: function render() {
        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.container, theme.colorBackground]
        }, this.renderCenter(), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), this.renderBottom());
      }
    }]);
    return BlankPage;
  }(_react.default.Component);

  BlankPage.contextType = _configProvider.ConfigContext;
  BlankPage.propTypes = {
    type: _propTypes.default.oneOf([TYPE.BUTTON, TYPE.UNDERLINE]),
    icon: _propTypes.default.any,
    underline: _propTypes.default.object,
    button: _propTypes.default.object,
    iconStyle: _reactNative.ViewPropTypes.style,
    message: _propTypes.default.string.isRequired,
    desc: _propTypes.default.string,
    extraInfo: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };
  BlankPage.defaultProps = {
    type: TYPE.BUTTON,
    underline: {},
    button: {},
    icon: imageSource
  };
  BlankPage.TYPE = TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      width: width
    },
    center: {
      marginTop: imageMarginTop,
      width: width,
      alignItems: 'center'
    },
    imageContainer: {
      width: imageContainerSize,
      height: imageContainerSize,
      alignItems: 'center'
    },
    image: {
      width: imageWidth,
      height: imageHeight,
      marginTop: 5
    },
    message: {
      width: width,
      fontSize: 15,
      color: '#999',
      textAlign: 'center'
    },
    desc: {
      width: width,
      paddingHorizontal: padding,
      fontSize: 13,
      color: '#999',
      lineHeight: 18
    },
    bottom: {
      width: width,
      marginBottom: safeBottom
    },
    buttonContainer: {
      width: width - _resources.Styles.common.padding * 2,
      height: 42,
      borderRadius: 5,
      marginTop: 21,
      marginHorizontal: _resources.Styles.common.padding
    },
    buttonText: {
      flex: 1,
      fontSize: 13,
      fontWeight: 'bold',
      textAlign: 'center',
      color: '#ffffff',
      lineHeight: 18
    }
  });

  var _default = BlankPage;
  exports.default = _default;
},23056,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,11251,22453,22420,22423,22426,23041,23059]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 84,
    "height": 114,
    "scales": [2, 3],
    "hash": "9fa4438dffed7ccf84357debec9c8e5d",
    "name": "blank_page_icon",
    "type": "png"
  });
},23059,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "TouchableView", {
    enumerable: true,
    get: function get() {
      return _TouchableView.default;
    }
  });

  var _TouchableView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23062,[14305,23032]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _colors = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var BigNumber = function (_PureComponent) {
    (0, _inherits2.default)(BigNumber, _PureComponent);

    function BigNumber() {
      (0, _classCallCheck2.default)(this, BigNumber);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BigNumber).apply(this, arguments));
    }

    (0, _createClass2.default)(BigNumber, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            title = _this$props.title,
            number = _this$props.number,
            themeColor = _this$props.themeColor;

        if (title === undefined || number === undefined) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint
        })), _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title), _react.default.createElement(_reactNative.Text, {
          style: [Styles.number, themeColor ? {
            color: themeColor
          } : null]
        }, number));
      }
    }]);
    return BigNumber;
  }(_react.PureComponent);

  exports.default = BigNumber;
  BigNumber.propTypes = {
    title: _propTypes.default.string,
    number: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
    themeColor: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: 'rgba(0, 0, 0, 0.9)'
    },
    number: {
      fontSize: (0, _sizes.adjustSize)(196),
      fontFamily: _fonts.FontKmedium,
      color: _colors.ColorGreen
    }
  });
},23065,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,23074,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.adjustSize = adjustSize;
  exports.window = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      windowWidth = _Dimensions$get.width,
      windowHeight = _Dimensions$get.height;

  var window = {
    get width() {
      return windowWidth;
    },

    get height() {
      if (_reactNative.Platform.OS === 'android') {
        return windowHeight / windowWidth > 1.8 ? windowHeight + _reactNative.NativeModules.StatusBarManager.HEIGHT : windowHeight;
      }

      return windowHeight;
    }

  };
  exports.window = window;

  function adjustSize(n) {
    return n / 1080 * window.width;
  }
},23068,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.FontDefault = exports.FontDsDigital = exports.FontLantingLight = exports.FontKmedium = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var FontKmedium = 'KMedium';
  exports.FontKmedium = FontKmedium;
  var FontLantingLight = 'MI-LANTING--GBK1-Light';
  exports.FontLantingLight = FontLantingLight;
  var FontDsDigital = 'DS-Digital';
  exports.FontDsDigital = FontDsDigital;
  var FontDefault = _reactNative.Platform.OS === 'ios' ? undefined : FontKmedium;
  exports.FontDefault = FontDefault;
},23071,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.fixHex = fixHex;
  exports.transformHexToDigtal = transformHexToDigtal;
  exports.transformDigtalToHex = transformDigtalToHex;
  exports.colorGetterforRange = colorGetterforRange;
  exports.ColorRed = exports.ColorOrange = exports.ColorGreen = undefined;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var ColorGreen = '#00B7A2';
  exports.ColorGreen = ColorGreen;
  var ColorOrange = '#FFA943';
  exports.ColorOrange = ColorOrange;
  var ColorRed = '#FC675F';
  exports.ColorRed = ColorRed;

  function fixHex(hex) {
    hex = hex.replace(/[^0-9a-fA-F]/, '').split('');
    var length = hex.length;

    if (length < 6) {
      hex = [hex[0] || 0, hex[0] || 0, hex[1] || 0, hex[1] || 0, hex[2] || 0, hex[2] || 0];
    }

    hex = "#" + hex.slice(0, 6).join('');
    return hex.toUpperCase();
  }

  function transformHexToDigtal(hex) {
    hex = fixHex(hex).slice(1);
    return parseInt(hex, 16);
  }

  function transformDigtalToHex(digtal) {
    return ("#" + ("000000" + digtal.toString(16)).slice(-6)).toUpperCase();
  }

  function splitRgb(color) {
    color = fixHex(color);

    var _color$slice$split = color.slice(1).split(''),
        _color$slice$split2 = (0, _slicedToArray2.default)(_color$slice$split, 6),
        r1 = _color$slice$split2[0],
        r2 = _color$slice$split2[1],
        g1 = _color$slice$split2[2],
        g2 = _color$slice$split2[3],
        b1 = _color$slice$split2[4],
        b2 = _color$slice$split2[5];

    var r = parseInt(r1 + r2, 16);
    var g = parseInt(g1 + g2, 16);
    var b = parseInt(b1 + b2, 16);
    return {
      r: r,
      g: g,
      b: b
    };
  }

  function colorGetterforRange(range) {
    var colors = formatColors(range);

    function formatColors(range) {
      var colors = [];

      for (var k in range) {
        if (range.hasOwnProperty(k)) {
          var p = parseFloat(k);
          var c = fixHex(range[k]);

          if (typeof p === 'number' && p >= 0 && p <= 1) {
            colors.push([p, c]);
          }
        }
      }

      colors.sort(function (a, b) {
        return a[0] > b[0] ? 1 : -1;
      });

      if (colors.length < 1) {
        colors = [[0, '#000000'], [1, '#ffffff']];
      }

      if (colors[0][0] > 0) {
        colors[0] = [0, colors[0][1]];
      }

      if (colors[colors.length - 1][0] < 1) {
        colors[colors.length - 1] = [1, colors[colors.length - 1][1]];
      }

      return colors;
    }

    function getColorFromPercent(p) {
      p = Math.max(0, Math.min(1, p / 100));
      var s1 = null;
      var s2 = null;

      for (var i = 1, l = colors.length; i < l; i++) {
        var c = colors[i];
        var cp = colors[i - 1];

        if (cp[0] <= p && c[0] >= p) {
          s1 = cp;
          s2 = c;
          break;
        }
      }

      if (s1[0] >= s2[0]) {
        return s1[1];
      }

      var p0 = (p - s1[0]) / (s2[0] - s1[0]);

      var _splitRgb = splitRgb(s1[1]),
          r1 = _splitRgb.r,
          g1 = _splitRgb.g,
          b1 = _splitRgb.b;

      var _splitRgb2 = splitRgb(s2[1]),
          r2 = _splitRgb2.r,
          g2 = _splitRgb2.g,
          b2 = _splitRgb2.b;

      var r = parseInt(p0 * r2 + (1 - p0) * r1, 10);
      var g = parseInt(p0 * g2 + (1 - p0) * g1, 10);
      var b = parseInt(p0 * b2 + (1 - p0) * b1, 10);
      return "#" + ("00" + r.toString(16)).slice(-2) + ("00" + g.toString(16)).slice(-2) + ("00" + b.toString(16)).slice(-2);
    }

    function getPercentFromColor(color) {
      var _splitRgb3 = splitRgb(color),
          r = _splitRgb3.r,
          g = _splitRgb3.g,
          b = _splitRgb3.b;

      for (var i = 0, l = 1000; i < l; i++) {
        var c = getColorFromPercent(i / 10);

        var _splitRgb4 = splitRgb(c),
            rc = _splitRgb4.r,
            gc = _splitRgb4.g,
            bc = _splitRgb4.b;

        if (Math.abs(r - rc) <= 5 && Math.abs(g - gc) <= 5 && Math.abs(b - bc) <= 5) {
          return i / 10;
        }
      }

      return 50;
    }

    function getPercentFromColorV2(color) {
      var _splitRgb5 = splitRgb(color),
          r = _splitRgb5.r,
          g = _splitRgb5.g,
          b = _splitRgb5.b;

      for (var i = 0, l = 1000; i < l; i++) {
        var c = getColorFromPercent(i / 10);

        var _splitRgb6 = splitRgb(c),
            rc = _splitRgb6.r,
            gc = _splitRgb6.g,
            bc = _splitRgb6.b;

        if (Math.abs(r - rc) <= 5 && Math.abs(g - gc) <= 5 && Math.abs(b - bc) <= 5) {
          return i / 10;
        }
      }

      return -1;
    }

    return {
      getColorFromPercent: getColorFromPercent,
      getPercentFromColor: getPercentFromColor,
      getPercentFromColorV2: getPercentFromColorV2
    };
  }
},23074,[14305,14347]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _Icons = _$$_REQUIRE(_dependencyMap[11]);

  var _Colors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _switch = _$$_REQUIRE(_dependencyMap[13]);

  var _containerWithShadowAndSeparator = _$$_REQUIRE(_dependencyMap[14]);

  var _sizes = _$$_REQUIRE(_dependencyMap[15]);

  var _font = _$$_REQUIRE(_dependencyMap[16]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[17]);

  var CardButton = function (_PureComponent) {
    (0, _inherits2.default)(CardButton, _PureComponent);

    function CardButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, CardButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CardButton)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onPress = function () {
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onPress = _this$props.onPress;

        if (typeof onPress === 'function' && !disabled) {
          onPress();
        }
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props2 = _this.props,
            disabled = _this$props2.disabled,
            onSwitch = _this$props2.onSwitch,
            switchOn = _this$props2.switchOn,
            onPress = _this$props2.onPress;

        if (disabled || !onSwitch && !onPress || actionName !== 'activate') {
          return;
        }

        if (onSwitch) {
          onSwitch(!switchOn);
          return;
        }

        onPress();
      };

      return _this;
    }

    (0, _createClass2.default)(CardButton, [{
      key: "render",
      value: function render() {
        var _this$props3 = this.props,
            containerStyle = _this$props3.containerStyle,
            themeColor = _this$props3.themeColor,
            themeBackgroundColor = _this$props3.themeBackgroundColor,
            underlayColor = _this$props3.underlayColor,
            hasShadow = _this$props3.hasShadow,
            iconContainerStyle = _this$props3.iconContainerStyle,
            iconStyle = _this$props3.iconStyle,
            icon = _this$props3.icon,
            iconText = _this$props3.iconText,
            title = _this$props3.title,
            subtitle = _this$props3.subtitle,
            onSwitch = _this$props3.onSwitch,
            switchOn = _this$props3.switchOn,
            disabled = _this$props3.disabled,
            onPress = _this$props3.onPress,
            rightText = _this$props3.rightText,
            rightArrow = _this$props3.rightArrow,
            offColor = _this$props3.offColor,
            iconDisabled = _this$props3.iconDisabled,
            invisible = _this$props3.invisible;
        var opacity = disabled ? 0.3 : 1;
        var finalIcon = icon;

        if (disabled && iconDisabled) {
          finalIcon = iconDisabled;
        }

        if (!finalIcon && !iconText && !title && !subtitle && !onSwitch) {
          return null;
        }

        var Wrap = hasShadow ? _containerWithShadowAndSeparator.ContainerWithShadowAndSeparator : _react.Fragment;
        return _react.default.createElement(Wrap, {
          invisible: invisible
        }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: [Styles.container, containerStyle, themeBackgroundColor ? {
            backgroundColor: themeBackgroundColor
          } : null],
          underlayColor: disabled || !onPress ? themeBackgroundColor || '#fff' : underlayColor,
          onPress: this.onPress
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: onSwitch ? _accessibilityHelper.AccessibilityRoles.switch : _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: disabled,
            checked: onSwitch && !!switchOn
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_react.Fragment, null, finalIcon || iconText ? _react.default.createElement(_reactNative.View, {
          style: [Styles.iconContainer, iconContainerStyle, {
            backgroundColor: (!switchOn && offColor ? offColor : themeColor) || _Colors.default.green,
            opacity: opacity
          }]
        }, finalIcon ? _react.default.createElement(_reactNative.Image, {
          style: [Styles.icon, iconStyle],
          source: finalIcon
        }) : _react.default.createElement(_reactNative.Text, {
          style: Styles.iconText
        }, iconText)) : null, _react.default.createElement(_reactNative.View, {
          style: [Styles.titleContainer, {
            opacity: opacity
          }]
        }, title ? _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.subtitle
        }, subtitle) : null), onSwitch ? _react.default.createElement(_reactNative.View, {
          style: Styles.switchContainer
        }, _react.default.createElement(_switch.Switch, (0, _extends2.default)({
          value: switchOn,
          onValueChange: onSwitch,
          onTintColor: themeColor || _Colors.default.green,
          disabled: disabled
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })))) : rightText || rightArrow ? _react.default.createElement(_react.Fragment, null, rightText ? _react.default.createElement(_reactNative.Text, {
          style: Styles.rightText
        }, rightText) : null, rightArrow ? _react.default.createElement(_reactNative.Image, {
          style: [Styles.rightArrow, {
            opacity: opacity
          }],
          source: _Icons.Icons.rightArrow
        }) : null) : null)));
      }
    }]);
    return CardButton;
  }(_react.PureComponent);

  exports.default = CardButton;
  CardButton.defaultProps = {
    underlayColor: 'rgba(0, 0, 0, 0.05)',
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      height: (0, _sizes.adjustSize)(240),
      paddingHorizontal: (0, _sizes.adjustSize)(60),
      flexDirection: 'row',
      alignItems: 'center',
      backgroundColor: '#fff'
    },
    iconContainer: {
      marginRight: (0, _sizes.adjustSize)(39),
      width: (0, _sizes.adjustSize)(120),
      height: (0, _sizes.adjustSize)(120),
      borderRadius: (0, _sizes.adjustSize)(60),
      justifyContent: 'center',
      alignItems: 'center'
    },
    icon: {
      width: (0, _sizes.adjustSize)(72),
      height: (0, _sizes.adjustSize)(72),
      resizeMode: 'contain'
    },
    iconText: (0, _objectSpread2.default)({
      fontSize: (0, _sizes.adjustSize)(60),
      color: '#fff'
    }, _font.FontSecondary),
    titleContainer: {
      flex: 1
    },
    title: (0, _objectSpread2.default)({
      fontSize: (0, _sizes.adjustSize)(45),
      color: '#000'
    }, _font.FontPrimary),
    subtitle: (0, _objectSpread2.default)({
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(42),
      color: '#999',
      marginTop: (0, _sizes.adjustSize)(12)
    }, _font.FontSecondary),
    switchContainer: {
      marginLeft: (0, _sizes.adjustSize)(30)
    },
    rightText: (0, _objectSpread2.default)({
      fontSize: (0, _sizes.adjustSize)(36),
      color: '#999',
      marginLeft: (0, _sizes.adjustSize)(30)
    }, _font.FontSecondary),
    rightArrow: {
      height: (0, _sizes.adjustSize)(72),
      width: (0, _sizes.adjustSize)(72),
      resizeMode: 'contain'
    }
  });
},23077,[14308,14305,14314,14344,14320,14323,14371,14377,14386,10297,10033,23080,23083,22447,23086,23068,23041,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Icons = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var Icons = function Icons() {
    (0, _classCallCheck2.default)(this, Icons);
  };

  exports.Icons = Icons;
  Icons.rightArrow = _$$_REQUIRE(_dependencyMap[2]);
  Icons.inputDelete = _$$_REQUIRE(_dependencyMap[3]);
  Icons.inputEyeSecure = _$$_REQUIRE(_dependencyMap[4]);
  Icons.inputEye = _$$_REQUIRE(_dependencyMap[5]);
  Icons.loadingPicLight = _$$_REQUIRE(_dependencyMap[6]);
  Icons.loadingPicDark = _$$_REQUIRE(_dependencyMap[7]);
},23080,[14305,14320,22459,23224,23227,23230,23233,23236]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var Colors = function Colors() {
    (0, _classCallCheck2.default)(this, Colors);
  };

  Colors.green = '#00B7A2';
  Colors.range = '#FFA943';
  Colors.red = '#FC675F';
  var _default = Colors;
  exports.default = _default;
},23083,[14305,14320]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "ContainerWithShadowAndSeparator", {
    enumerable: true,
    get: function get() {
      return _ContainerWithShadowAndSeparator.default;
    }
  });

  var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23086,[14305,23089]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNativeShadow = _$$_REQUIRE(_dependencyMap[10]);

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _GapWrap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var ContainerWithShadowAndSeparator = function (_Component) {
    (0, _inherits2.default)(ContainerWithShadowAndSeparator, _Component);

    function ContainerWithShadowAndSeparator() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, ContainerWithShadowAndSeparator);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ContainerWithShadowAndSeparator)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        width: (0, _sizes.adjustSize)(1020),
        height: (0, _sizes.adjustSize)(240)
      };

      _this.onLayout = function (e) {
        var _e$nativeEvent$layout = e.nativeEvent.layout,
            width = _e$nativeEvent$layout.width,
            height = _e$nativeEvent$layout.height;

        _this.setState({
          width: width,
          height: height
        });
      };

      return _this;
    }

    (0, _createClass2.default)(ContainerWithShadowAndSeparator, [{
      key: "getContents",
      value: function getContents() {
        var _this$props = this.props,
            children = _this$props.children,
            separatorStyle = _this$props.separatorStyle,
            horizontal = _this$props.horizontal;

        if (!children) {
          return null;
        }

        return (Array.isArray(children) ? children : [children]).filter(function (child) {
          return !!child;
        }).map(function (child, index) {
          return _react.default.createElement(_GapWrap.default, {
            key: "" + index,
            hasSeparator: index > 0,
            horizontal: horizontal,
            separatorStyle: separatorStyle
          }, child);
        });
      }
    }, {
      key: "render",
      value: function render() {
        var contents = this.getContents();
        var _this$props2 = this.props,
            containerStyle = _this$props2.containerStyle,
            horizontal = _this$props2.horizontal,
            invisible = _this$props2.invisible;
        var _this$state = this.state,
            width = _this$state.width,
            height = _this$state.height;

        if (!contents) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [Styles.box, {
            height: height <= 1 ? 0 : height + (0, _sizes.adjustSize)(9),
            overflow: 'visible',
            opacity: invisible ? 0 : 1
          }]
        }, _react.default.createElement(_reactNativeShadow.BoxShadow, {
          setting: {
            width: width,
            height: height,
            color: '#000',
            border: (0, _sizes.adjustSize)(9),
            radius: (0, _sizes.adjustSize)(30),
            opacity: 0.015,
            x: 0,
            y: (0, _sizes.adjustSize)(9),
            style: {
              position: 'absolute',
              top: 0,
              left: 0
            }
          }
        }), _react.default.createElement(_reactNative.View, {
          style: [Styles.container, horizontal ? Styles.containerHorizontal : Styles.containerVertical, containerStyle],
          onLayout: this.onLayout
        }, contents));
      }
    }]);
    return ContainerWithShadowAndSeparator;
  }(_react.Component);

  exports.default = ContainerWithShadowAndSeparator;
  ContainerWithShadowAndSeparator.propTypes = {
    containerStyle: _propTypes.default.any,
    separatorStyle: _propTypes.default.any,
    horizontal: _propTypes.default.bool,
    invisible: _propTypes.default.bool
  };
  ContainerWithShadowAndSeparator.defaultProps = {
    containerStyle: {},
    separatorStyle: {},
    horizontal: false,
    invisible: false
  };

  var Styles = _reactNative.StyleSheet.create({
    box: {
      position: 'relative'
    },
    container: {
      borderRadius: (0, _sizes.adjustSize)(33),
      overflow: 'hidden',
      backgroundColor: '#fff'
    },
    containerHorizontal: {
      flexDirection: 'row'
    }
  });
},23089,[14308,14305,14320,14323,14371,14377,14386,10297,10033,10318,13699,23068,23092]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _separator = _$$_REQUIRE(_dependencyMap[9]);

  var _sizes = _$$_REQUIRE(_dependencyMap[10]);

  var GapWrap = function (_Component) {
    (0, _inherits2.default)(GapWrap, _Component);

    function GapWrap() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, GapWrap);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(GapWrap)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        shown: true
      };

      _this.onLayout = function (e) {
        _this.setState({
          shown: e.nativeEvent.layout.height > (0, _sizes.adjustSize)(3.1)
        });
      };

      return _this;
    }

    (0, _createClass2.default)(GapWrap, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            hasSeparator = _this$props.hasSeparator,
            separatorStyle = _this$props.separatorStyle,
            children = _this$props.children;
        var shown = this.state.shown;

        if (!children) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          onLayout: this.onLayout
        }, hasSeparator && shown ? _react.default.createElement(_separator.Separator, {
          style: [{
            height: Math.min((0, _sizes.adjustSize)(3), 1),
            opacity: 0.35,
            marginHorizontal: (0, _sizes.adjustSize)(60)
          }, separatorStyle]
        }) : null, children);
      }
    }]);
    return GapWrap;
  }(_react.Component);

  exports.default = GapWrap;
},23092,[14308,14305,14320,14323,14371,14377,14386,10297,10033,22903,23068]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _colors = _$$_REQUIRE(_dependencyMap[11]);

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fns = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _styles = _$$_REQUIRE(_dependencyMap[15]);

  var Size72 = (0, _sizes.adjustSize)(72);
  var Size120 = (0, _sizes.adjustSize)(120);
  var Size168 = (0, _sizes.adjustSize)(168);
  var Size150 = (0, _sizes.adjustSize)(150);
  var Size138 = (0, _sizes.adjustSize)(138);

  var CircleButton = function (_Component) {
    (0, _inherits2.default)(CircleButton, _Component);

    function CircleButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, CircleButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CircleButton)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        isPressing: false
      };

      _this.onPress = function () {
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onPress = _this$props.onPress;

        if (disabled) {
          return;
        }

        onPress();
      };

      _this.onPressIn = function () {
        var showHighlight = _this.props.showHighlight;

        if (showHighlight) {
          _this.setState({
            isPressing: true
          });
        }
      };

      _this.onPressOut = function () {
        _this.setState({
          isPressing: false
        });
      };

      return _this;
    }

    (0, _createClass2.default)(CircleButton, [{
      key: "renderTouchableList",
      value: function renderTouchableList() {
        var _this$props2 = this.props,
            sizeLevel = _this$props2.sizeLevel,
            selected = _this$props2.selected,
            title = _this$props2.title,
            icon = _this$props2.icon,
            iconSelected = _this$props2.iconSelected,
            iconText = _this$props2.iconText,
            themeColor = _this$props2.themeColor,
            disabled = _this$props2.disabled,
            horizontal = _this$props2.horizontal,
            offColor = _this$props2.offColor,
            titleIsTouchable = _this$props2.titleIsTouchable;
        var isPressing = this.state.isPressing;
        var containerSizeStyle = _styles.Styles[['container0', 'container1', 'container2', 'container3'][sizeLevel || 0]] || _styles.Styles.container0;
        var iconContainerSizeStyle = _styles.Styles[['iconContainer0', 'iconContainer1', 'iconContainer2', 'iconContainer3'][sizeLevel || 0]] || _styles.Styles.iconContainer0;
        selected = selected || isPressing;

        if (titleIsTouchable) {
          return _react.default.createElement(_reactNative.View, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.container, containerSizeStyle, horizontal ? _styles.Styles.containerHorizontal : null, disabled ? {
              opacity: 0.3
            } : null])
          }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            disabled: disabled,
            style: [horizontal ? _styles.Styles.containerHorizontal : null, _styles.Styles.listContainer],
            activeOpacity: 1,
            onPress: this.onPress,
            onPressIn: this.onPressIn,
            onPressOut: this.onPressOut
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityLabel: this.props.accessibilityLabel || title || iconText,
            accessibilityHint: this.props.accessibilityHint,
            accessibilityState: {
              disabled: disabled,
              checked: selected,
              selected: selected
            }
          })), _react.default.createElement(_reactNative.View, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.iconContainer, iconContainerSizeStyle, selected ? {
              backgroundColor: themeColor || _colors.ColorGreen
            } : offColor ? {
              backgroundColor: offColor
            } : null, disabled ? _styles.Styles.iconContainerDisabled : null, disabled && selected ? _styles.Styles.iconContainerDisabledSelected : null])
          }, icon ? _react.default.createElement(_reactNative.Image, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.icon]),
            source: selected && !disabled ? iconSelected || iconSelected : icon
          }) : _react.default.createElement(_reactNative.Text, {
            style: [_styles.Styles.iconText, selected && !disabled ? _styles.Styles.iconTextSelected : null]
          }, iconText)), title ? _react.default.createElement(_reactNative.Text, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.title, selected ? {
              color: themeColor || _colors.ColorGreen
            } : null, disabled ? _styles.Styles.titleDisabled : null, horizontal ? _styles.Styles.titleHorizontal : null]),
            numberOfLines: horizontal ? 2 : 1
          }, title) : null));
        } else {
          return _react.default.createElement(_reactNative.View, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.container, containerSizeStyle, horizontal ? _styles.Styles.containerHorizontal : null, disabled ? {
              opacity: 0.3
            } : null])
          }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            disabled: disabled,
            style: _reactNative.StyleSheet.flatten([_styles.Styles.iconContainer, iconContainerSizeStyle, selected ? {
              backgroundColor: themeColor || _colors.ColorGreen
            } : offColor ? {
              backgroundColor: offColor
            } : null, disabled ? _styles.Styles.iconContainerDisabled : null, disabled && selected ? _styles.Styles.iconContainerDisabledSelected : null]),
            activeOpacity: 1,
            onPress: this.onPress,
            onPressIn: this.onPressIn,
            onPressOut: this.onPressOut
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityLabel: this.props.accessibilityLabel || title || iconText,
            accessibilityHint: this.props.accessibilityHint,
            accessibilityState: {
              disabled: disabled,
              checked: selected,
              selected: selected
            }
          })), icon ? _react.default.createElement(_reactNative.Image, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.icon]),
            source: selected && !disabled ? iconSelected || iconSelected : icon
          }) : _react.default.createElement(_reactNative.Text, {
            style: [_styles.Styles.iconText, selected && !disabled ? _styles.Styles.iconTextSelected : null]
          }, iconText)), title ? _react.default.createElement(_reactNative.Text, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.title, selected ? {
              color: themeColor || _colors.ColorGreen
            } : null, disabled ? _styles.Styles.titleDisabled : null, horizontal ? _styles.Styles.titleHorizontal : null]),
            numberOfLines: horizontal ? 2 : 1
          }, title) : null);
        }
      }
    }, {
      key: "render",
      value: function render() {
        return this.renderTouchableList();
      }
    }]);
    return CircleButton;
  }(_react.Component);

  exports.default = CircleButton;
  CircleButton.propTypes = {
    sizeLevel: _propTypes.default.oneOf([0, 1, 2, 3]),
    themeColor: _propTypes.default.any,
    offColor: _propTypes.default.any,
    disabled: _propTypes.default.bool,
    showHighlight: _propTypes.default.bool,
    selected: _propTypes.default.bool,
    horizontal: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    title: _propTypes.default.string,
    titleIsTouchable: _propTypes.default.bool,
    icon: _propTypes.default.any,
    iconSelected: _propTypes.default.any,
    iconText: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  CircleButton.defaultProps = {
    sizeLevel: 0,
    themeColor: '',
    offColor: '#F7F7F7',
    disabled: false,
    showHighlight: false,
    selected: false,
    horizontal: false,
    onPress: _fns.NOOP,
    title: '',
    titleIsTouchable: false,
    icon: null,
    iconSelected: null,
    iconText: ''
  };
},23095,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23074,23068,23137,22420,23098]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Styles = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _sizes = _$$_REQUIRE(_dependencyMap[1]);

  var _fonts = _$$_REQUIRE(_dependencyMap[2]);

  var Styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center'
    },
    container0: {
      width: (0, _sizes.adjustSize)(120)
    },
    container1: {
      width: (0, _sizes.adjustSize)(168)
    },
    container2: {
      width: (0, _sizes.adjustSize)(150)
    },
    container3: {
      width: (0, _sizes.adjustSize)(138)
    },
    containerHorizontal: {
      width: 'auto',
      flex: 1,
      flexDirection: 'row'
    },
    iconContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    iconContainer0: {
      width: (0, _sizes.adjustSize)(120),
      height: (0, _sizes.adjustSize)(120),
      borderRadius: (0, _sizes.adjustSize)(120) / 2
    },
    iconContainer1: {
      width: (0, _sizes.adjustSize)(168),
      height: (0, _sizes.adjustSize)(168),
      borderRadius: (0, _sizes.adjustSize)(168) / 2
    },
    iconContainer2: {
      width: (0, _sizes.adjustSize)(150),
      height: (0, _sizes.adjustSize)(150),
      borderRadius: (0, _sizes.adjustSize)(150) / 2
    },
    iconContainer3: {
      width: (0, _sizes.adjustSize)(138),
      height: (0, _sizes.adjustSize)(138),
      borderRadius: (0, _sizes.adjustSize)(138) / 2
    },
    iconContainerDisabled: {
      backgroundColor: 'rgba(197, 201, 203, 0.3)'
    },
    iconContainerDisabledSelected: {
      backgroundColor: 'rgba(197, 201, 203, 0.3)'
    },
    icon: {
      resizeMode: 'contain',
      width: (0, _sizes.adjustSize)(72),
      height: (0, _sizes.adjustSize)(72)
    },
    iconText: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      color: '#000'
    },
    iconTextSelected: {
      color: '#FFF'
    },
    title: {
      marginTop: (0, _sizes.adjustSize)(27),
      textAlign: 'center',
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: '#999999'
    },
    title3: {
      display: 'none'
    },
    titleDisabled: {
      color: '#999999'
    },
    titleHorizontal: {
      marginTop: 0,
      flex: 1,
      textAlign: 'left',
      marginLeft: (0, _sizes.adjustSize)(39)
    },
    listContainer: {
      alignItems: 'center'
    }
  });

  exports.Styles = Styles;
},23098,[10033,23068,23071]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var GapWrap = function (_PureComponent) {
    (0, _inherits2.default)(GapWrap, _PureComponent);

    function GapWrap() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, GapWrap);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(GapWrap)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        shown: true
      };

      _this.onLayout = function (e) {
        _this.setState({
          shown: e.nativeEvent.layout.height > 0
        });
      };

      return _this;
    }

    (0, _createClass2.default)(GapWrap, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            gap = _this$props.gap,
            horizontal = _this$props.horizontal,
            children = _this$props.children;
        var shown = this.state.shown;

        if (!children) {
          return null;
        }

        var gapSize = shown ? gap : 0;
        return _react.default.createElement(_react.Fragment, null, _react.default.createElement(_reactNative.View, {
          style: horizontal ? {
            flex: 1
          } : null,
          onLayout: this.onLayout
        }, children), _react.default.createElement(_reactNative.View, {
          style: [StylesGap.gap, (0, _defineProperty2.default)({}, horizontal ? 'width' : 'height', gapSize)]
        }));
      }
    }]);
    return GapWrap;
  }(_react.PureComponent);

  var ContainerWithGap = function (_PureComponent2) {
    (0, _inherits2.default)(ContainerWithGap, _PureComponent2);

    function ContainerWithGap() {
      (0, _classCallCheck2.default)(this, ContainerWithGap);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(ContainerWithGap).apply(this, arguments));
    }

    (0, _createClass2.default)(ContainerWithGap, [{
      key: "getContents",
      value: function getContents() {
        var _this$props2 = this.props,
            children = _this$props2.children,
            horizontal = _this$props2.horizontal,
            gap = _this$props2.gap;

        if (!children) {
          return null;
        }

        var length = children.length;
        var lengtEdge = length - 1;
        return children.map(function (child, index) {
          return _react.default.createElement(GapWrap, {
            key: index,
            gap: index < lengtEdge ? gap : 0,
            horizontal: horizontal
          }, child);
        });
      }
    }, {
      key: "render",
      value: function render() {
        var contents = this.getContents();
        var _this$props3 = this.props,
            containerStyle = _this$props3.containerStyle,
            horizontal = _this$props3.horizontal,
            outerGap = _this$props3.outerGap;

        if (!contents) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [Styles.container, (0, _defineProperty2.default)({}, horizontal ? 'marginVertical' : 'marginHorizontal', outerGap), horizontal ? {
            flexDirection: 'row'
          } : null, containerStyle]
        }, contents);
      }
    }]);
    return ContainerWithGap;
  }(_react.PureComponent);

  exports.default = ContainerWithGap;
  ContainerWithGap.propTypes = {
    containerStyle: _propTypes.default.any,
    horizontal: _propTypes.default.bool,
    gap: _propTypes.default.number,
    outerGap: _propTypes.default.number
  };
  ContainerWithGap.defaultProps = {
    containerStyle: {},
    horizontal: false,
    gap: 7,
    outerGap: 0
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {}
  });

  var StylesGap = _reactNative.StyleSheet.create({
    gap: {
      alignSelf: 'stretch'
    }
  });
},23101,[14308,14305,14317,14320,14323,14371,14377,14386,10297,10033,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _colors = _$$_REQUIRE(_dependencyMap[11]);

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fonts = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var Surface = _reactNative.ART.Surface,
      Group = _reactNative.ART.Group,
      Shape = _reactNative.ART.Shape,
      Path = _reactNative.ART.Path;
  var PI = Math.PI;

  var DeviceWithInfo = function (_PureComponent) {
    (0, _inherits2.default)(DeviceWithInfo, _PureComponent);

    function DeviceWithInfo() {
      (0, _classCallCheck2.default)(this, DeviceWithInfo);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DeviceWithInfo).apply(this, arguments));
    }

    (0, _createClass2.default)(DeviceWithInfo, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            icon = _this$props.icon,
            title = _this$props.title,
            subtitle = _this$props.subtitle,
            holdPlace = _this$props.holdPlace,
            progress = _this$props.progress,
            themeColor = _this$props.themeColor;

        if (!progress) {
          progress = 0;
        }

        progress = Math.min(1, Math.max(0, progress));
        var r = (0, _sizes.adjustSize)(324);
        var rDot = (0, _sizes.adjustSize)(7.5);
        var startX = r + Math.cos(-0.5 * PI) * r;
        var startY = r + Math.sin(-0.5 * PI) * r;
        var halfX = r + Math.cos(0.5 * PI) * r;
        var halfY = r + Math.sin(0.5 * PI) * r;
        var endX = r + Math.cos(progress * 2 * PI - 0.5 * PI) * r;
        var endY = r + Math.sin(progress * 2 * PI - 0.5 * PI) * r;
        var PathCircleBase = new Path().moveTo(startX, startY).arcTo(halfX, halfY, r, r, false, false).arcTo(startX, startY, r, r, false, false);
        var PathCircle = new Path().moveTo(startX, startY);

        if (progress >= 0.5) {
          PathCircle.arcTo(halfX, halfY, r, r, false, false);
        }

        PathCircle.arcTo(endX, endY, r, r, false, false);
        var PathDot = new Path().moveTo(endX, endY - rDot).arcTo(endX, endY + rDot, rDot, rDot, false, false).arcTo(endX, endY - rDot, rDot, rDot, false, false);
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityLabel: this.props.accessibilityLabel || progress
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.deviceContainer
        }, _react.default.createElement(Surface, {
          width: r * 2,
          height: r * 2,
          style: {
            position: 'absolute',
            left: 0,
            top: (0, _sizes.adjustSize)(7.5)
          }
        }, _react.default.createElement(Shape, {
          d: PathCircleBase,
          strokeWidth: 1,
          stroke: themeColor ? ((0, _colors.fixHex)(themeColor) + "33").slice(0, 9) : '#33ABF233'
        }), progress > 0 ? _react.default.createElement(Group, null, _react.default.createElement(Shape, {
          d: PathCircle,
          strokeWidth: 1,
          stroke: themeColor || '#33ABF2'
        }), _react.default.createElement(Shape, {
          d: PathDot,
          strokeWidth: 1,
          fill: themeColor || '#33ABF2'
        })) : null), _react.default.createElement(_reactNative.View, {
          style: [Styles.deviceInner, themeColor ? {
            backgroundColor: themeColor
          } : null]
        }, _react.default.createElement(_reactNative.Image, {
          style: Styles.deviceIcon,
          source: icon
        }))), _react.default.createElement(_reactNative.View, {
          style: Styles.infoContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.infoTitle
        }, title || (holdPlace ? ' ' : '')), _react.default.createElement(_reactNative.Text, {
          style: Styles.infoSubtitle
        }, subtitle || (holdPlace ? ' ' : ''))));
      }
    }]);
    return DeviceWithInfo;
  }(_react.PureComponent);

  exports.default = DeviceWithInfo;
  DeviceWithInfo.propTypes = {
    icon: _propTypes.default.any,
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    holdPlace: _propTypes.default.bool,
    progress: _propTypes.default.number,
    themeColor: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center',
      marginTop: (0, _sizes.adjustSize)(300)
    },
    deviceContainer: {
      width: (0, _sizes.adjustSize)(663),
      height: (0, _sizes.adjustSize)(663),
      justifyContent: 'center',
      alignItems: 'center'
    },
    deviceInner: {
      width: (0, _sizes.adjustSize)(558),
      height: (0, _sizes.adjustSize)(558),
      borderRadius: (0, _sizes.adjustSize)(279),
      justifyContent: 'center',
      alignItems: 'center',
      backgroundColor: '#43C2FA'
    },
    deviceIcon: {
      width: (0, _sizes.adjustSize)(264),
      height: (0, _sizes.adjustSize)(228)
    },
    infoContainer: {
      marginTop: (0, _sizes.adjustSize)(33),
      alignItems: 'center'
    },
    infoTitle: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(45),
      lineHeight: (0, _sizes.adjustSize)(60),
      color: '#000'
    },
    infoSubtitle: {
      marginTop: (0, _sizes.adjustSize)(9),
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#B2B2B2'
    }
  });
},23104,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23074,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeSvg = _$$_REQUIRE(_dependencyMap[10]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var Size708 = (0, _sizes.adjustSize)(708);

  function getCircleCenter(type, index) {
    switch (type) {
      case 0:
      case 1:
        return {
          x: 0,
          y: 0
        };

      case 2:
        return {
          x: [3, -2, -1, 2][index] || 0,
          y: 0
        };

      case 3:
        return {
          x: [2, -2, -1, 0][index] || 0,
          y: 0
        };

      case -1:
      default:
        return {
          x: 0,
          y: 0
        };
    }
  }

  function getCircleColors(type, index) {
    switch (type) {
      case 0:
        return [['#475154'], ['#475154', '#4A5867'], ['#2D3947'], ['#F7F7F7']][index] || '#475154';

      case 1:
        return [['#00AEFF'], ['#00AEFF', '#5BCCFF'], ['#007DFF'], ['#F7F7F7']][index] || '#00AEFF';

      case 2:
        return [['#00B7AF'], ['#00B7AF', '#0BCEB7'], ['#05CFC6'], ['#F7F7F7']][index] || '#00B7AF';

      case 3:
        return [['#7538F7'], ['#7538F7', '#B88CFF'], ['#7231FB'], ['#F7F7F7']][index] || '#7538F7';

      case 4:
        return [['#5067F9'], ['#5067F9', '#589BFB'], ['#2240F7'], ['#F7F7F7']][index] || '#5067F9';

      default:
        return [['#FFFFFF'], ['#FFFFFF', '#FFFFFF'], ['#FFFFFF'], ['#F7F7F7']][index] || '#FFFFFF';
    }
  }

  function getCircleOpacity(type, index) {
    switch (type) {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
        return [0.2, 1, 1, 1][index] || 1;

      case -1:
      default:
        return [0.2, 0.6, 1, 1][index] || 1;
    }
  }

  var Circle = function (_Component) {
    (0, _inherits2.default)(Circle, _Component);

    function Circle() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Circle);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Circle)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        rotation: new _reactNative.Animated.Value(0)
      };
      _this.inited = false;
      _this.currentValue = 0;
      return _this;
    }

    (0, _createClass2.default)(Circle, [{
      key: "rotate",
      value: function rotate(_ref) {
        var disabled = _ref.disabled,
            _ref$duration = _ref.duration,
            duration = _ref$duration === undefined ? 4000 : _ref$duration;

        if (!this.inited) {
          return;
        }

        if (disabled) {
          this.stopRotation();
          return;
        }

        this.startRotation(duration);
      }
    }, {
      key: "startRotation",
      value: function startRotation() {
        var _this2 = this;

        var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 4000;
        var isReset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        this.stopRotation();
        this.aniRotation = _reactNative.Animated.timing(this.state.rotation, {
          toValue: 1,
          duration: isReset ? duration : duration * (1 - this.currentValue || 0.01),
          easing: _reactNative.Easing.inOut(_reactNative.Easing.linear)
        }).start(function (_ref2) {
          var finished = _ref2.finished;

          if (finished) {
            if (_this2.props.disabled) {
              return;
            }

            _this2.state.rotation.setValue(0);

            _this2.startRotation(_this2.props.duration, true);
          }
        });
      }
    }, {
      key: "stopRotation",
      value: function stopRotation() {
        var _this3 = this;

        this.state.rotation.stopAnimation(function (v) {
          _this3.currentValue = v;
        });
        this.aniRotation = null;
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        if (nextProps && nextProps.disabled) {
          this.stopRotation();
          return;
        }

        if (nextProps && this.props && nextProps.duration === this.props.duration && nextProps.disabled === this.props.disabled) {
          return;
        }

        this.rotate(nextProps || {});
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.inited = true;
        this.rotate(this.props);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.stopRotation();
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            color = _this$props.color,
            opacity = _this$props.opacity,
            rx = _this$props.rx,
            ry = _this$props.ry,
            _this$props$center = _this$props.center,
            x = _this$props$center.x,
            y = _this$props$center.y,
            counterClock = _this$props.counterClock,
            _this$props$centerInn = _this$props.centerInner,
            ix = _this$props$centerInn.x,
            iy = _this$props$centerInn.y,
            rxInner = _this$props.rxInner,
            ryInner = _this$props.ryInner;
        var rotation = this.state.rotation;
        var r = rotation.interpolate({
          inputRange: [0, 1],
          outputRange: !counterClock ? ['0deg', '360deg'] : ['360deg', '0deg']
        });
        var d = "\n      M" + (118 + x - rx) + " " + (118 + y) + "\n      A" + rx + " " + ry + " 0 0 1 " + (118 + x + rx) + " " + (118 + y) + "\n      L" + (118 + ix + rxInner) + " " + (118 + iy) + "\n      A" + rxInner + " " + ryInner + " 0 0 0 " + (118 + ix - rxInner) + " " + (118 + iy) + "\n      A" + rxInner + " " + ryInner + " 0 0 0 " + (118 + ix + rxInner) + " " + (118 + iy) + "\n      L" + (118 + x + rx) + " " + (118 + y) + "\n      A" + rx + " " + ry + " 0 0 1 " + (118 + x - rx) + " " + (118 + y) + "\n    ";
        return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({
          style: [Styles.circleWrap, {
            transform: [{
              rotate: r
            }]
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNativeSvg.Svg, {
          width: Size708,
          height: Size708,
          viewBox: "0 0 236 236"
        }, _react.default.createElement(_reactNativeSvg.Defs, null, _react.default.createElement(_reactNativeSvg.LinearGradient, {
          id: "circleGradient",
          x1: "0",
          y1: "0",
          x2: "236",
          y2: "236"
        }, _react.default.createElement(_reactNativeSvg.Stop, {
          offset: "0",
          stopColor: color[1] || color[0],
          stopOpacity: opacity
        }), _react.default.createElement(_reactNativeSvg.Stop, {
          offset: "1",
          stopColor: color[0],
          stopOpacity: opacity
        }))), _react.default.createElement(_reactNativeSvg.Path, {
          rotation: 0,
          origin: (118, 118),
          d: d,
          fill: "url(#circleGradient)"
        })));
      }
    }]);
    return Circle;
  }(_react.Component);

  Circle.propTypes = {
    disabled: _propTypes.default.bool,
    duration: _propTypes.default.number,
    color: _propTypes.default.string,
    opacity: _propTypes.default.number,
    rx: _propTypes.default.number,
    ry: _propTypes.default.number,
    center: _propTypes.default.shape({
      x: _propTypes.default.number,
      y: _propTypes.default.number
    }),
    centerInner: _propTypes.default.shape({
      x: _propTypes.default.number,
      y: _propTypes.default.number
    }),
    counterClock: _propTypes.default.bool,
    rxInner: _propTypes.default.number,
    ryInner: _propTypes.default.number
  };

  var Fan = function (_Component2) {
    (0, _inherits2.default)(Fan, _Component2);

    function Fan() {
      (0, _classCallCheck2.default)(this, Fan);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Fan).apply(this, arguments));
    }

    (0, _createClass2.default)(Fan, [{
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            disabled = _this$props2.disabled,
            type = _this$props2.type,
            speedLevel = _this$props2.speedLevel,
            noDisableColor = _this$props2.noDisableColor;
        var centerInner = getCircleCenter(type, 3);
        var rxInner = 91;
        var ryInner = 91;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.image,
          accessibilityLabel: this.props.accessibilityLabel || speedLevel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: disabled
          }
        })), _react.default.createElement(Circle, {
          disabled: disabled,
          initRotation: -15,
          counterClock: true,
          opacity: getCircleOpacity(disabled ? 0 : type, 0),
          color: getCircleColors(disabled && !noDisableColor ? 0 : type, 0),
          duration: 6000 / speedLevel,
          type: type,
          rx: 113,
          ry: 107,
          center: getCircleCenter(type, 0),
          centerInner: centerInner,
          rxInner: rxInner,
          ryInner: ryInner
        }), _react.default.createElement(Circle, {
          disabled: disabled,
          initRotation: 0,
          counterClock: false,
          opacity: getCircleOpacity(disabled ? 0 : type, 1),
          color: getCircleColors(disabled && !noDisableColor ? 0 : type, 1),
          duration: 5200 / speedLevel,
          type: type,
          rx: 105,
          ry: 105,
          center: getCircleCenter(type, 1),
          centerInner: centerInner,
          rxInner: rxInner,
          ryInner: ryInner
        }), _react.default.createElement(Circle, {
          disabled: disabled,
          initRotation: 45,
          counterClock: false,
          opacity: getCircleOpacity(disabled ? 0 : type, 2),
          color: getCircleColors(disabled && !noDisableColor ? 0 : type, 2),
          duration: 4000 / speedLevel,
          type: type,
          rx: 102,
          ry: 95,
          center: getCircleCenter(type, 2),
          centerInner: centerInner,
          rxInner: rxInner,
          ryInner: ryInner
        }));
      }
    }]);
    return Fan;
  }(_react.Component);

  exports.default = Fan;
  Fan.propTypes = {
    disabled: _propTypes.default.bool,
    noDisableColor: _propTypes.default.bool,
    speedLevel: _propTypes.default.number,
    type: _propTypes.default.oneOf([-1, 0, 1, 2, 3, 4]),
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Fan.defaultProps = {
    disabled: false,
    noDisableColor: false,
    speedLevel: 1,
    type: -1
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginVertical: (0, _sizes.adjustSize)(165),
      width: Size708,
      height: Size708,
      alignSelf: 'center'
    },
    circleWrap: {
      position: 'absolute',
      width: '100%',
      height: '100%',
      left: 0,
      top: 0
    }
  });
},23107,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,11485,10318,23068,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Background = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _reactNativeLinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var Source0 = _$$_REQUIRE(_dependencyMap[15]);

  var Source1 = _$$_REQUIRE(_dependencyMap[16]);

  var Source2 = _$$_REQUIRE(_dependencyMap[17]);

  var Source3 = _$$_REQUIRE(_dependencyMap[18]);

  var Source4 = _$$_REQUIRE(_dependencyMap[19]);

  var Source5 = _$$_REQUIRE(_dependencyMap[20]);

  var Source6 = _$$_REQUIRE(_dependencyMap[21]);

  function getRandomBetween(min, max) {
    return Math.random() * (max - min) + min;
  }

  var HeaterHeader = function (_PureComponent) {
    (0, _inherits2.default)(HeaterHeader, _PureComponent);

    function HeaterHeader() {
      (0, _classCallCheck2.default)(this, HeaterHeader);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(HeaterHeader).apply(this, arguments));
    }

    (0, _createClass2.default)(HeaterHeader, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            title = _this$props.title,
            showLargeTitle = _this$props.showLargeTitle,
            subtitle = _this$props.subtitle,
            showSubtitle = _this$props.showSubtitle,
            unit = _this$props.unit,
            disabled = _this$props.disabled,
            themeColor = _this$props.themeColor;

        if (!title) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.container1
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.titlesContainerHeightHolder
        }, ' '), unit ? _react.default.createElement(_reactNative.Text, {
          style: Styles.unitTransparent
        }, "" + unit) : null, _react.default.createElement(_reactNative.View, {
          style: Styles.titlesContainer
        }, showLargeTitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.titleLarge
        }, title) : null, showLargeTitle ? null : _react.default.createElement(_reactNative.Text, {
          style: Styles.titleSmall
        }, title), showSubtitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.subtitle
        }, subtitle) : null), unit ? _react.default.createElement(_reactNative.Text, {
          style: Styles.unit
        }, "" + unit) : null, _react.default.createElement(_reactNative.Text, {
          style: Styles.titlesContainerHeightHolder
        }, ' ')));
      }
    }]);
    return HeaterHeader;
  }(_react.PureComponent);

  exports.default = HeaterHeader;
  HeaterHeader.propTypes = {
    title: _propTypes.default.string,
    showLargeTitle: _propTypes.default.bool,
    subtitle: _propTypes.default.string,
    showSubtitle: _propTypes.default.bool,
    unit: _propTypes.default.string,
    disabled: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };

  var Dot = function (_Component) {
    (0, _inherits2.default)(Dot, _Component);

    function Dot() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Dot);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Dot)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        progress: new _reactNative.Animated.Value(0),
        isLoading: true
      };

      _this.onLayout = function () {
        _this.setState({
          isLoading: false
        });
      };

      return _this;
    }

    (0, _createClass2.default)(Dot, [{
      key: "startAnimation",
      value: function startAnimation() {
        this.ani && this.ani.stop();
        this.ani = _reactNative.Animated.loop(_reactNative.Animated.timing(this.state.progress, {
          toValue: 1,
          duration: getRandomBetween(12000, 24000),
          useNativeDriver: true
        })).start();
      }
    }, {
      key: "stopAnimation",
      value: function stopAnimation() {
        this.ani && this.ani.stop();
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.timer = setTimeout(function () {
          _this2.startAnimation();
        }, 2000);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        clearTimeout(this.timer);
        this.stopAnimation();
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            width = _this$props2.width,
            height = _this$props2.height,
            source = _this$props2.source;
        var progress = this.state.progress;
        var originLeft = getRandomBetween(20, 350);
        var opacity = progress.interpolate({
          inputRange: [0, 1],
          outputRange: [1, 0]
        });
        var translateX = progress.interpolate({
          inputRange: [0, 1],
          outputRange: [originLeft - 3, originLeft + 3]
        });
        var randomTranslateY = getRandomBetween(_sizes.window.height * 0.8, _sizes.window.height);
        var translateY = progress.interpolate({
          inputRange: [0, 1],
          outputRange: [randomTranslateY, 0]
        });

        if (this.state.isLoading) {
          return _react.default.createElement(_reactNative.View, {
            onLayout: this.onLayout,
            style: [StylesDot.container, {
              width: width,
              height: height
            }]
          });
        }

        return _react.default.createElement(_reactNative.Animated.Image, {
          style: [StylesDot.container, {
            width: width,
            height: height,
            opacity: opacity,
            transform: [{
              translateX: translateX
            }, {
              translateY: translateY
            }]
          }],
          source: source
        });
      }
    }]);
    return Dot;
  }(_react.Component);

  Dot.propTypes = {
    width: _propTypes.default.number,
    height: _propTypes.default.height,
    source: _propTypes.default.any
  };

  var Dot0 = function (_Component2) {
    (0, _inherits2.default)(Dot0, _Component2);

    function Dot0() {
      (0, _classCallCheck2.default)(this, Dot0);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot0).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot0, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 26,
          height: 28,
          source: Source0
        });
      }
    }]);
    return Dot0;
  }(_react.Component);

  var Dot1 = function (_Component3) {
    (0, _inherits2.default)(Dot1, _Component3);

    function Dot1() {
      (0, _classCallCheck2.default)(this, Dot1);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot1).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot1, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 4,
          height: 4,
          source: Source1
        });
      }
    }]);
    return Dot1;
  }(_react.Component);

  var Dot2 = function (_Component4) {
    (0, _inherits2.default)(Dot2, _Component4);

    function Dot2() {
      (0, _classCallCheck2.default)(this, Dot2);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot2).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot2, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 3,
          height: 3,
          source: Source2
        });
      }
    }]);
    return Dot2;
  }(_react.Component);

  var Dot3 = function (_Component5) {
    (0, _inherits2.default)(Dot3, _Component5);

    function Dot3() {
      (0, _classCallCheck2.default)(this, Dot3);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot3).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot3, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 16,
          height: 16,
          source: Source3
        });
      }
    }]);
    return Dot3;
  }(_react.Component);

  var Dot4 = function (_Component6) {
    (0, _inherits2.default)(Dot4, _Component6);

    function Dot4() {
      (0, _classCallCheck2.default)(this, Dot4);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot4).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot4, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 8,
          height: 8,
          source: Source4
        });
      }
    }]);
    return Dot4;
  }(_react.Component);

  var Dot5 = function (_Component7) {
    (0, _inherits2.default)(Dot5, _Component7);

    function Dot5() {
      (0, _classCallCheck2.default)(this, Dot5);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot5).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot5, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 22,
          height: 22,
          source: Source5
        });
      }
    }]);
    return Dot5;
  }(_react.Component);

  var Dot6 = function (_Component8) {
    (0, _inherits2.default)(Dot6, _Component8);

    function Dot6() {
      (0, _classCallCheck2.default)(this, Dot6);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot6).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot6, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 83,
          height: 83,
          source: Source6
        });
      }
    }]);
    return Dot6;
  }(_react.Component);

  var Background = function (_Component9) {
    (0, _inherits2.default)(Background, _Component9);

    function Background() {
      (0, _classCallCheck2.default)(this, Background);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Background).apply(this, arguments));
    }

    (0, _createClass2.default)(Background, [{
      key: "getDots",
      value: function getDots() {
        var dots = [];
        var Dots = [Dot0, Dot1, Dot2, Dot3, Dot4, Dot5, Dot6].reverse();
        var dotCount = [14, 11, 18, 10, 11, 10, 11].reverse();
        dotCount.forEach(function (c, index) {
          var DotN = Dots[index];

          for (var i = 0; i < c; i++) {
            dots.push(_react.default.createElement(DotN, {
              key: String(index) + String(i)
            }));
          }
        });
        return dots;
      }
    }, {
      key: "render",
      value: function render() {
        var on = this.props.on;
        var gradientProps = {
          useAngel: this.props.useAngel,
          angel: this.props.angel,
          angelCenter: this.props.angelCenter,
          locations: this.props.locations,
          colors: this.props.colors
        };

        if (!on) {
          return _react.default.createElement(_reactNativeLinearGradient.default, (0, _extends2.default)({
            style: StylesBackground.container
          }, gradientProps));
        } else {
          var dots = this.getDots();
          return _react.default.createElement(_reactNativeLinearGradient.default, (0, _extends2.default)({
            style: StylesBackground.container
          }, gradientProps), dots);
        }
      }
    }]);
    return Background;
  }(_react.Component);

  exports.Background = Background;
  Background.propTypes = {
    on: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    useAngel: _propTypes.default.bool,
    angel: _propTypes.default.number,
    angelCenter: _propTypes.default.object,
    locations: _propTypes.default.array,
    colors: _propTypes.default.array
  };
  Background.defaultProps = {
    on: false,
    themeColor: null,
    useAngel: true,
    angel: 180,
    angelCenter: {
      x: 0.5,
      y: 0.5
    },
    locations: [0, 1],
    colors: ["#FFAC6A", "rgba(247,247,247,0.25)"]
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      paddingVertical: (0, _sizes.adjustSize)(195),
      flexDirection: 'column',
      justifyContent: 'center'
    },
    container1: {
      flexDirection: 'row',
      justifyContent: 'center'
    },
    titleLarge: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(240),
      textAlign: 'center',
      color: '#000000'
    },
    titlesContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    titlesContainerHeightHolder: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(282),
      textAlign: 'center',
      color: 'transparent'
    },
    titleSmall: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(120),
      textAlign: 'center',
      color: '#000000'
    },
    unitTransparent: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(54),
      color: 'transparent'
    },
    unit: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(54),
      color: '#000000'
    },
    subtitle: {
      fontFamily: _fonts.FontDefault,
      textAlign: 'center',
      fontSize: (0, _sizes.adjustSize)(42),
      color: '#000000'
    },
    subtitlePlaceHolder: {
      fontFamily: _fonts.FontDefault,
      textAlign: 'center',
      fontSize: (0, _sizes.adjustSize)(42),
      color: 'transparent'
    }
  });

  var StylesDot = _reactNative.StyleSheet.create({
    container: {
      position: 'absolute',
      resizeMode: 'contain'
    }
  });

  var StylesBackground = _reactNative.StyleSheet.create({
    container: {
      height: "100%",
      position: 'absolute',
      left: 0,
      top: 0,
      right: 0,
      bottom: 0
    }
  });
},23110,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,22420,14299,23113,23116,23119,23122,23125,23128,23131]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 26,
    "height": 28,
    "scales": [1],
    "hash": "e437a57822191991fca0f7568e3c4cd8",
    "name": "heater-dot0",
    "type": "png"
  });
},23113,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 4,
    "height": 4,
    "scales": [1],
    "hash": "c94e9e5660e90a16d10ddf030db99992",
    "name": "heater-dot1",
    "type": "png"
  });
},23116,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 3,
    "height": 3,
    "scales": [1],
    "hash": "8075bed0a415b161aa351bf95108e0e2",
    "name": "heater-dot2",
    "type": "png"
  });
},23119,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 16,
    "height": 16,
    "scales": [1],
    "hash": "f2b5b67cd2695b07bb24f7293526a495",
    "name": "heater-dot3",
    "type": "png"
  });
},23122,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 8,
    "height": 8,
    "scales": [1],
    "hash": "224724549f1506eb56b7cabd953ab33e",
    "name": "heater-dot4",
    "type": "png"
  });
},23125,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 22,
    "height": 22,
    "scales": [1],
    "hash": "7ee7506ecc080d92634d4f285aff3210",
    "name": "heater-dot5",
    "type": "png"
  });
},23128,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 83,
    "height": 83,
    "scales": [1],
    "hash": "76d5b015b10d6e50eb919f8ece03c611",
    "name": "heater-dot6",
    "type": "png"
  });
},23131,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[12]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _CircleButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _sizes = _$$_REQUIRE(_dependencyMap[16]);

  var _fns = _$$_REQUIRE(_dependencyMap[17]);

  var _fonts = _$$_REQUIRE(_dependencyMap[18]);

  var _colors = _$$_REQUIRE(_dependencyMap[19]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[20]);

  var SelectorWithButton = function (_Component) {
    (0, _inherits2.default)(SelectorWithButton, _Component);

    function SelectorWithButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, SelectorWithButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SelectorWithButton)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        selectedIndexs: [0]
      };

      _this.select = function (index) {
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            switchDisabled = _this$props.switchDisabled,
            multiple = _this$props.multiple,
            onSelected = _this$props.onSelected,
            minSelected = _this$props.minSelected,
            maxSelected = _this$props.maxSelected;

        if (disabled || switchDisabled) {
          return;
        }

        var selectedIndexs = (0, _toConsumableArray2.default)(_this.state.selectedIndexs);
        var selectedIndex = selectedIndexs.indexOf(index);
        var hasChanged = false;

        if (multiple) {
          if (selectedIndex === -1) {
            if (selectedIndexs.length >= maxSelected) {
              selectedIndexs.shift();
            }

            selectedIndexs.push(index);
            hasChanged = true;
          } else {
            if (selectedIndexs.length > minSelected) {
              selectedIndexs.splice(selectedIndex, 1);
              hasChanged = true;
            }
          }
        } else {
          if (selectedIndex === -1) {
            hasChanged = true;
            selectedIndexs = [index];
          }
        }

        if (hasChanged) {
          onSelected(selectedIndexs);
        }

        return null;
      };

      _this.getSelectors = function () {
        var _this$props2 = _this.props,
            items = _this$props2.items,
            themeColor = _this$props2.themeColor,
            disabled = _this$props2.disabled,
            switchDisabled = _this$props2.switchDisabled,
            maxNumberInRow = _this$props2.maxNumberInRow,
            hideTitleLeastNumber = _this$props2.hideTitleLeastNumber;
        var selectedIndexs = _this.state.selectedIndexs;
        var itemCount = items.length;

        var sizeLevel = _this.getSizeLevel(items);

        var isHorizontal = itemCount === 2 ? _this.props.isHorizontal : false;
        var hasSeparator = itemCount === 2;
        var newArray = [];
        var index = 0;

        while (index < items.length) {
          newArray.push(items.slice(index, index += maxNumberInRow));
        }

        return newArray.map(function (array, index1) {
          return _react.default.createElement(_reactNative.View, {
            key: index1,
            style: [Styles.selectors, itemCount === 2 && !isHorizontal ? {
              justifyContent: 'space-evenly'
            } : {}]
          }, array.map(function (item, index2) {
            var realIndex = index2 + maxNumberInRow * index1;
            var selected = selectedIndexs.indexOf(realIndex) !== -1;
            var numInOneRow = itemCount > maxNumberInRow ? maxNumberInRow : itemCount;
            var hideTitle = items.findIndex(function (item) {
              return item;
            }) === -1 || numInOneRow >= 5 && _this.context.language !== 'zh' || itemCount >= hideTitleLeastNumber;
            return _react.default.createElement(_react.Fragment, {
              key: index2 + maxNumberInRow * index1
            }, hasSeparator && realIndex > 0 ? _react.default.createElement(_reactNative.View, {
              style: Styles.separator
            }) : null, _react.default.createElement(_CircleButton.default, (0, _extends2.default)({
              sizeLevel: sizeLevel,
              horizontal: isHorizontal,
              themeColor: themeColor,
              disabled: disabled || switchDisabled,
              selected: selected,
              title: hideTitle ? '' : item.title,
              icon: item.icon,
              iconSelected: item.iconSelected,
              iconText: item.title || '',
              onPress: function onPress() {
                _this.select(realIndex);
              }
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: _this.props.accessible,
              accessibilityLabel: item.accessibilityLabel,
              accessibilityHint: item.accessibilityHint
            }))));
          }), itemCount > maxNumberInRow && itemCount % maxNumberInRow !== 0 && index1 === parseInt(itemCount / maxNumberInRow) ? Array.apply(null, Array(maxNumberInRow - itemCount % maxNumberInRow)).map(function (item, index) {
            return _react.default.createElement(_reactNative.View, {
              style: {
                opacity: 0
              },
              key: index
            }, _react.default.createElement(_CircleButton.default, (0, _extends2.default)({
              sizeLevel: sizeLevel,
              disabled: true
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: false
            }))));
          }) : null);
        });
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props3 = _this.props,
            disabled = _this$props3.disabled,
            showSwitch = _this$props3.showSwitch,
            switchOn = _this$props3.switchOn,
            onSwitch = _this$props3.onSwitch;

        if (disabled || !showSwitch || !onSwitch || actionName !== 'activate') {
          return;
        }

        onSwitch(!switchOn);
      };

      return _this;
    }

    (0, _createClass2.default)(SelectorWithButton, [{
      key: "getSizeLevel",
      value: function getSizeLevel(items) {
        var itemCount = items.length;
        return itemCount <= 2 ? 0 : itemCount === 3 ? 1 : 2;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props4 = this.props,
            title = _this$props4.title,
            subtitle = _this$props4.subtitle,
            items = _this$props4.items,
            hasShadow = _this$props4.hasShadow,
            showSwitch = _this$props4.showSwitch,
            disabled = _this$props4.disabled,
            switchOn = _this$props4.switchOn,
            themeColor = _this$props4.themeColor,
            onSwitch = _this$props4.onSwitch,
            maxNumberInRow = _this$props4.maxNumberInRow,
            alwaysShowSelectors = _this$props4.alwaysShowSelectors;

        if (!items || !items.length) {
          return null;
        }

        var Wrap = hasShadow ? _ContainerWithShadowAndSeparator.default : _react.Fragment;
        var sizeLevel = this.getSizeLevel(items);
        var opacity = disabled ? 0.3 : 1;
        return _react.default.createElement(Wrap, null, _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, title || subtitle || showSwitch ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [Styles.header]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: showSwitch ? _accessibilityHelper.AccessibilityRoles.switch : _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: showSwitch ? this.props.accessibilityHint : '',
          accessibilityState: showSwitch ? {
            disabled: disabled,
            checked: switchOn
          } : {
            disabled: disabled
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), title || subtitle ? _react.default.createElement(_reactNative.View, {
          style: [Styles.titleContainer, {
            opacity: opacity
          }]
        }, title ? _react.default.createElement(_reactNative.Text, {
          style: Styles.title,
          ellipsizeMode: "tail",
          numberOfLines: 1
        }, title) : null, title && subtitle ? _react.default.createElement(_reactNative.View, {
          style: Styles.titleSeparator
        }) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.subtitle,
          ellipsizeMode: "tail",
          numberOfLines: 1
        }, subtitle) : null) : null, showSwitch ? _react.default.createElement(_Switch.default, {
          disabled: disabled,
          value: switchOn,
          onTintColor: themeColor || _colors.ColorGreen,
          onValueChange: onSwitch
        }) : null) : null, showSwitch && !switchOn ? alwaysShowSelectors ? _react.default.createElement(_reactNative.View, {
          style: [title || subtitle || showSwitch ? Styles.selectorsWithHeader : null, items.length >= maxNumberInRow ? null : [Styles.selectorsPadding0, Styles.selectorsPadding1, Styles.selectorsPadding2, Styles.selectorsPadding3][sizeLevel]]
        }, this.getSelectors()) : null : _react.default.createElement(_reactNative.View, {
          style: [title || subtitle || showSwitch ? Styles.selectorsWithHeader : null, items.length >= maxNumberInRow ? null : [Styles.selectorsPadding0, Styles.selectorsPadding1, Styles.selectorsPadding2, Styles.selectorsPadding3][sizeLevel]]
        }, this.getSelectors())));
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(nextProps, prevState) {
        var selectedIndexsProp = nextProps.initSelectedIndexs;
        var selectedIndexsState = prevState.initSelectedIndexs;

        if ((0, _fns.isSameArrayElements)(selectedIndexsProp, selectedIndexsState)) {
          return null;
        }

        return {
          selectedIndexs: selectedIndexsProp
        };
      }
    }]);
    return SelectorWithButton;
  }(_react.Component);

  exports.default = SelectorWithButton;
  SelectorWithButton.contextType = _configProvider.ConfigContext;
  SelectorWithButton.propTypes = {
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    items: _propTypes.default.arrayOf(_propTypes.default.shape({
      icon: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
      iconSelected: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
      title: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    initSelectedIndexs: _propTypes.default.array,
    onSelected: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    switchDisabled: _propTypes.default.bool,
    alwaysShowSelectors: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    multiple: _propTypes.default.bool,
    minSelected: _propTypes.default.number,
    maxSelected: _propTypes.default.number,
    showSwitch: _propTypes.default.bool,
    switchOn: _propTypes.default.bool,
    onSwitch: _propTypes.default.func,
    hasShadow: _propTypes.default.bool,
    maxNumberInRow: _propTypes.default.number,
    hideTitleLeastNumber: _propTypes.default.number,
    isHorizontal: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  SelectorWithButton.defaultProps = {
    title: '',
    subtitle: '',
    items: [],
    initSelectedIndexs: [0],
    onSelected: _fns.NOOP,
    disabled: false,
    switchDisabled: false,
    alwaysShowSelectors: false,
    themeColor: '',
    offColor: '',
    multiple: false,
    minSelected: 1,
    maxSelected: Infinity,
    showSwitch: false,
    switchOn: true,
    onSwitch: _fns.log,
    hasShadow: true,
    maxNumberInRow: 4,
    isHorizontal: true,
    hideTitleLeastNumber: 1000
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      paddingHorizontal: (0, _sizes.adjustSize)(60)
    },
    header: {
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    titleContainer: {
      flex: 1,
      height: (0, _sizes.adjustSize)(156),
      flexDirection: 'row',
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: '#000'
    },
    titleSeparator: {
      width: 1,
      height: (0, _sizes.adjustSize)(42),
      backgroundColor: 'rgba(0, 0, 0, 0.3)',
      marginHorizontal: (0, _sizes.adjustSize)(18)
    },
    subtitle: {
      fontSize: (0, _sizes.adjustSize)(36),
      fontFamily: _fonts.FontDefault,
      color: 'rgba(0, 0, 0, 0.6)',
      flex: 1
    },
    selectors: {
      paddingVertical: (0, _sizes.adjustSize)(60),
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'flex-start'
    },
    selectorsWithHeader: {
      paddingTop: 0
    },
    selectorsPadding0: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorsPadding1: {
      paddingHorizontal: (0, _sizes.adjustSize)(78)
    },
    selectorsPadding2: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorsPadding3: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorWithHeader: {
      paddingTop: 0
    },
    separator: {
      width: 1,
      height: (0, _sizes.adjustSize)(120),
      backgroundColor: 'rgba(0, 0, 0, 0.15)',
      marginHorizontal: (0, _sizes.adjustSize)(60)
    }
  });
},23134,[14308,14305,14344,14359,14320,14323,14371,14377,14386,10297,10033,10318,22426,22450,23095,23089,23068,23137,23071,23074,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.NOOP = NOOP;
  exports.log = log;
  exports.isSameArrayElements = isSameArrayElements;
  exports.getType = getType;

  function NOOP() {}

  function log() {}

  function isSameArrayElements(a, b) {
    if (a === b) {
      return true;
    }

    if (!a && b || a && !b) {
      return false;
    }

    if (a && b && a.length !== b.length) {
      return false;
    }

    var _loop = function _loop(i, l) {
      var item = a[i];

      if (b.find(function (n) {
        return n === item;
      }) === undefined) {
        return {
          v: false
        };
      }
    };

    for (var i = 0, l = a.length; i < l; i++) {
      var _ret = _loop(i, l);

      if (typeof _ret === "object") return _ret.v;
    }

    return true;
  }

  function getType(o) {
    return Object.prototype.toString.call(o).slice(8, -1);
  }
},23137,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _containerWithShadowAndSeparator = _$$_REQUIRE(_dependencyMap[13]);

  var _fns = _$$_REQUIRE(_dependencyMap[14]);

  var _sizes = _$$_REQUIRE(_dependencyMap[15]);

  var _fonts = _$$_REQUIRE(_dependencyMap[16]);

  var _colors = _$$_REQUIRE(_dependencyMap[17]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[18]);

  var SliderWithHeader = function (_Component) {
    (0, _inherits2.default)(SliderWithHeader, _Component);

    function SliderWithHeader() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, SliderWithHeader);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SliderWithHeader)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onSlidingChange = function (v) {
        var _this$props = _this.props,
            onSlidingChange = _this$props.onSlidingChange,
            options = _this$props.options,
            min = _this$props.min,
            max = _this$props.max,
            step = _this$props.step;
        var isRange = min !== max && step !== 0;
        onSlidingChange(isRange ? v : options[v]);
      };

      _this.onSlidingComplete = function (v) {
        var _this$props2 = _this.props,
            onSlidingComplete = _this$props2.onSlidingComplete,
            options = _this$props2.options,
            min = _this$props2.min,
            max = _this$props2.max,
            step = _this$props2.step;
        var isRange = min !== max && step !== 0;
        onSlidingComplete(isRange ? v : options[v]);
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props3 = _this.props,
            disabled = _this$props3.disabled,
            showSwitch = _this$props3.showSwitch,
            switchOn = _this$props3.switchOn,
            onSwitch = _this$props3.onSwitch;

        if (disabled || !showSwitch || !onSwitch || actionName !== 'activate') {
          return;
        }

        onSwitch(!switchOn);
      };

      return _this;
    }

    (0, _createClass2.default)(SliderWithHeader, [{
      key: "showSelector",
      value: function showSelector() {
        var _this$props4 = this.props,
            showSwitch = _this$props4.showSwitch,
            switchOn = _this$props4.switchOn,
            alwaysShowSelectors = _this$props4.alwaysShowSelectors;

        if (showSwitch && !switchOn) {
          return !!alwaysShowSelectors;
        } else {
          return true;
        }
      }
    }, {
      key: "minimumTrackTintColor",
      value: function minimumTrackTintColor() {
        var _this$props5 = this.props,
            showSwitch = _this$props5.showSwitch,
            switchOn = _this$props5.switchOn,
            disabled = _this$props5.disabled,
            themeColor = _this$props5.themeColor,
            offColor = _this$props5.offColor;

        if (showSwitch && !switchOn) {
          return (offColor ? offColor : themeColor) || _colors.ColorGreen;
        } else {
          return (disabled && offColor ? offColor : themeColor) || _colors.ColorGreen;
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props6 = this.props,
            options = _this$props6.options,
            disabled = _this$props6.disabled,
            switchDisabled = _this$props6.switchDisabled,
            themeColor = _this$props6.themeColor,
            offColor = _this$props6.offColor,
            showSwitch = _this$props6.showSwitch,
            switchOn = _this$props6.switchOn,
            onSwitch = _this$props6.onSwitch,
            initValue = _this$props6.initValue,
            title = _this$props6.title,
            subtitle = _this$props6.subtitle,
            hasShadow = _this$props6.hasShadow,
            min = _this$props6.min,
            max = _this$props6.max,
            step = _this$props6.step,
            contentType = _this$props6.contentType,
            showEndText = _this$props6.showEndText,
            alwaysShowSelectors = _this$props6.alwaysShowSelectors;
        var isRange = min !== max && step !== 0;

        if ((!options || !options.length) && !isRange) {
          return null;
        }

        var initSelectedIndex = options.findIndex(function (option) {
          return option === initValue;
        });
        var Wrap = hasShadow ? _containerWithShadowAndSeparator.ContainerWithShadowAndSeparator : _react.Fragment;
        var opacity = disabled ? 0.3 : 1;
        return _react.default.createElement(Wrap, null, _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, title || subtitle || showSwitch ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [Styles.header]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: showSwitch ? _accessibilityHelper.AccessibilityRoles.switch : _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: showSwitch ? this.props.accessibilityHint : '',
          accessibilityState: showSwitch ? {
            disabled: disabled,
            checked: switchOn
          } : {
            disabled: disabled
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), title || subtitle ? _react.default.createElement(_reactNative.View, {
          style: [Styles.titleContainer, {
            opacity: opacity
          }]
        }, title ? _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title) : null, title && subtitle ? _react.default.createElement(_reactNative.View, {
          style: Styles.titleSeparator
        }) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.subtitle
        }, subtitle) : null) : null, showSwitch ? _react.default.createElement(_Switch.default, (0, _extends2.default)({
          disabled: disabled,
          value: switchOn,
          onTintColor: themeColor || _colors.ColorGreen,
          onValueChange: onSwitch
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }))) : null) : null, this.showSelector() ? _react.default.createElement(_reactNative.View, {
          style: [Styles.sliderContainer, title || subtitle || showSwitch ? Styles.sliderContainerWithHeader : null]
        }, _react.default.createElement(_SlideGear.default, (0, _extends2.default)({
          disabled: disabled || showSwitch && switchDisabled,
          containerStyle: Styles.slider,
          options: isRange ? [] : options,
          minimumTrackTintColor: this.minimumTrackTintColor(),
          contentType: contentType,
          showEndText: showEndText,
          value: isRange ? initValue : Math.max(0, initSelectedIndex),
          optionMin: min,
          optionMax: max,
          optionStep: step,
          onValueChange: this.onSlidingChange,
          onSlidingComplete: this.onSlidingComplete
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: this.props.sliderAccessibilityLabel,
          accessibilityHint: this.props.sliderAccessibilityHint
        })))) : null));
      }
    }]);
    return SliderWithHeader;
  }(_react.Component);

  exports.default = SliderWithHeader;
  SliderWithHeader.propTypes = {
    options: _propTypes.default.array,
    min: _propTypes.default.number,
    max: _propTypes.default.number,
    step: _propTypes.default.number,
    initValue: _propTypes.default.number,
    onSlidingChange: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    switchDisabled: _propTypes.default.bool,
    alwaysShowSelectors: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    offColor: _propTypes.default.any,
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    contentType: _propTypes.default.string,
    showEndText: _propTypes.default.bool,
    showSwitch: _propTypes.default.bool,
    switchOn: _propTypes.default.bool,
    onSwitch: _propTypes.default.func,
    hasShadow: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    sliderAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    sliderAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  SliderWithHeader.defaultProps = {
    options: [],
    min: 0,
    max: 0,
    step: 0,
    initValue: 0,
    onSlidingChange: _fns.log,
    onSlidingComplete: _fns.log,
    disabled: false,
    switchDisabled: false,
    alwaysShowSelectors: false,
    themeColor: '',
    offColor: '#EDEEEF',
    title: '',
    subtitle: '',
    contentType: '',
    showEndText: true,
    showSwitch: false,
    switchOn: true,
    onSwitch: _fns.log,
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      paddingHorizontal: (0, _sizes.adjustSize)(60)
    },
    header: {
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    titleContainer: {
      flex: 1,
      height: (0, _sizes.adjustSize)(156),
      flexDirection: 'row',
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: '#000'
    },
    titleSeparator: {
      width: 1,
      height: (0, _sizes.adjustSize)(42),
      backgroundColor: 'rgba(0, 0, 0, 0.3)',
      marginHorizontal: (0, _sizes.adjustSize)(18)
    },
    subtitle: {
      fontSize: (0, _sizes.adjustSize)(36),
      fontFamily: _fonts.FontDefault,
      color: 'rgba(0, 0, 0, 0.6)'
    },
    sliderContainer: {
      paddingVertical: (0, _sizes.adjustSize)(60)
    },
    sliderContainerWithHeader: {
      paddingTop: 0
    }
  });
},23140,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22450,22897,23086,23137,23068,23071,23074,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var SmallNumber = function (_PureComponent) {
    (0, _inherits2.default)(SmallNumber, _PureComponent);

    function SmallNumber() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, SmallNumber);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SmallNumber)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.offsetX = new _reactNative.Animated.Value(0);
      _this.containerWidth = 0;
      _this.centerWidth = 0;
      _this.centerX = 0;

      _this.onLayoutContainer = function (e) {
        var width = e.nativeEvent.layout.width;
        _this.containerWidth = width;

        if (width && _this.centerWidth) {
          _this.offsetX.setValue(width / 2 - _this.centerWidth / 2 - _this.centerX);
        }
      };

      _this.onLayoutCenter = function (e) {
        var _e$nativeEvent$layout = e.nativeEvent.layout,
            width = _e$nativeEvent$layout.width,
            x = _e$nativeEvent$layout.x;
        _this.centerWidth = width;
        _this.centerX = x;

        if (width && _this.containerWidth) {
          _this.offsetX.setValue(_this.containerWidth / 2 - width / 2 - x);
        }
      };

      _this.getItems = function () {
        var _this$props = _this.props,
            list = _this$props.list,
            themeColor = _this$props.themeColor,
            titleThemeColor = _this$props.titleThemeColor;
        var filtered = list.filter(function (item) {
          return item && item.title !== undefined && item.number !== undefined;
        });
        var total = filtered.length;
        var isOdd = total % 2 === 1;
        var centerIndex = total <= 0 ? 0 : isOdd ? total / 2 - 0.5 : total / 2;
        return filtered.map(function (item, index) {
          var title = item.title,
              number = item.number;
          var theme = item.themeColor || themeColor;
          var titleTheme = item.titleThemeColor || titleThemeColor;
          return _react.default.createElement(_react.Fragment, {
            key: index
          }, index > 0 ? _react.default.createElement(_reactNative.View, {
            style: [Styles.separator, titleTheme ? {
              backgroundColor: titleTheme
            } : null],
            onLayout: centerIndex === index && !isOdd ? _this.onLayoutCenter : null
          }) : null, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            style: Styles.item,
            onLayout: centerIndex === index && isOdd ? _this.onLayoutCenter : null
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
            accessibilityLabel: item.accessibilityLabel
          })), _react.default.createElement(_reactNative.Text, {
            style: [Styles.number, theme ? {
              color: theme
            } : null, isNaN(number) ? {
              fontSize: (0, _sizes.adjustSize)(88)
            } : null]
          }, number), _react.default.createElement(_reactNative.Text, {
            style: [Styles.title, titleTheme ? {
              color: titleTheme
            } : null]
          }, title)));
        });
      };

      return _this;
    }

    (0, _createClass2.default)(SmallNumber, [{
      key: "render",
      value: function render() {
        var list = this.props.list;

        if (!list || !list.length) {
          return null;
        }

        var items = this.getItems();
        var offsetX = this.offsetX;
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container,
          onLayout: this.onLayoutContainer
        }, _react.default.createElement(_reactNative.Animated.View, {
          style: [Styles.containerInner, {
            transform: [{
              translateX: offsetX
            }]
          }]
        }, items));
      }
    }]);
    return SmallNumber;
  }(_react.PureComponent);

  exports.default = SmallNumber;
  SmallNumber.propTypes = {
    list: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      number: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
      themeColor: _propTypes.default.any,
      titleThemeColor: _propTypes.default.any,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
    })),
    themeColor: _propTypes.default.any,
    titleThemeColor: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };

  var Styles = _reactNative.StyleSheet.create({
    containerInner: {
      alignItems: 'center',
      flexDirection: 'row',
      justifyContent: 'center'
    },
    separator: {
      width: (0, _sizes.adjustSize)(2.1),
      height: (0, _sizes.adjustSize)(135),
      marginHorizontal: (0, _sizes.adjustSize)(33),
      marginTop: (0, _sizes.adjustSize)(12),
      backgroundColor: 'rgba(0, 0, 0, 1)',
      opacity: 0.2
    },
    item: {
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(36),
      fontFamily: _fonts.FontDefault,
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#1C2229',
      opacity: 1
    },
    number: {
      fontSize: (0, _sizes.adjustSize)(102),
      fontFamily: 'Helvetica',
      lineHeight: (0, _sizes.adjustSize)(123),
      color: '#1C2229',
      opacity: 0.8
    }
  });
},23143,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNativeLinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fns = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var SwitchBgColorsOn = ["#fff", "#f1f1f2"];
  var SwitchBgColorsOff = ["#f1f1f2", "#fff"];
  var MarginTops = [0, (0, _sizes.adjustSize)(240), (0, _sizes.adjustSize)(180), (0, _sizes.adjustSize)(105), (0, _sizes.adjustSize)(90)];
  var Heights = [0, (0, _sizes.adjustSize)(990), (0, _sizes.adjustSize)(852), (0, _sizes.adjustSize)(720), (0, _sizes.adjustSize)(516)];

  var WallSwitch = function (_Component) {
    (0, _inherits2.default)(WallSwitch, _Component);

    function WallSwitch() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, WallSwitch);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(WallSwitch)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.switch = function (index) {
        var onSwitch = _this.props.onSwitch;

        if (typeof onSwitch === 'function') {
          onSwitch(index);
        }
      };

      _this.getItems = function (items) {
        var length = items.length;
        return items.map(function (item, index) {
          var isFirst = index === 0;
          var isLast = index === length - 1;
          var isOn = item.isOn;
          return _react.default.createElement(_reactNativeLinearGradient.default, (0, _extends2.default)({
            key: index,
            style: [Styles.item, isOn ? Styles.itemOn : Styles.itemOff, isFirst ? Styles.itemFirst : null, isLast ? Styles.itemLast : null],
            colors: isOn ? SwitchBgColorsOn : SwitchBgColorsOff
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityLabel: item.accessibilityLabel,
            accessibilityHint: item.accessibilityHint,
            accessibilityState: {
              selected: isOn,
              checked: isOn
            }
          })), _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            style: {
              width: '100%',
              height: '100%'
            },
            activeOpacity: 0.8,
            onPress: function onPress() {
              _this.switch(index);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })), _react.default.createElement(_reactNative.View, {
            style: Styles.upper
          }, _react.default.createElement(_reactNative.View, {
            style: [Styles.indicator, isOn ? Styles.indicatorOn : Styles.indicatorOff]
          }))));
        });
      };

      return _this;
    }

    (0, _createClass2.default)(WallSwitch, [{
      key: "render",
      value: function render() {
        var items = this.props.items;

        if (!items || !items.length) {
          return null;
        }

        var length = items.length;
        return _react.default.createElement(_reactNative.View, {
          style: [Styles.container, {
            height: Heights[length],
            marginTop: MarginTops[length]
          }]
        }, this.getItems(items));
      }
    }]);
    return WallSwitch;
  }(_react.Component);

  exports.default = WallSwitch;
  WallSwitch.propTypes = {
    items: _propTypes.default.arrayOf(_propTypes.default.shape({
      isOn: _propTypes.default.bool,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onSwitch: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  WallSwitch.defaultProps = {
    items: [],
    onSwitch: _fns.log
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginHorizontal: (0, _sizes.adjustSize)(30),
      flexDirection: 'row',
      backgroundColor: '#CDCED0',
      borderRadius: (0, _sizes.adjustSize)(30),
      borderWidth: (0, _sizes.adjustSize)(6),
      borderColor: '#CDCED0',
      overflow: 'hidden'
    },
    item: {
      flex: 1,
      backgroundColor: '#F7F7F7',
      marginHorizontal: (0, _sizes.adjustSize)(3),
      alignItems: 'center'
    },
    itemOn: {
      marginTop: (0, _sizes.adjustSize)(30),
      paddingTop: (0, _sizes.adjustSize)(90),
      marginBottom: 0,
      paddingBottom: (0, _sizes.adjustSize)(60)
    },
    itemOff: {
      marginTop: 0,
      paddingTop: (0, _sizes.adjustSize)(120),
      marginBottom: (0, _sizes.adjustSize)(30),
      paddingBottom: (0, _sizes.adjustSize)(30)
    },
    itemFirst: {
      borderTopLeftRadius: (0, _sizes.adjustSize)(30),
      borderBottomLeftRadius: (0, _sizes.adjustSize)(30),
      borderTopRightRadius: 1,
      borderBottomRightRadius: 1
    },
    itemLast: {
      borderTopLeftRadius: 1,
      borderBottomLeftRadius: 1,
      borderTopRightRadius: (0, _sizes.adjustSize)(30),
      borderBottomRightRadius: (0, _sizes.adjustSize)(30)
    },
    upper: {
      flex: 1,
      marginTop: (0, _sizes.adjustSize)(30),
      alignItems: 'center'
    },
    indicator: {
      width: (0, _sizes.adjustSize)(84),
      height: (0, _sizes.adjustSize)(6),
      marginTop: (0, _sizes.adjustSize)(60)
    },
    indicatorOn: {
      backgroundColor: '#3CB3F7'
    },
    indicatorOff: {
      backgroundColor: '#A2AFC1'
    }
  });
},23146,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,14299,23068,23137,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _sizes = _$$_REQUIRE(_dependencyMap[10]);

  var _selectorWithButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _containerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var DoubleSelectors = function (_Component) {
    (0, _inherits2.default)(DoubleSelectors, _Component);

    function DoubleSelectors() {
      (0, _classCallCheck2.default)(this, DoubleSelectors);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DoubleSelectors).apply(this, arguments));
    }

    (0, _createClass2.default)(DoubleSelectors, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            title = _this$props.title,
            subtitle = _this$props.subtitle,
            themeColor = _this$props.themeColor,
            disabled = _this$props.disabled,
            secondShow = _this$props.secondShow,
            secondDisabled = _this$props.secondDisabled,
            first = _this$props.first,
            second = _this$props.second,
            hasShadow = _this$props.hasShadow;
        var Wrap = hasShadow ? _containerWithShadowAndSeparator.default : _react.Fragment;
        return _react.default.createElement(Wrap, {
          separatorStyle: Styles.separator
        }, _react.default.createElement(_selectorWithButton.default, (0, _extends2.default)({
          hasShadow: false,
          themeColor: themeColor,
          title: title,
          subtitle: subtitle,
          disabled: disabled
        }, first)), secondShow ? _react.default.createElement(_selectorWithButton.default, (0, _extends2.default)({
          hasShadow: false,
          themeColor: themeColor,
          disabled: secondDisabled || disabled
        }, second)) : null);
      }
    }]);
    return DoubleSelectors;
  }(_react.Component);

  exports.default = DoubleSelectors;
  DoubleSelectors.defaultProps = {
    title: '',
    subtitle: '',
    disabled: false,
    secondShow: true,
    secondDisabled: true,
    first: {
      items: []
    },
    second: {
      items: []
    },
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    separator: {
      marginHorizontal: (0, _sizes.adjustSize)(60)
    }
  });
},23149,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,23068,23152,23086]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "SelectorWithButton", {
    enumerable: true,
    get: function get() {
      return _SelectorWithButton.default;
    }
  });

  var _SelectorWithButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23152,[14305,23134]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fns = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var SourceCurtainPole = _$$_REQUIRE(_dependencyMap[14]);

  var SourceCurtainLight = _$$_REQUIRE(_dependencyMap[15]);

  var SourceCurtainDark = _$$_REQUIRE(_dependencyMap[16]);

  var SourceCurtainBg = _$$_REQUIRE(_dependencyMap[17]);

  var Width858 = (0, _sizes.adjustSize)(858);
  var Width429 = (0, _sizes.adjustSize)(429);
  var Width108 = (0, _sizes.adjustSize)(108);

  function getCurrentValue(type, isLeft, lastValue, moveX) {
    var min = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
    var max = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 100;
    var diffValue = 100 / (type === 0 ? Width429 : Width858) * moveX;
    var value = lastValue + (isLeft ? -1 : 1) * diffValue;
    return Math.min(max, Math.max(min, value));
  }

  var Curtain = function (_Component) {
    (0, _inherits2.default)(Curtain, _Component);

    function Curtain() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Curtain);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Curtain)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.currValue = 0;
      _this.lastValue = 0;
      _this.value = new _reactNative.Animated.Value(0);
      _this.leftX = new _reactNative.Animated.Value(0);
      _this.rightX = new _reactNative.Animated.Value(0);

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var onValueChange = _this.props.onValueChange;
        var targetValue = _this.lastValue;

        switch (actionName) {
          case 'increment':
            targetValue += 10;
            break;

          case 'decrement':
            targetValue -= 10;
            break;
        }

        targetValue = Math.min(100, Math.max(0, targetValue));

        _this.value.setValue(targetValue);

        _this.lastValue = targetValue;
        onValueChange(targetValue);
      };

      return _this;
    }

    (0, _createClass2.default)(Curtain, [{
      key: "animateToPosition",
      value: function animateToPosition(position) {
        var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 30;

        if (isNaN(position) || !isFinite(position)) {
          return;
        }

        this.stopAnimation();
        var currValue = this.currValue;
        this.aniPosition = _reactNative.Animated.timing(this.value, {
          toValue: position,
          duration: Math.abs(currValue - position) * duration,
          easing: _reactNative.Easing.inOut(_reactNative.Easing.linear)
        }).start();
      }
    }, {
      key: "stopAnimation",
      value: function stopAnimation() {
        this.aniPosition && this.aniPosition.stop();
      }
    }, {
      key: "initPanResponder",
      value: function initPanResponder() {
        this.panResponderLeft = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
            return true;
          },
          onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
            return true;
          },
          onPanResponderGrant: _fns.log,
          onPanResponderMove: _reactNative.Animated.event([null, {
            dx: this.leftX
          }]),
          onPanResponderRelease: this.touchEnd.bind(this),
          onPanResponderTerminate: this.touchEnd.bind(this)
        });
        this.panResponderRight = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
            return true;
          },
          onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
            return true;
          },
          onPanResponderGrant: _fns.log,
          onPanResponderMove: _reactNative.Animated.event([null, {
            dx: this.rightX
          }]),
          onPanResponderRelease: this.touchEnd.bind(this),
          onPanResponderTerminate: this.touchEnd.bind(this)
        });
      }
    }, {
      key: "touchEnd",
      value: function touchEnd() {
        this.lastValue = this.currValue;
        this.props.onValueChange(this.lastValue);
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var props = this.props;
        this.lastValue = nextProps.position;

        if (nextProps.type !== props.type) {
          this.initPanResponder(nextProps.type);
        }

        if (nextProps.position !== props.position) {
          this.animateToPosition(nextProps.position);
        }
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        var _this2 = this;

        this.leftX.addListener(function (e) {
          var currValue = getCurrentValue(_this2.props.type, true, _this2.lastValue, e.value);

          _this2.animateToPosition(currValue, 0);

          _this2.props.onValueChanging(currValue);
        });
        this.rightX.addListener(function (e) {
          var currValue = getCurrentValue(_this2.props.type, false, _this2.lastValue, e.value);

          _this2.animateToPosition(currValue, 0);

          _this2.props.onValueChanging(currValue);
        });
        this.initPanResponder(this.props.type);
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this3 = this;

        this.value.addListener(function (_ref2) {
          var value = _ref2.value;
          _this3.currValue = value;
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.stopAnimation();
      }
    }, {
      key: "getCurtains",
      value: function getCurtains() {
        var type = this.props.type;
        var ret = [];
        var l = type === 0 ? 7 : 13;

        for (var i = 0; i < l; i++) {
          ret.push(_react.default.createElement(_reactNative.Image, {
            key: String(i),
            style: Styles.curtainSingle,
            source: i % 2 === 0 ? SourceCurtainDark : SourceCurtainLight
          }));
        }

        return ret;
      }
    }, {
      key: "render",
      value: function render() {
        var type = this.props.type;
        var value = this.value;
        var curtains = this.getCurtains();
        var width = value.interpolate({
          inputRange: [0, 100],
          outputRange: type === 0 ? [Width429, Width108] : [Width858, Width108]
        });
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
          accessibilityLabel: this.props.accessibilityLabel || this.props.position + "%",
          accessibilityHint: this.props.accessibilityHint
        }), {
          accessibilityActions: [{
            name: 'increment'
          }, {
            name: 'decrement'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.Image, {
          style: Styles.bg,
          source: SourceCurtainBg
        }), _react.default.createElement(_reactNative.Image, {
          style: Styles.pole,
          source: SourceCurtainPole
        }), _react.default.createElement(_reactNative.View, {
          style: Styles.curtains
        }, [0, 1].indexOf(type) === -1 ? null : _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.curtainWrap
        }, this.panResponderLeft.panHandlers, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.Animated.View, {
          style: [Styles.curtain, Styles.curtainLeft, {
            width: width
          }]
        }, curtains, _react.default.createElement(_reactNative.View, {
          style: Styles.curtainBtn
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.curtainBtnInner
        })))), [0, 2].indexOf(type) === -1 ? null : _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.curtainWrap
        }, this.panResponderRight.panHandlers, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.Animated.View, {
          style: [Styles.curtain, Styles.curtainRight, {
            width: width
          }]
        }, curtains, _react.default.createElement(_reactNative.View, {
          style: Styles.curtainBtn
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.curtainBtnInner
        }))))));
      }
    }]);
    return Curtain;
  }(_react.Component);

  exports.default = Curtain;
  Curtain.propTypes = {
    type: _propTypes.default.oneOf([0, 1, 2]),
    position: _propTypes.default.number,
    onValueChanging: _propTypes.default.func,
    onValueChange: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Curtain.defaultProps = {
    type: 0,
    position: 0,
    onValueChanging: _fns.log,
    onValueChange: _fns.log
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center',
      marginTop: (0, _sizes.adjustSize)(249),
      paddingBottom: (0, _sizes.adjustSize)(60)
    },
    bg: {
      position: 'absolute',
      left: '50%',
      marginLeft: (0, _sizes.adjustSize)(-540),
      width: (0, _sizes.adjustSize)(1080),
      height: (0, _sizes.adjustSize)(879),
      resizeMode: 'contain'
    },
    pole: {
      width: (0, _sizes.adjustSize)(882),
      height: (0, _sizes.adjustSize)(21),
      resizeMode: 'contain'
    },
    curtains: {
      flexDirection: 'row',
      justifyContent: 'space-between',
      width: (0, _sizes.adjustSize)(858)
    },
    curtainWrap: {
      flex: 1,
      height: (0, _sizes.adjustSize)(858)
    },
    curtain: {
      position: 'absolute',
      height: (0, _sizes.adjustSize)(858),
      flexDirection: 'row',
      overflow: 'hidden'
    },
    curtainSingle: {
      flex: 1,
      height: (0, _sizes.adjustSize)(858)
    },
    curtainLeft: {
      left: 0
    },
    curtainRight: {
      right: 0,
      transform: [{
        scaleX: -1
      }]
    },
    curtainBtn: {
      position: 'absolute',
      width: (0, _sizes.adjustSize)(120),
      height: (0, _sizes.adjustSize)(120),
      top: '50%',
      marginTop: (0, _sizes.adjustSize)(-60),
      borderRadius: (0, _sizes.adjustSize)(60),
      right: 0,
      marginRight: (0, _sizes.adjustSize)(-60),
      justifyContent: 'center',
      backgroundColor: '#fff'
    },
    curtainBtnInner: {
      width: (0, _sizes.adjustSize)(9),
      height: (0, _sizes.adjustSize)(48),
      borderRadius: (0, _sizes.adjustSize)(6),
      backgroundColor: '#5898FF',
      marginLeft: (0, _sizes.adjustSize)(30)
    }
  });
},23155,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23137,22420,23158,23161,23164,23167]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 294,
    "height": 7,
    "scales": [2, 3],
    "hash": "5c656ab1687db8936983a7210b3a4118",
    "name": "curtain-pole",
    "type": "png"
  });
},23158,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 22,
    "height": 286,
    "scales": [2, 3],
    "hash": "2219fcc0db10734da3173b657bcc7764",
    "name": "curtain-light",
    "type": "png"
  });
},23161,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 22,
    "height": 286,
    "scales": [2, 3],
    "hash": "11212d789dc6f34a86845319d96fa8db",
    "name": "curtain-dark",
    "type": "png"
  });
},23164,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 360,
    "height": 293,
    "scales": [2, 3],
    "hash": "0267ff3dcfca2c2caf9e5a5d3b30c1f4",
    "name": "curtain-bg",
    "type": "png"
  });
},23167,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Radio = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fonts = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var CurtainStyle = function (_Component) {
    (0, _inherits2.default)(CurtainStyle, _Component);

    function CurtainStyle() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, CurtainStyle);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CurtainStyle)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onAccessibilityAction = function (_ref, id) {
        var actionName = _ref.nativeEvent.actionName;

        switch (actionName) {
          case 'activate':
            _this.onCheckChange(id);

            break;
        }
      };

      _this.onCheckChange = function (id) {
        var onValueChange = _this.props.onValueChange;

        if (typeof onValueChange === 'function') {
          onValueChange(id);
        }
      };

      return _this;
    }

    (0, _createClass2.default)(CurtainStyle, [{
      key: "getItems",
      value: function getItems() {
        var _this2 = this;

        var _this$props = this.props,
            _this$props$icons = _this$props.icons,
            icons = _this$props$icons === undefined ? [] : _this$props$icons,
            _this$props$titles = _this$props.titles,
            titles = _this$props$titles === undefined ? [] : _this$props$titles,
            _this$props$ids = _this$props.ids,
            ids = _this$props$ids === undefined ? [] : _this$props$ids,
            checkedId = _this$props.checkedId,
            disabled = _this$props.disabled,
            _this$props$accessibi = _this$props.accessibilityLabels,
            accessibilityLabels = _this$props$accessibi === undefined ? [] : _this$props$accessibi,
            _this$props$accessibi2 = _this$props.accessibilityHints,
            accessibilityHints = _this$props$accessibi2 === undefined ? [] : _this$props$accessibi2;
        return titles.map(function (_, index) {
          var title = titles[index];
          var icon = icons[index];
          var id = ids[index];
          return title && icon ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            key: index,
            style: Styles.item
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
            accessibilityLabel: accessibilityLabels[index],
            accessibilityHint: accessibilityHints[index],
            accessibilityState: {
              selected: checkedId === id,
              checked: checkedId === id,
              disabled: disabled
            }
          }), {
            accessibilityActions: [{
              name: 'activate'
            }],
            onAccessibilityAction: function onAccessibilityAction(e) {
              _this2.onAccessibilityAction(e, id);
            }
          }), _react.default.createElement(_reactNative.Image, {
            style: Styles.icon,
            source: icon
          }), _react.default.createElement(_reactNative.Text, {
            style: Styles.title
          }, title), _react.default.createElement(_Radio.default, {
            id: Number(id),
            disabled: disabled,
            isChecked: checkedId === id,
            changeCheck: _this2.onCheckChange,
            bigCircleStyle: {
              width: (0, _sizes.adjustSize)(60),
              height: (0, _sizes.adjustSize)(60),
              borderWidth: (0, _sizes.adjustSize)(12)
            },
            checkedBigCircleStyle: {
              borderColor: '#f0f0f0',
              borderColorChecked: '#32BAC0'
            },
            smallCircleBg: "#fff"
          })) : null;
        });
      }
    }, {
      key: "render",
      value: function render() {
        var items = this.getItems();
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, items);
      }
    }]);
    return CurtainStyle;
  }(_react.Component);

  exports.default = CurtainStyle;
  CurtainStyle.propTypes = {
    icons: _propTypes.default.array,
    titles: _propTypes.default.arrayOf(_propTypes.default.string),
    ids: _propTypes.default.array,
    checkedId: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    disabled: _propTypes.default.bool,
    onValueChange: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabels: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityLabel),
    accessibilityHints: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityHint)
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {},
    item: {
      marginTop: (0, _sizes.adjustSize)(30),
      marginHorizontal: (0, _sizes.adjustSize)(30),
      paddingLeft: (0, _sizes.adjustSize)(57),
      paddingRight: (0, _sizes.adjustSize)(60),
      paddingVertical: (0, _sizes.adjustSize)(54),
      flexDirection: 'row',
      alignItems: 'center',
      backgroundColor: '#fff'
    },
    icon: {
      width: (0, _sizes.adjustSize)(312),
      height: (0, _sizes.adjustSize)(306),
      resizeMode: 'contain',
      marginRight: (0, _sizes.adjustSize)(57)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(45),
      color: '#000',
      flex: 1
    }
  });
},23170,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22417,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _fns = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var PrimeButton = function (_Component) {
    (0, _inherits2.default)(PrimeButton, _Component);

    function PrimeButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, PrimeButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(PrimeButton)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onPress = function () {
        var onClick = _this.props.onClick;

        if (typeof onClick === 'function') {
          onClick();
        }
      };

      return _this;
    }

    (0, _createClass2.default)(PrimeButton, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            title = _this$props.title,
            themeColor = _this$props.themeColor,
            textColor = _this$props.textColor,
            disabled = _this$props.disabled;

        if (!title) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          style: [Styles.btn, themeColor ? {
            backgroundColor: themeColor,
            borderColor: themeColor
          } : null],
          onPress: this.onPress,
          disabled: disabled
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: disabled
          }
        })), _react.default.createElement(_reactNative.Text, {
          style: [Styles.title, textColor ? {
            color: textColor
          } : null]
        }, title)));
      }
    }]);
    return PrimeButton;
  }(_react.Component);

  exports.default = PrimeButton;
  PrimeButton.propTypes = {
    title: _propTypes.default.string,
    themeColor: _propTypes.default.any,
    textColor: _propTypes.default.any,
    onClick: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  PrimeButton.defaultProps = {
    title: '',
    themeColor: '',
    textColor: '',
    onClick: _fns.NOOP,
    disabled: false
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    btn: {
      height: (0, _sizes.adjustSize)(126),
      justifyContent: 'center',
      borderWidth: Math.min(1, (0, _sizes.adjustSize)(1.5)),
      borderColor: 'rgba(0, 0, 0, 0.15)',
      borderRadius: (0, _sizes.adjustSize)(15)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(39),
      textAlign: 'center',
      color: '#000'
    }
  });
},23173,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,23137,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var isAndroid = _reactNative.Platform.OS === 'android';

  var QAList = function (_Component) {
    (0, _inherits2.default)(QAList, _Component);

    function QAList() {
      (0, _classCallCheck2.default)(this, QAList);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(QAList).apply(this, arguments));
    }

    (0, _createClass2.default)(QAList, [{
      key: "getList",
      value: function getList() {
        var _this = this;

        var list = this.props.list;

        if (!list || !list.length) {
          return [];
        }

        return list.map(function (item, index) {
          var title = item.title,
              text = item.text;
          return _react.default.createElement(_reactNative.View, {
            key: String(index),
            style: Styles.item
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: Styles.title
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityLabel: item.titleAccessibilityLabel || title,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
          })), title || ''), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: Styles.text
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityLabel: item.textAccessibilityLabel || text,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
          })), text || '', isAndroid ? '\n' : ''));
        });
      }
    }, {
      key: "render",
      value: function render() {
        var list = this.getList();

        if (!list || !list.length) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, list);
      }
    }]);
    return QAList;
  }(_react.Component);

  exports.default = QAList;
  QAList.propTypes = {
    list: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      text: _propTypes.default.string,
      textAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      titleAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
    })),
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  QAList.defaultProps = {
    list: []
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    item: {
      marginBottom: (0, _sizes.adjustSize)(45)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      fontWeight: '600',
      color: '#4C4C4C'
    },
    text: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(42),
      lineHeight: (0, _sizes.adjustSize)(78),
      color: '#7F7F7F',
      marginTop: (0, _sizes.adjustSize)(9)
    }
  });
},23176,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[11]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _CircleButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _sizes = _$$_REQUIRE(_dependencyMap[15]);

  var _fns = _$$_REQUIRE(_dependencyMap[16]);

  var _fonts = _$$_REQUIRE(_dependencyMap[17]);

  var _colors = _$$_REQUIRE(_dependencyMap[18]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[19]);

  var MultiButtons = function (_Component) {
    (0, _inherits2.default)(MultiButtons, _Component);

    function MultiButtons() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, MultiButtons);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(MultiButtons)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        activeIndex: -1
      };

      _this.onClick = function (index) {
        var onClick = _this.props.onClick;

        if (typeof onClick === 'function') {
          onClick(index);
        }
      };

      _this.getSelectors = function () {
        var _this$props = _this.props,
            items = _this$props.items,
            themeColor = _this$props.themeColor,
            disabled = _this$props.disabled,
            switchDisabled = _this$props.switchDisabled;
        var itemCount = items.length;

        var sizeLevel = _this.getSizeLevel(items);

        return items.map(function (item, index) {
          var isHorizontal = itemCount === 2;
          var hasSeparator = isHorizontal;
          var hideTitle = itemCount >= 5 || items.findIndex(function (item) {
            return item && item.icon;
          }) === -1 || itemCount >= 3 && _this.context.language !== 'zh';
          return _react.default.createElement(_react.Fragment, {
            key: index
          }, hasSeparator && index > 0 ? _react.default.createElement(_reactNative.View, {
            style: Styles.separator
          }) : null, _react.default.createElement(_CircleButton.default, (0, _extends2.default)({
            titleIsTouchable: _this.props.titleIsTouchable,
            selected: _this.props.activeIndex === index,
            showHighlight: _this.props.activeIndex === -1,
            sizeLevel: sizeLevel,
            horizontal: isHorizontal,
            themeColor: themeColor,
            disabled: disabled || switchDisabled,
            title: hideTitle ? '' : item.title,
            icon: item.icon,
            iconSelected: item.iconSelected,
            iconText: item.title || '',
            onPress: function onPress() {
              _this.onClick(index);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityLabel: item.accessibilityLabel,
            accessibilityHint: item.accessibilityHint
          }))));
        });
      };

      return _this;
    }

    (0, _createClass2.default)(MultiButtons, [{
      key: "getSizeLevel",
      value: function getSizeLevel(items) {
        var itemCount = items.length;
        return itemCount <= 2 ? 0 : itemCount === 3 ? 1 : itemCount === 4 ? 2 : 3;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            title = _this$props2.title,
            items = _this$props2.items,
            hasShadow = _this$props2.hasShadow,
            showSwitch = _this$props2.showSwitch,
            disabled = _this$props2.disabled,
            switchOn = _this$props2.switchOn,
            themeColor = _this$props2.themeColor,
            onSwitch = _this$props2.onSwitch;

        if (!items || !items.length) {
          return null;
        }

        var Wrap = hasShadow ? _ContainerWithShadowAndSeparator.default : _react.Fragment;
        var sizeLevel = this.getSizeLevel(items);
        return _react.default.createElement(Wrap, null, _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, title || showSwitch ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [Styles.header, disabled ? {
            opacity: 0.3
          } : null]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: showSwitch ? _accessibilityHelper.AccessibilityRoles.switch : _accessibilityHelper.AccessibilityPropTypes.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: showSwitch ? {
            disabled: disabled,
            checked: switchOn
          } : {
            disabled: disabled
          }
        })), title ? _react.default.createElement(_reactNative.View, {
          style: Styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title)) : null, showSwitch ? _react.default.createElement(_Switch.default, (0, _extends2.default)({
          disabled: disabled,
          value: switchOn,
          onTintColor: themeColor || _colors.ColorGreen,
          onValueChange: onSwitch
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }))) : null) : null, _react.default.createElement(_reactNative.View, {
          style: [Styles.selectors, title || showSwitch ? Styles.selectorsWithHeader : null, items.length >= 4 ? null : [Styles.selectorsPadding0, Styles.selectorsPadding1, Styles.selectorsPadding2, Styles.selectorsPadding3][sizeLevel]]
        }, this.getSelectors())));
      }
    }]);
    return MultiButtons;
  }(_react.Component);

  exports.default = MultiButtons;
  MultiButtons.contextType = _configProvider.ConfigContext;
  MultiButtons.propTypes = {
    title: _propTypes.default.string,
    activeIndex: _propTypes.default.number,
    items: _propTypes.default.arrayOf(_propTypes.default.shape({
      icon: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
      iconSelected: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
      title: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onClick: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    switchDisabled: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    showSwitch: _propTypes.default.bool,
    switchOn: _propTypes.default.bool,
    titleIsTouchable: _propTypes.default.bool,
    onSwitch: _propTypes.default.func,
    hasShadow: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  MultiButtons.defaultProps = {
    title: '',
    activeIndex: -1,
    items: [],
    onClick: _fns.NOOP,
    disabled: false,
    switchDisabled: false,
    themeColor: '',
    showSwitch: false,
    switchOn: true,
    titleIsTouchable: false,
    onSwitch: _fns.log,
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      paddingHorizontal: (0, _sizes.adjustSize)(60)
    },
    header: {
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    titleContainer: {
      flex: 1,
      height: (0, _sizes.adjustSize)(156),
      flexDirection: 'row',
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: '#000'
    },
    selectors: {
      paddingVertical: (0, _sizes.adjustSize)(60),
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center'
    },
    selectorsWithHeader: {
      paddingTop: 0
    },
    selectorsPadding0: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorsPadding1: {
      paddingHorizontal: (0, _sizes.adjustSize)(78)
    },
    selectorsPadding2: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorsPadding3: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorWithHeader: {
      paddingTop: 0
    },
    separator: {
      width: 1,
      height: (0, _sizes.adjustSize)(120),
      backgroundColor: 'rgba(0, 0, 0, 0.15)',
      marginHorizontal: (0, _sizes.adjustSize)(60)
    }
  });
},23179,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22426,22450,23095,23089,23068,23137,23071,23074,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Consumable;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _PrimeButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _colors = _$$_REQUIRE(_dependencyMap[6]);

  var _fonts = _$$_REQUIRE(_dependencyMap[7]);

  var _sizes = _$$_REQUIRE(_dependencyMap[8]);

  var _fns = _$$_REQUIRE(_dependencyMap[9]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  function Consumable(props) {
    var title = props.title,
        titleColor = props.titleColor,
        subtitle = props.subtitle,
        subtitleColor = props.subtitleColor,
        reset = props.reset,
        buy = props.buy,
        icon = props.icon,
        onBuy = props.onBuy,
        onReset = props.onReset;
    return _react.default.createElement(_reactNative.View, {
      style: Styles.container
    }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
      style: Styles.content
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
    })), icon ? _react.default.createElement(_reactNative.Image, {
      style: Styles.imageWrap,
      source: icon
    }) : null, title ? _react.default.createElement(_reactNative.Text, {
      style: [Styles.title, titleColor ? {
        color: titleColor
      } : null]
    }, title) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
      style: [Styles.subtitle, subtitleColor ? {
        color: subtitleColor
      } : null]
    }, subtitle) : null), buy && reset ? _react.default.createElement(_reactNative.View, {
      style: Styles.buttons
    }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
      style: Styles.buttonWrap,
      activeOpacity: 0.8,
      onPress: onBuy
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
      accessibilityHint: props.buyAccessibilityHint
    })), _react.default.createElement(_reactNative.Text, {
      style: Styles.button
    }, buy)), _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
      style: [Styles.buttonWrap, {
        borderLeftWidth: _reactNative.StyleSheet.hairlineWidth
      }],
      activeOpacity: 0.8,
      onPress: onReset
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
      accessibilityHint: props.resetAccessibilityHint
    })), _react.default.createElement(_reactNative.Text, {
      style: Styles.button
    }, reset))) : buy ? _react.default.createElement(_PrimeButton.default, (0, _extends2.default)({
      title: buy,
      themeColor: _colors.ColorGreen,
      textColor: "#fff",
      onClick: onBuy
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
      accessibilityHint: props.buyAccessibilityHint
    }))) : reset ? _react.default.createElement(_PrimeButton.default, (0, _extends2.default)({
      title: reset,
      themeColor: _colors.ColorGreen,
      textColor: "#fff",
      onClick: onReset
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
      accessibilityHint: props.resetAccessibilityHint
    }))) : null);
  }

  Consumable.propTypes = {
    title: _propTypes.default.string,
    titleColor: _propTypes.default.any,
    subtitle: _propTypes.default.string,
    subtitleColor: _propTypes.default.any,
    reset: _propTypes.default.string,
    buy: _propTypes.default.string,
    icon: _propTypes.default.any,
    onBuy: _propTypes.default.func,
    onReset: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    resetAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    buyAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Consumable.defaultProps = {
    title: '',
    titleColor: '',
    subtitle: '',
    subtitleColor: '',
    reset: '',
    buy: '',
    icon: null,
    onBuy: _fns.NOOP,
    onReset: _fns.NOOP
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1
    },
    content: {
      flex: 1,
      marginTop: (0, _sizes.adjustSize)(144)
    },
    imageWrap: {
      width: (0, _sizes.adjustSize)(684),
      height: (0, _sizes.adjustSize)(1056),
      alignSelf: 'center',
      resizeMode: 'contain',
      marginBottom: (0, _sizes.adjustSize)(75)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(60),
      fontWeight: '700',
      color: '#000',
      alignSelf: 'center',
      marginHorizontal: (0, _sizes.adjustSize)(72),
      marginBottom: (0, _sizes.adjustSize)(6)
    },
    subtitle: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(54),
      color: '#000',
      alignSelf: 'center',
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    buttons: {
      flexDirection: 'row',
      marginHorizontal: (0, _sizes.adjustSize)(72),
      borderWidth: _reactNative.StyleSheet.hairlineWidth,
      borderColor: 'rgba(0, 0, 0, 0.2)',
      borderRadius: (0, _sizes.adjustSize)(15)
    },
    buttonWrap: {
      flex: 1,
      height: (0, _sizes.adjustSize)(144),
      justifyContent: 'center',
      alignItems: 'center',
      borderWidth: 0,
      borderColor: 'rgba(0, 0, 0, 0.2)'
    },
    button: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(39),
      color: '#4C4C4C'
    },
    normalButton: {
      marginHorizontal: 0,
      flex: 1
    }
  });
},23182,[14305,14344,10297,10033,10318,23173,23074,23071,23068,23137,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var ImageHeader = function (_Component) {
    (0, _inherits2.default)(ImageHeader, _Component);

    function ImageHeader() {
      (0, _classCallCheck2.default)(this, ImageHeader);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ImageHeader).apply(this, arguments));
    }

    (0, _createClass2.default)(ImageHeader, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            icon = _this$props.icon,
            iconStyle = _this$props.iconStyle,
            containerStyle = _this$props.containerStyle;

        if (!icon) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [Styles.container, containerStyle]
        }, _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
          style: [Styles.icon, iconStyle],
          source: icon
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.image,
          accessibilityLabel: this.props.accessibilityLabel
        }))));
      }
    }]);
    return ImageHeader;
  }(_react.Component);

  exports.default = ImageHeader;
  ImageHeader.propTypes = {
    icon: _propTypes.default.any,
    iconStyle: _propTypes.default.any,
    containerStyle: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      paddingTop: (0, _sizes.adjustSize)(210),
      paddingBottom: (0, _sizes.adjustSize)(63),
      alignSelf: 'center',
      alignItems: 'center'
    },
    icon: {
      width: (0, _sizes.adjustSize)(540),
      height: (0, _sizes.adjustSize)(540)
    }
  });
},23185,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "91d5bce9ca8be225bb2b053f4dc68ae6",
    "name": "record_n_dark",
    "type": "png"
  });
},23188,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "16f376276d72894454290db6b390e48b",
    "name": "record_p_dark",
    "type": "png"
  });
},23191,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "1b31138db705ad4f249356650ef77801",
    "name": "record_d_dark",
    "type": "png"
  });
},23194,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7086650f0de3e98e4bbe2ffe92d605b7",
    "name": "record_n_light",
    "type": "png"
  });
},23197,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8839aec54e1ba9da8b316b117dcb4957",
    "name": "record_p_light",
    "type": "png"
  });
},23200,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a510dc8a461e519c73a775bf00221200",
    "name": "record_d_light",
    "type": "png"
  });
},23203,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/dark",
    "width": 86,
    "height": 86,
    "scales": [2, 3],
    "hash": "799ff3d06b999ba716d765af25f4e91a",
    "name": "loading_empty_dark",
    "type": "png"
  });
},23206,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/light",
    "width": 86,
    "height": 86,
    "scales": [2, 3],
    "hash": "799ff3d06b999ba716d765af25f4e91a",
    "name": "loading_empty_light",
    "type": "png"
  });
},23209,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "PopButton", {
    enumerable: true,
    get: function get() {
      return _PopButton.PopButton;
    }
  });
  Object.defineProperty(exports, "ProgressButton", {
    enumerable: true,
    get: function get() {
      return _ProgressButton.default;
    }
  });

  var _PopButton = _$$_REQUIRE(_dependencyMap[1]);

  var _ProgressButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
},23212,[14305,23215,23218]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PopButton = PopButton;
  exports.default = exports.COLORTYPE = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[6]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[7]);

  var _font = _$$_REQUIRE(_dependencyMap[8]);

  var COLORTYPE = {
    BLUELAYERWHITE: 'blueLayerWhite',
    GRAYLAYERBLACK: 'grayLayerBlack',
    GRAYLAYERBLUE: 'grayLayerBlue'
  };
  exports.COLORTYPE = COLORTYPE;
  Object.freeze(COLORTYPE);

  function PopButton(props) {
    var _context$theme, _context$theme2, _context$theme3, _context$theme4, _context$theme5, _context$theme6, _context$theme7, _context$theme8, _context$theme9, _context$theme10, _context$theme11, _context$theme12, _context$theme13, _context$theme14, _context$theme15, _context$theme16, _context$theme17, _context$theme18;

    var context = (0, _react.useContext)(_configProvider.ConfigContext);
    var buttonStyle;
    var bgColorNormal;
    var bgColorPressed;
    var titleS;
    var titleC;

    switch (props.sizeLevel) {
      case 'small':
        buttonStyle = styles.smallButton;
        titleS = styles.smallTitle;
        titleC = (_context$theme = context.theme) == null ? undefined : _context$theme.colorPrimary;
        bgColorNormal = (_context$theme2 = context.theme) == null ? undefined : _context$theme2.colorBtnGreenOpaNor;
        bgColorPressed = (_context$theme3 = context.theme) == null ? undefined : _context$theme3.colorBtnGreenOpaPres;
        break;

      case 'medium':
        buttonStyle = styles.mediumButton;
        titleS = styles.mediumTitle;
        titleC = (_context$theme4 = context.theme) == null ? undefined : _context$theme4.colorToast;
        bgColorNormal = (_context$theme5 = context.theme) == null ? undefined : _context$theme5.colorBtnGrayNor;
        bgColorPressed = (_context$theme6 = context.theme) == null ? undefined : _context$theme6.colorBtnGrayPres;
        break;

      default:
        buttonStyle = styles.regularButton;
        titleS = styles.regularTitle;
        titleC = (_context$theme7 = context.theme) == null ? undefined : _context$theme7.colorWhite2;
        bgColorNormal = (_context$theme8 = context.theme) == null ? undefined : _context$theme8.colorBtnGreenNor;
        bgColorPressed = (_context$theme9 = context.theme) == null ? undefined : _context$theme9.colorBtnGreenPres;
        break;
    }

    if (props.colorType) {
      switch (props.colorType) {
        case COLORTYPE.BLUELAYERWHITE:
          titleC = (_context$theme10 = context.theme) == null ? undefined : _context$theme10.colorWhite2;
          bgColorNormal = (_context$theme11 = context.theme) == null ? undefined : _context$theme11.colorBtnGreenNor;
          bgColorPressed = (_context$theme12 = context.theme) == null ? undefined : _context$theme12.colorBtnGreenPres;
          break;

        case COLORTYPE.GRAYLAYERBLACK:
          titleC = (_context$theme13 = context.theme) == null ? undefined : _context$theme13.colorToast;
          bgColorNormal = (_context$theme14 = context.theme) == null ? undefined : _context$theme14.colorBtnGrayNor;
          bgColorPressed = (_context$theme15 = context.theme) == null ? undefined : _context$theme15.colorBtnGrayPres;
          break;

        case COLORTYPE.GRAYLAYERBLUE:
          titleC = (_context$theme16 = context.theme) == null ? undefined : _context$theme16.colorPrimary;
          bgColorNormal = (_context$theme17 = context.theme) == null ? undefined : _context$theme17.colorBtnGrayNor;
          bgColorPressed = (_context$theme18 = context.theme) == null ? undefined : _context$theme18.colorBtnGrayPres;
          break;

        default:
          break;
      }
    }

    if (props.backgroundColor) {
      bgColorNormal = props.backgroundColor.bgColorNormal;
      bgColorPressed = props.backgroundColor.bgColorPressed;
    }

    if (props.titleColor) {
      titleC = props.titleColor;
    }

    var disabled = props.disabled;
    var opacity = disabled ? 0.3 : 1;

    function sub6string(str) {
      var len = 0;
      var resStr = '';

      for (var i = 0; i < (str == null ? undefined : str.length); i++) {
        if (str.charCodeAt(i) > 127 || str.charCodeAt(i) === 94) {
          len += 2;
        } else {
          len += 1;
        }

        if (len <= 12) {
          resStr += str.charAt(i);
        } else {
          return resStr;
        }
      }

      return resStr;
    }

    return _react.default.createElement(_reactNative.View, {
      style: [styles.container, {
        opacity: opacity
      }]
    }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
      style: [buttonStyle, {
        backgroundColor: String(bgColorNormal),
        alignItems: 'center',
        justifyContent: 'center',
        flex: 1
      }, props.style],
      underlayColor: String(bgColorPressed),
      disabled: disabled,
      onPress: props.onPress,
      onLongPress: props.onLongPress
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: 'button',
      accessibilityHint: props.accessibilityHint,
      accessibilityLabel: props.accessibilityLabel,
      accessibilityValue: props.accessibilityValue,
      accessibilityState: {
        disabled: disabled
      }
    })), _react.default.createElement(_reactNative.View, {
      style: styles.titleContainer
    }, _react.default.createElement(_reactNative.Text, {
      style: [titleS, props.titleStyle, {
        color: String(titleC)
      }],
      adjustsFontSizeToFit: props.sizeLevel === 'small',
      allowFontScaling: props.allowFontScaling,
      numberOfLines: 1
    }, props.sizeLevel === 'small' ? sub6string(props.title) : props.title))));
  }

  PopButton.defaultProps = {
    sizeLevel: 'regular',
    title: '按钮文字',
    disabled: false,
    allowFontScaling: true
  };
  PopButton.COLORTYPE = COLORTYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      flex: 1
    },
    regularButton: {
      height: 46,
      width: 306,
      borderRadius: 23
    },
    mediumButton: {
      height: 46,
      width: 147,
      borderRadius: 23
    },
    smallButton: {
      height: 34,
      width: 80,
      borderRadius: 17
    },
    titleContainer: {
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center'
    },
    regularTitle: (0, _objectSpread2.default)({
      textAlign: 'center',
      maxWidth: 306,
      fontSize: 16,
      textAlignVertical: 'center'
    }, _font.FontPrimary),
    mediumTitle: (0, _objectSpread2.default)({
      textAlign: 'center',
      maxWidth: 147,
      fontSize: 16,
      textAlignVertical: 'center'
    }, _font.FontPrimary),
    smallTitle: (0, _objectSpread2.default)({
      textAlign: 'center',
      maxWidth: 80,
      fontSize: 13,
      textAlignVertical: 'center'
    }, _font.FontPrimary)
  });

  var _default = PopButton;
  exports.default = _default;
},23215,[14308,14305,14314,14344,10297,10033,22420,22426,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = ProgressButton;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[6]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[7]);

  var Progress = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _font = _$$_REQUIRE(_dependencyMap[10]);

  function ProgressButton(props) {
    var _context$theme, _context$theme2, _context$theme3, _context$theme4;

    var context = (0, _react.useContext)(_configProvider.ConfigContext);
    var colorScheme = context.colorScheme;
    var disabled = props.disabled,
        progress = props.progress,
        animated = props.animated;
    var buttonStyle;
    var titleStyle;
    var filledBgColor = (_context$theme = context.theme) == null ? undefined : _context$theme.colorBtnGreenNor;
    var unfilledBgColor;

    switch (props.sizeLevel) {
      case 'small':
        buttonStyle = styles.smallButton;
        unfilledBgColor = (_context$theme2 = context.theme) == null ? undefined : _context$theme2.colorBtnGreenOpaNor;
        titleStyle = styles.smallTitle;
        break;

      case 'medium':
        buttonStyle = styles.mediumButton;
        unfilledBgColor = (_context$theme3 = context.theme) == null ? undefined : _context$theme3.colorBtnGrayNor;
        titleStyle = styles.mediumTitle;
        break;

      default:
        buttonStyle = styles.regularButton;
        unfilledBgColor = (_context$theme4 = context.theme) == null ? undefined : _context$theme4.colorBtnGrayNor;
        titleStyle = styles.regularTitle;
        break;
    }

    var textColor = new _DynamicColor.default('#ffffff', 'rgba(255,255,255,0.90)');
    var color = progress > 0.48 ? textColor.color(colorScheme) : '#32BAC0';
    var disabledColor = new _DynamicColor.default('rgba(76,76,76,0.3)', 'rgba(255,255,255,0.3)').color(colorScheme);

    if (disabled) {
      var _context$theme5, _context$theme6;

      unfilledBgColor = (_context$theme5 = context.theme) == null ? undefined : _context$theme5.colorBtnGrayNor;
      filledBgColor = (_context$theme6 = context.theme) == null ? undefined : _context$theme6.colorBtnGrayPres;
    }

    if (props.style) {
      buttonStyle = props.style;
    }

    var textView = disabled ? _react.default.createElement(_reactNative.Text, {
      style: [titleStyle, {
        color: disabledColor
      }]
    }, "\u7B49\u5F85") : _react.default.createElement(_reactNative.Text, {
      style: [titleStyle, {
        color: color
      }]
    }, Math.floor(progress * 10000) / 100, "%");
    return _react.default.createElement(Progress.Bar, (0, _extends2.default)({
      progress: progress,
      style: [buttonStyle, {
        justifyContent: 'center'
      }],
      height: buttonStyle.height,
      width: buttonStyle.width,
      borderRadius: buttonStyle.borderRadius,
      useNativeDriver: true,
      color: String(filledBgColor),
      unfilledColor: String(unfilledBgColor),
      borderWidth: 0,
      animated: animated
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: 'progressbar',
      accessibilityHint: props.accessibilityHint,
      accessibilityLabel: props.accessibilityLabel,
      accessibilityValue: props.accessibilityValue,
      accessibilityState: {
        disabled: disabled
      }
    })), _react.default.createElement(_reactNative.View, {
      style: [styles.container]
    }, textView));
  }

  ProgressButton.defaultProps = {
    sizeLevel: 'regular',
    animated: true,
    disabled: false,
    progress: 0
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      position: 'absolute',
      backgroundColor: 'transparent',
      alignSelf: 'center'
    },
    regularButton: {
      height: 46,
      width: 306,
      borderRadius: 23
    },
    mediumButton: {
      height: 46,
      width: 147,
      borderRadius: 23
    },
    smallButton: {
      height: 34,
      width: 80,
      borderRadius: 17
    },
    regularTitle: (0, _objectSpread2.default)({
      fontSize: 16,
      lineHeight: 22
    }, _font.FontPrimary),
    mediumTitle: (0, _objectSpread2.default)({
      fontSize: 16,
      lineHeight: 22
    }, _font.FontPrimary),
    smallTitle: (0, _objectSpread2.default)({
      fontSize: 13,
      lineHeight: 18
    }, _font.FontPrimary)
  });
},23218,[14308,14305,14314,14344,10297,10033,22420,22426,13636,22435,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.TYPE = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _Icons = _$$_REQUIRE(_dependencyMap[13]);

  var _font = _$$_REQUIRE(_dependencyMap[14]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

  var TYPE = {
    DELETE: 'DELETE',
    SECURE: 'SECURE',
    NONE: 'NONE'
  };
  exports.TYPE = TYPE;
  Object.freeze(TYPE);

  var InputView = function (_React$Component) {
    (0, _inherits2.default)(InputView, _React$Component);

    function InputView(props) {
      var _this;

      (0, _classCallCheck2.default)(this, InputView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InputView).call(this, props));
      _this.state = {
        inputValue: _this.props.defaultValue || '',
        secureState: props.type === TYPE.SECURE,
        isFocused: false
      };
      _this._onChange = _this._onChange.bind((0, _assertThisInitialized2.default)(_this));
      _this._onFocus = _this._onFocus.bind((0, _assertThisInitialized2.default)(_this));
      return _this;
    }

    (0, _createClass2.default)(InputView, [{
      key: "_onChange",
      value: function _onChange(changeText) {
        var _this$props, _this$props$textInput;

        this.setState({
          inputValue: changeText
        });

        if (this.props.onChangeText) {
          var onChangeTextOrigin = this.props.onChangeText;

          if (onChangeTextOrigin instanceof Function) {
            onChangeTextOrigin(changeText);
          }
        }

        if ((_this$props = this.props) == null ? undefined : (_this$props$textInput = _this$props.textInputProps) == null ? undefined : _this$props$textInput.onChangeText) {
          var _onChangeTextOrigin = this.props.textInputProps.onChangeText;

          if (_onChangeTextOrigin instanceof Function) {
            _onChangeTextOrigin(changeText);
          }
        }
      }
    }, {
      key: "_onFocus",
      value: function _onFocus() {
        this.setState(function (prevState) {
          return {
            isFocused: !prevState.isFocused
          };
        });
      }
    }, {
      key: "_renderRightDeleteButtonView",
      value: function _renderRightDeleteButtonView() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.touchStyle,
          onPress: function onPress() {
            _this2._onChange('');
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            height: 25,
            width: 25
          },
          source: _Icons.Icons.inputDelete
        }));
      }
    }, {
      key: "_renderRightSecureButtonView",
      value: function _renderRightSecureButtonView() {
        var _this3 = this;

        var source = this.state.secureState ? _Icons.Icons.inputEyeSecure : _Icons.Icons.inputEye;
        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.touchStyle,
          activeOpacity: 1,
          onPress: function onPress() {
            _this3.setState(function (prevState) {
              return {
                secureState: !prevState.secureState
              };
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            height: 20,
            width: 20
          },
          source: source
        }));
      }
    }, {
      key: "_notNull",
      value: function _notNull(str) {
        var result = false;

        if (str === '' || str === undefined) {
          result = false;
        }

        if (str.length > 0) {
          result = true;
        }

        return result;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme, _this$context$theme2, _this$props$textInput2, _this$context$theme3, _this$context$theme5, _this$context$theme6, _this$context$theme7;

        var _this$state = this.state,
            inputValue = _this$state.inputValue,
            secureState = _this$state.secureState,
            isFocused = _this$state.isFocused;
        var _this$props2 = this.props,
            type = _this$props2.type,
            isCorrect = _this$props2.isCorrect;
        var greenBorder = this.props.borderColor ? this.props.borderColor : String((_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBtnGreenNor);
        var borderColor = isFocused && this._notNull(inputValue) ? greenBorder : 'transparent';

        _reactNativeUiKitten.RkTheme.setType('RkTextInput', 'textinput', {
          input: (0, _objectSpread2.default)({
            marginVertical: 0,
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorBlack,
            marginLeft: 0,
            fontSize: 16
          }, _font.FontPrimary),
          marginLeft: 16,
          flex: 1,
          underlineWidth: 0,
          marginVertical: 0,
          placeholderTextColor: ((_this$props$textInput2 = this.props.textInputProps) == null ? undefined : _this$props$textInput2.placeholderTextColor) || ((_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorPlaceHolder),
          minHeight: 40,
          borderRadius: 10
        });

        if (!isCorrect) {
          var _this$context$theme4;

          borderColor = String((_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorWarn);
        }

        if (type === TYPE.DELETE) {
          this.renderRight = this._renderRightDeleteButtonView();
        } else if (type === TYPE.SECURE) {
          this.renderRight = this._renderRightSecureButtonView();
        } else {
          this.renderRight = null;
        }

        var textInput = _react.default.createElement(_reactNativeUiKitten.RkTextInput, (0, _extends2.default)({
          placeholder: this.props.placeholder,
          value: inputValue
        }, this.props.textInputProps || {}, {
          onChangeText: this._onChange,
          secureTextEntry: secureState,
          onFocus: this._onFocus,
          onBlur: this._onFocus,
          selectionColor: String((_this$context$theme5 = this.context.theme) == null ? undefined : _this$context$theme5.colorBtnGreenNor),
          rkType: "textinput"
        }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props))));

        return _react.default.createElement(_reactNative.View, {
          style: [styles.containerPink, this.props.style, {
            borderColor: !isCorrect ? String((_this$context$theme6 = this.context.theme) == null ? undefined : _this$context$theme6.colorInputBorder) : 'transparent'
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            borderColor: borderColor,
            flex: 1,
            backgroundColor: String((_this$context$theme7 = this.context.theme) == null ? undefined : _this$context$theme7.colorInputBackground)
          }]
        }, textInput, this.renderRight));
      }
    }]);
    return InputView;
  }(_react.default.Component);

  InputView.TYPE = TYPE;
  InputView.contextType = _configProvider.ConfigContext;
  InputView.defaultProps = {
    type: TYPE.NONE,
    placeholder: '自定义占位字符',
    defaultValue: '自定义默认值',
    textInputProps: {
      autoFocus: true
    },
    isCorrect: true
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      height: 48,
      alignItems: 'center',
      justifyContent: 'flex-start',
      borderRadius: 10,
      borderWidth: 2
    },
    containerPink: {
      flexDirection: 'row',
      height: 54,
      alignItems: 'center',
      justifyContent: 'center',
      borderRadius: 12,
      borderWidth: 3
    },
    touchStyle: {
      marginHorizontal: 10,
      height: 22,
      width: 22,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    }
  });

  var _default = InputView;
  exports.default = _default;
},23221,[14305,14344,14314,14320,14323,14371,14377,14374,14386,10297,10033,11251,22420,23080,23041,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "796359b54e6ebf09c60cc97942c69dcf",
    "name": "delete-nor",
    "type": "png"
  });
},23224,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "81767e65ea332203ab28f5fc32f11695",
    "name": "eyeSecure_light",
    "type": "png"
  });
},23227,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "e8e6ac4aa47886abacbaafcc738edee7",
    "name": "eye_light",
    "type": "png"
  });
},23230,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "53f864756e8fabd4e6e89380ceba4454",
    "name": "L-loading",
    "type": "png"
  });
},23233,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "f22150a1c224dd7147d337586d7cfb0f",
    "name": "D-loading",
    "type": "png"
  });
},23236,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var json_stringify = _$$_REQUIRE(_dependencyMap[0]).stringify;

  var json_parse = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = function (options) {
    return {
      parse: json_parse(options),
      stringify: json_stringify
    };
  };

  module.exports.parse = json_parse();
  module.exports.stringify = json_stringify;
},23239,[23242,23248]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var BigNumber = _$$_REQUIRE(_dependencyMap[0]);

  var JSON = module.exports;

  (function () {
    'use strict';

    var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        gap,
        indent,
        meta = {
      '\b': '\\b',
      '\t': '\\t',
      '\n': '\\n',
      '\f': '\\f',
      '\r': '\\r',
      '"': '\\"',
      '\\': '\\\\'
    },
        rep;

    function quote(string) {
      escapable.lastIndex = 0;
      return escapable.test(string) ? '"' + string.replace(escapable, function (a) {
        var c = meta[a];
        return typeof c === 'string' ? c : "\\u" + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
      }) + '"' : '"' + string + '"';
    }

    function str(key, holder) {
      var i,
          k,
          v,
          length,
          mind = gap,
          partial,
          value = holder[key],
          isBigNumber = value != null && (value instanceof BigNumber || BigNumber.isBigNumber(value));

      if (value && typeof value === 'object' && typeof value.toJSON === 'function') {
        value = value.toJSON(key);
      }

      if (typeof rep === 'function') {
        value = rep.call(holder, key, value);
      }

      switch (typeof value) {
        case 'string':
          if (isBigNumber) {
            return value;
          } else {
            return quote(value);
          }

        case 'number':
          return isFinite(value) ? String(value) : 'null';

        case 'boolean':
        case 'null':
        case 'bigint':
          return String(value);

        case 'object':
          if (!value) {
            return 'null';
          }

          gap += indent;
          partial = [];

          if (Object.prototype.toString.apply(value) === '[object Array]') {
            length = value.length;

            for (i = 0; i < length; i += 1) {
              partial[i] = str(i, value) || 'null';
            }

            v = partial.length === 0 ? '[]' : gap ? '[\n' + gap + partial.join(',\n' + gap) + '\n' + mind + ']' : '[' + partial.join(',') + ']';
            gap = mind;
            return v;
          }

          if (rep && typeof rep === 'object') {
            length = rep.length;

            for (i = 0; i < length; i += 1) {
              if (typeof rep[i] === 'string') {
                k = rep[i];
                v = str(k, value);

                if (v) {
                  partial.push(quote(k) + (gap ? ': ' : ':') + v);
                }
              }
            }
          } else {
            Object.keys(value).forEach(function (k) {
              var v = str(k, value);

              if (v) {
                partial.push(quote(k) + (gap ? ': ' : ':') + v);
              }
            });
          }

          v = partial.length === 0 ? '{}' : gap ? '{\n' + gap + partial.join(',\n' + gap) + '\n' + mind + '}' : '{' + partial.join(',') + '}';
          gap = mind;
          return v;
      }
    }

    if (typeof JSON.stringify !== 'function') {
      JSON.stringify = function (value, replacer, space) {
        var i;
        gap = '';
        indent = '';

        if (typeof space === 'number') {
          for (i = 0; i < space; i += 1) {
            indent += ' ';
          }
        } else if (typeof space === 'string') {
          indent = space;
        }

        rep = replacer;

        if (replacer && typeof replacer !== 'function' && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {
          throw new Error('JSON.stringify');
        }

        return str('', {
          '': value
        });
      };
    }
  })();
},23242,[23245]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  ;

  (function (globalObject) {
    'use strict';

    var BigNumber,
        isNumeric = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
        mathceil = Math.ceil,
        mathfloor = Math.floor,
        bignumberError = '[BigNumber Error] ',
        tooManyDigits = "[BigNumber Error] Number primitive has more than 15 significant digits: ",
        BASE = 1e14,
        LOG_BASE = 14,
        MAX_SAFE_INTEGER = 0x1fffffffffffff,
        POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],
        SQRT_BASE = 1e7,
        MAX = 1E9;

    function clone(configObject) {
      var div,
          convertBase,
          parseNumeric,
          P = BigNumber.prototype = {
        constructor: BigNumber,
        toString: null,
        valueOf: null
      },
          ONE = new BigNumber(1),
          DECIMAL_PLACES = 20,
          ROUNDING_MODE = 4,
          TO_EXP_NEG = -7,
          TO_EXP_POS = 21,
          MIN_EXP = -10000000,
          MAX_EXP = 1e7,
          CRYPTO = false,
          MODULO_MODE = 1,
          POW_PRECISION = 0,
          FORMAT = {
        prefix: '',
        groupSize: 3,
        secondaryGroupSize: 0,
        groupSeparator: ',',
        decimalSeparator: '.',
        fractionGroupSize: 0,
        fractionGroupSeparator: '\xA0',
        suffix: ''
      },
          ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';

      function BigNumber(v, b) {
        var alphabet,
            c,
            caseChanged,
            e,
            i,
            isNum,
            len,
            str,
            x = this;
        if (!(x instanceof BigNumber)) return new BigNumber(v, b);

        if (b == null) {
          if (v && v._isBigNumber === true) {
            x.s = v.s;

            if (!v.c || v.e > MAX_EXP) {
              x.c = x.e = null;
            } else if (v.e < MIN_EXP) {
              x.c = [x.e = 0];
            } else {
              x.e = v.e;
              x.c = v.c.slice();
            }

            return;
          }

          if ((isNum = typeof v == 'number') && v * 0 == 0) {
            x.s = 1 / v < 0 ? (v = -v, -1) : 1;

            if (v === ~~v) {
              for (e = 0, i = v; i >= 10; i /= 10, e++) {
                ;
              }

              if (e > MAX_EXP) {
                x.c = x.e = null;
              } else {
                x.e = e;
                x.c = [v];
              }

              return;
            }

            str = String(v);
          } else {
            if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);
            x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;
          }

          if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');

          if ((i = str.search(/e/i)) > 0) {
            if (e < 0) e = i;
            e += +str.slice(i + 1);
            str = str.substring(0, i);
          } else if (e < 0) {
            e = str.length;
          }
        } else {
          intCheck(b, 2, ALPHABET.length, 'Base');

          if (b == 10) {
            x = new BigNumber(v);
            return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);
          }

          str = String(v);

          if (isNum = typeof v == 'number') {
            if (v * 0 != 0) return parseNumeric(x, str, isNum, b);
            x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;

            if (BigNumber.DEBUG && str.replace(/^0\.0*|\./, '').length > 15) {
              throw Error(tooManyDigits + v);
            }
          } else {
            x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;
          }

          alphabet = ALPHABET.slice(0, b);
          e = i = 0;

          for (len = str.length; i < len; i++) {
            if (alphabet.indexOf(c = str.charAt(i)) < 0) {
              if (c == '.') {
                if (i > e) {
                  e = len;
                  continue;
                }
              } else if (!caseChanged) {
                if (str == str.toUpperCase() && (str = str.toLowerCase()) || str == str.toLowerCase() && (str = str.toUpperCase())) {
                  caseChanged = true;
                  i = -1;
                  e = 0;
                  continue;
                }
              }

              return parseNumeric(x, String(v), isNum, b);
            }
          }

          isNum = false;
          str = convertBase(str, b, 10, x.s);
          if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');else e = str.length;
        }

        for (i = 0; str.charCodeAt(i) === 48; i++) {
          ;
        }

        for (len = str.length; str.charCodeAt(--len) === 48;) {
          ;
        }

        if (str = str.slice(i, ++len)) {
          len -= i;

          if (isNum && BigNumber.DEBUG && len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {
            throw Error(tooManyDigits + x.s * v);
          }

          if ((e = e - i - 1) > MAX_EXP) {
            x.c = x.e = null;
          } else if (e < MIN_EXP) {
            x.c = [x.e = 0];
          } else {
            x.e = e;
            x.c = [];
            i = (e + 1) % LOG_BASE;
            if (e < 0) i += LOG_BASE;

            if (i < len) {
              if (i) x.c.push(+str.slice(0, i));

              for (len -= LOG_BASE; i < len;) {
                x.c.push(+str.slice(i, i += LOG_BASE));
              }

              i = LOG_BASE - (str = str.slice(i)).length;
            } else {
              i -= len;
            }

            for (; i--; str += '0') {
              ;
            }

            x.c.push(+str);
          }
        } else {
          x.c = [x.e = 0];
        }
      }

      BigNumber.clone = clone;
      BigNumber.ROUND_UP = 0;
      BigNumber.ROUND_DOWN = 1;
      BigNumber.ROUND_CEIL = 2;
      BigNumber.ROUND_FLOOR = 3;
      BigNumber.ROUND_HALF_UP = 4;
      BigNumber.ROUND_HALF_DOWN = 5;
      BigNumber.ROUND_HALF_EVEN = 6;
      BigNumber.ROUND_HALF_CEIL = 7;
      BigNumber.ROUND_HALF_FLOOR = 8;
      BigNumber.EUCLID = 9;

      BigNumber.config = BigNumber.set = function (obj) {
        var p, v;

        if (obj != null) {
          if (typeof obj == 'object') {
            if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {
              v = obj[p];
              intCheck(v, 0, MAX, p);
              DECIMAL_PLACES = v;
            }

            if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {
              v = obj[p];
              intCheck(v, 0, 8, p);
              ROUNDING_MODE = v;
            }

            if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {
              v = obj[p];

              if (v && v.pop) {
                intCheck(v[0], -1000000000, 0, p);
                intCheck(v[1], 0, MAX, p);
                TO_EXP_NEG = v[0];
                TO_EXP_POS = v[1];
              } else {
                intCheck(v, -1000000000, MAX, p);
                TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);
              }
            }

            if (obj.hasOwnProperty(p = 'RANGE')) {
              v = obj[p];

              if (v && v.pop) {
                intCheck(v[0], -1000000000, -1, p);
                intCheck(v[1], 1, MAX, p);
                MIN_EXP = v[0];
                MAX_EXP = v[1];
              } else {
                intCheck(v, -1000000000, MAX, p);

                if (v) {
                  MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);
                } else {
                  throw Error(bignumberError + p + ' cannot be zero: ' + v);
                }
              }
            }

            if (obj.hasOwnProperty(p = 'CRYPTO')) {
              v = obj[p];

              if (v === !!v) {
                if (v) {
                  if (typeof crypto != 'undefined' && crypto && (crypto.getRandomValues || crypto.randomBytes)) {
                    CRYPTO = v;
                  } else {
                    CRYPTO = !v;
                    throw Error("[BigNumber Error] crypto unavailable");
                  }
                } else {
                  CRYPTO = v;
                }
              } else {
                throw Error(bignumberError + p + ' not true or false: ' + v);
              }
            }

            if (obj.hasOwnProperty(p = 'MODULO_MODE')) {
              v = obj[p];
              intCheck(v, 0, 9, p);
              MODULO_MODE = v;
            }

            if (obj.hasOwnProperty(p = 'POW_PRECISION')) {
              v = obj[p];
              intCheck(v, 0, MAX, p);
              POW_PRECISION = v;
            }

            if (obj.hasOwnProperty(p = 'FORMAT')) {
              v = obj[p];
              if (typeof v == 'object') FORMAT = v;else throw Error(bignumberError + p + ' not an object: ' + v);
            }

            if (obj.hasOwnProperty(p = 'ALPHABET')) {
              v = obj[p];

              if (typeof v == 'string' && !/^.$|[+-.\s]|(.).*\1/.test(v)) {
                ALPHABET = v;
              } else {
                throw Error(bignumberError + p + ' invalid: ' + v);
              }
            }
          } else {
            throw Error("[BigNumber Error] Object expected: " + obj);
          }
        }

        return {
          DECIMAL_PLACES: DECIMAL_PLACES,
          ROUNDING_MODE: ROUNDING_MODE,
          EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],
          RANGE: [MIN_EXP, MAX_EXP],
          CRYPTO: CRYPTO,
          MODULO_MODE: MODULO_MODE,
          POW_PRECISION: POW_PRECISION,
          FORMAT: FORMAT,
          ALPHABET: ALPHABET
        };
      };

      BigNumber.isBigNumber = function (v) {
        if (!v || v._isBigNumber !== true) return false;
        if (!BigNumber.DEBUG) return true;
        var i,
            n,
            c = v.c,
            e = v.e,
            s = v.s;

        out: if ({}.toString.call(c) == '[object Array]') {
          if ((s === 1 || s === -1) && e >= -1000000000 && e <= MAX && e === mathfloor(e)) {
            if (c[0] === 0) {
              if (e === 0 && c.length === 1) return true;
              break out;
            }

            i = (e + 1) % LOG_BASE;
            if (i < 1) i += LOG_BASE;

            if (String(c[0]).length == i) {
              for (i = 0; i < c.length; i++) {
                n = c[i];
                if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;
              }

              if (n !== 0) return true;
            }
          }
        } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {
          return true;
        }

        throw Error("[BigNumber Error] Invalid BigNumber: " + v);
      };

      BigNumber.maximum = BigNumber.max = function () {
        return maxOrMin(arguments, P.lt);
      };

      BigNumber.minimum = BigNumber.min = function () {
        return maxOrMin(arguments, P.gt);
      };

      BigNumber.random = function () {
        var pow2_53 = 0x20000000000000;
        var random53bitInt = Math.random() * pow2_53 & 0x1fffff ? function () {
          return mathfloor(Math.random() * pow2_53);
        } : function () {
          return (Math.random() * 0x40000000 | 0) * 0x800000 + (Math.random() * 0x800000 | 0);
        };
        return function (dp) {
          var a,
              b,
              e,
              k,
              v,
              i = 0,
              c = [],
              rand = new BigNumber(ONE);
          if (dp == null) dp = DECIMAL_PLACES;else intCheck(dp, 0, MAX);
          k = mathceil(dp / LOG_BASE);

          if (CRYPTO) {
            if (crypto.getRandomValues) {
              a = crypto.getRandomValues(new Uint32Array(k *= 2));

              for (; i < k;) {
                v = a[i] * 0x20000 + (a[i + 1] >>> 11);

                if (v >= 9e15) {
                  b = crypto.getRandomValues(new Uint32Array(2));
                  a[i] = b[0];
                  a[i + 1] = b[1];
                } else {
                  c.push(v % 1e14);
                  i += 2;
                }
              }

              i = k / 2;
            } else if (crypto.randomBytes) {
              a = crypto.randomBytes(k *= 7);

              for (; i < k;) {
                v = (a[i] & 31) * 0x1000000000000 + a[i + 1] * 0x10000000000 + a[i + 2] * 0x100000000 + a[i + 3] * 0x1000000 + (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];

                if (v >= 9e15) {
                  crypto.randomBytes(7).copy(a, i);
                } else {
                  c.push(v % 1e14);
                  i += 7;
                }
              }

              i = k / 7;
            } else {
              CRYPTO = false;
              throw Error("[BigNumber Error] crypto unavailable");
            }
          }

          if (!CRYPTO) {
            for (; i < k;) {
              v = random53bitInt();
              if (v < 9e15) c[i++] = v % 1e14;
            }
          }

          k = c[--i];
          dp %= LOG_BASE;

          if (k && dp) {
            v = POWS_TEN[LOG_BASE - dp];
            c[i] = mathfloor(k / v) * v;
          }

          for (; c[i] === 0; c.pop(), i--) {
            ;
          }

          if (i < 0) {
            c = [e = 0];
          } else {
            for (e = -1; c[0] === 0; c.splice(0, 1), e -= LOG_BASE) {
              ;
            }

            for (i = 1, v = c[0]; v >= 10; v /= 10, i++) {
              ;
            }

            if (i < LOG_BASE) e -= LOG_BASE - i;
          }

          rand.e = e;
          rand.c = c;
          return rand;
        };
      }();

      BigNumber.sum = function () {
        var i = 1,
            args = arguments,
            sum = new BigNumber(args[0]);

        for (; i < args.length;) {
          sum = sum.plus(args[i++]);
        }

        return sum;
      };

      convertBase = function () {
        var decimal = '0123456789';

        function toBaseOut(str, baseIn, baseOut, alphabet) {
          var j,
              arr = [0],
              arrL,
              i = 0,
              len = str.length;

          for (; i < len;) {
            for (arrL = arr.length; arrL--; arr[arrL] *= baseIn) {
              ;
            }

            arr[0] += alphabet.indexOf(str.charAt(i++));

            for (j = 0; j < arr.length; j++) {
              if (arr[j] > baseOut - 1) {
                if (arr[j + 1] == null) arr[j + 1] = 0;
                arr[j + 1] += arr[j] / baseOut | 0;
                arr[j] %= baseOut;
              }
            }
          }

          return arr.reverse();
        }

        return function (str, baseIn, baseOut, sign, callerIsToString) {
          var alphabet,
              d,
              e,
              k,
              r,
              x,
              xc,
              y,
              i = str.indexOf('.'),
              dp = DECIMAL_PLACES,
              rm = ROUNDING_MODE;

          if (i >= 0) {
            k = POW_PRECISION;
            POW_PRECISION = 0;
            str = str.replace('.', '');
            y = new BigNumber(baseIn);
            x = y.pow(str.length - i);
            POW_PRECISION = k;
            y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'), 10, baseOut, decimal);
            y.e = y.c.length;
          }

          xc = toBaseOut(str, baseIn, baseOut, callerIsToString ? (alphabet = ALPHABET, decimal) : (alphabet = decimal, ALPHABET));
          e = k = xc.length;

          for (; xc[--k] == 0; xc.pop()) {
            ;
          }

          if (!xc[0]) return alphabet.charAt(0);

          if (i < 0) {
            --e;
          } else {
            x.c = xc;
            x.e = e;
            x.s = sign;
            x = div(x, y, dp, rm, baseOut);
            xc = x.c;
            r = x.r;
            e = x.e;
          }

          d = e + dp + 1;
          i = xc[d];
          k = baseOut / 2;
          r = r || d < 0 || xc[d + 1] != null;
          r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : i > k || i == k && (rm == 4 || r || rm == 6 && xc[d - 1] & 1 || rm == (x.s < 0 ? 8 : 7));

          if (d < 1 || !xc[0]) {
            str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);
          } else {
            xc.length = d;

            if (r) {
              for (--baseOut; ++xc[--d] > baseOut;) {
                xc[d] = 0;

                if (!d) {
                  ++e;
                  xc = [1].concat(xc);
                }
              }
            }

            for (k = xc.length; !xc[--k];) {
              ;
            }

            for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++])) {
              ;
            }

            str = toFixedPoint(str, e, alphabet.charAt(0));
          }

          return str;
        };
      }();

      div = function () {
        function multiply(x, k, base) {
          var m,
              temp,
              xlo,
              xhi,
              carry = 0,
              i = x.length,
              klo = k % SQRT_BASE,
              khi = k / SQRT_BASE | 0;

          for (x = x.slice(); i--;) {
            xlo = x[i] % SQRT_BASE;
            xhi = x[i] / SQRT_BASE | 0;
            m = khi * xlo + xhi * klo;
            temp = klo * xlo + m % SQRT_BASE * SQRT_BASE + carry;
            carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;
            x[i] = temp % base;
          }

          if (carry) x = [carry].concat(x);
          return x;
        }

        function compare(a, b, aL, bL) {
          var i, cmp;

          if (aL != bL) {
            cmp = aL > bL ? 1 : -1;
          } else {
            for (i = cmp = 0; i < aL; i++) {
              if (a[i] != b[i]) {
                cmp = a[i] > b[i] ? 1 : -1;
                break;
              }
            }
          }

          return cmp;
        }

        function subtract(a, b, aL, base) {
          var i = 0;

          for (; aL--;) {
            a[aL] -= i;
            i = a[aL] < b[aL] ? 1 : 0;
            a[aL] = i * base + a[aL] - b[aL];
          }

          for (; !a[0] && a.length > 1; a.splice(0, 1)) {
            ;
          }
        }

        return function (x, y, dp, rm, base) {
          var cmp,
              e,
              i,
              more,
              n,
              prod,
              prodL,
              q,
              qc,
              rem,
              remL,
              rem0,
              xi,
              xL,
              yc0,
              yL,
              yz,
              s = x.s == y.s ? 1 : -1,
              xc = x.c,
              yc = y.c;

          if (!xc || !xc[0] || !yc || !yc[0]) {
            return new BigNumber(!x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN : xc && xc[0] == 0 || !yc ? s * 0 : s / 0);
          }

          q = new BigNumber(s);
          qc = q.c = [];
          e = x.e - y.e;
          s = dp + e + 1;

          if (!base) {
            base = BASE;
            e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);
            s = s / LOG_BASE | 0;
          }

          for (i = 0; yc[i] == (xc[i] || 0); i++) {
            ;
          }

          if (yc[i] > (xc[i] || 0)) e--;

          if (s < 0) {
            qc.push(1);
            more = true;
          } else {
            xL = xc.length;
            yL = yc.length;
            i = 0;
            s += 2;
            n = mathfloor(base / (yc[0] + 1));

            if (n > 1) {
              yc = multiply(yc, n, base);
              xc = multiply(xc, n, base);
              yL = yc.length;
              xL = xc.length;
            }

            xi = yL;
            rem = xc.slice(0, yL);
            remL = rem.length;

            for (; remL < yL; rem[remL++] = 0) {
              ;
            }

            yz = yc.slice();
            yz = [0].concat(yz);
            yc0 = yc[0];
            if (yc[1] >= base / 2) yc0++;

            do {
              n = 0;
              cmp = compare(yc, rem, yL, remL);

              if (cmp < 0) {
                rem0 = rem[0];
                if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);
                n = mathfloor(rem0 / yc0);

                if (n > 1) {
                  if (n >= base) n = base - 1;
                  prod = multiply(yc, n, base);
                  prodL = prod.length;
                  remL = rem.length;

                  while (compare(prod, rem, prodL, remL) == 1) {
                    n--;
                    subtract(prod, yL < prodL ? yz : yc, prodL, base);
                    prodL = prod.length;
                    cmp = 1;
                  }
                } else {
                  if (n == 0) {
                    cmp = n = 1;
                  }

                  prod = yc.slice();
                  prodL = prod.length;
                }

                if (prodL < remL) prod = [0].concat(prod);
                subtract(rem, prod, remL, base);
                remL = rem.length;

                if (cmp == -1) {
                  while (compare(yc, rem, yL, remL) < 1) {
                    n++;
                    subtract(rem, yL < remL ? yz : yc, remL, base);
                    remL = rem.length;
                  }
                }
              } else if (cmp === 0) {
                n++;
                rem = [0];
              }

              qc[i++] = n;

              if (rem[0]) {
                rem[remL++] = xc[xi] || 0;
              } else {
                rem = [xc[xi]];
                remL = 1;
              }
            } while ((xi++ < xL || rem[0] != null) && s--);

            more = rem[0] != null;
            if (!qc[0]) qc.splice(0, 1);
          }

          if (base == BASE) {
            for (i = 1, s = qc[0]; s >= 10; s /= 10, i++) {
              ;
            }

            round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);
          } else {
            q.e = e;
            q.r = +more;
          }

          return q;
        };
      }();

      function format(n, i, rm, id) {
        var c0, e, ne, len, str;
        if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
        if (!n.c) return n.toString();
        c0 = n.c[0];
        ne = n.e;

        if (i == null) {
          str = coeffToString(n.c);
          str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS) ? toExponential(str, ne) : toFixedPoint(str, ne, '0');
        } else {
          n = round(new BigNumber(n), i, rm);
          e = n.e;
          str = coeffToString(n.c);
          len = str.length;

          if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {
            for (; len < i; str += '0', len++) {
              ;
            }

            str = toExponential(str, e);
          } else {
            i -= ne;
            str = toFixedPoint(str, e, '0');

            if (e + 1 > len) {
              if (--i > 0) for (str += '.'; i--; str += '0') {
                ;
              }
            } else {
              i += e - len;

              if (i > 0) {
                if (e + 1 == len) str += '.';

                for (; i--; str += '0') {
                  ;
                }
              }
            }
          }
        }

        return n.s < 0 && c0 ? '-' + str : str;
      }

      function maxOrMin(args, method) {
        var n,
            i = 1,
            m = new BigNumber(args[0]);

        for (; i < args.length; i++) {
          n = new BigNumber(args[i]);

          if (!n.s) {
            m = n;
            break;
          } else if (method.call(m, n)) {
            m = n;
          }
        }

        return m;
      }

      function normalise(n, c, e) {
        var i = 1,
            j = c.length;

        for (; !c[--j]; c.pop()) {
          ;
        }

        for (j = c[0]; j >= 10; j /= 10, i++) {
          ;
        }

        if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {
          n.c = n.e = null;
        } else if (e < MIN_EXP) {
          n.c = [n.e = 0];
        } else {
          n.e = e;
          n.c = c;
        }

        return n;
      }

      parseNumeric = function () {
        var basePrefix = /^(-?)0([xbo])(?=\w[\w.]*$)/i,
            dotAfter = /^([^.]+)\.$/,
            dotBefore = /^\.([^.]+)$/,
            isInfinityOrNaN = /^-?(Infinity|NaN)$/,
            whitespaceOrPlus = /^\s*\+(?=[\w.])|^\s+|\s+$/g;
        return function (x, str, isNum, b) {
          var base,
              s = isNum ? str : str.replace(whitespaceOrPlus, '');

          if (isInfinityOrNaN.test(s)) {
            x.s = isNaN(s) ? null : s < 0 ? -1 : 1;
          } else {
            if (!isNum) {
              s = s.replace(basePrefix, function (m, p1, p2) {
                base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;
                return !b || b == base ? p1 : m;
              });

              if (b) {
                base = b;
                s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');
              }

              if (str != s) return new BigNumber(s, base);
            }

            if (BigNumber.DEBUG) {
              throw Error("[BigNumber Error] Not a" + (b ? ' base ' + b : '') + ' number: ' + str);
            }

            x.s = null;
          }

          x.c = x.e = null;
        };
      }();

      function round(x, sd, rm, r) {
        var d,
            i,
            j,
            k,
            n,
            ni,
            rd,
            xc = x.c,
            pows10 = POWS_TEN;

        if (xc) {
          out: {
            for (d = 1, k = xc[0]; k >= 10; k /= 10, d++) {
              ;
            }

            i = sd - d;

            if (i < 0) {
              i += LOG_BASE;
              j = sd;
              n = xc[ni = 0];
              rd = n / pows10[d - j - 1] % 10 | 0;
            } else {
              ni = mathceil((i + 1) / LOG_BASE);

              if (ni >= xc.length) {
                if (r) {
                  for (; xc.length <= ni; xc.push(0)) {
                    ;
                  }

                  n = rd = 0;
                  d = 1;
                  i %= LOG_BASE;
                  j = i - LOG_BASE + 1;
                } else {
                  break out;
                }
              } else {
                n = k = xc[ni];

                for (d = 1; k >= 10; k /= 10, d++) {
                  ;
                }

                i %= LOG_BASE;
                j = i - LOG_BASE + d;
                rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;
              }
            }

            r = r || sd < 0 || xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);
            r = rm < 4 ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 && (i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10 & 1 || rm == (x.s < 0 ? 8 : 7));

            if (sd < 1 || !xc[0]) {
              xc.length = 0;

              if (r) {
                sd -= x.e + 1;
                xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];
                x.e = -sd || 0;
              } else {
                xc[0] = x.e = 0;
              }

              return x;
            }

            if (i == 0) {
              xc.length = ni;
              k = 1;
              ni--;
            } else {
              xc.length = ni + 1;
              k = pows10[LOG_BASE - i];
              xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;
            }

            if (r) {
              for (;;) {
                if (ni == 0) {
                  for (i = 1, j = xc[0]; j >= 10; j /= 10, i++) {
                    ;
                  }

                  j = xc[0] += k;

                  for (k = 1; j >= 10; j /= 10, k++) {
                    ;
                  }

                  if (i != k) {
                    x.e++;
                    if (xc[0] == BASE) xc[0] = 1;
                  }

                  break;
                } else {
                  xc[ni] += k;
                  if (xc[ni] != BASE) break;
                  xc[ni--] = 0;
                  k = 1;
                }
              }
            }

            for (i = xc.length; xc[--i] === 0; xc.pop()) {
              ;
            }
          }

          if (x.e > MAX_EXP) {
            x.c = x.e = null;
          } else if (x.e < MIN_EXP) {
            x.c = [x.e = 0];
          }
        }

        return x;
      }

      function valueOf(n) {
        var str,
            e = n.e;
        if (e === null) return n.toString();
        str = coeffToString(n.c);
        str = e <= TO_EXP_NEG || e >= TO_EXP_POS ? toExponential(str, e) : toFixedPoint(str, e, '0');
        return n.s < 0 ? '-' + str : str;
      }

      P.absoluteValue = P.abs = function () {
        var x = new BigNumber(this);
        if (x.s < 0) x.s = 1;
        return x;
      };

      P.comparedTo = function (y, b) {
        return compare(this, new BigNumber(y, b));
      };

      P.decimalPlaces = P.dp = function (dp, rm) {
        var c,
            n,
            v,
            x = this;

        if (dp != null) {
          intCheck(dp, 0, MAX);
          if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
          return round(new BigNumber(x), dp + x.e + 1, rm);
        }

        if (!(c = x.c)) return null;
        n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;
        if (v = c[v]) for (; v % 10 == 0; v /= 10, n--) {
          ;
        }
        if (n < 0) n = 0;
        return n;
      };

      P.dividedBy = P.div = function (y, b) {
        return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);
      };

      P.dividedToIntegerBy = P.idiv = function (y, b) {
        return div(this, new BigNumber(y, b), 0, 1);
      };

      P.exponentiatedBy = P.pow = function (n, m) {
        var half,
            isModExp,
            i,
            k,
            more,
            nIsBig,
            nIsNeg,
            nIsOdd,
            y,
            x = this;
        n = new BigNumber(n);

        if (n.c && !n.isInteger()) {
          throw Error("[BigNumber Error] Exponent not an integer: " + valueOf(n));
        }

        if (m != null) m = new BigNumber(m);
        nIsBig = n.e > 14;

        if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {
          y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));
          return m ? y.mod(m) : y;
        }

        nIsNeg = n.s < 0;

        if (m) {
          if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);
          isModExp = !nIsNeg && x.isInteger() && m.isInteger();
          if (isModExp) x = x.mod(m);
        } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0 ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7 : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {
          k = x.s < 0 && isOdd(n) ? -0 : 0;
          if (x.e > -1) k = 1 / k;
          return new BigNumber(nIsNeg ? 1 / k : k);
        } else if (POW_PRECISION) {
          k = mathceil(POW_PRECISION / LOG_BASE + 2);
        }

        if (nIsBig) {
          half = new BigNumber(0.5);
          if (nIsNeg) n.s = 1;
          nIsOdd = isOdd(n);
        } else {
          i = Math.abs(+valueOf(n));
          nIsOdd = i % 2;
        }

        y = new BigNumber(ONE);

        for (;;) {
          if (nIsOdd) {
            y = y.times(x);
            if (!y.c) break;

            if (k) {
              if (y.c.length > k) y.c.length = k;
            } else if (isModExp) {
              y = y.mod(m);
            }
          }

          if (i) {
            i = mathfloor(i / 2);
            if (i === 0) break;
            nIsOdd = i % 2;
          } else {
            n = n.times(half);
            round(n, n.e + 1, 1);

            if (n.e > 14) {
              nIsOdd = isOdd(n);
            } else {
              i = +valueOf(n);
              if (i === 0) break;
              nIsOdd = i % 2;
            }
          }

          x = x.times(x);

          if (k) {
            if (x.c && x.c.length > k) x.c.length = k;
          } else if (isModExp) {
            x = x.mod(m);
          }
        }

        if (isModExp) return y;
        if (nIsNeg) y = ONE.div(y);
        return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;
      };

      P.integerValue = function (rm) {
        var n = new BigNumber(this);
        if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
        return round(n, n.e + 1, rm);
      };

      P.isEqualTo = P.eq = function (y, b) {
        return compare(this, new BigNumber(y, b)) === 0;
      };

      P.isFinite = function () {
        return !!this.c;
      };

      P.isGreaterThan = P.gt = function (y, b) {
        return compare(this, new BigNumber(y, b)) > 0;
      };

      P.isGreaterThanOrEqualTo = P.gte = function (y, b) {
        return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;
      };

      P.isInteger = function () {
        return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;
      };

      P.isLessThan = P.lt = function (y, b) {
        return compare(this, new BigNumber(y, b)) < 0;
      };

      P.isLessThanOrEqualTo = P.lte = function (y, b) {
        return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;
      };

      P.isNaN = function () {
        return !this.s;
      };

      P.isNegative = function () {
        return this.s < 0;
      };

      P.isPositive = function () {
        return this.s > 0;
      };

      P.isZero = function () {
        return !!this.c && this.c[0] == 0;
      };

      P.minus = function (y, b) {
        var i,
            j,
            t,
            xLTy,
            x = this,
            a = x.s;
        y = new BigNumber(y, b);
        b = y.s;
        if (!a || !b) return new BigNumber(NaN);

        if (a != b) {
          y.s = -b;
          return x.plus(y);
        }

        var xe = x.e / LOG_BASE,
            ye = y.e / LOG_BASE,
            xc = x.c,
            yc = y.c;

        if (!xe || !ye) {
          if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);

          if (!xc[0] || !yc[0]) {
            return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x : ROUNDING_MODE == 3 ? -0 : 0);
          }
        }

        xe = bitFloor(xe);
        ye = bitFloor(ye);
        xc = xc.slice();

        if (a = xe - ye) {
          if (xLTy = a < 0) {
            a = -a;
            t = xc;
          } else {
            ye = xe;
            t = yc;
          }

          t.reverse();

          for (b = a; b--; t.push(0)) {
            ;
          }

          t.reverse();
        } else {
          j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;

          for (a = b = 0; b < j; b++) {
            if (xc[b] != yc[b]) {
              xLTy = xc[b] < yc[b];
              break;
            }
          }
        }

        if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;
        b = (j = yc.length) - (i = xc.length);
        if (b > 0) for (; b--; xc[i++] = 0) {
          ;
        }
        b = 99999999999999;

        for (; j > a;) {
          if (xc[--j] < yc[j]) {
            for (i = j; i && !xc[--i]; xc[i] = b) {
              ;
            }

            --xc[i];
            xc[j] += BASE;
          }

          xc[j] -= yc[j];
        }

        for (; xc[0] == 0; xc.splice(0, 1), --ye) {
          ;
        }

        if (!xc[0]) {
          y.s = ROUNDING_MODE == 3 ? -1 : 1;
          y.c = [y.e = 0];
          return y;
        }

        return normalise(y, xc, ye);
      };

      P.modulo = P.mod = function (y, b) {
        var q,
            s,
            x = this;
        y = new BigNumber(y, b);

        if (!x.c || !y.s || y.c && !y.c[0]) {
          return new BigNumber(NaN);
        } else if (!y.c || x.c && !x.c[0]) {
          return new BigNumber(x);
        }

        if (MODULO_MODE == 9) {
          s = y.s;
          y.s = 1;
          q = div(x, y, 0, 3);
          y.s = s;
          q.s *= s;
        } else {
          q = div(x, y, 0, MODULO_MODE);
        }

        y = x.minus(q.times(y));
        if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;
        return y;
      };

      P.multipliedBy = P.times = function (y, b) {
        var c,
            e,
            i,
            j,
            k,
            m,
            xcL,
            xlo,
            xhi,
            ycL,
            ylo,
            yhi,
            zc,
            base,
            sqrtBase,
            x = this,
            xc = x.c,
            yc = (y = new BigNumber(y, b)).c;

        if (!xc || !yc || !xc[0] || !yc[0]) {
          if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {
            y.c = y.e = y.s = null;
          } else {
            y.s *= x.s;

            if (!xc || !yc) {
              y.c = y.e = null;
            } else {
              y.c = [0];
              y.e = 0;
            }
          }

          return y;
        }

        e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);
        y.s *= x.s;
        xcL = xc.length;
        ycL = yc.length;
        if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;

        for (i = xcL + ycL, zc = []; i--; zc.push(0)) {
          ;
        }

        base = BASE;
        sqrtBase = SQRT_BASE;

        for (i = ycL; --i >= 0;) {
          c = 0;
          ylo = yc[i] % sqrtBase;
          yhi = yc[i] / sqrtBase | 0;

          for (k = xcL, j = i + k; j > i;) {
            xlo = xc[--k] % sqrtBase;
            xhi = xc[k] / sqrtBase | 0;
            m = yhi * xlo + xhi * ylo;
            xlo = ylo * xlo + m % sqrtBase * sqrtBase + zc[j] + c;
            c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;
            zc[j--] = xlo % base;
          }

          zc[j] = c;
        }

        if (c) {
          ++e;
        } else {
          zc.splice(0, 1);
        }

        return normalise(y, zc, e);
      };

      P.negated = function () {
        var x = new BigNumber(this);
        x.s = -x.s || null;
        return x;
      };

      P.plus = function (y, b) {
        var t,
            x = this,
            a = x.s;
        y = new BigNumber(y, b);
        b = y.s;
        if (!a || !b) return new BigNumber(NaN);

        if (a != b) {
          y.s = -b;
          return x.minus(y);
        }

        var xe = x.e / LOG_BASE,
            ye = y.e / LOG_BASE,
            xc = x.c,
            yc = y.c;

        if (!xe || !ye) {
          if (!xc || !yc) return new BigNumber(a / 0);
          if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);
        }

        xe = bitFloor(xe);
        ye = bitFloor(ye);
        xc = xc.slice();

        if (a = xe - ye) {
          if (a > 0) {
            ye = xe;
            t = yc;
          } else {
            a = -a;
            t = xc;
          }

          t.reverse();

          for (; a--; t.push(0)) {
            ;
          }

          t.reverse();
        }

        a = xc.length;
        b = yc.length;
        if (a - b < 0) t = yc, yc = xc, xc = t, b = a;

        for (a = 0; b;) {
          a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;
          xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;
        }

        if (a) {
          xc = [a].concat(xc);
          ++ye;
        }

        return normalise(y, xc, ye);
      };

      P.precision = P.sd = function (sd, rm) {
        var c,
            n,
            v,
            x = this;

        if (sd != null && sd !== !!sd) {
          intCheck(sd, 1, MAX);
          if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
          return round(new BigNumber(x), sd, rm);
        }

        if (!(c = x.c)) return null;
        v = c.length - 1;
        n = v * LOG_BASE + 1;

        if (v = c[v]) {
          for (; v % 10 == 0; v /= 10, n--) {
            ;
          }

          for (v = c[0]; v >= 10; v /= 10, n++) {
            ;
          }
        }

        if (sd && x.e + 1 > n) n = x.e + 1;
        return n;
      };

      P.shiftedBy = function (k) {
        intCheck(k, -9007199254740991, MAX_SAFE_INTEGER);
        return this.times('1e' + k);
      };

      P.squareRoot = P.sqrt = function () {
        var m,
            n,
            r,
            rep,
            t,
            x = this,
            c = x.c,
            s = x.s,
            e = x.e,
            dp = DECIMAL_PLACES + 4,
            half = new BigNumber('0.5');

        if (s !== 1 || !c || !c[0]) {
          return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);
        }

        s = Math.sqrt(+valueOf(x));

        if (s == 0 || s == 1 / 0) {
          n = coeffToString(c);
          if ((n.length + e) % 2 == 0) n += '0';
          s = Math.sqrt(+n);
          e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);

          if (s == 1 / 0) {
            n = '1e' + e;
          } else {
            n = s.toExponential();
            n = n.slice(0, n.indexOf('e') + 1) + e;
          }

          r = new BigNumber(n);
        } else {
          r = new BigNumber(s + '');
        }

        if (r.c[0]) {
          e = r.e;
          s = e + dp;
          if (s < 3) s = 0;

          for (;;) {
            t = r;
            r = half.times(t.plus(div(x, t, dp, 1)));

            if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {
              if (r.e < e) --s;
              n = n.slice(s - 3, s + 1);

              if (n == '9999' || !rep && n == '4999') {
                if (!rep) {
                  round(t, t.e + DECIMAL_PLACES + 2, 0);

                  if (t.times(t).eq(x)) {
                    r = t;
                    break;
                  }
                }

                dp += 4;
                s += 4;
                rep = 1;
              } else {
                if (!+n || !+n.slice(1) && n.charAt(0) == '5') {
                  round(r, r.e + DECIMAL_PLACES + 2, 1);
                  m = !r.times(r).eq(x);
                }

                break;
              }
            }
          }
        }

        return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);
      };

      P.toExponential = function (dp, rm) {
        if (dp != null) {
          intCheck(dp, 0, MAX);
          dp++;
        }

        return format(this, dp, rm, 1);
      };

      P.toFixed = function (dp, rm) {
        if (dp != null) {
          intCheck(dp, 0, MAX);
          dp = dp + this.e + 1;
        }

        return format(this, dp, rm);
      };

      P.toFormat = function (dp, rm, format) {
        var str,
            x = this;

        if (format == null) {
          if (dp != null && rm && typeof rm == 'object') {
            format = rm;
            rm = null;
          } else if (dp && typeof dp == 'object') {
            format = dp;
            dp = rm = null;
          } else {
            format = FORMAT;
          }
        } else if (typeof format != 'object') {
          throw Error("[BigNumber Error] Argument not an object: " + format);
        }

        str = x.toFixed(dp, rm);

        if (x.c) {
          var i,
              arr = str.split('.'),
              g1 = +format.groupSize,
              g2 = +format.secondaryGroupSize,
              groupSeparator = format.groupSeparator || '',
              intPart = arr[0],
              fractionPart = arr[1],
              isNeg = x.s < 0,
              intDigits = isNeg ? intPart.slice(1) : intPart,
              len = intDigits.length;
          if (g2) i = g1, g1 = g2, g2 = i, len -= i;

          if (g1 > 0 && len > 0) {
            i = len % g1 || g1;
            intPart = intDigits.substr(0, i);

            for (; i < len; i += g1) {
              intPart += groupSeparator + intDigits.substr(i, g1);
            }

            if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);
            if (isNeg) intPart = '-' + intPart;
          }

          str = fractionPart ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize) ? fractionPart.replace(new RegExp('\\d{' + g2 + '}\\B', 'g'), '$&' + (format.fractionGroupSeparator || '')) : fractionPart) : intPart;
        }

        return (format.prefix || '') + str + (format.suffix || '');
      };

      P.toFraction = function (md) {
        var d,
            d0,
            d1,
            d2,
            e,
            exp,
            n,
            n0,
            n1,
            q,
            r,
            s,
            x = this,
            xc = x.c;

        if (md != null) {
          n = new BigNumber(md);

          if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {
            throw Error("[BigNumber Error] Argument " + (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));
          }
        }

        if (!xc) return new BigNumber(x);
        d = new BigNumber(ONE);
        n1 = d0 = new BigNumber(ONE);
        d1 = n0 = new BigNumber(ONE);
        s = coeffToString(xc);
        e = d.e = s.length - x.e - 1;
        d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];
        md = !md || n.comparedTo(d) > 0 ? e > 0 ? d : n1 : n;
        exp = MAX_EXP;
        MAX_EXP = 1 / 0;
        n = new BigNumber(s);
        n0.c[0] = 0;

        for (;;) {
          q = div(n, d, 0, 1);
          d2 = d0.plus(q.times(d1));
          if (d2.comparedTo(md) == 1) break;
          d0 = d1;
          d1 = d2;
          n1 = n0.plus(q.times(d2 = n1));
          n0 = d2;
          d = n.minus(q.times(d2 = d));
          n = d2;
        }

        d2 = div(md.minus(d0), d1, 0, 1);
        n0 = n0.plus(d2.times(n1));
        d0 = d0.plus(d2.times(d1));
        n0.s = n1.s = x.s;
        e = e * 2;
        r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];
        MAX_EXP = exp;
        return r;
      };

      P.toNumber = function () {
        return +valueOf(this);
      };

      P.toPrecision = function (sd, rm) {
        if (sd != null) intCheck(sd, 1, MAX);
        return format(this, sd, rm, 2);
      };

      P.toString = function (b) {
        var str,
            n = this,
            s = n.s,
            e = n.e;

        if (e === null) {
          if (s) {
            str = 'Infinity';
            if (s < 0) str = '-' + str;
          } else {
            str = 'NaN';
          }
        } else {
          if (b == null) {
            str = e <= TO_EXP_NEG || e >= TO_EXP_POS ? toExponential(coeffToString(n.c), e) : toFixedPoint(coeffToString(n.c), e, '0');
          } else if (b === 10) {
            n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);
            str = toFixedPoint(coeffToString(n.c), n.e, '0');
          } else {
            intCheck(b, 2, ALPHABET.length, 'Base');
            str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);
          }

          if (s < 0 && n.c[0]) str = '-' + str;
        }

        return str;
      };

      P.valueOf = P.toJSON = function () {
        return valueOf(this);
      };

      P._isBigNumber = true;
      if (configObject != null) BigNumber.set(configObject);
      return BigNumber;
    }

    function bitFloor(n) {
      var i = n | 0;
      return n > 0 || n === i ? i : i - 1;
    }

    function coeffToString(a) {
      var s,
          z,
          i = 1,
          j = a.length,
          r = a[0] + '';

      for (; i < j;) {
        s = a[i++] + '';
        z = LOG_BASE - s.length;

        for (; z--; s = '0' + s) {
          ;
        }

        r += s;
      }

      for (j = r.length; r.charCodeAt(--j) === 48;) {
        ;
      }

      return r.slice(0, j + 1 || 1);
    }

    function compare(x, y) {
      var a,
          b,
          xc = x.c,
          yc = y.c,
          i = x.s,
          j = y.s,
          k = x.e,
          l = y.e;
      if (!i || !j) return null;
      a = xc && !xc[0];
      b = yc && !yc[0];
      if (a || b) return a ? b ? 0 : -j : i;
      if (i != j) return i;
      a = i < 0;
      b = k == l;
      if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;
      if (!b) return k > l ^ a ? 1 : -1;
      j = (k = xc.length) < (l = yc.length) ? k : l;

      for (i = 0; i < j; i++) {
        if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;
      }

      return k == l ? 0 : k > l ^ a ? 1 : -1;
    }

    function intCheck(n, min, max, name) {
      if (n < min || n > max || n !== mathfloor(n)) {
        throw Error(bignumberError + (name || 'Argument') + (typeof n == 'number' ? n < min || n > max ? ' out of range: ' : ' not an integer: ' : ' not a primitive number: ') + String(n));
      }
    }

    function isOdd(n) {
      var k = n.c.length - 1;
      return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;
    }

    function toExponential(str, e) {
      return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) + (e < 0 ? 'e' : 'e+') + e;
    }

    function toFixedPoint(str, e, z) {
      var len, zs;

      if (e < 0) {
        for (zs = z + '.'; ++e; zs += z) {
          ;
        }

        str = zs + str;
      } else {
        len = str.length;

        if (++e > len) {
          for (zs = z, e -= len; --e; zs += z) {
            ;
          }

          str += zs;
        } else if (e < len) {
          str = str.slice(0, e) + '.' + str.slice(e);
        }
      }

      return str;
    }

    BigNumber = clone();
    BigNumber['default'] = BigNumber.BigNumber = BigNumber;

    if (typeof define == 'function' && define.amd) {
      define(function () {
        return BigNumber;
      });
    } else if (typeof module != 'undefined' && module.exports) {
      module.exports = BigNumber;
    } else {
      if (!globalObject) {
        globalObject = typeof self != 'undefined' && self ? self : window;
      }

      globalObject.BigNumber = BigNumber;
    }
  })(this);
},23245,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var BigNumber = null;
  var suspectProtoRx = /(?:_|\\u005[Ff])(?:_|\\u005[Ff])(?:p|\\u0070)(?:r|\\u0072)(?:o|\\u006[Ff])(?:t|\\u0074)(?:o|\\u006[Ff])(?:_|\\u005[Ff])(?:_|\\u005[Ff])/;
  var suspectConstructorRx = /(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)/;

  var json_parse = function json_parse(options) {
    'use strict';

    var _options = {
      strict: false,
      storeAsString: false,
      alwaysParseAsBig: false,
      useNativeBigInt: false,
      protoAction: 'error',
      constructorAction: 'error'
    };

    if (options !== undefined && options !== null) {
      if (options.strict === true) {
        _options.strict = true;
      }

      if (options.storeAsString === true) {
        _options.storeAsString = true;
      }

      _options.alwaysParseAsBig = options.alwaysParseAsBig === true ? options.alwaysParseAsBig : false;
      _options.useNativeBigInt = options.useNativeBigInt === true ? options.useNativeBigInt : false;

      if (typeof options.constructorAction !== 'undefined') {
        if (options.constructorAction === 'error' || options.constructorAction === 'ignore' || options.constructorAction === 'preserve') {
          _options.constructorAction = options.constructorAction;
        } else {
          throw new Error("Incorrect value for constructorAction option, must be \"error\", \"ignore\" or undefined but passed " + options.constructorAction);
        }
      }

      if (typeof options.protoAction !== 'undefined') {
        if (options.protoAction === 'error' || options.protoAction === 'ignore' || options.protoAction === 'preserve') {
          _options.protoAction = options.protoAction;
        } else {
          throw new Error("Incorrect value for protoAction option, must be \"error\", \"ignore\" or undefined but passed " + options.protoAction);
        }
      }
    }

    var at,
        ch,
        escapee = {
      '"': '"',
      '\\': '\\',
      '/': '/',
      b: '\b',
      f: '\f',
      n: '\n',
      r: '\r',
      t: '\t'
    },
        text,
        error = function error(m) {
      throw {
        name: 'SyntaxError',
        message: m,
        at: at,
        text: text
      };
    },
        next = function next(c) {
      if (c && c !== ch) {
        error("Expected '" + c + "' instead of '" + ch + "'");
      }

      ch = text.charAt(at);
      at += 1;
      return ch;
    },
        number = function number() {
      var number,
          string = '';

      if (ch === '-') {
        string = '-';
        next('-');
      }

      while (ch >= '0' && ch <= '9') {
        string += ch;
        next();
      }

      if (ch === '.') {
        string += '.';

        while (next() && ch >= '0' && ch <= '9') {
          string += ch;
        }
      }

      if (ch === 'e' || ch === 'E') {
        string += ch;
        next();

        if (ch === '-' || ch === '+') {
          string += ch;
          next();
        }

        while (ch >= '0' && ch <= '9') {
          string += ch;
          next();
        }
      }

      number = +string;

      if (!isFinite(number)) {
        error('Bad number');
      } else {
        if (BigNumber == null) BigNumber = _$$_REQUIRE(_dependencyMap[0]);
        if (string.length > 15) return _options.storeAsString ? string : _options.useNativeBigInt ? BigInt(string) : new BigNumber(string);else return !_options.alwaysParseAsBig ? number : _options.useNativeBigInt ? BigInt(number) : new BigNumber(number);
      }
    },
        string = function string() {
      var hex,
          i,
          string = '',
          uffff;

      if (ch === '"') {
        var startAt = at;

        while (next()) {
          if (ch === '"') {
            if (at - 1 > startAt) string += text.substring(startAt, at - 1);
            next();
            return string;
          }

          if (ch === '\\') {
            if (at - 1 > startAt) string += text.substring(startAt, at - 1);
            next();

            if (ch === 'u') {
              uffff = 0;

              for (i = 0; i < 4; i += 1) {
                hex = parseInt(next(), 16);

                if (!isFinite(hex)) {
                  break;
                }

                uffff = uffff * 16 + hex;
              }

              string += String.fromCharCode(uffff);
            } else if (typeof escapee[ch] === 'string') {
              string += escapee[ch];
            } else {
              break;
            }

            startAt = at;
          }
        }
      }

      error('Bad string');
    },
        white = function white() {
      while (ch && ch <= ' ') {
        next();
      }
    },
        word = function word() {
      switch (ch) {
        case 't':
          next('t');
          next('r');
          next('u');
          next('e');
          return true;

        case 'f':
          next('f');
          next('a');
          next('l');
          next('s');
          next('e');
          return false;

        case 'n':
          next('n');
          next('u');
          next('l');
          next('l');
          return null;
      }

      error("Unexpected '" + ch + "'");
    },
        value,
        array = function array() {
      var array = [];

      if (ch === '[') {
        next('[');
        white();

        if (ch === ']') {
          next(']');
          return array;
        }

        while (ch) {
          array.push(value());
          white();

          if (ch === ']') {
            next(']');
            return array;
          }

          next(',');
          white();
        }
      }

      error('Bad array');
    },
        object = function object() {
      var key,
          object = Object.create(null);

      if (ch === '{') {
        next('{');
        white();

        if (ch === '}') {
          next('}');
          return object;
        }

        while (ch) {
          key = string();
          white();
          next(':');

          if (_options.strict === true && Object.hasOwnProperty.call(object, key)) {
            error('Duplicate key "' + key + '"');
          }

          if (suspectProtoRx.test(key) === true) {
            if (_options.protoAction === 'error') {
              error('Object contains forbidden prototype property');
            } else if (_options.protoAction === 'ignore') {
              value();
            } else {
              object[key] = value();
            }
          } else if (suspectConstructorRx.test(key) === true) {
            if (_options.constructorAction === 'error') {
              error('Object contains forbidden constructor property');
            } else if (_options.constructorAction === 'ignore') {
              value();
            } else {
              object[key] = value();
            }
          } else {
            object[key] = value();
          }

          white();

          if (ch === '}') {
            next('}');
            return object;
          }

          next(',');
          white();
        }
      }

      error('Bad object');
    };

    value = function value() {
      white();

      switch (ch) {
        case '{':
          return object();

        case '[':
          return array();

        case '"':
          return string();

        case '-':
          return number();

        default:
          return ch >= '0' && ch <= '9' ? number() : word();
      }
    };

    return function (source, reviver) {
      var result;
      text = source + '';
      at = 0;
      ch = ' ';
      result = value();
      white();

      if (ch) {
        error('Syntax error');
      }

      return typeof reviver === 'function' ? function walk(holder, key) {
        var k,
            v,
            value = holder[key];

        if (value && typeof value === 'object') {
          Object.keys(value).forEach(function (k) {
            v = walk(value, k);

            if (v !== undefined) {
              value[k] = v;
            } else {
              delete value[k];
            }
          });
        }

        return reviver.call(holder, key, value);
      }({
        '': result
      }, '') : result;
    };
  };

  module.exports = json_parse;
},23248,[23245]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "c0c1a2c8287a20030e20c26350811688",
    "name": "orientation_n_dark",
    "type": "png"
  });
},23251,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "fc298c8501990d875df4a6b937ad9591",
    "name": "orientation_p_dark",
    "type": "png"
  });
},23254,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "efb4f84e005c31f56186fde68e17aae9",
    "name": "orientation_d_dark",
    "type": "png"
  });
},23257,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f13fb08b174c97de0f063b5406edcd19",
    "name": "save_n_dark",
    "type": "png"
  });
},23260,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a997ade362625254db11517feb4b57cd",
    "name": "save_p_dark",
    "type": "png"
  });
},23263,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7db694f5552517986af48ade14af5dee",
    "name": "save_d_dark",
    "type": "png"
  });
},23266,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "82363159dc3191db49504a2be0bc1b70",
    "name": "orientation_n_light",
    "type": "png"
  });
},23269,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "54941d4a547ad957ef4f3a08b4c78eb6",
    "name": "orientation_p_light",
    "type": "png"
  });
},23272,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8defaf1d8235ebb098fa04bcf12ed5ad",
    "name": "orientation_d_light",
    "type": "png"
  });
},23275,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "5ec1f8035bdf49848568663eab32f910",
    "name": "save_n_light",
    "type": "png"
  });
},23278,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "dc06f34ea6451e550d102bfb79af7f49",
    "name": "save_p_light",
    "type": "png"
  });
},23281,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9e9264292f6e90aa0a56465fe7227563",
    "name": "save_d_light",
    "type": "png"
  });
},23284,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/light",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "fc3543c773e475858fc7376b28eb58f7",
    "name": "sort_n_light",
    "type": "png"
  });
},23287,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/light",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "ed487fb6c76e248a78da223d29a7df33",
    "name": "sort_p_light",
    "type": "png"
  });
},23290,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/dark",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "a086d85121f6a4f64b59edcc4063b425",
    "name": "sort_n_dark",
    "type": "png"
  });
},23293,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/dark",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "1243c79fd61adc9fae869b00eaa7c09a",
    "name": "sort_p_dark",
    "type": "png"
  });
},23296,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _font = _$$_REQUIRE(_dependencyMap[17]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var cardMargin = 12;
  var cardWidth = width - 24;
  var radiusValue = 12;
  var cardPadding = 20;
  var tabHeight = 46;
  var dotSize = 39;
  var CARD_EXCESS_PADDING = 6;
  var MAX_TAB_SHOW_COUNT = 5;
  var CARD_TYPE = {
    TAB: 'tab',
    SLIDER: 'slider',
    DOT: 'dot'
  };
  Object.freeze(CARD_TYPE);

  var GearCard = function (_Component) {
    (0, _inherits2.default)(GearCard, _Component);

    function GearCard(props) {
      var _this;

      (0, _classCallCheck2.default)(this, GearCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(GearCard).call(this, props));

      _this.onPressButton = function (index) {
        var _this$props = _this.props,
            onPress = _this$props.onPress,
            onValueChange = _this$props.onValueChange;

        _this.setState({
          gearValue: index
        }, function () {
          _this.AnimatedMoveGreenTab(index);

          if (onPress) {
            onPress(index);
          }

          if (typeof onValueChange === 'function') {
            onValueChange(index);
          }
        });
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props2 = _this.props,
            disabledSwitch = _this$props2.disabledSwitch,
            switchValue = _this$props2.switchValue;

        if (disabledSwitch) {
          return;
        }

        var gearValue = _this.state.gearValue;
        var toValue = gearValue;

        if (actionName === 'activate' && _this.props.onSwitchValueChange) {
          _this.props.onSwitchValueChange(!switchValue);

          return;
        }

        if (actionName === 'increment') {
          toValue++;
        }

        if (actionName === 'decrement') {
          toValue--;
        }

        _this._onSliderValueChange(toValue, function () {
          _this.props.onSlidingComplete(toValue);
        });
      };

      if (!props.options || !(props.options instanceof Array) || props.options.length < 2) {
        _this.showNothing = true;
        return (0, _possibleConstructorReturn2.default)(_this);
      }

      if (props.maxDotShowCount > 9) {
        throw new Error('maxDotShowCount cannot exceed 9');
      }

      _this.getCorrectLayout(props);

      _this.state = {
        gearValue: _this.props.sliderProps.value
      };
      _this.currentIndex = new _reactNative.Animated.Value(props.currentIndex);
      return _this;
    }

    (0, _createClass2.default)(GearCard, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.AnimatedMoveGreenTab(this.props.currentIndex);
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        if (nextProps.options !== this.props.options) {
          this.getCorrectLayout(nextProps);
        }
      }
    }, {
      key: "getCorrectLayout",
      value: function getCorrectLayout(props) {
        var cardType = props.cardType,
            maxDotShowCount = props.maxDotShowCount;
        var maxShowCount = cardType === CARD_TYPE.TAB ? MAX_TAB_SHOW_COUNT : maxDotShowCount;
        var length = Math.min(props.options.length, maxShowCount);
        var cardLength = cardWidth - 40 - CARD_EXCESS_PADDING;

        if (props.cardType === CARD_TYPE.DOT) {
          cardLength += CARD_EXCESS_PADDING;
          this.buttonWidth = Math.floor(cardLength / length) > dotSize ? dotSize : Math.floor(cardLength / length);
          this.dotSize = this.buttonWidth === dotSize ? dotSize : this.buttonWidth;
          this.leftMargin = 0;
          this.margin = (cardLength - this.buttonWidth * length) / (length - 1);
          return;
        }

        this.buttonWidth = Math.floor(cardLength / length) - 10;
        this.tabWidth = this.buttonWidth;
        this.leftMargin = Math.abs(this.tabWidth - this.buttonWidth) / 2 + 3;
        this.margin = (cardLength - this.buttonWidth * length) / (length - 1);

        if (length === maxShowCount) {
          this.tabWidth = this.buttonWidth > 72 ? this.buttonWidth : 72;
          this.leftMargin = Math.abs(this.tabWidth - this.buttonWidth) / 2 + 3;
          this.margin = (cardLength - this.buttonWidth * length - this.leftMargin * 2 + CARD_EXCESS_PADDING) / (length - 1);
        }
      }
    }, {
      key: "renderUpView",
      value: function renderUpView() {
        if (!!this.props.title || this.props.showSwitch) {
          var _this$context$theme, _this$context$theme2;

          var unlimitedHeightEnable = this.props.unlimitedHeightEnable;
          return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            style: [styles.upViewContainer, unlimitedHeightEnable || !this.props.allowFontScaling ? {
              height: undefined
            } : {}]
          }, !this.props.onSwitchValueChange ? (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
            accessibilityLabel: this.props.accessibilityLabel || this.props.title,
            accessibilityHint: this.props.accessibilityHint
          }) : (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.switch,
            accessibilityLabel: this.props.accessibilityLabel || this.props.title,
            accessibilityHint: this.props.accessibilityHint,
            accessibilityState: {
              disabled: this.props.disabledSwitch,
              checked: this.props.switchValue
            }
          }), {
            accessibilityActions: !this.props.onSwitchValueChange ? [] : [{
              name: 'activate'
            }],
            onAccessibilityAction: !this.props.onSwitchValueChange ? null : this.onAccessibilityAction
          }), _react.default.createElement(_reactNative.View, {
            style: styles.titleViewStyle
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            allowFontScaling: this.props.allowFontScaling,
            numberOfLines: this.props.titleNumberOfLines,
            ellipsizeMode: "tail",
            style: [styles.titleStyle, unlimitedHeightEnable ? {
              lineHeight: undefined
            } : {}, {
              color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBlack
            }, this.props.titleStyle]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })), this.props.title), this.props.subtitle ? _react.default.createElement(_reactNative.View, {
            style: styles.gearStyle
          }, _react.default.createElement(_reactNative.View, {
            style: [styles.separatorCol]
          }), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            numberOfLines: this.props.subtitleNumberOfLines,
            ellipsizeMode: "tail",
            allowFontScaling: this.props.allowFontScaling,
            style: [unlimitedHeightEnable ? {
              lineHeight: undefined
            } : {}, (0, _objectSpread2.default)({
              fontSize: 12,
              color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayLighter
            }, _font.FontSecondary), this.props.subtitleStyle]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })), this.props.subtitle)) : null), this.props.showSwitch ? _react.default.createElement(_reactNative.View, {
            style: styles.right
          }, _react.default.createElement(_Switch.default, (0, _extends2.default)({
            style: this.props.switchStyle,
            value: this.props.switchValue,
            disabled: this.props.disabledSwitch,
            tintColor: this.props.tintColor,
            onTintColor: this.props.onTintColor,
            onValueChange: this.props.onSwitchValueChange
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })))) : null);
        }

        return null;
      }
    }, {
      key: "renderAnimatedView",
      value: function renderAnimatedView() {
        var _this$props$options, _this$props$options2;

        var isTab;
        if (this.props.cardType === CARD_TYPE.TAB) isTab = true;else if (this.props.cardType === CARD_TYPE.DOT && ((_this$props$options = this.props.options) == null ? undefined : _this$props$options.length) < 10 && ((_this$props$options2 = this.props.options) == null ? undefined : _this$props$options2.length) > 1) isTab = false;
        return _react.default.createElement(_reactNative.Animated.View, {
          style: {
            height: isTab ? tabHeight : this.dotSize,
            borderRadius: isTab ? 23 : this.dotSize / 2,
            width: isTab ? this.tabWidth : this.dotSize,
            backgroundColor: this.context.theme.colorPrimary,
            position: 'absolute',
            transform: [{
              translateX: this.currentIndex.interpolate(this.getLeftInterpolate())
            }],
            opacity: this.props.disabledGear ? 0.3 : 1,
            top: isTab ? 3 : 23 - this.dotSize / 2
          }
        });
      }
    }, {
      key: "renderGear",
      value: function renderGear() {
        var _this2 = this;

        if (this.props.cardType === CARD_TYPE.SLIDER) {
          var _this$context$theme3, _this$context$theme4, _this$context$theme5;

          var sliderProps = this.props.sliderProps;
          var sliderStyle = this.props.sliderStyle || {
            minimumTrackTintColor: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorPrimary,
            maximumTrackTintColor: (_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorGearBackground,
            thumbTintColor: (_this$context$theme5 = this.context.theme) == null ? undefined : _this$context$theme5.colorWhite2
          };
          return _react.default.createElement(_SlideGear.default, (0, _extends2.default)({
            options: this.props.options,
            value: this.state.gearValue,
            containerStyle: {
              height: 46,
              marginTop: 8
            },
            showEndText: sliderProps.showEndText,
            onValueChange: function onValueChange(value) {
              return _this2._onSliderValueChange(value);
            },
            onSlidingComplete: function onSlidingComplete(value) {
              return _this2.props.onSlidingComplete(value);
            },
            minimumTrackTintColor: sliderStyle.minimumTrackTintColor,
            maximumTrackTintColor: sliderStyle.maximumTrackTintColor,
            blockStyle: {
              backgroundColor: sliderStyle.thumbTintColor
            },
            disabled: this.props.disabledGear
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
            accessibilityLabel: this.props.accessibilityLabel,
            accessibilityHint: this.props.accessibilityHint,
            accessibilityState: {
              disabled: this.props.disabledGear
            },
            accessibilityValue: {
              value: this.state.gearValue
            }
          }), {
            accessibilityActions: [{
              name: 'increment'
            }, {
              name: 'decrement'
            }],
            onAccessibilityAction: this.onAccessibilityAction
          }));
        }

        var _this$props3 = this.props,
            cardType = _this$props3.cardType,
            maxDotShowCount = _this$props3.maxDotShowCount,
            optionGearBackgroundColor = _this$props3.optionGearBackgroundColor;
        var viewStyle = {};

        if (this.props.cardType === CARD_TYPE.TAB) {
          viewStyle = [styles.gearTabContainer, {
            backgroundColor: optionGearBackgroundColor || this.context.theme.colorGearBackground
          }];
        } else {
          viewStyle = [styles.gearDotContainer, {
            backgroundColor: optionGearBackgroundColor || 'transparent'
          }];
        }

        var _this$context$theme6 = this.context.theme,
            colorGrayLight = _this$context$theme6.colorGrayLight,
            colorWhite2 = _this$context$theme6.colorWhite2;
        var scrollViewWidth = this.props.options.length * (this.buttonWidth + this.margin) + 2 * this.leftMargin;
        var newScrollViewWidth = cardType === CARD_TYPE.TAB ? scrollViewWidth - CARD_EXCESS_PADDING : scrollViewWidth;
        var maxShowCount = cardType === CARD_TYPE.TAB ? MAX_TAB_SHOW_COUNT : maxDotShowCount;
        var gearTabContainerStyle = this.props.options.length <= maxShowCount ? {
          flex: 1
        } : {
          width: newScrollViewWidth
        };
        return _react.default.createElement(_reactNative.ScrollView, {
          alwaysBounceHorizontal: false,
          contentContainerStyle: gearTabContainerStyle,
          horizontal: true,
          showsHorizontalScrollIndicator: false
        }, _react.default.createElement(_reactNative.View, {
          style: [viewStyle, gearTabContainerStyle]
        }, this.renderAnimatedView(), _react.default.createElement(_reactNative.View, {
          style: [this.props.disabledGear ? {
            opacity: 0.3
          } : {}, styles.gearStyle]
        }, this.props.options.map(function (option, index) {
          return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            key: option,
            onPress: function onPress() {
              return _this2.onPressButton(index);
            },
            activeOpacity: 1,
            disabled: _this2.props.disabledGear,
            style: [styles.textContainer, {
              width: _this2.buttonWidth
            }, index == 0 ? {
              marginLeft: _this2.leftMargin
            } : {
              marginLeft: _this2.margin
            }]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.tab,
            accessibilityLabel: option,
            accessibilityHint: option,
            accessibilityState: {
              disabled: _this2.props.disabledGear,
              selected: index === _this2.state.gearValue
            }
          })), _react.default.createElement(_reactNative.Animated.Text, {
            ellipsizeMode: "tail",
            style: [styles.gearText, _this2.props.gearTextStyle, {
              color: _this2.state.gearValue === index ? colorWhite2 : colorGrayLight
            }]
          }, option));
        }))));
      }
    }, {
      key: "AnimatedMoveGreenTab",
      value: function AnimatedMoveGreenTab(index) {
        _reactNative.Animated.timing(this.currentIndex, {
          toValue: index,
          duration: this.props.duration,
          useNativeDriver: true
        }).start();
      }
    }, {
      key: "getLeftInterpolate",
      value: function getLeftInterpolate() {
        var _this3 = this;

        var _this$props4 = this.props,
            cardType = _this$props4.cardType,
            maxDotShowCount = _this$props4.maxDotShowCount,
            options = _this$props4.options;
        var maxShowCount = cardType === CARD_TYPE.TAB ? MAX_TAB_SHOW_COUNT : maxDotShowCount;
        var length = Math.min(options.length, maxShowCount);
        var inputRange = Array.from({
          length: length
        }).map(function (_value, idx) {
          return idx;
        });
        var outputRange = inputRange.map(function (i) {
          var value = i * (_this3.buttonWidth + _this3.margin) + _this3.leftMargin;

          if (_this3.props.cardType === CARD_TYPE.TAB && length === 5) {
            value -= (_this3.tabWidth - _this3.buttonWidth) / 2;
          }

          return value;
        });
        return {
          inputRange: inputRange,
          outputRange: outputRange
        };
      }
    }, {
      key: "renderInnerView",
      value: function renderInnerView() {
        return _react.default.createElement(_reactNative.View, {
          style: styles.innerView
        }, this.renderUpView(), this.renderGear());
      }
    }, {
      key: "render",
      value: function render() {
        if (this.showNothing) return null;
        var cardHeight = 143;
        if (!this.props.title && !this.props.showSwitch) cardHeight = 95;
        if (this.props.unlimitedHeightEnable) cardHeight = undefined;

        var cardStyle = _reactNative.StyleSheet.flatten([{
          width: cardWidth,
          height: cardHeight,
          borderRadius: radiusValue
        }, this.props.cardStyle]);

        return _react.default.createElement(_Card.default, {
          innerView: this.renderInnerView(),
          cardStyle: cardStyle,
          showShadow: false,
          allowFontScaling: this.props.allowFontScaling,
          unlimitedHeightEnable: this.props.unlimitedHeightEnable
        });
      }
    }, {
      key: "_onSliderValueChange",
      value: function _onSliderValueChange(value) {
        var _this4 = this;

        this.setState({
          gearValue: value
        }, function () {
          if (typeof _this4.props.onValueChange === 'function') {
            _this4.props.onValueChange(value);
          }
        });

        if (this.props.onSliderValueChange) {
          this.props.onSliderValueChange(value);
        }
      }
    }]);
    return GearCard;
  }(_react.Component);

  GearCard.propTypes = {
    cardType: _propTypes.default.oneOf([CARD_TYPE.DOT, CARD_TYPE.SLIDER, CARD_TYPE.TAB]),
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    titleStyle: _propTypes.default.object,
    subtitleStyle: _propTypes.default.object,
    gearTextStyle: _propTypes.default.object,
    cardStyle: _propTypes.default.object,
    showSwitch: _propTypes.default.bool,
    switchStyle: _propTypes.default.object,
    disabledSwitch: _propTypes.default.bool,
    disabledGear: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    options: _propTypes.default.array,
    onSwitchValueChange: _propTypes.default.func,
    switchValue: _propTypes.default.bool,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    onPress: _propTypes.default.func,
    duration: _propTypes.default.number,
    currentIndex: _propTypes.default.number,
    sliderProps: _propTypes.default.object,
    sliderStyle: _propTypes.default.object,
    onSliderValueChange: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    maxDotShowCount: _propTypes.default.number,
    onValueChange: _propTypes.default.func,
    optionGearBackgroundColor: _propTypes.default.string
  };
  GearCard.defaultProps = {
    cardType: CARD_TYPE.TAB,
    duration: 200,
    currentIndex: 0,
    showSwitch: false,
    titleNumberOfLines: 1,
    subtitleNumberOfLines: 1,
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    disabledSwitch: false,
    disabledGear: false,
    sliderProps: {
      value: 0,
      showDots: 0,
      showEndText: true
    },
    maxDotShowCount: 9
  };
  GearCard.contextType = _configProvider.ConfigContext;
  GearCard.CARD_TYPE = CARD_TYPE;

  var styles = _reactNative.StyleSheet.create({
    innerView: {
      marginHorizontal: cardPadding,
      marginTop: 14,
      marginBottom: 17,
      flex: 1
    },
    upViewContainer: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      height: 24,
      marginBottom: 18
    },
    gearTabContainer: {
      height: 52,
      flexDirection: 'row',
      borderRadius: 26,
      marginBottom: 13,
      marginTop: 8
    },
    gearDotContainer: {
      height: 46,
      flexDirection: 'row',
      alignItems: 'center',
      marginTop: 8,
      marginBottom: 13
    },
    titleStyle: (0, _objectSpread2.default)({
      fontSize: 14,
      lineHeight: 19
    }, _font.FontPrimary),
    textContainer: {
      height: tabHeight,
      justifyContent: 'center',
      alignItems: 'center'
    },
    gearText: (0, _objectSpread2.default)({
      fontSize: 13
    }, _font.FontSecondary),
    right: {
      alignItems: 'flex-end',
      maxWidth: 70,
      marginLeft: 20
    },
    separatorCol: {
      height: 14,
      width: 0.5,
      marginHorizontal: 10,
      backgroundColor: 'rgba(0,0,0,0.2)'
    },
    dotView: {
      top: 21,
      height: 4,
      width: 4,
      borderRadius: 2,
      backgroundColor: '#999999',
      position: 'absolute'
    },
    gearStyle: {
      flexDirection: 'row',
      flex: 1,
      alignItems: 'center'
    },
    titleViewStyle: {
      flexDirection: 'row',
      flex: 1,
      marginRight: 10
    }
  });

  var _default = GearCard;
  exports.default = _default;
},23299,[14308,14305,14314,14344,14320,14323,14371,14377,14386,10318,10297,10033,22450,22426,22864,22897,22420,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _resources = _$$_REQUIRE(_dependencyMap[12]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _popButton = _$$_REQUIRE(_dependencyMap[16]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[18]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[19]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var radiusValue = 12;
  var cardHeight = 89;
  var marginHor = 20;
  var iconViewLength = 43;
  var TYPE = {
    SWITCH: 'switch',
    CHOICE: 'choice',
    BUTTON: 'button',
    ARROW: 'arrow',
    NONE: 'none'
  };
  Object.freeze(TYPE);
  var CARD_RADIUS_TYPE = {
    ALL: 'all',
    NONE: 'none',
    TOP: 'top',
    BOTTOM: 'bottom'
  };

  var ListCard = function (_React$Component) {
    (0, _inherits2.default)(ListCard, _React$Component);

    function ListCard(props) {
      var _CARD_RADIUS_TYPE$ALL;

      var _this;

      (0, _classCallCheck2.default)(this, ListCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListCard).call(this, props));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;

        if (_this.props.disabled) {
          return;
        }

        if (actionName === 'activate') {
          var _this$props$switchOpt, _this$props$switchOpt2, _this$props$choiceOpt, _this$props$choiceOpt2, _this$props$buttonOpt;

          if (_this.props.type === TYPE.SWITCH) (_this$props$switchOpt = _this.props.switchOption) == null ? undefined : _this$props$switchOpt.onSwitchValueChange(!((_this$props$switchOpt2 = _this.props.switchOption) == null ? undefined : _this$props$switchOpt2.switchValue));else if (_this.props.type === TYPE.CHOICE) (_this$props$choiceOpt = _this.props.choiceOption) == null ? undefined : _this$props$choiceOpt.onValueChange(!((_this$props$choiceOpt2 = _this.props.choiceOption) == null ? undefined : _this$props$choiceOpt2.checked));else if (_this.props.type === TYPE.BUTTON) (_this$props$buttonOpt = _this.props.buttonOption) == null ? undefined : _this$props$buttonOpt.onPress();
        }
      };

      _this.radius = (_CARD_RADIUS_TYPE$ALL = {}, (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.ALL, {
        borderRadius: radiusValue
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.NONE, {
        borderRadius: 0
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.TOP, {
        borderTopLeftRadius: radiusValue,
        borderTopRightRadius: radiusValue
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.BOTTOM, {
        borderBottomLeftRadius: radiusValue,
        borderBottomRightRadius: radiusValue
      }), _CARD_RADIUS_TYPE$ALL)[props.radiusType];
      return _this;
    }

    (0, _createClass2.default)(ListCard, [{
      key: "renderIcon",
      value: function renderIcon() {
        return this.props.icon ? _react.default.createElement(_reactNative.View, {
          style: [styles.iconViewStyle, {
            backgroundColor: this.props.themeColor,
            opacity: this.props.disabled ? 0.3 : 1
          }]
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.iconStyle,
          source: this.props.icon
        })) : null;
      }
    }, {
      key: "renderText",
      value: function renderText() {
        var _this$context$theme, _this$context$theme2, _this$context$theme3;

        var adaptedFontStyle = {};

        if (this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            lineHeight: undefined
          };
        }

        var valueStyle = {
          textAlignVertical: 'center',
          textAlign: 'right'
        };
        var textViewStyle = {
          flex: 1,
          flexDirection: 'row'
        };
        var fontFamily = {};

        if (_reactNative.Platform.OS === 'android') {
          fontFamily = {
            fontFamily: 'KMedium'
          };
        }

        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 1 : this.props.subtitleNumberOfLines;
        var valueLine = this.props.valueNumberOfLines == undefined ? 2 : this.props.valueNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        if (subtitleLine < 0) subtitleLine = 0;
        if (valueLine < 0) valueLine = 0;
        return _react.default.createElement(_reactNative.View, {
          style: [textViewStyle, {
            opacity: this.props.disabled ? 0.3 : 1
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleView
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: titleLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [styles.title, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBlack
          }, fontFamily, adaptedFontStyle, this.props.titleStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: subtitleLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [styles.subtitle, {
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayLighter
          }, adaptedFontStyle, this.props.subtitleStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle) : null), this.props.value && (this.props.type === TYPE.NONE || this.props.type === TYPE.ARROW) ? _react.default.createElement(_reactNative.View, {
          style: styles.valueText
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: valueLine,
          allowFontScaling: this.props.allowFontScaling,
          ellipsizeMode: "tail",
          style: [styles.subtitle, {
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayLighter
          }, valueStyle, adaptedFontStyle, this.props.valueStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.value)) : null);
      }
    }, {
      key: "renderRight",
      value: function renderRight() {
        var _this$props$buttonOpt2, _this$props$buttonOpt3, _this$props$buttonOpt4, _this$props$buttonOpt5, _this$props$buttonOpt6, _this$props$buttonOpt7, _this$props$choiceOpt3, _this$props$choiceOpt4, _this$props$choiceOpt5, _this$props$switchOpt3, _this$props$switchOpt4, _this$props$switchOpt5, _this$props$switchOpt6, _this$props$switchOpt7;

        var component = {};
        if (this.props.type === TYPE.NONE) return null;else if (this.props.type === TYPE.ARROW) component = _react.default.createElement(_reactNative.Image, {
          style: styles.arrowIcon,
          source: _resources.Images.common.right_arrow
        });else if (this.props.type === TYPE.BUTTON) component = _react.default.createElement(_popButton.PopButton, {
          sizeLevel: 'small',
          title: (_this$props$buttonOpt2 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt2.title,
          backgroundColor: (_this$props$buttonOpt3 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt3.backgroundColor,
          titleStyle: (_this$props$buttonOpt4 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt4.titleStyle,
          titleColor: (_this$props$buttonOpt5 = this.props.buttonOption) == null ? undefined : (_this$props$buttonOpt6 = _this$props$buttonOpt5.titleStyle) == null ? undefined : _this$props$buttonOpt6.color,
          disabled: this.props.disabled,
          allowFontScaling: this.props.allowFontScaling,
          onPress: (_this$props$buttonOpt7 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt7.onPress
        });else if (this.props.type === TYPE.CHOICE) component = _react.default.createElement(_Checkbox.default, {
          style: {
            width: 22,
            height: 22,
            borderRadius: 11
          },
          disabled: this.props.disabled,
          checked: (_this$props$choiceOpt3 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt3.checked,
          checkedColor: (_this$props$choiceOpt4 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt4.checkedColor,
          onValueChange: (_this$props$choiceOpt5 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt5.onValueChange
        });else if (this.props.type === TYPE.SWITCH) component = _react.default.createElement(_Switch.default, {
          style: (_this$props$switchOpt3 = this.props.switchOption) == null ? undefined : _this$props$switchOpt3.switchStyle,
          value: (_this$props$switchOpt4 = this.props.switchOption) == null ? undefined : _this$props$switchOpt4.switchValue,
          disabled: this.props.disabled,
          tintColor: (_this$props$switchOpt5 = this.props.switchOption) == null ? undefined : _this$props$switchOpt5.tintColor,
          onTintColor: (_this$props$switchOpt6 = this.props.switchOption) == null ? undefined : _this$props$switchOpt6.onTintColor,
          onValueChange: (_this$props$switchOpt7 = this.props.switchOption) == null ? undefined : _this$props$switchOpt7.onSwitchValueChange
        });
        return _react.default.createElement(_reactNative.View, {
          style: [styles.right, this.props.type === TYPE.BUTTON ? {
            flex: 1,
            maxWidth: 80
          } : {}]
        }, component);
      }
    }, {
      key: "renderListCard",
      value: function renderListCard() {
        var _this$props$choiceOpt6, _this$props$switchOpt8;

        return _react.default.createElement(_reactNative.View, {
          style: styles.cardView
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: styles.innerView
        }, this.props.onPress ? (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: this.props.accessibilityLabel || this.props.title,
          accessibilityHint: this.props.accessibilityHint
        }) : (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: this.props.accessibilityLabel || this.props.title,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: this.props.disabled,
            checked: (_this$props$choiceOpt6 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt6.checked,
            value: (_this$props$switchOpt8 = this.props.switchOption) == null ? undefined : _this$props$switchOpt8.switchValue
          }
        }), {
          accessibilityActions: this.props.onPress ? [] : [{
            name: 'activate'
          }],
          onAccessibilityAction: this.props.onPress ? null : this.onAccessibilityAction
        }), this.renderIcon(), this.renderText(), this.renderRight()), this.renderSeparator());
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme4;

        var cardStyle = this.props.cardStyle;
        var defaultCardStyle = {
          height: cardHeight,
          marginTop: 0,
          width: width - 20
        };
        var mixCardStyle = (0, _objectSpread2.default)({}, defaultCardStyle, cardStyle, this.radius, !this.props.allowFontScaling || this.props.unlimitedHeightEnable ? {
          height: undefined
        } : {});
        return _react.default.createElement(_Card.default, {
          showShadow: false,
          onPress: this.props.onPress,
          innerView: this.renderListCard(),
          cardStyle: mixCardStyle,
          disabled: this.props.disabled,
          underlayColor: this.props.cardUnderlayColor || ((_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.listUnderlayColor),
          allowFontScaling: this.props.allowFontScaling,
          unlimitedHeightEnable: this.props.unlimitedHeightEnable
        });
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator() {
        if (!this.props.showSeparator) return null;
        return this.props.separator || _react.default.createElement(_Separator.default, {
          style: {
            marginHorizontal: _resources.Styles.common.padding
          }
        });
      }
    }]);
    return ListCard;
  }(_react.default.Component);

  ListCard.contextType = _configProvider.ConfigContext;
  ListCard.TYPE = TYPE;
  ListCard.CARD_RADIUS_TYPE = CARD_RADIUS_TYPE;
  ListCard.propTypes = {
    radiusType: _propTypes.default.oneOf([CARD_RADIUS_TYPE.ALL, CARD_RADIUS_TYPE.TOP, CARD_RADIUS_TYPE.NONE, CARD_RADIUS_TYPE.BOTTOM]),
    type: _propTypes.default.oneOf([TYPE.SWITCH, TYPE.CHOICE, TYPE.BUTTON, TYPE.ARROW, TYPE.NONE]),
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    value: _propTypes.default.string,
    titleStyle: _propTypes.default.object,
    subtitleStyle: _propTypes.default.object,
    valueStyle: _propTypes.default.object,
    cardStyle: _propTypes.default.object,
    titleNumberOfLines: _propTypes.default.number,
    valueNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    themeColor: _propTypes.default.string,
    onPress: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    showSeparator: _propTypes.default.bool,
    separator: _propTypes.default.element,
    buttonOption: _propTypes.default.object,
    choiceOption: _propTypes.default.object,
    onSwitchValueChange: _propTypes.default.func,
    switchValue: _propTypes.default.bool,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    switchStyle: _propTypes.default.object,
    cardUnderlayColor: _propTypes.default.string
  };
  ListCard.defaultProps = {
    type: TYPE.NONE,
    radiusType: CARD_RADIUS_TYPE.ALL,
    themeColor: _resources.Styles.common.MHGreen,
    titleNumberOfLines: 1,
    subtitleNumberOfLines: 2,
    valueNumberOfLines: 1,
    allowFontScaling: true,
    unlimitedHeightEnable: false,
    showSeparator: true,
    disabled: false
  };

  var styles = _reactNative.StyleSheet.create({
    cardView: {
      flex: 1,
      justifyContent: 'center'
    },
    innerView: {
      flexDirection: 'row',
      marginHorizontal: marginHor,
      flex: 1,
      alignItems: 'center',
      marginTop: 20,
      marginBottom: 20
    },
    title: {
      fontSize: 16,
      lineHeight: 22,
      fontWeight: 'bold'
    },
    subtitle: {
      fontSize: 13,
      lineHeight: 18,
      marginTop: 1
    },
    valueText: {
      marginLeft: 6,
      justifyContent: 'flex-end',
      flexDirection: 'row',
      alignItems: 'center',
      flex: 1
    },
    titleView: {
      justifyContent: 'center',
      paddingRight: 10
    },
    iconViewStyle: {
      width: iconViewLength,
      height: iconViewLength,
      borderRadius: 21.5,
      alignItems: 'center',
      justifyContent: 'center',
      marginRight: 13
    },
    iconStyle: {
      width: 24,
      height: 24
    },
    arrowIcon: {
      width: 22,
      height: 22
    },
    right: {
      alignItems: 'flex-end'
    }
  });

  var _default = ListCard;
  exports.default = _default;
},23302,[14305,14314,14344,14317,14320,14323,14371,14377,14386,10318,10297,10033,22453,22906,22450,22864,23212,22786,22426,22420]);
__r(10120);
__r(10001);