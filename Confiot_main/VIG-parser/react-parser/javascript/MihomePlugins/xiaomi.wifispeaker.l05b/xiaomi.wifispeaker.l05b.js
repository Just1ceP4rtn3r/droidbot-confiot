
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  var _miot = _$$_REQUIRE(_dependencyMap[2]);

  var _init = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var Views = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var _consts = _$$_REQUIRE(_dependencyMap[5]);

  var sceneId = ((_miot.Package.entryInfo || {}).payload || {}).id;
  var isScene = _miot.Package.entrance === _miot.Entrance.Scene;
  var initPage = !isScene || typeof sceneId === 'undefined' ? null : _consts.SceneTTSIds.indexOf(sceneId) !== -1 ? 'SceneTTS' : _consts.SceneDirectiveIds.indexOf(sceneId) !== -1 ? 'SceneDirective' : null;
  (0, _init.default)(Views, initPage);
},10001,[14308,14305,10074,10004,10010,10007]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = init;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[3]);

  var _miot = _$$_REQUIRE(_dependencyMap[4]);

  var _fns = _$$_REQUIRE(_dependencyMap[5]);

  var _navigationHelper = _$$_REQUIRE(_dependencyMap[6]);

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _consts = _$$_REQUIRE(_dependencyMap[8]);

  _reactNative.UIManager.setLayoutAnimationEnabledExperimental && _reactNative.UIManager.setLayoutAnimationEnabledExperimental(true);

  function initRootStack(views, initPage) {
    var RootStack = (0, _reactNavigation.createStackNavigator)(views, {
      initialRouteName: views[initPage] ? initPage : 'App',
      navigationOptions: function navigationOptions(_ref) {
        var navigation = _ref.navigation;
        (0, _navigationHelper.setNavigation)(navigation);
        var title = navigation.getParam('title', _miot.Device.name);
        var type = navigation.getParam('type', _NavigationBar.default.TYPE.LIGHT);
        var left = [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: navigation.goBack
        }];
        return {
          header: _react.default.createElement(_NavigationBar.default, {
            title: title,
            type: type,
            left: left
          })
        };
      }
    });
    return (0, _navigationHelper.wrapBackWithViewName)(RootStack);
  }

  _miot.Package.disableAutoCheckUpgrade = true;

  function init(views, initPage) {
    var RootStack = initRootStack(views, initPage);

    _miot.PackageEvent.packageAuthorizationCancel.addListener(function () {
      _miot.Host.storage.set(_consts.CONSTPROTOCOLCACHEKEY, false);
    });

    _miot.PackageEvent.packageWillLoad.addListener(_fns.NOOP);

    _miot.PackageEvent.packageDidLoaded.addListener(_fns.NOOP);

    _miot.PackageEvent.packageViewWillAppear.addListener(_fns.NOOP);

    _miot.PackageEvent.packageDidResume.addListener(_fns.NOOP);

    _miot.PackageEvent.packageWillPause.addListener(_fns.NOOP);

    _miot.PackageEvent.packageWillExit.addListener(_fns.NOOP);

    _miot.Package.entry(RootStack, _fns.NOOP);
  }
},10004,[14305,10297,10033,10918,10074,10779,10824,10719,10007]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StereoTipKey = exports.SceneDirectiveIds = exports.SceneTTSIds = exports.CachedDeviceListKey = exports.PlayerListenerKey = exports.VoiceTipClickKey = exports.CONSTPROTOCOLCACHEKEY = undefined;
  var CONSTPROTOCOLCACHEKEY = 'privacyAuthed';
  exports.CONSTPROTOCOLCACHEKEY = CONSTPROTOCOLCACHEKEY;
  var VoiceTipClickKey = 'VoiceTipClickKey';
  exports.VoiceTipClickKey = VoiceTipClickKey;
  var PlayerListenerKey = 'PlayerListenerKey';
  exports.PlayerListenerKey = PlayerListenerKey;
  var CachedDeviceListKey = 'CachedDeviceListKey';
  exports.CachedDeviceListKey = CachedDeviceListKey;
  var SceneTTSIds = [1808, 1408, 2393, 2394, 3202, 3838, 4541, 2395, 5139, 6256, 8208, 5959, 5958, 12482, 12443, 14675, 14364, 17241];
  exports.SceneTTSIds = SceneTTSIds;
  var SceneDirectiveIds = [3232, 3228, 2671, 2670, 3212, 3848, 4552, 2892, 5143, 6260, 8572, 5964, 5965, 12472, 12439, 14674, 14365, 17242];
  exports.SceneDirectiveIds = SceneDirectiveIds;
  var StereoTipKey = 'StereoTipKey';
  exports.StereoTipKey = StereoTipKey;
},10007,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "App", {
    enumerable: true,
    get: function get() {
      return _App.default;
    }
  });
  Object.defineProperty(exports, "Setting", {
    enumerable: true,
    get: function get() {
      return _Setting.default;
    }
  });
  Object.defineProperty(exports, "FirmwareUpgrade", {
    enumerable: true,
    get: function get() {
      return _FirmwareUpgrade.default;
    }
  });
  Object.defineProperty(exports, "MoreSetting", {
    enumerable: true,
    get: function get() {
      return _MoreSetting.default;
    }
  });
  Object.defineProperty(exports, "SceneTTS", {
    enumerable: true,
    get: function get() {
      return _SceneTTS.default;
    }
  });
  Object.defineProperty(exports, "SceneDirective", {
    enumerable: true,
    get: function get() {
      return _SceneDirective.default;
    }
  });
  Object.defineProperty(exports, "IRController", {
    enumerable: true,
    get: function get() {
      return _IRController.default;
    }
  });
  Object.defineProperty(exports, "TalkHistory", {
    enumerable: true,
    get: function get() {
      return _TalkHistory.default;
    }
  });
  Object.defineProperty(exports, "ControlDevice", {
    enumerable: true,
    get: function get() {
      return _ControlDevice.default;
    }
  });
  Object.defineProperty(exports, "AlarmClock", {
    enumerable: true,
    get: function get() {
      return _AlarmClock.default;
    }
  });
  Object.defineProperty(exports, "AlarmDetail", {
    enumerable: true,
    get: function get() {
      return _AlarmDetail.default;
    }
  });
  Object.defineProperty(exports, "AlarmClockRepeat", {
    enumerable: true,
    get: function get() {
      return _AlarmClockRepeat.default;
    }
  });
  Object.defineProperty(exports, "Stereo", {
    enumerable: true,
    get: function get() {
      return _Stereo.default;
    }
  });
  Object.defineProperty(exports, "BTSetting", {
    enumerable: true,
    get: function get() {
      return _BTSetting.default;
    }
  });
  Object.defineProperty(exports, "NearbyWakeup", {
    enumerable: true,
    get: function get() {
      return _NearbyWakeup.default;
    }
  });
  Object.defineProperty(exports, "NightMode", {
    enumerable: true,
    get: function get() {
      return _NightMode.default;
    }
  });
  Object.defineProperty(exports, "DTS", {
    enumerable: true,
    get: function get() {
      return _DTS.default;
    }
  });
  Object.defineProperty(exports, "VoicePrinter", {
    enumerable: true,
    get: function get() {
      return _VoicePrinter.default;
    }
  });
  Object.defineProperty(exports, "EditVoicePrinter", {
    enumerable: true,
    get: function get() {
      return _EditVoicePrinter.default;
    }
  });
  Object.defineProperty(exports, "RecordingVoicePrinter", {
    enumerable: true,
    get: function get() {
      return _RecordingVoicePrinter.default;
    }
  });
  Object.defineProperty(exports, "ChildMode", {
    enumerable: true,
    get: function get() {
      return _ChildMode.default;
    }
  });
  Object.defineProperty(exports, "ChildList", {
    enumerable: true,
    get: function get() {
      return _ChildList.default;
    }
  });
  Object.defineProperty(exports, "ChildInfo", {
    enumerable: true,
    get: function get() {
      return _ChildInfo.default;
    }
  });
  Object.defineProperty(exports, "ChildNoVideoSetting", {
    enumerable: true,
    get: function get() {
      return _ChildNoVideoSetting.default;
    }
  });
  Object.defineProperty(exports, "Earthquake", {
    enumerable: true,
    get: function get() {
      return _Earthquake.default;
    }
  });
  Object.defineProperty(exports, "Address", {
    enumerable: true,
    get: function get() {
      return _Address.default;
    }
  });
  Object.defineProperty(exports, "Timbre", {
    enumerable: true,
    get: function get() {
      return _Timbre.default;
    }
  });
  Object.defineProperty(exports, "TimbreV2", {
    enumerable: true,
    get: function get() {
      return _TimbreV.default;
    }
  });
  Object.defineProperty(exports, "AuxIn", {
    enumerable: true,
    get: function get() {
      return _AuxIn.default;
    }
  });
  Object.defineProperty(exports, "LightEffect", {
    enumerable: true,
    get: function get() {
      return _LightEffect.default;
    }
  });
  Object.defineProperty(exports, "DLNA", {
    enumerable: true,
    get: function get() {
      return _DLNA.default;
    }
  });
  Object.defineProperty(exports, "ContinuousTalk", {
    enumerable: true,
    get: function get() {
      return _ContinuousTalk.default;
    }
  });
  Object.defineProperty(exports, "SecuritySetting", {
    enumerable: true,
    get: function get() {
      return _SecuritySetting.default;
    }
  });
  Object.defineProperty(exports, "DeviceDetail", {
    enumerable: true,
    get: function get() {
      return _DeviceDetail.default;
    }
  });
  Object.defineProperty(exports, "MicoWebView", {
    enumerable: true,
    get: function get() {
      return _MicoWebView.default;
    }
  });

  var _App = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _Setting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _FirmwareUpgrade = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _MoreSetting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _SceneTTS = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _SceneDirective = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _IRController = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _TalkHistory = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _ControlDevice = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _AlarmClock = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _AlarmDetail = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _AlarmClockRepeat = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Stereo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _BTSetting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _NearbyWakeup = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _NightMode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _DTS = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _VoicePrinter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _EditVoicePrinter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _RecordingVoicePrinter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _ChildMode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _ChildList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var _ChildInfo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var _ChildNoVideoSetting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var _Earthquake = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

  var _Address = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26]));

  var _Timbre = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27]));

  var _TimbreV = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28]));

  var _AuxIn = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29]));

  var _LightEffect = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[30]));

  var _DLNA = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[31]));

  var _ContinuousTalk = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[32]));

  var _SecuritySetting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[33]));

  var _DeviceDetail = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[34]));

  var _MicoWebView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[35]));
},10010,[14305,10013,10346,10349,10350,10379,10382,10385,10388,10406,10451,10475,10502,10505,10508,10511,10514,10517,10529,10535,10538,10541,10544,10553,10556,10559,10562,10565,10568,10583,10586,10589,10592,10595,10598,10637]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _miot = _$$_REQUIRE(_dependencyMap[10]);

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _MessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _sizes = _$$_REQUIRE(_dependencyMap[14]);

  var _fns = _$$_REQUIRE(_dependencyMap[15]);

  var _Strings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _consts = _$$_REQUIRE(_dependencyMap[17]);

  var _protocolManager = _$$_REQUIRE(_dependencyMap[18]);

  var _apis = _$$_REQUIRE(_dependencyMap[19]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _TopHeader = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _Player = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var _VoiceTip = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var _IRController = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var _SingleDeviceControl = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

  var _VoiceFeatures = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26]));

  var _MoreFeatures = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27]));

  var _JumpToApp = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28]));

  var _StereoTip = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29]));

  var window = _reactNative.Dimensions.get('window');

  var isIos = _reactNative.Platform.OS === 'ios';
  var isIphoneX = isIos && window.width === 375 && window.height === 812;

  var App = function (_Component) {
    (0, _inherits2.default)(App, _Component);

    function App() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, App);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(App)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        height: '100%',
        title: '',
        loading: 1
      };
      _this.navigationProps = {
        type: _NavigationBar.default.TYPE.LIGHT,
        title: '',
        backgroundColor: 'transparent',
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: _miot.Package.exit
        }],
        right: _miot.Device.isOwner ? [{
          key: _NavigationBar.default.ICON.MORE,
          onPress: function onPress() {
            _this.props.navigation.navigate('Setting');
          }
        }] : []
      };

      _this.onLayout = function (e) {
        _this.setState({
          height: e.nativeEvent.layout.height
        });
      };

      _this.onScroll = function (e) {
        _this.refTopHeader && _this.refTopHeader.onContentScroll(e.nativeEvent.contentOffset.y);
      };

      _this.trySetTitle = function (title) {
        _this.setState({
          title: title
        });
      };

      _this.initProtocol = function (fn) {
        if (typeof fn !== 'function') {
          fn = _fns.NOOP;
        }

        if (!_miot.Device.isOwner) {
          return;
        }

        _miot.Host.storage.get(_consts.CONSTPROTOCOLCACHEKEY).then(function (cached) {
          if (cached) {
            fn();
            return;
          }

          (0, _protocolManager.getProtocol)().then(function (protocol) {
            if (!protocol || !protocol.privacyURL) {
              fn();
              return;
            }

            _miot.Host.ui.alertLegalInformationAuthorization(protocol).then(function (agreed) {
              if (agreed) {
                _miot.Host.storage.set(_consts.CONSTPROTOCOLCACHEKEY, true);

                fn();
              }
            }).catch(_fns.NOOP);
          }).catch(_fns.NOOP);
        }).catch(_fns.NOOP);
      };

      _this.onDismiss = function () {
        _this.setState({
          loading: 0
        });
      };

      return _this;
    }

    (0, _createClass2.default)(App, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.initProtocol();
        (0, _apis.getDeviceInfo)().then(function () {
          setTimeout(function () {
            _this2.setState({
              loading: 0
            });
          }, 500);
        }).catch(function () {
          _this2.setState({
            loading: 0
          }, function () {
            setTimeout(function () {
              _this2.setState({
                loading: 2
              });
            }, 1000);
          });
        });
        (0, _apis.updateStereoId)();

        _miot.PackageEvent.packageViewWillAppear.addListener(function () {
          (0, _apis.updateStereoId)();
        });

        _miot.Service.smarthome._getFirmwareOriginalUpdateInfo(_miot.Device.deviceID).then(function (res) {
          if (res.code !== 0) return;
          _miot.Device.needUpgrade = !res.data.isLatest;
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var navigation = this.props.navigation;
        var _this$state = this.state,
            height = _this$state.height,
            title = _this$state.title,
            loading = _this$state.loading;
        var navigationProps = this.navigationProps;
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_NavigationBar.default, (0, _extends2.default)({}, navigationProps, {
          title: title
        })), _react.default.createElement(_reactNative.ScrollView, {
          style: Styles.content,
          alwaysBounceVertical: false,
          contentContainerStyle: [Styles.contentInner, {
            minHeight: height
          }],
          showsVerticalScrollIndicator: false,
          onLayout: this.onLayout,
          automaticallyAdjustContentInsets: false,
          onScroll: this.onScroll
        }, _react.default.createElement(_TopHeader.default, {
          ref: function ref(_ref) {
            _this3.refTopHeader = _ref;
          },
          navigation: navigation,
          setTitle: this.trySetTitle
        }), _react.default.createElement(_Player.default, null), _react.default.createElement(_VoiceTip.default, null), _react.default.createElement(_SingleDeviceControl.default, {
          navigation: navigation
        }), _react.default.createElement(_VoiceFeatures.default, {
          navigation: navigation
        }), _react.default.createElement(_MoreFeatures.default, {
          navigation: navigation
        }), _react.default.createElement(_StereoTip.default, {
          navigation: navigation
        }), _react.default.createElement(_JumpToApp.default, null)), loading === 1 && _miot.Device.isOnline ? _react.default.createElement(_LoadingDialog.default, {
          visible: true,
          message: _i18n.default.loadingTitle(),
          timeout: 200,
          onDismiss: this.onDismiss
        }) : null, loading === 2 && _miot.Device.isOnline ? _react.default.createElement(_MessageDialog.default, {
          visible: true,
          message: _Strings.default.error,
          onDismiss: this.onDismiss,
          buttons: [{
            text: _Strings.default.ok,
            callback: function callback() {
              _miot.Package.exit();
            }
          }]
        }) : null);
      }
    }]);
    return App;
  }(_react.Component);

  exports.default = App;

  App.navigationOptions = function () {
    return {
      header: null
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#f7f7f7'
    },
    content: {
      flex: 1
    },
    contentInner: {
      paddingBottom: isIphoneX ? 34 : (0, _sizes.adjustSize)(30)
    }
  });
},10013,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10074,10719,10740,10743,10776,10779,10320,10007,10016,10043,10097,10112,10133,10199,10208,10214,10220,10253,10337,10343]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getProtocol = getProtocol;

  var _miot = _$$_REQUIRE(_dependencyMap[0]);

  var cachedPrivacyURL = null;
  var cachedAgreementURL = null;
  var cachedExperiencePlanURL = null;
  var Protocols = {
    cn: {
      zh: {
        get privacyURL() {
          return _$$_REQUIRE(_dependencyMap[1]);
        },

        get agreementURL() {
          return _$$_REQUIRE(_dependencyMap[2]);
        }

      },
      en: {
        get privacyURL() {
          return _$$_REQUIRE(_dependencyMap[3]);
        },

        get agreementURL() {
          return _$$_REQUIRE(_dependencyMap[4]);
        }

      }
    },
    tw: {
      zh: {
        get privacyURL() {
          return _$$_REQUIRE(_dependencyMap[5]);
        },

        get agreementURL() {
          return _$$_REQUIRE(_dependencyMap[2]);
        }

      },
      zh_tw: {
        get privacyURL() {
          return _$$_REQUIRE(_dependencyMap[6]);
        },

        get agreementURL() {
          return _$$_REQUIRE(_dependencyMap[7]);
        }

      },
      zh_hk: {
        get privacyURL() {
          return _$$_REQUIRE(_dependencyMap[6]);
        },

        get agreementURL() {
          return _$$_REQUIRE(_dependencyMap[7]);
        }

      },
      en: {
        get privacyURL() {
          return _$$_REQUIRE(_dependencyMap[8]);
        },

        get agreementURL() {
          return _$$_REQUIRE(_dependencyMap[4]);
        }

      }
    }
  };

  function getProtocol() {
    return new Promise(function (resolve) {
      if (cachedPrivacyURL || cachedAgreementURL) {
        resolve({
          privacyURL: cachedPrivacyURL,
          agreementURL: cachedAgreementURL,
          hideAgreement: !cachedAgreementURL,
          experiencePlanURL: cachedExperiencePlanURL,
          hideUserExperiencePlan: true
        });
        return;
      }

      _miot.Service.getServerName().then(function (_ref) {
        var countryCode = _ref.countryCode;
        resolve(getProtocolByCountryCode(countryCode));
      }).catch(function () {
        resolve(getProtocolByCountryCode('tw'));
      });
    });
  }

  function getProtocolByCountryCode(countryCode) {
    var countryProtocols = Protocols[(countryCode || '').toLowerCase()] || Protocols['tw'];
    var languageProtocols = countryProtocols[_miot.Host.locale.language] || countryProtocols.en;
    cachedPrivacyURL = languageProtocols.privacyURL;
    cachedAgreementURL = languageProtocols.agreementURL;
    return {
      privacyURL: cachedPrivacyURL,
      agreementURL: cachedAgreementURL,
      hideAgreement: !cachedAgreementURL,
      experiencePlanURL: cachedExperiencePlanURL,
      hideUserExperiencePlan: true
    };
  }
},10016,[10074,10019,10022,10025,10028,10031,10034,10037,10040]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/legal",
    "scales": [1],
    "hash": "536d2046b2f937368f61ea6b288aaaee",
    "name": "privacy_cn_zh",
    "type": "html"
  });
},10019,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/legal",
    "scales": [1],
    "hash": "63627452e4f579871889b5fe3bd48c6d",
    "name": "license_zh",
    "type": "html"
  });
},10022,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/legal",
    "scales": [1],
    "hash": "ffdf1ad99a06a25a1446f59881eb998e",
    "name": "privacy_cn_en",
    "type": "html"
  });
},10025,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/legal",
    "scales": [1],
    "hash": "abe6560a0df8ea94707e73a7ca9805a9",
    "name": "license_en",
    "type": "html"
  });
},10028,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/legal",
    "scales": [1],
    "hash": "cbb26bd882d69e973def4a70deac207b",
    "name": "privacy_tw_zh",
    "type": "html"
  });
},10031,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/legal",
    "scales": [1],
    "hash": "ee5a86a1c1bfae631f445243b52c2435",
    "name": "privacy_tw_zh_tw",
    "type": "html"
  });
},10034,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/legal",
    "scales": [1],
    "hash": "a31d0dd79f8c30f17e3071f469f2f71e",
    "name": "license_zh_tw",
    "type": "html"
  });
},10037,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/legal",
    "scales": [1],
    "hash": "64495ab3d6fdc0390dae44102d5b4561",
    "name": "privacy_tw_en",
    "type": "html"
  });
},10040,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getDeviceList = getDeviceList;
  exports.getDeviceInfo = getDeviceInfo;
  exports.getCapacity = getCapacity;
  exports.getDcStatus = getDcStatus;
  exports.searchMusic = searchMusic;
  exports.getAlbumDetails = getAlbumDetails;
  exports.getMeshStatus = getMeshStatus;
  exports.getDeviceCategoryList = getDeviceCategoryList;
  exports.getNlpResult = getNlpResult;
  exports.getMicoConversation = getMicoConversation;
  exports.getMicoConversationV3_1 = getMicoConversationV3_1;
  exports.getConversation = getConversation;
  exports.getControlDeviceList = getControlDeviceList;
  exports.getHome = getHome;
  exports.getControllers = getControllers;
  exports.getStereo = getStereo;
  exports.getAlarmSceneList = getAlarmSceneList;
  exports.getAlarmRings = getAlarmRings;
  exports.setAlarmSceneStatus = setAlarmSceneStatus;
  exports.deleteAlarmScene = deleteAlarmScene;
  exports.updateAlarmScene = updateAlarmScene;
  exports.getBTStatus = getBTStatus;
  exports.setBTConnectable = setBTConnectable;
  exports.setBTDiscoverable = setBTDiscoverable;
  exports.disconnectBt = disconnectBt;
  exports.unpairBt = unpairBt;
  exports.connectBt = connectBt;
  exports.getNearbyWakeupStatus = getNearbyWakeupStatus;
  exports.setNearbyWakeupStatus = setNearbyWakeupStatus;
  exports.getNightModeStatus = getNightModeStatus;
  exports.setNightModeStatus = setNightModeStatus;
  exports.getDtsStatus = getDtsStatus;
  exports.setDtsStatus = setDtsStatus;
  exports.getVoicePrinterList = getVoicePrinterList;
  exports.createVoicePrinter = createVoicePrinter;
  exports.resignVoicePrinter = resignVoicePrinter;
  exports.updateVoicePrinter = updateVoicePrinter;
  exports.deleteVoicePrinter = deleteVoicePrinter;
  exports.getChildModeStatus = getChildModeStatus;
  exports.setChildModeStatus = setChildModeStatus;
  exports.getChildInfoList = getChildInfoList;
  exports.addChildInfo = addChildInfo;
  exports.updateChildInfo = updateChildInfo;
  exports.deleteChildInfo = deleteChildInfo;
  exports.getEarthquakeStatus = getEarthquakeStatus;
  exports.setEarthquakeStatus = setEarthquakeStatus;
  exports.getTimbreStatus = getTimbreStatus;
  exports.getTimbreStatusV2 = getTimbreStatusV2;
  exports.getTimbreCurrentSelect = getTimbreCurrentSelect;
  exports.setTimbreStatus = setTimbreStatus;
  exports.getDlnaStatus = getDlnaStatus;
  exports.setDlnaStatus = setDlnaStatus;
  exports.getAuxInVolume = getAuxInVolume;
  exports.setAuxInVolume = setAuxInVolume;
  exports.getLightEffectStatus = getLightEffectStatus;
  exports.setLightEffectStatus = setLightEffectStatus;
  exports.getContinuousTalkStatus = getContinuousTalkStatus;
  exports.setContinuousTalkStatus = setContinuousTalkStatus;
  exports.listenPlayerStatus = listenPlayerStatus;
  exports.updateStereoId = updateStereoId;
  exports.setPlayerStatus = setPlayerStatus;
  exports.getSecurityStatus = getSecurityStatus;
  exports.setSecurityStatus = setSecurityStatus;
  exports.getAddressStatus = getAddressStatus;
  exports.setAddressStatus = setAddressStatus;
  exports.getCustomIRSkillList = getCustomIRSkillList;
  exports.setPlayerVolume = setPlayerVolume;
  exports.setMicroStatus = setMicroStatus;
  exports.getMicroStatus = getMicroStatus;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _miot = _$$_REQUIRE(_dependencyMap[6]);

  var _native = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _capability = _$$_REQUIRE(_dependencyMap[8]);

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[9]);

  var _consts = _$$_REQUIRE(_dependencyMap[10]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _parseNumberJson = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var mihomeUbus = '/v2/remote/ubus';
  var CachedDeviceList = null;
  var GettingFns = [];
  var isGetting = false;

  function getDeviceList(force) {
    if (!force && CachedDeviceList) {
      return Promise.resolve(CachedDeviceList);
    }

    return new Promise(function (resolve, reject) {
      if (isGetting) {
        GettingFns.push({
          resolve: resolve,
          reject: reject
        });
        return;
      }

      isGetting = true;

      _miot.Service.callXiaoaiNetworkAPI({
        host: 'normal',
        path: '/admin/v2/device_list',
        method: 0,
        params: {
          presence: true,
          master: false
        }
      }).then(function (res) {
        isGetting = false;

        if (res && res.data && res.data.length) {
          CachedDeviceList = res.data;
          resolve(CachedDeviceList);

          for (var i = 0, l = GettingFns.length; i < l; i++) {
            var fn = GettingFns[i] ? GettingFns[i].resolve : null;

            if (typeof fn === 'function') {
              fn(CachedDeviceList);
            }
          }

          return;
        }

        reject(res);
      }).catch(function (err) {
        isGetting = false;

        for (var i = 0, l = GettingFns.length; i < l; i++) {
          var fn = GettingFns[i] ? GettingFns[i].reject : null;

          if (typeof fn === 'function') {
            fn(err);
          }
        }

        reject(err);
      });
    });
  }

  function getDeviceInfo(did, force) {
    return new Promise(function (resolve, reject) {
      getDeviceList(force).then(function (res) {
        var targetDid = did || _miot.Device.deviceID;
        var target = null;
        res.forEach(function (r) {
          if (r && r.miotDID === targetDid && (!target || target.presence !== 'online')) {
            target = r;
          }
        });

        if (target) {
          var targetStatic = _capabilitiesFormatted.StaticCapabilities[(target.hardware || '').toUpperCase()] || {};
          resolve((0, _objectSpread2.default)({}, target, targetStatic, {
            hardware: target.hardware,
            innerCapabilities: target.capabilities
          }));
          return;
        }

        var basicTarget = getBasicDeviceInfo();

        if (basicTarget && !_miot.Device.isOwner) {
          resolve(basicTarget);
          return;
        }

        reject();
      }).catch(function () {
        var basicTarget = getBasicDeviceInfo();

        if (basicTarget && !_miot.Device.isOwner) {
          resolve(basicTarget);
          return;
        }

        reject();
      });
    });
  }

  function getBasicDeviceInfo() {
    var model = _miot.Device.model;

    for (var k in _capabilitiesFormatted.StaticCapabilities) {
      var c = _capabilitiesFormatted.StaticCapabilities[k];

      if (c.model === model) {
        return c;
      }
    }

    return null;
  }

  function getAlarmConfig() {
    return new Promise(function (resolve, reject) {
      _miot.Service.callXiaoaiNetworkAPI({
        host: 'normal',
        path: '/common_config/',
        params: {
          configName: "alarm_query_map_" + _miot.Host.locale.language
        }
      }).then(function (res) {
        resolve(res);
      }).catch(function (e) {
        reject(e);
      });
    });
  }

  function getCapacity() {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(null).then(function (_ref) {
        var deviceID = _ref.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'power',
            method: 'get_capacity',
            message: JSON.stringify({})
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      });
    });
  }

  function getDcStatus() {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(null).then(function (_ref2) {
        var deviceID = _ref2.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'power',
            method: 'get_dc_status',
            message: JSON.stringify({})
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      });
    });
  }

  function getAlarm(deviceId) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref3) {
        var deviceID = _ref3.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'alarm',
            method: 'alarm_query',
            message: JSON.stringify({
              type: 'alarm'
            })
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function createOrUpdateAlarm(deviceId, cfg) {
    return new Promise(function (resolve, reject) {
      var id = cfg.id;
      getDeviceInfo(deviceId).then(function (_ref4) {
        var deviceID = _ref4.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'alarm',
            method: id ? 'alarm_modify' : 'alarm_create',
            message: JSON.stringify((0, _objectSpread2.default)({}, cfg, {
              type: 'alarm'
            }))
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function deleteAlarm(deviceId, alarmId) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref5) {
        var deviceID = _ref5.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'alarm',
            method: 'alarm_delete',
            message: JSON.stringify({
              type: 'alarm',
              id: alarmId
            })
          }
        }).then(resolve).catch(reject);
      }).catch(reject);
    });
  }

  function setAlarmEnable(deviceId, alarmId, enable) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref6) {
        var deviceID = _ref6.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'alarm',
            method: enable ? 'alarm_open' : 'alarm_close',
            message: JSON.stringify({
              type: 'alarm',
              id: alarmId
            })
          }
        }).then(resolve).catch(reject);
      }).catch(reject);
    });
  }

  function searchMusic(query, offset, count) {
    return new Promise(function (resolve, reject) {
      _miot.Service.callXiaoaiNetworkAPI({
        host: 'normal',
        path: '/music/search',
        method: 1,
        params: {
          query: query,
          queryType: 1,
          offset: offset,
          count: count,
          payment: true
        }
      }).then(function (res) {
        resolve(res);
      }).catch(function (e) {
        reject(e);
      });
    });
  }

  function getPlayerData(deviceId, xiaoaiDeviceId) {
    return new Promise(function (resolve, reject) {
      if (_miot.Device.isOwner) {
        getDeviceInfo(deviceId).then(function (_ref7) {
          var deviceID = _ref7.deviceID;

          _miot.Service.callXiaoaiNetworkAPI({
            host: 'normal',
            path: '/remote/ubus',
            method: 1,
            params: {
              deviceId: xiaoaiDeviceId || deviceID,
              path: 'mediaplayer',
              method: 'player_get_play_status',
              message: JSON.stringify({})
            }
          }).then(function (res) {
            resolve(res);
          }).catch(function (e) {
            reject(e);
          });
        }).catch(reject);
        return;
      }

      _native.default.MIOTRPC.nativeCall(mihomeUbus, {
        did: deviceId || _miot.Device.deviceID,
        path: 'mediaplayer',
        method: 'player_get_play_status',
        message: {}
      }, function (ok, res) {
        if (ok && res) {
          resolve((0, _objectSpread2.default)({}, res, {
            data: typeof res.result === 'string' ? (0, _parseNumberJson.default)(res.result) : res.result
          }));
          return;
        }

        reject(res);
      });
    });
  }

  function getFunctionalLanGroups() {
    return new Promise(function (resolve, reject) {
      getDeviceInfo().then(function (_ref8) {
        var innerCapabilities = _ref8.innerCapabilities;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/iot/dcm/get_functional_lan_groups',
          method: 0,
          needDevice: 0,
          params: {
            hardware: _miot.Device.model,
            deviceId: _miot.Device.deviceId
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });

        return;
      });
    });
  }

  function getMusicDetails(audioIds, status) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo().then(function (_ref9) {
        var innerCapabilities = _ref9.innerCapabilities;
        var is3 = !!(innerCapabilities && innerCapabilities[_capability.AI_PROTOCOL_3_0]);

        if (is3 || !status || [4, 5, 6].indexOf(status.media_type) === -1) {
          _miot.Service.callXiaoaiNetworkAPI({
            host: 'normal',
            path: is3 ? '/aivs3/audio/info/v2' : '/music/song_info',
            method: 1,
            needDevice: 0,
            params: (0, _defineProperty2.default)({}, is3 ? 'audioIdList' : 'songIdList', JSON.stringify(audioIds))
          }).then(function (res) {
            resolve(res);
          }).catch(function (e) {
            reject(e);
          });

          return;
        }

        var detail = status.play_song_detail || {};
        var mediaType = status.media_type;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/music/station/info',
          method: 0,
          needDevice: 0,
          params: {
            globalId: detail.global_id,
            stationId: detail.cp_id,
            origin: detail.cp_origin,
            stationType: {
              4: 2,
              5: 0,
              6: 1
            }[mediaType]
          }
        }).then(function (res) {
          if (res && res.data && res.data.title) {
            resolve({
              code: 0,
              data: [res.data]
            });
            return;
          }

          reject(res);
        }).catch(reject);
      });
    });
  }

  function getAlbumDetails(albumId) {
    return new Promise(function (resolve, reject) {
      _miot.Service.callXiaoaiNetworkAPI({
        host: 'normal',
        path: '/music/album_info',
        params: {
          albumId: albumId,
          offset: 15,
          count: 15
        }
      }).then(function (res) {
        resolve(res);
      }).catch(function (e) {
        reject(e);
      });
    });
  }

  function controlPlayer(deviceId, action) {
    return new Promise(function (resolve, reject) {
      if (_miot.Device.isOwner) {
        getDeviceInfo(deviceId).then(function (_ref10) {
          var deviceID = _ref10.deviceID;

          _miot.Service.callXiaoaiNetworkAPI({
            host: 'normal',
            path: '/remote/ubus',
            method: 1,
            params: {
              deviceId: deviceID,
              path: 'mediaplayer',
              method: 'player_play_operation',
              message: JSON.stringify({
                action: action
              })
            }
          }).then(function (res) {
            resolve(res);
          }).catch(function (e) {
            reject(e);
          });
        }).catch(reject);
        return;
      }

      _native.default.MIOTRPC.nativeCall(mihomeUbus, {
        did: deviceId || _miot.Device.deviceID,
        path: 'mediaplayer',
        method: 'player_play_operation',
        message: {
          action: action
        }
      }, function (ok, res) {
        if (ok) {
          resolve();
          return;
        }

        reject(res);
      });
    });
  }

  function lanAwakeGroup(userId) {
    return new Promise(function (resolve, reject) {
      _miot.Service.callXiaoaiNetworkAPI({
        host: 'normal',
        path: '/iot/dcm/get_user_lan_groups',
        params: {
          userId: userId
        }
      }).then(function (res) {
        resolve(res);
      }).catch(function (e) {
        reject(e);
      });
    });
  }

  function updateAwakeStatus(deviceId, hardware, awakeStatus, resource) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref11) {
        var deviceID = _ref11.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/iot/dcm/update_awake_status',
          method: 1,
          params: {
            deviceId: deviceID,
            hardware: hardware,
            awakeStatus: awakeStatus,
            resource: resource
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function buildVoiceInteraction(deviceId, event) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref12) {
        var deviceID = _ref12.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'pnshelper',
            method: 'event_notify',
            message: JSON.stringify({
              src: 2,
              event: event
            })
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function getBluetoothInfo(deviceId) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref13) {
        var deviceID = _ref13.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'mibt',
            method: 'status',
            message: JSON.stringify({
              btmode: 'classic'
            })
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function enableBluetooth(deviceId, enable) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref14) {
        var deviceID = _ref14.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'mibt',
            method: 'enable',
            message: JSON.stringify({
              btmode: 'classic',
              action: enable
            })
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function enableBluetoothV2(deviceId, connect, discover) {
    discover = connect === 0 ? 0 : discover;
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref15) {
        var deviceID = _ref15.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'mibt',
            method: 'enable',
            message: JSON.stringify({
              btmode: 'classic',
              connect: connect,
              discover: discover
            })
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function getMeshStatus(deviceId) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref16) {
        var deviceID = _ref16.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'mibt_mesh',
            method: 'mesh_status',
            message: JSON.stringify({})
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function disconnectBluetoothDevice(deviceId) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref17) {
        var deviceID = _ref17.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'mibt',
            method: 'disconnect',
            message: JSON.stringify({})
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function connectBluetoothDevice(deviceId, mac) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref18) {
        var deviceID = _ref18.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'mibt',
            method: 'connect',
            message: JSON.stringify({
              mac: mac
            })
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function unpairBluetoothDevice(deviceId, mac) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref19) {
        var deviceID = _ref19.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'mibt',
            method: 'unpair',
            message: JSON.stringify({
              mac: mac
            })
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function getNightMode(deviceId) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref20) {
        var deviceID = _ref20.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'nightmode',
            method: 'status',
            message: JSON.stringify({})
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function setNightMode(deviceId, total, light, volume, start, stop) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref21) {
        var deviceID = _ref21.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'nightmode',
            method: 'set',
            message: JSON.stringify({
              total: total,
              light: light,
              volume: volume,
              start: start,
              stop: stop
            })
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function getEarthquakeConfig(deviceId) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref22) {
        var deviceID = _ref22.deviceID,
            appId = _ref22.appId;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'lbs',
          path: '/earthquake/notify/status/v2',
          params: {
            deviceId: deviceID
          }
        }).then(function (res) {
          if (!res || !res.data) {
            reject(res);
            return;
          }

          var data = typeof res.data === 'string' ? JSON.parse(res.data) : res.data;

          if (data.data && data.data.positionData && data.data.positionData.address) {
            resolve(res);
            return;
          }

          _miot.Service.callXiaoaiNetworkAPI({
            host: 'lbs',
            path: '/miai/lbs/v2/poi/get',
            params: {
              deviceId: deviceID,
              appId: appId
            }
          }).then(function (r) {
            if (!r || !r.data) {
              resolve(res);
              return;
            }

            var rdata = typeof r.data === 'string' ? JSON.parse(r.data) : r.data;

            if (!rdata.position || !rdata.position.name) {
              resolve(res);
              return;
            }

            var ret = (0, _objectSpread2.default)({}, res, {
              data: (0, _objectSpread2.default)({}, data, {
                data: (0, _objectSpread2.default)({}, data.data || {}, {
                  positionData: (0, _objectSpread2.default)({}, data.data.positionData || {}, {
                    address: rdata.position.name,
                    city: rdata.position.city,
                    latitude: rdata.position.lat,
                    longitude: rdata.position.lng,
                    district: rdata.position.district
                  })
                })
              })
            });
            resolve(ret);
          }).catch(function () {
            resolve(res);
          });
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function updateEarthQuakeConfig(deviceId, poiJsons) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref23) {
        var deviceID = _ref23.deviceID,
            appId = _ref23.appId;

        var _ref24 = poiJsons || {},
            data = _ref24.data;

        var params1 = {};
        var params2 = {
          ok: poiJsons.ok
        };

        if (data && data.positionData && data.positionData.address) {
          params1.address = data.positionData.address;
          params1.city = data.positionData.city;
          params1.district = data.positionData.district;
          params1.lat = data.positionData.latitude;
          params1.lng = data.positionData.longitude;
          params1.name = data.positionData.address;
          params1.position = '';
          params1.appId = appId;
        }

        if (data && data.positionData && data.positionData.address) {
          params2.n = data.positionData.address;
          params2.lat = data.positionData.latitude;
          params2.lon = data.positionData.longitude;
          params2.ct = data.positionData.city;
          params2.dist = data.positionData.district;
        }

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'lbs',
          path: '/miai/lbs/v2/poi/set',
          method: 1,
          params: (0, _objectSpread2.default)({
            deviceId: deviceID
          }, params1)
        }).then(function () {
          _miot.Service.callXiaoaiNetworkAPI({
            host: 'lbs',
            path: '/earthquake/notify/update/v2',
            method: 1,
            params: {
              deviceId: deviceID,
              poiJson: JSON.stringify(params2)
            }
          }).then(resolve).catch(reject);
        }).catch(reject);
      }).catch(reject);
    });
  }

  function getVoices() {
    return new Promise(function (resolve, reject) {
      _miot.Service.callXiaoaiNetworkAPI({
        host: 'profile',
        path: '/voiceprint/list'
      }).then(function (res) {
        resolve(res);
      }).catch(function (e) {
        reject(e);
      });
    });
  }

  function saveVoice(nickname, voiceId, cmd) {
    return new Promise(function (resolve, reject) {
      _miot.Service.callXiaoaiNetworkAPI({
        host: 'profile',
        path: '/voiceprint/save',
        method: 1,
        params: {
          nickname: nickname,
          voiceId: voiceId,
          cmd: cmd
        }
      }).then(function (res) {
        resolve(res);
      }).catch(function (e) {
        reject(e);
      });
    });
  }

  function deleteVoice(nickname, voiceId) {
    return new Promise(function (resolve, reject) {
      _miot.Service.callXiaoaiNetworkAPI({
        host: 'profile',
        path: '/voiceprint/delete',
        method: 1,
        params: {
          nickname: nickname,
          voiceId: voiceId
        }
      }).then(function (res) {
        resolve(res);
      }).catch(function (e) {
        reject(e);
      });
    });
  }

  function getSecurity() {
    return new Promise(function (resolve, reject) {
      _miot.Service.callXiaoaiNetworkAPI({
        host: 'profile',
        path: '/userprofile/user_privacy'
      }).then(function (res) {
        resolve(res);
      }).catch(function (e) {
        reject(e);
      });
    });
  }

  function setSecurity(cfg) {
    return new Promise(function (resolve, reject) {
      _miot.Service.callXiaoaiNetworkAPI({
        host: 'profile',
        path: '/userprofile/user_privacy',
        method: 1,
        params: {
          value: JSON.stringify(cfg)
        }
      }).then(function (res) {
        resolve(res);
      }).catch(function (e) {
        reject(e);
      });
    });
  }

  function getChildMode(deviceId) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref25) {
        var deviceID = _ref25.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'path_child_mode',
            method: 'status',
            message: JSON.stringify({})
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function setChildMode(deviceId, childModeMsg) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref26) {
        var deviceID = _ref26.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'path_child_mode',
            method: 'set',
            message: JSON.stringify({
              message: JSON.stringify(childModeMsg)
            })
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function getChildrenProfile() {
    return new Promise(function (resolve, reject) {
      _miot.Service.callXiaoaiNetworkAPI({
        host: 'profile',
        path: '/children_profile/get_children_profiles'
      }).then(function (res) {
        resolve(res);
      }).catch(function (e) {
        reject(e);
      });
    });
  }

  function setChildrenProfile(profiles) {
    return new Promise(function (resolve, reject) {
      _miot.Service.callXiaoaiNetworkAPI({
        host: 'profile',
        path: '/children_profile/set_children_profiles',
        method: 1,
        params: {
          data: JSON.stringify(profiles)
        }
      }).then(function (res) {
        resolve(res);
      }).catch(function (e) {
        reject(e);
      });
    });
  }

  function getTone(deviceId) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref27) {
        var deviceID = _ref27.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'mibrain',
            method: 'tts_vendor_show',
            message: JSON.stringify({})
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function getToneV2(clientId) {
    return new Promise(function (resolve, reject) {
      var basicDev = getBasicDeviceInfo();

      _miot.Service.callXiaoaiNetworkAPI({
        host: 'ai',
        path: '/aivs/soundbox/sso/appTone',
        method: 0,
        params: {
          clientId: basicDev.appId
        }
      }).then(function (res) {
        resolve(res);
      }).catch(function (e) {
        reject(e);
      });
    });
  }

  function sendToneSwitch(deviceId, name, toneid) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref28) {
        var deviceID = _ref28.deviceID;
        var message = !toneid ? JSON.stringify({
          vendor_name: name,
          switch_src: _reactNative.Platform.OS
        }) : JSON.stringify({
          vendor_name: toneid,
          switch_src: _reactNative.Platform.OS,
          language_name: name
        });

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'mibrain',
            method: 'tts_vendor_switch',
            message: message
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function getDlna(deviceId) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref29) {
        var deviceID = _ref29.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'mediaplayer',
            method: 'get_dlna_status',
            message: JSON.stringify({})
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function setDlna(deviceId, dlnaStatus) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref30) {
        var deviceID = _ref30.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'mediaplayer',
            method: 'set_dlna_status',
            message: JSON.stringify({
              status: dlnaStatus
            })
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function getLightEffect(deviceId) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref31) {
        var deviceID = _ref31.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'mediaplayer',
            method: 'get_playled_status',
            message: JSON.stringify({})
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function setLightEffect(deviceId, status) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref32) {
        var deviceID = _ref32.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'mediaplayer',
            method: 'set_playled_status',
            message: JSON.stringify({
              status: status
            })
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function getAuxIn(deviceId) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref33) {
        var deviceID = _ref33.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'linein',
            method: 'get_soft_vol',
            message: JSON.stringify({})
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function setAuxIn(deviceId, vol) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref34) {
        var deviceID = _ref34.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'linein',
            method: 'set_soft_vol',
            message: JSON.stringify({
              vol: vol
            })
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function getDtsMode(deviceId) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref35) {
        var deviceID = _ref35.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'sound_effect',
            method: 'get_mode',
            message: JSON.stringify({})
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function setDtsMode(deviceId, effect, mode) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref36) {
        var deviceID = _ref36.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'sound_effect',
            method: 'set_mode',
            message: JSON.stringify({
              effect: effect,
              mode: mode
            })
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function getDeviceCategoryList(locale) {
    return new Promise(function (resolve, reject) {
      _miot.Service.callXiaoaiNetworkAPI({
        host: 'normal',
        path: '/miot/ir/device_category_list_v1',
        params: {
          locale: locale
        }
      }).then(function (res) {
        resolve(res);
      }).catch(function (e) {
        reject(e);
      });
    });
  }

  function getNlpResult(deviceId) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref37) {
        var deviceID = _ref37.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'mibrain',
            method: 'nlp_result_get',
            message: JSON.stringify({})
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function getMicoConversation(timestamp, limit) {
    return new Promise(function (resolve, reject) {
      _miot.Service.callXiaoaiNetworkAPI({
        host: 'profile',
        path: '/device_profile/conversation',
        params: {
          timestamp: timestamp,
          limit: limit
        }
      }).then(function (res) {
        resolve(res);
      }).catch(function (e) {
        reject(e);
      });
    });
  }

  function getMicoConversationV3_1(timestamp, limit) {
    return new Promise(function (resolve, reject) {
      _miot.Service.callXiaoaiNetworkAPI({
        host: 'profile',
        path: '/device_profile/v2/conversation',
        params: {
          timestamp: timestamp,
          limit: limit
        }
      }).then(function (res) {
        resolve(res);
      }).catch(function (e) {
        reject(e);
      });
    });
  }

  function getConversation(did, timestamp) {
    var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 20;
    return new Promise(function (resolve, reject) {
      getDeviceInfo(did).then(function (_ref38) {
        var innerCapabilities = _ref38.innerCapabilities;

        if (innerCapabilities && innerCapabilities[_capability.AI_PROTOCOL_3_0]) {
          getMicoConversation(timestamp, limit).then(function (res) {
            var code = res.code;

            if (code === 0) {
              resolve(res);
              return;
            }

            reject(res);
          }).catch(reject);
          return;
        }

        getNlpResult(did).then(function (res) {
          var code = res.code;

          if (code === 0) {
            resolve(res);
            return;
          }

          reject(res);
        }).catch(reject);
      }).catch(reject);
    });
  }

  function getControlDeviceList(deviceId, skillName, deviceType) {
    var env = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
    var tipType = arguments.length > 4 ? arguments[4] : undefined;
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref39) {
        var miotDID = _ref39.miotDID;

        _miot.Service.callSmartHomeAPI('/voicectrl/ai_devs', {
          "did": miotDID,
          "skill_name": skillName,
          "device_type": deviceType,
          "env": env,
          "tip_type": tipType
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function getHome() {
    return new Promise(function (resolve, reject) {
      _miot.Service.callSmartHomeAPI('/v2/homeroom/gethome').then(function (res) {
        resolve(res);
      }).catch(function (e) {
        reject(e);
      });
    });
  }

  function getControllers(deviceId) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref40) {
        var miotDID = _ref40.miotDID;

        _miot.Service.callSmartHomeAPI('/v2/irdevice/controllers', {
          parent_id: miotDID
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function getStereo(deviceId) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref41) {
        var deviceID = _ref41.deviceID,
            hardware = _ref41.hardware;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/iot/dcm/get_functional_lan_groups',
          params: {
            deviceId: deviceID,
            hardware: hardware,
            resource: 'stereo'
          }
        }).then(resolve).catch(reject);
      }).catch(reject);
    });
  }

  function isTrue(v) {
    return v === true || v === 'true' || v === 1 || v === '1';
  }

  var CachedAlarmList = [];

  function getAlarmSceneList(did) {
    return new Promise(function (resolve) {
      getAlarm(did).then(function (res) {
        if (!res || !res.data || !res.data.info) {
          resolve([]);
          return;
        }

        var info = typeof res.data.info === 'string' ? JSON.parse(res.data.info) : res.data.info;
        CachedAlarmList = info.alarm || [];
        resolve(CachedAlarmList);
      }).catch(function () {
        resolve([]);
      });
    });
  }

  var CachedAlarmRings = null;

  function getAlarmRings() {
    return new Promise(function (resolve, reject) {
      if (CachedAlarmRings) {
        resolve(CachedAlarmRings);
        return;
      }

      getAlarmConfig().then(function (res) {
        if (res && res.data) {
          CachedAlarmRings = typeof res.data === 'string' ? JSON.parse(res.data) : res.data;
          resolve(CachedAlarmRings);
          return;
        }

        reject(res);
      }).catch(reject);
    });
  }

  function setAlarmSceneStatus(did, alarmId, enable) {
    return new Promise(function (resolve, reject) {
      setAlarmEnable(did, alarmId, enable).then(function (res) {
        if (res && res.data && res.data.code === 0) {
          var target = CachedAlarmList.find(function (_ref42) {
            var id = _ref42.id;
            return id === alarmId;
          });

          if (target) {
            target.status = enable ? 0 : 1;
          }

          resolve();
          return;
        }

        reject();
      }).catch(reject);
    });
  }

  function deleteAlarmScene(did, alarmId) {
    return new Promise(function (resolve, reject) {
      deleteAlarm(did, alarmId).then(function (res) {
        if (res && res.data && res.data.code === 0) {
          CachedAlarmList = CachedAlarmList.filter(function (_ref43) {
            var id = _ref43.id;
            return alarmId === id;
          });
          resolve();
          return;
        }
      }).catch(reject);
    });
  }

  function updateAlarmScene(did, cfg) {
    return new Promise(function (resolve, reject) {
      var _ref44 = cfg || {},
          status = _ref44.status,
          rest = (0, _objectWithoutProperties2.default)(_ref44, ["status"]);

      createOrUpdateAlarm(did, rest).then(function (res) {
        if (res && res.data && res.data.code === 0) {
          if (cfg.id) {
            var targetIndex = CachedAlarmList.findIndex(function (_ref45) {
              var targetId = _ref45.id;
              return targetId === cfg.id;
            });

            if (targetIndex !== -1) {
              CachedAlarmList[targetIndex] = (0, _objectSpread2.default)({}, CachedAlarmList[targetIndex], cfg);
            }
          } else {
            CachedAlarmList.push((0, _objectSpread2.default)({}, cfg));
          }

          resolve();
          return;
        }

        reject(res);
      }).catch(reject);
    });
  }

  var CachedBTStatus = {};

  function getBTStatus(did, delay) {
    return new Promise(function (resolve, reject) {
      setTimeout(function () {
        getBluetoothInfo(did).then(function (res) {
          if (!res || !res.data || !res.data.info) {
            reject();
            return;
          }

          var info = res.data.info;

          if (typeof info === 'string') {
            info = JSON.parse(info);
          }

          CachedBTStatus = info;
          resolve(CachedBTStatus);
        }).catch(reject);
      }, delay || 0);
    });
  }

  function setBTConnectable(did, connectable) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(did).then(function (_ref46) {
        var innerCapabilities = _ref46.innerCapabilities;

        if (innerCapabilities && innerCapabilities[_capability.BLUETOOTH_OPTION_V2]) {
          enableBluetoothV2(did, connectable ? 1 : 0, CachedBTStatus.discover).then(function (res) {
            var code = res.code;

            if (code === 0) {
              getBTStatus(did, 3000).then(function (res) {
                if (res.connect !== (connectable ? 1 : 0)) {
                  reject();
                  return;
                }

                resolve(CachedBTStatus);
              }).catch(reject);
              return;
            }

            reject(res);
          }).catch(reject);
          return;
        }

        enableBluetooth(did, connectable ? 'open' : 'close').then(function (res) {
          if (res && res.data && res.data.code === 0) {
            getBTStatus(did, 3000).then(function (res) {
              if (res.connect !== (connectable ? 1 : 0)) {
                reject();
                return;
              }

              resolve(CachedBTStatus);
            }).catch(reject);
            return;
          }

          reject();
        }).catch(reject);
      }).catch(reject);
    });
  }

  function setBTDiscoverable(did, discoverable) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(did).then(function (_ref47) {
        var innerCapabilities = _ref47.innerCapabilities;

        if (innerCapabilities && innerCapabilities[_capability.BLUETOOTH_OPTION_V2]) {
          enableBluetoothV2(did, CachedBTStatus.connect, discoverable ? 1 : 0).then(function (res) {
            if (res && res.data && res.data.code === 0) {
              getBTStatus(did, 3000).then(function (res) {
                if (res.discover !== (discoverable ? 1 : 0)) {
                  reject();
                  return;
                }

                resolve(CachedBTStatus);
              }).catch(reject);
              return;
            }

            reject();
          }).catch(reject);
          return;
        }

        reject();
      }).catch(reject);
    });
  }

  function disconnectBt(did) {
    return new Promise(function (resolve, reject) {
      disconnectBluetoothDevice(did).then(function (res) {
        if (res && res.data && res.data.code === 0) {
          getBTStatus(did, 3000).then(function () {
            var targetDevice = (CachedBTStatus.devices_list || []).find(function (device) {
              return isTrue(device.connect);
            });

            if (targetDevice) {
              reject();
              return;
            }

            resolve(CachedBTStatus);
          }).catch(reject);
          return;
        }

        reject();
      }).catch(reject);
    });
  }

  function unpairBt(did, mac) {
    return new Promise(function (resolve, reject) {
      unpairBluetoothDevice(did, mac).then(function (res) {
        if (res && res.data && res.data.code === 0) {
          getBTStatus(did, 3000).then(function () {
            var targetDevice = (CachedBTStatus.devices_list || []).find(function (device) {
              return device.bdaddr === mac;
            });

            if (targetDevice) {
              reject();
              return;
            }

            resolve(CachedBTStatus);
          });
          return;
        }

        reject(res);
      }).catch(reject);
    });
  }

  function connectBt(did, mac) {
    return new Promise(function (resolve, reject) {
      connectBluetoothDevice(did, mac).then(function (res) {
        if (res && res.data && res.data.code === 0) {
          getBTStatus(did, 3000).then(function () {
            var targetDevice = (CachedBTStatus.devices_list || []).find(function (device) {
              return device.bdaddr === mac;
            });

            if (targetDevice && isTrue(targetDevice.connect)) {
              resolve(CachedBTStatus);
              return;
            }

            reject();
          });
          return;
        }

        reject();
      }).catch(reject);
    });
  }

  var CachedNearbyWakeupStatus = {};

  function getNearbyWakeupStatus(did) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(did).then(function (_ref48) {
        var innerCapabilities = _ref48.innerCapabilities,
            deviceID = _ref48.deviceID;

        if (innerCapabilities && innerCapabilities[_capability.NEARBY_WAKEUP_CLOUD]) {
          lanAwakeGroup(_miot.Device.owner.ID).then(function (res) {
            if (!res || !res.data) {
              reject(res);
              return;
            }

            var target = null;

            for (var i = 0, l = res.data.length; i < l; i++) {
              var m = res.data[i].devices;
              var n = m.find(function (device) {
                return device.deviceId === deviceID;
              });

              if (n) {
                target = n;
                break;
              }
            }

            if (!target) {
              reject(res);
              return;
            }

            CachedNearbyWakeupStatus = (0, _objectSpread2.default)({}, target, {
              status: target.nearbyStatus === 1 ? 'on' : 'off'
            });
            resolve(CachedNearbyWakeupStatus);
          }).catch(reject);
          return;
        }

        if (innerCapabilities && innerCapabilities[_capability.NEARBY_WAKEUP]) {
          buildVoiceInteraction(did, 2).then(function (res) {
            if (res && res.data && res.data.code === 0) {
              CachedNearbyWakeupStatus = typeof res.data.info === 'string' ? JSON.parse(res.data.info) : res.data.info;
              resolve(CachedNearbyWakeupStatus);
              return;
            }

            reject(res);
          }).catch(reject);
          return;
        }

        reject();
      }).catch(reject);
    });
  }

  function setNearbyWakeupStatus(did, enable) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(did).then(function (_ref49) {
        var innerCapabilities = _ref49.innerCapabilities,
            hardware = _ref49.hardware;

        if (innerCapabilities && innerCapabilities[_capability.NEARBY_WAKEUP_CLOUD]) {
          updateAwakeStatus(null, hardware, enable ? 1 : 0, CachedNearbyWakeupStatus ? CachedNearbyWakeupStatus.resource : '').then(function (res) {
            var code = res.code;

            if (code === 0) {
              CachedNearbyWakeupStatus = (0, _objectSpread2.default)({}, CachedNearbyWakeupStatus || {}, {
                status: enable ? 'on' : 'off'
              });
              resolve();
              return;
            }

            reject();
          }).catch(reject);
          return;
        }

        if (innerCapabilities && innerCapabilities[_capability.NEARBY_WAKEUP]) {
          buildVoiceInteraction(did, enable ? 1 : 0).then(function (res) {
            if (res && res.data && res.data.code === 0) {
              CachedNearbyWakeupStatus = typeof res.data.info === 'string' ? JSON.parse(res.data.info) : res.data.info;
              resolve();
              return;
            }

            reject(res);
          }).catch(reject);
          return;
        }

        reject();
      }).catch(reject);
    });
  }

  var CachedNightModeStatus = {};

  function getNightModeStatus(did) {
    return new Promise(function (resolve, reject) {
      getNightMode(did).then(function (res) {
        if (!res || !res.data || !res.data.info) {
          reject(res);
          return;
        }

        var info = res.data.info;

        if (typeof info === 'string') {
          info = JSON.parse(info);
        }

        CachedNightModeStatus = info;
        resolve(CachedNightModeStatus);
      }).catch(reject);
    });
  }

  function setNightModeStatus(did) {
    var _ref50 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        _ref50$total = _ref50.total,
        total = _ref50$total === undefined ? CachedNightModeStatus.total : _ref50$total,
        _ref50$light = _ref50.light,
        light = _ref50$light === undefined ? CachedNightModeStatus.light : _ref50$light,
        _ref50$volume = _ref50.volume,
        volume = _ref50$volume === undefined ? CachedNightModeStatus.volume : _ref50$volume,
        _ref50$start = _ref50.start,
        start = _ref50$start === undefined ? CachedNightModeStatus.start : _ref50$start,
        _ref50$stop = _ref50.stop,
        stop = _ref50$stop === undefined ? CachedNightModeStatus.stop : _ref50$stop;

    return new Promise(function (resolve, reject) {
      setNightMode(did, total, light, volume, start, stop).then(function (res) {
        var code = res.code;

        if (code === 0) {
          CachedNightModeStatus = {
            total: total,
            light: light,
            volume: volume,
            start: start,
            stop: stop
          };
          resolve();
          return;
        }

        reject();
      }).catch(reject);
    });
  }

  var CachedDts = {};

  function getDtsStatus(did) {
    return new Promise(function (resolve, reject) {
      getDtsMode(did).then(function (res) {
        if (res && res.data) {
          CachedDts = res.data;
          resolve(CachedDts);
        }

        reject(res);
      }).catch(reject);
    });
  }

  function setDtsStatus(did, _ref51) {
    var _ref51$effect = _ref51.effect,
        effect = _ref51$effect === undefined ? CachedDts.effect : _ref51$effect,
        _ref51$mode = _ref51.mode,
        mode = _ref51$mode === undefined ? CachedDts.mode : _ref51$mode;
    return new Promise(function (resolve, reject) {
      setDtsMode(did, effect, mode).then(function (res) {
        var code = res.code;

        if (code === 0) {
          CachedDts = {
            effect: effect,
            mode: mode
          };
          resolve();
          return;
        }

        reject(res);
      }).catch(reject);
    });
  }

  var CachedVoicePrinters = [];

  function getVoicePrinterList() {
    return new Promise(function (resolve, reject) {
      getVoices().then(function (res) {
        if (!res || !res.data) {
          reject(res);
          return;
        }

        CachedVoicePrinters = res.data;
        resolve(res.data);
      }).catch(reject);
    });
  }

  function createVoicePrinter(nickname) {
    return new Promise(function (resolve, reject) {
      if (CachedVoicePrinters.find(function (vp) {
        return vp && vp.nickName === nickname;
      })) {
        reject({
          usableErrorMessage: _i18n.default.nicknameRepeat()
        });
        return;
      }

      if (CachedVoicePrinters.length >= 6) {
        reject({
          usableErrorMessage: _i18n.default.voicePrinterLimit()
        });
        return;
      }

      saveVoice(nickname, null, 'createVoiceInfo').then(function (res) {
        if (!res || !isTrue(res.data)) {
          reject(res);
          return;
        }

        getVoicePrinterList().then(function () {
          var target = CachedVoicePrinters.find(function (_ref52) {
            var nickName = _ref52.nickName;
            return nickName === nickname;
          });

          if (target) {
            resolve(target);
            return;
          }

          reject(res);
        }).catch(reject);
      }).catch(reject);
    });
  }

  function resignVoicePrinter(voiceId, nickname) {
    return new Promise(function (resolve, reject) {
      if (voiceId) {
        saveVoice(nickname, voiceId, 'openRegistration').then(function (res) {
          if (!res || !isTrue(res.data)) {
            reject(res);
            return;
          }

          getVoicePrinterList().then(function () {
            var target = CachedVoicePrinters.find(function (_ref53) {
              var nickName = _ref53.nickName;
              return nickName === nickname;
            });

            if (target) {
              resolve(target);
              return;
            }

            reject(res);
          }).catch(reject);
        }).catch(reject);
        return;
      }

      getVoicePrinterList().then(function (res) {
        var sorted = (0, _toConsumableArray2.default)(res || []).sort(function (a, b) {
          return a.updateTime - b.updateTime < 0 ? -1 : 1;
        });
        CachedVoicePrinters = sorted;
        var target = sorted[0] ? sorted[0].voiceId : '';

        if (target) {
          saveVoice(target.nickName, target.voiceId, 'openRegistration').then(function (res) {
            if (!res || !isTrue(res.data)) {
              reject(res);
              return;
            }

            getVoicePrinterList().then(function () {
              var target = CachedVoicePrinters.find(function (_ref54) {
                var nickName = _ref54.nickName;
                return nickName === nickname;
              });

              if (target) {
                resolve(target);
                return;
              }

              reject(res);
            }).catch(reject);
          }).catch(reject);
          return;
        }

        reject();
      }).catch(reject);
    });
  }

  function updateVoicePrinter(voiceId, nickname) {
    return new Promise(function (resolve, reject) {
      if (voiceId) {
        saveVoice(nickname, voiceId, 'updateNickname').then(function (res) {
          if (!res || !isTrue(res.data)) {
            resignVoicePrinter(voiceId, nickname).then(resolve).catch(function (e) {
              reject(e);
            });
            return;
          }

          resolve();
        }).catch(reject);
        return;
      }

      getVoicePrinterList().then(function (res) {
        var sorted = (0, _toConsumableArray2.default)(res || []).sort(function (a, b) {
          return a.updateTime - b.updateTime < 0 ? -1 : 1;
        });
        CachedVoicePrinters = sorted;
        var target = sorted[0] ? sorted[0].voiceId : '';

        if (target) {
          saveVoice(nickname, target, 'updateNickname').then(function (res) {
            if (!res || !isTrue(res.data)) {
              resignVoicePrinter(voiceId, nickname).then(resolve).catch(function (e) {
                reject(e);
              });
              return;
            }

            CachedVoicePrinters[0].nickname = nickname;
            resolve();
          }).catch(reject);
          return;
        }

        reject();
      }).catch(reject);
    });
  }

  function deleteVoicePrinter(voiceId) {
    return new Promise(function (resolve, reject) {
      if (voiceId) {
        var target = CachedVoicePrinters.find(function (vp) {
          return vp.voiceId === voiceId;
        });
        deleteVoice(target ? target.nickName : '', voiceId).then(function (res) {
          if (res && isTrue(res.data)) {
            CachedVoicePrinters = CachedVoicePrinters.filter(function (vp) {
              return vp.voiceId !== voiceId;
            });
            resolve();
            return;
          }

          reject(res);
        }).catch(reject);
        return;
      }

      getVoicePrinterList().then(function (res) {
        var sorted = (0, _toConsumableArray2.default)(res || []).sort(function (a, b) {
          return a.updateTime - b.updateTime < 0 ? -1 : 1;
        });
        CachedVoicePrinters = sorted;
        var target = sorted[0] ? sorted[0] : null;

        if (target) {
          deleteVoice(target.nickname, target.voiceId).then(function (res) {
            if (!res || !isTrue(res.data)) {
              CachedVoicePrinters = CachedVoicePrinters.filter(function (vp) {
                return vp.voiceId !== voiceId;
              });
              resolve();
              return;
            }

            reject(res);
          }).catch(reject);
          return;
        }

        reject();
      }).catch(reject);
    });
  }

  var CachedChildModeStatus = {};

  function getChildModeStatus(did) {
    return new Promise(function (resolve, reject) {
      getChildMode(did).then(function (res) {
        if (!res || !res.data || !res.data.info) {
          reject(res);
          return;
        }

        CachedChildModeStatus = typeof res.data.info === 'string' ? JSON.parse(res.data.info) : res.data.info;
        resolve(CachedChildModeStatus);
      }).catch(reject);
    });
  }

  function setChildModeStatus(did, cfg) {
    return new Promise(function (resolve, reject) {
      setChildMode(did, cfg).then(function (res) {
        if (res && res.data && res.data.code === 0) {
          if (res.data.info) {
            CachedChildModeStatus = typeof res.data.info === 'string' ? JSON.parse(res.data.info) : res.data.info;
          } else {
            CachedChildModeStatus = (0, _objectSpread2.default)({}, cfg);
          }

          resolve(CachedChildModeStatus);
          return;
        }

        reject();
      }).catch(reject);
    });
  }

  var CachedChildrenList = [];

  function getChildInfoList() {
    return new Promise(function (resolve, reject) {
      getChildrenProfile().then(function (res) {
        if (res && res.data) {
          CachedChildrenList = res.data;
          resolve(CachedChildrenList);
          return;
        }

        reject();
      }).catch(reject);
    });
  }

  function addChildInfo(_ref55) {
    var nickName = _ref55.nickName,
        sex = _ref55.sex,
        birthday = _ref55.birthday;
    return new Promise(function (resolve, reject) {
      if (CachedChildrenList.find(function (child) {
        return child.nickName === nickName;
      })) {
        reject();
        return;
      }

      var list = [].concat((0, _toConsumableArray2.default)(CachedChildrenList), [{
        userID: _miot.Device.owner.ID,
        nickName: nickName,
        sex: sex,
        birthday: birthday
      }]);
      setChildrenProfile(list).then(function (res) {
        if (res && res.code === 0) {
          CachedChildrenList = list;
          resolve(CachedChildrenList);
          return;
        }

        reject();
      }).catch(reject);
    });
  }

  function updateChildInfo(originNickname, cfg) {
    return new Promise(function (resolve, reject) {
      var list = (0, _toConsumableArray2.default)(CachedChildrenList);
      var index = list.findIndex(function (_ref56) {
        var nickName = _ref56.nickName;
        return nickName === originNickname;
      });

      if (index === -1) {
        reject();
        return;
      }

      var target = list[index];

      if (!target) {
        reject();
        return;
      }

      list[index] = (0, _objectSpread2.default)({}, target, cfg);
      setChildrenProfile(list).then(function (res) {
        if (res && res.code === 0) {
          CachedChildrenList = list;
          resolve(CachedChildrenList);
          return;
        }

        reject();
      }).catch(reject);
    });
  }

  function deleteChildInfo(originNickname) {
    return new Promise(function (resolve, reject) {
      if (!originNickname || !CachedChildrenList.find(function (child) {
        return child && child.nickName === originNickname;
      })) {
        reject();
        return;
      }

      var list = CachedChildrenList.filter(function (child) {
        return child && child.nickName !== originNickname;
      });
      setChildrenProfile(list).then(function (res) {
        if (res && res.code === 0) {
          CachedChildrenList = list;
          resolve(CachedChildrenList);
          return;
        }

        reject();
      }).catch(reject);
    });
  }

  var CachedEarthquakeStatus = {};

  function getEarthquakeStatus(did) {
    return new Promise(function (resolve, reject) {
      getEarthquakeConfig(did).then(function (res) {
        if (!res || !res.data) {
          reject(res);
          return;
        }

        CachedEarthquakeStatus = typeof res.data === 'string' ? JSON.parse(res.data) : res.data;
        resolve(CachedEarthquakeStatus);
      }).catch(reject);
    });
  }

  function setEarthquakeStatus(did, cfg) {
    return new Promise(function (resolve, reject) {
      updateEarthQuakeConfig(did, cfg).then(function (res) {
        if (res && isTrue(res.data)) {
          resolve();
          return;
        }

        reject(res);
      }).catch(reject);
    });
  }

  var CachedTimbreStatus = [];

  function getTimbreStatus(did) {
    return new Promise(function (resolve, reject) {
      getTone(did).then(function (res) {
        if (!res || !res.data || !res.data.info) {
          reject(res);
          return;
        }

        var info = typeof res.data.info === 'string' ? JSON.parse(res.data.info) : res.data.info;
        var vendor = info.vendor;
        CachedTimbreStatus = vendor;
        resolve(CachedTimbreStatus);
      }).catch(reject);
    });
  }

  var CachedTimbreStatusV2 = [];

  function getTimbreStatusV2(clientId) {
    return new Promise(function (resolve, reject) {
      getToneV2(clientId).then(function (res) {
        if (!res || !res.data) {
          reject(res);
          return;
        }

        CachedTimbreStatusV2 = parseTimbreStatusV2(res.data);
        resolve(CachedTimbreStatusV2);
      }).catch(reject);
    });
  }

  function getTimbreCurrentSelect(did) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(did).then(function (_ref57) {
        var deviceID = _ref57.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'mibrain',
            method: 'get_lan_tone_status',
            message: JSON.stringify({})
          }
        }).then(function (res) {
          if (res.code != 0) {
            reject({
              isTimeout: true
            });
          } else {
            var info = typeof res.data.info === 'string' ? JSON.parse(res.data.info) : res.data.info;
            resolve(info);
          }
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function parseTimbreStatusV2(data) {
    var vendorList = [];
    data.forEach(function (value) {
      languageType = value.languageType;
      list = value.list;

      if (list) {
        list.forEach(function (toneInfo) {
          toneid = toneInfo.toneid;
          desc = toneInfo.desc;
          chName = toneInfo.chName;
          vendorList.push({
            name: languageType,
            toneid: toneid.length > 0 ? toneid : languageType,
            desc: desc.length > 0 ? desc : chName,
            selected: false
          });
        });
      }
    });
    return vendorList;
  }

  function setTimbreStatus(did, index, isTimbreV2) {
    return new Promise(function (resolve, reject) {
      var toneid;
      var timebreStatus = CachedTimbreStatus;

      if (isTimbreV2) {
        timebreStatus = CachedTimbreStatusV2;
        toneid = timebreStatus[index].toneid || '';
      }

      sendToneSwitch(did, timebreStatus[index] ? timebreStatus[index].name : '', toneid).then(function (res) {
        if (res && res.data && res.data.code === 0) {
          var tempStatus = (0, _toConsumableArray2.default)(timebreStatus).map(function (item, i) {
            return (0, _objectSpread2.default)({}, item, {
              selected: index === i
            });
          });

          if (isTimbreV2) {
            CachedTimbreStatusV2 = tempStatus;
          } else {
            CachedTimbreStatus = tempStatus;
          }

          resolve(tempStatus);
          return;
        }

        reject();
      }).catch(reject);
    });
  }

  var CachedDlnaStatus = {};

  function getDlnaStatus(did) {
    return new Promise(function (resolve, reject) {
      getDlna(did).then(function (res) {
        if (!res || !res.data) {
          reject(res);
          return;
        }

        CachedDlnaStatus = res.data;
        resolve(CachedDlnaStatus);
      }).catch(reject);
    });
  }

  function setDlnaStatus(did, enable) {
    return new Promise(function (resolve, reject) {
      setDlna(did, enable ? 1 : 0).then(function (res) {
        if (res && res.data && res.data.code === 0) {
          CachedDlnaStatus = (0, _objectSpread2.default)({}, CachedDlnaStatus, {
            info: enable ? 1 : 0
          });
          resolve();
          return;
        }

        reject(res);
      }).catch(reject);
    });
  }

  var CachedAuxInVolume = {};

  function getAuxInVolume(did) {
    return new Promise(function (resolve, reject) {
      getAuxIn(did).then(function (res) {
        if (res && res.data) {
          CachedAuxInVolume = typeof res.data === 'string' ? JSON.parse(res.data) : res.data;
          resolve(CachedAuxInVolume);
          return;
        }

        reject(res);
      }).catch(reject);
    });
  }

  function setAuxInVolume(did, vol) {
    return new Promise(function (resolve, reject) {
      setAuxIn(did, vol < 0 ? 0 : vol > 10 ? 10 : vol).then(function (res) {
        if (res && res.data && res.data.code === 0) {
          CachedAuxInVolume = (0, _objectSpread2.default)({}, CachedAuxInVolume, {
            vol: vol
          });
          resolve();
          return;
        }

        reject();
      }).catch(reject);
    });
  }

  var CachedLightEffectStatus = {};

  function getLightEffectStatus(did) {
    return new Promise(function (resolve, reject) {
      getLightEffect(did).then(function (res) {
        if (!res || !res.data) {
          reject(res);
          return;
        }

        CachedLightEffectStatus = res.data;
        resolve(CachedLightEffectStatus);
      }).catch(reject);
    });
  }

  function setLightEffectStatus(did, enable) {
    return new Promise(function (resolve, reject) {
      setLightEffect(did, enable ? 1 : 0).then(function (res) {
        if (res && res.data && res.data.code === 0) {
          CachedLightEffectStatus = (0, _objectSpread2.default)({}, CachedLightEffectStatus, {
            info: enable ? 1 : 0
          });
          resolve();
          return;
        }

        reject(res);
      }).catch(reject);
    });
  }

  var CachedContinuousTalkStatus = {};

  function getContinuousTalkStatus(did) {
    return new Promise(function (resolve, reject) {
      buildVoiceInteraction(did, 6).then(function (res) {
        if (res && res.data && res.data.code === 0) {
          CachedContinuousTalkStatus = typeof res.data.info === 'string' ? JSON.parse(res.data.info) : res.data.info;
          resolve(CachedContinuousTalkStatus);
          return;
        }

        reject(res);
      }).catch(reject);
    });
  }

  function setContinuousTalkStatus(did, enable) {
    return new Promise(function (resolve, reject) {
      buildVoiceInteraction(did, enable ? 5 : 4).then(function (res) {
        if (res && res.data && res.data.code === 0) {
          CachedContinuousTalkStatus = {
            status: enable ? 'on' : 'off'
          };
          resolve();
          return;
        }

        reject(res);
      }).catch(reject);
    });
  }

  var CachedPlayerInfo = null;
  var CachedPlayerStatus = {};
  var CachedRoomInfo = null;
  var CachedMusicDetails = {};
  var CachedPlayerListenersCount = 0;
  var intervalPlayerStatus = null;
  var CachedStereoId = null;

  function listenPlayerStatus(fn) {
    CachedPlayerListenersCount += 1;

    var listener = _reactNative.DeviceEventEmitter.addListener(_consts.PlayerListenerKey, fn);

    if (CachedPlayerInfo) {
      fn(CachedPlayerInfo);
    }

    tryStartPlayerStatusInterval();
    return {
      remove: function remove() {
        listener && listener.remove();
        CachedPlayerListenersCount -= 1;

        if (CachedPlayerListenersCount <= 0 && intervalPlayerStatus) {
          clearInterval(intervalPlayerStatus);
          intervalPlayerStatus = null;
        }
      }
    };
  }

  function emitPlayerStatus() {
    CachedPlayerInfo = {
      playerStatus: CachedPlayerStatus,
      roomInfo: CachedRoomInfo
    };

    _reactNative.DeviceEventEmitter.emit(_consts.PlayerListenerKey, CachedPlayerInfo);
  }

  function getPlayerStatusOneTime() {
    getFunctionalLanGroups().then(function (res) {
      if (res.data.pairedGroupInfo.stereoInfo.length > 0 && res.data.pairedGroupInfo.stereoInfo.server && res.data.pairedGroupInfo.stereoInfo.server === res.data.pairedGroupInfo.stereoInfo.leftDeviceId) {
        CachedStereoId = res.data.pairedGroupInfo.stereoInfo.server;
      }

      if (res.data.pairedGroupInfo.multiRoomInfo.groups.length > 0 && res.data.pairedGroupInfo.multiRoomInfo.groups[0].server === (res.data.pairedGroupInfo.multiRoomInfo.groups[0].members[0].deviceId || res.data.pairedGroupInfo.multiRoomInfo.groups[0].members[1].deviceId)) {
        CachedStereoId = res.data.pairedGroupInfo.multiRoomInfo.groups[0].server;
      }
    });
    getPlayerData(null, CachedStereoId).then(function (res) {
      if (!res || !res.data || !res.data.info) {
        return;
      }

      CachedPlayerStatus = typeof res.data.info === 'string' ? (0, _parseNumberJson.default)(res.data.info) : res.data.info;

      if ([1, 2].indexOf(CachedPlayerStatus.status) === -1 || !CachedPlayerStatus || !CachedPlayerStatus.play_song_detail) {
        emitPlayerStatus();
        return;
      }

      if (CachedPlayerStatus.play_song_detail.title) {
        _miot.Device.getRoomInfoForCurrentHome().then(function (roomInfo) {
          CachedRoomInfo = roomInfo.data;
          emitPlayerStatus();
        }).catch(function (e) {
          emitPlayerStatus();
        });

        return;
      }

      var currentAudioId = CachedPlayerStatus.play_song_detail.audio_id || CachedPlayerStatus.play_song_detail.global_id;
      var audioIds = [currentAudioId];
      var cachedAudio = CachedMusicDetails[currentAudioId];
      (cachedAudio ? Promise.resolve({
        data: [cachedAudio]
      }) : getMusicDetails(audioIds, CachedPlayerStatus)).then(function (audios) {
        var audioList = audios ? audios.data || [] : [];
        audioIds.forEach(function (id, index) {
          var audio = audioList[index];

          if (!audio) {
            return;
          }

          CachedMusicDetails[id] = audio;
        });
        var targetAudio = CachedMusicDetails[currentAudioId];

        if (targetAudio) {
          CachedPlayerStatus.play_song_detail.title = targetAudio.name || targetAudio.title || targetAudio.cpDisplayName || targetAudio.originName;
          CachedPlayerStatus.play_song_detail.artist = targetAudio.artistName || targetAudio.broadcaster || targetAudio.artistDisplayName;
          CachedPlayerStatus.play_song_detail.cover = targetAudio.cover || targetAudio.coverURL;
        }

        _miot.Device.getRoomInfoForCurrentHome().then(function (roomInfo) {
          CachedRoomInfo = roomInfo.data;
          emitPlayerStatus();
        }).catch(function (e) {
          emitPlayerStatus();
        });
      }).catch(function (e) {});
    }).catch(function (e) {});
  }

  function updateStereoId() {
    getDeviceInfo().then(function (_ref58) {
      var deviceID = _ref58.deviceID;
      getStereo().then(function (res) {
        if (res && res.data && res.data.pairedGroupInfo && res.data.pairedGroupInfo.stereoInfo && res.data.pairedGroupInfo.stereoInfo) {
          var target = (res.data.pairedGroupInfo.stereoInfo || []).find(function (_ref59) {
            var leftDeviceId = _ref59.leftDeviceId,
                rightDeviceId = _ref59.rightDeviceId;
            return deviceID === leftDeviceId || deviceID === rightDeviceId;
          });

          if (target && target.server) {
            CachedStereoId = target.server;
          }
        }
      }).catch(function (e) {});
    }).catch(function () {});
  }

  function tryStartPlayerStatusInterval() {
    if (intervalPlayerStatus) {
      return;
    }

    getPlayerStatusOneTime();
    intervalPlayerStatus = setInterval(function () {
      getPlayerStatusOneTime();
    }, 5000);
  }

  function setPlayerStatus(action) {
    return new Promise(function (resolve, reject) {
      controlPlayer(null, action).then(function (res) {}).catch(reject);
    });
  }

  var CachedSecurityStatus = null;

  function getSecurityStatus() {
    return new Promise(function (resolve, reject) {
      getSecurity().then(function (res) {
        if (res && res.data) {
          CachedSecurityStatus = res.data;
          resolve(CachedSecurityStatus);
          return;
        }

        reject();
      }).catch(reject);
    });
  }

  function setSecurityStatus(cfg) {
    return new Promise(function (resolve, reject) {
      setSecurity(cfg).then(function (res) {
        if (res && isTrue(res.data)) {
          resolve(cfg);
          return;
        }

        reject();
      }).catch(reject);
    });
  }

  var skillAiCapability = /^ai_/i;

  function getSkillAiCapbilities(capabilities) {
    if (!capabilities) {
      return '';
    }

    var ret = [];

    for (var key in capabilities) {
      if (capabilities.hasOwnProperty(key) && capabilities[key] && skillAiCapability.test(key)) {
        ret.push(key);
      }
    }

    return ret.join(',');
  }

  var CachedAddressStatus = {};

  function getAddressStatus(did) {
    return new Promise(function (resolve, reject) {
      getAddressConfig(did).then(function (res) {
        if (!res || !res.data) {
          reject(res);
          return;
        }

        CachedAddressStatus = typeof res.data === 'string' ? JSON.parse(res.data) : res.data;
        resolve(CachedAddressStatus);
      }).catch(reject);
    });
  }

  function getAddressConfig(deviceId) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref60) {
        var deviceID = _ref60.deviceID,
            appId = _ref60.appId;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'lbs',
          path: '/miai/lbs/v2/poi/get',
          params: {
            deviceId: deviceID,
            appId: appId
          }
        }).then(function (res) {
          if (!res || !res.data) {
            resolve(res);
            return;
          }

          var data = typeof res.data === 'string' ? JSON.parse(res.data) : res.data;

          if (!data.position || !data.position.name) {
            resolve(res);
            return;
          }

          var ret = {
            data: (0, _objectSpread2.default)({}, data.data || {}, {
              positionData: {
                address: data.position.name,
                city: data.position.city,
                latitude: data.position.lat,
                longitude: data.position.lng,
                district: data.position.district
              }
            })
          };
          resolve(ret);
        }).catch(function () {
          resolve(reject);
        });
      }).catch(reject);
    });
  }

  function setAddressStatus(did, cfg) {
    return new Promise(function (resolve, reject) {
      updateAddressConfig(did, cfg).then(function (res) {
        if (res) {
          resolve();
          return;
        }

        reject(res);
      }).catch(reject);
    });
  }

  function updateAddressConfig(deviceId, poiJsons) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo(deviceId).then(function (_ref61) {
        var deviceID = _ref61.deviceID,
            appId = _ref61.appId;

        var _ref62 = poiJsons || {},
            data = _ref62.data;

        var params = {};

        if (data && data.positionData && data.positionData.address) {
          params.address = data.positionData.address;
          params.city = data.positionData.city;
          params.district = data.positionData.district;
          params.lat = data.positionData.latitude;
          params.lng = data.positionData.longitude;
          params.name = data.positionData.address;
          params.position = '';
          params.appId = appId;
        }

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'lbs',
          path: '/miai/lbs/v2/poi/set',
          method: 1,
          params: (0, _objectSpread2.default)({
            deviceId: deviceID
          }, params)
        }).then(resolve);
      }).catch(reject);
    });
  }

  function getCustomIRSkillList(params) {
    return new Promise(function (resolve, reject) {
      getDeviceInfo().then(function (_ref63) {
        var deviceID = _ref63.deviceID,
            innerCapabilities = _ref63.innerCapabilities;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'aitrainv2',
          path: '/api/skills/group',
          method: 0,
          params: params,
          cookie: {
            ai_client_id: "657889654475442824156237318",
            ai_miot_did: _miot.Device.deviceID,
            mico_device_id: deviceID,
            ai_app_cap: getSkillAiCapbilities(innerCapabilities)
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (err) {
          reject(err);
        });
      }).catch(function (err) {
        reject(err);
      });
    });
  }

  function setPlayerVolume(volume) {
    var message = {
      volume: volume
    };
    return new Promise(function (resolve, reject) {
      getDeviceInfo().then(function (_ref64) {
        var deviceID = _ref64.deviceID;

        _miot.Service.callXiaoaiNetworkAPI({
          host: 'normal',
          path: '/remote/ubus',
          method: 1,
          params: {
            deviceId: deviceID,
            path: 'mediaplayer',
            method: 'player_set_volume',
            message: JSON.stringify(message)
          }
        }).then(function (res) {
          resolve(res);
        }).catch(function (e) {
          reject(e);
        });
      }).catch(reject);
    });
  }

  function setMicroStatus(enabled) {
    return new Promise(function (resolve, reject) {
      _miot.Device.getDeviceWifi().callMethod('set_microphone_MicrophoneMute', [enabled]).then(function (res) {
        if (res.code === 0) {
          resolve(res);
        } else {
          reject({});
        }
      }).catch(function (err) {
        reject(err);
      });
    });
  }

  function getMicroStatus() {
    return new Promise(function (resolve, reject) {
      _miot.Device.getDeviceWifi().callMethod('get_prop', ['microphone_MicrophoneMute']).then(function (res) {
        if (res.code === 0) {
          resolve(res);
        } else {
          reject({});
        }
      }).catch(function (err) {
        reject(err);
      });
    });
  }
},10043,[14305,14359,14407,14317,14314,10033,10074,10005,10046,10049,10007,10097,10109]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Features = exports.LIGHT_EFFECT = exports.AUX_IN = exports.CONTROL_DEVICE = exports.TALK_HISTORY = exports.TRAIN_SCHEDULE = exports.CLOCK = exports.MICO_PHONE = exports.DLNA = exports.LAMP_EFFICACY = exports.USER_NICK_NAME = exports.SCHOOL_TIMETABLE = exports.DIALOGUE_3_1 = exports.SYSTEM_TIME_CERTIFY = exports.CUSTOM_IR = exports.FORCE_OTA = exports.CONTINUOUS_DIALOGUE = exports.BABY_SCHEDULE = exports.VOIP_USED_TIME = exports.MESH_CONFLICT_CHECK = exports.CHINA_MOBILE_IMS = exports.BLE_GATEWAY = exports.MESH = exports.XIAOMI_VOIP = exports.VOIP_SIGNAL = exports.CHILD_MODE_2 = exports.CHILD_MODE = exports.AI_PROTOCOL_3_0 = exports.TONE_CLOUD_SETTING = exports.TONE_SETTING = exports.CLASSIFIED_ALARM = exports.VOICE_PRINT_MULTIDEVICE = exports.VOICE_PRINT_NEW = exports.VOICE_PRINT = exports.FAMILY_ALBUM = exports.EARTHQUAKE = exports.SKILL_TRY = exports.DTS_SOUND_EFFECT = exports.MULTIROOM_MUSIC = exports.STEREO_MODE_V2 = exports.STEREO_MODE = exports.SCREEN_MODE = exports.NIGHT_MODE_DETAIL = exports.DIDI_AUTH = exports.LOCAL_PLAY = exports.NEARBY_WAKEUP_CLOUD = exports.NEARBY_WAKEUP = exports.NIGHT_MODE = exports.BLUETOOTH_OPTION_V2 = exports.ALARM_REPEAT_OPTION_V2 = exports.MITV_CONTROL_WAKEUP = exports.PLAYER_PAUSE_TIMER = undefined;
  var PLAYER_PAUSE_TIMER = 'player_pause_timer';
  exports.PLAYER_PAUSE_TIMER = PLAYER_PAUSE_TIMER;
  var MITV_CONTROL_WAKEUP = 'mitv_control_wakeup';
  exports.MITV_CONTROL_WAKEUP = MITV_CONTROL_WAKEUP;
  var ALARM_REPEAT_OPTION_V2 = 'alarm_repeat_option_v2';
  exports.ALARM_REPEAT_OPTION_V2 = ALARM_REPEAT_OPTION_V2;
  var BLUETOOTH_OPTION_V2 = 'bluetooth_option_v2';
  exports.BLUETOOTH_OPTION_V2 = BLUETOOTH_OPTION_V2;
  var NIGHT_MODE = 'night_mode';
  exports.NIGHT_MODE = NIGHT_MODE;
  var NEARBY_WAKEUP = 'nearby_wakeup';
  exports.NEARBY_WAKEUP = NEARBY_WAKEUP;
  var NEARBY_WAKEUP_CLOUD = 'nearby_wakeup_cloud';
  exports.NEARBY_WAKEUP_CLOUD = NEARBY_WAKEUP_CLOUD;
  var LOCAL_PLAY = 'local_play';
  exports.LOCAL_PLAY = LOCAL_PLAY;
  var DIDI_AUTH = 'didi_auth';
  exports.DIDI_AUTH = DIDI_AUTH;
  var NIGHT_MODE_DETAIL = 'night_mode_detail';
  exports.NIGHT_MODE_DETAIL = NIGHT_MODE_DETAIL;
  var SCREEN_MODE = 'screen_mode';
  exports.SCREEN_MODE = SCREEN_MODE;
  var STEREO_MODE = 'stereo_mode';
  exports.STEREO_MODE = STEREO_MODE;
  var STEREO_MODE_V2 = 'stereo_mode_v2';
  exports.STEREO_MODE_V2 = STEREO_MODE_V2;
  var MULTIROOM_MUSIC = 'multiroom_music';
  exports.MULTIROOM_MUSIC = MULTIROOM_MUSIC;
  var DTS_SOUND_EFFECT = 'dts_sound_effect';
  exports.DTS_SOUND_EFFECT = DTS_SOUND_EFFECT;
  var SKILL_TRY = 'skill_try';
  exports.SKILL_TRY = SKILL_TRY;
  var EARTHQUAKE = 'earthquake';
  exports.EARTHQUAKE = EARTHQUAKE;
  var FAMILY_ALBUM = 'family_album';
  exports.FAMILY_ALBUM = FAMILY_ALBUM;
  var VOICE_PRINT = 'voice_print';
  exports.VOICE_PRINT = VOICE_PRINT;
  var VOICE_PRINT_NEW = 'voice_print_new';
  exports.VOICE_PRINT_NEW = VOICE_PRINT_NEW;
  var VOICE_PRINT_MULTIDEVICE = 'voice_print_multidevice';
  exports.VOICE_PRINT_MULTIDEVICE = VOICE_PRINT_MULTIDEVICE;
  var CLASSIFIED_ALARM = 'classified_alarm';
  exports.CLASSIFIED_ALARM = CLASSIFIED_ALARM;
  var TONE_SETTING = 'tone_setting';
  exports.TONE_SETTING = TONE_SETTING;
  var TONE_CLOUD_SETTING = 'yunduantts';
  exports.TONE_CLOUD_SETTING = TONE_CLOUD_SETTING;
  var AI_PROTOCOL_3_0 = 'ai_protocol_3_0';
  exports.AI_PROTOCOL_3_0 = AI_PROTOCOL_3_0;
  var CHILD_MODE = 'child_mode';
  exports.CHILD_MODE = CHILD_MODE;
  var CHILD_MODE_2 = 'child_mode_2';
  exports.CHILD_MODE_2 = CHILD_MODE_2;
  var VOIP_SIGNAL = 'voip_signal';
  exports.VOIP_SIGNAL = VOIP_SIGNAL;
  var XIAOMI_VOIP = 'xiaomi_voip';
  exports.XIAOMI_VOIP = XIAOMI_VOIP;
  var MESH = 'mesh';
  exports.MESH = MESH;
  var BLE_GATEWAY = 'ble_gateway';
  exports.BLE_GATEWAY = BLE_GATEWAY;
  var CHINA_MOBILE_IMS = 'china_mobile_ims';
  exports.CHINA_MOBILE_IMS = CHINA_MOBILE_IMS;
  var MESH_CONFLICT_CHECK = 'mesh_conflict_check';
  exports.MESH_CONFLICT_CHECK = MESH_CONFLICT_CHECK;
  var VOIP_USED_TIME = 'voip_used_time';
  exports.VOIP_USED_TIME = VOIP_USED_TIME;
  var BABY_SCHEDULE = 'baby_schedule';
  exports.BABY_SCHEDULE = BABY_SCHEDULE;
  var CONTINUOUS_DIALOGUE = 'continuous_dialogue';
  exports.CONTINUOUS_DIALOGUE = CONTINUOUS_DIALOGUE;
  var FORCE_OTA = 'force_ota';
  exports.FORCE_OTA = FORCE_OTA;
  var CUSTOM_IR = 'custom_ir';
  exports.CUSTOM_IR = CUSTOM_IR;
  var SYSTEM_TIME_CERTIFY = 'system_time_certify';
  exports.SYSTEM_TIME_CERTIFY = SYSTEM_TIME_CERTIFY;
  var DIALOGUE_3_1 = 'dialogue_3.1';
  exports.DIALOGUE_3_1 = DIALOGUE_3_1;
  var SCHOOL_TIMETABLE = 'school_timetable';
  exports.SCHOOL_TIMETABLE = SCHOOL_TIMETABLE;
  var USER_NICK_NAME = 'user_nick_name';
  exports.USER_NICK_NAME = USER_NICK_NAME;
  var LAMP_EFFICACY = 'lamp_efficacy';
  exports.LAMP_EFFICACY = LAMP_EFFICACY;
  var DLNA = 'dlna';
  exports.DLNA = DLNA;
  var MICO_PHONE = 'mico_phone';
  exports.MICO_PHONE = MICO_PHONE;
  var CLOCK = 'clock';
  exports.CLOCK = CLOCK;
  var TRAIN_SCHEDULE = 'train_schedule';
  exports.TRAIN_SCHEDULE = TRAIN_SCHEDULE;
  var TALK_HISTORY = 'talk_history';
  exports.TALK_HISTORY = TALK_HISTORY;
  var CONTROL_DEVICE = 'control_device';
  exports.CONTROL_DEVICE = CONTROL_DEVICE;
  var AUX_IN = 'aux_in';
  exports.AUX_IN = AUX_IN;
  var LIGHT_EFFECT = 'light_effect';
  exports.LIGHT_EFFECT = LIGHT_EFFECT;
  var Features = {
    micoCapability: [PLAYER_PAUSE_TIMER, MITV_CONTROL_WAKEUP, ALARM_REPEAT_OPTION_V2, BLUETOOTH_OPTION_V2, NIGHT_MODE, NEARBY_WAKEUP, NEARBY_WAKEUP_CLOUD, LOCAL_PLAY, DIDI_AUTH, NIGHT_MODE_DETAIL, SCREEN_MODE, STEREO_MODE, STEREO_MODE_V2, MULTIROOM_MUSIC, DTS_SOUND_EFFECT, SKILL_TRY, EARTHQUAKE, FAMILY_ALBUM, VOICE_PRINT, VOICE_PRINT_NEW, VOICE_PRINT_MULTIDEVICE, CLASSIFIED_ALARM, TONE_SETTING, TONE_CLOUD_SETTING, AI_PROTOCOL_3_0, CHILD_MODE, VOIP_SIGNAL, XIAOMI_VOIP, MESH, BLE_GATEWAY, CHINA_MOBILE_IMS, CHILD_MODE_2, MESH_CONFLICT_CHECK, VOIP_USED_TIME, BABY_SCHEDULE, CONTINUOUS_DIALOGUE, FORCE_OTA, CUSTOM_IR, SYSTEM_TIME_CERTIFY, DIALOGUE_3_1, SCHOOL_TIMETABLE, USER_NICK_NAME, LAMP_EFFICACY, DLNA, MICO_PHONE]
  };
  exports.Features = Features;
},10046,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StaticCapabilities = exports.RelateCapabilities = exports.ClockRepeat = exports.ClockRing = exports.ClockVolume = exports.SecuritySetting = exports.BtGateway = exports.UserManual = exports.ContinuousTalk = exports.LightEffect = exports.DLNA = exports.AuxIn = exports.TimbreV2 = exports.Timbre = exports.Earthquake = exports.ChildModeTime = exports.ChildModeSwitch = exports.ChildMode = exports.VoicePrinter = exports.DTS = exports.NightModeDetail = exports.NightMode = exports.NearbyWakeup = exports.MeshAlert = exports.BTDiscoverable = exports.BTSetting = exports.Stereo = exports.Clock = exports.TrainSchedule = exports.ControlDevice = exports.TalkHistory = exports.IRController = exports.Player = undefined;

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _capability = _$$_REQUIRE(_dependencyMap[2]);

  var _RelateCapabilities, _countryCapabilities, _countryCapabilities2, _countryCapabilities3, _countryCapabilities4, _countryCapabilities5, _countryCapabilities6, _countryCapabilities7, _countryCapabilities8, _countryCapabilities9, _countryCapabilities10, _countryCapabilities11, _countryCapabilities12, _countryCapabilities13, _countryCapabilities14, _countryCapabilities15, _countryCapabilities16, _countryCapabilities17, _countryCapabilities18, _countryCapabilities19, _countryCapabilities20, _countryCapabilities21, _countryCapabilities22, _countryCapabilities23, _countryCapabilities24, _countryCapabilities25, _countryCapabilities26, _countryCapabilities27, _countryCapabilities28, _countryCapabilities29, _countryCapabilities30, _countryCapabilities31, _countryCapabilities32, _countryCapabilities33, _countryCapabilities34, _countryCapabilities35, _countryCapabilities36, _countryCapabilities37;

  var Icons = {
    get S12() {
      return _$$_REQUIRE(_dependencyMap[3]);
    },

    get LX01() {
      return _$$_REQUIRE(_dependencyMap[4]);
    },

    get LX05A() {
      return _$$_REQUIRE(_dependencyMap[5]);
    },

    get LX05() {
      return _$$_REQUIRE(_dependencyMap[6]);
    },

    get LX06() {
      return _$$_REQUIRE(_dependencyMap[7]);
    },

    get LX06A() {
      return _$$_REQUIRE(_dependencyMap[8]);
    },

    get L07A() {
      return _$$_REQUIRE(_dependencyMap[9]);
    },

    get LX04() {
      return _$$_REQUIRE(_dependencyMap[10]);
    },

    get LX04Offline() {
      return _$$_REQUIRE(_dependencyMap[11]);
    },

    get X08A() {
      return _$$_REQUIRE(_dependencyMap[12]);
    },

    get X08C() {
      return _$$_REQUIRE(_dependencyMap[13]);
    },

    get L09A() {
      return _$$_REQUIRE(_dependencyMap[14]);
    },

    get L05C() {
      return _$$_REQUIRE(_dependencyMap[15]);
    },

    get L05B() {
      return _$$_REQUIRE(_dependencyMap[15]);
    },

    get L09B() {
      return _$$_REQUIRE(_dependencyMap[16]);
    },

    get L16A() {
      return _$$_REQUIRE(_dependencyMap[17]);
    }

  };
  var Player = 'Player';
  exports.Player = Player;
  var IRController = 'IRController';
  exports.IRController = IRController;
  var TalkHistory = 'TalkHistory';
  exports.TalkHistory = TalkHistory;
  var ControlDevice = 'ControlDevice';
  exports.ControlDevice = ControlDevice;
  var TrainSchedule = 'TrainSchedule';
  exports.TrainSchedule = TrainSchedule;
  var Clock = 'Clock';
  exports.Clock = Clock;
  var Stereo = 'Stereo';
  exports.Stereo = Stereo;
  var BTSetting = 'BTSetting';
  exports.BTSetting = BTSetting;
  var BTDiscoverable = 'BTDiscoverable';
  exports.BTDiscoverable = BTDiscoverable;
  var MeshAlert = 'MeshAlert';
  exports.MeshAlert = MeshAlert;
  var NearbyWakeup = 'NearbyWakeup';
  exports.NearbyWakeup = NearbyWakeup;
  var NightMode = 'NightMode';
  exports.NightMode = NightMode;
  var NightModeDetail = 'NightModeDetail';
  exports.NightModeDetail = NightModeDetail;
  var DTS = 'DTS';
  exports.DTS = DTS;
  var VoicePrinter = 'VoicePrinter';
  exports.VoicePrinter = VoicePrinter;
  var ChildMode = 'ChildMode';
  exports.ChildMode = ChildMode;
  var ChildModeSwitch = 'ChildModeSwitch';
  exports.ChildModeSwitch = ChildModeSwitch;
  var ChildModeTime = 'ChildModeTime';
  exports.ChildModeTime = ChildModeTime;
  var Earthquake = 'Earthquake';
  exports.Earthquake = Earthquake;
  var Timbre = 'Timbre';
  exports.Timbre = Timbre;
  var TimbreV2 = 'TimbreV2';
  exports.TimbreV2 = TimbreV2;
  var AuxIn = 'AuxIn';
  exports.AuxIn = AuxIn;
  var DLNA = 'DLNA';
  exports.DLNA = DLNA;
  var LightEffect = 'LightEffect';
  exports.LightEffect = LightEffect;
  var ContinuousTalk = 'ContinuousTalk';
  exports.ContinuousTalk = ContinuousTalk;
  var UserManual = 'UserManual';
  exports.UserManual = UserManual;
  var BtGateway = 'BtGateway';
  exports.BtGateway = BtGateway;
  var SecuritySetting = 'SecuritySetting';
  exports.SecuritySetting = SecuritySetting;
  var ClockVolume = 'ClockVolume';
  exports.ClockVolume = ClockVolume;
  var ClockRing = 'ClockRing';
  exports.ClockRing = ClockRing;
  var ClockRepeat = 'ClockRepeat';
  exports.ClockRepeat = ClockRepeat;
  var RelateCapabilities = (_RelateCapabilities = {}, (0, _defineProperty2.default)(_RelateCapabilities, BTDiscoverable, [_capability.BLUETOOTH_OPTION_V2]), (0, _defineProperty2.default)(_RelateCapabilities, MeshAlert, [_capability.MESH_CONFLICT_CHECK]), (0, _defineProperty2.default)(_RelateCapabilities, BtGateway, [_capability.BLE_GATEWAY, _capability.MESH]), (0, _defineProperty2.default)(_RelateCapabilities, ContinuousTalk, [_capability.CONTINUOUS_DIALOGUE]), (0, _defineProperty2.default)(_RelateCapabilities, ChildMode, [_capability.CHILD_MODE, _capability.CHILD_MODE_2]), (0, _defineProperty2.default)(_RelateCapabilities, ChildModeSwitch, [_capability.CHILD_MODE_2]), (0, _defineProperty2.default)(_RelateCapabilities, DLNA, [_capability.DLNA]), (0, _defineProperty2.default)(_RelateCapabilities, Timbre, [_capability.TONE_SETTING]), (0, _defineProperty2.default)(_RelateCapabilities, TimbreV2, [_capability.TONE_CLOUD_SETTING]), (0, _defineProperty2.default)(_RelateCapabilities, NearbyWakeup, [_capability.NEARBY_WAKEUP, _capability.NEARBY_WAKEUP_CLOUD]), (0, _defineProperty2.default)(_RelateCapabilities, NightMode, [_capability.NIGHT_MODE]), (0, _defineProperty2.default)(_RelateCapabilities, NightModeDetail, [_capability.NIGHT_MODE_DETAIL]), (0, _defineProperty2.default)(_RelateCapabilities, DTS, [_capability.DTS_SOUND_EFFECT]), (0, _defineProperty2.default)(_RelateCapabilities, VoicePrinter, [_capability.VOICE_PRINT_MULTIDEVICE, _capability.VOICE_PRINT, _capability.VOICE_PRINT_NEW]), (0, _defineProperty2.default)(_RelateCapabilities, Earthquake, [_capability.EARTHQUAKE]), (0, _defineProperty2.default)(_RelateCapabilities, LightEffect, [_capability.LAMP_EFFICACY]), (0, _defineProperty2.default)(_RelateCapabilities, Clock, [_capability.CLASSIFIED_ALARM]), (0, _defineProperty2.default)(_RelateCapabilities, ClockRing, [_capability.CLASSIFIED_ALARM]), (0, _defineProperty2.default)(_RelateCapabilities, ClockRepeat, [_capability.ALARM_REPEAT_OPTION_V2]), (0, _defineProperty2.default)(_RelateCapabilities, Stereo, [_capability.STEREO_MODE, _capability.STEREO_MODE_V2]), _RelateCapabilities);
  exports.RelateCapabilities = RelateCapabilities;
  var StaticCapabilities = {
    S12: {
      model: 'xiaomi.wifispeaker.s12',
      hardware: 'S12',
      icon: Icons.S12,
      iconOffline: Icons.S12,
      appId: '2882303761517406012',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, BTSetting, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities = {}, (0, _defineProperty2.default)(_countryCapabilities, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities, VoicePrinter, ['none']), (0, _defineProperty2.default)(_countryCapabilities, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities, Timbre, ['none']), (0, _defineProperty2.default)(_countryCapabilities, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities, BtGateway, ['cn']), _countryCapabilities)
    },
    S12A: {
      model: 'xiaomi.wifispeaker.s12',
      hardware: 'S12A',
      icon: Icons.S12,
      iconOffline: Icons.S12,
      appId: '2882303761517406012',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, BTSetting, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities2 = {}, (0, _defineProperty2.default)(_countryCapabilities2, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities2, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities2, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities2, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities2, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities2, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities2, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities2, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities2, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities2, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities2, VoicePrinter, ['none']), (0, _defineProperty2.default)(_countryCapabilities2, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities2, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities2, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities2, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities2, BtGateway, ['cn']), _countryCapabilities2)
    },
    L15A: {
      model: 'xiaomi.wifispeaker.l15a',
      hardware: 'L15A',
      icon: Icons.S12,
      iconOffline: Icons.S12,
      appId: '2882303761517406012',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, BTSetting, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities3 = {}, (0, _defineProperty2.default)(_countryCapabilities3, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities3, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities3, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities3, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities3, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities3, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities3, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities3, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities3, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities3, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities3, VoicePrinter, ['none']), (0, _defineProperty2.default)(_countryCapabilities3, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities3, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities3, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities3, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities3, BtGateway, ['cn']), _countryCapabilities3)
    },
    L05B: {
      model: 'xiaomi.wifispeaker.l05b',
      hardware: 'L05B',
      icon: Icons.L05C,
      iconOffline: Icons.L05C,
      appId: '642102263770253312',
      capabilities: [Player, IRController, TalkHistory, ControlDevice, TrainSchedule, BTSetting, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities4 = {}, (0, _defineProperty2.default)(_countryCapabilities4, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities4, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities4, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities4, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities4, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities4, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities4, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities4, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities4, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities4, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities4, VoicePrinter, ['cn']), (0, _defineProperty2.default)(_countryCapabilities4, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities4, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities4, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities4, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities4, BtGateway, ['cn']), _countryCapabilities4)
    },
    L05C: {
      model: 'xiaomi.wifispeaker.l05c',
      hardware: 'L05C',
      icon: Icons.L05C,
      iconOffline: Icons.L05C,
      appId: '642102263770253312',
      capabilities: [Player, IRController, TalkHistory, ControlDevice, TrainSchedule, BTSetting, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities5 = {}, (0, _defineProperty2.default)(_countryCapabilities5, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities5, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities5, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities5, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities5, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities5, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities5, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities5, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities5, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities5, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities5, VoicePrinter, ['cn']), (0, _defineProperty2.default)(_countryCapabilities5, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities5, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities5, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities5, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities5, BtGateway, ['cn']), _countryCapabilities5)
    },
    L15A: {
      model: 'xiaomi.wifispeaker.l15a',
      hardware: 'L15A',
      icon: Icons.S12,
      iconOffline: Icons.S12,
      appId: '2882303761517406012',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, BTSetting, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities6 = {}, (0, _defineProperty2.default)(_countryCapabilities6, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities6, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities6, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities6, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities6, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities6, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities6, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities6, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities6, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities6, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities6, VoicePrinter, ['none']), (0, _defineProperty2.default)(_countryCapabilities6, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities6, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities6, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities6, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities6, BtGateway, ['cn']), _countryCapabilities6)
    },
    L16A: {
      model: 'xiaomi.wifispeaker.l16a',
      hardware: 'L16A',
      icon: Icons.L16A,
      iconOffline: Icons.L16A,
      appId: '695233442085864448',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, BTSetting, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities7 = {}, (0, _defineProperty2.default)(_countryCapabilities7, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities7, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities7, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities7, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities7, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities7, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities7, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities7, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities7, Stereo, ['cn']), (0, _defineProperty2.default)(_countryCapabilities7, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities7, VoicePrinter, ['cn']), (0, _defineProperty2.default)(_countryCapabilities7, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities7, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities7, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities7, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities7, BtGateway, ['cn']), _countryCapabilities7)
    },
    S12C: {
      model: 'xiaomi.wifispeaker.s12',
      hardware: 'S12C',
      icon: Icons.S12,
      iconOffline: Icons.S12,
      appId: '2882303761517406012',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, BTSetting, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities8 = {}, (0, _defineProperty2.default)(_countryCapabilities8, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities8, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities8, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities8, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities8, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities8, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities8, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities8, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities8, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities8, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities8, VoicePrinter, ['none']), (0, _defineProperty2.default)(_countryCapabilities8, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities8, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities8, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities8, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities8, BtGateway, ['cn']), _countryCapabilities8)
    },
    LX01: {
      model: 'xiaomi.wifispeaker.lx01',
      hardware: 'LX01',
      icon: Icons.LX01,
      iconOffline: Icons.LX01,
      appId: '262522317551175680',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, BTSetting, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities9 = {}, (0, _defineProperty2.default)(_countryCapabilities9, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities9, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities9, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities9, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities9, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities9, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities9, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities9, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities9, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities9, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities9, VoicePrinter, ['none']), (0, _defineProperty2.default)(_countryCapabilities9, ChildMode, ['none']), (0, _defineProperty2.default)(_countryCapabilities9, ChildModeSwitch, ['none']), (0, _defineProperty2.default)(_countryCapabilities9, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities9, Timbre, ['none']), (0, _defineProperty2.default)(_countryCapabilities9, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities9, BtGateway, ['cn']), _countryCapabilities9)
    },
    LX05A: {
      model: 'xiaomi.wifispeaker.lx5a',
      hardware: 'LX05A',
      icon: Icons.LX05A,
      iconOffline: Icons.LX05A,
      appId: '396248989835468800',
      capabilities: [Player, IRController, TalkHistory, ControlDevice, TrainSchedule, BTSetting, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities10 = {}, (0, _defineProperty2.default)(_countryCapabilities10, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities10, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities10, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities10, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities10, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities10, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities10, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities10, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities10, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities10, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities10, VoicePrinter, ['none']), (0, _defineProperty2.default)(_countryCapabilities10, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities10, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities10, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities10, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities10, BtGateway, ['cn']), _countryCapabilities10)
    },
    LX05: {
      model: 'xiaomi.wifispeaker.lx05',
      hardware: 'LX05',
      icon: Icons.LX05,
      iconOffline: Icons.LX05,
      appId: '353933914248580096',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, BTSetting, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities11 = {}, (0, _defineProperty2.default)(_countryCapabilities11, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities11, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities11, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities11, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities11, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities11, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities11, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities11, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities11, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities11, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities11, DTS, ['none']), (0, _defineProperty2.default)(_countryCapabilities11, VoicePrinter, ['none']), (0, _defineProperty2.default)(_countryCapabilities11, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities11, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities11, Earthquake, ['none']), (0, _defineProperty2.default)(_countryCapabilities11, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities11, BtGateway, ['cn']), _countryCapabilities11)
    },
    LX06: {
      model: 'xiaomi.wifispeaker.lx06',
      hardware: 'LX06',
      icon: Icons.LX06,
      iconOffline: Icons.LX06,
      appId: '425753316392175616',
      capabilities: [Player, IRController, TalkHistory, ControlDevice, TrainSchedule, BTSetting, AuxIn, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities12 = {}, (0, _defineProperty2.default)(_countryCapabilities12, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities12, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities12, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities12, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities12, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities12, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities12, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities12, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities12, Stereo, ['cn']), (0, _defineProperty2.default)(_countryCapabilities12, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities12, DTS, ['cn']), (0, _defineProperty2.default)(_countryCapabilities12, VoicePrinter, ['none']), (0, _defineProperty2.default)(_countryCapabilities12, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities12, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities12, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities12, AuxIn, ['cn']), (0, _defineProperty2.default)(_countryCapabilities12, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities12, ContinuousTalk, ['cn']), (0, _defineProperty2.default)(_countryCapabilities12, BtGateway, ['cn']), _countryCapabilities12)
    },
    L06A: {
      model: 'xiaomi.wifispeaker.l06a',
      hardware: 'L06A',
      icon: Icons.LX06A,
      iconOffline: Icons.LX06A,
      appId: '461124604870524928',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, BTSetting, AuxIn, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities13 = {}, (0, _defineProperty2.default)(_countryCapabilities13, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities13, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities13, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities13, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities13, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities13, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities13, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities13, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities13, Stereo, ['cn']), (0, _defineProperty2.default)(_countryCapabilities13, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities13, DTS, ['cn']), (0, _defineProperty2.default)(_countryCapabilities13, VoicePrinter, ['none']), (0, _defineProperty2.default)(_countryCapabilities13, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities13, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities13, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities13, AuxIn, ['cn']), (0, _defineProperty2.default)(_countryCapabilities13, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities13, ContinuousTalk, ['cn']), (0, _defineProperty2.default)(_countryCapabilities13, BtGateway, ['cn']), _countryCapabilities13)
    },
    L07A: {
      model: 'xiaomi.wifispeaker.l7a',
      hardware: 'L07A',
      icon: Icons.L07A,
      iconOffline: Icons.L07A,
      appId: '486994720757645312',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, BTSetting, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities14 = {}, (0, _defineProperty2.default)(_countryCapabilities14, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities14, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities14, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities14, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities14, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities14, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities14, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities14, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities14, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities14, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities14, DTS, ['none']), (0, _defineProperty2.default)(_countryCapabilities14, VoicePrinter, ['cn']), (0, _defineProperty2.default)(_countryCapabilities14, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities14, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities14, Earthquake, ['none']), (0, _defineProperty2.default)(_countryCapabilities14, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities14, ContinuousTalk, ['cn']), (0, _defineProperty2.default)(_countryCapabilities14, BtGateway, ['cn']), _countryCapabilities14)
    },
    LX04: {
      model: 'xiaomi.wifispeaker.lx04',
      hardware: 'LX04',
      icon: Icons.LX04,
      iconOffline: Icons.LX04Offline,
      appId: '310807211611790336',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, ChildModeTime, UserManual, SecuritySetting],
      countryCapabilities: (_countryCapabilities15 = {}, (0, _defineProperty2.default)(_countryCapabilities15, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities15, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities15, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities15, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities15, NightMode, ['none']), (0, _defineProperty2.default)(_countryCapabilities15, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities15, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities15, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities15, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities15, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities15, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities15, DTS, ['none']), (0, _defineProperty2.default)(_countryCapabilities15, VoicePrinter, ['cn']), (0, _defineProperty2.default)(_countryCapabilities15, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities15, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities15, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities15, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities15, ContinuousTalk, ['cn']), (0, _defineProperty2.default)(_countryCapabilities15, BtGateway, ['cn']), _countryCapabilities15)
    },
    L04M: {
      model: 'xiaomi.wifispeaker.l04m',
      hardware: 'LX04',
      icon: Icons.LX04,
      iconOffline: Icons.LX04Offline,
      appId: '310807211611790336',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, ChildModeTime, UserManual, SecuritySetting],
      countryCapabilities: (_countryCapabilities16 = {}, (0, _defineProperty2.default)(_countryCapabilities16, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities16, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities16, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities16, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities16, NightMode, ['none']), (0, _defineProperty2.default)(_countryCapabilities16, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities16, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities16, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities16, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities16, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities16, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities16, DTS, ['none']), (0, _defineProperty2.default)(_countryCapabilities16, VoicePrinter, ['cn']), (0, _defineProperty2.default)(_countryCapabilities16, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities16, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities16, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities16, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities16, ContinuousTalk, ['cn']), (0, _defineProperty2.default)(_countryCapabilities16, BtGateway, ['cn']), _countryCapabilities16)
    },
    X08A: {
      model: 'xiaomi.wifispeaker.x08a',
      hardware: 'X08A',
      icon: Icons.X08A,
      iconOffline: Icons.X08A,
      appId: '486990470963004416',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, ChildModeTime, UserManual, SecuritySetting],
      countryCapabilities: (_countryCapabilities17 = {}, (0, _defineProperty2.default)(_countryCapabilities17, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities17, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities17, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities17, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities17, NightMode, ['none']), (0, _defineProperty2.default)(_countryCapabilities17, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities17, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities17, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities17, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities17, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities17, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities17, DTS, ['none']), (0, _defineProperty2.default)(_countryCapabilities17, VoicePrinter, ['cn']), (0, _defineProperty2.default)(_countryCapabilities17, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities17, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities17, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities17, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities17, ContinuousTalk, ['cn']), (0, _defineProperty2.default)(_countryCapabilities17, BtGateway, ['cn']), _countryCapabilities17)
    },
    X08C: {
      model: 'xiaomi.wifispeaker.x08c',
      hardware: 'X08C',
      icon: Icons.X08C,
      iconOffline: Icons.X08C,
      appId: '527449393826104320',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, ChildModeTime, UserManual, SecuritySetting],
      countryCapabilities: (_countryCapabilities18 = {}, (0, _defineProperty2.default)(_countryCapabilities18, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities18, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities18, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities18, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities18, NightMode, ['none']), (0, _defineProperty2.default)(_countryCapabilities18, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities18, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities18, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities18, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities18, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities18, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities18, DTS, ['none']), (0, _defineProperty2.default)(_countryCapabilities18, VoicePrinter, ['cn']), (0, _defineProperty2.default)(_countryCapabilities18, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities18, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities18, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities18, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities18, ContinuousTalk, ['cn']), (0, _defineProperty2.default)(_countryCapabilities18, BtGateway, ['cn']), _countryCapabilities18)
    },
    X08E: {
      model: 'xiaomi.wifispeaker.x08e',
      hardware: 'X08E',
      icon: Icons.X08C,
      iconOffline: Icons.X08C,
      appId: '530351618386821120',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, ChildModeTime, UserManual, SecuritySetting],
      countryCapabilities: (_countryCapabilities19 = {}, (0, _defineProperty2.default)(_countryCapabilities19, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities19, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities19, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities19, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities19, NightMode, ['none']), (0, _defineProperty2.default)(_countryCapabilities19, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities19, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities19, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities19, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities19, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities19, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities19, DTS, ['none']), (0, _defineProperty2.default)(_countryCapabilities19, VoicePrinter, ['cn']), (0, _defineProperty2.default)(_countryCapabilities19, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities19, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities19, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities19, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities19, ContinuousTalk, ['cn']), (0, _defineProperty2.default)(_countryCapabilities19, BtGateway, ['cn']), _countryCapabilities19)
    },
    L09A: {
      model: 'xiaomi.wifispeaker.l09a',
      hardware: 'L09A',
      icon: Icons.L09A,
      iconOffline: Icons.L09A,
      appId: '527512289645953024',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, BTSetting, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities20 = {}, (0, _defineProperty2.default)(_countryCapabilities20, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities20, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities20, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities20, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities20, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities20, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities20, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities20, ClockVolume, ['cn']), _countryCapabilities20)
    },
    L09B: {
      model: 'xiaomi.wifispeaker.l09b',
      hardware: 'L09B',
      icon: Icons.L09B,
      iconOffline: Icons.L09B,
      appId: '529027180873647104',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, BTSetting, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities21 = {}, (0, _defineProperty2.default)(_countryCapabilities21, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities21, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities21, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities21, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities21, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities21, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities21, ClockVolume, ['cn']), _countryCapabilities21)
    },
    S12A: {
      model: 'xiaomi.wifispeaker.s12',
      hardware: 'S12A',
      icon: Icons.S12,
      iconOffline: Icons.S12,
      appId: '2882303761517406012',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, BTSetting, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities22 = {}, (0, _defineProperty2.default)(_countryCapabilities22, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities22, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities22, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities22, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities22, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities22, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities22, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities22, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities22, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities22, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities22, VoicePrinter, ['none']), (0, _defineProperty2.default)(_countryCapabilities22, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities22, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities22, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities22, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities22, BtGateway, ['cn']), _countryCapabilities22)
    },
    S12C: {
      model: 'xiaomi.wifispeaker.s12',
      hardware: 'S12C',
      icon: Icons.S12,
      iconOffline: Icons.S12,
      appId: '2882303761517406012',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, BTSetting, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities23 = {}, (0, _defineProperty2.default)(_countryCapabilities23, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities23, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities23, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities23, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities23, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities23, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities23, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities23, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities23, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities23, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities23, VoicePrinter, ['none']), (0, _defineProperty2.default)(_countryCapabilities23, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities23, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities23, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities23, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities23, BtGateway, ['cn']), _countryCapabilities23)
    },
    LX01: {
      model: 'xiaomi.wifispeaker.lx01',
      hardware: 'LX01',
      icon: Icons.LX01,
      iconOffline: Icons.LX01,
      appId: '262522317551175680',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, BTSetting, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities24 = {}, (0, _defineProperty2.default)(_countryCapabilities24, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities24, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities24, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities24, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities24, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities24, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities24, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities24, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities24, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities24, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities24, VoicePrinter, ['none']), (0, _defineProperty2.default)(_countryCapabilities24, ChildMode, ['none']), (0, _defineProperty2.default)(_countryCapabilities24, ChildModeSwitch, ['none']), (0, _defineProperty2.default)(_countryCapabilities24, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities24, Timbre, ['none']), (0, _defineProperty2.default)(_countryCapabilities24, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities24, BtGateway, ['cn']), _countryCapabilities24)
    },
    LX05A: {
      model: 'xiaomi.wifispeaker.lx5a',
      hardware: 'LX05A',
      icon: Icons.LX05A,
      iconOffline: Icons.LX05A,
      appId: '396248989835468800',
      capabilities: [Player, IRController, TalkHistory, ControlDevice, TrainSchedule, BTSetting, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities25 = {}, (0, _defineProperty2.default)(_countryCapabilities25, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities25, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities25, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities25, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities25, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities25, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities25, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities25, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities25, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities25, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities25, VoicePrinter, ['none']), (0, _defineProperty2.default)(_countryCapabilities25, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities25, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities25, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities25, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities25, BtGateway, ['cn']), _countryCapabilities25)
    },
    LX05: {
      model: 'xiaomi.wifispeaker.lx05',
      hardware: 'LX05',
      icon: Icons.LX05,
      iconOffline: Icons.LX05,
      appId: '353933914248580096',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, BTSetting, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities26 = {}, (0, _defineProperty2.default)(_countryCapabilities26, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities26, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities26, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities26, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities26, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities26, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities26, ClockVolume, ['cn']), _countryCapabilities26)
    },
    LX06: {
      model: 'xiaomi.wifispeaker.lx06',
      hardware: 'LX06',
      icon: Icons.LX06,
      iconOffline: Icons.LX06,
      appId: '425753316392175616',
      capabilities: [Player, IRController, TalkHistory, ControlDevice, TrainSchedule, BTSetting, AuxIn, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities27 = {}, (0, _defineProperty2.default)(_countryCapabilities27, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities27, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities27, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities27, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities27, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities27, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities27, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities27, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities27, Stereo, ['cn']), (0, _defineProperty2.default)(_countryCapabilities27, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities27, DTS, ['cn']), (0, _defineProperty2.default)(_countryCapabilities27, VoicePrinter, ['none']), (0, _defineProperty2.default)(_countryCapabilities27, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities27, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities27, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities27, AuxIn, ['cn']), (0, _defineProperty2.default)(_countryCapabilities27, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities27, ContinuousTalk, ['cn']), (0, _defineProperty2.default)(_countryCapabilities27, BtGateway, ['cn']), _countryCapabilities27)
    },
    L06A: {
      model: 'xiaomi.wifispeaker.l06a',
      hardware: 'L06A',
      icon: Icons.LX06A,
      iconOffline: Icons.LX06A,
      appId: '461124604870524928',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, BTSetting, AuxIn, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities28 = {}, (0, _defineProperty2.default)(_countryCapabilities28, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities28, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities28, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities28, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities28, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities28, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities28, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities28, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities28, Stereo, ['cn']), (0, _defineProperty2.default)(_countryCapabilities28, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities28, DTS, ['cn']), (0, _defineProperty2.default)(_countryCapabilities28, VoicePrinter, ['none']), (0, _defineProperty2.default)(_countryCapabilities28, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities28, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities28, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities28, AuxIn, ['cn']), (0, _defineProperty2.default)(_countryCapabilities28, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities28, ContinuousTalk, ['cn']), (0, _defineProperty2.default)(_countryCapabilities28, BtGateway, ['cn']), _countryCapabilities28)
    },
    L07A: {
      model: 'xiaomi.wifispeaker.l7a',
      hardware: 'L07A',
      icon: Icons.L07A,
      iconOffline: Icons.L07A,
      appId: '486994720757645312',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, BTSetting, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities29 = {}, (0, _defineProperty2.default)(_countryCapabilities29, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities29, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities29, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities29, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities29, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities29, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities29, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities29, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities29, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities29, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities29, DTS, ['none']), (0, _defineProperty2.default)(_countryCapabilities29, VoicePrinter, ['cn']), (0, _defineProperty2.default)(_countryCapabilities29, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities29, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities29, Earthquake, ['none']), (0, _defineProperty2.default)(_countryCapabilities29, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities29, ContinuousTalk, ['cn']), (0, _defineProperty2.default)(_countryCapabilities29, BtGateway, ['cn']), _countryCapabilities29)
    },
    LX04: {
      model: 'xiaomi.wifispeaker.lx04',
      hardware: 'LX04',
      icon: Icons.LX04,
      iconOffline: Icons.LX04Offline,
      appId: '310807211611790336',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, ChildModeTime, UserManual, SecuritySetting],
      countryCapabilities: (_countryCapabilities30 = {}, (0, _defineProperty2.default)(_countryCapabilities30, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities30, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities30, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities30, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities30, NightMode, ['none']), (0, _defineProperty2.default)(_countryCapabilities30, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities30, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities30, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities30, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities30, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities30, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities30, DTS, ['none']), (0, _defineProperty2.default)(_countryCapabilities30, VoicePrinter, ['cn']), (0, _defineProperty2.default)(_countryCapabilities30, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities30, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities30, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities30, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities30, ContinuousTalk, ['cn']), (0, _defineProperty2.default)(_countryCapabilities30, BtGateway, ['cn']), _countryCapabilities30)
    },
    L04M: {
      model: 'xiaomi.wifispeaker.l04m',
      hardware: 'L04M',
      icon: Icons.LX04,
      iconOffline: Icons.LX04Offline,
      appId: '310807211611790336',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, ChildModeTime, UserManual, SecuritySetting],
      countryCapabilities: (_countryCapabilities31 = {}, (0, _defineProperty2.default)(_countryCapabilities31, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities31, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities31, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities31, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities31, NightMode, ['none']), (0, _defineProperty2.default)(_countryCapabilities31, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities31, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities31, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities31, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities31, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities31, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities31, DTS, ['none']), (0, _defineProperty2.default)(_countryCapabilities31, VoicePrinter, ['cn']), (0, _defineProperty2.default)(_countryCapabilities31, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities31, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities31, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities31, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities31, ContinuousTalk, ['cn']), (0, _defineProperty2.default)(_countryCapabilities31, BtGateway, ['cn']), _countryCapabilities31)
    },
    X08A: {
      model: 'xiaomi.wifispeaker.x08a',
      hardware: 'X08A',
      icon: Icons.X08A,
      iconOffline: Icons.X08A,
      appId: '486990470963004416',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, ChildModeTime, UserManual, SecuritySetting],
      countryCapabilities: (_countryCapabilities32 = {}, (0, _defineProperty2.default)(_countryCapabilities32, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities32, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities32, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities32, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities32, NightMode, ['none']), (0, _defineProperty2.default)(_countryCapabilities32, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities32, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities32, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities32, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities32, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities32, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities32, DTS, ['none']), (0, _defineProperty2.default)(_countryCapabilities32, VoicePrinter, ['cn']), (0, _defineProperty2.default)(_countryCapabilities32, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities32, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities32, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities32, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities32, ContinuousTalk, ['cn']), (0, _defineProperty2.default)(_countryCapabilities32, BtGateway, ['cn']), _countryCapabilities32)
    },
    X08C: {
      model: 'xiaomi.wifispeaker.x08c',
      hardware: 'X08C',
      icon: Icons.X08C,
      iconOffline: Icons.X08C,
      appId: '527449393826104320',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, ChildModeTime, UserManual, SecuritySetting],
      countryCapabilities: (_countryCapabilities33 = {}, (0, _defineProperty2.default)(_countryCapabilities33, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities33, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities33, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities33, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities33, NightMode, ['none']), (0, _defineProperty2.default)(_countryCapabilities33, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities33, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities33, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities33, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities33, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities33, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities33, DTS, ['none']), (0, _defineProperty2.default)(_countryCapabilities33, VoicePrinter, ['cn']), (0, _defineProperty2.default)(_countryCapabilities33, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities33, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities33, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities33, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities33, ContinuousTalk, ['cn']), (0, _defineProperty2.default)(_countryCapabilities33, BtGateway, ['cn']), _countryCapabilities33)
    },
    X08E: {
      model: 'xiaomi.wifispeaker.x08e',
      hardware: 'X08E',
      icon: Icons.X08C,
      iconOffline: Icons.X08C,
      appId: '530351618386821120',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, ChildModeTime, UserManual, SecuritySetting],
      countryCapabilities: (_countryCapabilities34 = {}, (0, _defineProperty2.default)(_countryCapabilities34, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities34, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities34, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities34, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities34, NightMode, ['none']), (0, _defineProperty2.default)(_countryCapabilities34, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities34, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities34, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities34, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities34, Stereo, ['none']), (0, _defineProperty2.default)(_countryCapabilities34, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities34, DTS, ['none']), (0, _defineProperty2.default)(_countryCapabilities34, VoicePrinter, ['cn']), (0, _defineProperty2.default)(_countryCapabilities34, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities34, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities34, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities34, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities34, ContinuousTalk, ['cn']), (0, _defineProperty2.default)(_countryCapabilities34, BtGateway, ['cn']), _countryCapabilities34)
    },
    L09A: {
      model: 'xiaomi.wifispeaker.l09a',
      hardware: 'L09A',
      icon: Icons.L09A,
      iconOffline: Icons.L09A,
      appId: '527512289645953024',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, BTSetting, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities35 = {}, (0, _defineProperty2.default)(_countryCapabilities35, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities35, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities35, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities35, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities35, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities35, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities35, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities35, Stereo, ['cn']), (0, _defineProperty2.default)(_countryCapabilities35, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities35, DTS, ['cn']), (0, _defineProperty2.default)(_countryCapabilities35, VoicePrinter, ['cn']), (0, _defineProperty2.default)(_countryCapabilities35, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities35, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities35, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities35, LightEffect, ['cn']), (0, _defineProperty2.default)(_countryCapabilities35, ContinuousTalk, ['cn']), (0, _defineProperty2.default)(_countryCapabilities35, BtGateway, ['cn']), _countryCapabilities35)
    },
    L09B: {
      model: 'xiaomi.wifispeaker.l09b',
      hardware: 'L09B',
      icon: Icons.L09B,
      iconOffline: Icons.L09B,
      appId: '529027180873647104',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, BTSetting, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities36 = {}, (0, _defineProperty2.default)(_countryCapabilities36, TalkHistory, ['cn']), (0, _defineProperty2.default)(_countryCapabilities36, ControlDevice, ['cn']), (0, _defineProperty2.default)(_countryCapabilities36, TrainSchedule, ['cn']), (0, _defineProperty2.default)(_countryCapabilities36, NearbyWakeup, ['cn']), (0, _defineProperty2.default)(_countryCapabilities36, Clock, ['cn']), (0, _defineProperty2.default)(_countryCapabilities36, ClockRing, ['cn']), (0, _defineProperty2.default)(_countryCapabilities36, ClockRepeat, ['cn']), (0, _defineProperty2.default)(_countryCapabilities36, ClockVolume, ['cn']), (0, _defineProperty2.default)(_countryCapabilities36, Stereo, ['cn']), (0, _defineProperty2.default)(_countryCapabilities36, MeshAlert, ['cn']), (0, _defineProperty2.default)(_countryCapabilities36, DTS, ['cn']), (0, _defineProperty2.default)(_countryCapabilities36, VoicePrinter, ['cn']), (0, _defineProperty2.default)(_countryCapabilities36, ChildMode, ['cn']), (0, _defineProperty2.default)(_countryCapabilities36, ChildModeSwitch, ['cn']), (0, _defineProperty2.default)(_countryCapabilities36, Earthquake, ['cn']), (0, _defineProperty2.default)(_countryCapabilities36, LightEffect, ['cn']), (0, _defineProperty2.default)(_countryCapabilities36, ContinuousTalk, ['cn']), (0, _defineProperty2.default)(_countryCapabilities36, BtGateway, ['cn']), _countryCapabilities36)
    },
    L05G: {
      model: 'xiaomi.wifispeaker.l05g',
      hardware: 'L05G',
      icon: Icons.l05c,
      iconOffline: Icons.l05c,
      appId: '529027180873647104',
      capabilities: [Player, TalkHistory, ControlDevice, TrainSchedule, BTSetting, UserManual, SecuritySetting, ClockVolume],
      countryCapabilities: (_countryCapabilities37 = {}, (0, _defineProperty2.default)(_countryCapabilities37, TalkHistory, ['none']), (0, _defineProperty2.default)(_countryCapabilities37, ControlDevice, ['none']), (0, _defineProperty2.default)(_countryCapabilities37, TrainSchedule, ['none']), (0, _defineProperty2.default)(_countryCapabilities37, NearbyWakeup, ['none']), (0, _defineProperty2.default)(_countryCapabilities37, Clock, ['none']), (0, _defineProperty2.default)(_countryCapabilities37, ClockRing, ['none']), (0, _defineProperty2.default)(_countryCapabilities37, ClockRepeat, ['none']), (0, _defineProperty2.default)(_countryCapabilities37, ClockVolume, ['none']), (0, _defineProperty2.default)(_countryCapabilities37, Stereo, ['cn']), (0, _defineProperty2.default)(_countryCapabilities37, MeshAlert, ['none']), (0, _defineProperty2.default)(_countryCapabilities37, DTS, ['none']), (0, _defineProperty2.default)(_countryCapabilities37, VoicePrinter, ['none']), (0, _defineProperty2.default)(_countryCapabilities37, ChildMode, ['none']), (0, _defineProperty2.default)(_countryCapabilities37, ChildModeSwitch, ['none']), (0, _defineProperty2.default)(_countryCapabilities37, Earthquake, ['none']), (0, _defineProperty2.default)(_countryCapabilities37, LightEffect, ['none']), (0, _defineProperty2.default)(_countryCapabilities37, ContinuousTalk, ['none']), (0, _defineProperty2.default)(_countryCapabilities37, BtGateway, ['none']), _countryCapabilities37)
    }
  };
  exports.StaticCapabilities = StaticCapabilities;
},10049,[14305,14317,10046,10052,10055,10058,10061,10064,10067,10070,10073,10076,10079,10082,10085,10088,10091,10094]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 600,
    "height": 600,
    "scales": [1],
    "hash": "6f854e17985194605f8823d2281e5286",
    "name": "wifispeaker-s12",
    "type": "png"
  });
},10052,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 600,
    "height": 600,
    "scales": [1],
    "hash": "0d744a947f91b902727ba1498859a39d",
    "name": "wifispeaker-lx01",
    "type": "png"
  });
},10055,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 600,
    "height": 600,
    "scales": [1],
    "hash": "543ce6858c9c88a681c06bb4b9752fba",
    "name": "wifispeaker-lx05a",
    "type": "png"
  });
},10058,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 600,
    "height": 600,
    "scales": [1],
    "hash": "6c7f3110434e30076712e3ad57ecaa18",
    "name": "wifispeaker-lx05",
    "type": "png"
  });
},10061,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 600,
    "height": 600,
    "scales": [1],
    "hash": "e357382d99de478f181c326ad63ad7c1",
    "name": "wifispeaker-lx06",
    "type": "png"
  });
},10064,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 600,
    "height": 600,
    "scales": [1],
    "hash": "471679042ade5eddc8f412996d5dfa1b",
    "name": "wifispeaker-lx06a",
    "type": "png"
  });
},10067,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 600,
    "height": 600,
    "scales": [1],
    "hash": "aa73ec978deeaf3bc2edc9ffc0874594",
    "name": "wifispeaker-l07a",
    "type": "png"
  });
},10070,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 600,
    "height": 600,
    "scales": [1],
    "hash": "b4574309f2b434848702df272fc90895",
    "name": "wifispeaker-lx04",
    "type": "png"
  });
},10073,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 600,
    "height": 600,
    "scales": [1],
    "hash": "3676014792fe591ffcdc14db24f31051",
    "name": "wifispeaker-lx04-offline",
    "type": "png"
  });
},10076,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 600,
    "height": 600,
    "scales": [1],
    "hash": "0e780e9d8d4f4127aab86a2f1d11a575",
    "name": "wifispeaker-x08a",
    "type": "png"
  });
},10079,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 600,
    "height": 600,
    "scales": [1],
    "hash": "2f3ba17b2382eef4e77e1ac299a31e4b",
    "name": "wifispeaker-x08c",
    "type": "png"
  });
},10082,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 600,
    "height": 600,
    "scales": [1],
    "hash": "66bff963aa638160b17f327898b38007",
    "name": "wifispeaker-l09a",
    "type": "png"
  });
},10085,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 400,
    "height": 400,
    "scales": [1],
    "hash": "5593c0f70efd4ade8031da8af49caa75",
    "name": "wifispeaker-l05c",
    "type": "png"
  });
},10088,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 600,
    "height": 600,
    "scales": [1],
    "hash": "c527adf58ef811402a4cc6dc1d598f7a",
    "name": "wifispeaker-l09b",
    "type": "png"
  });
},10091,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 600,
    "height": 600,
    "scales": [1],
    "hash": "1153ba98432b108c4688f6e4e05508df",
    "name": "wifispeaker-l16a",
    "type": "png"
  });
},10094,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _miot = _$$_REQUIRE(_dependencyMap[2]);

  var lang = _miot.Host.locale.language;
  var i18ns = {
    get zh() {
      return _$$_REQUIRE(_dependencyMap[3]).default;
    },

    get en() {
      return _$$_REQUIRE(_dependencyMap[4]).default;
    },

    get zh_tw() {
      return _$$_REQUIRE(_dependencyMap[5]).default;
    },

    get zh_hk() {
      return _$$_REQUIRE(_dependencyMap[5]).default;
    }

  };

  var _default = _miot.Resources.createI18n((0, _defineProperty2.default)({}, lang, i18ns[lang] || i18ns.en || {}), lang).strings;

  exports.default = _default;
},10097,[14305,14317,10074,10100,10103,10106]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    jumpToAppTitle: '去“小爱音箱”App看看吧',
    jumpToAppContant: '体验完整功能，更多音箱内容和玩法',
    chargingComplete: '充电完成',
    charging: '正在充电',
    currentCapacity: '当前电量',
    offlineTitle: '当前设备已离线',
    offlineTip: '请检查网络连接是否正常',
    playerTitle: '用小爱播放音乐',
    playerSuggest: '你可以对我说“播放周杰伦的歌”',
    voiceTipTitle: '你还可以对我说：小爱同学',
    voiceTip1: '“现在几点了”',
    voiceTip2: '“播放王源的歌”',
    voiceTip3: '“今天天气怎么样”',
    voiceTip4: '“我想听故事”',
    addIrController: '添加红外遥控器',
    addIrControllerTip: '用红外遥控传统的空调、电视、机顶盒等',
    chooseIrDevices: '选择要控制的红外电器',
    voiceFeatures: '语音功能',
    talkHistory: '对话记录',
    misheard: '听错了',
    misunderstand: '理解错了',
    questionTitle: '问题描述',
    questionTip: '详细的描述能帮我们解决问题',
    submit: '提交',
    ok: '好的',
    talkvoice: '[声音]',
    controlDevice: '控制设备',
    controlDeviceTitle: '语音控制智能设备',
    voiceAuth: '语音控制授权管理',
    voiceAuthTip: '选择音箱可以控制的设备',
    chooseViewType: '选择查看方式',
    deviceType: '设备分类',
    roomType: '家庭房间',
    deviceRoom: '设备房间',
    deviceDefaultRoom: '默认房间',
    deviceDetailMihome: '米家平台',
    deviceDetailCustomIr: '自定义设备',
    noVoiceAuthedDevice: '没有可语音控制的智能设备',
    trainSchedule: '训练计划',
    clock: '闹钟',
    musicClock: '音乐闹钟',
    musicClockTip: '用晨间音乐叫我起床',
    naturalClock: '自然闹钟',
    naturalClockTip: '用森林的声音提醒我睡觉',
    funnyClock: '趣味闹钟',
    funnyClockTip: '用小黄人的声音提醒我看动画片',
    videoClock: '视频闹钟',
    videoClockTip: '用自己的视频作为闹钟铃声',
    cantUpdate: '暂不支持修改',
    music: '音乐',
    natural: '自然',
    funny: '趣味',
    defaultRing: '系统铃声',
    addClock: '添加闹钟',
    ringAfter: '{1}小时{2}分后响铃',
    chooseRing: '选择铃声',
    repeat: '重复',
    dateInfo: '{1}年{2}月{3}日，{4}',
    remarks: '备注',
    addRemarks: '添加备注',
    clockVolume: '闹钟音量',
    repeatOnce: '只响一次',
    everyday: '每天',
    legalWorkday: '法定工作日（智能跳过节假日）',
    legalWeekend: '法定节假日（智能跳过工作日）',
    weekday: '周一至周五',
    weekend: '周六至周日',
    custom: '自定义',
    monday: '周一',
    tuesday: '周二',
    wednesday: '周三',
    thursday: '周四',
    friday: '周五',
    saturday: '周六',
    sunday: '周日',
    removeClock: '删除闹钟',
    stereo: '立体声',
    stereoTip: '你有两台可组成立体声组合的音箱，是否要体验立体声功能',
    goCreate: '去创建',
    phone: '电话',
    familyAlbum: '家庭相册',
    babySchedule: '宝宝课表',
    classSchedule: '课程表',
    moreFeatures: '更多功能',
    btSetting: '蓝牙设置',
    btSwitcher: '音箱蓝牙开关',
    btCanBeFound: '音箱蓝牙可被发现',
    btFoundTip: '开启后可在手机蓝牙列表看到小爱音箱',
    matchedDevices: '已配对的设备',
    noMatchedDevice: '没有已配对的蓝牙设备',
    enabled: '已开启',
    notEnabled: '未开启',
    connected: '已连接',
    notConnected: '未连接',
    settled: '已设置',
    notSettled: '未设置',
    disconnect: '断开连接',
    connectBt: '连接蓝牙',
    cancelMatch: '取消配对',
    meshTip: '为保证蓝牙音乐播放的体验，开启蓝牙音乐后，蓝牙网关功能将被关闭（关闭蓝牙网关需要重启音箱）。继续？',
    continue: '继续',
    nearbyWakeup: '协同唤醒',
    nearbyWakeupTip: '家中有多个小爱设备时，只有一台离你最近、或更适合使用场景的设备会应答并倾听，避免一呼百应。',
    nightMode: '夜间模式',
    nightLight: '夜间灯光',
    nightLightTip: '开启后音箱灯光会变得较暗',
    nightVolumn: '夜间音量',
    nightVolumnTip: '开启后音箱音量会变得较小',
    enableTime: '开启时间',
    disableTime: '结束时间',
    dtsSetting: 'DTS音效设置',
    dtsEffect: 'DTS音效',
    dtsTip: 'DTS音效是小爱音箱联合世界顶尖音效公司DTS推出的为音箱量身打造的高品质音效。',
    dtsTypeHuman: '人声',
    dtsTypeSurge: '澎湃',
    dtsTypeMild: '温和',
    inuse: '使用中',
    use: '使用',
    voicePrinterSetting: '声纹管理',
    voicePrinterRecorded: '声纹录制完成',
    addVoicePrinter: '添加声纹',
    addVoicePrinterFail: '添加声纹失败',
    nickname: '昵称',
    inputNameTip: '请输入昵称',
    nicknameTip: '小爱将会使用你设置的昵称来称呼你',
    nextStep: '下一步',
    startRecordVoicePrinter: '开始录制声纹',
    endRecordVoicePrinter: '声纹录制完成',
    recordVoicePrinterTitle: '亲爱的进来了，请对音箱说',
    recordVoicePrinterKey: '“小爱同学，声音注册”',
    recordVoicePrinterTip: '请与音箱保持2米以内距离，保持周围环境安静',
    removeVoicePrinter: '删除声纹',
    readdVoicePrinter: '重新添加',
    removeVoicePrinterConfirm: '确定要删除吗？',
    tip: '提示',
    nicknameNeedAllChinese: '昵称只能包含汉字',
    nicknameNeedNotEmpty: '昵称不能为空',
    nicknameRepeat: '该昵称已存在',
    voicePrinterLimit: '最多添加六个声纹',
    nicknameNotRecord: '未录制声纹',
    childMode: '儿童模式',
    childModeTip: '开启后音箱内容和功能将更符合儿童使用',
    addChildInfo: '添加儿童信息',
    completeChildInfo: '完善儿童信息',
    completeChildInfoTip: '添加后会针对孩子情况做个性化内容推荐',
    timeLimit: '时间限制',
    timeLimitTip: '开启后可以限制儿童观看视频的时间',
    childModeLegalTip: '为了保护你儿童的个人信息以及权益，作为儿童监护人，请您仔细阅读',
    childModeLegalName: '《小爱音箱儿童信息保护规则》',
    noChildInfo: '还没添加儿童信息哦',
    addChild: '添加新成员',
    gender: '性别',
    male: '男',
    female: '女',
    birthday: '生日',
    save: '保存',
    saveSuccess: '保存成功',
    needNickname: '请输入昵称',
    needGender: '请选择性别',
    needBirthday: '请选择生日',
    setNickname: '设置昵称',
    timeLimitOnce: '单次可看时长',
    timeLimitOnceTip: '休息1小时后可再次观看',
    timeLimitDay: '每天可看总时长',
    minutes: '{1}分钟',
    hours: '{1}小时',
    hoursAndMinutes: '{1}小时{2}分钟',
    noVideoLimit: '禁看视频时间',
    noVideoLimitTip: '例如设置睡觉的时间段不能看视频',
    startTime: '开始时间',
    removeChildConfirm: '确定要删除该成员吗？',
    removeFail: '删除失败',
    removeSuccess: '删除成功',
    noLimit: '不限制',
    earthquakeSetting: '地震播报',
    broadcastEarthquake: '播报地震信息',
    broadcastEarthquakeTip: '开启后，地震发生时，音箱会第一时间播报设定位置的三级及以上等级的地震信息',
    broadcastEarthquakeTip2: '由于网络服务异常或资源方功能升级等突发因素可能会导致播报偶尔延迟或失败，敬请谅解。',
    broadcastEarthquakePos: '地震播报位置',
    broadcastEarthquakePosText: '{1}-{2}-{3}',
    earthquakeMark: '注：开启后在夜间可能会打扰休息，请悉知。',
    earthquakeEnabled: '地震播报开启',
    earthquakeDisabled: '地震播报关闭',
    addressSetting: '音箱位置',
    broadcastAddress: '选择音箱地址',
    broadcastAddressPos: '音箱地址',
    broadcastAddressPosText: '{1}-{2}-{3}',
    timbreSetting: '音色设置',
    xiaoaiTimbreSetting: '小爱音色设置',
    xiaoaiTimbreTip: '修改后会改变音箱上小爱同学的声音',
    timbreLively: '蜜糖',
    timbreLivelyDes: '甜美可爱女声',
    timbreTender: '茉莉',
    timbreTenderDes: '温柔知性女声',
    timbreVigour: '青葱',
    timbreVigourDes: '阳光活力男声',
    timbreCute: '泡芙',
    timbreCuteDes: '奶萌乖巧童声',
    timbreAndDialect: '音色和方言',
    timbreTitle: '小爱同学会根据选择的音色和方言，与你交流',
    timbreMandarin: '普通话',
    auxIn: 'AUX IN',
    auxInUsage: 'AUX IN使用说明',
    auxInTip: '支持AUX IN接口，智能音箱也能变身电脑、电视的播放伴侣。',
    volumeSpread: '音箱增益',
    volumeSpreadTip: '使用建议：使用AUX IN功能播放音乐时，为保证音箱音乐播放音量及唤醒音量达到更好的平衡，建议在电脑、电视上将音量调到100%使用。',
    lightEffect: '灯光效果',
    lightEffectSetting: '灯光效果设置',
    musicLightEffect: '音乐播放灯光效果',
    musicLightEffectTip: '开启后，播放音乐时会有灯光相伴，氛围感更强',
    dlnaMusic: 'DLNA音乐',
    dlnaMusicPlay: 'DLNA音乐播放',
    dlnaMusicPlayTip1: 'DLNA是一种局域网内音乐播放的方式，开启后，你可以在音乐APP中把歌曲推送到连接相同Wi-Fi的音箱上进行播放。相比蓝牙，DLNA不受距离限制，手机和音箱只需要连接同一个Wi-Fi热点即可。（需要音乐播放器支持并打开DLNA功能）',
    dlnaMusicPlayTip2: '注：以下是常见音乐APP DLNA功能的开启方式：\nQQ音乐：我的-更多-设置-QPlay与车载音乐\n网易云音乐：设置-连接DLNA设备\n（以上方式仅供参考，因音乐APP存在改版的可能，以实际情况为准）',
    continuousTalk: '连续对话',
    continuousTalkBeta: '连续对话 Beta',
    continuousTalkTip: '开启后，唤醒小爱同学就可以连续对话，不用再频繁唤醒。\n对小爱说“再见”，可以快速结束本次连续对话',
    userManual: '用户手册',
    securitySetting: '隐私设置',
    musicPersonalization: '小米音乐个性化推荐',
    musicPersonalizationTip: '关闭后，选择小米音乐源听歌时不会根据你的个人喜好进行个性化推荐',
    wakeWordUpload: '语音唤醒优化',
    wakeWordUploadTip: '关闭后，小爱将不再上传你的唤醒词音频信息用于语音模型训练，可能会影响唤醒准确性',
    qqMusicRecommond: 'QQ音乐个性化推荐',
    qqMusicRecommondTip: '关闭QQ音乐个性化推荐需前往QQ音乐APP，在“我的”>“更多”>“设置”>“隐私设置”>“个性化权限”中关闭允许个性化推荐开关',
    home_more_device: '设备商城',
    home_share_device: '共享设备',
    home_third_platform: '其他平台设备',
    home_auth_entry: '米家平台设备',
    home_ir_entry: '添加语音遥控电器',
    common_play_list: '玩法示例',
    common_directive_list: '自定义指令',
    common_add_directive: '添加自定义指令',
    common_mhmodal_button_cancel: '取消',
    common_mhmodal_button_ok: '确认',
    common_mhmodal_button_delete: "删除",
    common_mhmodal_content_delete_control: '确定删除此设备的语音遥控吗？',
    device_cell_from: '来自',
    device_detail_name: '设备名称',
    device_detail_button: '按键',
    device_detail_list_name: '名称',
    device_detail_list_room: '房间',
    device_detail_left_button: '左键',
    device_detail_middle_button: '中键',
    device_detail_right_button: '右键',
    device_detail_default_name: '默认名称',
    device_detail_tap_to_more: '点击查看更多玩法',
    recommend_devices_title: '为你推荐',
    recommend_devices_subtitle: '更多支持设备',
    recommend_devices_name1: '米家智能插座基础版',
    recommend_devices_name2: '米家LED智能台灯',
    recommend_devices_name3: '米家空气净化器Pro',
    recommend_devices_tip1: '打开插座',
    recommend_devices_tip2: '打开台灯',
    recommend_devices_tip3: '将空气净化器设为睡眠模式',
    common_load_error: '数据加载失败，请稍后再试',
    common_load_timeout: '数据加载超时，请稍后再试',
    more_other: '其他',
    iftttText: '播放指定文字',
    iftttPlaceholder: '请输入播放内容',
    iftttValidTip: '支持输入中文、英文，符号仅支持中文逗号、句号、问号、感叹号。',
    iftttInvalidTip: '含有不支持的字符',
    iftttDirective: '自定义指令',
    iftttDirectivePlaceholder: '输入让小爱执行的指令，例如：\"播放新闻\"',
    iftttSilent: '静默执行',
    iftttSilentTip: '小爱执行指令时将不播放文字回复',
    loadMore: '上拉加载更多',
    loadingTitle: '加载中...',
    loadingTitleSpecial: '正在设置，大约需要20秒，请耐心等待',
    noMoreData: '已经加载到底啦',
    pullToRefresh: '下拉以刷新',
    releaseToRefresh: '松开以刷新',
    refreshing: '正在同步对话记录',
    noUpdate: '暂无更新',
    lastUpdateTime: '上次更新时间:',
    refreshed: '已同步到最新记录'
  };
  exports.default = _default;
},10100,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    jumpToAppTitle: 'Go to the MI AI app and check it out.',
    jumpToAppContant: 'Experience full features, more speaker contents and playing tips. ',
    chargingComplete: 'Charging Complete',
    charging: 'Charging',
    currentCapacity: 'Current Capacity',
    offlineTitle: 'The device is currently offline',
    offlineTip: 'Please check whether the network connection is functioning normally.',
    playerTitle: 'Use Mi AI to play music',
    playerSuggest: 'You can say: "Play a song by Jay Chou."',
    voiceTipTitle: 'You can also say: Xiao Ai Tong Xue',
    voiceTip1: 'What time is it now?',
    voiceTip2: 'Play a song by Roy Wang.',
    voiceTip3: 'What\'s the weather like today?',
    voiceTip4: 'I want to hear a story.',
    addIrController: 'Add an IR remote control',
    addIrControllerTip: 'Use an IR remote control to control traditional air conditioners, TVs, and set top boxes.',
    chooseIrDevices: 'Select the IR device to control.',
    voiceFeatures: 'Voice feature',
    talkHistory: 'Conversation history',
    misheard: '听错了',
    misunderstand: '理解错了',
    questionTitle: '问题描述',
    questionTip: '详细的描述能帮我们解决问题',
    submit: '提交',
    ok: 'OK',
    talkvoice: '[Voice]',
    controlDevice: 'Control device',
    controlDeviceTitle: 'Voice control smart device',
    voiceAuth: 'Voice control authorization management',
    voiceAuthTip: 'Select a device the speaker can control',
    chooseViewType: 'Select the viewing method',
    deviceType: 'Device type',
    roomType: 'Family room',
    deviceRoom: 'Device\'s room',
    deviceDefaultRoom: 'Default room',
    deviceDetailMihome: 'MIoT platform',
    deviceDetailCustomIr: 'Custom device',
    noVoiceAuthedDevice: 'There is no voice controlled smart device',
    trainSchedule: 'Training plan',
    clock: 'Alarm clock',
    musicClock: 'Musical alarm',
    musicClockTip: 'Wake me up with morning music.',
    naturalClock: 'Natural alarm',
    naturalClockTip: 'Remind me to sleep with forest sounds.',
    funnyClock: 'Funny alarm',
    funnyClockTip: 'Remind me to watch cartoons with a Minion\'s voice.',
    cantUpdate: 'Modification is not supported at this time',
    music: 'Music',
    natural: 'Nature',
    funny: 'Fun',
    defaultRing: 'System ringtone',
    addClock: 'Add an alarm clock',
    ringAfter: 'Will ring in {1} h and {2} min',
    chooseRing: 'Select a ringtone',
    repeat: 'Repeat',
    dateInfo: '{1}/{2}/{3},{4}',
    remarks: 'Note',
    addRemarks: 'Add note',
    clockVolume: 'Alarm clock volume',
    repeatOnce: 'Once',
    everyday: 'Every day',
    legalWorkday: 'Working days (intelligently skips public holidays)',
    legalWeekend: 'Public holidays (intelligently skips working days)',
    weekday: 'Mon to Fri',
    weekend: 'Sat to Sun',
    custom: 'Custom',
    monday: 'Mon',
    tuesday: 'Tue',
    wednesday: 'Wed',
    thursday: 'Thu',
    friday: 'Fri',
    saturday: 'Sat',
    sunday: 'Sun',
    removeClock: 'Delete alarm clock',
    stereo: 'Stereo',
    stereoTip: 'You have two speakers that can form a stereo combination. Do you want to experience the stereo function',
    goCreate: 'Create',
    phone: 'Phone',
    familyAlbum: 'Family album',
    babySchedule: 'Child\'s timetable',
    classSchedule: 'Timetable',
    moreFeatures: 'More features',
    btSetting: 'Bluetooth settings',
    btSwitcher: 'Speaker\'s Bluetooth on/off',
    btCanBeFound: 'Speaker\'s Bluetooth can be discovered',
    btFoundTip: 'Once enabled, the AI speaker will appear in your phone\'s Bluetooth list.',
    matchedDevices: 'Paired devices',
    noMatchedDevice: 'No paired Bluetooth devices',
    enabled: 'On',
    notEnabled: 'Off',
    connected: 'Connected',
    notConnected: 'Not connected',
    settled: 'Configured',
    notSettled: 'Not configured',
    disconnect: 'Disconnect',
    connectBt: 'Connect to Bluetooth',
    cancelMatch: 'Unpair',
    meshTip: 'To ensure a better Bluetooth music playback experience, the Bluetooth gateway function will be disabled when Bluetooth music is enabled (disabling the Bluetooth gateway requires the speaker to be restarted). Continue anyway?',
    continue: 'Continue',
    nearbyWakeup: 'Wake up nearest speaker',
    nearbyWakeupTip: 'If there are multiple AI speakers connected to the network, the one closest to you will respond when you use a wake-up word. Once enabled, the speaker will wait a while before responding to a user\'s wake-up call.',
    nightMode: 'Night mode',
    nightLight: 'Night light',
    nightLightTip: 'Once enabled, the speaker\'s light will be dimmed.',
    nightVolumn: 'Night volume',
    nightVolumnTip: 'Once enabled, the speaker\'s volume will be turned down.',
    enableTime: 'Starting time',
    disableTime: 'Ending time',
    dtsSetting: 'DTS sound settings',
    dtsEffect: 'DTS sound',
    dtsTip: 'The DTS sound is a high-quality sound effect created for speakers launched by the world\'s top sound effects company DTS with special adjustment for Mi Ai Speakers.',
    dtsTypeHuman: 'Vocal',
    dtsTypeSurge: 'Bass',
    dtsTypeMild: 'Gentle',
    inuse: 'In use',
    use: 'Use',
    voicePrinterSetting: 'Manage voiceprints',
    voicePrinterRecorded: 'Voiceprint recording completed',
    addVoicePrinter: 'Add voiceprint',
    addVoicePrinterFail: 'Couldn\'t add voiceprint',
    nickname: 'Nickname',
    inputNameTip: 'Enter a nickname',
    nicknameTip: 'Mi AI will call you by the nickname you have set.',
    nextStep: 'Next',
    startRecordVoicePrinter: 'Start recording voiceprint',
    endRecordVoicePrinter: 'Voiceprint recording completed',
    recordVoicePrinterTitle: 'Hello dear, please talk to the speaker.',
    recordVoicePrinterKey: 'Xiao Ai Tong Xue, register voice',
    recordVoicePrinterTip: 'Please stay within two meters of the speaker and keep your surroundings quiet.',
    removeVoicePrinter: 'Delete voiceprint',
    readdVoicePrinter: 'Add again',
    removeVoicePrinterConfirm: 'Delete now?',
    tip: 'Note',
    nicknameNeedAllChinese: 'Nickname can only contain Chinese characters',
    nicknameNeedNotEmpty: 'Nickname cannot be empty',
    nicknameRepeat: 'This nickname already exists, try a different one.',
    voicePrinterLimit: 'Add up to 6 voiceprints',
    nicknameNotRecord: 'No recorded voiceprints',
    childMode: 'Child mode',
    childModeTip: 'Once enabled, the content and functionality of the speaker will be more suitable for children.',
    addChildInfo: 'Add child info',
    completeChildInfo: 'Refine child info',
    completeChildInfoTip: 'Once added, personalized content recommendations will be made for the child.',
    timeLimit: 'Time limit',
    timeLimitTip: 'Once enabled, the amount of time children are allowed to watch videos can be limited.',
    childModeLegalTip: 'In order to protect your child\'s personal information and rights, as the child\'s guardian, please carefully read the following:',
    childModeLegalName: 'Regulation on Protecting Personal Information of Children Using the Mi AI Speaker',
    noChildInfo: 'No child info added',
    addChild: 'Add a new member',
    gender: 'Gender',
    male: 'Male',
    female: 'Female',
    birthday: 'Birthday',
    save: 'Save',
    saveSuccess: 'Saved successfully',
    needNickname: 'Enter a nickname',
    needGender: 'Select gender',
    needBirthday: 'Select birthday',
    setNickname: 'Set nickname',
    timeLimitOnce: 'Single time watching duration',
    timeLimitOnceTip: 'You can continue watching after a 1-hour break.',
    timeLimitDay: 'Daily total watching duration',
    minutes: '{1} min',
    hours: '{1} h',
    hoursAndMinutes: '{1} h {2} min',
    noVideoLimit: 'Video blocking time',
    noVideoLimitTip: 'For example, configure it so that videos cannot be watched during sleeping time.',
    startTime: 'Starting time',
    removeChildConfirm: 'Delete this member now?',
    removeFail: 'Couldn\'t delete',
    removeSuccess: 'Deleted successfully',
    noLimit: 'No restrictions',
    earthquakeSetting: 'Earthquake broadcast',
    broadcastEarthquake: 'Broadcast earthquake info',
    broadcastEarthquakeTip: 'Once enabled, when an earthquake occurs, the speaker will immediately broadcast information about level 3 or higher earthquakes for the locations you have set.',
    broadcastEarthquakeTip2: 'Due to unexpected circumstances such as network service errors or resource provider function updates, occasional delays or errors in the broadcasts may occur. Apologies for any inconvenience caused.',
    broadcastEarthquakePos: 'Earthquake broadcast location',
    broadcastEarthquakePosText: '{1}-{2}-{3}',
    earthquakeMark: 'Note: Please be aware that this may disturb your sleep at night when it is enabled.',
    earthquakeEnabled: 'Earthquake broadcast enabled',
    earthquakeDisabled: 'Earthquake broadcast disabled',
    addressSetting: 'Speaker Location',
    broadcastAddressPos: 'Speaker Address',
    broadcastAddressPosText: '{1}-{2}-{3}',
    timbreSetting: 'Tone settings',
    xiaoaiTimbreSetting: 'Mi AI tone settings',
    xiaoaiTimbreTip: 'Once modified, it will change the voice of the Mi AI speaker.',
    timbreLively: 'Honey',
    timbreLivelyDes: 'sweet and cute female voice',
    timbreTender: 'Jasmine',
    timbreTenderDes: 'gentle and intellectual female voice',
    timbreVigour: 'Youth',
    timbreVigourDes: 'sunny male voice',
    timbreCute: 'Puff',
    timbreCuteDes: 'cute child voice',
    timbreAndDialect: 'Voice Type and Dialect',
    timbreTitle: 'Voice assistan will communicate with you using the voice type and dialect you choose',
    timbreMandarin: 'Mandarin',
    auxIn: 'AUX IN',
    auxInUsage: 'Instructions on how to use AUX IN.',
    auxInTip: 'The speaker\'s AUX IN port can be used for audio playback from a computer or TV.',
    volumeSpread: 'Speaker gain',
    volumeSpreadTip: 'Usage recommendation: When using the AUX IN function to play music, it is recommended to turn up the volume of the computer or TV to 100% in order to ensure a good balance between the volume of the music played on the speaker and the wake-up volume.',
    lightEffect: 'Lighting effects',
    lightEffectSetting: 'Lighting effect settings',
    musicLightEffect: 'Music playback lighting effects',
    musicLightEffectTip: 'Once enabled, the music will be accompanied by light for a better atmosphere.',
    dlnaMusic: 'DLNA music',
    dlnaMusicPlay: 'DLNA music playback',
    dlnaMusicPlayTip1: 'DLNA is a way to play music on a network. Once enabled, you can push songs from a music app to a speaker connected to the same Wi-Fi network for playback. Compared to Bluetooth, DLNA is not limited by distance, and the phone and speaker only need to be connected to the same Wi-Fi network. (DLNA must be supported by the music player and DLNA must be enabled.)',
    dlnaMusicPlayTip2: 'Note: Method on how to enable DLNA for common music apps:\nQQ Music: Me > More > Settings > QPlay and Car Music\nNetEase Cloud Music: Settings > Connect DLNA device\n(The above methods are for reference only, as the music app may be updated and the actual method may differ.)',
    continuousTalk: 'Continuous dialog',
    continuousTalkBeta: 'Continuous dialog Beta',
    continuousTalkTip: 'Once enabled, you can continuously talk to the Mi AI speaker without having to wake it up every time.\nSaying "goodbye" to the Mi AI speaker will quickly end the continuous dialog.',
    userManual: 'User Manual',
    securitySetting: 'Privacy settings',
    musicPersonalization: 'Mi Music personalized recommendations',
    musicPersonalizationTip: 'Once disabled, personalized recommendations based on your personal preferences won\'t be available when Mi music is set as the music source.',
    wakeWordUpload: 'Voice wake-up optimization',
    wakeWordUploadTip: 'Once disabled, Mi AI will no longer upload your wake-up audio data for voice pattern training, which may affect the wake-up accuracy.',
    qqMusicRecommond: 'QQ Music personalized recommendations',
    qqMusicRecommondTip: 'To disable QQ Music personalized recommendations, open the QQ Music app and go to My > More > Settings > Privacy settings > Custom permissions to disable it.',
    home_more_device: 'Device store',
    home_share_device: 'Shared devices',
    home_third_platform: 'Other platform devices',
    home_auth_entry: 'MIoT platform devices',
    home_ir_entry: 'Add voice control device',
    common_play_list: 'Play demo',
    common_directive_list: 'Custom command',
    common_add_directive: 'Add custom command',
    common_mhmodal_button_cancel: 'Cancel',
    common_mhmodal_button_ok: 'OK',
    common_mhmodal_button_delete: "Delete",
    common_mhmodal_content_delete_control: 'Delete voice control for this device now?',
    device_cell_from: 'From',
    device_detail_name: 'Device name',
    device_detail_button: 'Button',
    device_detail_list_name: 'Name',
    device_detail_list_room: 'Room',
    device_detail_left_button: 'Left button',
    device_detail_middle_button: 'Middle button',
    device_detail_right_button: 'Right button',
    device_detail_default_name: 'Default name',
    device_detail_tap_to_more: 'Tap to view more ways for playback.',
    recommend_devices_title: 'Recommendations',
    recommend_devices_subtitle: 'More supported devices',
    recommend_devices_name1: 'Mi Smart Plug (WiFi)',
    recommend_devices_name2: 'Mi LED Desk Lamp',
    recommend_devices_name3: '米家空气净化器Pro',
    recommend_devices_tip1: 'Turn on the outlet.',
    recommend_devices_tip2: 'Turn on the desk lamp.',
    recommend_devices_tip3: 'Set the air purifier to sleep mode.',
    common_load_error: 'Couldn\'t load data, please try again later.',
    common_load_timeout: 'Couldn\'t load data, please try again later.',
    more_other: 'Others',
    iftttText: 'Custom play content',
    iftttPlaceholder: 'Please enter the play content',
    iftttValidTip: '',
    iftttInvalidTip: 'Contains unsupported characters',
    iftttDirective: 'Custom instructions',
    iftttDirectivePlaceholder: 'Enter instructions for Xiao Ai to execute, such as \"play news\"',
    iftttSilent: 'execute silently',
    iftttSilentTip: 'Xiao Ai will not play text reply when executing instructions',
    loadMore: 'Swipe up to load more',
    loadingTitle: 'Loading…',
    noMoreData: 'Everything has already been loaded',
    pullToRefresh: 'Swipe down to refresh',
    releaseToRefresh: 'Release to refresh',
    refreshing: 'Synchronizing conversation history…',
    noUpdate: 'No updates available',
    lastUpdateTime: 'Last updated at:',
    refreshed: 'Most recent conversation history has been synchronized'
  };
  exports.default = _default;
},10103,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    jumpToAppTitle: '去“小愛音箱”App看看吧',
    jumpToAppContant: '體驗完整功能，更多音箱內容和玩法',
    chargingComplete: '充電完成',
    charging: '正在充電',
    currentCapacity: '當前電量',
    offlineTitle: '目前裝置已離線',
    offlineTip: '請檢查網路連接是否正常',
    playerTitle: '用小愛播放音樂',
    playerSuggest: '您可以對我說：「播放周傑倫的歌」',
    voiceTipTitle: '你還可以對我說：小愛同學',
    voiceTip1: '現在幾點了',
    voiceTip2: '播放王源的歌',
    voiceTip3: '今天天氣怎麼樣',
    voiceTip4: '我想聽故事',
    addIrController: '新增紅外線遙控器',
    addIrControllerTip: '用紅外遙控傳統的空調、電視、機上盒等',
    chooseIrDevices: '選擇要控制的紅外電器',
    voiceFeatures: '語音功能',
    talkHistory: '對話記錄',
    misheard: '听错了',
    misunderstand: '理解错了',
    questionTitle: '问题描述',
    questionTip: '详细的描述能帮我们解决问题',
    submit: '提交',
    ok: '好的',
    talkvoice: '[聲音]',
    controlDevice: '控制裝置',
    controlDeviceTitle: '語音控制智慧裝置',
    voiceAuth: '語音控制授權管理',
    voiceAuthTip: '選擇音響可以控制的裝置',
    chooseViewType: '選擇檢視方式',
    deviceType: '裝置分類',
    roomType: '家庭房間',
    deviceRoom: '裝置房間',
    deviceDefaultRoom: '預設房間',
    deviceDetailMihome: '米家平台',
    deviceDetailCustomIr: '自訂裝置',
    noVoiceAuthedDevice: '沒有可語音控制的智慧裝置',
    trainSchedule: '訓練計劃',
    clock: '鬧鐘',
    musicClock: '音樂鬧鐘',
    musicClockTip: '用晨間音樂叫我起床',
    naturalClock: '自然鬧鐘',
    naturalClockTip: '用森林的聲音提醒我睡覺',
    funnyClock: '趣味鬧鐘',
    funnyClockTip: '用小黃人的聲音提醒我看動畫片',
    cantUpdate: '暫不支持修改',
    music: '音樂',
    natural: '自然',
    funny: '趣味',
    defaultRing: '系統鈴聲',
    addClock: '新增鬧鐘',
    ringAfter: '{1} 小時 {2} 分後響鈴',
    chooseRing: '選擇鈴聲',
    repeat: '重複',
    dateInfo: '{1}/{2}/{3}，{4}',
    remarks: '備註',
    addRemarks: '新增備註',
    clockVolume: '鬧鐘音量',
    repeatOnce: '只響一次',
    everyday: '每天',
    legalWorkday: '法定工作日（智慧跳過節假日）',
    legalWeekend: '法定節假日（智慧跳過工作日）',
    weekday: '週一至週五',
    weekend: '週六至週日',
    custom: '自訂',
    monday: '週一',
    tuesday: '週二',
    wednesday: '週三',
    thursday: '週四',
    friday: '週五',
    saturday: '週六',
    sunday: '週日',
    removeClock: '刪除鬧鐘',
    stereo: '立體聲',
    stereoTip: '你有兩臺可組成身歷聲組合的音箱，是否要體驗身歷聲功能',
    goCreate: '去創建',
    phone: '電話',
    familyAlbum: '家庭相簿',
    babySchedule: '寶寶課表',
    classSchedule: '課程表',
    moreFeatures: '更多功能',
    btSetting: '藍牙設定',
    btSwitcher: '音響藍牙開關',
    btCanBeFound: '音響藍牙可被發現',
    btFoundTip: '開啟後可在手機藍牙清單看到小愛音響',
    matchedDevices: '已配對的裝置',
    noMatchedDevice: '沒有已配對的藍牙裝置',
    enabled: '已開啟',
    notEnabled: '未開啟',
    connected: '已連線',
    notConnected: '未連線',
    settled: '已設定',
    notSettled: '未設定',
    disconnect: '斷開連接',
    connectBt: '連接藍牙',
    cancelMatch: '取消配對',
    meshTip: 'To ensure a better Bluetooth music playback experience, the Bluetooth gateway function will be disabled when Bluetooth music is enabled (disabling the Bluetooth gateway requires the speaker to be restarted). Continue anyway?',
    continue: '繼續',
    nearbyWakeup: '協同喚醒',
    nearbyWakeupTip: '如果區域網路內有多台小愛音響，那麼當您說出喚醒詞時，離您位置最近的一台音響會回應。開啟後，音響會等待一會時間才能回應使用者的喚醒。',
    nightMode: '夜間模式',
    nightLight: '夜間燈光',
    nightLightTip: '開啟後音響燈光會變得較暗',
    nightVolumn: '夜間音量',
    nightVolumnTip: '開啟後音響音量會變得較小',
    enableTime: '開啟時間',
    disableTime: '結束時間',
    dtsSetting: 'DTS 音效設定',
    dtsEffect: 'DTS 音效',
    dtsTip: 'DTS 音效是小愛音響聯合世界頂尖音效公司 DTS 推出的為音響量身打造的高品質音效。',
    dtsTypeHuman: '人聲',
    dtsTypeSurge: '澎湃',
    dtsTypeMild: '溫和',
    inuse: '使用中',
    use: '使用',
    voicePrinterSetting: '聲紋管理',
    voicePrinterRecorded: '声纹录制完成',
    addVoicePrinter: '新增聲紋',
    addVoicePrinterFail: '新增聲紋失敗',
    nickname: '暱稱',
    inputNameTip: '請輸入暱稱',
    nicknameTip: '小愛將會使用您設定的暱稱來稱呼您',
    nextStep: '下一步',
    startRecordVoicePrinter: '開始錄製聲紋',
    endRecordVoicePrinter: '聲紋錄製完成',
    recordVoicePrinterTitle: '親愛的進來了，請對音響說',
    recordVoicePrinterKey: '小愛同學，聲音註冊',
    recordVoicePrinterTip: '請與音響保持 2 米以內距離，保持周圍環境安靜',
    removeVoicePrinter: '刪除聲紋',
    readdVoicePrinter: '重新新增',
    removeVoicePrinterConfirm: '確定要刪除嗎？',
    tip: '提示',
    nicknameNeedAllChinese: '暱稱只能包含漢字',
    nicknameNeedNotEmpty: '暱稱不可為空白',
    nicknameRepeat: '該暱稱已存在，換一個試試吧',
    voicePrinterLimit: '最多新增六個聲紋',
    nicknameNotRecord: '未錄製聲紋',
    childMode: '兒童模式',
    childModeTip: '開啟後音響內容和功能將更符合兒童使用',
    addChildInfo: '新增兒童資訊',
    completeChildInfo: '完善兒童資訊',
    completeChildInfoTip: '新增後會針對孩子情況做個人化內容推薦',
    timeLimit: '時間限制',
    timeLimitTip: '開啟後可以限制兒童觀看視訊的時間',
    childModeLegalTip: '為了保護您兒童的個人資訊以及權益，作為兒童監護人，請仔細閱讀',
    childModeLegalName: '《小愛音響兒童資訊保護規則》',
    noChildInfo: '未新增兒童資訊',
    addChild: '新增新成員',
    gender: '性别',
    male: '男',
    female: '女',
    birthday: '生日',
    save: '儲存',
    saveSuccess: '儲存成功',
    needNickname: '請輸入暱稱',
    needGender: '請選擇性別',
    needBirthday: '請選擇生日',
    setNickname: '設定暱稱',
    timeLimitOnce: '單次可看時長',
    timeLimitOnceTip: '休息 1 小時後可再次觀看',
    timeLimitDay: '每天可看總時長',
    minutes: '{1} 分鐘',
    hours: '{1} 小時',
    hoursAndMinutes: '{1} 小時 {2} 分鐘',
    noVideoLimit: '禁看視訊時間',
    noVideoLimitTip: '例如，設定睡覺期間不能看視訊',
    startTime: '開始時間',
    removeChildConfirm: '確定要刪除該成員嗎？',
    removeFail: '刪除失敗',
    removeSuccess: '刪除成功',
    noLimit: '不限制',
    earthquakeSetting: '地震播報',
    broadcastEarthquake: '播報地震資訊',
    broadcastEarthquakeTip: '開啟後，地震發生時，音響會第一時間播報設定位置的三級及以上等級的地震資訊',
    broadcastEarthquakeTip2: 'Due to unexpected circumstances such as network service errors or resource provider function updates, occasional delays or errors in the broadcasts may occur. Apologies for any inconvenience caused.',
    broadcastEarthquakePos: '地震播報位置',
    broadcastEarthquakePosText: '{1}-{2}-{3}',
    earthquakeMark: 'Note: Please be aware that this may disturb your sleep at night when it is enabled.',
    earthquakeEnabled: '地震播報開啟',
    earthquakeDisabled: '地震播報關閉',
    addressSetting: '音箱位置',
    broadcastAddressPos: '音箱地址',
    broadcastAddressPosText: '{1}-{2}-{3}',
    timbreSetting: '音色設定',
    xiaoaiTimbreSetting: '小愛音色設定',
    xiaoaiTimbreTip: '修改後會變更音響上小愛同學的聲音',
    timbreLively: '蜜糖',
    timbreLivelyDes: '甜美可愛女聲',
    timbreTender: '茉莉',
    timbreTenderDes: '茉莉（溫柔知性女聲）',
    timbreVigour: '青葱',
    timbreVigourDes: '陽光活力男聲',
    timbreCute: '泡芙',
    timbreCuteDes: '奶萌乖巧童聲',
    timbreAndDialect: '音色和方言',
    timbreTitle: '小愛同學會根據選擇的音色和方言，與你交流',
    timbreMandarin: '普通話',
    auxIn: 'AUX IN',
    auxInUsage: 'AUX IN 使用說明',
    auxInTip: '支援 AUX IN 連接埠，智慧音響也能變身電腦、電視的播放伴侶。',
    volumeSpread: '音響增益',
    volumeSpreadTip: '使用建議：使用 AUX IN 功能播放音樂時，為保證音響音樂播放音量及喚醒音量達到更好的平衡，建議在電腦、電視上將音量調到 100% 使用。',
    lightEffect: '燈光效果',
    lightEffectSetting: '燈光效果設定',
    musicLightEffect: '音樂播放燈光效果',
    musicLightEffectTip: '開啟後，播放音樂時會有燈光相伴，氛圍感更強',
    dlnaMusic: 'DLNA 音樂',
    dlnaMusicPlay: 'DLNA 音樂播放',
    dlnaMusicPlayTip1: 'DLNA 是一種區域網路內音樂播放的方式，開啟後，您可以在音樂 App 中把歌曲推送到連接相同 Wi-Fi 的音響上進行播放。相比藍牙，DLNA 不受距離限制，手機和音響只需要連接同一個 Wi-Fi 即可（需要音樂播放器支援並開啟 DLNA 功能）。',
    dlnaMusicPlayTip2: '備註：以下是常見音樂 APP DLNA 功能的開啟方式：\nQQ 音樂：我的-更多-設定-QPlay 與車載音樂\n網易雲音樂：設定-連接 DLNA 裝置\n（以上方式僅供參考，因音樂 App 存在改版的可能，以實際情況為准）',
    continuousTalk: '連續對話',
    continuousTalkBeta: '連續對話 Beta',
    continuousTalkTip: '開啟後，喚醒小愛同學就可以連續對話，不用再頻繁喚醒。\n對小愛說「再見」，可以快速結束本次連續對話。',
    userManual: '使用者手冊',
    securitySetting: '隱私設定',
    musicPersonalization: '小米音樂個性化推薦',
    musicPersonalizationTip: '關閉後，選擇小米音樂源聽歌時不會依照你的個人喜好進行個性化推薦',
    wakeWordUpload: '語音喚醒優化',
    wakeWordUploadTip: '關閉後，小愛將不再上傳你的喚醒時的音訊檔用於語音模型訓練，可能會影響喚醒時的精確性',
    qqMusicRecommond: 'QQ音樂個性化推薦',
    qqMusicRecommondTip: '關閉QQ音樂個性化推薦需前往QQ音樂APP，在“我的”>“更多”>“設定”>“隱私設定”>“個性化權限”中關閉允許個性化推薦開關',
    home_more_device: '裝置商城',
    home_share_device: '共用裝置',
    home_third_platform: '其他平台裝置',
    home_auth_entry: '米家平台裝置',
    home_ir_entry: '新增語音遙控電器',
    common_play_list: '玩法範例',
    common_directive_list: '自訂指令',
    common_add_directive: '新增自訂指令',
    common_mhmodal_button_cancel: '取消',
    common_mhmodal_button_ok: '確認',
    common_mhmodal_button_delete: "删除",
    common_mhmodal_content_delete_control: '確定要刪除此裝置的語音遙控嗎？',
    device_cell_from: '來自',
    device_detail_name: '裝置名稱',
    device_detail_button: '按鍵',
    device_detail_list_name: '名稱',
    device_detail_list_room: '房間',
    device_detail_left_button: '左鍵',
    device_detail_middle_button: '中央鍵',
    device_detail_right_button: '右鍵',
    device_detail_default_name: '預設名稱',
    device_detail_tap_to_more: '按下即可檢視更多玩法',
    recommend_devices_title: '為您推薦',
    recommend_devices_subtitle: '更多支援裝置',
    recommend_devices_name1: '米家智慧插座基礎版',
    recommend_devices_name2: '米家LED智慧檯燈',
    recommend_devices_name3: '米家空气净化器Pro',
    recommend_devices_tip1: '開啟插座電源',
    recommend_devices_tip2: '開啟台燈電源',
    recommend_devices_tip3: '將空氣淨化器設為睡眠模式',
    common_load_error: '資料載入失敗，請稍後再試',
    common_load_timeout: '資料載入失敗，請稍後再試',
    more_other: '其他',
    iftttText: '自定義內容',
    iftttPlaceholder: '請輸入播放內容',
    iftttValidTip: '支持輸入中文、英文，符號僅支持中文逗號、句號、問號、感嘆號。',
    iftttInvalidTip: '含有不支持的字符',
    iftttDirective: '自定义指令',
    iftttDirectivePlaceholder: '输入让小爱执行的指令，例如：\"播放新闻\"',
    iftttSilent: '靜默執行',
    iftttSilentTip: '小愛執行指令時將不播放文字回覆',
    loadMore: '上拉載入更多',
    loadingTitle: '正在載入…',
    noMoreData: '已經載入到底啦',
    pullToRefresh: '下拉以重新整理',
    releaseToRefresh: '鬆開以重新整理',
    refreshing: '正在同步對話記錄…',
    noUpdate: '暫無更新',
    lastUpdateTime: '上次更新時間:',
    refreshed: '已同步到最新記錄'
  };
  exports.default = _default;
},10106,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = getRealJsonData;

  function getRealJsonData(baseStr) {
    if (!baseStr || typeof baseStr != 'string') return;
    var jsonData = null;

    try {
      jsonData = JSON.parse(baseStr);
    } catch (err) {
      return null;
    }

    var needReplaceStrs = [];
    loopFindArrOrObj(jsonData, needReplaceStrs);
    needReplaceStrs.forEach(function (replaceInfo) {
      var matchArr = baseStr.match(eval("/\"" + replaceInfo.key + "\"\\s?:\\s?[0-9]{15,}/"));

      if (matchArr) {
        var str = matchArr[0];
        var matchValue = str.match(eval("/:\\s?([0-9]{15,})/"));

        if (matchValue && matchValue[1]) {
          var replaceStr = "\"" + replaceInfo.key + "\": \"" + matchValue[1] + "\"";
          baseStr = baseStr.replace(str, replaceStr);
        }
      }
    });
    var returnJson = null;

    try {
      returnJson = JSON.parse(baseStr);
    } catch (err) {
      return null;
    }

    return returnJson;
  }

  function getNeedRpStrByObj(obj, needReplaceStrs) {
    for (var key in obj) {
      var value = obj[key];

      if (typeof value == 'number' && value > 9007199254740992) {
        needReplaceStrs.push({
          key: key
        });
      }

      loopFindArrOrObj(value, needReplaceStrs);
    }
  }

  function getNeedRpStrByArr(arr, needReplaceStrs) {
    for (var i = 0; i < arr.length; i++) {
      var value = arr[i];
      loopFindArrOrObj(value, needReplaceStrs);
    }
  }

  function loopFindArrOrObj(value, needRpStrArr) {
    var valueTypeof = Object.prototype.toString.call(value);

    if (valueTypeof == '[object Object]') {
      needRpStrArr.concat(getNeedRpStrByObj(value, needRpStrArr));
    }

    if (valueTypeof == '[object Array]') {
      needRpStrArr.concat(getNeedRpStrByArr(value, needRpStrArr));
    }
  }
},10109,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _miot = _$$_REQUIRE(_dependencyMap[11]);

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fonts = _$$_REQUIRE(_dependencyMap[13]);

  var _fns = _$$_REQUIRE(_dependencyMap[14]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _apis = _$$_REQUIRE(_dependencyMap[16]);

  var TopHeader = function (_Component) {
    (0, _inherits2.default)(TopHeader, _Component);

    function TopHeader() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, TopHeader);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(TopHeader)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        isOnline: _miot.Device.isOnline,
        name: _miot.Device.name,
        icon: null,
        iconOffline: null
      };
      _this.height = 0;
      _this.titleSettled = false;

      _this.onLayout = function (_ref) {
        var height = _ref.nativeEvent.layout.height;
        _this.height = height;
      };

      _this.onContentScroll = function (y) {
        var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
            height = _assertThisInitialize.height,
            titleSettled = _assertThisInitialize.titleSettled;

        var setTitle = _this.props.setTitle;

        if (y >= height && !titleSettled) {
          setTitle(_this.state.name);
          _this.titleSettled = true;
          return;
        }

        if (y < height && titleSettled) {
          setTitle('');
          _this.titleSettled = false;
          return;
        }
      };

      return _this;
    }

    (0, _createClass2.default)(TopHeader, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        setInterval(function () {
          (0, _apis.getCapacity)().then(function (res) {
            _this2.setState({
              capacity: JSON.parse(res.data.info).capacity
            });
          });
          (0, _apis.getDcStatus)().then(function (res) {
            _this2.setState({
              dcStatus: JSON.parse(res.data.info).dc_status
            });
          });
        }, 60000);
        (0, _apis.getDeviceInfo)().then(function (_ref2) {
          var icon = _ref2.icon,
              iconOffline = _ref2.iconOffline;

          _this2.setState({
            icon: icon,
            iconOffline: iconOffline
          });
        }).catch(_fns.log);
        this.deviceNameChanged = _miot.DeviceEvent.deviceNameChanged.addListener(function (_ref3) {
          var name = _ref3.name;

          _this2.setState({
            name: name
          });
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.deviceNameChanged && this.deviceNameChanged.remove();
        this.deviceNameChanged = null;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$state = this.state,
            isOnline = _this$state.isOnline,
            name = _this$state.name,
            icon = _this$state.icon,
            iconOffline = _this$state.iconOffline,
            capacity = _this$state.capacity,
            dcStatus = _this$state.dcStatus;
        var disabled = !isOnline;

        var chargingComplete = _$$_REQUIRE(_dependencyMap[17]);

        var charging = _$$_REQUIRE(_dependencyMap[18]);

        var lowPower = _$$_REQUIRE(_dependencyMap[19]);

        var power10 = _$$_REQUIRE(_dependencyMap[20]);

        var power60 = _$$_REQUIRE(_dependencyMap[21]);

        var power80 = _$$_REQUIRE(_dependencyMap[22]);

        return _react.default.createElement(_reactNative.View, {
          style: Styles.container,
          onLayout: this.onLayout
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.iconContainer
        }, _react.default.createElement(_reactNative.Image, {
          style: Styles.icon,
          source: {
            uri: _miot.Device.iconURL || ' '
          }
        })), _react.default.createElement(_reactNative.Text, {
          style: [Styles.title, disabled ? Styles.disabled : null],
          numberOfLines: 2
        }, name), _miot.Device.model === 'xiaomi.wifispeaker.l09b' ? _react.default.createElement(_reactNative.View, {
          style: Styles.batteryView
        }, _react.default.createElement(_reactNative.Image, {
          style: Styles.batteryIcon,
          source: dcStatus === 1 ? capacity === 100 ? chargingComplete : capacity <= 10 ? lowPower : charging : capacity > 80 ? power80 : capacity > 60 ? power60 : capacity <= 10 ? lowPower : power10
        }), _react.default.createElement(_reactNative.Text, {
          style: [Styles.battery, dcStatus === 1 ? capacity <= 10 ? Styles.red : Styles.green : capacity <= 10 ? Styles.red : Styles.darkGray]
        }, dcStatus === 1 ? capacity === 100 ? _i18n.default.chargingComplete() : _i18n.default.charging() : _i18n.default.currentCapacity(), capacity, "%")) : null);
      }
    }]);
    return TopHeader;
  }(_react.Component);

  exports.default = TopHeader;
  TopHeader.propTypes = {
    setTitle: _propTypes.default.func
  };
  TopHeader.defaultProps = {
    setTitle: function setTitle() {}
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginBottom: (0, _sizes.adjustSize)(90)
    },
    iconContainer: {
      marginTop: (0, _sizes.adjustSize)(-54),
      marginBottom: (0, _sizes.adjustSize)(-63)
    },
    green: {
      color: '#00d500'
    },
    red: {
      color: 'red'
    },
    darkGray: {
      color: 'gray'
    },
    icon: {
      width: (0, _sizes.adjustSize)(400),
      height: (0, _sizes.adjustSize)(500),
      marginHorizontal: (0, _sizes.adjustSize)(30),
      marginTop: (0, _sizes.adjustSize)(30),
      resizeMode: 'contain'
    },
    batteryView: {
      flexDirection: "row",
      alignItems: "center"
    },
    batteryIcon: {
      marginHorizontal: (0, _sizes.adjustSize)(100),
      width: (0, _sizes.adjustSize)(60),
      height: (0, _sizes.adjustSize)(40)
    },
    battery: {
      fontFamily: _fonts.FontDefault,
      marginHorizontal: (0, _sizes.adjustSize)(-80),
      fontSize: (0, _sizes.adjustSize)(40),
      lineHeight: (0, _sizes.adjustSize)(60),
      color: '#333'
    },
    title: {
      marginHorizontal: (0, _sizes.adjustSize)(90),
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(90),
      lineHeight: (0, _sizes.adjustSize)(117),
      color: '#333'
    },
    disabled: {
      opacity: 0.5
    }
  });
},10112,[14308,14305,14320,14323,14371,14377,14374,14386,10297,10033,10318,10074,10776,10782,10779,10097,10043,10115,10118,10121,10124,10127,10130]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 48,
    "height": 33,
    "scales": [1],
    "hash": "e143a0649acb51c948a5ba1a8251d23e",
    "name": "chargingComplete",
    "type": "png"
  });
},10115,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 48,
    "height": 33,
    "scales": [1],
    "hash": "6aa22684699c24593ddfa29ccd8b6484",
    "name": "charging",
    "type": "png"
  });
},10118,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var start = Date.now();

  _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  _$$_REQUIRE(_dependencyMap[2]);

  _$$_REQUIRE(_dependencyMap[3]);

  _$$_REQUIRE(_dependencyMap[4]);

  _$$_REQUIRE(_dependencyMap[5]);

  _$$_REQUIRE(_dependencyMap[6]);

  _$$_REQUIRE(_dependencyMap[7]);

  _$$_REQUIRE(_dependencyMap[8]);

  _$$_REQUIRE(_dependencyMap[9]);

  _$$_REQUIRE(_dependencyMap[10]);

  var GlobalPerformanceLogger = _$$_REQUIRE(_dependencyMap[11]);

  GlobalPerformanceLogger.markPoint('initializeCore_start', GlobalPerformanceLogger.currentTimestamp() - (Date.now() - start));
  GlobalPerformanceLogger.markPoint('initializeCore_end');
},10120,[14449,14452,14455,14470,14479,14485,14500,14524,14533,14536,14560,14548]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 48,
    "height": 33,
    "scales": [1],
    "hash": "5455509bf4e5b1578986df993d599f81",
    "name": "lowPower",
    "type": "png"
  });
},10121,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 48,
    "height": 33,
    "scales": [1],
    "hash": "9372f42af267a7837ae25db74ba423c9",
    "name": "power10",
    "type": "png"
  });
},10124,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 48,
    "height": 33,
    "scales": [1],
    "hash": "e179ffb8660c6557c37724a2f1690a5c",
    "name": "power60",
    "type": "png"
  });
},10127,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 48,
    "height": 33,
    "scales": [1],
    "hash": "bf3273924641a518762c6f6a586614ab",
    "name": "power80",
    "type": "png"
  });
},10130,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Player;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[4]);

  var _reactNativeSvg = _$$_REQUIRE(_dependencyMap[5]);

  var _miot = _$$_REQUIRE(_dependencyMap[6]);

  var _sizes = _$$_REQUIRE(_dependencyMap[7]);

  var _fonts = _$$_REQUIRE(_dependencyMap[8]);

  var _reactNativeSlider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _hooks = _$$_REQUIRE(_dependencyMap[10]);

  var _apis = _$$_REQUIRE(_dependencyMap[11]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var SourceMusic = _$$_REQUIRE(_dependencyMap[13]);

  var SourceRightArrow = _$$_REQUIRE(_dependencyMap[14]);

  var SourcePlay = _miot.DarkMode.getColorScheme() === 'light' ? _$$_REQUIRE(_dependencyMap[15]) : _$$_REQUIRE(_dependencyMap[16]);
  var SourcePause = _miot.DarkMode.getColorScheme() === 'light' ? _$$_REQUIRE(_dependencyMap[17]) : _$$_REQUIRE(_dependencyMap[18]);
  var SourceArrow = _miot.DarkMode.getColorScheme() === 'light' ? _$$_REQUIRE(_dependencyMap[19]) : _$$_REQUIRE(_dependencyMap[20]);
  var SourcePreMusic = _miot.DarkMode.getColorScheme() === 'light' ? _$$_REQUIRE(_dependencyMap[21]) : _$$_REQUIRE(_dependencyMap[22]);
  var SourceNextMusic = _miot.DarkMode.getColorScheme() === 'light' ? _$$_REQUIRE(_dependencyMap[23]) : _$$_REQUIRE(_dependencyMap[24]);
  var SourceVolumeLow = _miot.DarkMode.getColorScheme() === 'light' ? _$$_REQUIRE(_dependencyMap[25]) : _$$_REQUIRE(_dependencyMap[26]);
  var SourceVolumeHigh = _miot.DarkMode.getColorScheme() === 'light' ? _$$_REQUIRE(_dependencyMap[27]) : _$$_REQUIRE(_dependencyMap[28]);
  var SourceMicroOn = _miot.DarkMode.getColorScheme() === 'light' ? _$$_REQUIRE(_dependencyMap[29]) : _$$_REQUIRE(_dependencyMap[30]);
  var SourceMicroOff = _miot.DarkMode.getColorScheme() === 'light' ? _$$_REQUIRE(_dependencyMap[31]) : _$$_REQUIRE(_dependencyMap[32]);
  var FailedIcons = [];
  var listener = null;
  var phoneVolume = 0;
  var speakerVolume = 0;
  var firstChangeVolume = true;
  var btnPlayWidth = 150;

  function Player() {
    var isOnline = (0, _hooks.useOnline)();
    var disabled = !isOnline;

    var _useState = (0, _react.useState)(0),
        _useState2 = (0, _slicedToArray2.default)(_useState, 2),
        status = _useState2[0],
        setStatus = _useState2[1];

    var _useState3 = (0, _react.useState)(SourceMusic),
        _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
        icon = _useState4[0],
        setIcon = _useState4[1];

    var _useState5 = (0, _react.useState)(_i18n.default.playerTitle()),
        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
        title = _useState6[0],
        setTitle = _useState6[1];

    var _useState7 = (0, _react.useState)(_i18n.default.playerSuggest()),
        _useState8 = (0, _slicedToArray2.default)(_useState7, 2),
        subtitle = _useState8[0],
        setSubtitle = _useState8[1];

    var _useState9 = (0, _react.useState)(''),
        _useState10 = (0, _slicedToArray2.default)(_useState9, 2),
        singer = _useState10[0],
        setSinger = _useState10[1];

    var _useState11 = (0, _react.useState)(1),
        _useState12 = (0, _slicedToArray2.default)(_useState11, 2),
        numberOfLines = _useState12[0],
        setNumberOfLines = _useState12[1];

    var _useState13 = (0, _react.useState)(''),
        _useState14 = (0, _slicedToArray2.default)(_useState13, 2),
        path = _useState14[0],
        setPath = _useState14[1];

    var _useState15 = (0, _react.useState)(SourcePlay),
        _useState16 = (0, _slicedToArray2.default)(_useState15, 2),
        iconPlayer = _useState16[0],
        setIconPlayer = _useState16[1];

    var _useState17 = (0, _react.useState)(20),
        _useState18 = (0, _slicedToArray2.default)(_useState17, 2),
        volume = _useState18[0],
        setVolume = _useState18[1];

    var _useState19 = (0, _react.useState)(0),
        _useState20 = (0, _slicedToArray2.default)(_useState19, 2),
        micro = _useState20[0],
        setMicroOn = _useState20[1];

    function onPress() {
      if (!_miot.Device.isOwner) {
        return;
      }

      _miot.Host.ui.openXiaoaiContentPage();
    }

    function _onValueChange(value) {
      if (speakerVolume != value) {
        speakerVolume = value;
        (0, _apis.setPlayerVolume)(value);
      }
    }

    (0, _react.useEffect)(function () {
      var listener = (0, _apis.listenPlayerStatus)(function () {
        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
          playerStatus: {},
          roomInfo: {}
        },
            _ref$playerStatus = _ref.playerStatus,
            playerStatus = _ref$playerStatus === undefined ? {
          status: 0
        } : _ref$playerStatus,
            _ref$roomInfo = _ref.roomInfo,
            roomInfo = _ref$roomInfo === undefined ? {} : _ref$roomInfo;

        var _ref2 = playerStatus || {},
            status = _ref2.status,
            play_song_detail = _ref2.play_song_detail,
            volume = _ref2.volume;

        speakerVolume = volume;
        setVolume(volume);

        if (status === 0) {
          setStatus(status);
          setIcon(SourceMusic);
          setTitle(_i18n.default.playerTitle());
          setSinger('');
          setSubtitle(_i18n.default.playerSuggest());
          setNumberOfLines(2);
          setIconPlayer(SourcePlay);
          setPath('');
        } else if (play_song_detail) {
          setStatus(status);

          if (play_song_detail.cover && FailedIcons.indexOf(play_song_detail.cover) === -1) {
            setIcon(play_song_detail.cover ? {
              uri: play_song_detail.cover
            } : SourceMusic);
          } else {
            setIcon(SourceMusic);
          }

          setTitle(play_song_detail.title);
          setSinger(play_song_detail.artist ? "-" + play_song_detail.artist : '');
          setSubtitle(roomInfo ? roomInfo.homeName + "-" + roomInfo.roomName : '');
          setNumberOfLines(roomInfo ? 1 : 2);
          setIconPlayer(status === 1 ? SourcePause : SourcePlay);
          var r = (0, _sizes.adjustSize)(75);
          var m = (play_song_detail.position || 0) / (play_song_detail.duration || 1);
          var p = [];
          var a = Math.PI * m * 2;
          p.push("M" + r + " 0");

          if (m <= 0.5) {
            p.push("A" + r + " " + r + " 0 0 1 " + (r + r * Math.cos(Math.PI / 2 - a)) + " " + (r - r * Math.sin(Math.PI / 2 - a)));
          } else {
            p.push("A" + r + " " + r + " 0 0 1 " + r + " " + r * 2);
            p.push("A" + r + " " + r + " 0 0 1 " + (r + r * Math.cos(Math.PI / 2 - a)) + " " + (r - r * Math.sin(Math.PI / 2 - a)));
          }

          setPath(p.join(''));
        }
      });
      return function () {
        listener && listener.remove && listener.remove();
      };
    }, [isOnline]);
    (0, _react.useEffect)(function () {
      Promise.all([_miot.System.volume.getVolumeInfo(), _miot.System.volume.startVolume({
        hideSystemSlider: false
      })]).then(function (res) {
        phoneVolume = parseInt(res[0].data.volume * 100);
        speakerVolume = volume;
        if (listener !== null) return;
        listener = _miot.VolumeChangeEvent.onVolumeChange.addListener(function (result) {
          if (firstChangeVolume) {
            firstChangeVolume = false;
            return;
          }

          var currentVolume = parseInt(result.result.volume * 100);
          var tmpVolume;

          if (phoneVolume < currentVolume || currentVolume == 100) {
            tmpVolume = speakerVolume + 5;

            if (tmpVolume > 100) {
              tmpVolume = 100;
            }
          } else {
            tmpVolume = speakerVolume - 5;

            if (tmpVolume < 6) {
              tmpVolume = 6;
            }
          }
        });
      });
      return function () {
        listener && listener.remove();
        listener = null;

        _miot.System.volume.stopVolume();
      };
    }, []);

    function togglePlay() {
      setIconPlayer(status === 1 ? SourcePlay : SourcePause);
      setStatus(status === 1 ? 2 : 1);
      (0, _apis.setPlayerStatus)(status === 1 ? 'pause' : 'play').then(function () {}).catch(function () {
        setIconPlayer(status !== 1 ? SourcePlay : SourcePause);
        setStatus(status === 1 ? 2 : 1);
      });
    }

    function playPreMusic() {
      (0, _apis.setPlayerStatus)('prev').then(function () {
        setStatus(2);
        setIconPlayer(SourcePause);
      });
    }

    function playNextMusic() {
      (0, _apis.setPlayerStatus)('next').then(function () {
        setStatus(2);
        setIconPlayer(SourcePause);
      });
    }

    function toggleMicro() {
      setMicroOn(micro === 1 ? 0 : 1);
      (0, _apis.setMicroStatus)(micro === 0 ? false : true).then(function () {}).catch(function () {
        setMicroOn(micro === 1 ? 0 : 1);
      });
    }

    return _react.default.createElement(_reactNative.View, {
      style: Styles.container
    }, _react.default.createElement(_reactNative.Image, {
      style: Styles.arrow,
      source: SourceArrow
    }), _react.default.createElement(_reactNative.View, {
      style: [Styles.innerContainer, Styles.innerView]
    }, _react.default.createElement(_reactNative.TouchableOpacity, {
      style: [Styles.content, disabled ? Styles.disabled : null],
      disabled: disabled || !_miot.Device.isOwner,
      activeOpacity: 0.8,
      onPress: onPress
    }, _react.default.createElement(_reactNative.Image, {
      style: Styles.icon,
      source: icon,
      onError: function onError() {
        if (icon && icon.uri && FailedIcons.indexOf(icon.uri) === -1) {
          FailedIcons.push(icon.uri);
        }

        setIcon(SourceMusic);
      }
    }), _react.default.createElement(_reactNative.View, {
      style: Styles.text
    }, _react.default.createElement(_reactNative.View, {
      style: Styles.title
    }, _react.default.createElement(_reactNative.Text, {
      numberOfLines: numberOfLines
    }, _react.default.createElement(_reactNative.Text, {
      style: [status ? Styles.song : Styles.defaultTitle]
    }, title), _react.default.createElement(_reactNative.Text, {
      style: Styles.singer
    }, singer))), subtitle ? _react.default.createElement(_reactNative.Text, {
      style: Styles.subtitle
    }, subtitle) : null), !_miot.Device.isOwner && status ? _react.default.createElement(_reactNative.TouchableOpacity, {
      style: Styles.indicator2,
      activeOpacity: 0.8,
      onPress: togglePlay
    }, _react.default.createElement(_reactNativeSvg.Svg, {
      width: (0, _sizes.adjustSize)(84),
      height: (0, _sizes.adjustSize)(84)
    }, _react.default.createElement(_reactNativeSvg.Path, {
      d: path,
      strokeWidth: 3,
      stroke: "#333",
      fillOpacity: 0
    })), _react.default.createElement(_reactNative.Image, {
      style: [Styles.playerBtn2, {
        position: "absolute"
      }],
      source: iconPlayer
    })) : null, _miot.Device.isOwner && _react.default.createElement(_reactNative.TouchableOpacity, {
      style: {
        width: 30,
        height: 30,
        borderRadius: 15
      },
      onPress: toggleMicro
    })), _miot.Device.isOwner && _react.default.createElement(_reactNative.View, {
      style: Styles.playControl
    }, _react.default.createElement(_reactNative.TouchableOpacity, {
      style: [Styles.indicator, {
        marginRight: 30,
        backgroundColor: "#fff"
      }],
      activeOpacity: 0.8,
      onPress: playPreMusic
    }, _react.default.createElement(_reactNative.Image, {
      style: [Styles.preNextBtn],
      source: SourcePreMusic
    })), _react.default.createElement(_reactNative.TouchableOpacity, {
      style: Styles.indicator,
      activeOpacity: 0.8,
      onPress: togglePlay
    }, _react.default.createElement(_reactNative.Image, {
      style: [Styles.playerBtn, {
        position: "absolute"
      }],
      source: iconPlayer
    }), _react.default.createElement(_reactNativeSvg.Svg, {
      width: (0, _sizes.adjustSize)(btnPlayWidth),
      height: (0, _sizes.adjustSize)(btnPlayWidth)
    }, _react.default.createElement(_reactNativeSvg.Path, {
      d: path,
      strokeWidth: 3,
      stroke: _miot.DarkMode.getColorScheme() === 'light' ? "#000" : '#fff',
      fillOpacity: 0
    }))), _react.default.createElement(_reactNative.TouchableOpacity, {
      style: [Styles.indicator, {
        marginLeft: 30,
        backgroundColor: "#fff"
      }],
      activeOpacity: 0.8,
      onPress: playNextMusic
    }, _react.default.createElement(_reactNative.Image, {
      style: [Styles.preNextBtn],
      source: SourceNextMusic
    }))), _miot.Device.isOwner && _react.default.createElement(_reactNative.View, {
      style: Styles.sliderStyle
    }, _react.default.createElement(_reactNative.Image, {
      style: Styles.volumeBtn,
      source: SourceVolumeLow
    }), _react.default.createElement(_reactNativeSlider.default, {
      value: volume,
      style: {
        margin: 10,
        flex: 1
      },
      thumbTouchSize: {
        width: 25,
        height: 25
      },
      thumbTintColor: _miot.DarkMode.getColorScheme() === 'light' ? 'xm#000' : 'xm#fff',
      trackStyle: {
        height: 2,
        borderRadius: 1
      },
      minimumValue: 6,
      maximumValue: 100,
      step: 1,
      onSlidingComplete: _onValueChange,
      minimumTrackTintColor: _miot.DarkMode.getColorScheme() === 'light' ? "xm#000" : 'xm#fff',
      maximumTrackTintColor: _miot.DarkMode.getColorScheme() === 'light' ? "#f5f5f5" : 'xm#000'
    }), _react.default.createElement(_reactNative.Image, {
      style: Styles.volumeBtn,
      source: SourceVolumeHigh
    }))));
  }

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginBottom: (0, _sizes.adjustSize)(21),
      marginHorizontal: (0, _sizes.adjustSize)(30)
    },
    innerView: {
      backgroundColor: '#fff',
      borderRadius: (0, _sizes.adjustSize)(30)
    },
    disabled: {
      opacity: 0.5
    },
    arrow: {
      width: (0, _sizes.adjustSize)(53),
      height: (0, _sizes.adjustSize)(24),
      resizeMode: 'contain',
      alignSelf: 'center',
      marginBottom: (0, _sizes.adjustSize)(-1),
      zIndex: 1
    },
    content: {
      paddingVertical: (0, _sizes.adjustSize)(63),
      paddingHorizontal: (0, _sizes.adjustSize)(60),
      flexDirection: 'row',
      alignItems: 'center'
    },
    icon: {
      width: (0, _sizes.adjustSize)(114),
      height: (0, _sizes.adjustSize)(114),
      borderRadius: (0, _sizes.adjustSize)(9),
      marginRight: (0, _sizes.adjustSize)(42)
    },
    text: {
      flex: 1
    },
    title: {
      flexDirection: 'row'
    },
    defaultTitle: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(42),
      fontWeight: 'bold',
      color: '#000',
      lineHeight: (0, _sizes.adjustSize)(57)
    },
    song: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      color: '#000',
      lineHeight: (0, _sizes.adjustSize)(57)
    },
    singer: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      color: '#3f3f3f',
      lineHeight: (0, _sizes.adjustSize)(57)
    },
    subtitle: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(39),
      color: '#666',
      lineHeight: (0, _sizes.adjustSize)(54)
    },
    indicator: {
      width: (0, _sizes.adjustSize)(btnPlayWidth),
      height: (0, _sizes.adjustSize)(btnPlayWidth),
      backgroundColor: '#f7f7f7',
      borderRadius: (0, _sizes.adjustSize)(75),
      overflow: 'hidden',
      justifyContent: 'center',
      alignItems: 'center'
    },
    indicator2: {
      width: (0, _sizes.adjustSize)(84),
      height: (0, _sizes.adjustSize)(84),
      backgroundColor: '#f7f7f7',
      borderRadius: (0, _sizes.adjustSize)(75),
      overflow: 'hidden',
      justifyContent: 'center',
      alignItems: 'center'
    },
    playerBtn2: {
      position: 'absolute',
      width: (0, _sizes.adjustSize)(84),
      height: (0, _sizes.adjustSize)(84),
      resizeMode: 'contain'
    },
    rightArr: {
      width: (0, _sizes.adjustSize)(72),
      height: (0, _sizes.adjustSize)(72),
      marginLeft: (0, _sizes.adjustSize)(30)
    },
    playerBtn: {
      resizeMode: 'contain'
    },
    preNextBtn: {
      resizeMode: 'contain'
    },
    volumeBtn: {
      width: (0, _sizes.adjustSize)(60),
      height: (0, _sizes.adjustSize)(60),
      resizeMode: 'contain'
    },
    playControl: {
      justifyContent: 'center',
      alignItems: 'center',
      height: (0, _sizes.adjustSize)(120),
      flexDirection: 'row'
    },
    sliderStyle: {
      flexDirection: 'row',
      alignItems: 'center',
      paddingHorizontal: (0, _sizes.adjustSize)(40),
      paddingVertical: (0, _sizes.adjustSize)(10)
    }
  });
},10133,[14308,14305,14347,10297,10033,11485,10074,10776,10782,13687,10136,10043,10097,10142,10311,10145,10148,10151,10154,10157,10160,10163,10166,10169,10172,10175,10178,10181,10184,10187,10190,10193,10196]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.useOnline = useOnline;
  exports.useStorage = useStorage;
  exports.useSupport = useSupport;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _react = _$$_REQUIRE(_dependencyMap[2]);

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var _fns = _$$_REQUIRE(_dependencyMap[4]);

  var _supports = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  function useOnline() {
    var _useState = (0, _react.useState)(true),
        _useState2 = (0, _slicedToArray2.default)(_useState, 2),
        isOnline = _useState2[0],
        setOnline = _useState2[1];

    (0, _react.useEffect)(function () {
      setOnline(_miot.Device.isOnline);
    });
    return isOnline;
  }

  function useStorage(key) {
    var _useState3 = (0, _react.useState)(null),
        _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
        cachedValue = _useState4[0],
        setCachedValue = _useState4[1];

    var value = cachedValue;

    function setValue(v) {
      _miot.Host.storage.set(key, v);

      setCachedValue(v);
    }

    (0, _react.useEffect)(function () {
      _miot.Host.storage.get(key).then(function (res) {
        setCachedValue(res);
      }).catch(_fns.log);
    });
    return [value, setValue];
  }

  function useSupport(key) {
    var _useState5 = (0, _react.useState)(false),
        _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
        support = _useState6[0],
        setSupport = _useState6[1];

    (0, _react.useEffect)(function () {
      (0, _supports.default)(key).then(function () {
        setSupport(true);
      }).catch(function () {
        setSupport(false);
      });
    });
    return support;
  }
},10136,[14305,14347,10297,10074,10779,10139]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = supports;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _miot = _$$_REQUIRE(_dependencyMap[2]);

  var _apis = _$$_REQUIRE(_dependencyMap[3]);

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[4]);

  var countryCode;

  function supports(key) {
    return new Promise(function (resolve, reject) {
      Promise.all([(0, _apis.getDeviceInfo)(), countryCode ? Promise.resolve({
        countryCode: countryCode
      }) : _miot.Service.getServerName()]).then(function (_ref) {
        var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
            _ref2$ = _ref2[0],
            capabilities = _ref2$.capabilities,
            innerCapabilities = _ref2$.innerCapabilities,
            countryCapabilities = _ref2$.countryCapabilities,
            cc = _ref2[1].countryCode;

        countryCode = (cc || '').toLowerCase();

        if ((capabilities.includes(key) || _capabilitiesFormatted.RelateCapabilities[key] && _capabilitiesFormatted.RelateCapabilities[key].find(function (c) {
          return !!innerCapabilities[c];
        })) && (!countryCapabilities || !countryCapabilities[key] || countryCapabilities[key].find(function (cc) {
          return cc === countryCode;
        }))) {
          resolve();
          return;
        }

        reject();
      }).catch(reject);
    });
  }
},10139,[14305,14347,10074,10043,10049]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 152,
    "height": 152,
    "scales": [1],
    "hash": "6b11eb075b8de08e8c684ee9d3dcd645",
    "name": "music",
    "type": "png"
  });
},10142,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 56,
    "height": 56,
    "scales": [2],
    "hash": "e1c7920bca2a2dedc4027d1d1c2119e6",
    "name": "play",
    "type": "png"
  });
},10145,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 56,
    "height": 56,
    "scales": [2],
    "hash": "5a453d094a1b7b6d54ec64ef160cc850",
    "name": "play_dark",
    "type": "png"
  });
},10148,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 56,
    "height": 56,
    "scales": [2],
    "hash": "f1b57771b9f9c9993be2d2177c055287",
    "name": "pause",
    "type": "png"
  });
},10151,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 56,
    "height": 56,
    "scales": [2],
    "hash": "31fb9a1b4dac86a533cd1c44771f739a",
    "name": "pause_dark",
    "type": "png"
  });
},10154,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 53,
    "height": 24,
    "scales": [1],
    "hash": "463882bf91b390def9c13b2f68b16317",
    "name": "shadow-arrow-white",
    "type": "png"
  });
},10157,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 53,
    "height": 24,
    "scales": [2],
    "hash": "2393242ef77715a8af87bc1b3e23cb8f",
    "name": "shadow-arrow-dark",
    "type": "png"
  });
},10160,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 16,
    "height": 20,
    "scales": [2],
    "hash": "ce4a5cdf9355a7ed536a071965756f0f",
    "name": "player_pre",
    "type": "png"
  });
},10163,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 16,
    "height": 20,
    "scales": [2],
    "hash": "560eb69aaf1e4091161e99cc3010d818",
    "name": "player_pre_dark",
    "type": "png"
  });
},10166,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 16,
    "height": 20,
    "scales": [2],
    "hash": "5eeb29c84a5910e5e798cf0cbbb2ada6",
    "name": "player_next",
    "type": "png"
  });
},10169,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 16,
    "height": 20,
    "scales": [2],
    "hash": "02e1a48cd0b131e2ed30910a85235ee2",
    "name": "player_next_dark",
    "type": "png"
  });
},10172,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 30,
    "height": 30,
    "scales": [2],
    "hash": "1d2963bd9bde95d4205a9091a4632bd7",
    "name": "player_vol_low",
    "type": "png"
  });
},10175,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 20,
    "height": 20,
    "scales": [2],
    "hash": "78a7152d3959f2d8ec382e1dacb28efb",
    "name": "player_vol_low_dark",
    "type": "png"
  });
},10178,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 30,
    "height": 30,
    "scales": [2],
    "hash": "de195ec0ea01169979b4cc3d06c9b055",
    "name": "player_vol_high",
    "type": "png"
  });
},10181,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 20,
    "height": 20,
    "scales": [2],
    "hash": "5c53e4cba6a1c45c9db3ffcc45525dff",
    "name": "player_vol_high_dark",
    "type": "png"
  });
},10184,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 32,
    "height": 32,
    "scales": [2],
    "hash": "0ff64f5920c2a5c63103fa41ab71bc81",
    "name": "player_micro_on",
    "type": "png"
  });
},10187,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 32,
    "height": 32,
    "scales": [2],
    "hash": "a611d41f324724cf78175497112cb6a1",
    "name": "player_micro_on_dark",
    "type": "png"
  });
},10190,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 32,
    "height": 32,
    "scales": [2],
    "hash": "c08f6c3b6f2c3e2e533e3847abfc24fa",
    "name": "player_micro_off",
    "type": "png"
  });
},10193,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 32,
    "height": 32,
    "scales": [2],
    "hash": "39147c9cd636a457d4963f896835f927",
    "name": "player_micro_off_dark",
    "type": "png"
  });
},10196,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = VoiceTip;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var _miot = _$$_REQUIRE(_dependencyMap[4]);

  var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _sizes = _$$_REQUIRE(_dependencyMap[7]);

  var _fonts = _$$_REQUIRE(_dependencyMap[8]);

  var _hooks = _$$_REQUIRE(_dependencyMap[9]);

  var _consts = _$$_REQUIRE(_dependencyMap[10]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var SourceClose = _$$_REQUIRE(_dependencyMap[12]);

  var SourceBubble = _miot.DarkMode.getColorScheme() === 'light' ? _$$_REQUIRE(_dependencyMap[13]) : _$$_REQUIRE(_dependencyMap[14]);

  function VoiceTip() {
    var _useStorage = (0, _hooks.useStorage)(_consts.VoiceTipClickKey),
        _useStorage2 = (0, _slicedToArray2.default)(_useStorage, 2),
        value = _useStorage2[0],
        setValue = _useStorage2[1];

    var disabled = !(0, _hooks.useOnline)();

    function setClicked() {
      setValue("" + (parseInt(value || 0, 10) + 1));
    }

    if (value || !_miot.Device.isOwner) {
      return null;
    }

    return _react.default.createElement(_reactNative.View, {
      style: Styles.container
    }, _react.default.createElement(_ContainerWithShadowAndSeparator.default, {
      containerStyle: Styles.innerContainer
    }, _react.default.createElement(_reactNative.View, {
      style: disabled ? Styles.disabled : null
    }, _react.default.createElement(_reactNative.View, {
      style: Styles.header
    }, _react.default.createElement(_reactNative.Text, {
      style: Styles.title
    }, _i18n.default.voiceTipTitle()), _react.default.createElement(_ImageButton.default, {
      source: SourceClose,
      disabled: disabled,
      onPress: setClicked
    })), _react.default.createElement(_reactNative.View, {
      style: Styles.content
    }, _react.default.createElement(_reactNative.View, {
      style: Styles.item
    }, _react.default.createElement(_reactNative.Image, {
      style: Styles.itemIcon,
      source: SourceBubble
    }), _react.default.createElement(_reactNative.View, {
      style: Styles.textContainer
    }, _react.default.createElement(_reactNative.Text, {
      style: Styles.text
    }, _i18n.default.voiceTip1()))), _react.default.createElement(_reactNative.View, {
      style: Styles.item
    }, _react.default.createElement(_reactNative.Image, {
      style: Styles.itemIcon,
      source: SourceBubble
    }), _react.default.createElement(_reactNative.View, {
      style: Styles.textContainer
    }, _react.default.createElement(_reactNative.Text, {
      style: Styles.text
    }, _i18n.default.voiceTip2()))), _react.default.createElement(_reactNative.View, {
      style: Styles.item
    }, _react.default.createElement(_reactNative.Image, {
      style: Styles.itemIcon,
      source: SourceBubble
    }), _react.default.createElement(_reactNative.View, {
      style: Styles.textContainer
    }, _react.default.createElement(_reactNative.Text, {
      style: Styles.text
    }, _i18n.default.voiceTip3()))), _react.default.createElement(_reactNative.View, {
      style: Styles.item
    }, _react.default.createElement(_reactNative.Image, {
      style: Styles.itemIcon,
      source: SourceBubble
    }), _react.default.createElement(_reactNative.View, {
      style: Styles.textContainer
    }, _react.default.createElement(_reactNative.Text, {
      style: Styles.text
    }, _i18n.default.voiceTip4())))))));
  }

  VoiceTip.propTypes = {};

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginBottom: (0, _sizes.adjustSize)(21),
      marginHorizontal: (0, _sizes.adjustSize)(30)
    },
    innerContainer: {
      paddingTop: (0, _sizes.adjustSize)(6),
      paddingBottom: (0, _sizes.adjustSize)(21)
    },
    disabled: {
      opacity: 0.5
    },
    header: {
      flexDirection: 'row',
      alignItems: 'center',
      paddingLeft: (0, _sizes.adjustSize)(60),
      paddingRight: (0, _sizes.adjustSize)(45)
    },
    title: {
      flex: 1,
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(42),
      fontWeight: 'bold',
      lineHeight: (0, _sizes.adjustSize)(141),
      color: '#000'
    },
    content: {
      flexDirection: 'row',
      flexWrap: 'wrap',
      paddingHorizontal: (0, _sizes.adjustSize)(60)
    },
    item: {
      paddingTop: (0, _sizes.adjustSize)(15),
      marginRight: (0, _sizes.adjustSize)(36),
      marginBottom: (0, _sizes.adjustSize)(27)
    },
    itemIcon: {
      position: 'absolute',
      top: (0, _sizes.adjustSize)(0),
      right: (0, _sizes.adjustSize)(0),
      width: (0, _sizes.adjustSize)(98),
      height: (0, _sizes.adjustSize)(25),
      resizeMode: 'contain'
    },
    textContainer: {
      backgroundColor: _miot.DarkMode.getColorScheme() === 'light' ? 'xm#f7f7f7' : 'xm#262626',
      borderRadius: (0, _sizes.adjustSize)(57),
      paddingHorizontal: (0, _sizes.adjustSize)(48)
    },
    text: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(42),
      fontWeight: 'bold',
      lineHeight: (0, _sizes.adjustSize)(114),
      color: '#333'
    }
  });
},10199,[14305,14347,10297,10033,10074,10791,10200,10776,10782,10136,10007,10097,10314,10202,10205]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 98,
    "height": 25,
    "scales": [2],
    "hash": "329e7aa960fa8bfb4c22fd8859929857",
    "name": "bubble",
    "type": "png"
  });
},10202,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 98,
    "height": 25,
    "scales": [2],
    "hash": "9a3dbb25386f4094afd454598f882d8c",
    "name": "bubble_dark",
    "type": "png"
  });
},10205,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = IRController;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var _MHCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _sizes = _$$_REQUIRE(_dependencyMap[5]);

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[6]);

  var _hooks = _$$_REQUIRE(_dependencyMap[7]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var SourceIR = _$$_REQUIRE(_dependencyMap[9]);

  function IRController(_ref) {
    var navigation = _ref.navigation;
    var support = (0, _hooks.useSupport)(_capabilitiesFormatted.IRController);
    var disabled = !(0, _hooks.useOnline)();

    function onPress() {
      navigation.navigate('IRController');
    }

    if (!support || !_miot.Device.isOwner) {
      return null;
    }

    return _react.default.createElement(_reactNative.View, {
      style: Styles.container
    }, _react.default.createElement(_MHCard.default, {
      icon: SourceIR,
      title: _i18n.default.addIrController(),
      titleStyle: Styles.title,
      subtitle: _i18n.default.addIrControllerTip(),
      onPress: onPress,
      disabled: disabled
    }));
  }

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginHorizontal: (0, _sizes.adjustSize)(30),
      marginBottom: (0, _sizes.adjustSize)(30)
    },
    title: {
      fontWeight: 'bold'
    }
  });
},10208,[14305,10297,10033,10074,10374,10776,10049,10136,10097,10211]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "0820b58b2ac9c153d3ff3daaab5f3903",
    "name": "ir",
    "type": "png"
  });
},10211,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = VoiceFeatures;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var _MHCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _sizes = _$$_REQUIRE(_dependencyMap[5]);

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[6]);

  var _hooks = _$$_REQUIRE(_dependencyMap[7]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var SourceControl = _$$_REQUIRE(_dependencyMap[9]);

  function VoiceFeatures(_ref) {
    var navigation = _ref.navigation;

    if (!_miot.Device.isOwner) {
      return null;
    }

    var supportTalkHistory = (0, _hooks.useSupport)(_capabilitiesFormatted.TalkHistory);
    var disabled = !(0, _hooks.useOnline)();
    var supportControlDevice = (0, _hooks.useSupport)(_capabilitiesFormatted.ControlDevice);
    var supportTrainSchedule = (0, _hooks.useSupport)(_capabilitiesFormatted.TrainSchedule);
    var supportClock = (0, _hooks.useSupport)(_capabilitiesFormatted.Clock);
    var supportStereo = (0, _hooks.useSupport)(_capabilitiesFormatted.Stereo);

    function onPress() {
      navigation.navigate('ControlDevice');
    }

    var length = 0;

    if (supportTalkHistory) {
      length += 1;
    }

    if (supportControlDevice) {
      length += 1;
    }

    if (supportTrainSchedule) {
      length += 1;
    }

    if (supportClock) {
      length += 1;
    }

    if (supportStereo) {
      length += 1;
    }

    if (supportControlDevice && length === 1) {
      return _react.default.createElement(_reactNative.View, {
        style: Styles.container
      }, _react.default.createElement(_MHCard.default, {
        icon: SourceControl,
        title: _i18n.default.controlDevice(),
        titleStyle: Styles.title,
        onPress: onPress,
        disabled: disabled
      }));
    }

    return null;
  }

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginHorizontal: (0, _sizes.adjustSize)(30),
      marginBottom: (0, _sizes.adjustSize)(30)
    },
    title: {
      fontWeight: 'bold'
    }
  });
},10214,[14305,10297,10033,10074,10374,10776,10049,10136,10097,10217]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 192,
    "height": 192,
    "scales": [1],
    "hash": "1bb012fbc5a4a7a2128fe95e58534ac8",
    "name": "control",
    "type": "png"
  });
},10217,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = VoiceFeatures;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _sizes = _$$_REQUIRE(_dependencyMap[5]);

  var _fonts = _$$_REQUIRE(_dependencyMap[6]);

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[7]);

  var _hooks = _$$_REQUIRE(_dependencyMap[8]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _TalkHistory = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _ControlDevice = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _TrainSchedule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Clock = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Stereo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  function VoiceFeatures(_ref) {
    var navigation = _ref.navigation;

    if (!_miot.Device.isOwner) {
      return null;
    }

    var supportTalkHistory = (0, _hooks.useSupport)(_capabilitiesFormatted.TalkHistory);
    var disabled = !(0, _hooks.useOnline)();
    var supportControlDevice = (0, _hooks.useSupport)(_capabilitiesFormatted.ControlDevice);
    var supportTrainSchedule = (0, _hooks.useSupport)(_capabilitiesFormatted.TrainSchedule);
    var supportClock = (0, _hooks.useSupport)(_capabilitiesFormatted.Clock);
    var supportStereo = (0, _hooks.useSupport)(_capabilitiesFormatted.Stereo);
    var length = 0;
    var firstIndex = supportTalkHistory ? 0 : supportControlDevice ? 1 : supportTrainSchedule ? 2 : supportClock ? 3 : supportStereo ? 4 : -1;

    if (supportTalkHistory) {
      length += 1;
    }

    if (supportControlDevice) {
      length += 1;
    }

    if (supportTrainSchedule) {
      length += 1;
    }

    if (supportClock) {
      length += 1;
    }

    if (supportStereo) {
      length += 1;
    }

    var styleContent = length <= 4 && length >= 3 ? Styles.contentNormal : Styles.contentOver;
    var styleItem = length <= 4 && length >= 3 ? Styles.itemNormal : Styles.itemOver;

    if (length <= 1) {
      return null;
    }

    return _react.default.createElement(_reactNative.View, {
      style: Styles.container
    }, _react.default.createElement(_ContainerWithShadowAndSeparator.default, {
      containerStyle: Styles.innerContainer
    }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
      style: [Styles.header, disabled ? Styles.disabled : null]
    }, _react.default.createElement(_reactNative.Text, {
      style: Styles.title
    }, _i18n.default.voiceFeatures())), _react.default.createElement(_reactNative.ScrollView, {
      style: Styles.content,
      contentContainerStyle: [Styles.contentInner, styleContent],
      horizontal: true,
      showsHorizontalScrollIndicator: false
    }, _react.default.createElement(_TalkHistory.default, {
      style: firstIndex === 0 ? Styles.itemNormal : styleItem,
      key: 'TalkHistory',
      navigation: navigation
    }), _react.default.createElement(_ControlDevice.default, {
      style: firstIndex === 1 ? Styles.itemNormal : styleItem,
      key: 'ControlDevice',
      navigation: navigation
    }), _react.default.createElement(_TrainSchedule.default, {
      style: firstIndex === 2 ? Styles.itemNormal : styleItem,
      key: 'TrainSchedule',
      navigation: navigation
    }), _react.default.createElement(_Clock.default, {
      style: firstIndex === 3 ? Styles.itemNormal : styleItem,
      key: 'Clock',
      navigation: navigation
    }), _react.default.createElement(_Stereo.default, {
      style: firstIndex === 4 ? Styles.itemNormal : styleItem,
      key: 'Stereo',
      navigation: navigation
    })))));
  }

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginBottom: (0, _sizes.adjustSize)(21),
      marginHorizontal: (0, _sizes.adjustSize)(30)
    },
    innerContainer: {
      paddingTop: (0, _sizes.adjustSize)(6),
      paddingBottom: (0, _sizes.adjustSize)(66)
    },
    header: {
      flexDirection: 'row',
      alignItems: 'center',
      paddingHorizontal: (0, _sizes.adjustSize)(60)
    },
    disabled: {
      opacity: 0.5
    },
    title: {
      flex: 1,
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(42),
      fontWeight: 'bold',
      lineHeight: (0, _sizes.adjustSize)(141),
      color: '#000'
    },
    content: {
      marginHorizontal: (0, _sizes.adjustSize)(60)
    },
    contentInner: {
      flexDirection: 'row',
      flexWrap: 'wrap',
      paddingTop: (0, _sizes.adjustSize)(36)
    },
    contentNormal: {
      width: '100%',
      justifyContent: 'space-between'
    },
    contentOver: {
      justifyContent: 'flex-start'
    },
    itemNormal: {
      marginLeft: 0
    },
    itemOver: {
      marginLeft: (0, _sizes.adjustSize)(60)
    }
  });
},10220,[14305,10297,10033,10074,10791,10776,10782,10049,10136,10097,10223,10232,10235,10241,10247]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = TalkHistory;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _CircleButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[4]);

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[5]);

  var _hooks = _$$_REQUIRE(_dependencyMap[6]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var SourceTalk = _$$_REQUIRE(_dependencyMap[8]);

  function TalkHistory(_ref) {
    var navigation = _ref.navigation,
        style = _ref.style;
    var support = (0, _hooks.useSupport)(_capabilitiesFormatted.TalkHistory);
    var disabled = !(0, _hooks.useOnline)();

    if (!support) {
      return null;
    }

    function onPress() {
      navigation.navigate('TalkHistory');
    }

    return _react.default.createElement(_CircleButton.default, {
      disabled: disabled,
      containerStyle: style,
      title: _i18n.default.talkHistory(),
      icon: SourceTalk,
      onPress: onPress
    });
  }

  TalkHistory.propTypes = {
    style: _propTypes.default.any
  };
},10223,[14305,10297,10318,10226,10033,10049,10136,10097,10229]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = CircleButton;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _sizes = _$$_REQUIRE(_dependencyMap[4]);

  var _fonts = _$$_REQUIRE(_dependencyMap[5]);

  function CircleButton(props) {
    var containerStyle = props.containerStyle,
        icon = props.icon,
        title = props.title,
        onPress = props.onPress,
        disabled = props.disabled;
    return _react.default.createElement(_reactNative.TouchableOpacity, {
      style: [Styles.container, containerStyle],
      disabled: disabled,
      activeOpacity: 0.8,
      onPress: onPress
    }, _react.default.createElement(_reactNative.Image, {
      style: [Styles.icon, disabled ? Styles.disabled : null],
      source: icon
    }), _react.default.createElement(_reactNative.Text, {
      style: [Styles.title, disabled ? Styles.disabled : null]
    }, title));
  }

  CircleButton.propTypes = {
    containerStyle: _propTypes.default.any,
    icon: _propTypes.default.any,
    title: _propTypes.default.string,
    onPress: _propTypes.default.func,
    disabled: _propTypes.default.bool
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      width: (0, _sizes.adjustSize)(144)
    },
    disabled: {
      opacity: 0.5
    },
    icon: {
      width: (0, _sizes.adjustSize)(144),
      height: (0, _sizes.adjustSize)(144),
      resizeMode: 'contain'
    },
    title: {
      marginTop: (0, _sizes.adjustSize)(39),
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#000',
      letterSpacing: -0.5,
      textAlign: 'center'
    }
  });
},10226,[14305,10297,10033,10318,10776,10782]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 192,
    "height": 192,
    "scales": [1],
    "hash": "0e14e63981311dbd53d20cd3babd4532",
    "name": "talk",
    "type": "png"
  });
},10229,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = ControlDevice;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _CircleButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[4]);

  var _hooks = _$$_REQUIRE(_dependencyMap[5]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var SourceControl = _$$_REQUIRE(_dependencyMap[7]);

  function ControlDevice(_ref) {
    var navigation = _ref.navigation,
        style = _ref.style;
    var support = (0, _hooks.useSupport)(_capabilitiesFormatted.ControlDevice);
    var disabled = !(0, _hooks.useOnline)();

    if (!support) {
      return null;
    }

    function onPress() {
      navigation.navigate('ControlDevice');
    }

    return _react.default.createElement(_CircleButton.default, {
      disabled: disabled,
      containerStyle: style,
      title: _i18n.default.controlDevice(),
      icon: SourceControl,
      onPress: onPress
    });
  }

  ControlDevice.propTypes = {
    style: _propTypes.default.any
  };
},10232,[14305,10297,10318,10226,10049,10136,10097,10217]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = TrainSchedule;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var _CircleButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _apis = _$$_REQUIRE(_dependencyMap[5]);

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[6]);

  var _hooks = _$$_REQUIRE(_dependencyMap[7]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var SourceTraining = _$$_REQUIRE(_dependencyMap[9]);

  var rAiCapability = /^ai_/i;

  function getAiCapbilities(capabilities) {
    if (!capabilities) {
      return '';
    }

    var ret = [];

    for (var key in capabilities) {
      if (capabilities.hasOwnProperty(key) && capabilities[key] && rAiCapability.test(key)) {
        ret.push(key);
      }
    }

    return ret.join(',');
  }

  function TrainSchedule(_ref) {
    var style = _ref.style;
    var support = (0, _hooks.useSupport)(_capabilitiesFormatted.TrainSchedule);
    var disabled = !(0, _hooks.useOnline)();

    function onPress() {
      (0, _apis.getDeviceInfo)(_miot.Device.deviceID).then(function (_ref2) {
        var deviceID = _ref2.deviceID,
            miotDID = _ref2.miotDID,
            appId = _ref2.appId,
            innerCapabilities = _ref2.innerCapabilities;

        _miot.Host.ui.openXiaoAiLearnPage(deviceID, miotDID, "657889654475442824156237318", appId, "", {
          ai_cap: getAiCapbilities(innerCapabilities),
          mico_device_id: deviceID
        });
      }).catch(function (e) {});
    }

    if (!support) {
      return null;
    }

    return _react.default.createElement(_CircleButton.default, {
      disabled: disabled,
      containerStyle: style,
      title: _i18n.default.trainSchedule(),
      icon: SourceTraining,
      onPress: onPress
    });
  }

  TrainSchedule.propTypes = {
    style: _propTypes.default.any
  };
},10235,[14305,10297,10318,10074,10226,10043,10049,10136,10097,10238]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 192,
    "height": 192,
    "scales": [1],
    "hash": "e92f329e2d6bb1f0bc101a66b5cf1b9b",
    "name": "training",
    "type": "png"
  });
},10238,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Clock;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _CircleButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[4]);

  var _hooks = _$$_REQUIRE(_dependencyMap[5]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var SourceClock = _$$_REQUIRE(_dependencyMap[7]);

  function Clock(_ref) {
    var navigation = _ref.navigation,
        style = _ref.style;
    var support = (0, _hooks.useSupport)(_capabilitiesFormatted.Clock);
    var disabled = !(0, _hooks.useOnline)();

    function onPress() {
      navigation.navigate('AlarmClock');
    }

    if (!support) {
      return null;
    }

    return _react.default.createElement(_CircleButton.default, {
      disabled: disabled,
      containerStyle: style,
      title: _i18n.default.clock(),
      icon: SourceClock,
      onPress: onPress
    });
  }

  Clock.propTypes = {
    style: _propTypes.default.any
  };
},10241,[14305,10297,10318,10226,10049,10136,10097,10244]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 192,
    "height": 192,
    "scales": [1],
    "hash": "8150f8e4b6ad217f3e78d80676c445f6",
    "name": "clock",
    "type": "png"
  });
},10244,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Stereo;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var _CircleButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[5]);

  var _hooks = _$$_REQUIRE(_dependencyMap[6]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var SourceStereo = _$$_REQUIRE(_dependencyMap[8]);

  function Stereo(_ref) {
    var style = _ref.style;
    var support = (0, _hooks.useSupport)(_capabilitiesFormatted.Stereo);
    var disabled = !(0, _hooks.useOnline)();

    function onPress() {
      _miot.Host.ui.openStereoSettingPage();
    }

    if (!support) {
      return null;
    }

    return _react.default.createElement(_CircleButton.default, {
      disabled: disabled,
      containerStyle: style,
      title: _i18n.default.stereo(),
      icon: SourceStereo,
      onPress: onPress
    });
  }

  Stereo.propTypes = {
    style: _propTypes.default.any
  };
},10247,[14305,10297,10318,10074,10226,10049,10136,10097,10250]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 192,
    "height": 192,
    "scales": [1],
    "hash": "361e91e92cbaca63196789823a293e4f",
    "name": "stereo",
    "type": "png"
  });
},10250,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = MoreFeatures;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _sizes = _$$_REQUIRE(_dependencyMap[5]);

  var _fonts = _$$_REQUIRE(_dependencyMap[6]);

  var _Strings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _MHCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _hooks = _$$_REQUIRE(_dependencyMap[9]);

  var _BTSetting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _NearbyWakeup = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _NightMode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _DTS = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _VoicePrinter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _NewVoicePrinter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _ChildMode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _Earthquake = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _Address = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _Timbre = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _AuxIn = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _DLNA = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _LightEffect = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var _ContinuousTalk = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  function MoreFeatures(props) {
    var navigation = props.navigation;
    var disabled = !(0, _hooks.useOnline)();

    if (!_miot.Device.isOwner) {
      return null;
    }

    return _react.default.createElement(_reactNative.View, {
      style: Styles.container
    }, _react.default.createElement(_ContainerWithShadowAndSeparator.default, {
      containerStyle: Styles.innerContainer
    }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
      style: [Styles.header, disabled ? Styles.disabled : null]
    }, _react.default.createElement(_reactNative.Text, {
      style: Styles.title
    }, _Strings.default.more)), _react.default.createElement(_reactNative.View, {
      style: Styles.content,
      horizontal: true
    }, _react.default.createElement(_NearbyWakeup.default, {
      navigation: navigation
    }), _react.default.createElement(_NightMode.default, {
      navigation: navigation
    }), _react.default.createElement(_DTS.default, {
      navigation: navigation
    }), _react.default.createElement(_ChildMode.default, {
      navigation: navigation
    }), _react.default.createElement(_Earthquake.default, {
      navigation: navigation
    }), _react.default.createElement(_Address.default, {
      navigation: navigation
    }), _react.default.createElement(_Timbre.default, {
      navigation: navigation
    }), _react.default.createElement(_AuxIn.default, {
      navigation: navigation
    }), _react.default.createElement(_DLNA.default, {
      navigation: navigation
    }), _react.default.createElement(_LightEffect.default, {
      navigation: navigation
    }), _react.default.createElement(_ContinuousTalk.default, {
      navigation: navigation
    })))));
  }

  MoreFeatures.propTypes = {};

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginBottom: (0, _sizes.adjustSize)(20),
      marginHorizontal: (0, _sizes.adjustSize)(30)
    },
    innerContainer: {
      paddingTop: (0, _sizes.adjustSize)(6),
      paddingBottom: (0, _sizes.adjustSize)(21)
    },
    header: {
      flexDirection: 'row',
      alignItems: 'center',
      marginHorizontal: (0, _sizes.adjustSize)(60),
      borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,
      borderBottomColor: 'rgba(0, 0, 0, 0.05)'
    },
    disabled: {
      opacity: 0.5
    },
    title: {
      flex: 1,
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(42),
      fontWeight: 'bold',
      lineHeight: (0, _sizes.adjustSize)(141),
      color: '#000'
    },
    content: {
      flexDirection: 'row',
      flexWrap: 'wrap',
      paddingTop: (0, _sizes.adjustSize)(36)
    },
    rightText: {
      color: '#7f7f7f'
    }
  });
},10253,[14305,10297,10033,10074,10791,10776,10782,10320,10374,10136,10256,10262,10268,10274,10280,10286,10292,10295,10301,10307,10313,10319,10325,10331]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = BTSetting;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _MHCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[3]);

  var _hooks = _$$_REQUIRE(_dependencyMap[4]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var SourceBt = _$$_REQUIRE(_dependencyMap[6]);

  function BTSetting(_ref) {
    var navigation = _ref.navigation;
    var support = (0, _hooks.useSupport)(_capabilitiesFormatted.BTSetting);
    var disabled = !(0, _hooks.useOnline)();

    function onPress() {
      navigation.navigate('BTSetting');
    }

    if (!support) {
      return null;
    }

    return _react.default.createElement(_MHCard.default, {
      disabled: disabled,
      title: _i18n.default.btSetting(),
      icon: SourceBt,
      onPress: onPress
    });
  }
},10256,[14305,10297,10374,10049,10136,10097,10259]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "05374d78b22d988160bb1236aa848d82",
    "name": "bluetooth",
    "type": "png"
  });
},10259,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = NearbyWakeup;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _MHCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[3]);

  var _hooks = _$$_REQUIRE(_dependencyMap[4]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var SourceNearbyWakeup = _$$_REQUIRE(_dependencyMap[6]);

  function NearbyWakeup(_ref) {
    var navigation = _ref.navigation;
    var support = (0, _hooks.useSupport)(_capabilitiesFormatted.NearbyWakeup);
    var disabled = !(0, _hooks.useOnline)();

    function onPress() {
      navigation.navigate('NearbyWakeup');
    }

    if (!support) {
      return null;
    }

    return _react.default.createElement(_MHCard.default, {
      disabled: disabled,
      title: _i18n.default.nearbyWakeup(),
      icon: SourceNearbyWakeup,
      onPress: onPress
    });
  }
},10262,[14305,10297,10374,10049,10136,10097,10265]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "e3c4731b9b219daf3ba13395f17a0e85",
    "name": "nearbywakeup",
    "type": "png"
  });
},10265,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = NearbyWakeup;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _MHCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[3]);

  var _hooks = _$$_REQUIRE(_dependencyMap[4]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var SourceNight = _$$_REQUIRE(_dependencyMap[6]);

  function NearbyWakeup(_ref) {
    var navigation = _ref.navigation;
    var support = (0, _hooks.useSupport)(_capabilitiesFormatted.NightMode);
    var disabled = !(0, _hooks.useOnline)();

    function onPress() {
      navigation.navigate('NightMode');
    }

    if (!support) {
      return null;
    }

    return _react.default.createElement(_MHCard.default, {
      disabled: disabled,
      title: _i18n.default.nightMode(),
      icon: SourceNight,
      onPress: onPress
    });
  }
},10268,[14305,10297,10374,10049,10136,10097,10271]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "2dd4a8875340efee2bd391ec2578af33",
    "name": "night",
    "type": "png"
  });
},10271,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = NearbyWakeup;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _MHCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[3]);

  var _hooks = _$$_REQUIRE(_dependencyMap[4]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var SourceTalk = _$$_REQUIRE(_dependencyMap[6]);

  function NearbyWakeup(_ref) {
    var navigation = _ref.navigation;
    var support = (0, _hooks.useSupport)(_capabilitiesFormatted.DTS);
    var disabled = !(0, _hooks.useOnline)();

    function onPress() {
      navigation.navigate('DTS');
    }

    if (!support) {
      return null;
    }

    return _react.default.createElement(_MHCard.default, {
      disabled: disabled,
      title: _i18n.default.dtsSetting(),
      icon: SourceTalk,
      onPress: onPress
    });
  }
},10274,[14305,10297,10374,10049,10136,10097,10277]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "abcef497843b714b5c4d04863eeb3f08",
    "name": "dts",
    "type": "png"
  });
},10277,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = NearbyWakeup;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _MHCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[3]);

  var _hooks = _$$_REQUIRE(_dependencyMap[4]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var SourceVoice = _$$_REQUIRE(_dependencyMap[6]);

  function NearbyWakeup(_ref) {
    var navigation = _ref.navigation;
    var support = (0, _hooks.useSupport)(_capabilitiesFormatted.VoicePrinter);
    var disabled = !(0, _hooks.useOnline)();

    function onPress() {
      navigation.navigate('VoicePrinter');
    }

    if (!support) {
      return null;
    }

    return _react.default.createElement(_MHCard.default, {
      disabled: disabled,
      title: _i18n.default.voicePrinterSetting(),
      icon: SourceVoice,
      onPress: onPress
    });
  }
},10280,[14305,10297,10374,10049,10136,10097,10283]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "3929f786f5f95e08ae0600cf6fbb49b2",
    "name": "voice-printer",
    "type": "png"
  });
},10283,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = NearbyWakeup;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  var _reactNativeWebview = _$$_REQUIRE(_dependencyMap[3]);

  var _MHCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[5]);

  var _hooks = _$$_REQUIRE(_dependencyMap[6]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var SourceChild = _$$_REQUIRE(_dependencyMap[8]);

  function NearbyWakeup(_ref) {
    var _this = this;

    var navigation = _ref.navigation;
    var support = (0, _hooks.useSupport)(_capabilitiesFormatted.ChildMode);
    var disabled = !(0, _hooks.useOnline)();

    if (!support) {
      return null;
    }

    return _react.default.createElement(_reactNative.View, {
      style: styles.container
    }, _react.default.createElement(_reactNative.TouchableOpacity, {
      style: {
        backgroundColor: 'skyblue',
        height: 40
      },
      onPress: function onPress() {
        _this.webview.injectJavaScript("receiveMessage(\"RN\u5411H5\u53D1\u9001\u6D88\u606F\");true;");
      }
    }, _react.default.createElement(_reactNative.Text, null, "\u70B9\u51FB")), _react.default.createElement(_reactNativeWebview.WebView, {
      style: {
        flex: 1,
        backgroundColor: "red",
        width: '100%',
        height: '100%'
      },
      source: 'http://i.ai.mi.com/h5/ai-voice-pay-fe/#',
      injectedJavaScript: " window.receiveMessage = (msg) => { alert(msg) } window.ReactNativeWebView.postMessage('H5\u5411RN\u65B9\u5F0F\u6570\u636E') ",
      onMessage: function onMessage(e) {}
    }));
  }

  var styles = _reactNative.StyleSheet.create({
    container: {
      marginTop: 20,
      flex: 1
    }
  });
},10286,[14305,10297,10033,14731,10374,10049,10136,10097,10289]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "bcc3b56d13767c31a527bf0548591638",
    "name": "child",
    "type": "png"
  });
},10289,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = NearbyWakeup;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _MHCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[3]);

  var _hooks = _$$_REQUIRE(_dependencyMap[4]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var SourceChild = _$$_REQUIRE(_dependencyMap[6]);

  function NearbyWakeup(_ref) {
    var navigation = _ref.navigation;
    var support = (0, _hooks.useSupport)(_capabilitiesFormatted.ChildMode);
    var disabled = !(0, _hooks.useOnline)();

    function onPress() {
      navigation.navigate('ChildMode');
    }

    if (!support) {
      return null;
    }

    return _react.default.createElement(_MHCard.default, {
      disabled: disabled,
      title: _i18n.default.childMode(),
      icon: SourceChild,
      onPress: onPress
    });
  }
},10292,[14305,10297,10374,10049,10136,10097,10289]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = NearbyWakeup;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _MHCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[3]);

  var _hooks = _$$_REQUIRE(_dependencyMap[4]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var SourceEarthquake = _$$_REQUIRE(_dependencyMap[6]);

  function NearbyWakeup(_ref) {
    var navigation = _ref.navigation;
    var support = (0, _hooks.useSupport)(_capabilitiesFormatted.Earthquake);
    var disabled = !(0, _hooks.useOnline)();

    function onPress() {
      navigation.navigate('Earthquake');
    }

    if (!support) {
      return null;
    }

    return _react.default.createElement(_MHCard.default, {
      disabled: disabled,
      title: _i18n.default.earthquakeSetting(),
      icon: SourceEarthquake,
      onPress: onPress
    });
  }
},10295,[14305,10297,10374,10049,10136,10097,10298]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "0526b7be341b70eccaba49b84389583b",
    "name": "earthquake",
    "type": "png"
  });
},10298,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Address;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _MHCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _hooks = _$$_REQUIRE(_dependencyMap[3]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var SourceAddress = _$$_REQUIRE(_dependencyMap[5]);

  function Address(_ref) {
    var navigation = _ref.navigation;
    var disabled = !(0, _hooks.useOnline)();

    function onPress() {
      navigation.navigate('Address');
    }

    return _react.default.createElement(_MHCard.default, {
      disabled: disabled,
      title: _i18n.default.addressSetting(),
      icon: SourceAddress,
      onPress: onPress
    });
  }
},10301,[14305,10297,10374,10136,10097,10304]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "7d15ce649eddf649bf8ea448e75d4d62",
    "name": "address",
    "type": "png"
  });
},10304,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = NearbyWakeup;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _MHCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[3]);

  var _hooks = _$$_REQUIRE(_dependencyMap[4]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var SourceTimbre = _$$_REQUIRE(_dependencyMap[6]);

  function NearbyWakeup(_ref) {
    var navigation = _ref.navigation;
    var support = (0, _hooks.useSupport)(_capabilitiesFormatted.Timbre);
    var supportV2 = (0, _hooks.useSupport)(_capabilitiesFormatted.TimbreV2);
    var disabled = !(0, _hooks.useOnline)();

    function onPress() {
      navigation.navigate('MicoWebView');
    }

    function onPressV2() {
      navigation.navigate('TimbreV2');
    }

    if (!support) {
      return null;
    }

    return _react.default.createElement(_MHCard.default, {
      disabled: disabled,
      title: _i18n.default.timbreSetting(),
      icon: SourceTimbre,
      onPress: supportV2 ? onPressV2 : onPress
    });
  }
},10307,[14305,10297,10374,10049,10136,10097,10310]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "15a811b4dfb9353680431a95b7b2f8f9",
    "name": "sound",
    "type": "png"
  });
},10310,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = AuxIn;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _MHCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[3]);

  var _hooks = _$$_REQUIRE(_dependencyMap[4]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var SourceTalk = _$$_REQUIRE(_dependencyMap[6]);

  function AuxIn(_ref) {
    var navigation = _ref.navigation;
    var support = (0, _hooks.useSupport)(_capabilitiesFormatted.AuxIn);
    var disabled = !(0, _hooks.useOnline)();

    function onPress() {
      navigation.navigate('AuxIn');
    }

    if (!support) {
      return null;
    }

    return _react.default.createElement(_MHCard.default, {
      disabled: disabled,
      title: _i18n.default.auxIn(),
      icon: SourceTalk,
      onPress: onPress
    });
  }
},10313,[14305,10297,10374,10049,10136,10097,10316]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "5472d38a6505da440f809ffba94cb71d",
    "name": "aux",
    "type": "png"
  });
},10316,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = NearbyWakeup;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _MHCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[3]);

  var _hooks = _$$_REQUIRE(_dependencyMap[4]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var SourceTalk = _$$_REQUIRE(_dependencyMap[6]);

  function NearbyWakeup(_ref) {
    var navigation = _ref.navigation;
    var support = (0, _hooks.useSupport)(_capabilitiesFormatted.DLNA);
    var disabled = !(0, _hooks.useOnline)();

    function onPress() {
      navigation.navigate('DLNA');
    }

    if (!support) {
      return null;
    }

    return _react.default.createElement(_MHCard.default, {
      disabled: disabled,
      title: _i18n.default.dlnaMusic(),
      icon: SourceTalk,
      onPress: onPress
    });
  }
},10319,[14305,10297,10374,10049,10136,10097,10322]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "186f8e99f24ece76ba6352e3a326dca2",
    "name": "dlna",
    "type": "png"
  });
},10322,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = NearbyWakeup;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _MHCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[3]);

  var _hooks = _$$_REQUIRE(_dependencyMap[4]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var SourceTalk = _$$_REQUIRE(_dependencyMap[6]);

  function NearbyWakeup(_ref) {
    var navigation = _ref.navigation;
    var support = (0, _hooks.useSupport)(_capabilitiesFormatted.LightEffect);
    var disabled = !(0, _hooks.useOnline)();

    function onPress() {
      navigation.navigate('LightEffect');
    }

    if (!support) {
      return null;
    }

    return _react.default.createElement(_MHCard.default, {
      disabled: disabled,
      title: _i18n.default.lightEffect(),
      icon: SourceTalk,
      onPress: onPress
    });
  }
},10325,[14305,10297,10374,10049,10136,10097,10328]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "65aeae10d6733a86b80cceec4cb4786c",
    "name": "light-effect",
    "type": "png"
  });
},10328,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = NearbyWakeup;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _MHCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[3]);

  var _hooks = _$$_REQUIRE(_dependencyMap[4]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var SourceTalk = _$$_REQUIRE(_dependencyMap[6]);

  function NearbyWakeup(_ref) {
    var navigation = _ref.navigation;
    var support = (0, _hooks.useSupport)(_capabilitiesFormatted.ContinuousTalk);
    var disabled = !(0, _hooks.useOnline)();

    function onPress() {
      navigation.navigate('ContinuousTalk');
    }

    if (!support) {
      return null;
    }

    return _react.default.createElement(_MHCard.default, {
      disabled: disabled,
      title: _i18n.default.continuousTalk(),
      icon: SourceTalk,
      onPress: onPress
    });
  }
},10331,[14305,10297,10374,10049,10136,10097,10334]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "cb020cd44589cc1fd3bd2c962c3a45dd",
    "name": "continuous-talk",
    "type": "png"
  });
},10334,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.isIOS = exports.isAndroid = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _miot = _$$_REQUIRE(_dependencyMap[8]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _MJNative$MijiaAndroi = {
    MJNative: {
      log: function log() {}
    },
    MijiaAndroidService: {}
  },
      MJNative = _MJNative$MijiaAndroi.MJNative,
      MijiaAndroidService = _MJNative$MijiaAndroi.MijiaAndroidService;
  var isAndroid = _reactNative.Platform.OS === 'android';
  exports.isAndroid = isAndroid;
  var isIOS = _reactNative.Platform.OS === 'ios';
  exports.isIOS = isIOS;

  var JumpToApp = function (_Component) {
    (0, _inherits2.default)(JumpToApp, _Component);

    function JumpToApp() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, JumpToApp);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(JumpToApp)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onPress = function () {
        var uid = '';
        uid = _miot.Service.account.ID;

        _reactNative.Linking.canOpenURL("mico://homepage/main?uid=" + uid).then(function (isSupport) {
          if (isSupport) {
            _reactNative.Linking.openURL("mico://homepage/main?uid=" + uid);
          } else {
            _reactNative.Linking.openURL('http://mina.mi.com/download');
          }
        }).catch(function (e) {
          _reactNative.Linking.canOpenURL('http://mina.mi.com/download');
        });
      };

      return _this;
    }

    (0, _createClass2.default)(JumpToApp, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: Styles.container,
          activeOpacity: 0.8,
          onPress: this.onPress
        }, _react.default.createElement(_ContainerWithShadowAndSeparator.default, {
          separatorStyle: {
            width: 0
          },
          containerStyle: Styles.innerContainer
        }, _react.default.createElement(_reactNative.Image, {
          style: Styles.icon_app,
          source: _$$_REQUIRE(_dependencyMap[13])
        }), _react.default.createElement(_reactNative.View, {
          style: Styles.detail
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, _i18n.default.jumpToAppTitle()), _react.default.createElement(_reactNative.Text, {
          style: Styles.contant
        }, _i18n.default.jumpToAppContant())), _react.default.createElement(_reactNative.Image, {
          style: Styles.icon_right,
          source: _$$_REQUIRE(_dependencyMap[14])
        })));
      }
    }]);
    return JumpToApp;
  }(_react.Component);

  exports.default = JumpToApp;

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginBottom: (0, _sizes.adjustSize)(20),
      marginHorizontal: (0, _sizes.adjustSize)(30)
    },
    innerContainer: {
      flexDirection: 'row',
      paddingTop: (0, _sizes.adjustSize)(40),
      paddingLeft: (0, _sizes.adjustSize)(40),
      paddingBottom: (0, _sizes.adjustSize)(40),
      alignItems: 'center',
      justifyContent: 'space-between'
    },
    icon_app: {
      marginRight: (0, _sizes.adjustSize)(10),
      marginLeft: (0, _sizes.adjustSize)(30)
    },
    detail: {
      flexDirection: 'column'
    },
    title: {
      fontSize: 15,
      color: '#000000',
      marginBottom: (0, _sizes.adjustSize)(5)
    },
    contant: {
      color: '#999999'
    }
  });
},10337,[14308,14305,14320,14323,14371,14377,14386,10297,10074,10033,10791,10776,10097,10340,10311]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 38,
    "height": 38,
    "scales": [1],
    "hash": "ab802656815e659154772d041f0597fa",
    "name": "icon_app",
    "type": "png"
  });
},10340,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _miot = _$$_REQUIRE(_dependencyMap[8]);

  var _MessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Strings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _consts = _$$_REQUIRE(_dependencyMap[12]);

  var _supports = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[14]);

  var _apis = _$$_REQUIRE(_dependencyMap[15]);

  function getStereoDevices() {
    return new Promise(function (resolve, reject) {
      (0, _apis.getDeviceList)().then(function (list) {
        if (!list || !list.length) {
          reject();
          return;
        }

        (0, _apis.getDeviceInfo)().then(function (_ref) {
          var deviceID = _ref.deviceID,
              hardware = _ref.hardware;
          (0, _apis.getStereo)().then(function (res) {
            if (!res || !res.data || !res.data.pairedGroupInfo || !res.data.pairedGroupInfo.stereoInfo || res.data.pairedGroupInfo.stereoInfo.length) {
              reject();
              return;
            }

            var stereoInfo = res && res.data && res.data.lanGroupInfo && res.data.lanGroupInfo.stereoInfo ? res.data.lanGroupInfo.stereoInfo : [];
            var devicePairs = stereoInfo.find(function (_ref2) {
              var devices = _ref2.devices;
              var length = devices.length >= 2;
              var sameHardwareDevice = devices.find(function (_ref3) {
                var deviceId = _ref3.deviceId;
                var targetDevice = list.find(function (_ref4) {
                  var did = _ref4.deviceID;
                  return did === deviceId;
                });
                return deviceID !== deviceId && targetDevice && targetDevice.hardware === hardware;
              });
              return length && sameHardwareDevice ? true : false;
            });

            if (devicePairs) {
              resolve(devicePairs);
              return;
            }

            reject();
          }).catch(reject);
        }).catch(reject);
      }).catch(reject);
    });
  }

  var StereoTip = function (_Component) {
    (0, _inherits2.default)(StereoTip, _Component);

    function StereoTip() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, StereoTip);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(StereoTip)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        show: false
      };

      _this.cancel = function (cb) {
        _miot.Host.storage.set(_consts.StereoTipKey, true);

        _this.setState({
          show: false
        }, function () {
          if (cb instanceof Function) {
            cb();
          }
        });
      };

      _this.goStereo = function () {
        _this.cancel(function () {
          _miot.Host.ui.openStereoSettingPage();
        });
      };

      _this.check = function () {
        (0, _supports.default)(_capabilitiesFormatted.Stereo).then(function () {
          _miot.Host.storage.get(_consts.StereoTipKey).then(function (res) {
            if (res) {
              return;
            }

            getStereoDevices().then(function (res) {
              setTimeout(function () {
                _this.setState({
                  show: true
                });
              }, 1000);
            }).catch(function (e) {});
          }).catch(function (e) {});
        }).catch(function () {});
      };

      return _this;
    }

    (0, _createClass2.default)(StereoTip, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.check();
      }
    }, {
      key: "render",
      value: function render() {
        var show = this.state.show;
        return _react.default.createElement(_MessageDialog.default, {
          visible: show,
          message: _i18n.default.stereoTip(),
          buttons: [{
            text: _Strings.default.cancel,
            callback: this.cancel
          }, {
            text: _i18n.default.goCreate(),
            callback: this.goStereo
          }],
          onDismiss: this.cancel
        });
      }
    }]);
    return StereoTip;
  }(_react.Component);

  exports.default = StereoTip;
},10343,[14308,14305,14320,14323,14371,14377,14386,10297,10074,10743,10320,10097,10007,10139,10049,10043]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _miot = _$$_REQUIRE(_dependencyMap[12]);

  var _resources = _$$_REQUIRE(_dependencyMap[13]);

  var _CommonSetting = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[14]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[15]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[18]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _supports = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[21]);

  var _apis = _$$_REQUIRE(_dependencyMap[22]);

  var _protocolManager = _$$_REQUIRE(_dependencyMap[23]);

  var language = _miot.Host.locale.language.toLowerCase();

  var locale = {
    zh: 'zh_cn',
    zh_tw: 'zh_tw',
    zh_hk: 'zh_tw',
    en: 'en_us'
  }[language] || 'en_us';
  var hardware = '';
  var defaultUserManual = 'https://cdn.alsgp0.fds.api.mi-img.com/help/20200529.1/html/ch/l09a.html';

  function getUserManual() {
    return new Promise(function (resolve, reject) {
      if (locale && hardware) {
        resolve("https://mina.mi.com/help/device_help?locale=" + locale + "&hardware=" + hardware);
        return;
      }

      Promise.all([(0, _apis.getDeviceInfo)()]).then(function (_ref) {
        var _ref2 = (0, _slicedToArray2.default)(_ref, 1),
            info = _ref2[0];

        hardware = (info.hardware || '').toLowerCase();

        if (hardware.indexOf('s12') === 0) {
          hardware = 's12';
        }

        resolve("https://mina.mi.com/help/device_help?locale=" + locale + "&hardware=" + hardware);
      }).catch(reject);
    });
  }

  var Setting = function (_Component) {
    (0, _inherits2.default)(Setting, _Component);

    function Setting() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Setting);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Setting)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        protocol: null,
        features: [{
          title: _i18n.default.userManual(),
          onPress: function onPress() {
            _miot.Host.ui.openWebPage(defaultUserManual);
          }
        }],
        settingOptions: [_CommonSetting.AllOptions.NAME, _CommonSetting.AllOptions.LOCATION, _CommonSetting.AllOptions.SHARE, _CommonSetting.AllOptions.IFTTT, _CommonSetting.AllOptions.MORE, _CommonSetting.AllOptions.HELP, _CommonSetting.AllOptions.LEGAL_INFO],
        secondCustomOptions: []
      };

      _this.updateUserManual = function (link) {
        _this.setState(function (state) {
          return {
            features: state.features.map(function (feature) {
              return feature && feature.title === _i18n.default.userManual() ? (0, _objectSpread2.default)({}, feature, {
                onPress: function onPress() {
                  _miot.Host.ui.openWebPage(link);
                }
              }) : feature;
            })
          };
        });
      };

      return _this;
    }

    (0, _createClass2.default)(Setting, [{
      key: "getFeatureDoms",
      value: function getFeatureDoms() {
        var features = this.state.features;
        return features.map(function (feature) {
          return _react.default.createElement(_react.Fragment, {
            key: feature.title
          }, _react.default.createElement(_ListItem.ListItem, (0, _extends2.default)({}, feature, {
            showSeparator: false
          })));
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        (0, _supports.default)(_capabilitiesFormatted.BtGateway).then(function () {
          _this2.setState(function (state) {
            return {
              settingOptions: [].concat((0, _toConsumableArray2.default)(state.settingOptions), [_CommonSetting.AllOptions.BTGATEWAY])
            };
          });
        }).catch(function () {});
        (0, _supports.default)(_capabilitiesFormatted.SecuritySetting).then(function () {
          _this2.setState(function (state) {
            return {
              secondCustomOptions: [].concat((0, _toConsumableArray2.default)(state.secondCustomOptions), [{
                weight: 10,
                title: _i18n.default.securitySetting(),
                onPress: function onPress() {
                  _this2.props.navigation.navigate('SecuritySetting');
                }
              }])
            };
          });
        }).catch(function () {});
        getUserManual().then(function (link) {
          _this2.updateUserManual(link);
        }).catch(function () {});
        (0, _protocolManager.getProtocol)().then(function (protocol) {
          _this2.setState({
            protocol: protocol
          });
        }).catch(function () {
          _this2.setState({
            protocol: {}
          });
        });
      }
    }, {
      key: "render",
      value: function render() {
        var featureDoms = this.getFeatureDoms();
        var _this$state = this.state,
            settingOptions = _this$state.settingOptions,
            protocol = _this$state.protocol,
            secondCustomOptions = _this$state.secondCustomOptions;

        if (!protocol) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.ScrollView, {
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_reactNative.View, {
          style: [Styles.blank, {
            borderTopWidth: 0
          }]
        }), featureDoms.length ? _react.default.createElement(_react.Fragment, null, _react.default.createElement(_reactNative.View, {
          style: Styles.featureSetting
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, _resources.strings.featureSetting)), featureDoms), _react.default.createElement(_reactNative.View, {
          style: Styles.blank
        })) : null, _react.default.createElement(_CommonSetting.default, {
          navigation: this.props.navigation,
          firstOptions: settingOptions,
          secondOptions: settingOptions,
          extraOptions: {
            option: protocol,
            showUpgrade: false,
            upgradePageKey: 'FirmwareUpgrade'
          },
          secondCustomOptions: secondCustomOptions
        })));
      }
    }]);
    return Setting;
  }(_react.Component);

  exports.default = Setting;

  Setting.navigationOptions = function (_ref3) {
    var navigation = _ref3.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        title: _resources.strings.setting,
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: _resources.Styles.common.backgroundColor,
      flex: 1
    },
    featureSetting: {
      backgroundColor: '#fff'
    },
    blank: {
      height: 8,
      backgroundColor: _resources.Styles.common.backgroundColor
    },
    titleContainer: {
      height: 32,
      backgroundColor: '#fff',
      justifyContent: 'center',
      paddingLeft: _resources.Styles.common.padding
    },
    title: {
      fontSize: 11,
      color: 'rgba(0,0,0,0.5)',
      lineHeight: 14
    }
  });
},10346,[14308,14305,14359,14344,14314,14320,14323,14371,14377,14386,14347,10297,10074,10077,10326,10338,10332,10719,10033,10097,10139,10049,10043,10016]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fonts = _$$_REQUIRE(_dependencyMap[13]);

  var _Strings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Images = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _miot = _$$_REQUIRE(_dependencyMap[16]);

  var _ui = _$$_REQUIRE(_dependencyMap[17]);

  var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var SourceOtaLight = _$$_REQUIRE(_dependencyMap[19]);

  var SourceOtaFailed = _$$_REQUIRE(_dependencyMap[20]);

  var SourceOtaSuccess = _$$_REQUIRE(_dependencyMap[21]);

  var SourceOtaProgress = _$$_REQUIRE(_dependencyMap[22]);

  var toast = function toast(msg) {
    return _reactNativeRootToast.default.show(msg, {
      position: 200,
      duration: 2000
    });
  };

  var retryCount = 0;
  var updateTimer;
  var MAX_RETRY_COUNT = 500;
  ;
  var CHECK_RESULT_TIMER_INTERVAL = 2000;

  var FirmwareUpgrade = function (_Component) {
    (0, _inherits2.default)(FirmwareUpgrade, _Component);

    function FirmwareUpgrade(props) {
      var _this;

      (0, _classCallCheck2.default)(this, FirmwareUpgrade);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(FirmwareUpgrade).call(this, props));

      _this.startAnimation = function (repeat) {
        if (!repeat) return;

        _this.spinValue.setValue(0);

        _reactNative.Animated.timing(_this.spinValue, {
          toValue: 1,
          duration: 2500,
          easing: _reactNative.Easing.linear
        }).start(function () {
          _this.startAnimation(true);
        });
      };

      _this.stopAnimation = function () {
        _reactNative.Animated.timing(_this.spinValue).stop();
      };

      _this.checkVersion = function () {
        return new Promise(function _callee2(resolve, reject) {
          var _this$state, updating, ota_status, isLatest;

          return _regenerator.default.async(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  if (!(retryCount >= MAX_RETRY_COUNT)) {
                    _context2.next = 2;
                    break;
                  }

                  return _context2.abrupt("return", reject(_Strings.default.upgradeTimeout));

                case 2:
                  _context2.prev = 2;
                  _context2.next = 5;
                  return _regenerator.default.awrap(_this.getUpdateInfo());

                case 5:
                  _this$state = _this.state, updating = _this$state.updating, ota_status = _this$state.ota_status, isLatest = _this$state.isLatest;

                  if (!(ota_status === 'failed')) {
                    _context2.next = 10;
                    break;
                  }

                  return _context2.abrupt("return", reject(ota_status));

                case 10:
                  if (!(!updating && ota_status === 'idle')) {
                    _context2.next = 14;
                    break;
                  }

                  return _context2.abrupt("return", resolve(isLatest ? '升级成功' : '状态check done'));

                case 14:
                  retryCount++;
                  updateTimer = setTimeout(function _callee() {
                    return _regenerator.default.async(function _callee$(_context) {
                      while (1) {
                        switch (_context.prev = _context.next) {
                          case 0:
                            _context.prev = 0;
                            _context.t0 = resolve;
                            _context.next = 4;
                            return _regenerator.default.awrap(_this.checkVersion());

                          case 4:
                            _context.t1 = _context.sent;
                            return _context.abrupt("return", (0, _context.t0)(_context.t1));

                          case 8:
                            _context.prev = 8;
                            _context.t2 = _context["catch"](0);
                            return _context.abrupt("return", reject(_context.t2));

                          case 11:
                          case "end":
                            return _context.stop();
                        }
                      }
                    }, null, null, [[0, 8]]);
                  }, CHECK_RESULT_TIMER_INTERVAL);

                case 16:
                  _context2.next = 34;
                  break;

                case 18:
                  _context2.prev = 18;
                  _context2.t0 = _context2["catch"](2);

                  if (!(_this.state.ota_status !== 'failed' && _this.state.updating)) {
                    _context2.next = 33;
                    break;
                  }

                  _context2.prev = 21;
                  retryCount++;
                  _context2.t1 = resolve;
                  _context2.next = 26;
                  return _regenerator.default.awrap(_this.checkVersion());

                case 26:
                  _context2.t2 = _context2.sent;
                  return _context2.abrupt("return", (0, _context2.t1)(_context2.t2));

                case 30:
                  _context2.prev = 30;
                  _context2.t3 = _context2["catch"](21);
                  return _context2.abrupt("return", reject(_context2.t3));

                case 33:
                  return _context2.abrupt("return", reject(_context2.t0));

                case 34:
                case "end":
                  return _context2.stop();
              }
            }
          }, null, null, [[2, 18], [21, 30]]);
        }).catch(function (e) {
          throw e;
        });
      };

      _this.upgrade = function _callee3() {
        var res;
        return _regenerator.default.async(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _this.startAnimation(true);

                _this.setState({
                  updating: true,
                  ota_status: 'downloading'
                });

                _context3.prev = 2;
                _context3.next = 5;
                return _regenerator.default.awrap(_miot.Service.smarthome._updateDevice(_miot.Device.deviceID, _miot.Device.type));

              case 5:
                _context3.next = 7;
                return _regenerator.default.awrap(new Promise(function (rel) {
                  return setTimeout(rel, 10000);
                }));

              case 7:
                _context3.prev = 7;
                _context3.next = 10;
                return _regenerator.default.awrap(_this.checkVersion());

              case 10:
                res = _context3.sent;
                _context3.next = 16;
                break;

              case 13:
                _context3.prev = 13;
                _context3.t0 = _context3["catch"](7);
                throw _context3.t0;

              case 16:
                _context3.next = 22;
                break;

              case 18:
                _context3.prev = 18;
                _context3.t1 = _context3["catch"](2);
                toast(_Strings.default.upgradeFailed);

                _this.setState({
                  updating: false,
                  ota_status: 'failed'
                });

              case 22:
                _context3.prev = 22;

                _this.stopAnimation();

                return _context3.finish(22);

              case 25:
              case "end":
                return _context3.stop();
            }
          }
        }, null, null, [[2, 18, 22, 25], [7, 13]]);
      };

      _this.compareVersion = function (latest, current) {
        var latests = latest.split(".");
        var currents = current.split(".");
        if (latests.length !== currents.length) return true;

        for (var i = 0; i < latests.length; i++) {
          if (parseInt(latests[i]) > parseInt(currents[i])) {
            return true;
          }
        }

        return false;
      };

      _this.uiAndTextElements = function () {
        var otaStatus = {
          updateStatus: 0,
          image: SourceOtaLight,
          title: _this.state.isLatest ? _Strings.default.currentIsLatestVersion : "" + _Strings.default.lastestVersion + _this.state.latestVersion,
          subTitle: "" + _Strings.default.currentVersion + _this.state.currentVersion,
          color: '#333333'
        };
        var _this$state2 = _this.state,
            updating = _this$state2.updating,
            ota_status = _this$state2.ota_status,
            isLatest = _this$state2.isLatest;

        if (ota_status === 'failed') {
          otaStatus.image = SourceOtaFailed;
          otaStatus.updateStatus = 3;
          otaStatus.title = _Strings.default.upgradeFailed;
          otaStatus.subTitle = "";
          otaStatus.color = '#F56054';
        } else if (updating) {
          otaStatus.updateStatus = 1;
          otaStatus.title = _Strings.default.installing;
          otaStatus.subTitle = "";
          otaStatus.color = '#32BAC0';
        } else if (isLatest) {
          otaStatus.image = SourceOtaSuccess;
          otaStatus.updateStatus = 2;
          otaStatus.title = _Strings.default.currentIsLatestVersion;
          otaStatus.subTitle = "" + _Strings.default.currentVersion + _this.state.currentVersion;
          otaStatus.color = '#32BAC0';
        }

        return otaStatus;
      };

      _this.state = {
        latestVersion: '',
        currentVersion: '',
        updating: false,
        isLatest: false,
        ota_status: "idle"
      };
      _this.spinValue = new _reactNative.Animated.Value(0);
      return _this;
    }

    (0, _createClass2.default)(FirmwareUpgrade, [{
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        retryCount = 0;
        updateTimer && clearTimeout(updateTimer);
        updateTimer = null;
      }
    }, {
      key: "getUpdateInfo",
      value: function getUpdateInfo() {
        var _this2 = this;

        return _miot.Service.smarthome._getFirmwareOriginalUpdateInfo(_miot.Device.deviceID).then(function (res) {
          if (res.code !== 0 || !res.data) throw res;
          var payload = {
            updating: res.data.updating,
            ota_status: res.data.ota_status,
            latestVersion: res.data.latest,
            currentVersion: res.data.curr,
            isLatest: res.data.isLatest
          };

          _this2.setState(payload);
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        return _regenerator.default.async(function componentDidMount$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.prev = 0;
                _context4.next = 3;
                return _regenerator.default.awrap(this.getUpdateInfo());

              case 3:
                if (!this.state.updating) {
                  _context4.next = 7;
                  break;
                }

                this.startAnimation(true);
                _context4.next = 7;
                return _regenerator.default.awrap(this.checkVersion(true));

              case 7:
                _context4.next = 12;
                break;

              case 9:
                _context4.prev = 9;
                _context4.t0 = _context4["catch"](0);
                toast(_Strings.default.upgradeFailed);

              case 12:
                _context4.prev = 12;
                this.stopAnimation();
                return _context4.finish(12);

              case 15:
              case "end":
                return _context4.stop();
            }
          }
        }, null, this, [[0, 9, 12, 15]]);
      }
    }, {
      key: "render",
      value: function render() {
        var _this$uiAndTextElemen = this.uiAndTextElements(),
            updateStatus = _this$uiAndTextElemen.updateStatus,
            image = _this$uiAndTextElemen.image,
            title = _this$uiAndTextElemen.title,
            subTitle = _this$uiAndTextElemen.subTitle,
            color = _this$uiAndTextElemen.color;

        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.topContainer
        }, updateStatus == 1 ? _react.default.createElement(_reactNative.View, {
          style: {
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.Animated.Image, {
          style: {
            transform: [{
              rotate: this.spinValue.interpolate({
                inputRange: [0, 1],
                outputRange: ['0deg', '360deg']
              })
            }]
          },
          source: _Images.default.common.ota_auto_light_progress
        })) : _react.default.createElement(_reactNative.Image, {
          source: image
        }), _react.default.createElement(_reactNative.Text, {
          style: [Styles.lastest, this.state.updating ? {
            color: color
          } : {}]
        }, title), _react.default.createElement(_reactNative.Text, {
          style: Styles.newest
        }, subTitle)), updateStatus == 0 && !this.state.isLatest && this.state.currentVersion ? _react.default.createElement(_reactNative.TouchableOpacity, {
          style: Styles.button,
          onPress: this.upgrade
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.buttonText
        }, _Strings.default.updateNow)) : null);
      }
    }]);
    return FirmwareUpgrade;
  }(_react.Component);

  exports.default = FirmwareUpgrade;

  FirmwareUpgrade.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        title: _Strings.default.firmwareUpdate,
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: "#fff"
    },
    topContainer: {
      flex: 1,
      alignItems: "center",
      paddingTop: (0, _sizes.adjustSize)(250)
    },
    lastest: {
      color: "#333333",
      fontSize: 16,
      marginTop: (0, _sizes.adjustSize)(80)
    },
    newest: {
      color: "#666666",
      fontSize: 14,
      marginTop: (0, _sizes.adjustSize)(30)
    },
    button: {
      backgroundColor: '#32BAC0',
      marginBottom: (0, _sizes.adjustSize)(80),
      justifyContent: 'center',
      alignItems: 'center',
      paddingVertical: (0, _sizes.adjustSize)(40),
      marginHorizontal: (0, _sizes.adjustSize)(60),
      borderRadius: (0, _sizes.adjustSize)(70)
    },
    buttonText: {
      fontSize: 16,
      color: '#fff',
      fontWeight: 'bold'
    }
  });
},10349,[14308,14305,14674,14320,14323,14371,14377,14386,10297,10719,10033,10740,10776,10782,10320,10308,10074,10230,10352,11109,11112,11115,11118]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {
    ToastContainer: true
  };
  Object.defineProperty(exports, "ToastContainer", {
    enumerable: true,
    get: function get() {
      return _ToastContainer.default;
    }
  });
  exports.default = undefined;

  var _Toast = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  Object.keys(_Toast).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _Toast[key];
      }
    });
  });

  var _ToastContainer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _default = _Toast.default;
  exports.default = _default;
},10352,[14305,14308,10355,10376]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Manager", {
    enumerable: true,
    get: function get() {
      return _reactNativeRootSiblings.default;
    }
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeRootSiblings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _ToastContainer = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var Toast = function (_Component) {
    (0, _inherits2.default)(Toast, _Component);

    function Toast() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Toast);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Toast)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this._toast = null;

      _this.componentWillMount = function () {
        _this._toast = new _reactNativeRootSiblings.default(_react.default.createElement(_ToastContainer.default, (0, _extends2.default)({}, _this.props, {
          duration: 0
        })));
      };

      _this.componentWillReceiveProps = function (nextProps) {
        _this._toast.update(_react.default.createElement(_ToastContainer.default, (0, _extends2.default)({}, nextProps, {
          duration: 0
        })));
      };

      _this.componentWillUnmount = function () {
        _this._toast.destroy();
      };

      return _this;
    }

    (0, _createClass2.default)(Toast, [{
      key: "render",
      value: function render() {
        return null;
      }
    }]);
    return Toast;
  }(_react.Component);

  Toast.displayName = 'Toast';
  Toast.propTypes = _ToastContainer.default.propTypes;
  Toast.positions = _ToastContainer.positions;
  Toast.durations = _ToastContainer.durations;

  Toast.show = function (message) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
      position: _ToastContainer.positions.BOTTOM,
      duration: _ToastContainer.durations.SHORT
    };
    return new _reactNativeRootSiblings.default(_react.default.createElement(_ToastContainer.default, (0, _extends2.default)({}, options, {
      visible: true
    }), message));
  };

  Toast.hide = function (toast) {
    if (toast instanceof _reactNativeRootSiblings.default) {
      toast.destroy();
    } else {}
  };

  var _default = Toast;
  exports.default = _default;
},10355,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10358,10376]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.setSiblingWrapper = setSiblingWrapper;
  exports.RootSiblingParent = RootSiblingParent;
  exports.RootSiblingPortal = RootSiblingPortal;
  exports.default = undefined;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _ChildrenWrapper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _wrapRootComponent3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var siblingWrapper = function siblingWrapper(sibling) {
    return sibling;
  };

  function renderSibling(sibling) {
    return siblingWrapper(sibling);
  }

  if (!global.__rootSiblingsInjected && !global.__rootSiblingsDisabled) {
    _reactNative.AppRegistry.setWrapperComponentProvider(function () {
      return Root;
    });

    global.__rootSiblingsInjected = true;
  }

  function setSiblingWrapper(wrapper) {
    siblingWrapper = wrapper;
  }

  var _wrapRootComponent = (0, _wrapRootComponent3.default)(_ChildrenWrapper.default, renderSibling),
      Root = _wrapRootComponent.Root,
      defaultManager = _wrapRootComponent.manager;

  var uuid = 0;
  var managerStack = [defaultManager];
  var inactiveManagers = new Set();

  function getActiveManager() {
    for (var i = managerStack.length - 1; i >= 0; i--) {
      var manager = managerStack[i];

      if (!inactiveManagers.has(manager)) {
        return manager;
      }
    }

    return defaultManager;
  }

  var RootSiblingsManager = function () {
    function RootSiblingsManager(element, callback) {
      (0, _classCallCheck2.default)(this, RootSiblingsManager);
      this.id = "root-sibling-" + (uuid + 1);
      this.manager = getActiveManager();
      this.manager.update(this.id, element, callback);
      uuid++;
    }

    (0, _createClass2.default)(RootSiblingsManager, [{
      key: "update",
      value: function update(element, callback) {
        this.manager.update(this.id, element, callback);
      }
    }, {
      key: "destroy",
      value: function destroy(callback) {
        this.manager.destroy(this.id, callback);
      }
    }]);
    return RootSiblingsManager;
  }();

  exports.default = RootSiblingsManager;

  function RootSiblingParent(props) {
    var inactive = props.inactive;

    var _useState = (0, _react.useState)(function () {
      var _wrapRootComponent2 = (0, _wrapRootComponent3.default)(_ChildrenWrapper.default, renderSibling),
          parentRoot = _wrapRootComponent2.Root,
          parentManager = _wrapRootComponent2.manager;

      managerStack.push(parentManager);

      if (inactive) {
        inactiveManagers.add(parentManager);
      }

      return {
        Root: parentRoot,
        manager: parentManager
      };
    }),
        _useState2 = (0, _slicedToArray2.default)(_useState, 1),
        sibling = _useState2[0];

    (0, _react.useEffect)(function () {
      return function () {
        if (sibling) {
          var index = managerStack.indexOf(sibling.manager);

          if (index > 0) {
            managerStack.splice(index, 1);
          }
        }
      };
    }, [sibling]);

    if (inactive && sibling && !inactiveManagers.has(sibling.manager)) {
      inactiveManagers.add(sibling.manager);
    } else if (!inactive && sibling && inactiveManagers.has(sibling.manager)) {
      inactiveManagers.delete(sibling.manager);
    }

    var Parent = sibling.Root;
    return _react.default.createElement(Parent, null, props.children);
  }

  function RootSiblingPortal(props) {
    var _useState3 = (0, _react.useState)(function () {
      return new RootSiblingsManager(null);
    }),
        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),
        sibling = _useState4[0];

    sibling.update(props.children);
    (0, _react.useEffect)(function () {
      if (sibling) {
        return function () {
          return sibling.destroy();
        };
      }
    }, [sibling]);
    return null;
  }
},10358,[14308,14305,14347,14320,14323,10297,10033,10361,10364]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = ChildrenWrapper;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  function ChildrenWrapper(props) {
    return _react.default.createElement(_react.default.Fragment, null, props.children);
  }
},10361,[14305,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = wrapRootComponent;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _RootController = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _RootSiblings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  function wrapRootComponent(_Root, renderSibling) {
    var controller = new _RootController.default();
    return {
      Root: function Root(props) {
        return _react.default.createElement(_RootSiblings.default, {
          controller: controller,
          renderSibling: renderSibling
        }, _react.default.createElement(_Root, props));
      },
      manager: {
        update: function update(id, element, callback) {
          controller.update(id, element, callback);
        },
        destroy: function destroy(id, callback) {
          controller.destroy(id, callback);
        }
      }
    };
  }
},10364,[14305,10297,10367,10370]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.RootControllerChanges = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var RootControllerChanges;
  exports.RootControllerChanges = RootControllerChanges;

  (function (RootControllerChanges) {
    RootControllerChanges[RootControllerChanges["Insert"] = 0] = "Insert";
    RootControllerChanges[RootControllerChanges["Update"] = 1] = "Update";
    RootControllerChanges[RootControllerChanges["Remove"] = 2] = "Remove";
  })(RootControllerChanges || (exports.RootControllerChanges = RootControllerChanges = {}));

  var RootController = function () {
    function RootController() {
      (0, _classCallCheck2.default)(this, RootController);
      this.siblings = new Set();
      this.pendingActions = [];
      this.callback = null;
    }

    (0, _createClass2.default)(RootController, [{
      key: "update",
      value: function update(id, element, callback) {
        if (!this.siblings.has(id)) {
          this.emit(id, {
            change: RootControllerChanges.Insert,
            element: element,
            updateCallback: callback
          });
          this.siblings.add(id);
        } else {
          this.emit(id, {
            change: RootControllerChanges.Update,
            element: element,
            updateCallback: callback
          });
        }
      }
    }, {
      key: "destroy",
      value: function destroy(id, callback) {
        if (this.siblings.has(id)) {
          this.emit(id, {
            change: RootControllerChanges.Remove,
            element: null,
            updateCallback: callback
          });
          this.siblings.delete(id);
        } else if (callback) {
          callback();
        }
      }
    }, {
      key: "setCallback",
      value: function setCallback(callback) {
        this.callback = callback;
        this.pendingActions.forEach(function (_ref) {
          var id = _ref.id,
              action = _ref.action;
          callback(id, action);
        });
      }
    }, {
      key: "emit",
      value: function emit(id, action) {
        if (this.callback) {
          this.callback(id, action);
        } else {
          this.pendingActions.push({
            action: action,
            id: id
          });
        }
      }
    }]);
    return RootController;
  }();

  exports.default = RootController;
},10367,[14305,14320,14323]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _staticContainer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _RootController = _$$_REQUIRE(_dependencyMap[9]);

  var _default = function (_Component) {
    (0, _inherits2.default)(_default, _Component);

    function _default(props) {
      var _this;

      (0, _classCallCheck2.default)(this, _default);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(_default).call(this, props));
      _this.updatedSiblings = new Set();
      _this.siblingsPool = [];
      _this.state = {
        siblings: []
      };
      return _this;
    }

    (0, _createClass2.default)(_default, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.props.controller.setCallback(function (id, change) {
          setImmediate(function () {
            return _this2.commitChange(id, change);
          });
        });
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        this.updatedSiblings.clear();
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_react.default.Fragment, null, this.props.children, this.renderSiblings());
      }
    }, {
      key: "commitChange",
      value: function commitChange(id, _ref) {
        var _this3 = this;

        var change = _ref.change,
            element = _ref.element,
            updateCallback = _ref.updateCallback;
        var siblings = Array.from(this.siblingsPool);
        var index = siblings.findIndex(function (sibling) {
          return sibling.id === id;
        });

        if (change === _RootController.RootControllerChanges.Remove) {
          if (index > -1) {
            siblings.splice(index, 1);
          } else {
            this.invokeCallback(updateCallback);
            return;
          }
        } else if (change === _RootController.RootControllerChanges.Update) {
          if (index > -1) {
            siblings.splice(index, 1, {
              element: element,
              id: id
            });
            this.updatedSiblings.add(id);
          } else {
            this.invokeCallback(updateCallback);
            return;
          }
        } else {
          if (index > -1) {
            siblings.splice(index, 1);
          }

          siblings.push({
            element: element,
            id: id
          });
          this.updatedSiblings.add(id);
        }

        this.siblingsPool = siblings;
        this.setState({
          siblings: siblings
        }, function () {
          return _this3.invokeCallback(updateCallback);
        });
      }
    }, {
      key: "invokeCallback",
      value: function invokeCallback(callback) {
        if (callback) {
          callback();
        }
      }
    }, {
      key: "renderSiblings",
      value: function renderSiblings() {
        var _this4 = this;

        return this.state.siblings.map(function (_ref2) {
          var id = _ref2.id,
              element = _ref2.element;
          return _react.default.createElement(_staticContainer.default, {
            key: "root-sibling-" + id,
            shouldUpdate: _this4.updatedSiblings.has(id)
          }, _this4.wrapSibling(element));
        });
      }
    }, {
      key: "wrapSibling",
      value: function wrapSibling(element) {
        var renderSibling = this.props.renderSibling;

        if (renderSibling) {
          return renderSibling(element);
        } else {
          return element;
        }
      }
    }]);
    return _default;
  }(_react.Component);

  exports.default = _default;
},10370,[14308,14305,14320,14323,14371,14377,14386,10297,10373,10367]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _$$_REQUIRE(_dependencyMap[6]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _default = function (_Component) {
    (0, _inherits2.default)(_default, _Component);

    function _default() {
      (0, _classCallCheck2.default)(this, _default);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(_default).apply(this, arguments));
    }

    (0, _createClass2.default)(_default, [{
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate(nextProps) {
        return nextProps.shouldUpdate;
      }
    }, {
      key: "render",
      value: function render() {
        var child = this.props.children;
        return child === null || child === false ? null : _react.Children.only(child);
      }
    }]);
    return _default;
  }(_react.Component);

  exports.default = _default;
  _default.propTypes = {
    shouldUpdate: _propTypes.default.bool.isRequired
  };
},10373,[14305,14320,14323,14371,14377,14386,10297,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.durations = exports.positions = exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var TOAST_MAX_WIDTH = 0.8;
  var TOAST_ANIMATION_DURATION = 200;
  var positions = {
    TOP: 20,
    BOTTOM: -20,
    CENTER: 0
  };
  exports.positions = positions;
  var durations = {
    LONG: 3500,
    SHORT: 2000
  };
  exports.durations = durations;

  var styles = _reactNative.StyleSheet.create({
    defaultStyle: {
      position: 'absolute',
      left: 0,
      right: 0,
      justifyContent: 'center',
      alignItems: 'center'
    },
    containerStyle: {
      padding: 10,
      backgroundColor: '#000',
      opacity: 0.8,
      borderRadius: 5
    },
    shadowStyle: {
      shadowColor: '#000',
      shadowOffset: {
        width: 4,
        height: 4
      },
      shadowOpacity: 0.8,
      shadowRadius: 6,
      elevation: 10
    },
    textStyle: {
      fontSize: 16,
      color: '#fff',
      textAlign: 'center'
    }
  });

  var ToastContainer = function (_Component) {
    (0, _inherits2.default)(ToastContainer, _Component);

    function ToastContainer() {
      var _this;

      (0, _classCallCheck2.default)(this, ToastContainer);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToastContainer).apply(this, arguments));

      _this.componentDidMount = function () {
        _reactNative.Dimensions.addEventListener('change', _this._windowChanged);

        if (_this.props.keyboardAvoiding) {
          _reactNative.Keyboard.addListener('keyboardDidChangeFrame', _this._keyboardDidChangeFrame);
        }

        if (_this.state.visible) {
          _this._showTimeout = setTimeout(function () {
            return _this._show();
          }, _this.props.delay);
        }
      };

      _this.componentDidUpdate = function (prevProps) {
        if (_this.props.visible !== prevProps.visible) {
          if (_this.props.visible) {
            clearTimeout(_this._showTimeout);
            clearTimeout(_this._hideTimeout);
            _this._showTimeout = setTimeout(function () {
              return _this._show();
            }, _this.props.delay);
          } else {
            _this._hide();
          }

          _this.setState({
            visible: _this.props.visible
          });
        }
      };

      _this.componentWillUnmount = function () {
        _this._hide();

        _reactNative.Dimensions.removeEventListener('change', _this._windowChanged);

        _reactNative.Keyboard.removeListener('keyboardDidChangeFrame', _this._keyboardDidChangeFrame);
      };

      _this._animating = false;
      _this._root = null;
      _this._hideTimeout = null;
      _this._showTimeout = null;
      _this._keyboardHeight = 0;

      _this._windowChanged = function (_ref) {
        var window = _ref.window;

        _this.setState({
          windowWidth: window.width,
          windowHeight: window.height
        });
      };

      _this._keyboardDidChangeFrame = function (_ref2) {
        var endCoordinates = _ref2.endCoordinates;

        _this.setState({
          keyboardScreenY: endCoordinates.screenY
        });
      };

      _this._show = function () {
        clearTimeout(_this._showTimeout);

        if (!_this._animating) {
          clearTimeout(_this._hideTimeout);
          _this._animating = true;

          _this._root.setNativeProps({
            pointerEvents: 'auto'
          });

          _this.props.onShow && _this.props.onShow(_this.props.siblingManager);

          _reactNative.Animated.timing(_this.state.opacity, {
            toValue: _this.props.opacity,
            duration: _this.props.animation ? TOAST_ANIMATION_DURATION : 0,
            easing: _reactNative.Easing.out(_reactNative.Easing.ease)
          }).start(function (_ref3) {
            var finished = _ref3.finished;

            if (finished) {
              _this._animating = !finished;
              _this.props.onShown && _this.props.onShown(_this.props.siblingManager);

              if (_this.props.duration > 0) {
                _this._hideTimeout = setTimeout(function () {
                  return _this._hide();
                }, _this.props.duration);
              }
            }
          });
        }
      };

      _this._hide = function () {
        clearTimeout(_this._showTimeout);
        clearTimeout(_this._hideTimeout);

        if (!_this._animating) {
          if (_this._root) {
            _this._root.setNativeProps({
              pointerEvents: 'none'
            });
          }

          if (_this.props.onHide) {
            _this.props.onHide(_this.props.siblingManager);
          }

          _reactNative.Animated.timing(_this.state.opacity, {
            toValue: 0,
            duration: _this.props.animation ? TOAST_ANIMATION_DURATION : 0,
            easing: _reactNative.Easing.in(_reactNative.Easing.ease)
          }).start(function (_ref4) {
            var finished = _ref4.finished;

            if (finished) {
              _this._animating = false;
              _this.props.onHidden && _this.props.onHidden(_this.props.siblingManager);
            }
          });
        }
      };

      var _window = _reactNative.Dimensions.get('window');

      _this.state = {
        visible: _this.props.visible,
        opacity: new _reactNative.Animated.Value(0),
        windowWidth: _window.width,
        windowHeight: _window.height,
        keyboardScreenY: _window.height
      };
      return _this;
    }

    (0, _createClass2.default)(ToastContainer, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var props = this.props;
        var windowWidth = this.state.windowWidth;
        var offset = props.position;
        var _this$state = this.state,
            windowHeight = _this$state.windowHeight,
            keyboardScreenY = _this$state.keyboardScreenY;
        var keyboardHeight = Math.max(windowHeight - keyboardScreenY, 0);
        var position = offset ? (0, _defineProperty2.default)({}, offset < 0 ? 'bottom' : 'top', offset < 0 ? keyboardHeight - offset : offset) : {
          top: 0,
          bottom: keyboardHeight
        };
        return this.state.visible || this._animating ? _react.default.createElement(_reactNative.View, {
          style: [styles.defaultStyle, position],
          pointerEvents: "box-none"
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: function onPress() {
            typeof _this2.props.onPress === 'function' ? _this2.props.onPress() : null;
            _this2.props.hideOnPress ? _this2._hide() : null;
          }
        }, _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.containerStyle, {
            marginHorizontal: windowWidth * 0.09999999999999998
          }, props.containerStyle, props.backgroundColor && {
            backgroundColor: props.backgroundColor
          }, {
            opacity: this.state.opacity
          }, props.shadow && styles.shadowStyle, props.shadowColor && {
            shadowColor: props.shadowColor
          }],
          pointerEvents: "none",
          ref: function ref(ele) {
            return _this2._root = ele;
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.textStyle, props.textStyle, props.textColor && {
            color: props.textColor
          }]
        }, this.props.children)))) : null;
      }
    }]);
    return ToastContainer;
  }(_react.Component);

  ToastContainer.displayName = 'ToastContainer';
  ToastContainer.propTypes = (0, _objectSpread2.default)({}, _reactNative.ViewPropTypes, {
    containerStyle: _reactNative.ViewPropTypes.style,
    duration: _propTypes.default.number,
    visible: _propTypes.default.bool,
    position: _propTypes.default.number,
    animation: _propTypes.default.bool,
    shadow: _propTypes.default.bool,
    keyboardAvoiding: _propTypes.default.bool,
    backgroundColor: _propTypes.default.string,
    opacity: _propTypes.default.number,
    shadowColor: _propTypes.default.string,
    textColor: _propTypes.default.string,
    textStyle: _reactNative.Text.propTypes.style,
    delay: _propTypes.default.number,
    hideOnPress: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    onHide: _propTypes.default.func,
    onHidden: _propTypes.default.func,
    onShow: _propTypes.default.func,
    onShown: _propTypes.default.func
  });
  ToastContainer.defaultProps = {
    visible: false,
    duration: durations.SHORT,
    animation: true,
    shadow: true,
    position: positions.BOTTOM,
    opacity: 0.8,
    delay: 0,
    hideOnPress: true,
    keyboardAvoiding: true
  };
  var _default = ToastContainer;
  exports.default = _default;
},10376,[14308,14305,14314,14317,14320,14323,14371,14377,14386,10297,10318,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _miot = _$$_REQUIRE(_dependencyMap[10]);

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var maxNum = 200;

  var SceneTTS = function (_Component) {
    (0, _inherits2.default)(SceneTTS, _Component);

    function SceneTTS(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, SceneTTS);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SceneTTS).call(this, props, context));

      _this.getBLen = function (str) {
        if (!str) {
          return 0;
        }

        if (typeof str !== 'string') {
          str += '';
        }

        return Math.ceil(str.replace(/[^\x00-\xff]/g, '01').length / 2);
      };

      _this.onsave = function () {
        if (!_this.state.textValid) {
          return;
        }

        var action = _miot.Package.entryInfo;

        if (_this.jsonObj) {
          var ins = [{
            piid: _this.jsonObj.in[0].piid,
            value: _this.state.text
          }];
          action.payload.value = (0, _objectSpread2.default)({}, _this.jsonObj, {
            in: ins
          });
        } else {
          action.payload.value = [_this.state.text];
        }

        _miot.Package.exitInfo = action;

        _miot.Package.exit();
      };

      var entryInfo = _miot.Package.entryInfo;
      var value = '';

      if (entryInfo.payload.did) {
        var jsonObj = '';

        try {
          jsonObj = typeof entryInfo.payload.value === 'string' ? JSON.parse(entryInfo.payload.value || '""') : entryInfo.payload.value;
        } catch (e) {
          jsonObj = entryInfo.payload.value;
        }

        if (Array.isArray(jsonObj)) {
          value = jsonObj[0];
        } else if (jsonObj && jsonObj.siid && jsonObj.in && jsonObj.in[0]) {
          _this.jsonObj = jsonObj;
          value = typeof jsonObj.in[0].value === 'string' ? jsonObj.in[0].value : '';
        } else if (_miot.Device.model === 'xiaomi.wifispeaker.x08e' || _miot.Device.model === 'xiaomi.wifispeaker.l15a' || _miot.Device.model === 'xiaomi.wifispeaker.l09b' || _miot.Device.model === 'xiaomi.wifispeaker.l16a') {
          jsonObj = {
            "aiid": 3,
            "siid": 7,
            "in": [{
              "piid": 1,
              "value": {}
            }]
          };
          _this.jsonObj = jsonObj;
          value = typeof jsonObj.in[0].value === 'string' ? jsonObj.in[0].value : '';
        } else if (_miot.Device.model === 'xiaomi.wifispeaker.l05c' || _miot.Device.model === 'xiaomi.wifispeaker.l05b') {
          jsonObj = {
            "aiid": 3,
            "siid": 5,
            "in": [{
              "piid": 1,
              "value": {}
            }]
          };
          _this.jsonObj = jsonObj;
          value = typeof jsonObj.in[0].value === 'string' ? jsonObj.in[0].value : '';
        } else {
          value = jsonObj || '';

          if (value == 'action_tts') {
            value = '';
          }
        }
      }

      _this.state = {
        text: value,
        textNum: _this.getBLen(value),
        textValid: _this._isValid(value),
        numValid: !!value
      };
      return _this;
    }

    (0, _createClass2.default)(SceneTTS, [{
      key: "_isValid",
      value: function _isValid(str) {
        return /^([a-zA-Z]|[\u4e00-\u9fbb]|，|。|？|！|,|\.|\?|!|\s)*$/.test(str);
      }
    }, {
      key: "_validateText",
      value: function _validateText(newText) {
        var length = this.getBLen(newText);
        this.setState({
          text: newText,
          textNum: length,
          numValid: length > 0 && length <= maxNum,
          textValid: this._isValid(newText)
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.props.navigation.setParams({
          onsave: this.onsave
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.ScrollView, {
          contentContainerStyle: Styles.content,
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.separator
        }), _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: '#fff'
          }
        }, _react.default.createElement(_reactNative.TextInput, {
          autoFocus: true,
          selectTextOnFocus: false,
          multiline: true,
          numberOfLines: 6,
          style: Styles.textInput,
          value: this.state.text,
          underlineColorAndroid: "transparent",
          placeholder: _i18n.default.iftttPlaceholder(),
          onChangeText: function onChangeText(newText) {
            return _this2._validateText(newText);
          }
        }), _react.default.createElement(_reactNative.View, {
          style: Styles.textNumContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: this.state.textNum > maxNum ? Styles.textNumInvalid : Styles.textNum
        }, this.state.textNum), _react.default.createElement(_reactNative.Text, {
          style: Styles.textNum
        }, "/200")), _react.default.createElement(_reactNative.View, {
          style: [Styles.separator, {
            marginHorizontal: 22
          }]
        }), this.state.textValid ? _react.default.createElement(_reactNative.Text, {
          style: Styles.tip
        }, _i18n.default.iftttValidTip()) : _react.default.createElement(_reactNative.Text, {
          style: [Styles.tip, {
            color: "#F05353"
          }]
        }, _i18n.default.iftttInvalidTip()))));
      }
    }]);
    return SceneTTS;
  }(_react.Component);

  exports.default = SceneTTS;

  SceneTTS.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    var onsave = navigation.getParam('onsave', function () {});
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        title: _i18n.default.iftttText(),
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            _miot.Package.exit();
          }
        }],
        right: [{
          key: _NavigationBar.default.ICON.COMPLETE,
          onPress: function onPress() {
            onsave();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    pageContanier: {
      backgroundColor: "#fff"
    },
    containerAll: {
      flex: 1,
      marginTop: 0,
      backgroundColor: "#f2f2f2"
    },
    separator: {
      height: 0.5,
      backgroundColor: '#e5e5e5'
    },
    header: {
      position: "absolute",
      top: 0,
      height: 44,
      backgroundColor: '#fff'
    },
    btnGroup: {
      marginTop: 44,
      alignItems: "center",
      flexDirection: "row",
      width: '100%',
      backgroundColor: "#fff"
    },
    btn: {
      width: 60,
      height: 44,
      alignItems: "center",
      justifyContent: 'center'
    },
    btnText: {
      fontSize: 16,
      color: "rgba(0,0,0,0.5)"
    },
    title: {
      color: '#373E4D',
      fontWeight: '500',
      fontSize: 18,
      textAlign: "center",
      flex: 1
    },
    textInput: {
      height: 225,
      fontSize: 15,
      color: '#000',
      lineHeight: 20,
      backgroundColor: '#fff',
      padding: 15,
      textAlignVertical: "top"
    },
    textNumContainer: {
      position: 'absolute',
      top: 181,
      right: 22,
      flexDirection: 'row'
    },
    textNum: {
      fontSize: 15,
      color: '#999'
    },
    textNumInvalid: {
      fontSize: 15,
      color: '#F05353'
    },
    tip: {
      marginHorizontal: 22,
      marginTop: 10,
      marginBottom: 22,
      fontSize: 12,
      color: '#999',
      lineHeight: 17
    }
  });
},10379,[14308,14305,14314,14320,14323,14371,14377,14386,10297,10033,10074,10719,10097]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _miot = _$$_REQUIRE(_dependencyMap[10]);

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[12]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var maxNum = 200;

  var SceneDirective = function (_Component) {
    (0, _inherits2.default)(SceneDirective, _Component);

    function SceneDirective(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, SceneDirective);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SceneDirective).call(this, props, context));

      _this.getBLen = function (str) {
        if (!str) {
          return 0;
        }

        if (typeof str != "string") {
          str += "";
        }

        return Math.ceil(str.replace(/[^\x00-\xff]/g, "01").length / 2);
      };

      _this.onsave = function () {
        if (!_this.state.textValid) {
          return;
        }

        var action = _miot.Package.entryInfo;

        if (_this.jsonObj) {
          var ins = [{
            piid: _this.jsonObj.in[0].piid,
            value: _this.state.text
          }];

          if (_this.jsonObj.in && _this.jsonObj.in[1]) {
            ins.push({
              piid: _this.jsonObj.in[1].piid,
              value: _this.state.isSilent ? true : false
            });
          }

          action.payload.value = (0, _objectSpread2.default)({}, _this.jsonObj, {
            in: ins
          });
        } else {
          action.payload.value = [_this.state.text, _this.state.isSilent ? true : false];
        }

        _miot.Package.exitInfo = action;

        _miot.Package.exit();
      };

      var entryInfo = _miot.Package.entryInfo;
      var value = '';
      var silent = false;

      if (entryInfo.payload.did) {
        var jsonObj = '';

        try {
          jsonObj = typeof entryInfo.payload.value === 'string' ? JSON.parse(entryInfo.payload.value || '""') : entryInfo.payload.value;
        } catch (e) {
          jsonObj = entryInfo.payload.value;
        }

        if (Array.isArray(jsonObj)) {
          value = jsonObj[0];

          if (jsonObj.length >= 2) {
            silent = jsonObj[1] == 0;
          }
        } else if (jsonObj && jsonObj.siid && jsonObj.in && jsonObj.in[0]) {
          _this.jsonObj = jsonObj;
          value = typeof jsonObj.in[0].value === 'string' ? jsonObj.in[0].value : '';
          silent = jsonObj.in && jsonObj.in[1] ? jsonObj.in[1].value == true : false;
        } else if (_miot.Device.model === 'xiaomi.wifispeaker.x08e' || _miot.Device.model === 'xiaomi.wifispeaker.l15a' || _miot.Device.model === 'xiaomi.wifispeaker.l09b' || _miot.Device.model === 'xiaomi.wifispeaker.l16a') {
          jsonObj = {
            "aiid": 4,
            "siid": 7,
            "in": [{
              "piid": 1,
              "siid": 7,
              "value": {}
            }, {
              "piid": 2,
              "siid": 7,
              "value": false
            }]
          };
          _this.jsonObj = jsonObj;
          value = typeof jsonObj.in[0].value === 'string' ? jsonObj.in[0].value : '';
          silent = jsonObj.in && jsonObj.in[1] ? jsonObj.in[1].value == true : false;
        } else if (_miot.Device.model === 'xiaomi.wifispeaker.l05c' || _miot.Device.model === 'xiaomi.wifispeaker.l05b') {
          jsonObj = {
            "aiid": 4,
            "siid": 5,
            "in": [{
              "piid": 1,
              "value": {}
            }, {
              "piid": 2,
              "value": false
            }]
          };
          _this.jsonObj = jsonObj;
          value = typeof jsonObj.in[0].value === 'string' ? jsonObj.in[0].value : '';
          silent = jsonObj.in && jsonObj.in[1] ? jsonObj.in[1].value == true : false;
        } else {
          value = jsonObj || '';
          silent = false;
        }
      }

      _this.state = {
        text: value,
        isSilent: silent,
        textNum: _this.getBLen(value),
        textValid: true,
        numValid: !!value
      };
      return _this;
    }

    (0, _createClass2.default)(SceneDirective, [{
      key: "_isValid",
      value: function _isValid(str) {
        return /^([a-zA-Z]|[\u4e00-\u9fbb]|，|。|？|！|,|\.|\?|!|\s)*$/.test(str);
      }
    }, {
      key: "_validateText",
      value: function _validateText(newText) {
        var length = this.getBLen(newText);
        this.setState({
          text: newText,
          textNum: length,
          numValid: length > 0 && length <= maxNum,
          textValid: this._isValid(newText)
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.props.navigation.setParams({
          onsave: this.onsave
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.ScrollView, {
          contentContainerStyle: Styles.content,
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: "#fff"
          }
        }, _react.default.createElement(_reactNative.TextInput, {
          autoFocus: true,
          selectTextOnFocus: false,
          multiline: true,
          numberOfLines: 6,
          style: Styles.textInput,
          value: this.state.text,
          underlineColorAndroid: "transparent",
          placeholder: _i18n.default.iftttDirectivePlaceholder(),
          onChangeText: function onChangeText(newText) {
            return _this2._validateText(newText);
          }
        }), _react.default.createElement(_reactNative.View, {
          style: Styles.textNumContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: this.state.textNum > maxNum ? Styles.textNumInvalid : Styles.textNum
        }, this.state.textNum), _react.default.createElement(_reactNative.Text, {
          style: Styles.textNum
        }, "/200")), _react.default.createElement(_reactNative.View, {
          style: [Styles.separator, {
            marginHorizontal: 22
          }]
        }), this.state.textValid ? _react.default.createElement(_reactNative.Text, {
          style: Styles.tip
        }, _i18n.default.iftttValidTip()) : _react.default.createElement(_reactNative.Text, {
          style: [Styles.tip, {
            color: "#F05353"
          }]
        }, _i18n.default.iftttInvalidTip()), _react.default.createElement(_reactNative.View, {
          style: Styles.gap
        }), _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: _i18n.default.iftttSilent(),
          value: this.state.isSilent,
          showSeparator: false,
          disabled: false,
          subtitle: _i18n.default.iftttSilentTip(),
          onValueChange: function onValueChange(value) {
            _this2.setState({
              isSilent: value
            });
          }
        }))));
      }
    }]);
    return SceneDirective;
  }(_react.Component);

  exports.default = SceneDirective;

  SceneDirective.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    var onsave = navigation.getParam('onsave', function () {});
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        title: _i18n.default.iftttDirective(),
        backgroundColor: '#fff',
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            _miot.Package.exit();
          }
        }],
        right: [{
          key: _NavigationBar.default.ICON.COMPLETE,
          onPress: function onPress() {
            onsave();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#fff',
      paddingTop: 5
    },
    content: {
      flex: 1,
      backgroundColor: "#f2f2f2"
    },
    separator: {
      height: 0.5,
      backgroundColor: '#e5e5e5'
    },
    gap: {
      height: 10,
      backgroundColor: '#f2f2f2'
    },
    header: {
      position: "absolute",
      top: 0,
      height: 44,
      backgroundColor: '#fff'
    },
    btnGroup: {
      marginTop: 0,
      alignItems: "center",
      flexDirection: "row",
      width: '100%',
      backgroundColor: "#fff"
    },
    btn: {
      width: 60,
      height: 44,
      alignItems: "center",
      justifyContent: "center"
    },
    btnText: {
      fontSize: 16,
      color: "rgba(0,0,0,0.5)"
    },
    title: {
      color: '#373E4D',
      fontWeight: '500',
      fontSize: 18,
      textAlign: "center",
      flex: 1
    },
    textInput: {
      height: 225,
      fontSize: 15,
      color: '#000',
      lineHeight: 20,
      backgroundColor: "#fff",
      padding: 15,
      textAlignVertical: "top"
    },
    textNumContainer: {
      position: 'absolute',
      top: 181,
      right: 22,
      flexDirection: 'row'
    },
    textNum: {
      fontSize: 15,
      color: '#999'
    },
    textNumInvalid: {
      fontSize: 15,
      color: '#F05353'
    },
    tip: {
      marginHorizontal: 22,
      marginTop: 10,
      marginBottom: 22,
      fontSize: 12,
      color: "#999",
      lineHeight: 17
    },
    rowContainer: {
      flexDirection: 'row',
      height: 70,
      justifyContent: 'space-between',
      alignItems: 'stretch',
      backgroundColor: "#fff",
      padding: 15
    },
    textContainer: {
      justifyContent: 'space-between',
      alignItems: 'flex-start'
    },
    rowTitle: {
      color: '#373E4D',
      fontSize: 18,
      textAlign: "center"
    },
    rowTip: {
      color: '#999',
      fontSize: 14,
      textAlign: "center"
    }
  });
},10382,[14308,14305,14314,14320,14323,14371,14377,14386,10297,10033,10074,10719,10338,10097]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _apis = _$$_REQUIRE(_dependencyMap[10]);

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _resources = _$$_REQUIRE(_dependencyMap[13]);

  var _miot = _$$_REQUIRE(_dependencyMap[14]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var ARROW_SIZE = _reactNative.Platform.select({
    android: 26,
    ios: 24
  });

  var language = _miot.Host.locale.language.toLowerCase();

  var locale = {
    zh: 'zh_CN',
    zh_tw: 'zh_TW',
    zh_hk: 'zh_HK',
    en: 'en-US'
  }[language] || 'en-US';

  var IRController = function (_Component) {
    (0, _inherits2.default)(IRController, _Component);

    function IRController(props) {
      var _this;

      (0, _classCallCheck2.default)(this, IRController);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(IRController).call(this, props));
      _this.state = {
        dataSource: []
      };

      _this._getDeviceCategoryList();

      return _this;
    }

    (0, _createClass2.default)(IRController, [{
      key: "_getDeviceCategoryList",
      value: function _getDeviceCategoryList() {
        var _this2 = this;

        (0, _apis.getDeviceCategoryList)(locale).then(function (res) {
          _this2.setState({
            dataSource: res.data
          });
        }).catch(function (err) {});
      }
    }, {
      key: "_onPress",
      value: function _onPress(item) {
        if (item.id == 0) {
          _miot.Host.ui.addOrCopyIR(_miot.Device.deviceID, 1, [item.model], {
            create_device: false,
            dismiss_current_plug: false
          });
        } else {
          _miot.Host.ui.addOrCopyIR(_miot.Device.deviceID, 0, [item.model], {
            create_device: false,
            dismiss_current_plug: false
          });
        }
      }
    }, {
      key: "_renderRow",
      value: function _renderRow(item) {
        var _this3 = this;

        return _react.default.createElement(_reactNative.TouchableHighlight, {
          style: styles.container,
          onPress: function onPress() {
            _this3._onPress(item);
          },
          underlayColor: "#E1E1E1"
        }, _react.default.createElement(_reactNative.View, {
          style: styles.listItem
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: {
            uri: item.imageUrl
          }
        }), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, item.name), _react.default.createElement(_reactNative.Text, {
          style: styles.subtitle
        }, item.description)), _react.default.createElement(_reactNative.Image, {
          style: styles.arrow,
          source: _resources.Images.common.right_arrow
        })));
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        return _react.default.createElement(_reactNative.ScrollView, {
          showsVerticalScrollIndicator: false,
          style: {
            backgroundColor: '#ffffff'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, " ", _i18n.default.chooseIrDevices()), _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.FlatList, {
          data: this.state.dataSource,
          renderItem: function renderItem(_ref) {
            var item = _ref.item;
            return _this4._renderRow(item);
          }
        }))));
      }
    }]);
    return IRController;
  }(_react.Component);

  exports.default = IRController;

  IRController.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#ffffff',
      width: '100%',
      height: '100%',
      paddingHorizontal: (0, _sizes.adjustSize)(30)
    },
    listItem: {
      paddingVertical: (0, _sizes.adjustSize)(30),
      flexDirection: 'row',
      alignItems: 'center'
    },
    icon: {
      width: (0, _sizes.adjustSize)(114),
      height: (0, _sizes.adjustSize)(114),
      borderRadius: (0, _sizes.adjustSize)(6),
      marginRight: (0, _sizes.adjustSize)(30)
    },
    text: {
      marginHorizontal: (0, _sizes.adjustSize)(30),
      marginVertical: (0, _sizes.adjustSize)(50),
      fontSize: (0, _sizes.adjustSize)(70),
      color: '#000000'
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(40),
      color: '#000000',
      fontWeight: 'bold',
      lineHeight: (0, _sizes.adjustSize)(57)
    },
    subtitle: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(32),
      color: '#666666',
      lineHeight: (0, _sizes.adjustSize)(54)
    },
    indicator: {
      width: (0, _sizes.adjustSize)(84),
      height: (0, _sizes.adjustSize)(84),
      backgroundColor: '#f00',
      borderRadius: (0, _sizes.adjustSize)(42)
    },
    arrow: {
      width: ARROW_SIZE,
      height: ARROW_SIZE
    }
  });
},10385,[14308,14305,14320,14323,14371,14377,14386,10297,10033,10719,10043,10776,10782,10077,10074,10097]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _miot = _$$_REQUIRE(_dependencyMap[9]);

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _apis = _$$_REQUIRE(_dependencyMap[11]);

  var _capability = _$$_REQUIRE(_dependencyMap[12]);

  var _TalkHistoryContent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  function ConversationType(props) {
    var protocol = props.type;

    switch (protocol) {
      case -1:
        return null;

      case 1:
      case 2:
        return _react.default.createElement(_TalkHistoryContent.default, {
          type: 3
        });

      default:
        return _react.default.createElement(_TalkHistoryContent.default, {
          type: 2
        });
    }
  }

  ConversationType.propTypes = {
    type: _propTypes.default.number
  };

  var TalkHistory = function (_Component) {
    (0, _inherits2.default)(TalkHistory, _Component);

    function TalkHistory() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, TalkHistory);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(TalkHistory)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        protocol: -1
      };
      return _this;
    }

    (0, _createClass2.default)(TalkHistory, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        (0, _apis.getDeviceInfo)(_miot.Device.deviceID).then(function (_ref) {
          var innerCapabilities = _ref.innerCapabilities;

          if (innerCapabilities && innerCapabilities[_capability.AI_PROTOCOL_3_0] && innerCapabilities[_capability.DIALOGUE_3_1]) {
            _this2.setState({
              protocol: 2
            });

            return;
          }

          if (innerCapabilities && innerCapabilities[_capability.AI_PROTOCOL_3_0]) {
            _this2.setState({
              protocol: 1
            });

            return;
          }

          _this2.setState({
            protocol: 0
          });
        }).catch(function () {
          _this2.setState({
            protocol: 0
          });
        });
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, _react.default.createElement(ConversationType, {
          type: this.state.protocol
        }));
      }
    }]);
    return TalkHistory;
  }(_react.Component);

  exports.default = TalkHistory;

  TalkHistory.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        title: _i18n.default.talkHistory(),
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };
},10388,[14308,14305,14320,14323,14371,14377,14386,10297,10033,10074,10719,10043,10046,10391,10318,10097]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _miot = _$$_REQUIRE(_dependencyMap[12]);

  var _sizes = _$$_REQUIRE(_dependencyMap[13]);

  var _fonts = _$$_REQUIRE(_dependencyMap[14]);

  var _InputDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _Strings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _Utils = _$$_REQUIRE(_dependencyMap[18]);

  var _apis = _$$_REQUIRE(_dependencyMap[19]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var xiaoaiPhoto = _$$_REQUIRE(_dependencyMap[21]);

  var SourceLoading = _$$_REQUIRE(_dependencyMap[22]);

  var SourceUserDefault = _$$_REQUIRE(_dependencyMap[23]);

  var TalkHistoryContent = function (_Component) {
    (0, _inherits2.default)(TalkHistoryContent, _Component);

    function TalkHistoryContent() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, TalkHistoryContent);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(TalkHistoryContent)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        data: [],
        currentAccount: {},
        status: 0,
        flatListHeight: 700,
        feedbackUserInfo: {},
        feedbackXiaoaiInfo: {},
        showUserFeedback: false,
        showXiaoaiFeedback: false,
        userFeedbackText: '你本来想说的是什么？',
        xiaoaiFeedbackText: '描述错误原因，能帮助小爱的回答越来越准哦'
      };
      _this.nextTimestamp = Date.now();
      _this.count = 10;
      _this.hasMore = true;
      _this.isRefreshed = false;
      _this.flatListHeight = 700;
      _this.flatListInnerHeight = 0;
      _this.itemHeights = [];

      _this.getAccount = function () {
        _miot.Service.account.load().then(function (res) {
          _this.setState({
            currentAccount: {
              avatarURL: res.avatarURL,
              ID: res.ID,
              nickName: res.nickName,
              birth: res.birth,
              email: res.email,
              phone: res.phone,
              sex: res.sex,
              shareTime: res.shareTime
            }
          });
        });
      };

      _this.resetStatus = function () {
        _this.timerGetData && clearTimeout(_this.timerGetData);
        _this.timerGetData = setTimeout(function () {
          _this.setState({
            status: 0
          });
        }, 1000);
      };

      _this.onLayoutFlatList = function (e) {
        _this.flatListHeight = e.nativeEvent.layout.height;

        _this.setHeaderHeight();

        _this.setState({
          flatListHeight: _this.flatListHeight
        });
      };

      _this.onContentSizeChange = function (w, h) {
        _this.flatListInnerHeight = h;

        _this.setHeaderHeight();

        _this.setState({
          flatListInnerHeight: _this.flatListInnerHeight
        });
      };

      _this.onRefresh = function () {};

      _this.onEndReached = function () {
        if (!_this.hasMore) {
          return;
        }

        _this.setState({
          status: 2
        }, function () {
          _this.timerGetData && clearTimeout(_this.timerGetData);
          _this.timerGetData = setTimeout(function () {
            _this.getConversation(2);
          }, 500);
        });
      };

      _this.onMomentumScrollEnd = function (e) {
        var y = e.nativeEvent.contentOffset.y;

        if (y > 0) {
          return;
        }

        _this.setState({
          status: 1
        }, function () {
          _this.timerGetData && clearTimeout(_this.timerGetData);
          _this.timerGetData = setTimeout(function () {
            _this.getConversation(1);
          }, 500);
        });
      };

      _this.renderItemV2 = function (_ref) {
        var item = _ref.item,
            index = _ref.index;

        if (!item || !item.nlp) {
          return null;
        }

        var nlp = JSON.parse(item.nlp);

        if (!nlp || !nlp.response || !nlp.response.answer || !nlp.response.answer[0]) {
          return null;
        }

        var answerItem = nlp.response.answer[0];

        if (answerItem.intention == null || answerItem.intention.query === null) {
          return null;
        }

        var userIcon = _this.state.currentAccount.avatarURL ? {
          uri: _this.state.currentAccount.avatarURL
        } : SourceUserDefault;
        return _react.default.createElement(_reactNative.View, {
          onLayout: function onLayout(e) {
            _this.itemHeights[index] = e.nativeEvent.layout.height;

            _this.updateContentHeight();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.time
        }, (0, _Utils.formatToString)(item.timestamp * 1000))), _react.default.createElement(_reactNative.View, {
          style: Styles.contentRight
        }, _react.default.createElement(_reactNative.Image, {
          style: Styles.icon,
          source: userIcon
        }), _react.default.createElement(_reactNative.View, {
          style: Styles.userView
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.userText
        }, answerItem.intention.query || ''))), _react.default.createElement(_reactNative.View, {
          style: Styles.contentLeft
        }, _react.default.createElement(_reactNative.Image, {
          style: Styles.icon,
          source: xiaoaiPhoto
        }), _react.default.createElement(_reactNative.View, {
          style: Styles.xiaoaiView
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.xiaoaiText
        }, _this._xiaoaiContentV2(answerItem.to_speak, answerItem.content)))));
      };

      _this.renderItemV3 = function (_ref2) {
        var item = _ref2.item,
            index = _ref2.index;

        if (!item || !item.recordGroup) {
          return null;
        }

        var recordGroup = JSON.parse(item.recordGroup);

        if (!recordGroup.xiaoai) {
          return null;
        }

        var instructinos = recordGroup.xiaoai.instructions ? JSON.parse(recordGroup.xiaoai.instructions) : null;
        var widgetList = recordGroup.xiaoai.widget ? JSON.parse(recordGroup.xiaoai.widget) : null;
        var userIcon = _this.state.currentAccount.avatarURL ? {
          uri: _this.state.currentAccount.avatarURL
        } : SourceUserDefault;
        return _react.default.createElement(_reactNative.View, {
          onLayout: function onLayout(e) {
            _this.itemHeights[index] = e.nativeEvent.layout.height;

            _this.updateContentHeight();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.time
        }, (0, _Utils.formatToString)(item.timestamp))), _react.default.createElement(_reactNative.View, {
          style: Styles.contentRight
        }, _react.default.createElement(_reactNative.Image, {
          style: Styles.icon,
          source: userIcon
        }), _react.default.createElement(_reactNative.View, {
          style: Styles.userView
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.userText
        }, recordGroup.user.content))), _react.default.createElement(_reactNative.View, {
          style: Styles.contentLeft
        }, _react.default.createElement(_reactNative.Image, {
          style: Styles.icon,
          source: xiaoaiPhoto
        }), _react.default.createElement(_reactNative.View, {
          style: Styles.xiaoaiView
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.xiaoaiText
        }, _this._xiaoaiContentV3(recordGroup.xiaoai.content, instructinos, widgetList)))));
      };

      _this.updateContentHeight = function () {
        var itemHeights = _this.itemHeights;
        var ret = 0;

        _this.state.data.forEach(function (item, index) {
          if (itemHeights[index]) {
            ret += itemHeights[index];
          }
        });

        _this.flatListInnerHeight = ret;

        _this.setHeaderHeight();

        _this.setState({
          flatListInnerHeight: _this.flatListInnerHeight
        });
      };

      _this.keyExtractor = function (item, index) {
        return String(index);
      };

      _this.headerHeight = new _reactNative.Animated.Value(700);

      _this.setHeaderHeight = function () {
        var flatListHeight = _this.flatListHeight;
        var flatListInnerHeight = _this.flatListInnerHeight;

        _this.headerHeight.setValue(Math.min(flatListHeight, Math.max(0, flatListHeight - flatListInnerHeight)));
      };

      _this.ListHeaderComponent = function () {
        var height = _this.headerHeight;
        var status = _this.state.status;
        var text = status === 1 ? _i18n.default.refreshing() : status === 3 ? _i18n.default.refreshed() : '';
        return _react.default.createElement(_reactNative.Animated.View, {
          style: [{
            height: status === 1 || status === 3 ? Math.max(height.__getValue(), (0, _sizes.adjustSize)(90)) : height,
            flexDirection: 'row',
            justifyContent: 'center'
          }]
        }, status === 1 ? _react.default.createElement(_reactNative.Image, {
          style: [Styles.loadingImg, {
            marginRight: (0, _sizes.adjustSize)(30)
          }],
          source: SourceLoading
        }) : null, _react.default.createElement(_reactNative.Text, {
          style: Styles.tipText
        }, text));
      };

      _this.ListFooterComponent = function () {
        var status = _this.state.status;

        var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
            hasMore = _assertThisInitialize.hasMore;

        if (status === 2) {
          return _react.default.createElement(_reactNative.View, {
            style: Styles.listLoading
          }, _react.default.createElement(_reactNative.Image, {
            style: Styles.loadingImg,
            source: SourceLoading
          }));
        }

        return _react.default.createElement(_reactNative.View, {
          style: Styles.tip
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.tipText
        }, status === 4 && !hasMore ? _i18n.default.noMoreData() : ''));
      };

      return _this;
    }

    (0, _createClass2.default)(TalkHistoryContent, [{
      key: "getConversation",
      value: function getConversation(status) {
        var type = this.props.type;

        if (type === 3) {
          this.getConversationV3(status);
          return;
        }

        this.getConversationV2(status);
      }
    }, {
      key: "getConversationV2",
      value: function getConversationV2(status) {
        var _this2 = this;

        (0, _apis.getNlpResult)().then(function (res) {
          var info = JSON.parse(res.data.info);
          _this2.hasMore = false;

          if (!info || !info.result) {
            info = {
              result: []
            };
          }

          var records = [];

          if (info.result.length >= 2 && info.result[0].timestamp - info.result[1].timestamp < 0) {
            records = info.result.reverse();
          } else {
            records = info.result;
          }

          _this2.setState(function () {
            return {
              data: (0, _toConsumableArray2.default)(records),
              status: status === 1 ? 3 : 4
            };
          }, _this2.resetStatus);
        }).catch(function (err) {
          _this2.setState({
            status: 0
          });
        });
      }
    }, {
      key: "getConversationV3",
      value: function getConversationV3(status) {
        var _this3 = this;

        var timestamp = status === 1 ? Date.now() : this.nextTimestamp;
        this.isRefreshed = false;
        (0, _apis.getMicoConversation)(timestamp, this.count).then(function (res) {
          if (!res || !res.data || !res.data.records || !res.data.records) {
            _this3.setState({
              status: status === 1 ? 3 : 4
            }, _this3.resetStatus);

            return;
          }

          var nextTimestamp = res.data.nextTimestamp;
          _this3.hasMore = res.data.records.length >= _this3.count || nextTimestamp > 0;

          if (!res.data.records.length) {
            _this3.setState({
              status: status === 1 ? 3 : 4
            }, _this3.resetStatus);

            return;
          }

          var records = [];

          if (res.data.records.length >= 2 && res.data.records[0].timestamp - res.data.records[1].timestamp < 0) {
            records = res.data.records.reverse();
          } else {
            records = res.data.records;
          }

          var target = records[records.length - 1];

          if (nextTimestamp || target.timestamp) {
            _this3.nextTimestamp = nextTimestamp || target.timestamp;
          }

          var lastData = _this3.state.data;

          _this3.setState({
            data: status === 1 ? (0, _toConsumableArray2.default)(records) : [].concat((0, _toConsumableArray2.default)(lastData), (0, _toConsumableArray2.default)(records)),
            status: status === 1 ? 3 : 4
          }, _this3.resetStatus);
        }).catch(function (err) {
          _this3.setState({
            status: status === 1 ? 3 : 4
          }, _this3.resetStatus);
        });
      }
    }, {
      key: "_xiaoaiContentV2",
      value: function _xiaoaiContentV2(speak, content) {
        if (!!speak && !!speak.trim()) {
          return speak;
        }

        if (!content) {
          return _i18n.default.ok();
        }

        if (!content.directive || !content.directive[0]) {
          return content.toSpeak || content.to_speak || _i18n.default.ok();
        }

        var directive = content.directive[0];

        if (directive && directive.items && directive.items.length > 0) {
          var item = directive.items[0];

          if (!item || !item.type) {
            return content.toSpeak || content.to_speak || _i18n.default.ok();
          }

          if ('text' == item.type.toLowerCase()) {
            return item.text || '';
          }

          if ('audio' == item.type.toLowerCase() || 'resource' == (item.text || '').toLowerCase()) {
            if (item.title) {
              return item.title || '';
            } else {
              return _i18n.default.talkvoice();
            }
          } else {
            return content.toSpeak || content.to_speak || _i18n.default.ok();
          }
        }
      }
    }, {
      key: "_xiaoaiContentV3",
      value: function _xiaoaiContentV3(content, instructinos, widgetList) {
        if (!!content && !!content.trim()) {
          return content;
        }

        if (instructinos && instructinos.length) {
          for (var i = 0; i < instructinos.length; i++) {
            var instruction = instructinos[i];

            if (instruction.payload && instruction.payload.text) {
              return instruction.payload.text;
            }
          }
        }

        if (widgetList && widgetList.length > 0) {
          var widget = widgetList[0];
          var type = (widget.type || '').toLowerCase();

          if ('text' == type) {
            if (widget.text) {
              return widget.text;
            } else {
              return _i18n.default.ok();
            }
          }

          if ('audio' == type) {
            if (widget.title) {
              return widget.title;
            } else {
              return _i18n.default.ok();
            }
          }
        }

        return _i18n.default.ok();
      }
    }, {
      key: "userFeedback",
      value: function userFeedback(item) {
        this.setState({
          showUserFeedback: true,
          feedbackUserInfo: item
        });
      }
    }, {
      key: "xiaoaiFeedback",
      value: function xiaoaiFeedback(item) {
        this.setState({
          showXiaoaiFeedback: true,
          feedbackXiaoaiInfo: item
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.getAccount();
        this.getConversation(1);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.timerGetData && clearTimeout(this.timerGetData);
      }
    }, {
      key: "submitUserFeedback",
      value: function submitUserFeedback() {}
    }, {
      key: "submitXiaoaiFeedback",
      value: function submitXiaoaiFeedback() {}
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var type = this.props.type;
        var _this$state = this.state,
            data = _this$state.data,
            flatListHeight = _this$state.flatListHeight,
            userFeedbackText = _this$state.userFeedbackText,
            xiaoaiFeedbackText = _this$state.xiaoaiFeedbackText,
            showUserFeedback = _this$state.showUserFeedback,
            showXiaoaiFeedback = _this$state.showXiaoaiFeedback;
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.content
        }, _react.default.createElement(_reactNative.FlatList, {
          ref: function ref(_ref3) {
            _this4.refFlatList = _ref3;
          },
          onLayout: this.onLayoutFlatList,
          data: data,
          renderItem: type === 3 ? this.renderItemV3 : this.renderItemV2,
          keyExtractor: this.keyExtractor,
          onEndReached: this.onEndReached,
          onEndReachedThreshold: 0.1,
          inverted: true,
          showsVerticalScrollIndicator: false,
          showsHorizontalScrollIndicator: false,
          contentContainerStyle: {
            minHeight: flatListHeight
          },
          ListHeaderComponent: this.ListHeaderComponent,
          ListFooterComponent: this.ListFooterComponent,
          onMomentumScrollEnd: this.onMomentumScrollEnd
        })), showUserFeedback ? _react.default.createElement(_AbstractDialog.default, {
          visible: true,
          title: _i18n.default.questionTitle(),
          onDismiss: function onDismiss() {
            return _this4.setState({
              showUserFeedback: false
            });
          },
          buttons: [{
            text: '提交',
            style: {
              color: '#012727',
              backgroundColor: '#33cbcb',
              width: (0, _sizes.adjustSize)(900),
              height: (0, _sizes.adjustSize)(100),
              paddingVertical: (0, _sizes.adjustSize)(20),
              marginBottom: (0, _sizes.adjustSize)(55),
              textAlign: 'center',
              borderRadius: 30
            },
            callback: this.submitUserFeedback.bind(this)
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.feedbackDialog
        }, _react.default.createElement(_reactNative.TextInput, {
          multiline: true,
          placeholder: userFeedbackText,
          style: Styles.feedbackDialogInput
        }))) : null, showXiaoaiFeedback ? _react.default.createElement(_AbstractDialog.default, {
          visible: true,
          title: _i18n.default.questionTitle(),
          onDismiss: function onDismiss() {
            return _this4.setState({
              showXiaoaiFeedback: false
            });
          },
          buttons: [{
            text: '提交',
            style: {
              color: '#012727',
              backgroundColor: '#33cbcb',
              width: (0, _sizes.adjustSize)(900),
              height: (0, _sizes.adjustSize)(100),
              paddingVertical: (0, _sizes.adjustSize)(20),
              marginBottom: (0, _sizes.adjustSize)(55),
              textAlign: 'center',
              borderRadius: 30
            },
            callback: this.submitXiaoaiFeedback.bind(this)
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.feedbackDialog
        }, _react.default.createElement(_reactNative.TextInput, {
          multiline: true,
          placeholder: xiaoaiFeedbackText,
          style: Styles.feedbackDialogInput
        }))) : null);
      }
    }]);
    return TalkHistoryContent;
  }(_react.Component);

  exports.default = TalkHistoryContent;
  TalkHistoryContent.propTypes = {
    type: _propTypes.default.number
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#fff',
      paddingTop: (0, _sizes.adjustSize)(15)
    },
    content: {
      flex: 1
    },
    contentCenter: {
      paddingVertical: (0, _sizes.adjustSize)(30),
      paddingHorizontal: (0, _sizes.adjustSize)(30),
      flexDirection: 'column'
    },
    feedbackDialog: {
      backgroundColor: '#f2f2f2',
      marginLeft: (0, _sizes.adjustSize)(60),
      marginRight: (0, _sizes.adjustSize)(60),
      marginBottom: (0, _sizes.adjustSize)(60),
      height: 200
    },
    feedbackDialogInput: {
      color: '#939393',
      padding: (0, _sizes.adjustSize)(40),
      fontSize: (0, _sizes.adjustSize)(40)
    },
    time: {
      marginHorizontal: (0, _sizes.adjustSize)(30),
      marginTop: (0, _sizes.adjustSize)(30),
      color: '#999'
    },
    contentLeft: {
      paddingVertical: (0, _sizes.adjustSize)(50),
      paddingHorizontal: (0, _sizes.adjustSize)(10),
      marginLeft: (0, _sizes.adjustSize)(20),
      flexDirection: 'row'
    },
    contentRight: {
      paddingHorizontal: (0, _sizes.adjustSize)(20),
      marginRight: (0, _sizes.adjustSize)(20),
      marginTop: (0, _sizes.adjustSize)(30),
      flexDirection: 'row-reverse'
    },
    icon: {
      width: (0, _sizes.adjustSize)(114),
      height: (0, _sizes.adjustSize)(114),
      borderRadius: (0, _sizes.adjustSize)(60)
    },
    userView: {
      paddingVertical: (0, _sizes.adjustSize)(40),
      paddingHorizontal: (0, _sizes.adjustSize)(40),
      marginLeft: (0, _sizes.adjustSize)(240),
      marginRight: (0, _sizes.adjustSize)(20),
      backgroundColor: "#60aff9",
      borderRadius: 10
    },
    userText: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(51),
      color: '#fff',
      fontWeight: 'bold'
    },
    userFeedback: {
      width: (0, _sizes.adjustSize)(190),
      backgroundColor: '#fff',
      marginRight: (0, _sizes.adjustSize)(160),
      marginTop: (0, _sizes.adjustSize)(20),
      alignSelf: 'flex-end',
      textAlign: 'center',
      borderWidth: 1,
      borderColor: '#aaaaaa',
      borderRadius: 30
    },
    xiaoaiView: {
      paddingVertical: (0, _sizes.adjustSize)(50),
      paddingHorizontal: (0, _sizes.adjustSize)(40),
      marginLeft: (0, _sizes.adjustSize)(20),
      marginRight: (0, _sizes.adjustSize)(240),
      backgroundColor: "#f7f7f7",
      borderRadius: 10
    },
    xiaoaiText: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(51),
      color: '#000',
      fontWeight: 'bold'
    },
    xiaoaiFeedback: {
      width: (0, _sizes.adjustSize)(200),
      backgroundColor: '#fff',
      marginLeft: (0, _sizes.adjustSize)(170),
      marginTop: (0, _sizes.adjustSize)(-30),
      textAlign: 'center',
      borderWidth: 1,
      borderColor: '#aaaaaa',
      borderRadius: 30
    },
    tipText: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(39),
      lineHeight: (0, _sizes.adjustSize)(60),
      color: '#3f3f3f',
      textAlign: 'center'
    },
    listLoading: {
      alignItems: 'center'
    },
    loadingImg: {
      width: (0, _sizes.adjustSize)(60),
      height: (0, _sizes.adjustSize)(60),
      resizeMode: 'contain'
    }
  });
},10391,[14308,14305,14359,14320,14323,14371,14377,14374,14386,10297,10033,10318,10074,10776,10782,10737,10725,10320,10394,10043,10097,10397,10400,10403]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ShowToastLongCenter = exports.ShowToastCenter = exports.ShowToastBottom = exports.formatToString = exports.MyString = exports.Common = exports.MHNative = exports.pagePath4IR = exports.pagePath4TV = exports.CARDTYPE = exports.DEVICETYPE = exports.myFontFamily = exports.isIOS = exports.isAndroid = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var isAndroid = _reactNative.Platform.OS === 'android';
  exports.isAndroid = isAndroid;
  var isIOS = _reactNative.Platform.OS === 'ios';
  exports.isIOS = isIOS;
  var MJNative = _reactNative.NativeModules.MJNative,
      MijiaAndroidService = _reactNative.NativeModules.MijiaAndroidService;
  var myFontFamily = {
    Medium: isAndroid ? '' : 'PingFangSC-Medium',
    Regular: isAndroid ? '' : 'PingFangSC-Regular',
    FZQK: isAndroid ? 'fangzheng_qingke_benyue_song_jianti' : 'FZQKBYSJW--GB1-0'
  };
  exports.myFontFamily = myFontFamily;
  var DEVICETYPE = {
    TV: 0,
    NORMAL: 1,
    SHARE: 2,
    THIRD: 3,
    CUSTOM: 4
  };
  exports.DEVICETYPE = DEVICETYPE;
  var CARDTYPE = {
    NORMAL: 1,
    SHARE: 2,
    THIRD: 3,
    CUSTOM: 4
  };
  exports.CARDTYPE = CARDTYPE;
  var pagePath4TV = 'mico://smarthome/mitv?skillId=com.xiaomi.ai.mitvcontrol';
  exports.pagePath4TV = pagePath4TV;
  var pagePath4IR = 'mico://smarthome/ir_category';
  exports.pagePath4IR = pagePath4IR;
  var MHNative = {
    MiTVInfoForSoundBox: function MiTVInfoForSoundBox(id) {
      var _this = this;

      return new Promise(function (resolve, reject) {
        if (isAndroid) {
          MijiaAndroidService.getLocalData("MiTVInfoForSoundBox", JSON.stringify({
            id: id
          }), function (ok, res, err) {
            if (ok) {
              try {
                res = JSON.parse(res) || {};
                resolve(_this._processTV(res.tvInfoArray || []));
              } catch (e) {
                resolve(_this._processTV([]));
              }
            } else {
              resolve(_this._processTV([]));
            }
          });
        } else {
          MJNative.MiTVInfoForSoundBox(id, function (success, result) {
            if (success) {
              resolve(_this._processTV(result));
            } else {
              resolve(_this._processTV([]));
            }
          });
        }
      }).catch(function (e) {});
    },
    _processTV: function _processTV(list) {
      var tvList;
      return _regenerator.default.async(function _processTV$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              tvList = [];

              if (list && list.length > 0) {
                tvList = list.map(function (item) {
                  return {
                    type: DEVICETYPE.TV,
                    name: item.name || '',
                    icon_url: item.icon || '',
                    randomTwo: item.skills || []
                  };
                });
              }

              return _context.abrupt("return", tvList);

            case 3:
            case "end":
              return _context.stop();
          }
        }
      });
    },
    openTVPage: function openTVPage() {
      if (isAndroid) {
        MijiaAndroidService.postCommand("openAINativePage", JSON.stringify({
          url: pagePath4TV
        }));
      } else {
        MJNative.openAINativePage(pagePath4TV);
      }
    }
  };
  exports.MHNative = MHNative;
  var Common = {
    getRealInitialProps: function getRealInitialProps(props) {
      if (isAndroid) {
        var str = (props || {}).initialProps;

        try {
          return JSON.parse(str);
        } catch (err) {
          return {};
        }
      } else {
        return props;
      }
    },
    safeStringify: function safeStringify(obj) {
      if (!obj) return obj;

      try {
        if (typeof obj === 'string') {
          return obj;
        }

        return JSON.stringify(obj);
      } catch (e) {
        return null;
      }
    },
    deviceFactory: function deviceFactory(obj, type) {
      return (0, _extends2.default)({
        category: "",
        did: "",
        from: type,
        icon_url: "http://static.home.mi.com/app/image/get/file/developer_1529916749bvez8rxo.png",
        icon_url_480: "",
        model: "",
        name: "",
        tips: []
      }, obj);
    },
    typeOf: function typeOf(obj) {
      return Object.prototype.toString.call(obj).match(/\[object (\w+)\]/)[1].toLowerCase();
    },
    getRandomInt: function getRandomInt(max) {
      var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      min = Math.ceil(min);
      max = Math.floor(max);
      return Math.floor(Math.random() * (max - min)) + min;
    },
    getRandomItems: function getRandomItems(array) {
      var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
      if (this.typeOf(array) !== 'array') return;
      if (array.length <= n) return array;
      var res = [];
      var selected = [];

      while (res.length < n) {
        var index = this.getRandomInt(array.length);

        if (!selected.includes(index)) {
          res.push(array[index]);
          selected.push(index);
        }
      }

      return res;
    },
    isInvalid: function isInvalid(str) {
      if (this.typeOf(str) !== 'string') return true;
      return str.trim() === '';
    }
  };
  exports.Common = Common;
  var MyString = {
    isContainsEmoji: function isContainsEmoji(str) {
      for (var i = 0; i < str.length; i++) {
        var hs = str.charCodeAt(i);

        if (0xd800 <= hs && hs <= 0xdbff) {
          if (str.length > 1) {
            var ls = str.charCodeAt(i + 1);
            var uc = (hs - 0xd800) * 0x400 + (ls - 0xdc00) + 0x10000;

            if (0x1d000 <= uc && uc <= 0x1f9c0) {
              return true;
            }
          }
        } else {
          if (0x2100 <= hs && hs <= 0x27ff && hs != 0x2103) {
            return true;
          } else if (0x2B05 <= hs && hs <= 0x2b07) {
            return true;
          } else if (0x2934 <= hs && hs <= 0x2935) {
            return true;
          } else if (0x3297 <= hs && hs <= 0x3299) {
            return true;
          } else if (hs == 0xa9 || hs == 0xae || hs == 0x303d || hs == 0x3030 || hs == 0x2b55 || hs == 0x2b1c || hs == 0x2b50 || hs == 0x231a || hs == 0x2b1b) {
            return true;
          }

          if (str.length > 1) {
            var _ls = str.charCodeAt(i + 1);

            if (_ls == 0x20e3 || _ls == 0xfe0f || _ls == 0xd83c) {
              return true;
            }
          }
        }
      }
    },
    isContainsNotSupportedChar: function isContainsNotSupportedChar(str) {
      if (str === '') return false;
      return !/^[^-="“”!！？\$\^\*{}<>\?\[\]\|——|\/]+$/.test(str);
    }
  };
  exports.MyString = MyString;

  var formatToString = function formatToString(timestamp) {
    var formater = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'yyyy-MM-dd hh:mm';
    var date = new Date();
    date.setTime(parseInt(timestamp));
    formater = formater != null ? formater : 'yyyy-MM-dd hh:mm';

    Date.prototype.Format = function (fmt) {
      var o = {
        "M+": this.getMonth() + 1,
        "d+": this.getDate(),
        "h+": this.getHours(),
        "m+": this.getMinutes(),
        "s+": this.getSeconds(),
        "q+": Math.floor((this.getMonth() + 3) / 3),
        "S": this.getMilliseconds()
      };
      if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, ("" + this.getFullYear()).substr(4 - RegExp.$1.length));

      for (var k in o) {
        if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : ("00" + o[k]).substr(("" + o[k]).length));
      }

      return fmt;
    };

    return date.Format(formater);
  };

  exports.formatToString = formatToString;

  var ShowToastBottom = function ShowToastBottom(string) {
    _reactNativeRootToast.default.show(string, {
      duration: _reactNativeRootToast.default.durations.SHORT,
      position: _reactNativeRootToast.default.positions.BOTTOM,
      shadow: true,
      animation: true
    });
  };

  exports.ShowToastBottom = ShowToastBottom;

  var ShowToastCenter = function ShowToastCenter(string) {
    _reactNativeRootToast.default.show(string, {
      duration: _reactNativeRootToast.default.durations.SHORT,
      position: _reactNativeRootToast.default.positions.CENTER,
      shadow: true,
      animation: true
    });
  };

  exports.ShowToastCenter = ShowToastCenter;

  var ShowToastLongCenter = function ShowToastLongCenter(string) {
    _reactNativeRootToast.default.show(string, {
      duration: _reactNativeRootToast.default.durations.LONG,
      position: _reactNativeRootToast.default.positions.CENTER,
      shadow: true,
      animation: true
    });
  };

  exports.ShowToastLongCenter = ShowToastLongCenter;
},10394,[14305,14344,14674,10033,10352]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 122,
    "height": 122,
    "scales": [1],
    "hash": "a986f3a929159167541f8cdc169f5727",
    "name": "icon_avatar_mico",
    "type": "png"
  });
},10397,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 128,
    "height": 128,
    "scales": [1],
    "hash": "0e6e0f46d7504242302bc8055ad9c8c2",
    "name": "loading",
    "type": "gif"
  });
},10400,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "cbe8476547f45020c96d89689ecddd88",
    "name": "user",
    "type": "png"
  });
},10403,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[13]);

  var _sizes = _$$_REQUIRE(_dependencyMap[14]);

  var _fonts = _$$_REQUIRE(_dependencyMap[15]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _miot = _$$_REQUIRE(_dependencyMap[18]);

  var _apis = _$$_REQUIRE(_dependencyMap[19]);

  var _Utils = _$$_REQUIRE(_dependencyMap[20]);

  var _DeviceCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _Popup = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var CUSTOM_REMOTER = 'miir.remote.ir01';

  var microphone = _$$_REQUIRE(_dependencyMap[23]);

  var sourceArrow = _$$_REQUIRE(_dependencyMap[24]);

  var switchIcon = _$$_REQUIRE(_dependencyMap[25]);

  var STORAGEKEY = "selectedType";

  var SourceNoDevices = _$$_REQUIRE(_dependencyMap[26]);

  var ControlDevice = function (_Component) {
    (0, _inherits2.default)(ControlDevice, _Component);

    function ControlDevice(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ControlDevice);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ControlDevice).call(this, props));
      _this._selectedType = 1;
      _this.categoryView = null;
      _this._onAppPaused = null;

      _this._getControlDeviceList = function () {
        var promise1 = (0, _apis.getHome)();
        var promise2 = (0, _apis.getControlDeviceList)(_miot.Device.deviceId, "", "", 0, _this._selectedType == 0 ? "category" : "name");
        var promise3 = (0, _apis.getControllers)(_miot.Device.deviceId);

        var promise4 = _Utils.MHNative.MiTVInfoForSoundBox(_miot.Device.deviceId || '');

        var array = [promise1, promise2, promise3, promise4];
        Promise.all(array).then(function (_ref) {
          var _ref2 = (0, _slicedToArray2.default)(_ref, 4),
              homelist = _ref2[0].homelist,
              devicesTmp = _ref2[1].devices,
              res = _ref2[2],
              tvList = _ref2[3];

          var _ref3 = res || {},
              controllers = _ref3.controllers;

          if (_Utils.Common.typeOf(devicesTmp) !== 'array') {
            devicesTmp = [];
          }

          if (_Utils.Common.typeOf(homelist) !== 'array') {
            homelist = [];
          }

          if (_Utils.Common.typeOf(tvList) !== 'array') {
            tvList = [];
          }

          if (_Utils.Common.typeOf(controllers) !== 'array') {
            controllers = [];
          }

          var customControllers = controllers.filter(function (controller) {
            return controller.model === CUSTOM_REMOTER;
          }).map(function (controller) {
            return _Utils.Common.deviceFactory(controller, _Utils.DEVICETYPE.CUSTOM);
          });
          var devices = devicesTmp.concat(customControllers);

          if (tvList.length > 0 || devices.length > 0 && homelist.length > 0) {
            (0, _apis.getDeviceInfo)(_miot.Device.deviceID).then(function (_ref4) {
              var miotDID = _ref4.miotDID;

              var deviceList = _this._getDeviceCard(miotDID, homelist, devices, tvList || []);

              _this.setState({
                dataSource: deviceList
              });
            }).catch(function (error) {});
          } else {
            _this.setState({
              dataSource: []
            });
          }
        }).catch(function (error) {});
      };

      _this.state = {
        dataSource: [],
        spinner: false,
        devices: undefined,
        visible: false,
        popupTop: 0
      };

      _miot.Host.storage.get(STORAGEKEY, 1).then(function (res) {
        _this._selectedType = res ? res : 1;

        _this._getControlDeviceList();
      }).catch(function () {
        _this._selectedType = 1;

        _this._getControlDeviceList();
      });

      return _this;
    }

    (0, _createClass2.default)(ControlDevice, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this._onAppPaused = _miot.PackageEvent.packageViewWillAppear.addListener(this._getControlDeviceList);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.setState = {
          dataSource: [],
          spinner: false,
          devices: undefined,
          visible: false,
          popupTop: 0,
          reflesh: 0
        };
        this._onAppPaused && this._onAppPaused.remove();
      }
    }, {
      key: "_getRoomForDevice",
      value: function _getRoomForDevice(did, homelist) {
        if (_Utils.Common.typeOf(homelist) !== 'array') return;

        for (var _iterator = homelist, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
          var _ref5;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref5 = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref5 = _i.value;
          }

          var _home = _ref5;

          if (_home.dids.includes(did)) {
            return {
              home: _home.name,
              room: _i18n.default.deviceDefaultRoom(),
              homeCreateTime: _home.create_time
            };
          }

          for (var _iterator2 = _home.roomlist, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
            var _ref6;

            if (_isArray2) {
              if (_i2 >= _iterator2.length) break;
              _ref6 = _iterator2[_i2++];
            } else {
              _i2 = _iterator2.next();
              if (_i2.done) break;
              _ref6 = _i2.value;
            }

            var _room = _ref6;

            if (_room.dids.includes(did)) {
              return {
                home: _home.name,
                room: _room.name,
                homeCreateTime: _home.create_time
              };
            }
          }
        }
      }
    }, {
      key: "_parse2Cards",
      value: function _parse2Cards(deviceList, currentHome, tvList) {
        var normalDevices = {};
        var shareDevices = [];
        var thirdDevices = [];
        var devices = [];

        for (var _iterator3 = deviceList, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
          var _ref7;

          if (_isArray3) {
            if (_i3 >= _iterator3.length) break;
            _ref7 = _iterator3[_i3++];
          } else {
            _i3 = _iterator3.next();
            if (_i3.done) break;
            _ref7 = _i3.value;
          }

          var _dev = _ref7;
          var device = _dev;

          if (device.category === 0) {
            device.category = _i18n.default.deviceDetailCustomIr();
          }

          if (this._selectedType == 1) {
            switch (device.from) {
              case _Utils.DEVICETYPE.NORMAL:
                if (device.home) {
                  if (normalDevices[device.home]) {
                    normalDevices[device.home].devices.push(device);
                  } else {
                    normalDevices[device.home] = {
                      type: _Utils.CARDTYPE.NORMAL,
                      title: device.home,
                      home: device.home,
                      homeCreateTime: device.homeCreateTime,
                      devices: [device],
                      weight: device.home === currentHome ? 1 : 0
                    };
                  }
                }

                break;

              case _Utils.DEVICETYPE.SHARE:
                shareDevices.push((0, _extends2.default)(device, {
                  whoShared: device.platform,
                  platform: _i18n.default.deviceDetailMihome()
                }));
                break;

              case _Utils.DEVICETYPE.THIRD:
                thirdDevices.push(device);
                break;

              case _Utils.DEVICETYPE.CUSTOM:
                device.platform = _i18n.default.deviceDetailMihome();

                if (normalDevices[_i18n.default.deviceDetailCustomIr()]) {
                  normalDevices[_i18n.default.deviceDetailCustomIr()].devices.push(device);
                } else {
                  normalDevices[_i18n.default.deviceDetailCustomIr()] = {
                    type: _Utils.CARDTYPE.CUSTOM,
                    title: _i18n.default.deviceDetailCustomIr(),
                    home: device.home,
                    homeCreateTime: device.homeCreateTime,
                    devices: [device],
                    weight: -1
                  };
                }

                break;
            }
          } else {
            if (device.category) {
              if (normalDevices[device.category]) {
                normalDevices[device.category].devices.push(device);
              } else {
                normalDevices[device.category] = {
                  title: device.category,
                  devices: [device]
                };
              }
            }
          }
        }

        if (this._selectedType == 1) {
          devices = Object.values(normalDevices).sort(function (a, b) {
            if (b.weight !== a.weight) return b.weight - a.weight;
            return a.homeCreateTime - b.homeCreateTime;
          });
        } else {
          devices = Object.values(normalDevices);
        }

        if (tvList && tvList.length > 0) {
          if (devices.length > 0 && devices[0].home === currentHome) {
            var _devices$0$devices;

            (_devices$0$devices = devices[0].devices).push.apply(_devices$0$devices, (0, _toConsumableArray2.default)(tvList));
          } else {
            devices.unshift({
              type: _Utils.CARDTYPE.NORMAL,
              home: currentHome,
              devices: tvList
            });
          }
        }

        if (shareDevices.length > 0) {
          devices.push({
            type: _Utils.CARDTYPE.SHARE,
            title: _i18n.default.home_share_device(),
            devices: shareDevices
          });
        }

        if (thirdDevices.length > 0) {
          devices.push({
            type: _Utils.CARDTYPE.THIRD,
            title: _i18n.default.home_third_platform(),
            devices: thirdDevices
          });
        }

        return devices;
      }
    }, {
      key: "_getDeviceCard",
      value: function _getDeviceCard(miotDID, homelist, devices, tvList) {
        var _this2 = this;

        var deviceList = [];
        devices.forEach(function (device) {
          var allTips = device.tips.reduce(function (list, tip) {
            return list.concat(tip.contents || []);
          }, []);
          var obj = _this2._getRoomForDevice(device.did, homelist) || {};
          deviceList.push((0, _extends2.default)((0, _objectSpread2.default)({
            randomTwo: _Utils.Common.getRandomItems(allTips, 2)
          }, obj), device));
        });

        var _this$_getRoomForDevi = this._getRoomForDevice(miotDID, homelist),
            currentHome = _this$_getRoomForDevi.home;

        return this._parse2Cards(deviceList, currentHome, tvList);
      }
    }, {
      key: "_onPress",
      value: function _onPress() {
        _miot.Host.ui.openVoiceCtrlDeviceAuthPage();
      }
    }, {
      key: "_onChangePress",
      value: function _onChangePress() {
        var _this3 = this;

        this.refPopup.measure(function (frameX, frameY, frameWidth, frameHeight, pageX, pageY) {
          _this3.setState({
            popupTop: pageY
          });
        });
        setTimeout(function () {
          _this3.setState({
            visible: true
          });
        }, 5);
      }
    }, {
      key: "_toDeviceDetail",
      value: function _toDeviceDetail(item) {
        this.props.navigation.navigate("DeviceDetail", {
          device: item,
          title: _miot.Device.name
        });
      }
    }, {
      key: "_closeModal",
      value: function _closeModal() {
        this.setState({
          visible: false
        });
      }
    }, {
      key: "_popupShow",
      value: function _popupShow(callback) {
        _miot.Host.storage.set(STORAGEKEY, callback);

        this._closeModal();

        this.setState({
          selectedType: callback
        });
        this._selectedType = callback;

        this._getControlDeviceList();
      }
    }, {
      key: "_renderDevices",
      value: function _renderDevices() {
        var _this4 = this;

        var devices = this.state.dataSource;
        return devices.map(function (device, index) {
          return device ? _react.default.createElement(_DeviceCard.default, {
            key: "" + device.type + index,
            data: device,
            callback: function callback(device) {
              return _this4._toDeviceDetail(device);
            }
          }) : null;
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this5 = this;

        return _react.default.createElement(_reactNative.ScrollView, {
          style: styles.container,
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            _this5._onPress();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.controlView
        }, _react.default.createElement(_reactNative.View, {
          style: {
            justifyContent: "center"
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            width: (0, _sizes.adjustSize)(99),
            height: (0, _sizes.adjustSize)(99),
            marginHorizontal: (0, _sizes.adjustSize)(20)
          },
          source: microphone
        })), _react.default.createElement(_reactNative.View, {
          style: {
            marginVertical: (0, _sizes.adjustSize)(70),
            width: (0, _sizes.adjustSize)(750)
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.controlTextTitle
        }, _i18n.default.voiceAuth()), _react.default.createElement(_reactNative.Text, {
          style: styles.controlTextDes
        }, _i18n.default.voiceAuthTip())), _react.default.createElement(_reactNative.View, {
          style: {
            justifyContent: "center"
          }
        }, _react.default.createElement(_ImageButton.default, {
          style: {
            width: (0, _sizes.adjustSize)(30),
            height: (0, _sizes.adjustSize)(33),
            marginHorizontal: (0, _sizes.adjustSize)(10)
          },
          source: sourceArrow
        })))), this.state.dataSource.length ? _react.default.createElement(_react.Fragment, null, _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: "#E5E5E5",
            marginHorizontal: (0, _sizes.adjustSize)(80),
            height: (0, _sizes.adjustSize)(2),
            marginTop: (0, _sizes.adjustSize)(60)
          }
        }), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            flexDirection: 'row'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.choiceViewTitle
        }, _i18n.default.chooseViewType()), _react.default.createElement(_reactNative.TouchableOpacity, {
          ref: function ref(_ref8) {
            _this5.refPopup = _ref8;
          },
          onPress: function onPress() {
            _this5._onChangePress();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.choiceViewType
        }, this._selectedType == 0 ? _i18n.default.deviceType() : _i18n.default.roomType()), _react.default.createElement(_reactNative.Image, {
          style: {
            width: (0, _sizes.adjustSize)(24),
            height: (0, _sizes.adjustSize)(34),
            marginTop: (0, _sizes.adjustSize)(88),
            marginLeft: (0, _sizes.adjustSize)(10)
          },
          source: switchIcon
        }), _react.default.createElement(_Popup.default, {
          width: 160,
          height: 100,
          show: this.state.visible,
          top: this.state.popupTop,
          selectedType: this._selectedType,
          callback: this._popupShow.bind(this),
          closeModal: function closeModal(show) {
            _this5.setState({
              visible: show
            });
          },
          dataArray: [_i18n.default.deviceType(), _i18n.default.roomType()]
        })))), this._renderDevices()) : _react.default.createElement(_reactNative.View, {
          style: styles.matchedDevicesEmpty
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.matchedDevicesEmptyIcon,
          source: SourceNoDevices
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.matchedDevicesEmptyTip
        }, _i18n.default.noVoiceAuthedDevice()))));
      }
    }]);
    return ControlDevice;
  }(_react.Component);

  exports.default = ControlDevice;

  ControlDevice.navigationOptions = function (_ref9) {
    var navigation = _ref9.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        title: _i18n.default.controlDeviceTitle(),
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'column',
      flex: 1,
      backgroundColor: '#ffffff'
    },
    controlView: {
      marginTop: (0, _sizes.adjustSize)(40),
      flexDirection: 'row',
      flexWrap: "wrap",
      borderRadius: (0, _sizes.adjustSize)(33),
      paddingLeft: (0, _sizes.adjustSize)(30),
      marginHorizontal: (0, _sizes.adjustSize)(33),
      backgroundColor: '#3EB1FF1A'
    },
    controlTextTitle: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(42),
      fontWeight: 'bold',
      lineHeight: (0, _sizes.adjustSize)(66),
      color: "#3EB1FF",
      marginLeft: (0, _sizes.adjustSize)(22)
    },
    controlTextDes: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(38),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: "#3EB1FF",
      marginLeft: (0, _sizes.adjustSize)(22),
      opacity: 0.8,
      marginTop: (0, _sizes.adjustSize)(6)
    },
    choiceViewTitle: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(40),
      lineHeight: (0, _sizes.adjustSize)(48),
      width: (0, _sizes.adjustSize)(740),
      color: "#000000",
      fontWeight: 'bold',
      marginLeft: (0, _sizes.adjustSize)(70),
      marginTop: (0, _sizes.adjustSize)(80)
    },
    choiceViewType: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(30),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: "#666666",
      marginTop: (0, _sizes.adjustSize)(80)
    },
    arrow: {
      marginLeft: (0, _sizes.adjustSize)(20),
      marginRight: (0, _sizes.adjustSize)(20),
      alignContent: "center",
      justifyContent: "center"
    },
    categoryView: {
      marginTop: (0, _sizes.adjustSize)(30),
      flexDirection: 'row',
      flexWrap: "wrap",
      alignItems: "center",
      borderRadius: (0, _sizes.adjustSize)(33),
      marginHorizontal: (0, _sizes.adjustSize)(40),
      backgroundColor: '#F7F7F7'
    },
    matchedDevicesEmpty: {
      marginTop: (0, _sizes.adjustSize)(120),
      marginHorizontal: (0, _sizes.adjustSize)(72),
      alignItems: 'center'
    },
    matchedDevicesEmptyIcon: {
      width: (0, _sizes.adjustSize)(300),
      height: (0, _sizes.adjustSize)(300),
      resizeMode: 'contain'
    },
    matchedDevicesEmptyTip: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#999'
    }
  });
},10406,[14308,14305,14314,14344,14359,14347,14320,14323,14371,14377,14386,10297,10719,10033,10776,10782,10097,10200,10074,10043,10394,10409,10433,10439,10442,10445,10448]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _GlobalData = _$$_REQUIRE(_dependencyMap[8]);

  var _DeviceCell = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _ListCell = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var DeviceCard = function (_React$Component) {
    (0, _inherits2.default)(DeviceCard, _React$Component);

    function DeviceCard(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, DeviceCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DeviceCard).call(this, props, context));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(DeviceCard, [{
      key: "_renderDevices",
      value: function _renderDevices(devices) {
        var _this2 = this;

        if (devices) {
          return devices.map(function (device, index) {
            return _react.default.createElement(_reactNative.View, {
              key: device.name + index
            }, _react.default.createElement(_DeviceCell.default, {
              special: _this2.props.special || false,
              data: device,
              callback: _this2.props.callback
            }));
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var data = this.props.data;
        var title;

        if (data.type == null) {
          title = data.title;
        } else {
          switch (data.type) {
            case _GlobalData.CARDTYPE.NORMAL:
              title = data.home;
              break;

            case _GlobalData.CARDTYPE.SHARE:
              title = _i18n.default.home_share_device();
              break;

            case _GlobalData.CARDTYPE.THIRD:
              title = _i18n.default.home_third_platform();
              break;

            case _GlobalData.CARDTYPE.CUSTOM:
              title = _i18n.default.deviceDetailCustomIr();
              break;
          }
        }

        return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer
        }, this._renderTitle(title)), _react.default.createElement(_reactNative.View, null), this._renderDevices(data.devices));
      }
    }, {
      key: "_renderTitle",
      value: function _renderTitle(title) {
        var _this3 = this;

        if (this.props.special) {
          return _react.default.createElement(_ListCell.default, {
            data: {
              title: title,
              subTitle: _i18n.default.recommend_devices_subtitle()
            },
            style: {
              container: {
                height: 36
              },
              title: {
                fontSize: 11,
                color: '#999'
              },
              subTitle: {
                fontSize: 11
              }
            },
            callback: function callback(_) {
              return _this3._openMoreDevice();
            }
          });
        } else {
          return _react.default.createElement(_reactNative.Text, {
            style: styles.title
          }, title);
        }
      }
    }, {
      key: "_openMoreDevice",
      value: function _openMoreDevice() {
        if (this.props.navigateToMoreDevice) {
          this.props.navigateToMoreDevice();
        }
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }]);
    return DeviceCard;
  }(_react.default.Component);

  exports.default = DeviceCard;
  DeviceCard.propTypes = {};
  DeviceCard.defaultProps = {
    style: {
      marginTop: 10
    },
    data: {}
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#fff',
      borderRadius: 8
    },
    titleContainer: {
      fontSize: (0, _sizes.adjustSize)(30),
      color: "#8c93b0",
      marginTop: (0, _sizes.adjustSize)(60),
      marginHorizontal: (0, _sizes.adjustSize)(80)
    },
    title: {
      fontSize: 11,
      color: '#8c93b0',
      fontFamily: _GlobalData.myFontFamily.Regular
    },
    separatorRow: {
      flex: 1,
      flexDirection: 'row',
      height: 0.5,
      backgroundColor: 'rgba(0,0,0,0.05)'
    }
  });
},10409,[14305,14320,14323,14371,14377,14386,10297,10033,10412,10418,10424,10097,10776]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.recommendDevices = exports.ModelsHaveDoubleNames = exports.version = exports.myFontFamily = exports.bannersBackUp = exports.guideUrl = exports.bannerUrl = exports.ENV = exports.installUrl = exports.appID = exports.noDeviceTipPage = exports.noRoomTipPage = exports.pagePath4IR = exports.pagePath4TV = exports.customDirectiveListEvent = exports.customDirectiveList = exports.deleteCustomDirectiveEvent = exports.tokenReady = exports.tabInactive = exports.soundBoxListChange = exports.getTipsUrl = exports.voiceCtrlUrl = exports.CARDTYPE = exports.DEVICETYPE = undefined;

  var _Utils = _$$_REQUIRE(_dependencyMap[1]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var DEVICETYPE = {
    TV: 0,
    NORMAL: 1,
    SHARE: 2,
    THIRD: 3,
    CUSTOM: 4
  };
  exports.DEVICETYPE = DEVICETYPE;
  var CARDTYPE = {
    NORMAL: 1,
    SHARE: 2,
    THIRD: 3,
    CUSTOM: 4
  };
  exports.CARDTYPE = CARDTYPE;
  var voiceCtrlUrl = 'https://home.mi.com/newoperation/ability?platform=ios&sessionId=1&shortKey=494419149000000001';
  exports.voiceCtrlUrl = voiceCtrlUrl;
  var getTipsUrl = 'https://home.mi.com/newoperation/productAiCase?platform=ios&sessionId=1&model=';
  exports.getTipsUrl = getTipsUrl;
  var soundBoxListChange = 'soundBoxListChange';
  exports.soundBoxListChange = soundBoxListChange;
  var tabInactive = 'viewStatusChange';
  exports.tabInactive = tabInactive;
  var tokenReady = 'refresh_token_succeed';
  exports.tokenReady = tokenReady;
  var deleteCustomDirectiveEvent = 'event_delete_miot_device';
  exports.deleteCustomDirectiveEvent = deleteCustomDirectiveEvent;
  var customDirectiveList = 'command_device_skill_list';
  exports.customDirectiveList = customDirectiveList;
  var customDirectiveListEvent = 'event_device_skill_list';
  exports.customDirectiveListEvent = customDirectiveListEvent;
  var pagePath4TV = 'mico://smarthome/mitv?skillId=com.xiaomi.ai.mitvcontrol';
  exports.pagePath4TV = pagePath4TV;
  var pagePath4IR = 'mico://smarthome/ir_category';
  exports.pagePath4IR = pagePath4IR;
  var noRoomTipPage = 'https://cdn.cnbj1.fds.api.mi-img.com/mico/f1a12fe6-0abf-4faa-84f1-db22af204bf3';
  exports.noRoomTipPage = noRoomTipPage;
  var noDeviceTipPage = 'https://home.mi.com/views/ai-guidance.html';
  exports.noDeviceTipPage = noDeviceTipPage;
  var appID = 'xiaoai.mihome';
  exports.appID = appID;
  var installUrl = _Utils.isAndroid ? '' : 'https://itunes.apple.com/cn/app/%E7%B1%B3%E5%AE%B6-%E7%B2%BE%E5%93%81%E5%95%86%E5%9F%8E-%E6%99%BA%E8%83%BD%E7%94%9F%E6%B4%BB/id957323480?mt=8';
  exports.installUrl = installUrl;
  var ENV = 0;
  exports.ENV = ENV;
  var PREFIX = {
    0: 'https://home.mi.com/',
    1: 'http://st.iot.home.mi.com/'
  };
  var BASEURL = 'newoperation/banners/v2?';
  var bannerUrl = PREFIX[ENV] + BASEURL + "type=18&platform=1&uid=";
  exports.bannerUrl = bannerUrl;
  var guideUrl = PREFIX[ENV] + BASEURL + "type=6&platform=1&uid=";
  exports.guideUrl = guideUrl;
  var bannersBackUp = [{
    imgUrl: 'http://cnbj1.fds.api.xiaomi.com/plato-banner/developer_1549874498603jzjWO4Bk.png?GalaxyAccessKeyId=AKVGLQWBOVIRQ3XLEW&Expires=9223372036854775807&Signature=ZDf+pEQKa8D5ZI9GfB/fH8Z1RLg=',
    h5Url: 'https://home.mi.com/app_webview/newoperation/index.html#/article?articleId=305665091000000001'
  }];
  exports.bannersBackUp = bannersBackUp;
  var myFontFamily = {
    Medium: _Utils.isAndroid ? '' : 'PingFangSC-Medium',
    Regular: _Utils.isAndroid ? '' : 'PingFangSC-Regular',
    FZQK: _Utils.isAndroid ? 'fangzheng_qingke_benyue_song_jianti' : 'FZQKBYSJW--GB1-0'
  };
  exports.myFontFamily = myFontFamily;
  var version = '0.2.6';
  exports.version = version;
  var ModelsHaveDoubleNames = ['lumi.ctrl_neutral2.v1', 'lumi.ctrl_ln2.v1', 'lumi.ctrl_ln2.aq1'];
  exports.ModelsHaveDoubleNames = ModelsHaveDoubleNames;
  var recommendDevices = {
    type: 1,
    home: _i18n.default.recommend_devices_title(),
    devices: [{
      "recommend": true,
      "brandName": "米家",
      "icon_url": "https://cdn.cnbj0.fds.api.mi-img.com/miio.files/commonfile_png_f83a00cee71250f746e44a9ce5cdd62e.png",
      "buyUrl": {
        "youpinUrl": {
          "url": "https://youpin.mi.com/detail?gid=103046",
          "status": 1
        }
      },
      "tips": _i18n.default.recommend_devices_tip1(),
      "model": "chuangmi.plug.m1",
      "name": _i18n.default.recommend_devices_name1(),
      "bigIcon": "https://cdn.cnbj0.fds.api.mi-img.com/miio.files/commonfile_jpg_e3d441e1a6ba9cf46c49d36f1870118a.jpg"
    }, {
      "recommend": true,
      "brandName": "米家",
      "icon_url": "https://cdn.cnbj0.fds.api.mi-img.com/miio.files/commonfile_png_5f1f5c73f2ddd0da5abf434405ee2053.png",
      "buyUrl": {
        "youpinUrl": {
          "url": "https://youpin.mi.com/detail?gid=102763",
          "status": 1
        }
      },
      "tips": _i18n.default.recommend_devices_tip2(),
      "model": "yeelink.light.lamp1",
      "name": _i18n.default.recommend_devices_name2(),
      "bigIcon": "https://cdn.cnbj0.fds.api.mi-img.com/miio.files/commonfile_jpg_071ec88a07a954a41a59d78dcb579d52.jpg"
    }, {
      "recommend": true,
      "brandName": "米家",
      "icon_url": "https://cdn.cnbj0.fds.api.mi-img.com/miio.files/commonfile_png_064a5121ad6de87886ce1ad9bace67ab.png",
      "buyUrl": {
        "youpinUrl": {
          "url": "https://youpin.mi.com/detail?gid=101470",
          "status": 1
        }
      },
      "tips": _i18n.default.recommend_devices_tip3(),
      "model": "zhimi.airpurifier.v6",
      "name": _i18n.default.recommend_devices_name3(),
      "bigIcon": "https://cdn.cnbj0.fds.api.mi-img.com/miio.files/commonfile_jpg_b1efd4a05e071bb5db0da442a24ae187.jpg"
    }]
  };
  exports.recommendDevices = recommendDevices;
},10412,[14305,10415,10097]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.MyString = exports.Common = exports.MHRequest = exports.MHNative = exports.DataParser = exports.isIOS = exports.isAndroid = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _GlobalData = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _native = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _MJNative$MijiaAndroi = {
    MJNative: {
      log: function log() {}
    },
    MijiaAndroidService: {}
  },
      MJNative = _MJNative$MijiaAndroi.MJNative,
      MijiaAndroidService = _MJNative$MijiaAndroi.MijiaAndroidService;
  var isAndroid = _reactNative.Platform.OS === 'android';
  exports.isAndroid = isAndroid;
  var isIOS = _reactNative.Platform.OS === 'ios';
  exports.isIOS = isIOS;

  var nativeModule = _reactNative.Platform.select({
    android: MijiaAndroidService,
    ios: MJNative
  });

  var DataParser = {
    getDeviceCards: function getDeviceCards(devices, homelist, tvList) {
      var _this = this;

      var deviceList = [];
      var homeRoomMap = {};

      for (var _iterator = homelist, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var _home = _ref;
        homeRoomMap[_home.name] = _home.roomlist.map(function (room) {
          return {
            name: room.name,
            id: room.id
          };
        });
      }

      _GlobalData.default.homelist = homelist;
      _GlobalData.default.homeRoomMap = homeRoomMap;
      devices.forEach(function (device) {
        var allTips = device.tips.reduce(function (list, tip) {
          return list.concat(tip.contents || []);
        }, []);
        var obj = _this.getRoomForDevice(device.did, homelist) || {};
        deviceList.push((0, _extends2.default)((0, _objectSpread2.default)({
          randomTwo: Common.getRandomItems(allTips, 2)
        }, obj), device));
      });

      var _this$getRoomForDevic = this.getRoomForDevice(_GlobalData.default.currentSoundBox.miotDID, homelist),
          currentHome = _this$getRoomForDevic.home;

      return this.parse2Cards(deviceList, currentHome, tvList);
    },
    fixUrl: function fixUrl(device) {
      for (var key in device) {
        if (Common.typeOf(device[key]) === 'string' && device[key].startsWith('http://')) {
          device[key] = device[key].replace('http://', 'https://');
        }
      }
    },
    getRoomForDevice: function getRoomForDevice(did, homelist) {
      if (Common.typeOf(homelist) !== 'array') return;

      for (var _iterator2 = homelist, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
        var _ref2;

        if (_isArray2) {
          if (_i2 >= _iterator2.length) break;
          _ref2 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          _ref2 = _i2.value;
        }

        var _home2 = _ref2;

        if (_home2.dids.includes(did)) {
          return {
            home: _home2.name,
            room: _i18n.default.deviceDefaultRoom(),
            homeCreateTime: _home2.create_time
          };
        }

        for (var _iterator3 = _home2.roomlist, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
          var _ref3;

          if (_isArray3) {
            if (_i3 >= _iterator3.length) break;
            _ref3 = _iterator3[_i3++];
          } else {
            _i3 = _iterator3.next();
            if (_i3.done) break;
            _ref3 = _i3.value;
          }

          var _room = _ref3;

          if (_room.dids.includes(did)) {
            return {
              home: _home2.name,
              room: _room.name,
              homeCreateTime: _home2.create_time
            };
          }
        }
      }
    },
    getHomeRoomNameWithId: function getHomeRoomNameWithId(homeId, homeName, roomId) {
      if (!_GlobalData.default.homelist) return undefined;
      var homelist = Array.from(_GlobalData.default.homelist);
      var home = homelist.find(function (home) {
        return home.id == homeId;
      }) || homelist.find(function (home) {
        return home.name === homeName;
      });
      var roomlist = Array.from(home.roomlist || []);
      var room = roomlist.find(function (room) {
        return room.id == roomId;
      }) || {};
      return {
        homeName: home.name || '',
        roomName: room.name || _i18n.default.deviceDefaultRoom()
      };
    },
    getHomeRoomIdWithName: function getHomeRoomIdWithName(homeName, roomName) {
      if (!_GlobalData.default.homelist) return undefined;
      var homelist = Array.from(_GlobalData.default.homelist);
      var home = homelist.find(function (home) {
        return home.name === homeName;
      }) || {};
      var roomlist = Array.from(home.roomlist || []);
      var room = roomlist.find(function (room) {
        return room.name === roomName;
      }) || {};
      return {
        homeId: home.id || '',
        roomId: room.id || home.id
      };
    },
    parse2Cards: function parse2Cards(deviceList, currentHome, tvList) {
      var normalDevices = {};
      var shareDevices = [];
      var thirdDevices = [];
      var devices = [];

      for (var _iterator4 = deviceList, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
        var _ref4;

        if (_isArray4) {
          if (_i4 >= _iterator4.length) break;
          _ref4 = _iterator4[_i4++];
        } else {
          _i4 = _iterator4.next();
          if (_i4.done) break;
          _ref4 = _i4.value;
        }

        var _device = _ref4;

        switch (_device.from) {
          case _GlobalData.DEVICETYPE.NORMAL:
            if (_device.home) {
              _device.platform = _i18n.default.deviceDetailMihome();

              if (normalDevices[_device.home]) {
                normalDevices[_device.home].devices.push(_device);
              } else {
                normalDevices[_device.home] = {
                  type: _GlobalData.CARDTYPE.NORMAL,
                  home: _device.home,
                  homeCreateTime: _device.homeCreateTime,
                  devices: [_device],
                  weight: _device.home === currentHome ? 1 : 0
                };
              }
            }

            break;

          case _GlobalData.DEVICETYPE.SHARE:
            shareDevices.push((0, _extends2.default)(_device, {
              whoShared: _device.platform,
              platform: _i18n.default.deviceDetailMihome()
            }));
            break;

          case _GlobalData.DEVICETYPE.THIRD:
            thirdDevices.push(_device);
            break;

          case _GlobalData.DEVICETYPE.CUSTOM:
            _device.platform = _i18n.default.deviceDetailMihome();

            if (normalDevices[_i18n.default.deviceDetailCustomIr()]) {
              normalDevices[_i18n.default.deviceDetailCustomIr()].devices.push(_device);
            } else {
              normalDevices[_i18n.default.deviceDetailCustomIr()] = {
                type: _GlobalData.CARDTYPE.CUSTOM,
                home: _device.home,
                homeCreateTime: _device.homeCreateTime,
                devices: [_device],
                weight: -1
              };
            }

            break;
        }
      }

      devices = Object.values(normalDevices).sort(function (a, b) {
        if (b.weight !== a.weight) return b.weight - a.weight;
        return a.homeCreateTime - b.homeCreateTime;
      });

      if (devices.length > 0) {
        _GlobalData.default.canShowGuide = true;
      } else {
        try {
          _reactNative.AsyncStorage.setItem('hasReadGuide', 'yes');
        } catch (error) {}
      }

      if (tvList && tvList.length > 0) {
        if (devices.length > 0 && devices[0].home === currentHome) {
          var _devices$0$devices;

          (_devices$0$devices = devices[0].devices).push.apply(_devices$0$devices, (0, _toConsumableArray2.default)(tvList));
        } else {
          devices.unshift({
            type: _GlobalData.CARDTYPE.NORMAL,
            home: currentHome,
            devices: tvList
          });
        }
      }

      if (shareDevices.length > 0) {
        devices.push({
          type: _GlobalData.CARDTYPE.SHARE,
          devices: shareDevices
        });
      }

      if (thirdDevices.length > 0) {
        devices.push({
          type: _GlobalData.CARDTYPE.THIRD,
          devices: thirdDevices
        });
      }

      return devices;
    },
    parseDevices: function parseDevices(devices) {
      var flag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var parsedDevices = {};
      var modelNameMap = {};

      if (Object.prototype.toString.call(devices) === '[object Array]') {
        devices.forEach(function (device) {
          var _device$product = device.product,
              brandName = _device$product.brandName,
              realIcon = _device$product.realIcon,
              buyUrl = _device$product.buyUrl,
              bigIcon = _device$product.bigIcon,
              bigIcons = _device$product.bigIcons,
              type = _device$product.type,
              model = _device$product.model,
              name = _device$product.name;
          modelNameMap[model] = name;
          brandName = brandName.cn;
          var obj = {
            brandName: brandName,
            realIcon: realIcon,
            buyUrl: buyUrl,
            model: model,
            name: name,
            bigIcon: bigIcon,
            bigIcons: bigIcons
          };

          if (parsedDevices[type]) {
            parsedDevices[type].push(obj);
          } else if (type !== undefined) {
            parsedDevices[type] = [obj];
          }
        });
        if (flag) return modelNameMap;
        parsedDevices['开关'] = [];
        parsedDevices['传感器'] = [];

        for (var key in parsedDevices) {
          if (key.startsWith('墙壁开关')) {
            parsedDevices['开关'] = parsedDevices['开关'].concat(parsedDevices[key]);
            delete parsedDevices[key];
          }

          if (key.startsWith('插排') || key.startsWith('墙壁插座')) {
            parsedDevices['插座／插排'] = parsedDevices['插座／插排'].concat(parsedDevices[key]);
            delete parsedDevices[key];
          }

          if (/.+传感器/.test(key)) {
            parsedDevices['传感器'] = parsedDevices['传感器'].concat(parsedDevices[key]);
            delete parsedDevices[key];
          }
        }

        return {
          parsedDevices: parsedDevices,
          modelNameMap: modelNameMap
        };
      }
    }
  };
  exports.DataParser = DataParser;

  function getStatusBarHeight() {
    if (isAndroid) {
      return 0;
    } else {
      return 0;
    }
  }

  function jumpToAndroid(command, param) {
    return new Promise(function (resolve, reject) {
      MijiaAndroidService.isAppInstalled(MijiaAndroidService.mijia_package_name, function (yes) {
        if (yes) {
          MijiaAndroidService.postCommand(command, JSON.stringify(param));
          resolve(true);
        } else {
          MijiaAndroidService.openMarketForApp(MijiaAndroidService.mijia_package_name);
        }
      });
    });
  }

  var MHNative = {
    uid: isAndroid ? MijiaAndroidService.account || '' : MJNative.uid || '',
    statusBarHeight: getStatusBarHeight(),
    openMijiaMarket: function openMijiaMarket() {
      if (!isAndroid) {
        return;
      }

      MijiaAndroidService.openMarketForApp(MijiaAndroidService.mijia_package_name);
    },
    getAuth: function getAuth(did) {
      if (isAndroid) {
        return jumpToAndroid("getAuth", {
          did: did
        });
      } else {
        return new Promise(function (resolve, reject) {
          MJNative.empowerDevice(did, function (success, result) {
            resolve(success);
          });
        });
      }
    },
    getAuthForThirdPlatform: function getAuthForThirdPlatform() {
      if (isAndroid) {
        return jumpToAndroid("getAuthForThirdPlatform", {});
      } else {
        return new Promise(function (resolve, reject) {
          MJNative.empowerThirdPartyDeviceWithCallback(function (success, result) {
            resolve(success);
          });
        });
      }
    },
    log: function log() {},
    changeCurrentSoundBox: function changeCurrentSoundBox(id) {
      if (isAndroid) {
        MijiaAndroidService.postCommand("changeCurrentSoundBox", JSON.stringify({
          id: id
        }));
      } else {
        MJNative.changeCurrentSoundBox(id);
      }
    },
    hideTabBar: function hideTabBar(hidden) {
      if (isAndroid) {
        MijiaAndroidService.postCommand('miot_tab_bar_action', hidden ? 'hide' : 'show');
      } else {
        MJNative.hideTabBar && MJNative.hideTabBar(hidden);
      }
    },
    deleteCustomIR: function deleteCustomIR(param) {
      nativeModule.postCommand('command_delete_miot_device', Common.safeStringify(param));
    },
    addCustomIRDirective: function addCustomIRDirective(param) {
      nativeModule.postCommand('command_add_skill', Common.safeStringify(param));
    },
    editCustomIRDirective: function editCustomIRDirective(param) {
      nativeModule.postCommand('command_edit_skill', Common.safeStringify(param));
    },
    getCustomIRSkills: function getCustomIRSkills(param) {
      nativeModule.postCommand('command_device_skill_list', Common.safeStringify(param));
    },
    _openMHInfraedPage: function _openMHInfraedPage(param) {
      if (isAndroid) {
        jumpToAndroid('command_jump_mijia_detail', param);
      } else {
        var url = "mihome://device?did=" + param.did + "&uid=" + this.uid + "&server=cn";

        _reactNative.Linking.canOpenURL(url).then(function (supported) {
          if (!supported) {
            _reactNative.Linking.openURL(_GlobalData.installUrl).catch(function (e) {});
          } else {
            return _reactNative.Linking.openURL(url);
          }
        }).catch(function (e) {
          return undefined;
        });
      }
    },
    showTopView: function showTopView(show) {
      if (isAndroid) {
        MijiaAndroidService.postCommand('miot_rn_top_view_action', show ? 'enter' : 'leave');
      }
    },
    _processTV: function _processTV(list) {
      var tvList;
      return _regenerator.default.async(function _processTV$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              tvList = [];

              if (list && list.length > 0) {
                tvList = list.map(function (item) {
                  return {
                    type: _GlobalData.DEVICETYPE.TV,
                    name: item.name || '',
                    icon_url: item.icon || '',
                    randomTwo: item.skills || []
                  };
                });
                _GlobalData.default.tvList = tvList;
              }

              return _context.abrupt("return", tvList);

            case 3:
            case "end":
              return _context.stop();
          }
        }
      });
    },
    MiTVInfoForSoundBox: function MiTVInfoForSoundBox(id) {
      var _this2 = this;

      return new Promise(function (resolve, reject) {
        if (isAndroid) {
          MijiaAndroidService.getLocalData("MiTVInfoForSoundBox", JSON.stringify({
            id: id
          }), function (ok, res, err) {
            if (ok) {
              try {
                res = JSON.parse(res) || {};
                resolve(_this2._processTV(res.tvInfoArray || []));
              } catch (e) {
                resolve(_this2._processTV([]));
              }
            } else {
              resolve(_this2._processTV([]));
            }
          });
        } else {
          MJNative.MiTVInfoForSoundBox(id, function (success, result) {
            if (success) {
              resolve(_this2._processTV(result));
            } else {
              resolve(_this2._processTV([]));
            }
          });
        }
      }).catch(function (e) {});
    },
    openTVPage: function openTVPage() {
      if (isAndroid) {
        MijiaAndroidService.postCommand("openAINativePage", JSON.stringify({
          url: _GlobalData.pagePath4TV
        }));
      } else {
        MJNative.openAINativePage(_GlobalData.pagePath4TV);
      }
    },
    openIRPage: function openIRPage() {
      if (isAndroid) {
        MijiaAndroidService.postCommand("openAINativePage", JSON.stringify({
          url: _GlobalData.pagePath4IR
        }));
      } else {
        MJNative.openAINativePage(_GlobalData.pagePath4IR);
      }
    },
    statPointWithAPPID: function statPointWithAPPID(type, key, value) {
      var extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

      if (isAndroid) {
        MijiaAndroidService.reportStat(_GlobalData.appID, type, key, Common.safeStringify(value) || "", Common.safeStringify(extra) || "", "");
      } else {
        MJNative.statPointWithAPPID(_GlobalData.appID, type, key, value, extra);
      }
    }
  };
  exports.MHNative = MHNative;
  var MHRequest = {
    callSmartHomeAPI: function callSmartHomeAPI(api, params) {
      return new Promise(function (resolve, reject) {
        _native.default.MIOTRPC.standardCall(api, params, function (ok, res) {
          if (ok) {
            return resolve(res);
          }

          reject(res);
        });
      });
    },
    myFetch: function myFetch(url) {
      return fetch(url, {
        headers: {
          'Is-Home-3e10fq3b2a': !!_GlobalData.ENV
        }
      }).then(function (response) {
        return response.json();
      });
    }
  };
  exports.MHRequest = MHRequest;
  var Common = {
    getRealInitialProps: function getRealInitialProps(props) {
      if (isAndroid) {
        var str = (props || {}).initialProps;

        try {
          return JSON.parse(str);
        } catch (err) {
          return {};
        }
      } else {
        return props;
      }
    },
    safeStringify: function safeStringify(obj) {
      if (!obj) return obj;

      try {
        if (typeof obj === 'string') {
          return obj;
        }

        return JSON.stringify(obj);
      } catch (e) {
        return null;
      }
    },
    deviceFactory: function deviceFactory(obj, type) {
      return (0, _extends2.default)({
        category: "",
        did: "",
        from: type,
        icon_url: "http://static.home.mi.com/app/image/get/file/developer_1529916749bvez8rxo.png",
        icon_url_480: "",
        model: "",
        name: "",
        tips: []
      }, obj);
    },
    isSoundBoxChanged: function isSoundBoxChanged(pre, post) {
      if (this.typeOf(pre) !== this.typeOf(post) || pre.length !== post.length) return true;
      var preCurrent = pre.filter(function (item) {
        return item.current;
      }) || {};
      var postCurrent = post.filter(function (item) {
        return item.current;
      }) || {};
      return preCurrent[0].miotDID !== postCurrent[0].miotDID;
    },
    debounce: function debounce(action, idle) {
      var last = null;
      return function () {
        for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {
          params[_key] = arguments[_key];
        }

        var ctx = this,
            args = params;
        clearTimeout(last);
        last = setTimeout(function () {
          action.apply(ctx, args);
        }, idle);
      };
    },
    typeOf: function typeOf(obj) {
      return Object.prototype.toString.call(obj).match(/\[object (\w+)\]/)[1].toLowerCase();
    },
    getRandomInt: function getRandomInt(max) {
      var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      min = Math.ceil(min);
      max = Math.floor(max);
      return Math.floor(Math.random() * (max - min)) + min;
    },
    getRandomItems: function getRandomItems(array) {
      var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
      if (this.typeOf(array) !== 'array') return;
      if (array.length <= n) return array;
      var res = [];
      var selected = [];

      while (res.length < n) {
        var index = this.getRandomInt(array.length);

        if (!selected.includes(index)) {
          res.push(array[index]);
          selected.push(index);
        }
      }

      return res;
    },
    isInvalid: function isInvalid(str) {
      if (this.typeOf(str) !== 'string') return true;
      return str.trim() === '';
    }
  };
  exports.Common = Common;
  var MyString = {
    isContainsEmoji: function isContainsEmoji(str) {
      for (var i = 0; i < str.length; i++) {
        var hs = str.charCodeAt(i);

        if (0xd800 <= hs && hs <= 0xdbff) {
          if (str.length > 1) {
            var ls = str.charCodeAt(i + 1);
            var uc = (hs - 0xd800) * 0x400 + (ls - 0xdc00) + 0x10000;

            if (0x1d000 <= uc && uc <= 0x1f9c0) {
              return true;
            }
          }
        } else {
          if (0x2100 <= hs && hs <= 0x27ff && hs != 0x2103) {
            return true;
          } else if (0x2B05 <= hs && hs <= 0x2b07) {
            return true;
          } else if (0x2934 <= hs && hs <= 0x2935) {
            return true;
          } else if (0x3297 <= hs && hs <= 0x3299) {
            return true;
          } else if (hs == 0xa9 || hs == 0xae || hs == 0x303d || hs == 0x3030 || hs == 0x2b55 || hs == 0x2b1c || hs == 0x2b50 || hs == 0x231a || hs == 0x2b1b) {
            return true;
          }

          if (str.length > 1) {
            var _ls = str.charCodeAt(i + 1);

            if (_ls == 0x20e3 || _ls == 0xfe0f || _ls == 0xd83c) {
              return true;
            }
          }
        }
      }
    },
    isContainsNotSupportedChar: function isContainsNotSupportedChar(str) {
      if (str === '') return false;
      return !/^[^-="“”!！？\$\^\*{}<>\?\[\]\|——|\/]+$/.test(str);
    },
    numOfWords: function numOfWords(str) {
      if (!str) return 0;

      if (typeof str != "string") {
        str += "";
      }

      return Math.ceil(str.replace(/[^\x00-\xff]/g, "01").length);
    },
    isOutOfLengthRange: function isOutOfLengthRange(str, limit) {
      var length = this.numOfWords(str);
      return length < limit[0] || length > limit[1];
    }
  };
  exports.MyString = MyString;
},10415,[14308,14305,14674,14359,14314,14344,10033,10412,10097,10005]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _GlobalData = _$$_REQUIRE(_dependencyMap[8]);

  var _Utils = _$$_REQUIRE(_dependencyMap[9]);

  var _Commands = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _resources = _$$_REQUIRE(_dependencyMap[12]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _default = function (_React$Component) {
    (0, _inherits2.default)(_default, _React$Component);

    function _default(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, _default);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(_default).call(this, props, context));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(_default, [{
      key: "_renderSubtitle",
      value: function _renderSubtitle(data) {
        switch (data.from) {
          case _GlobalData.DEVICETYPE.NORMAL:
          case _GlobalData.DEVICETYPE.CUSTOM:
            return _react.default.createElement(_reactNative.View, {
              style: {
                flex: 1
              }
            }, _react.default.createElement(_reactNative.View, {
              style: styles.subTitleNormalContainer
            }, _react.default.createElement(_reactNative.Text, {
              numberOfLines: 1,
              ellipsizeMode: "tail",
              style: styles.subTitleNormalText
            }, " |  " + (data.room || ''))));

          case _GlobalData.DEVICETYPE.SHARE:
            return _react.default.createElement(_reactNative.Text, {
              numberOfLines: 1,
              ellipsizeMode: "tail",
              style: styles.subTitleShareText
            }, " | " + (_i18n.default.device_cell_from() + (data.whoShared || '')));

          case _GlobalData.DEVICETYPE.THIRD:
            return _react.default.createElement(_reactNative.Text, {
              numberOfLines: 1,
              ellipsizeMode: "tail",
              style: styles.subTitleShareText
            }, data.platform || '');

          case _GlobalData.DEVICETYPE.TV:
            return null;
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var data = this.props.data;
        if (data === undefined) return;
        var special = this.props.special || false;
        var uri = data.icon_url;

        if (_Utils.isIOS) {
          if (uri.indexOf('?') !== -1) {
            uri += "&time=" + new Date();
          } else {
            uri += "?time=" + new Date();
          }
        }

        return _react.default.createElement(_reactNative.TouchableHighlight, {
          style: {
            flex: 1,
            flexWrap: "wrap"
          },
          underlayColor: "#f6f6f6",
          onPress: function onPress() {
            return _this2.props.callback(data);
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.categoryView
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.iconContainer, data.from === _GlobalData.DEVICETYPE.CUSTOM ? {
            height: 70
          } : {}]
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          resizeMode: "contain",
          source: {
            uri: uri
          }
        })), special ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, {
          style: {
            fontFamily: _GlobalData.myFontFamily.Regular,
            fontSize: 14,
            marginBottom: 2
          }
        }, data.name || ''), _react.default.createElement(_reactNative.Text, {
          style: {
            fontFamily: _GlobalData.myFontFamily.Regular,
            fontSize: 12,
            color: '#999'
          }
        }, "\u201C" + (data.tips || '') + "\u201D")) : _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            marginRight: 10,
            marginTop: (0, _sizes.adjustSize)(80)
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          ellipsizeMode: "tail",
          style: [styles.title, _Utils.MyString.numOfWords(data.name) > 24 ? {
            flex: 1
          } : {}]
        }, data.name || ''), this._renderSubtitle(data)), _react.default.createElement(_Commands.default, {
          contents: data.randomTwo || []
        })), _react.default.createElement(_reactNative.Image, {
          style: styles.arrow,
          source: _resources.Images.common.right_arrow
        })));
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }]);
    return _default;
  }(_react.default.Component);

  exports.default = _default;
  _default.propTypes = {};
  _default.defaultProps = {
    special: false,
    data: {
      name: "灯泡",
      from: _GlobalData.DEVICETYPE.NORMAL,
      room: "客厅",
      whoShared: "Jonner",
      platform: "云起智能",
      imageUrl: "",
      playList: ["灯泡暗一点", "灯泡亮度调到五十"]
    },
    callback: function callback() {}
  };

  var styles = _reactNative.StyleSheet.create({
    categoryView: {
      flexDirection: 'row',
      flexWrap: "wrap",
      alignItems: "center",
      alignContent: "center",
      borderRadius: (0, _sizes.adjustSize)(33),
      marginHorizontal: (0, _sizes.adjustSize)(40),
      marginVertical: (0, _sizes.adjustSize)(30),
      backgroundColor: '#F7F7F7'
    },
    iconContainer: {
      width: (0, _sizes.adjustSize)(180),
      height: 105,
      justifyContent: 'center',
      alignItems: 'center'
    },
    icon: {
      width: (0, _sizes.adjustSize)(120),
      height: (0, _sizes.adjustSize)(120),
      marginHorizontal: (0, _sizes.adjustSize)(20)
    },
    titleContainer: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    title: {
      fontSize: 11,
      lineHeight: 20,
      color: '#666666',
      fontFamily: _GlobalData.myFontFamily.Regular
    },
    subTitleNormalContainer: {
      alignSelf: 'flex-start',
      padding: 3,
      borderRadius: 3,
      justifyContent: 'center',
      alignItems: 'center'
    },
    subTitleNormalText: {
      fontSize: 10,
      color: '#666666'
    },
    subTitleShareText: {
      flex: 1,
      fontSize: 11,
      fontFamily: _GlobalData.myFontFamily.Regular,
      color: '#666666',
      lineHeight: 20
    },
    arrow: {
      marginRight: (0, _sizes.adjustSize)(40),
      alignContent: "center",
      justifyContent: "center"
    }
  });
},10418,[14305,14320,14323,14371,14377,14386,10297,10033,10412,10415,10421,10776,10077,10097]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _Utils = _$$_REQUIRE(_dependencyMap[8]);

  var _GlobalData = _$$_REQUIRE(_dependencyMap[9]);

  var _sizes = _$$_REQUIRE(_dependencyMap[10]);

  var Commands = function (_React$Component) {
    (0, _inherits2.default)(Commands, _React$Component);

    function Commands(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, Commands);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Commands).call(this, props, context));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(Commands, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: this.props.style
        }, this.props.contents.map(function (item, i) {
          if (_Utils.Common.isInvalid(item)) return;
          return _react.default.createElement(_reactNative.Text, {
            key: i,
            style: [styles.content, {
              marginTop: 5,
              marginLeft: _Utils.isIOS ? -10 : 0
            }]
          }, "\"" + item.replace(/ /g, '') + "\"");
        }));
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }]);
    return Commands;
  }(_react.default.Component);

  exports.default = Commands;
  Commands.propTypes = {};
  Commands.defaultProps = {
    style: {
      marginTop: 5
    }
  };

  _Utils.MHNative.log('- MiHomeTab - ', '✅当前字体：', _GlobalData.myFontFamily);

  var styles = _reactNative.StyleSheet.create({
    content: {
      fontSize: (0, _sizes.adjustSize)(38),
      color: "#000000",
      lineHeight: 19,
      fontWeight: 'bold',
      fontFamily: _GlobalData.myFontFamily.FZQK
    }
  });
},10421,[14305,14320,14323,14371,14377,14386,10297,10033,10415,10412,10776]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _GlobalData = _$$_REQUIRE(_dependencyMap[9]);

  var ListCell = function (_React$Component) {
    (0, _inherits2.default)(ListCell, _React$Component);

    function ListCell(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ListCell);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListCell).call(this, props, context));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(ListCell, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var data = this.props.data;
        var style = this.props.style;
        return _react.default.createElement(_reactNative.TouchableHighlight, {
          disabled: data.disabled,
          style: {
            flex: 1
          },
          underlayColor: "#f6f6f6",
          onPress: function onPress() {
            return _this2.props.callback();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.container, style.container]
        }, data.icon && _react.default.createElement(_reactNative.Image, {
          source: data.icon,
          style: {
            width: 38,
            height: 38,
            marginRight: 13
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: [styles.title, style.title]
        }, data.title), data.subTitle && _react.default.createElement(_reactNative.View, {
          style: {
            marginRight: 4
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.subTitle, style.subTitle]
        }, data.subTitle), data.showDot && _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[10]),
          style: styles.dot
        })), !data.disabled && _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[11]),
          style: styles.arrow
        })));
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }]);
    return ListCell;
  }(_react.default.Component);

  exports.default = ListCell;
  ListCell.propTypes = {};
  ListCell.defaultProps = {
    data: {
      title: '',
      subTitle: '',
      disabled: false,
      showDot: false
    },
    style: {
      container: {},
      title: {},
      subTitle: {}
    },
    callback: function callback() {}
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      marginLeft: 15,
      marginRight: 6,
      height: 51,
      flexDirection: 'row',
      alignItems: 'center'
    },
    title: {
      flex: 1,
      fontFamily: _GlobalData.myFontFamily.Regular,
      fontSize: 12,
      color: '#000'
    },
    subTitle: {
      fontFamily: _GlobalData.myFontFamily.Regular,
      fontSize: 12,
      color: '#999'
    },
    arrow: {
      width: 24,
      height: 24
    },
    dot: {
      position: 'absolute',
      top: -5,
      right: -5,
      width: 9,
      height: 9
    }
  });
},10424,[14305,14320,14323,14371,14377,14386,10297,10033,10318,10412,10427,10430]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/device/common/images",
    "width": 9,
    "height": 9,
    "scales": [2, 3],
    "hash": "46a2b565532aff62357df16a9afe11a2",
    "name": "dot",
    "type": "png"
  });
},10427,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/device/common/images",
    "width": 24,
    "height": 24,
    "scales": [2, 3],
    "hash": "9e156bdedf261c34c7efa122ba70294b",
    "name": "right_arrow",
    "type": "png"
  });
},10430,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var mwidth = 160;
  var mheight = 100;
  var bgColor = '#ffffff';
  var marginTop;
  var dataArray;

  var Popup = function (_React$Component) {
    (0, _inherits2.default)(Popup, _React$Component);

    function Popup(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Popup);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Popup).call(this, props));
      _this.state = {
        isVisible: _this.props.show,
        callback: _this.props.callback,
        selectedType: _this.props.selectedType,
        top: _this.props.top
      };
      mwidth = _this.props.width || 160;
      mheight = _this.props.height || 100;
      marginTop = _this.props.top;
      dataArray = _this.props.dataArray;
      return _this;
    }

    (0, _createClass2.default)(Popup, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        marginTop = nextProps.top;
        this.setState({
          isVisible: nextProps.show,
          selectedType: nextProps.selectedType
        });
      }
    }, {
      key: "closeModal",
      value: function closeModal() {
        this.setState({
          isVisible: false
        });
        this.props.closeModal(false);
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Modal, {
          transparent: true,
          visible: this.state.isVisible,
          animationType: 'fade',
          onRequestClose: function onRequestClose() {
            return _this2.closeModal();
          }
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.container,
          activeOpacity: 1,
          onPress: function onPress() {
            return _this2.closeModal();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: bgColor,
            width: mwidth,
            height: mheight,
            position: 'absolute',
            left: width - mwidth - 10,
            top: marginTop,
            justifyContent: 'center',
            alignItems: 'center',
            borderRadius: 10
          }
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          activeOpacity: 1,
          onPress: function onPress() {
            _this2.props.callback(0);
          },
          style: this.state.selectedType == 0 ? styles.selectItemView : styles.normalItemView
        }, _react.default.createElement(_reactNative.Text, {
          style: this.state.selectedType == 0 ? styles.selectTextStyle : styles.normalTextStyle
        }, dataArray[0]), _react.default.createElement(_reactNative.Image, {
          style: styles.imgStyle,
          source: this.state.selectedType == 0 ? _$$_REQUIRE(_dependencyMap[8]) : ""
        })), _react.default.createElement(_reactNative.TouchableOpacity, {
          activeOpacity: 1,
          onPress: function onPress() {
            _this2.props.callback(1);
          },
          style: this.state.selectedType == 1 ? styles.selectItemView : styles.normalItemView
        }, _react.default.createElement(_reactNative.Text, {
          style: this.state.selectedType == 1 ? styles.selectTextStyle : styles.normalTextStyle
        }, dataArray[1]), _react.default.createElement(_reactNative.Image, {
          style: styles.imgStyle,
          source: this.state.selectedType == 1 ? _$$_REQUIRE(_dependencyMap[8]) : ""
        }))))));
      }
    }]);
    return Popup;
  }(_react.default.Component);

  exports.default = Popup;

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: "100%",
      height: "100%",
      backgroundColor: '#00000060'
    },
    modal: {
      backgroundColor: bgColor,
      width: mwidth,
      height: mheight,
      position: 'absolute',
      left: width - mwidth - 10,
      top: marginTop,
      justifyContent: 'center',
      alignItems: 'center',
      borderRadius: 10
    },
    normalItemView: {
      width: mwidth,
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center',
      flex: 1
    },
    selectItemView: {
      width: mwidth,
      backgroundColor: '#3EB1FF1A',
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center',
      flex: 1
    },
    normalTextStyle: {
      color: '#000000',
      fontWeight: 'bold',
      fontSize: 13,
      marginLeft: 2
    },
    selectTextStyle: {
      color: '#3EB1FF',
      fontWeight: 'bold',
      fontSize: 13,
      marginLeft: 2
    },
    imgStyle: {
      width: 12,
      height: 12,
      marginLeft: 50
    }
  });
},10433,[14305,14320,14323,14371,14377,14386,10297,10033,10436]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 64,
    "height": 64,
    "scales": [1],
    "hash": "5fbf35b1a88b8a818f0d063990b67170",
    "name": "selected-item",
    "type": "png"
  });
},10436,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 132,
    "height": 132,
    "scales": [1],
    "hash": "9438fa6e4406fe643ade999b586f9341",
    "name": "microphone",
    "type": "png"
  });
},10439,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 44,
    "height": 48,
    "scales": [1],
    "hash": "2225db6473897174f40cc015d2634c22",
    "name": "arrow-blue",
    "type": "png"
  });
},10442,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 24,
    "height": 34,
    "scales": [1],
    "hash": "e68a6ca1ad768eb4f27fbe085f0cc975",
    "name": "switch",
    "type": "png"
  });
},10445,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 100,
    "height": 100,
    "scales": [1],
    "hash": "3ed66a8737647b14b403bd661d6fb045",
    "name": "nodevices",
    "type": "png"
  });
},10448,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _decodeUriComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _MessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _sizes = _$$_REQUIRE(_dependencyMap[16]);

  var _fonts = _$$_REQUIRE(_dependencyMap[17]);

  var _fns = _$$_REQUIRE(_dependencyMap[18]);

  var _Strings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _apis = _$$_REQUIRE(_dependencyMap[21]);

  var _globalData = _$$_REQUIRE(_dependencyMap[22]);

  var _ringsManager = _$$_REQUIRE(_dependencyMap[23]);

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[24]);

  var _supports = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

  var SourceMusic = _$$_REQUIRE(_dependencyMap[26]);

  var SourceNatural = _$$_REQUIRE(_dependencyMap[27]);

  var SourceInterest = _$$_REQUIRE(_dependencyMap[28]);

  var SourceAdd = _$$_REQUIRE(_dependencyMap[29]);

  var SourceOpacity = _$$_REQUIRE(_dependencyMap[30]);

  var ReverseTabStrings = {
    1: '音乐',
    2: '自然',
    3: '趣味'
  };

  function formatTime(v) {
    if (!v) {
      return '-';
    }

    var then = new Date(v * 1000);
    var h = then.getHours();
    var m = then.getMinutes();
    return (0, _fns.fixNum)(h) + ":" + (0, _fns.fixNum)(m);
  }

  function formatDate(v) {
    if (!v) {
      return '-';
    }

    var then = new Date(v);
    var m = then.getMonth() + 1;
    var d = then.getDate();
    return (0, _fns.fixNum)(m) + "/" + (0, _fns.fixNum)(d);
  }

  function formatRingDay(item) {
    if (!item) {
      return '-';
    }

    var circle = item.circle,
        timestamp = item.timestamp;

    switch (circle) {
      case 0:
        return formatDate(timestamp * 1000);

      case 1:
        return _i18n.default.everyday();

      case 2:
        return _i18n.default.legalWorkday();

      case 3:
        return _i18n.default.weekday();

      case 4:
        return _i18n.default.legalWeekend();

      case 5:
        return _i18n.default.weekend();

      case 6:
        return _i18n.default.custom();

      default:
        return '-';
    }
  }

  function getDefaultRing(tab) {
    return new Promise(function (resolve, reject) {
      (0, _apis.getAlarmRings)().then(function (res) {
        var tabString = ReverseTabStrings[tab];
        var first = res.find(function (r) {
          return r && r.tab === tabString;
        });

        if (!first) {
          resolve({});
          return;
        }

        resolve({
          ringtone_type: first.id,
          ringtone_name: first.name,
          ringtone_query: first.query,
          ringtone_tab: first.tab
        });
      }).catch(reject);
    });
  }

  function Empty(_ref) {
    var navigation = _ref.navigation;

    function goClockInfo(tab) {
      getDefaultRing(tab).then(function (res) {
        (0, _globalData.setGlobalData)('scene', (0, _objectSpread2.default)({}, res));
        navigation.navigate('AlarmDetail');
      }).catch(function () {
        (0, _globalData.setGlobalData)('scene', {});
        navigation.navigate('AlarmDetail');
      });
    }

    return _react.default.createElement(_reactNative.View, {
      style: Styles.typeList
    }, _react.default.createElement(_reactNative.ImageBackground, {
      style: Styles.itemBg,
      source: SourceMusic
    }, _react.default.createElement(_reactNative.TouchableOpacity, {
      style: Styles.typeItem,
      activeOpacity: 0.8,
      onPress: function onPress() {
        goClockInfo(1);
      }
    }, _react.default.createElement(_reactNative.Text, {
      style: [Styles.itemTitle, Styles.colorRed]
    }, _i18n.default.musicClock()), _react.default.createElement(_reactNative.Text, {
      style: [Styles.itemSubtitle, Styles.colorRed]
    }, _i18n.default.musicClockTip()))), _react.default.createElement(_reactNative.ImageBackground, {
      style: Styles.itemBg,
      source: SourceNatural
    }, _react.default.createElement(_reactNative.TouchableOpacity, {
      style: Styles.typeItem,
      activeOpacity: 0.8,
      onPress: function onPress() {
        goClockInfo(2);
      }
    }, _react.default.createElement(_reactNative.Text, {
      style: [Styles.itemTitle, Styles.colorGreen]
    }, _i18n.default.naturalClock()), _react.default.createElement(_reactNative.Text, {
      style: [Styles.itemSubtitle, Styles.colorGreen]
    }, _i18n.default.naturalClockTip()))), _react.default.createElement(_reactNative.ImageBackground, {
      style: Styles.itemBg,
      source: SourceInterest
    }, _react.default.createElement(_reactNative.TouchableOpacity, {
      style: Styles.typeItem,
      activeOpacity: 0.8,
      onPress: function onPress() {
        goClockInfo(3);
      }
    }, _react.default.createElement(_reactNative.Text, {
      style: [Styles.itemTitle, Styles.colorPurple]
    }, _i18n.default.funnyClock()), _react.default.createElement(_reactNative.Text, {
      style: [Styles.itemSubtitle, Styles.colorPurple]
    }, _i18n.default.funnyClockTip()))));
  }

  function List(_ref2) {
    var list = _ref2.list,
        onSwitch = _ref2.onSwitch,
        _onPress = _ref2.onPress,
        _onLongPress = _ref2.onLongPress;
    return _react.default.createElement(_reactNative.View, {
      style: Styles.scenes
    }, list.sort(function (a, b) {
      var ta = new Date(a.timestamp * 1000);
      var tb = new Date(b.timestamp * 1000);
      var ha = ta.getHours();
      var ma = ta.getMinutes();
      var hb = tb.getHours();
      var mb = tb.getMinutes();
      return ha > hb || ha === hb && ma > mb ? 1 : ha === hb && ma === mb ? 0 : -1;
    }).map(function (item) {
      return _react.default.createElement(_reactNative.View, {
        key: item.id,
        style: Styles.scene
      }, _react.default.createElement(_reactNative.TouchableOpacity, {
        style: Styles.sceneBtn,
        activeOpacity: 0.8,
        onPress: function onPress() {
          _onPress(item);
        },
        onLongPress: function onLongPress() {
          _onLongPress(item);
        }
      }, _react.default.createElement(_reactNative.View, {
        style: Styles.sceneUp
      }, _react.default.createElement(_reactNative.Text, {
        style: Styles.sceneTime
      }, formatTime(item.timestamp)), _react.default.createElement(_reactNative.Text, {
        style: Styles.sceneRepeat,
        numberOfLines: 1,
        ellipsizeMode: "tail"
      }, formatRingDay(item))), _react.default.createElement(_reactNative.View, {
        style: Styles.sceneDown
      }, _react.default.createElement(_reactNative.Text, {
        style: Styles.sceneName
      }, item.event || (0, _ringsManager.getRingInfoFromQuery)(item.ringtone_query).display_name || (item.display_txt ? (0, _decodeUriComponent.default)(item.display_txt) : '') || item.ringtone_query || _i18n.default.defaultRing()))), _react.default.createElement(_Switch.default, {
        style: Styles.sceneSwitch,
        value: item.status === 0,
        onValueChange: function onValueChange(value) {
          onSwitch(item, value);
        },
        onTintColor: "#0097FF"
      }));
    }));
  }

  List.propTypes = {
    list: _propTypes.default.array,
    onSwitch: _propTypes.default.func,
    onPress: _propTypes.default.func,
    onLongPress: _propTypes.default.func
  };
  List.defaultProps = {
    onSwitch: function onSwitch() {},
    onPress: function onPress() {},
    onLongPress: function onLongPress() {}
  };

  var AlarmClock = function (_Component) {
    (0, _inherits2.default)(AlarmClock, _Component);

    function AlarmClock() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, AlarmClock);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(AlarmClock)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        confirmVisible: 0,
        list: [],
        inited: false,
        supportRing: false
      };
      _this.listenerDidFocus = null;

      _this.getList = function () {
        (0, _apis.getAlarmSceneList)().then(function (res) {
          _this.setState({
            list: res,
            inited: true
          });
        }).catch(function (e) {
          _this.setState({
            inited: true
          });
        });
      };

      _this.setSwitch = function (item, value) {
        (0, _apis.setAlarmSceneStatus)(null, item.id, value).then(function () {
          _this.setState(function (state) {
            return {
              list: state.list.map(function (n) {
                return (0, _objectSpread2.default)({}, n, {
                  status: item.id === n.id ? value ? 0 : 1 : n.status
                });
              })
            };
          });
        }).catch(function (e) {});
      };

      _this.itemToRemove = null;

      _this.tryRemove = function (item) {
        _this.itemToRemove = item;

        _this.setState({
          confirmVisible: 1
        });
      };

      _this.removeClock = function () {
        _this.cancel();

        if (!_this.itemToRemove) {
          return;
        }

        (0, _apis.deleteAlarmScene)(null, _this.itemToRemove.id).then(function () {
          _this.setState(function (state) {
            return {
              list: state.list.filter(function (n) {
                return n.id !== _this.itemToRemove.id;
              })
            };
          });
        }).catch(function (e) {});
      };

      _this.cancel = function () {
        _this.setState({
          confirmVisible: 0
        });
      };

      _this.goClockInfo = function (scene) {
        if (scene && scene.ringtone_video) {
          _this.setState({
            confirmVisible: 2
          });

          return;
        }

        (0, _globalData.setGlobalData)('scene', (0, _objectSpread2.default)({}, scene));

        _this.props.navigation.navigate('AlarmDetail');
      };

      return _this;
    }

    (0, _createClass2.default)(AlarmClock, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        (0, _globalData.setGlobalData)('scene', null);
        (0, _supports.default)(_capabilitiesFormatted.ClockRing).then(function () {
          _this2.setState({
            supportRing: true
          });
        }).catch(function () {});
        this.listenerDidFocus = this.props.navigation.addListener('didFocus', this.getList);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        (0, _globalData.setGlobalData)('scene', null);
        this.listenerDidFocus && this.listenerDidFocus.remove();
        this.listenerDidFocus = null;
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var navigation = this.props.navigation;
        var _this$state = this.state,
            list = _this$state.list,
            confirmVisible = _this$state.confirmVisible,
            inited = _this$state.inited,
            supportRing = _this$state.supportRing;

        if (!inited) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.ScrollView, {
          contentContainerStyle: Styles.content,
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, _i18n.default.clock()), list.length ? _react.default.createElement(List, {
          list: list,
          onSwitch: this.setSwitch,
          onPress: this.goClockInfo,
          onLongPress: this.tryRemove
        }) : supportRing ? _react.default.createElement(Empty, {
          navigation: navigation
        }) : null), list.length || !supportRing ? _react.default.createElement(_reactNative.View, {
          style: Styles.btnAddWrap
        }, _react.default.createElement(_ImageButton.default, {
          style: Styles.btnAdd,
          source: SourceAdd,
          onPress: function onPress() {
            _this3.goClockInfo();
          }
        })) : null, confirmVisible === 1 ? _react.default.createElement(_MessageDialog.default, {
          visible: true,
          messageStyle: {
            textAlign: 'center'
          },
          message: _i18n.default.removeClock(),
          buttons: [{
            text: _Strings.default.cancel,
            callback: this.cancel
          }, {
            text: _Strings.default.ok,
            callback: this.removeClock
          }],
          onDismiss: this.cancel
        }) : null, confirmVisible === 2 ? _react.default.createElement(_MessageDialog.default, {
          visible: true,
          messageStyle: {
            textAlign: 'center'
          },
          message: _i18n.default.cantUpdate(),
          buttons: [{
            text: _Strings.default.ok,
            callback: this.cancel
          }],
          onDismiss: this.cancel
        }) : null);
      }
    }]);
    return AlarmClock;
  }(_react.Component);

  exports.default = AlarmClock;

  AlarmClock.navigationOptions = function (_ref3) {
    var navigation = _ref3.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: "#FFFFFF",
      paddingTop: (0, _sizes.adjustSize)(15)
    },
    content: {
      paddingBottom: (0, _sizes.adjustSize)(300)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(84),
      lineHeight: (0, _sizes.adjustSize)(111),
      color: '#000',
      marginLeft: (0, _sizes.adjustSize)(72),
      marginBottom: (0, _sizes.adjustSize)(30)
    },
    itemBg: {
      marginHorizontal: (0, _sizes.adjustSize)(36),
      marginBottom: (0, _sizes.adjustSize)(24),
      height: (0, _sizes.adjustSize)(333),
      resizeMode: 'contain'
    },
    typeItem: {
      paddingHorizontal: (0, _sizes.adjustSize)(54),
      paddingVertical: (0, _sizes.adjustSize)(84)
    },
    itemTitle: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(54),
      lineHeight: (0, _sizes.adjustSize)(72)
    },
    itemSubtitle: {
      marginTop: (0, _sizes.adjustSize)(6),
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48)
    },
    colorRed: {
      color: '#EA6063'
    },
    colorGreen: {
      color: '#69C551'
    },
    colorPurple: {
      color: '#5C50D6'
    },
    scene: {
      marginHorizontal: (0, _sizes.adjustSize)(72),
      height: (0, _sizes.adjustSize)(270),
      alignItems: 'center',
      flexDirection: 'row'
    },
    sceneBtn: {
      flex: 1
    },
    sceneUp: {
      flexDirection: 'row',
      height: (0, _sizes.adjustSize)(117)
    },
    sceneTime: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(90),
      lineHeight: (0, _sizes.adjustSize)(117),
      color: '#000',
      width: (0, _sizes.adjustSize)(282)
    },
    sceneRepeat: {
      flex: 1,
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(45),
      lineHeight: (0, _sizes.adjustSize)(51),
      color: '#000',
      marginBottom: (0, _sizes.adjustSize)(21),
      alignSelf: 'flex-end'
    },
    sceneName: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(39),
      lineHeight: (0, _sizes.adjustSize)(54),
      color: '#7F7F7F'
    },
    sceneSwitch: {
      width: (0, _sizes.adjustSize)(132),
      height: (0, _sizes.adjustSize)(72)
    },
    btnAddWrap: {
      position: 'absolute',
      right: 0,
      bottom: 0,
      width: '100%',
      height: (0, _sizes.adjustSize)(270),
      alignItems: 'flex-end'
    },
    btnAdd: {
      width: (0, _sizes.adjustSize)(270),
      height: (0, _sizes.adjustSize)(270)
    }
  });
},10451,[14308,14305,14320,14323,14371,14377,14386,14314,10297,10033,10318,11404,10719,10200,10743,10347,10776,10782,10779,10320,10097,10043,10454,10457,10049,10139,10460,10463,10466,10469,10472]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getGlobalData = getGlobalData;
  exports.setGlobalData = setGlobalData;
  var Cached = {};

  function getGlobalData(key) {
    return key && key in Cached ? Cached[key] : null;
  }

  function setGlobalData(key, value) {
    if (key) {
      Cached[key] = value;
      return;
    }
  }
},10454,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getRingInfoFromQuery = getRingInfoFromQuery;

  var _apis = _$$_REQUIRE(_dependencyMap[0]);

  var CachedAlarmRings = null;

  function getRingInfoFromQuery(query) {
    if (!CachedAlarmRings) {
      return {};
    }

    var target = CachedAlarmRings.find(function (_ref) {
      var aQuery = _ref.query;
      return aQuery === query;
    });
    return target || {};
  }

  (0, _apis.getAlarmRings)().then(function (rings) {
    CachedAlarmRings = rings;
  }).catch(function () {});
},10457,[10043]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 1008,
    "height": 333,
    "scales": [1],
    "hash": "59b892d06967cbf15d2efb1e86875ba2",
    "name": "music-alarmClock",
    "type": "png"
  });
},10460,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 1008,
    "height": 330,
    "scales": [1],
    "hash": "4dacc1a57146af359ead0afbb1bc6900",
    "name": "nature-alarmClock",
    "type": "png"
  });
},10463,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 1008,
    "height": 330,
    "scales": [1],
    "hash": "970514539667d5ba38c66124cda7ba3b",
    "name": "interest-alarmClock",
    "type": "png"
  });
},10466,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 270,
    "height": 270,
    "scales": [1],
    "hash": "faa1e2ded0bb0ee76cbe8dc8ba063fcd",
    "name": "add",
    "type": "png"
  });
},10469,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 1080,
    "height": 174,
    "scales": [1],
    "hash": "b842eb7dcaea0366d24c65c978866b31",
    "name": "opacity",
    "type": "png"
  });
},10472,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _miot = _$$_REQUIRE(_dependencyMap[10]);

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _InputDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _NumberSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _sizes = _$$_REQUIRE(_dependencyMap[17]);

  var _fns = _$$_REQUIRE(_dependencyMap[18]);

  var _fonts = _$$_REQUIRE(_dependencyMap[19]);

  var _Strings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _apis = _$$_REQUIRE(_dependencyMap[22]);

  var _CustomSlider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var _globalData = _$$_REQUIRE(_dependencyMap[24]);

  var _ringsManager = _$$_REQUIRE(_dependencyMap[25]);

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[26]);

  var _supports = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27]));

  var SourceRingMusic = _$$_REQUIRE(_dependencyMap[28]);

  var SourceRingNatural = _$$_REQUIRE(_dependencyMap[29]);

  var SourceRingInterest = _$$_REQUIRE(_dependencyMap[30]);

  var SourceArrowRed = _$$_REQUIRE(_dependencyMap[31]);

  var SourceArrowGreen = _$$_REQUIRE(_dependencyMap[32]);

  var SourceArrowPurple = _$$_REQUIRE(_dependencyMap[33]);

  var CachedAlarmRings = null;
  (0, _apis.getAlarmRings)().then(function (res) {
    CachedAlarmRings = res;
  }).catch(function (e) {});

  function findType(q) {
    if (!CachedAlarmRings) {
      return {};
    }

    var target = CachedAlarmRings.find(function (_ref) {
      var query = _ref.query;
      return query === q;
    });
    return target ? (0, _objectSpread2.default)({}, target, {
      type: {
        '音乐': 1,
        '自然': 2,
        '趣味': 3
      }[target.tab]
    }) : {};
  }

  function getTimeReminder(timestamp, event) {
    var then = new Date(timestamp * 1000);
    var h = then.getHours();
    var m = then.getMinutes();
    var ret = "\u73B0\u5728" + h + "\u70B9";
    ret = m ? "" + ret + m + "\u5206" : ret;
    ret = event ? ret + "\uFF0C\u5C0F\u7231\u63D0\u9192\u4F60" + event : ret;
    return ret;
  }

  var ReverseTabStrings = {
    1: '音乐',
    2: '自然',
    3: '趣味'
  };
  var TabStrings = {
    1: _i18n.default.musicClock(),
    2: _i18n.default.naturalClock(),
    3: _i18n.default.funnyClock()
  };
  var PickerInnerStyle = {
    fontFamily: _fonts.FontDefault,
    fontSize: (0, _sizes.adjustSize)(57),
    selectTextColor: '#0099FF',
    unitTextColor: '#0099FF'
  };

  function formatTime(circle, timestamp) {
    var extra = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
    var now = new Date();
    var then = timestamp ? new Date(timestamp * 1000) : now;

    switch (circle) {
      case 0:
        {
          if (then < now) {
            then = new Date((timestamp + 86400) * 1000);
            return _i18n.default.dateInfo(then.getFullYear(), (0, _fns.fixNum)(then.getMonth() + 1), (0, _fns.fixNum)(then.getDate()), [_i18n.default.sunday(), _i18n.default.monday(), _i18n.default.tuesday(), _i18n.default.wednesday(), _i18n.default.thursday(), _i18n.default.friday(), _i18n.default.saturday()][then.getDay()]);
          } else {
            return _i18n.default.dateInfo(then.getFullYear(), (0, _fns.fixNum)(then.getMonth() + 1), (0, _fns.fixNum)(then.getDate()), [_i18n.default.sunday(), _i18n.default.monday(), _i18n.default.tuesday(), _i18n.default.wednesday(), _i18n.default.thursday(), _i18n.default.friday(), _i18n.default.saturday()][then.getDay()]);
          }
        }

      case 1:
        return _i18n.default.everyday();

      case 2:
        return _i18n.default.legalWorkday();

      case 3:
        return _i18n.default.weekday();

      case 4:
        return _i18n.default.legalWeekend();

      case 5:
        return _i18n.default.weekend();

      case 6:
        {
          var days = extra.split(' ');
          var weekend = {
            'sun': _i18n.default.sunday(),
            'mon': _i18n.default.monday(),
            'tue': _i18n.default.tuesday(),
            'wed': _i18n.default.wednesday(),
            'thu': _i18n.default.thursday(),
            'fri': _i18n.default.friday(),
            'sat': _i18n.default.saturday()
          };
          days = days.map(function (key) {
            return weekend[key];
          });
          return days.length ? days.join(',') : _i18n.default.custom();
        }

      default:
        return '';
    }
  }

  var AlarmDetail = function (_Component) {
    (0, _inherits2.default)(AlarmDetail, _Component);

    function AlarmDetail() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, AlarmDetail);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(AlarmDetail)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        supportClockVolume: false,
        supportClockRing: false,
        supportClockRepeat: false,
        layerVisible: 0,
        inputText: '',
        tab: 1,
        scene: {
          timestamp: Math.floor(Date.now() / 1000 + 300),
          circle: 0,
          event: '',
          volume: 30,
          ringtone_query: '',
          ringtone_type: ''
        }
      };

      _this.tryInit = function () {
        if (CachedAlarmRings) {
          _this.init();
        } else {
          (0, _apis.getAlarmRings)().then(function (res) {
            CachedAlarmRings = res;

            _this.init();
          }).catch(function (e) {
            _this.init();
          });
        }
      };

      _this.init = function () {
        var scene = (0, _globalData.getGlobalData)('scene');

        if (scene) {
          _this.setState(function (state) {
            return {
              scene: (0, _objectSpread2.default)({}, state.scene, scene),
              tab: findType(scene.ringtone_query).type || 1
            };
          });

          return;
        }
      };

      _this.chooseRing = function () {
        var _this$state = _this.state,
            _this$state$scene = _this$state.scene,
            ringtone_id = _this$state$scene.ringtone_type,
            ringtone_query = _this$state$scene.ringtone_query,
            ringtone_name = _this$state$scene.ringtone_name,
            tab = _this$state.tab;
        var typedRingtone = ringtone_query ? findType(ringtone_query) : {};

        _miot.Host.ui.openClockMusicSelector({
          ringtone_id: ringtone_id || typedRingtone.id,
          ringtone_query: ringtone_query,
          ringtone_tab: ReverseTabStrings[tab],
          ringtone_name: ringtone_name || typedRingtone.name,
          language: _miot.Host.locale.language
        }).then(function (res) {
          if (!res || !res.data) {
            return;
          }

          var _res$data = res.data,
              ringtone_id = _res$data.ringtone_id,
              ringtone_name = _res$data.ringtone_name,
              ringtone_query = _res$data.ringtone_query,
              ringtone_tab = _res$data.ringtone_tab;

          _this.setState(function (state) {
            return {
              scene: (0, _objectSpread2.default)({}, state.scene, {
                ringtone_type: ringtone_id,
                ringtone_name: ringtone_name,
                ringtone_query: ringtone_query,
                ringtone_tab: ringtone_tab
              }),
              tab: findType(ringtone_query).type || 1
            };
          });
        }).catch(function (e) {});
      };

      _this.setVolume = function (v) {
        _this.setState(function (state) {
          return {
            scene: (0, _objectSpread2.default)({}, state.scene, {
              volume: v
            })
          };
        });
      };

      _this.showRemarkInput = function () {
        _this.setState(function (state) {
          return {
            layerVisible: 1,
            inputText: state.scene.event
          };
        });
      };

      _this.setRemarks = function (v) {
        _this.setState(function (state) {
          return {
            layerVisible: 0,
            scene: (0, _objectSpread2.default)({}, state.scene, {
              event: v.textInputArray[0]
            })
          };
        });
      };

      _this.changeHour = function (_ref2) {
        var oldValue = _ref2.oldValue,
            newValue = _ref2.newValue;

        if (oldValue === newValue) {
          return;
        }

        _this.setState(function (state) {
          var then = new Date(state.scene.timestamp * 1000);
          then.setHours(newValue);
          return {
            scene: (0, _objectSpread2.default)({}, state.scene, {
              timestamp: Math.floor(then.getTime() / 1000)
            })
          };
        });
      };

      _this.changeMinute = function (_ref3) {
        var oldValue = _ref3.oldValue,
            newValue = _ref3.newValue;

        if (oldValue === newValue) {
          return;
        }

        _this.setState(function (state) {
          var then = new Date(state.scene.timestamp * 1000);
          then.setMinutes(newValue);
          return {
            scene: (0, _objectSpread2.default)({}, state.scene, {
              timestamp: Math.floor(then.getTime() / 1000)
            })
          };
        });
      };

      _this.goAlarmRepeat = function () {
        (0, _globalData.setGlobalData)('scene', (0, _objectSpread2.default)({}, _this.state.scene));

        _this.props.navigation.navigate('AlarmClockRepeat');
      };

      _this.cancel = function () {
        _this.setState({
          layerVisible: 0
        });
      };

      _this.isSaving = false;

      _this.onsave = function () {
        if (_this.isSaving) {
          return;
        }

        _this.isSaving = true;
        var scene = _this.state.scene;
        var timestamp = scene.timestamp,
            event = scene.event;
        var formatedTimestamp = Math.floor(new Date(timestamp * 1000).setSeconds(0) / 1000);
        (0, _apis.updateAlarmScene)(null, (0, _objectSpread2.default)({}, scene, {
          timestamp: formatedTimestamp,
          time_reminder: getTimeReminder(formatedTimestamp, event)
        })).then(function () {
          _this.isSaving = false;

          _this.props.navigation.goBack('AlarmClock');
        }).catch(function (e) {
          _this.isSaving = false;

          _this.showError();
        });
      };

      _this.showError = function () {
        _this.setState({
          layerVisible: 2
        });
      };

      _this.listenerDidFocus = null;
      return _this;
    }

    (0, _createClass2.default)(AlarmDetail, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.tryInit();
        this.props.navigation.setParams({
          onsave: this.onsave
        });
        (0, _supports.default)(_capabilitiesFormatted.ClockVolume).then(function () {
          _this2.setState({
            supportClockVolume: true
          });
        }).catch(function () {});
        (0, _supports.default)(_capabilitiesFormatted.ClockRing).then(function () {
          _this2.setState({
            supportClockRing: true
          });
        }).catch(function () {});
        (0, _supports.default)(_capabilitiesFormatted.ClockRepeat).then(function () {
          _this2.setState({
            supportClockRepeat: true
          });
        }).catch(function () {});
        this.listenerDidFocus = this.props.navigation.addListener('didFocus', this.tryInit);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.listenerDidFocus && this.listenerDidFocus.remove();
        this.listenerDidFocus = null;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$state2 = this.state,
            tab = _this$state2.tab,
            layerVisible = _this$state2.layerVisible,
            supportClockVolume = _this$state2.supportClockVolume,
            supportClockRing = _this$state2.supportClockRing,
            supportClockRepeat = _this$state2.supportClockRepeat,
            inputText = _this$state2.inputText,
            _this$state2$scene = _this$state2.scene,
            timestamp = _this$state2$scene.timestamp,
            circle = _this$state2$scene.circle,
            extra = _this$state2$scene.extra,
            event = _this$state2$scene.event,
            volume = _this$state2$scene.volume,
            ringtone_query = _this$state2$scene.ringtone_query;
        var tabBg = {
          1: '#FDF2F3',
          2: '#F2FCF7',
          3: '#F0F1FF'
        }[tab];
        var tabIcon = {
          1: SourceRingMusic,
          2: SourceRingNatural,
          3: SourceRingInterest
        }[tab];
        var tabColor = {
          1: Styles.colorRed,
          2: Styles.colorGreen,
          3: Styles.colorPurple
        }[tab];
        var tabArrow = {
          1: SourceArrowRed,
          2: SourceArrowGreen,
          3: SourceArrowPurple
        }[tab];
        var then = new Date(timestamp * 1000);
        var hour = then.getHours();
        var minute = then.getMinutes();
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.ScrollView, {
          contentContainerStyle: Styles.content,
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.timePicker
        }, _react.default.createElement(_NumberSpinner.default, {
          visible: true,
          style: Styles.timerPickerItem,
          maxValue: 23,
          minValue: 0,
          interval: 1,
          defaultValue: hour,
          unit: _Strings.default.hourUnit,
          pickerInnerStyle: PickerInnerStyle,
          onNumberChanged: this.changeHour
        }), _react.default.createElement(_NumberSpinner.default, {
          visible: true,
          style: Styles.timerPickerItem,
          maxValue: 59,
          minValue: 0,
          interval: 1,
          defaultValue: minute,
          unit: _Strings.default.minuteUnit,
          pickerInnerStyle: PickerInnerStyle,
          onNumberChanged: this.changeMinute
        })), _react.default.createElement(_reactNative.Text, {
          style: Styles.ringTip
        }, _i18n.default.chooseRing()), supportClockRing ? _react.default.createElement(_reactNative.TouchableOpacity, {
          style: [Styles.btnChooseRing, {
            backgroundColor: tabBg
          }],
          activeOpacity: 0.8,
          onPress: this.chooseRing
        }, _react.default.createElement(_reactNative.Image, {
          style: Styles.ringIcon,
          source: tabIcon
        }), _react.default.createElement(_reactNative.View, {
          style: Styles.ringText
        }, _react.default.createElement(_reactNative.Text, {
          style: [Styles.ringTitle, tabColor]
        }, TabStrings[tab]), _react.default.createElement(_reactNative.Text, {
          style: [Styles.ringSubtitle, tabColor]
        }, (0, _ringsManager.getRingInfoFromQuery)(ringtone_query).display_name || ringtone_query || _i18n.default.defaultRing())), _react.default.createElement(_reactNative.Image, {
          style: Styles.arrow,
          source: tabArrow
        })) : null, _react.default.createElement(_reactNative.View, {
          style: Styles.separatorWrap
        }, _react.default.createElement(_Separator.default, null)), _react.default.createElement(_reactNative.Text, {
          style: Styles.moreTitle
        }, _Strings.default.more), supportClockRepeat ? _react.default.createElement(_ListItem.default, {
          showSeparator: false,
          title: _i18n.default.repeat(),
          value: formatTime(circle, timestamp, extra),
          onPress: this.goAlarmRepeat,
          valueContainerStyle: {
            flex: 1,
            maxWidth: '70%',
            justifyContent: 'flex-end'
          }
        }) : null, _react.default.createElement(_ListItem.default, {
          showSeparator: false,
          title: _i18n.default.remarks(),
          value: event || _i18n.default.addRemarks(),
          onPress: this.showRemarkInput,
          valueContainerStyle: {
            flex: 1,
            maxWidth: '70%',
            justifyContent: 'flex-end'
          }
        }), supportClockVolume ? _react.default.createElement(_reactNative.View, {
          style: Styles.volume
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.volumeTitle
        }, _i18n.default.clockVolume()), _react.default.createElement(_CustomSlider.default, {
          min: 0,
          max: 100,
          value: volume,
          onSlided: this.setVolume
        })) : null), layerVisible === 1 ? _react.default.createElement(_InputDialog.default, {
          visible: true,
          title: _i18n.default.remarks(),
          inputs: [{
            placeholder: _i18n.default.remarks(),
            onChangeText: this.changeInputNickname,
            defaultValue: inputText,
            textInputProps: {
              maxLength: 20
            }
          }],
          buttons: [{
            text: _Strings.default.cancel,
            callback: this.cancel
          }, {
            text: _Strings.default.ok,
            callback: this.setRemarks
          }],
          onDismiss: this.cancel
        }) : null, layerVisible === 2 ? _react.default.createElement(_LoadingDialog.default, {
          visible: true,
          message: _Strings.default.error,
          timeout: 3000,
          onDismiss: this.cancel
        }) : null);
      }
    }]);
    return AlarmDetail;
  }(_react.Component);

  exports.default = AlarmDetail;

  AlarmDetail.navigationOptions = function (_ref4) {
    var navigation = _ref4.navigation;
    var onsave = navigation.getParam('onsave', function () {});
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        title: _i18n.default.addClock(),
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }],
        right: [{
          key: _NavigationBar.default.ICON.COMPLETE,
          onPress: function onPress() {
            onsave();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: "#FFFFFF",
      paddingTop: (0, _sizes.adjustSize)(15)
    },
    colorRed: {
      color: '#EA6063'
    },
    colorGreen: {
      color: '#69C551'
    },
    colorPurple: {
      color: '#5C50D6'
    },
    timePicker: {
      height: (0, _sizes.adjustSize)(612),
      marginHorizontal: (0, _sizes.adjustSize)(72),
      flexDirection: 'row'
    },
    timerPickerItem: {
      flex: 1,
      height: (0, _sizes.adjustSize)(612)
    },
    ringTip: {
      marginTop: (0, _sizes.adjustSize)(90),
      marginHorizontal: (0, _sizes.adjustSize)(72),
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(39),
      lineHeight: (0, _sizes.adjustSize)(54),
      color: '#000'
    },
    btnChooseRing: {
      marginTop: (0, _sizes.adjustSize)(60),
      marginHorizontal: (0, _sizes.adjustSize)(36),
      paddingLeft: (0, _sizes.adjustSize)(36),
      paddingRight: (0, _sizes.adjustSize)(60),
      height: (0, _sizes.adjustSize)(240),
      borderRadius: (0, _sizes.adjustSize)(36),
      flexDirection: 'row',
      alignItems: 'center',
      backgroundColor: '#f00'
    },
    ringIcon: {
      width: (0, _sizes.adjustSize)(108),
      height: (0, _sizes.adjustSize)(108),
      resizeMode: 'contain',
      marginRight: (0, _sizes.adjustSize)(24)
    },
    ringText: {
      flex: 1
    },
    ringTitle: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(48),
      lineHeight: (0, _sizes.adjustSize)(66)
    },
    ringSubtitle: {
      marginTop: (0, _sizes.adjustSize)(3),
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      opacity: 0.8
    },
    arrow: {
      marginLeft: (0, _sizes.adjustSize)(30),
      width: (0, _sizes.adjustSize)(33),
      height: (0, _sizes.adjustSize)(36)
    },
    separatorWrap: {
      marginHorizontal: (0, _sizes.adjustSize)(72),
      marginVertical: (0, _sizes.adjustSize)(60)
    },
    moreTitle: {
      marginHorizontal: (0, _sizes.adjustSize)(72),
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(102),
      color: '#8C93B0'
    },
    volume: {
      marginHorizontal: 24,
      paddingTop: (0, _sizes.adjustSize)(30),
      paddingBottom: (0, _sizes.adjustSize)(30)
    },
    volumeTitle: {
      marginBottom: (0, _sizes.adjustSize)(60),
      fontFamily: _fonts.FontDefault,
      fontSize: 15,
      lineHeight: (0, _sizes.adjustSize)(60),
      color: '#000'
    }
  });
},10475,[14308,14305,14320,14323,14371,14377,14386,14314,10297,10033,10074,10719,10332,10478,10737,10740,10305,10776,10779,10782,10320,10097,10043,10481,10454,10457,10049,10139,10484,10487,10490,10493,10496,10499]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _TouchableView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var dot = _$$_REQUIRE(_dependencyMap[16]);

  var THIN_HEIGHT = 58;
  var PADDING = 29;
  var dotSize = 8;

  var ICON_SIZE = _reactNative.Platform.select({
    android: 26,
    ios: 24
  });

  var ListItem = function (_React$Component) {
    (0, _inherits2.default)(ListItem, _React$Component);

    function ListItem(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ListItem);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItem).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ListItem');
      return _this;
    }

    (0, _createClass2.default)(ListItem, [{
      key: "render",
      value: function render() {
        var _this$context$theme, _this$context$theme2, _this$context$theme3, _this$context$theme4;

        var extraContainerStyle = {};

        if (this.props.subtitle) {
          extraContainerStyle = {
            paddingVertical: this.props.leftIcon ? 8 : 15,
            height: 77
          };
        }

        var leftIconContainerStyle = {};

        if (this.props.leftIcon) {
          leftIconContainerStyle = {
            height: 70,
            paddingLeft: 22
          };
        }

        var extraRightStyle = {};

        if (!this.props.hideArrow) {
          extraRightStyle = {
            maxWidth: '30%'
          };
        } else {
          extraRightStyle = {
            maxWidth: '35%'
          };
        }

        var valueStyle = {
          marginRight: 7,
          textAlignVertical: 'center',
          textAlign: 'right'
        };
        var adaptedFontStyle = {};

        if (this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined
          };
        }

        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 2 : this.props.subtitleNumberOfLines;
        var valueLine = this.props.valueNumberOfLines == undefined ? 2 : this.props.valueNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        if (subtitleLine < 0) subtitleLine = 0;
        if (valueLine < 0) valueLine = 0;
        var fontFamily = {};

        if (_reactNative.Platform.OS === 'android') {
          fontFamily = {
            fontFamily: 'Kmedium'
          };
          valueStyle.height = THIN_HEIGHT;
        }

        var titleHeight, subtitleHeight;

        if (this.props.titleStyle) {
          titleHeight = this.props.titleStyle.fontSize ? this.props.titleStyle.fontSize + 6 : 22;
        }

        if (this.props.subtitleStyle) {
          subtitleHeight = this.props.subtitleStyle.fontSize ? this.props.titleStyle.fontSize + 5 : 18;
        }

        return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TouchableView.default, (0, _extends2.default)({
          disabled: this.props.disabled,
          underlayColor: _resources.Styles.common.underlayColor,
          onPress: this.props.onPress,
          onLongPress: this.props.onLongPress,
          viewStyle: [styles.container, {
            backgroundColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorWhite
          }, this.props.containerStyle, leftIconContainerStyle, extraContainerStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: this.props.disabled
          }
        })), this.props.leftIcon ? _react.default.createElement(_reactNative.Image, {
          style: styles.leftIcon,
          source: this.props.leftIcon
        }) : null, _react.default.createElement(_reactNative.View, {
          style: [styles.left]
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            paddingBottom: 1
          }
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: titleLine,
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.title, this.props.useNewType ? {
            fontWeight: 'bold'
          } : {}, {
            lineHeight: titleHeight,
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorBlack
          }, fontFamily, this.props.titleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title)), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: subtitleLine,
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.subtitle, {
            lineHeight: subtitleHeight,
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayLighter
          }, this.props.subtitleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle) : null), _react.default.createElement(_reactNative.View, {
          style: {
            width: 10
          }
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.right, extraRightStyle, this.props.valueContainerStyle]
        }, this.props.value ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: valueLine,
          allowFontScaling: this.props.allowFontScaling,
          ellipsizeMode: "tail",
          style: [_resources.Styles.common.subtitle, {
            color: (_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorGrayLighter
          }, this.props.valueStyle, valueStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.value) : null), this.props.showDot ? _react.default.createElement(_reactNative.Image, {
          style: [styles.dot, this.props.dotStyle],
          resizeMode: "contain",
          source: dot
        }) : null, !this.props.hideArrow ? _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _resources.Images.common.right_arrow
        }) : null), this.renderSeparator());
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator() {
        if (!this.props.showSeparator || this.props.useNewType) return null;
        return this.props.separator || _react.default.createElement(_Separator.default, {
          style: {
            marginLeft: _resources.Styles.common.padding
          }
        });
      }
    }]);
    return ListItem;
  }(_react.default.Component);

  ListItem.contextType = _configProvider.ConfigContext;
  ListItem.propTypes = {
    title: _propTypes.default.string.isRequired,
    subtitle: _propTypes.default.string,
    value: _propTypes.default.string,
    onPress: _propTypes.default.func.isRequired,
    onLongPress: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    showSeparator: _propTypes.default.bool,
    hideArrow: _propTypes.default.bool,
    showDot: _propTypes.default.bool,
    separator: _propTypes.default.element,
    containerStyle: _propTypes.default.object,
    titleStyle: _propTypes.default.object,
    subtitleStyle: _propTypes.default.object,
    valueStyle: _propTypes.default.object,
    valueContainerStyle: _propTypes.default.object,
    dotStyle: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    valueNumberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ListItem.defaultProps = {
    title: '',
    subtitle: '',
    value: '',
    onPress: function onPress() {},
    onLongPress: function onLongPress() {},
    disabled: false,
    showSeparator: true,
    hideArrow: false,
    showDot: false,
    containerStyle: {},
    titleStyle: {},
    subtitleStyle: {},
    valueStyle: {},
    valueContainerStyle: {},
    dotStyle: {},
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    leftIcon: null,
    useNewType: false
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width,
      height: THIN_HEIGHT,
      paddingHorizontal: PADDING,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    },
    left: {
      flex: 1
    },
    right: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'flex-start'
    },
    icon: {
      width: ICON_SIZE,
      height: ICON_SIZE
    },
    dot: {
      width: dotSize,
      height: dotSize
    },
    leftIcon: {
      resizeMode: 'contain',
      width: 56,
      height: 56,
      marginRight: 2
    }
  });

  var _default = ListItem;
  exports.default = _default;
},10478,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,23032,22453,22906,22426,22420,22423,23035]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var CustomSlider = function (_Component) {
    (0, _inherits2.default)(CustomSlider, _Component);

    function CustomSlider() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, CustomSlider);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CustomSlider)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.value = 0;
      _this.isSliding = false;
      _this.layout = null;
      _this.leftX = new _reactNative.Animated.Value(0);
      _this.panResponder = {};

      _this.initPanResponder = function () {
        _this.panResponder = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
            return true;
          },
          onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
            return false;
          },
          onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
            return true;
          },
          onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
            return true;
          },
          onShouldBlockNativeResponder: function onShouldBlockNativeResponder() {
            return true;
          },
          onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
            return false;
          },
          onPanResponderGrant: function onPanResponderGrant() {},
          onPanResponderMove: _this.touchMove.bind((0, _assertThisInitialized2.default)(_this)),
          onPanResponderRelease: _this.touchEnd.bind((0, _assertThisInitialized2.default)(_this)),
          onPanResponderTerminate: _this.touchEnd.bind((0, _assertThisInitialized2.default)(_this))
        });
      };

      _this.touchStart = function () {};

      _this.touchMove = function (_ref) {
        var pageX = _ref.nativeEvent.pageX;
        _this.isSliding = true;

        if (!_this.layout) {
          return;
        }

        var leftX = pageX - _this.layout.px;

        _this.leftX.setValue(Math.max(0, Math.min(_this.layout.w, leftX)));
      };

      _this.touchEnd = function () {
        _this.isSliding = false;
        var onSlided = _this.props.onSlided;
        onSlided(_this.value);
      };

      _this.onLayout = function () {
        setTimeout(function () {
          if (!_this.refContainer) {
            return;
          }

          _this.refContainer.measure(function (x, y, w, h, px, py) {
            _this.layout = {
              x: x,
              y: y,
              w: w,
              h: h,
              px: px,
              py: py
            };
            var _this$props = _this.props,
                value = _this$props.value,
                min = _this$props.min,
                max = _this$props.max;

            var leftX = _this.getPosByValue(value, min, max);

            _this.leftX.setValue(leftX);
          });
        }, 500);
      };

      _this.getValueByPos = function (v) {
        if (!_this.layout) {
          return 0;
        }

        var _this$props2 = _this.props,
            min = _this$props2.min,
            max = _this$props2.max;
        var w = _this.layout.w;
        return Math.floor(v / w * (max - min)) + min;
      };

      _this.getPosByValue = function (v, min, max) {
        if (!_this.layout) {
          return 0;
        }

        var w = _this.layout.w;
        return v <= min ? 0 : v >= max ? w : (v - min) / (max - min) * w;
      };

      return _this;
    }

    (0, _createClass2.default)(CustomSlider, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (this.isSliding) {
          return;
        }

        var _this$props3 = this.props,
            min = _this$props3.min,
            max = _this$props3.max,
            value = _this$props3.value;

        if (newProps.min === min && newProps.max === max && (newProps.value === this.value || newProps.value === value)) {
          return;
        }

        var leftX = this.getPosByValue(newProps.value, newProps.min, newProps.max);
        this.leftX.setValue(leftX);
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        this.initPanResponder();
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.leftX.addListener(function (v) {
          _this2.value = _this2.getValueByPos(v.value);
          var onSliding = _this2.props.onSliding;
          onSliding(_this2.value);
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          ref: function ref(_ref2) {
            _this3.refContainer = _ref2;
          },
          style: Styles.container
        }, this.panResponder.panHandlers, {
          onLayout: this.onLayout
        }), _react.default.createElement(_reactNative.Animated.View, {
          style: [Styles.left, {
            width: this.leftX
          }]
        }));
      }
    }]);
    return CustomSlider;
  }(_react.Component);

  exports.default = CustomSlider;
  CustomSlider.propTypes = {
    min: _propTypes.default.number,
    max: _propTypes.default.number,
    value: _propTypes.default.number,
    onSliding: _propTypes.default.func,
    onSlided: _propTypes.default.func
  };
  CustomSlider.defaultProps = {
    min: 0,
    max: 100,
    value: 0,
    onSliding: function onSliding() {},
    onSlided: function onSlided() {}
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      width: '100%',
      backgroundColor: '#EDF1F5',
      borderRadius: (0, _sizes.adjustSize)(30),
      overflow: 'hidden'
    },
    left: {
      height: (0, _sizes.adjustSize)(60),
      width: 80,
      backgroundColor: '#0097FF'
    }
  });
},10481,[14308,14305,14344,14320,14323,14371,14377,14374,14386,10297,10033,10318,10776]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 144,
    "height": 144,
    "scales": [1],
    "hash": "5d4a12c2a132c03ff6a7e8973aed8ad2",
    "name": "clock-music",
    "type": "png"
  });
},10484,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 144,
    "height": 144,
    "scales": [1],
    "hash": "681c09e51cdca23f3f1848a087c7af8d",
    "name": "clock-natural",
    "type": "png"
  });
},10487,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 144,
    "height": 144,
    "scales": [1],
    "hash": "4c3ae56b3cf63c8bd43a8e2dc232b4c3",
    "name": "clock-funny",
    "type": "png"
  });
},10490,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 44,
    "height": 48,
    "scales": [1],
    "hash": "0ef04dbf321bedcb3fd0bef438034ddd",
    "name": "arrow-red",
    "type": "png"
  });
},10493,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 44,
    "height": 48,
    "scales": [1],
    "hash": "0c03911936d890b8905d89f84cfe2e8a",
    "name": "arrow-green",
    "type": "png"
  });
},10496,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 44,
    "height": 48,
    "scales": [1],
    "hash": "bd17dd606a13eab81255bd4213ca7c0d",
    "name": "arrow-purple",
    "type": "png"
  });
},10499,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _MHDatePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _ChoiceDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _sizes = _$$_REQUIRE(_dependencyMap[16]);

  var _fns = _$$_REQUIRE(_dependencyMap[17]);

  var _fonts = _$$_REQUIRE(_dependencyMap[18]);

  var _Strings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _globalData = _$$_REQUIRE(_dependencyMap[21]);

  var SourceArrow = _$$_REQUIRE(_dependencyMap[22]);

  var SourceSelected = _$$_REQUIRE(_dependencyMap[23]);

  function SelectItem(_ref) {
    var title = _ref.title,
        value = _ref.value,
        selected = _ref.selected,
        showArrow = _ref.showArrow,
        onPress = _ref.onPress;
    return _react.default.createElement(_reactNative.TouchableOpacity, {
      style: Styles.selectItem,
      activeOpacity: 0.8,
      onPress: onPress
    }, _react.default.createElement(_reactNative.Image, {
      style: [Styles.selectItemIcon, selected ? Styles.selectItemIconSelected : null],
      source: SourceSelected
    }), _react.default.createElement(_reactNative.Text, {
      style: Styles.selectItemTitle
    }, title), value ? _react.default.createElement(_reactNative.Text, {
      style: Styles.selectItemValue
    }, value) : null, _react.default.createElement(_reactNative.View, {
      style: Styles.selectItemArrowWrap
    }, _react.default.createElement(_reactNative.Image, {
      style: [Styles.selectItemArrow, showArrow ? Styles.selectItemArrowSelected : null],
      source: SourceArrow
    })));
  }

  SelectItem.propTypes = {
    title: _propTypes.default.string,
    value: _propTypes.default.string,
    selected: _propTypes.default.bool,
    showArrow: _propTypes.default.bool,
    onPress: _propTypes.default.func
  };
  SelectItem.defaultProps = {
    title: '',
    value: '',
    selected: false,
    showArrow: false,
    onPress: function onPress() {}
  };

  function getWeekDaysFromExtra(extra) {
    if (!extra) {
      return [];
    }

    var days = extra.split(/\s+/);
    return days.map(function (d) {
      return {
        mon: 0,
        tue: 1,
        wed: 2,
        thu: 3,
        fri: 4,
        sat: 5,
        sun: 6
      }[d];
    }).filter(function (d) {
      return !!d || d === 0;
    });
  }

  var AlarmClockRepeat = function (_Component) {
    (0, _inherits2.default)(AlarmClockRepeat, _Component);

    function AlarmClockRepeat() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, AlarmClockRepeat);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(AlarmClockRepeat)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        timestamp: Math.floor(Date.now() / 1000),
        circle: 0,
        extra: '',
        layerVisible: 0
      };

      _this.setScene = function () {
        (0, _globalData.setGlobalData)('scene', (0, _objectSpread2.default)({}, _this.scene, {
          timestamp: _this.state.timestamp,
          circle: _this.state.circle,
          extra: _this.state.circle === 6 ? _this.state.extra : ''
        }));
      };

      _this.setOnetime = function (v) {
        var timestamp = _this.state.timestamp;

        var _v$rawArray = (0, _slicedToArray2.default)(v.rawArray, 3),
            y = _v$rawArray[0],
            m = _v$rawArray[1],
            d = _v$rawArray[2];

        var then = new Date(timestamp * 1000);
        then.setFullYear(parseInt(y, 10));
        then.setMonth(parseInt(m, 10) - 1);
        then.setDate(parseInt(d, 10));

        _this.setState({
          circle: 0,
          timestamp: Math.floor(then.getTime() / 1000)
        }, _this.setScene);
      };

      _this.selectCircle = function (circle) {
        _this.setState({
          circle: circle
        }, _this.setScene);
      };

      _this.setCustom = function (vs) {
        _this.cancel();

        if (!vs.length) {
          return;
        }

        _this.setState({
          circle: 6,
          extra: vs.map(function (v) {
            return ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun'][v];
          }).join(' ')
        }, _this.setScene);
      };

      _this.showLayer = function (layerVisible) {
        _this.setState({
          layerVisible: layerVisible
        });
      };

      _this.cancel = function () {
        _this.setState({
          layerVisible: 0
        });
      };

      return _this;
    }

    (0, _createClass2.default)(AlarmClockRepeat, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.scene = (0, _globalData.getGlobalData)('scene') || {};
        this.setState({
          timestamp: this.scene.timestamp,
          circle: this.scene.circle,
          extra: this.scene.extra
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$state = this.state,
            timestamp = _this$state.timestamp,
            circle = _this$state.circle,
            extra = _this$state.extra,
            layerVisible = _this$state.layerVisible;
        var now = new Date();
        var then = new Date(timestamp * 1000);
        var day = now.getTime() >= then.getTime() ? new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1, 0, 0, 0) : then;
        var ny = now.getFullYear();
        var nm = now.getMonth() + 1;
        var nd = now.getDate();
        var ty = day.getFullYear();
        var tm = day.getMonth() + 1;
        var td = day.getDate();

        var oneTimeDay = _i18n.default.dateInfo(ty, (0, _fns.fixNum)(tm), (0, _fns.fixNum)(td), [_i18n.default.sunday(), _i18n.default.monday(), _i18n.default.tuesday(), _i18n.default.wednesday(), _i18n.default.thursday(), _i18n.default.friday(), _i18n.default.saturday()][day.getDay()]);

        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.ScrollView, {
          contentContainerStyle: Styles.content,
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.gap
        }), _react.default.createElement(SelectItem, {
          title: _i18n.default.repeatOnce(),
          value: oneTimeDay,
          selected: circle === 0,
          showArrow: true,
          onPress: function onPress() {
            _this2.showLayer(1);
          }
        }), _react.default.createElement(_reactNative.View, {
          style: Styles.gap
        }), _react.default.createElement(SelectItem, {
          title: _i18n.default.everyday(),
          selected: circle === 1,
          onPress: function onPress() {
            _this2.selectCircle(1);
          }
        }), _react.default.createElement(_Separator.default, null), _react.default.createElement(SelectItem, {
          title: _i18n.default.legalWorkday(),
          selected: circle === 2,
          onPress: function onPress() {
            _this2.selectCircle(2);
          }
        }), _react.default.createElement(_Separator.default, null), _react.default.createElement(SelectItem, {
          title: _i18n.default.legalWeekend(),
          selected: circle === 4,
          onPress: function onPress() {
            _this2.selectCircle(4);
          }
        }), _react.default.createElement(_Separator.default, null), _react.default.createElement(SelectItem, {
          title: _i18n.default.weekday(),
          selected: circle === 3,
          onPress: function onPress() {
            _this2.selectCircle(3);
          }
        }), _react.default.createElement(_Separator.default, null), _react.default.createElement(SelectItem, {
          title: _i18n.default.weekend(),
          selected: circle === 5,
          onPress: function onPress() {
            _this2.selectCircle(5);
          }
        }), _react.default.createElement(_Separator.default, null), _react.default.createElement(SelectItem, {
          title: _i18n.default.custom(),
          selected: circle === 6,
          showArrow: true,
          onPress: function onPress() {
            _this2.showLayer(2);
          }
        })), layerVisible === 1 ? _react.default.createElement(_MHDatePicker.default, {
          visible: true,
          title: _i18n.default.repeatOnce(),
          type: _MHDatePicker.default.TYPE.DATE,
          onSelect: this.setOnetime,
          onDismiss: this.cancel,
          current: [ty, tm, td],
          max: [ny + 3, nm, nd],
          min: [ny, nm, nd]
        }) : null, layerVisible === 2 ? _react.default.createElement(_ChoiceDialog.default, {
          visible: true,
          type: _ChoiceDialog.default.TYPE.MULTIPLE,
          title: _i18n.default.custom(),
          color: "#0097FF",
          options: [{
            title: _i18n.default.monday()
          }, {
            title: _i18n.default.tuesday()
          }, {
            title: _i18n.default.wednesday()
          }, {
            title: _i18n.default.thursday()
          }, {
            title: _i18n.default.friday()
          }, {
            title: _i18n.default.saturday()
          }, {
            title: _i18n.default.sunday()
          }],
          selectedIndexArray: getWeekDaysFromExtra(extra),
          buttons: [{
            text: _Strings.default.cancel,
            callback: this.cancel
          }, {
            text: _Strings.default.ok,
            style: {
              color: '#0097FF'
            },
            callback: this.setCustom
          }],
          onDismiss: this.cancel
        }) : null);
      }
    }]);
    return AlarmClockRepeat;
  }(_react.Component);

  exports.default = AlarmClockRepeat;

  AlarmClockRepeat.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        title: _i18n.default.repeat(),
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#f5f5f5',
      paddingTop: (0, _sizes.adjustSize)(15)
    },
    content: {
      flex: 1
    },
    gap: {
      height: (0, _sizes.adjustSize)(24)
    },
    selectItem: {
      height: (0, _sizes.adjustSize)(150),
      backgroundColor: '#fff',
      flexDirection: 'row',
      alignItems: 'center',
      paddingHorizontal: (0, _sizes.adjustSize)(30)
    },
    selectItemIcon: {
      width: (0, _sizes.adjustSize)(48),
      height: (0, _sizes.adjustSize)(48),
      resizeMode: 'contain',
      marginRight: (0, _sizes.adjustSize)(24),
      opacity: 0
    },
    selectItemIconSelected: {
      opacity: 1
    },
    selectItemTitle: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(45),
      lineHeight: (0, _sizes.adjustSize)(60),
      color: '#000',
      flex: 1
    },
    selectItemValue: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      color: 'rgba(0,0,0,0.6)'
    },
    selectItemArrowWrap: {
      width: (0, _sizes.adjustSize)(72),
      height: (0, _sizes.adjustSize)(72)
    },
    selectItemArrow: {
      width: (0, _sizes.adjustSize)(72),
      height: (0, _sizes.adjustSize)(72),
      resizeMode: 'contain',
      opacity: 0
    },
    selectItemArrowSelected: {
      opacity: 1
    }
  });
},10502,[14308,14305,14347,14314,14320,14323,14371,14377,14386,10297,10033,10318,10719,10332,10716,10734,10776,10779,10782,10320,10097,10454,10311,10436]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var Setting = function (_Component) {
    (0, _inherits2.default)(Setting, _Component);

    function Setting() {
      (0, _classCallCheck2.default)(this, Setting);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Setting).apply(this, arguments));
    }

    (0, _createClass2.default)(Setting, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.ScrollView, {
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, null, "\u7ACB\u4F53\u58F0"))));
      }
    }]);
    return Setting;
  }(_react.Component);

  exports.default = Setting;

  Setting.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1
    }
  });
},10505,[14308,14305,14320,14323,14371,14377,14386,10297,10719,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _miot = _$$_REQUIRE(_dependencyMap[9]);

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _ListItemWithSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _ActionSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _MessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _sizes = _$$_REQUIRE(_dependencyMap[17]);

  var _fonts = _$$_REQUIRE(_dependencyMap[18]);

  var _Strings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _supports = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[22]);

  var _apis = _$$_REQUIRE(_dependencyMap[23]);

  var SourceNoDevices = _$$_REQUIRE(_dependencyMap[24]);

  var BTSetting = function (_Component) {
    (0, _inherits2.default)(BTSetting, _Component);

    function BTSetting() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, BTSetting);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(BTSetting)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        suppourtFundable: false,
        showActionSheet: false,
        showLoading: false,
        btStatus: {},
        meshEnabled: false,
        layerComfirmVisible: false
      };
      _this.supportMeshAlert = false;

      _this.changeFundable = function (v) {
        _this.showLoading();

        (0, _apis.setBTDiscoverable)(null, v).then(function (btStatus) {
          _this.setState({
            btStatus: btStatus,
            showLoading: false
          });
        }).catch(_this.showError);
      };

      _this.tryChangeOpen = function (v, confirmed) {
        if (v && _this.supportMeshAlert && _this.meshEnabled && !confirmed) {
          _this.setState({
            layerComfirmVisible: true
          });

          return;
        }

        _this.showLoading();

        (0, _apis.setBTConnectable)(null, v).then(function (btStatus) {
          _this.setState({
            btStatus: btStatus,
            layerComfirmVisible: false,
            showLoading: false
          });
        }).catch(_this.showError);
      };

      _this.showDeviceControls = function (device) {
        _this.controllingDevice = device;

        _this.setState({
          showActionSheet: true
        });
      };

      _this.controllingDevice = null;

      _this.unpair = function () {
        _this.hideActionSheet();

        if (!_this.controllingDevice) {
          return;
        }

        _this.showLoading();

        (0, _apis.unpairBt)(null, _this.controllingDevice.bdaddr).then(function (btStatus) {
          _this.setState({
            btStatus: btStatus,
            showLoading: false
          });
        }).catch(_this.showError);
      };

      _this.disconnect = function () {
        _this.hideActionSheet();

        if (!_this.controllingDevice) {
          return;
        }

        _this.showLoading();

        (0, _apis.disconnectBt)(null, _this.controllingDevice.bdaddr).then(function (btStatus) {
          _this.setState({
            btStatus: btStatus,
            showLoading: false
          });
        }).catch(_this.showError);
      };

      _this.connectBt = function () {
        _this.hideActionSheet();

        _this.showLoading();

        (0, _apis.connectBt)(null, _this.controllingDevice.bdaddr).then(function (btStatus) {
          _this.setState({
            btStatus: btStatus,
            showLoading: false
          });
        }).catch(_this.showError);
      };

      _this.hideActionSheet = function () {
        _this.setState({
          showActionSheet: false
        });
      };

      _this.showLoading = function () {
        _this.setState({
          showLoading: true
        });
      };

      _this.hideLoading = function () {
        _this.setState({
          showLoading: false
        });
      };

      _this.showError = function () {
        _this.setState({
          showError: true,
          showLoading: false,
          showActionSheet: false,
          layerComfirmVisible: false
        });
      };

      _this.hideError = function () {
        _this.setState({
          showError: false
        });
      };

      return _this;
    }

    (0, _createClass2.default)(BTSetting, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        (0, _supports.default)(_capabilitiesFormatted.BTDiscoverable).then(function () {
          _this2.setState({
            suppourtFundable: true
          });
        }).catch(function () {
          _this2.setState({
            suppourtFundable: false
          });
        });
        (0, _supports.default)(_capabilitiesFormatted.MeshAlert).then(function () {
          _this2.supportMeshAlert = true;
        }).catch(function () {
          _this2.supportMeshAlert = false;
        });
        (0, _apis.getBTStatus)().then(function (btStatus) {
          (0, _apis.getMeshStatus)().then(function (res) {
            if (res && res.data && res.data.info) {
              var info = typeof res.data.info === 'string' ? JSON.parse(res.data.info) : res.data.info;
              _this2.meshEnabled = info ? info.mesh_is_enable === true || info.mesh_is_enable === 'true' : false;
            }

            _this2.setState({
              btStatus: btStatus
            });
          }).catch(function (e) {
            _this2.setState({
              btStatus: btStatus
            });
          });
        }).catch(function (e) {});
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var _this$state = this.state,
            suppourtFundable = _this$state.suppourtFundable,
            showError = _this$state.showError,
            showLoading = _this$state.showLoading,
            showActionSheet = _this$state.showActionSheet,
            _this$state$btStatus = _this$state.btStatus,
            btname = _this$state$btStatus.btname,
            connect = _this$state$btStatus.connect,
            discover = _this$state$btStatus.discover,
            devices_list = _this$state$btStatus.devices_list,
            layerComfirmVisible = _this$state.layerComfirmVisible;
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.ScrollView, {
          contentContainerStyle: Styles.content,
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.item
        }, _react.default.createElement(_ListItemWithSwitch.default, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          title: _i18n.default.btSwitcher(),
          subtitle: btname,
          value: connect === 1,
          onValueChange: this.tryChangeOpen,
          onTintColor: "#0097FF",
          showSeparator: false
        })), connect === 1 ? _react.default.createElement(_react.Fragment, null, suppourtFundable ? _react.default.createElement(_reactNative.View, {
          style: Styles.item
        }, _react.default.createElement(_ListItemWithSwitch.default, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          titleNumberOfLines: 2,
          title: _i18n.default.btCanBeFound(),
          subtitle: _i18n.default.btFoundTip(),
          value: discover === 1,
          onValueChange: this.changeFundable,
          onTintColor: "#0097FF",
          showSeparator: false
        })) : null, _react.default.createElement(_reactNative.View, {
          style: Styles.separatorWrap
        }, _react.default.createElement(_Separator.default, {
          style: Styles.separator
        })), _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, {
          style: Styles.matchedDevicesTitle
        }, _i18n.default.matchedDevices())), devices_list && devices_list.length ? _react.default.createElement(_reactNative.View, {
          style: Styles.matchedDevices
        }, devices_list.map(function (device) {
          return _react.default.createElement(_reactNative.View, {
            key: device.bdaddr,
            style: Styles.device
          }, _react.default.createElement(_ListItem.default, {
            allowFontScaling: true,
            unlimitedHeightEnable: true,
            title: device.name,
            value: device.connect === 'true' ? _i18n.default.connected() : _i18n.default.notConnected(),
            hideArrow: false,
            showSeparator: false,
            onPress: function onPress() {
              _this3.showDeviceControls(device);
            }
          }));
        })) : _react.default.createElement(_reactNative.View, {
          style: Styles.matchedDevicesEmpty
        }, _react.default.createElement(_reactNative.Image, {
          style: Styles.matchedDevicesEmptyIcon,
          source: SourceNoDevices
        }), _react.default.createElement(_reactNative.Text, {
          style: Styles.matchedDevicesEmptyTip
        }, _i18n.default.noMatchedDevice()))) : null), showError ? _react.default.createElement(_LoadingDialog.default, {
          visible: true,
          message: _Strings.default.error,
          timeout: 3000
        }) : null, showLoading ? _react.default.createElement(_LoadingDialog.default, {
          visible: true,
          message: _Strings.default.handling,
          timeout: 3000
        }) : null, showActionSheet ? _react.default.createElement(_ActionSheet.default, {
          visible: showActionSheet && this.controllingDevice ? true : false,
          buttons: [],
          options: this.controllingDevice.connect === 'true' ? [{
            title: _i18n.default.disconnect(),
            onPress: this.disconnect
          }, {
            title: _i18n.default.cancelMatch(),
            onPress: this.unpair
          }, {
            title: _Strings.default.cancel,
            onPress: this.hideActionSheet
          }] : [{
            title: _i18n.default.connectBt(),
            onPress: this.connectBt
          }, {
            title: _i18n.default.cancelMatch(),
            onPress: this.unpair
          }, {
            title: _Strings.default.cancel,
            onPress: this.hideActionSheet
          }],
          onDismiss: this.hideActionSheet
        }) : null, layerComfirmVisible ? _react.default.createElement(_MessageDialog.default, {
          visible: true,
          animationType: "none",
          message: _i18n.default.meshTip(),
          buttons: [{
            text: _Strings.default.cancel,
            callback: function callback() {
              _this3.setState({
                layerComfirmVisible: false
              }, function () {
                _this3.props.navigation.goBack();
              });
            }
          }, {
            text: _i18n.default.continue(),
            callback: function callback() {
              _this3.tryChangeOpen(true, true);
            }
          }],
          onDismiss: function onDismiss() {
            _this3.setState({
              layerComfirmVisible: false
            });
          }
        }) : null);
      }
    }]);
    return BTSetting;
  }(_react.Component);

  exports.default = BTSetting;

  BTSetting.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        title: _miot.Device.name,
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: 'white',
      paddingTop: (0, _sizes.adjustSize)(15)
    },
    content: {},
    separatorWrap: {
      marginVertical: (0, _sizes.adjustSize)(60),
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    matchedDevicesTitle: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(102),
      color: '#8C93B0',
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    matchedDevicesEmpty: {
      marginTop: (0, _sizes.adjustSize)(120),
      marginHorizontal: (0, _sizes.adjustSize)(72),
      alignItems: 'center'
    },
    matchedDevicesEmptyIcon: {
      width: (0, _sizes.adjustSize)(300),
      height: (0, _sizes.adjustSize)(300),
      resizeMode: 'contain'
    },
    matchedDevicesEmptyTip: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#999'
    },
    device: {
      height: (0, _sizes.adjustSize)(216),
      justifyContent: 'center'
    }
  });
},10508,[14308,14305,14320,14323,14371,14377,14386,10297,10033,10074,10719,10329,10344,10728,10743,10740,10332,10776,10782,10320,10097,10139,10049,10043,10448]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _sizes = _$$_REQUIRE(_dependencyMap[10]);

  var _fonts = _$$_REQUIRE(_dependencyMap[11]);

  var _fns = _$$_REQUIRE(_dependencyMap[12]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[14]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _apis = _$$_REQUIRE(_dependencyMap[16]);

  var Setting = function (_Component) {
    (0, _inherits2.default)(Setting, _Component);

    function Setting(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Setting);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Setting).call(this, props));

      _this.onValueChange = function (value) {
        (0, _apis.setNearbyWakeupStatus)(null, value).then(function () {
          _this.setState({
            value: value
          });
        }).catch(_fns.log);
      };

      _this.state = {
        value: false
      };
      return _this;
    }

    (0, _createClass2.default)(Setting, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        (0, _apis.getNearbyWakeupStatus)().then(function (_ref) {
          var status = _ref.status;

          _this2.setState({
            value: status === 'on'
          });
        }).catch(_fns.log);
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.ScrollView, {
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: Styles.item
        }, _react.default.createElement(_ListItem.ListItemWithSwitch, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          title: _i18n.default.nearbyWakeup(),
          value: this.state.value,
          showSeparator: false,
          titleStyle: Styles.title,
          containerStyle: Styles.listItem,
          onTintColor: "#0097ff",
          tintColor: "#e5e5e5",
          onValueChange: this.onValueChange
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.separatorWrap
        }, _react.default.createElement(_Separator.default, {
          style: Styles.separator
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.illustration
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.illustrationText
        }, _i18n.default.nearbyWakeupTip())))));
      }
    }]);
    return Setting;
  }(_react.Component);

  exports.default = Setting;

  Setting.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        title: _i18n.default.nearbyWakeup(),
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: 'white',
      paddingTop: (0, _sizes.adjustSize)(15)
    },
    separatorWrap: {
      marginVertical: (0, _sizes.adjustSize)(60),
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    illustration: {
      paddingTop: (0, _sizes.adjustSize)(30),
      paddingBottom: (0, _sizes.adjustSize)(54),
      paddingHorizontal: (0, _sizes.adjustSize)(72)
    },
    illustrationText: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: "#999999"
    }
  });
},10511,[14308,14305,14320,14323,14371,14377,14386,10297,10719,10033,10776,10782,10779,10332,10338,10097,10043]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _ListItemWithSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _MHDatePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _Strings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _apis = _$$_REQUIRE(_dependencyMap[20]);

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[21]);

  var _supports = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var NightMode = function (_Component) {
    (0, _inherits2.default)(NightMode, _Component);

    function NightMode() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, NightMode);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(NightMode)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        supportDetail: false,
        layerVisible: 2,
        loadingMessage: _i18n.default.loadingTitle(),
        timerFlag: 'start',
        loading: false,
        status: {}
      };

      _this.changeTotal = function (v) {
        _this.changeCfg('total', v ? 'night' : 'normal');
      };

      _this.changeLight = function (v) {
        _this.changeCfg('light', v ? 'night' : 'normal');
      };

      _this.changeVolume = function (v) {
        _this.changeCfg('volume', v ? 'night' : 'normal');
      };

      _this.showTimerSelector = function (flag) {
        _this.setState({
          layerVisible: 1,
          timerFlag: flag
        });
      };

      _this.hideTimerSelector = function () {
        _this.setState({
          layerVisible: 0
        });
      };

      _this.selectTimer = function (v) {
        _this.changeCfg(_this.state.timerFlag, v.rawString);
      };

      _this.changeCfg = function (key, v) {
        (0, _apis.setNightModeStatus)(null, (0, _defineProperty2.default)({}, key, v)).then(function () {
          _this.setState(function (state) {
            var _objectSpread2;

            return {
              status: (0, _objectSpread3.default)({}, state.status, (_objectSpread2 = {}, (0, _defineProperty2.default)(_objectSpread2, key, v), (0, _defineProperty2.default)(_objectSpread2, "layerVisible", 0), (0, _defineProperty2.default)(_objectSpread2, "loadingMessage", ''), _objectSpread2))
            };
          });
        }).catch(function (e) {
          _this.setState({
            loadingMessage: _Strings.default.error
          });
        });
      };

      _this.onDismiss = function () {
        _this.setState({
          layerVisible: 0,
          loadingMessage: ''
        });
      };

      return _this;
    }

    (0, _createClass2.default)(NightMode, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        (0, _supports.default)(_capabilitiesFormatted.NightModeDetail).then(function () {
          _this2.setState({
            supportDetail: true
          });
        }).catch(function () {});
        (0, _apis.getNightModeStatus)().then(function (res) {
          _this2.setState({
            status: (0, _objectSpread3.default)({}, res),
            layerVisible: 0,
            loadingMessage: ''
          });
        }).catch(function (e) {
          _this2.setState({
            layerVisible: 3,
            loadingMessage: _Strings.default.error
          });
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var _this$state = this.state,
            layerVisible = _this$state.layerVisible,
            loadingMessage = _this$state.loadingMessage,
            supportDetail = _this$state.supportDetail,
            timerFlag = _this$state.timerFlag,
            _this$state$status = _this$state.status,
            total = _this$state$status.total,
            light = _this$state$status.light,
            volume = _this$state$status.volume,
            start = _this$state$status.start,
            stop = _this$state$status.stop;
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.ScrollView, {
          contentContainerStyle: Styles.content,
          showsVerticalScrollIndicator: false
        }, layerVisible === 2 ? null : _react.default.createElement(_react.Fragment, null, _react.default.createElement(_reactNative.View, {
          style: Styles.itemMin
        }, _react.default.createElement(_ListItemWithSwitch.default, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          title: _i18n.default.nightMode(),
          value: total === 'night',
          onValueChange: this.changeTotal,
          onTintColor: "#0097FF",
          showSeparator: false
        })), total === 'night' ? _react.default.createElement(_react.Fragment, null, _react.default.createElement(_reactNative.View, {
          style: Styles.separatorWrap
        }, _react.default.createElement(_Separator.default, {
          style: Styles.separator
        })), supportDetail ? _react.default.createElement(_react.Fragment, null, _react.default.createElement(_reactNative.View, {
          style: Styles.item
        }, _react.default.createElement(_ListItemWithSwitch.default, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          title: _i18n.default.nightLight(),
          subtitle: _i18n.default.nightLightTip(),
          value: light === 'night',
          onValueChange: this.changeLight,
          onTintColor: "#0097FF",
          showSeparator: false
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.item
        }, _react.default.createElement(_ListItemWithSwitch.default, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          title: _i18n.default.nightVolumn(),
          subtitle: _i18n.default.nightVolumnTip(),
          value: volume === 'night',
          onValueChange: this.changeVolume,
          onTintColor: "#0097FF",
          showSeparator: false
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.separatorWrap
        }, _react.default.createElement(_Separator.default, {
          style: Styles.separator
        }))) : null, _react.default.createElement(_reactNative.View, {
          style: Styles.item
        }, _react.default.createElement(_ListItem.default, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          title: start || '-',
          subtitle: _i18n.default.enableTime(),
          onPress: function onPress() {
            _this3.showTimerSelector('start');
          },
          showSeparator: false
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.item
        }, _react.default.createElement(_ListItem.default, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          title: stop || '-',
          subtitle: _i18n.default.disableTime(),
          onPress: function onPress() {
            _this3.showTimerSelector('stop');
          },
          showSeparator: false
        }))) : null)), layerVisible === 1 ? _react.default.createElement(_MHDatePicker.default, {
          visible: true,
          title: timerFlag === 'start' ? _i18n.default.enableTime() : _i18n.default.disableTime(),
          type: _MHDatePicker.default.TYPE.TIME24,
          current: timerFlag === 'start' ? (start || '23:00').split(':') : (stop || '07:59').split(':'),
          onSelect: this.selectTimer,
          onDismiss: this.hideTimerSelector
        }) : null, [2, 3].indexOf(layerVisible) !== -1 && !!loadingMessage ? _react.default.createElement(_LoadingDialog.default, {
          visible: true,
          message: loadingMessage,
          timeout: layerVisible === 2 ? 60000 : 3000,
          onDismiss: this.onDismiss
        }) : null);
      }
    }]);
    return NightMode;
  }(_react.Component);

  exports.default = NightMode;

  NightMode.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        title: _i18n.default.nightMode(),
        type: _NavigationBar.default.TYPE.LIGHT,
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#fff',
      paddingTop: (0, _sizes.adjustSize)(15)
    },
    content: {},
    separatorWrap: {
      marginVertical: (0, _sizes.adjustSize)(60),
      marginHorizontal: (0, _sizes.adjustSize)(72)
    }
  });
},10514,[14308,14305,14314,14317,14320,14323,14371,14377,14386,10297,10719,10033,10776,10329,10344,10332,10716,10740,10320,10097,10043,10049,10139]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _Strings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _apis = _$$_REQUIRE(_dependencyMap[15]);

  var SourceDts0 = _$$_REQUIRE(_dependencyMap[16]);

  var SourceDts1 = _$$_REQUIRE(_dependencyMap[17]);

  var SourceDts2 = _$$_REQUIRE(_dependencyMap[18]);

  var DTS = function (_Component) {
    (0, _inherits2.default)(DTS, _Component);

    function DTS() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, DTS);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(DTS)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        mode: -1,
        errorVisible: false
      };

      _this.showError = function () {
        _this.setState({
          errorVisible: true
        });
      };

      _this.cancel = function () {
        _this.setState({
          errorVisible: false
        });
      };

      _this.select = function (mode) {
        if (mode === _this.state.mode) {
          return;
        }

        (0, _apis.setDtsStatus)(null, {
          mode: mode
        }).then(function () {
          _this.setState({
            mode: mode
          });
        }).catch(function (e) {
          _this.showError();
        });
      };

      return _this;
    }

    (0, _createClass2.default)(DTS, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        (0, _apis.getDtsStatus)().then(function (_ref) {
          var mode = _ref.mode;

          _this2.setState({
            mode: mode
          });
        }).catch(function (e) {});
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var _this$state = this.state,
            errorVisible = _this$state.errorVisible,
            mode = _this$state.mode;
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.ScrollView, {
          contentContainerStyle: Styles.content,
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, _i18n.default.dtsEffect()), _react.default.createElement(_reactNative.Text, {
          style: Styles.tip
        }, _i18n.default.dtsTip()), _react.default.createElement(_reactNative.View, {
          style: Styles.list
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: [Styles.btn, Styles.btn2, mode === 2 ? Styles.borderRed : null],
          activeOpacity: 0.8,
          onPress: function onPress() {
            _this3.select(2);
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: Styles.icon,
          source: SourceDts2
        }), _react.default.createElement(_reactNative.Text, {
          style: [Styles.itemText, Styles.colorRed]
        }, _i18n.default.dtsTypeHuman())), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: [Styles.btn, Styles.btn0, mode === 0 ? Styles.borderBlue : null],
          activeOpacity: 0.8,
          onPress: function onPress() {
            _this3.select(0);
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: Styles.icon,
          source: SourceDts0
        }), _react.default.createElement(_reactNative.Text, {
          style: [Styles.itemText, Styles.colorBlue]
        }, _i18n.default.dtsTypeSurge())), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: [Styles.btn, Styles.btn1, mode === 1 ? Styles.borderGreen : null],
          activeOpacity: 0.8,
          onPress: function onPress() {
            _this3.select(1);
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: Styles.icon,
          source: SourceDts1
        }), _react.default.createElement(_reactNative.Text, {
          style: [Styles.itemText, Styles.colorGreen]
        }, _i18n.default.dtsTypeMild()))))), errorVisible ? _react.default.createElement(_LoadingDialog.default, {
          visible: true,
          message: _Strings.default.error,
          timeout: 1000,
          onDismiss: this.cancel
        }) : null);
      }
    }]);
    return DTS;
  }(_react.Component);

  exports.default = DTS;

  DTS.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        title: _i18n.default.dtsSetting(),
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: 'white',
      paddingTop: (0, _sizes.adjustSize)(15)
    },
    content: {
      flex: 1,
      marginHorizontal: (0, _sizes.adjustSize)(60)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(48),
      lineHeight: (0, _sizes.adjustSize)(66),
      color: '#000'
    },
    tip: {
      marginTop: (0, _sizes.adjustSize)(3),
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: "#999999"
    },
    list: {
      marginTop: (0, _sizes.adjustSize)(90),
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    btn: {
      width: (0, _sizes.adjustSize)(300),
      height: (0, _sizes.adjustSize)(330),
      justifyContent: 'center',
      alignItems: 'center',
      borderWidth: (0, _sizes.adjustSize)(9),
      borderRadius: (0, _sizes.adjustSize)(51),
      borderColor: 'transparent'
    },
    borderRed: {
      borderColor: '#FB7C8C'
    },
    borderBlue: {
      borderColor: '#62ACD4'
    },
    borderGreen: {
      borderColor: '#7ACAAB'
    },
    icon: {
      width: (0, _sizes.adjustSize)(270),
      height: (0, _sizes.adjustSize)(300),
      resizeMode: 'contain'
    },
    itemText: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(48),
      position: 'absolute',
      top: (0, _sizes.adjustSize)(51)
    },
    colorRed: {
      color: '#FB7C8C'
    },
    colorBlue: {
      color: '#62ACD4'
    },
    colorGreen: {
      color: '#7ACAAB'
    }
  });
},10517,[14308,14305,14320,14323,14371,14377,14386,10297,10719,10033,10740,10776,10782,10320,10097,10043,10520,10523,10526]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 360,
    "height": 400,
    "scales": [1],
    "hash": "07b3249726c22746d4d020e4e43b0b40",
    "name": "dts0",
    "type": "png"
  });
},10520,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 360,
    "height": 400,
    "scales": [1],
    "hash": "e018e36059110c17e3bb39cd0be2c0df",
    "name": "dts1",
    "type": "png"
  });
},10523,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 360,
    "height": 400,
    "scales": [1],
    "hash": "8bdb65a5c81c523605112baee0e0d0ab",
    "name": "dts2",
    "type": "png"
  });
},10526,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fonts = _$$_REQUIRE(_dependencyMap[13]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _apis = _$$_REQUIRE(_dependencyMap[15]);

  var _globalData = _$$_REQUIRE(_dependencyMap[16]);

  var SourceArrow = _$$_REQUIRE(_dependencyMap[17]);

  var SourceTip = _$$_REQUIRE(_dependencyMap[18]);

  var VoicePrinter = function (_Component) {
    (0, _inherits2.default)(VoicePrinter, _Component);

    function VoicePrinter() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, VoicePrinter);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(VoicePrinter)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        list: [],
        errorVisible: false,
        errorMsg: ''
      };

      _this.goEditVoicePrinter = function (e, item) {
        var list = _this.state.list;

        if (!item && list.length >= 6) {
          _this.showFail(_i18n.default.voicePrinterLimit());

          return;
        }

        (0, _globalData.setGlobalData)('voicePrinter', item);

        _this.props.navigation.navigate('EditVoicePrinter');
      };

      _this.showFail = function (msg) {
        _this.setState({
          errorVisible: true,
          errorMsg: msg
        });
      };

      _this.hideFail = function () {
        _this.setState({
          errorVisible: false
        });
      };

      _this.getList = function () {
        (0, _apis.getVoicePrinterList)().then(function (res) {
          _this.setState({
            list: (0, _toConsumableArray2.default)(res)
          });
        }).catch(function (e) {});
      };

      _this.listenerWillFocus = null;
      return _this;
    }

    (0, _createClass2.default)(VoicePrinter, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.getList();
        (0, _globalData.setGlobalData)('voicePrinter', null);
        this.listenerWillFocus = this.props.navigation.addListener('willFocus', this.getList);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.listenerWillFocus && this.listenerWillFocus.remove();
        this.listenerWillFocus = null;
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$state = this.state,
            list = _this$state.list,
            errorVisible = _this$state.errorVisible,
            errorMsg = _this$state.errorMsg;
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.content
        }, _react.default.createElement(_reactNative.ScrollView, {
          style: Styles.contentInner,
          showsVerticalScrollIndicator: false
        }, list.filter(function (item) {
          return item && !item.isDelete;
        }).map(function (item) {
          return _react.default.createElement(_reactNative.TouchableOpacity, {
            key: item.voiceId,
            style: Styles.item,
            activeOpacity: 0.8,
            onPress: function onPress() {
              _this2.goEditVoicePrinter(null, item);
            }
          }, _react.default.createElement(_reactNative.View, {
            style: Styles.itemWrap
          }, _react.default.createElement(_reactNative.View, {
            style: Styles.left
          }, _react.default.createElement(_reactNative.Text, {
            style: Styles.itemText
          }, item.nickName), item.status ? null : _react.default.createElement(_reactNative.Image, {
            style: Styles.tip,
            source: SourceTip
          })), _react.default.createElement(_reactNative.Image, {
            style: Styles.arrow,
            source: SourceArrow
          })));
        })), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: Styles.btnNext,
          activeOpacity: 0.8,
          onPress: this.goEditVoicePrinter
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.btnNextText
        }, _i18n.default.addVoicePrinter()))), errorVisible && errorMsg ? _react.default.createElement(_LoadingDialog.default, {
          visible: true,
          message: errorMsg,
          timeout: 1000,
          onDismiss: this.hideFail
        }) : null);
      }
    }]);
    return VoicePrinter;
  }(_react.Component);

  exports.default = VoicePrinter;

  VoicePrinter.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        title: _i18n.default.voicePrinterSetting(),
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#fff'
    },
    content: {
      flex: 1
    },
    contentInner: {
      flex: 1,
      marginHorizontal: (0, _sizes.adjustSize)(30),
      marginTop: (0, _sizes.adjustSize)(60)
    },
    item: {
      marginTop: 0,
      marginBottom: (0, _sizes.adjustSize)(30)
    },
    itemWrap: {
      height: (0, _sizes.adjustSize)(231),
      backgroundColor: '#f7f7f7',
      borderRadius: (0, _sizes.adjustSize)(36),
      paddingLeft: (0, _sizes.adjustSize)(84),
      paddingRight: (0, _sizes.adjustSize)(60),
      flexDirection: 'row',
      alignItems: 'center'
    },
    left: {
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center'
    },
    itemText: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(54),
      color: '#000'
    },
    tip: {
      width: (0, _sizes.adjustSize)(54),
      height: (0, _sizes.adjustSize)(54),
      resizeMode: 'contain',
      marginLeft: (0, _sizes.adjustSize)(33)
    },
    arrow: {
      marginLeft: (0, _sizes.adjustSize)(30)
    },
    btnNext: {
      margin: (0, _sizes.adjustSize)(72),
      height: (0, _sizes.adjustSize)(138),
      backgroundColor: '#f5f5f5',
      borderRadius: (0, _sizes.adjustSize)(69),
      justifyContent: 'center',
      alignItems: 'center'
    },
    btnNextText: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(45),
      color: '#4c4c4c'
    }
  });
},10529,[14308,14305,14359,14320,14323,14371,14377,14386,10297,10719,10033,10740,10776,10782,10097,10043,10454,10311,10532]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 54,
    "height": 57,
    "scales": [1],
    "hash": "78c61e7a6e6ff53595a9151432bef7cd",
    "name": "tip",
    "type": "png"
  });
},10532,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _MessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _sizes = _$$_REQUIRE(_dependencyMap[13]);

  var _fonts = _$$_REQUIRE(_dependencyMap[14]);

  var _Strings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _globalData = _$$_REQUIRE(_dependencyMap[16]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _apis = _$$_REQUIRE(_dependencyMap[18]);

  var EditVoicePrinter = function (_Component) {
    (0, _inherits2.default)(EditVoicePrinter, _Component);

    function EditVoicePrinter() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, EditVoicePrinter);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(EditVoicePrinter)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        input: '',
        confirmVisable: false,
        errorVisible: false,
        errorMsg: ''
      };
      _this.voicePrinter = null;

      _this.changeInput = function (v) {
        _this.setState({
          input: v
        });
      };

      _this.deleteVoicePrinter = function () {
        _this.hideDeleteConfirm();

        if (!_this.voicePrinter || !_this.voicePrinter.voiceId) {
          return;
        }

        (0, _apis.deleteVoicePrinter)(_this.voicePrinter.voiceId).then(function () {
          _this.props.navigation.navigate('VoicePrinter');
        }).catch(function () {
          _this.showFail(_i18n.default.removeFail());
        });
      };

      _this.saveVoicePrinter = function () {
        var input = _this.state.input;
        var newVoicePrinter = _this.voicePrinter ? (0, _objectSpread2.default)({}, _this.voicePrinter, {
          nickName: input
        }) : {
          nickName: input
        };
        var voiceId = _this.voicePrinter ? _this.voicePrinter.voiceId : '';
        var rAllChinese = /^[\u4e00-\u9fa5]+$/;

        if (!input.replace(/\s+/g, '')) {
          _this.showFail(_i18n.default.nicknameNeedNotEmpty());

          return;
        }

        if (!rAllChinese.test(input)) {
          _this.showFail(_i18n.default.nicknameNeedAllChinese());

          return;
        }

        if (!voiceId) {
          (0, _apis.createVoicePrinter)(newVoicePrinter.nickName).then(function (voicePrinter) {
            (0, _globalData.setGlobalData)('voicePrinter', voicePrinter);

            _this.props.navigation.navigate('RecordingVoicePrinter');
          }).catch(function (e) {
            _this.showFail(e && e.usableErrorMessage ? e.usableErrorMessage : _i18n.default.addVoicePrinterFail());
          });
          return;
        }

        (0, _apis.resignVoicePrinter)(voiceId, newVoicePrinter.nickName).then(function (voicePrinter) {
          (0, _globalData.setGlobalData)('voicePrinter', voicePrinter);

          _this.props.navigation.navigate('RecordingVoicePrinter');
        }).catch(function (e) {
          _this.showFail(e && e.usableErrorMessage ? e.usableErrorMessage : _i18n.default.addVoicePrinterFail());
        });
      };

      _this.showFail = function (msg) {
        _this.setState({
          errorVisible: true,
          errorMsg: msg,
          isFocused: false
        });
      };

      _this.hideFail = function () {
        _this.setState({
          errorVisible: false
        });
      };

      _this.showDeleteConfirm = function () {
        _this.setState({
          confirmVisable: true
        });
      };

      _this.hideDeleteConfirm = function () {
        _this.setState({
          confirmVisable: false
        });
      };

      _this.onFocus = function () {
        _this.setState({
          isFocused: true
        });
      };

      _this.onBlur = function () {
        _this.setState({
          isFocused: false
        });
      };

      _this.init = function () {
        _this.voicePrinter = (0, _globalData.getGlobalData)('voicePrinter');

        if (_this.voicePrinter && _this.voicePrinter.nickName) {
          _this.setState({
            input: _this.voicePrinter.nickName
          });
        }
      };

      return _this;
    }

    (0, _createClass2.default)(EditVoicePrinter, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.init();
        this.listener = this.props.navigation.addListener('didFocus', this.init);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.listener && this.listener.remove();
        this.listener = null;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$state = this.state,
            input = _this$state.input,
            confirmVisable = _this$state.confirmVisable,
            errorVisible = _this$state.errorVisible,
            errorMsg = _this$state.errorMsg,
            isFocused = _this$state.isFocused;
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.ScrollView, {
          contentContainerStyle: Styles.content,
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.content
        }, this.voicePrinter && !this.voicePrinter.status ? _react.default.createElement(_reactNative.Text, {
          style: Styles.tipStatus
        }, _i18n.default.nicknameNotRecord()) : null, _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, _i18n.default.nickname()), _react.default.createElement(_reactNative.View, {
          style: [Styles.inputWrap, isFocused ? {
            borderColor: '#3eb1ff'
          } : null]
        }, this.voicePrinter && this.voicePrinter.nickName ? _react.default.createElement(_reactNative.Text, {
          style: Styles.input
        }, input) : _react.default.createElement(_reactNative.TextInput, {
          style: Styles.input,
          selectionColor: "#3eb1ff",
          onFocus: this.onFocus,
          onBlur: this.onBlur,
          maxLength: 10,
          placeholder: _i18n.default.inputNameTip(),
          value: input,
          onChangeText: this.changeInput,
          editable: !(this.voicePrinter && this.voicePrinter.nickName)
        })), _react.default.createElement(_reactNative.Text, {
          style: Styles.tip
        }, _i18n.default.nicknameTip())), _react.default.createElement(_reactNative.View, {
          style: Styles.btns
        }, this.voicePrinter ? _react.default.createElement(_react.Fragment, null, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: Styles.btnNext,
          activeOpacity: 0.8,
          onPress: this.showDeleteConfirm
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.btnNextText
        }, _i18n.default.removeVoicePrinter())), this.voicePrinter && !this.voicePrinter.status ? _react.default.createElement(_reactNative.TouchableOpacity, {
          style: [Styles.btnNext, {
            marginLeft: (0, _sizes.adjustSize)(36)
          }],
          activeOpacity: 0.8,
          onPress: this.saveVoicePrinter,
          disabled: !input
        }, _react.default.createElement(_reactNative.Text, {
          style: [Styles.btnNextText, input ? null : Styles.disabled, {
            color: '#3eb1ff'
          }]
        }, _i18n.default.readdVoicePrinter())) : null) : _react.default.createElement(_reactNative.TouchableOpacity, {
          style: Styles.btnNext,
          activeOpacity: 0.8,
          onPress: this.saveVoicePrinter,
          disabled: !input
        }, _react.default.createElement(_reactNative.Text, {
          style: [Styles.btnNextText, input ? null : Styles.disabled]
        }, _i18n.default.nextStep())))), confirmVisable ? _react.default.createElement(_MessageDialog.default, {
          messageStyle: {
            textAlign: 'center'
          },
          visible: true,
          title: _i18n.default.tip(),
          message: _i18n.default.removeVoicePrinterConfirm(),
          buttons: [{
            text: _Strings.default.cancel,
            callback: this.hideDeleteConfirm
          }, {
            text: _Strings.default.ok,
            callback: this.deleteVoicePrinter
          }],
          onDismiss: this.hideDeleteConfirm
        }) : null, errorVisible && errorMsg ? _react.default.createElement(_LoadingDialog.default, {
          visible: true,
          message: errorMsg,
          timeout: 1000,
          onDismiss: this.hideFail
        }) : null);
      }
    }]);
    return EditVoicePrinter;
  }(_react.Component);

  exports.default = EditVoicePrinter;

  EditVoicePrinter.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        title: _i18n.default.voicePrinterSetting(),
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: 'white',
      paddingTop: (0, _sizes.adjustSize)(15)
    },
    content: {
      flex: 1
    },
    tipStatus: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(102),
      color: '#f00',
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(102),
      color: '#8C93B0',
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    inputWrap: {
      marginHorizontal: (0, _sizes.adjustSize)(72),
      height: (0, _sizes.adjustSize)(138),
      justifyContent: 'center',
      borderRadius: (0, _sizes.adjustSize)(36),
      backgroundColor: 'rgba(0, 0, 0, 0.04)',
      borderWidth: 1,
      borderColor: 'transparent',
      overflow: 'hidden'
    },
    input: {
      paddingHorizontal: (0, _sizes.adjustSize)(39),
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(45),
      color: '#000'
    },
    tip: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(102),
      color: '#999',
      marginHorizontal: (0, _sizes.adjustSize)(72),
      marginTop: (0, _sizes.adjustSize)(30)
    },
    btns: {
      margin: (0, _sizes.adjustSize)(72),
      flexDirection: 'row'
    },
    btnNext: {
      flex: 1,
      height: (0, _sizes.adjustSize)(138),
      backgroundColor: '#f5f5f5',
      borderRadius: (0, _sizes.adjustSize)(69),
      justifyContent: 'center',
      alignItems: 'center'
    },
    btnNextText: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(45),
      color: '#4c4c4c'
    },
    disabled: {
      color: '#999'
    }
  });
},10535,[14308,14305,14314,14320,14323,14371,14377,14386,10297,10719,10033,10743,10740,10776,10782,10320,10454,10097,10043]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _globalData = _$$_REQUIRE(_dependencyMap[14]);

  var RecordingVoicePrinter = function (_Component) {
    (0, _inherits2.default)(RecordingVoicePrinter, _Component);

    function RecordingVoicePrinter() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, RecordingVoicePrinter);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(RecordingVoicePrinter)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        loadingMsg: '',
        loadingVisible: false
      };
      _this.voicePrinter = null;

      _this.saveVoicePrinter = function () {
        (0, _globalData.setGlobalData)('voicePrinter', null);

        _this.props.navigation.navigate('VoicePrinter');
      };

      _this.showFail = function () {
        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            usableErrorMessage = _ref.usableErrorMessage;

        _this.setState({
          loadingMsg: usableErrorMessage || _i18n.default.addVoicePrinterFail(),
          loadingVisible: true
        });
      };

      _this.hideFail = function () {
        _this.setState({
          loadingVisible: false
        });
      };

      return _this;
    }

    (0, _createClass2.default)(RecordingVoicePrinter, [{
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "render",
      value: function render() {
        var _this$state = this.state,
            loadingMsg = _this$state.loadingMsg,
            loadingVisible = _this$state.loadingVisible;
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.ScrollView, {
          contentContainerStyle: Styles.content,
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.content
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, _i18n.default.recordVoicePrinterTitle()), _react.default.createElement(_reactNative.View, {
          style: Styles.key
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.keyText
        }, _i18n.default.recordVoicePrinterKey())), _react.default.createElement(_reactNative.Text, {
          style: Styles.tip
        }, _i18n.default.recordVoicePrinterTip())), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: Styles.btnNext,
          activeOpacity: 0.8,
          onPress: this.saveVoicePrinter
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.btnNextText
        }, _i18n.default.endRecordVoicePrinter()))), loadingVisible && loadingMsg ? _react.default.createElement(_LoadingDialog.default, {
          visible: true,
          message: loadingMsg,
          timeout: 1000,
          onDismiss: this.hideFail
        }) : null);
      }
    }]);
    return RecordingVoicePrinter;
  }(_react.Component);

  exports.default = RecordingVoicePrinter;

  RecordingVoicePrinter.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        title: _i18n.default.startRecordVoicePrinter(),
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: 'white',
      paddingTop: (0, _sizes.adjustSize)(15)
    },
    content: {
      flex: 1
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(102),
      color: '#8C93B0',
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    key: {
      padding: (0, _sizes.adjustSize)(48),
      backgroundColor: '#3EB1FF22',
      marginHorizontal: (0, _sizes.adjustSize)(72),
      alignSelf: 'flex-start',
      borderRadius: (0, _sizes.adjustSize)(30)
    },
    keyText: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(45),
      lineHeight: (0, _sizes.adjustSize)(60),
      color: '#3EB1FF'
    },
    tip: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(102),
      color: '#999',
      marginHorizontal: (0, _sizes.adjustSize)(72),
      marginTop: (0, _sizes.adjustSize)(30)
    },
    btnNext: {
      margin: (0, _sizes.adjustSize)(72),
      height: (0, _sizes.adjustSize)(138),
      backgroundColor: '#f5f5f5',
      borderRadius: (0, _sizes.adjustSize)(69),
      justifyContent: 'center',
      alignItems: 'center'
    },
    btnNextText: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(45),
      color: '#4c4c4c'
    }
  });
},10538,[14308,14305,14320,14323,14371,14377,14386,10297,10719,10033,10740,10776,10782,10097,10454]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _miot = _$$_REQUIRE(_dependencyMap[11]);

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _ListItemWithSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _StringSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _fonts = _$$_REQUIRE(_dependencyMap[20]);

  var _fns = _$$_REQUIRE(_dependencyMap[21]);

  var _Strings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var _supports = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var _capabilitiesFormatted = _$$_REQUIRE(_dependencyMap[25]);

  var _apis = _$$_REQUIRE(_dependencyMap[26]);

  var TimersEachTimeValue = [1440, 15, 30, 45, 60, 90, 120];
  var TimersEachDayValue = [1440, 0, 30, 40, 50, 60, 90, 120, 150, 180];
  var TimersEachTime = TimersEachTimeValue.map(formatTime);
  var TimersEachDay = TimersEachDayValue.map(formatTime);

  function getChildLegalUrl() {
    var language = (_miot.Host.locale.language || '').toLowerCase();

    switch (language) {
      case 'zh':
        return 'https://mina.mi.com/child_privacy_policy?locale=zh_cn';

      case 'zh_tw':
        return 'https://mina.mi.com/child_privacy_policy?locale=zh_tw';

      default:
        return 'https://mina.mi.com/child_privacy_policy?locale=en_us';
    }
  }

  function formatTime(v) {
    if (!v && v !== 0) {
      return '-';
    }

    if (v === 1440) {
      return _i18n.default.noLimit();
    }

    var hours = Math.floor(v / 60);
    var minutes = v % 60;

    if (!hours) {
      return _i18n.default.minutes(minutes);
    }

    if (!minutes) {
      return _i18n.default.hours(hours);
    }

    return _i18n.default.hoursAndMinutes(hours, minutes);
  }

  function deformatTime(s, flag) {
    var keys = flag === 'watchTimeMaxMinutesEachTime' ? TimersEachTime : TimersEachDay;
    var values = flag === 'watchTimeMaxMinutesEachTime' ? TimersEachTimeValue : TimersEachDayValue;
    var index = keys.findIndex(function (key) {
      return key === s;
    });

    if (index !== -1) {
      return values[index];
    }
  }

  var ChildMode = function (_Component) {
    (0, _inherits2.default)(ChildMode, _Component);

    function ChildMode() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, ChildMode);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ChildMode)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        supportTime: false,
        supportSwitch: false,
        timerFlag: 'watchTimeMaxMinutesEachTime',
        timerSelectorVisible: false,
        errorVisible: false,
        status: {}
      };
      _this.tempTimer = 1440;

      _this.showTimerSelector = function (flag) {
        _this.setState({
          timerSelectorVisible: true,
          timerFlag: flag
        });
      };

      _this.hideTimerSelector = function () {
        _this.setState({
          timerSelectorVisible: false
        });
      };

      _this.selectTimer = function () {
        var cfg = (0, _objectSpread3.default)({}, _this.state.status, {
          eyeProtection: (0, _objectSpread3.default)({}, _this.state.status.eyeProtection || {}, (0, _defineProperty2.default)({}, _this.state.timerFlag, _this.tempTimer))
        });

        _this.hideTimerSelector();

        _this.setChildModeStatus(cfg);
      };

      _this.setTempTimer = function (v) {
        _this.tempTimer = deformatTime(v.newValue, _this.state.timerFlag);
      };

      _this.setChildModeStatus = function (cfg) {
        (0, _apis.setChildModeStatus)(null, cfg).then(function (res) {
          _this.setState({
            status: res
          });
        }).catch(function (e) {
          _this.showError();
        });
      };

      _this.changeIsChildMode = function (v) {
        var cfg = (0, _objectSpread3.default)({}, _this.state.status, {
          isChildMode: v
        });

        _this.setChildModeStatus(cfg);
      };

      _this.changeWatchTimeRestricted = function (v) {
        var cfg = (0, _objectSpread3.default)({}, _this.state.status, {
          eyeProtection: (0, _objectSpread3.default)({}, _this.state.eyeProtection || {}, {
            watchTimeRestricted: v
          })
        });

        _this.setChildModeStatus(cfg);
      };

      _this.goChildList = function () {
        _this.props.navigation.navigate('ChildList');
      };

      _this.goLegalPage = function () {
        _miot.Host.ui.openWebPage(getChildLegalUrl());
      };

      _this.goChildNoVideoSetting = function () {
        _this.props.navigation.navigate('ChildNoVideoSetting', {
          status: _this.state.status
        });
      };

      _this.getChildModeStatus = function () {
        (0, _apis.getChildModeStatus)().then(function (res) {
          _this.setState({
            status: (0, _objectSpread3.default)({}, res)
          });
        }).catch(function (e) {});
      };

      _this.showError = function () {
        _this.setState({
          errorVisible: true
        });
      };

      _this.cancel = function () {
        _this.setState({
          errorVisible: false
        });
      };

      _this.listenerDidFocus = null;
      return _this;
    }

    (0, _createClass2.default)(ChildMode, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        (0, _supports.default)(_capabilitiesFormatted.ChildModeTime).then(function () {
          _this2.setState({
            supportTime: true
          });
        }).catch(function () {
          _this2.setState({
            supportTime: false
          });
        });
        (0, _supports.default)(_capabilitiesFormatted.ChildModeSwitch).then(function () {
          _this2.setState({
            supportSwitch: true
          });
        }).catch(function () {
          _this2.setState({
            supportSwitch: false
          });
        });
        this.getChildModeStatus();
        this.listenerDidFocus = this.props.navigation.addListener('didFocus', this.getChildModeStatus);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.listenerDidFocus && this.listenerDidFocus.remove();
        this.listenerDidFocus = null;
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var _this$state = this.state,
            errorVisible = _this$state.errorVisible,
            supportTime = _this$state.supportTime,
            supportSwitch = _this$state.supportSwitch,
            timerSelectorVisible = _this$state.timerSelectorVisible,
            timerFlag = _this$state.timerFlag,
            _this$state$status = _this$state.status,
            isChildMode = _this$state$status.isChildMode,
            eyeProtection = _this$state$status.eyeProtection;
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.ScrollView, {
          contentContainerStyle: Styles.content,
          showsVerticalScrollIndicator: false
        }, supportSwitch ? _react.default.createElement(_reactNative.View, {
          style: Styles.item
        }, _react.default.createElement(_ListItemWithSwitch.default, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          subtitleNumberOfLines: 3,
          title: _i18n.default.childMode(),
          subtitle: _i18n.default.childModeTip(),
          value: isChildMode,
          onValueChange: this.changeIsChildMode,
          onTintColor: "#0097FF",
          showSeparator: false
        })) : null, _react.default.createElement(_reactNative.View, {
          style: Styles.item
        }, _react.default.createElement(_ListItem.default, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          title: _i18n.default.completeChildInfo(),
          subtitle: _i18n.default.completeChildInfoTip(),
          onPress: this.goChildList,
          showSeparator: false
        })), supportTime && eyeProtection ? _react.default.createElement(_react.Fragment, null, _react.default.createElement(_reactNative.View, {
          style: Styles.item
        }, _react.default.createElement(_ListItemWithSwitch.default, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          title: _i18n.default.timeLimit(),
          subtitle: _i18n.default.timeLimitTip(),
          value: eyeProtection.watchTimeRestricted,
          onValueChange: this.changeWatchTimeRestricted,
          onTintColor: "#0097FF",
          showSeparator: false
        })), eyeProtection.watchTimeRestricted ? _react.default.createElement(_react.Fragment, null, _react.default.createElement(_reactNative.View, {
          style: Styles.itemMin
        }, _react.default.createElement(_ListItem.default, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          title: _i18n.default.timeLimitOnce(),
          subtitle: _i18n.default.timeLimitOnceTip(),
          value: formatTime(eyeProtection.watchTimeMaxMinutesEachTime),
          onPress: function onPress() {
            _this3.showTimerSelector('watchTimeMaxMinutesEachTime');
          },
          showSeparator: false
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.itemMin
        }, _react.default.createElement(_ListItem.default, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          title: _i18n.default.timeLimitDay(),
          value: formatTime(eyeProtection.watchMaxMinutesEachDay),
          onPress: function onPress() {
            _this3.showTimerSelector('watchMaxMinutesEachDay');
          },
          showSeparator: false
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.item
        }, _react.default.createElement(_ListItem.default, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          title: _i18n.default.noVideoLimit(),
          subtitle: _i18n.default.noVideoLimitTip(),
          value: (0, _fns.fixNum)(eyeProtection.forbidWatchVideoStartTime.hour) + ":" + (0, _fns.fixNum)(eyeProtection.forbidWatchVideoStartTime.minute) + "-" + (0, _fns.fixNum)(eyeProtection.forbidWatchVideoEndTime.hour) + ":" + (0, _fns.fixNum)(eyeProtection.forbidWatchVideoEndTime.minute),
          onPress: this.goChildNoVideoSetting,
          showSeparator: false
        }))) : null) : null, _react.default.createElement(_reactNative.View, {
          style: Styles.separatorWrap
        }, _react.default.createElement(_Separator.default, {
          style: Styles.separator
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.legalTip
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.legalTipText
        }, _i18n.default.childModeLegalTip(), _react.default.createElement(_reactNative.Text, {
          style: Styles.legalLink,
          onPress: this.goLegalPage
        }, _i18n.default.childModeLegalName())))), timerSelectorVisible && eyeProtection ? _react.default.createElement(_AbstractDialog.default, {
          visible: true,
          title: timerFlag === 'watchTimeMaxMinutesEachTime' ? _i18n.default.timeLimitOnce() : _i18n.default.timeLimitDay(),
          onDismiss: this.hideTimerSelector,
          buttons: [{
            text: '是吗',
            style: {
              color: 'lightpink'
            },
            callback: function callback(_) {
              return undefined;
            }
          }, {
            text: '是啊',
            style: {
              color: '#f0ac3d'
            },
            callback: function callback(_) {
              return undefined;
            }
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: {
            borderTopWidth: 1,
            borderTopColor: '#f4f4f4',
            borderBottomWidth: 1,
            borderBottomColor: '#f4f4f4'
          }
        }, _react.default.createElement(_StringSpinner.default, {
          style: {
            height: (0, _sizes.adjustSize)(450)
          },
          pickerInnerStyle: {
            textColor: '#444',
            selectTextColor: '#000',
            fontSize: (0, _sizes.adjustSize)(36),
            selectFontSize: (0, _sizes.adjustSize)(48)
          },
          dataSource: timerFlag === 'watchTimeMaxMinutesEachTime' ? TimersEachTime : TimersEachDay,
          defaultValue: formatTime(timerFlag === 'watchTimeMaxMinutesEachTime' ? eyeProtection.watchTimeMaxMinutesEachTime : eyeProtection.watchMaxMinutesEachDay),
          onValueChanged: this.setTempTimer
        }))) : null, errorVisible ? _react.default.createElement(_LoadingDialog.default, {
          visible: true,
          message: _Strings.default.error,
          timeout: 1000,
          onDismiss: this.cancel
        }) : null);
      }
    }]);
    return ChildMode;
  }(_react.Component);

  exports.default = ChildMode;

  ChildMode.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        title: _i18n.default.childMode(),
        type: _NavigationBar.default.TYPE.LIGHT,
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#fff',
      paddingTop: (0, _sizes.adjustSize)(15)
    },
    content: {},
    separatorWrap: {
      marginVertical: (0, _sizes.adjustSize)(60),
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    legalTip: {
      paddingTop: (0, _sizes.adjustSize)(30),
      paddingBottom: (0, _sizes.adjustSize)(54),
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    legalTipText: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#999'
    },
    legalLink: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#0097FF'
    }
  });
},10541,[14308,14305,14317,14314,14320,14323,14371,14377,14386,10297,10033,10074,10776,10329,10719,10344,10332,10740,10725,10365,10782,10779,10320,10097,10139,10049,10043]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _MessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fonts = _$$_REQUIRE(_dependencyMap[13]);

  var _Strings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _fns = _$$_REQUIRE(_dependencyMap[15]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _apis = _$$_REQUIRE(_dependencyMap[17]);

  var SourceArrow = _$$_REQUIRE(_dependencyMap[18]);

  var SourceMale = _$$_REQUIRE(_dependencyMap[19]);

  var SourceFemale = _$$_REQUIRE(_dependencyMap[20]);

  function formatDate(timestamp) {
    if (!timestamp) {
      return '';
    }

    var then = new Date(timestamp);
    return then.getFullYear() + "-" + (0, _fns.fixNum)(then.getMonth() + 1) + "-" + (0, _fns.fixNum)(then.getDate());
  }

  var ChildList = function (_Component) {
    (0, _inherits2.default)(ChildList, _Component);

    function ChildList() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, ChildList);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ChildList)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        list: [],
        layerVisible: 0
      };

      _this.goChildInfo = function (item) {
        _this.props.navigation.navigate('ChildInfo', {
          childInfo: item
        });
      };

      _this.getChildList = function () {
        (0, _apis.getChildInfoList)().then(function (res) {
          _this.setState({
            list: res
          });
        }).catch(function (e) {});
      };

      _this.itemToRemove = null;

      _this.tryRemoveChildInfo = function (item) {
        _this.itemToRemove = item;

        _this.setState({
          layerVisible: 1
        });
      };

      _this.cancel = function () {
        _this.itemToRemove = null;

        _this.setState({
          layerVisible: 0
        });
      };

      _this.removeChildInfo = function () {
        if (!_this.itemToRemove) {
          _this.cancel();

          return;
        }

        var nickName = _this.itemToRemove.nickName;
        (0, _apis.deleteChildInfo)(nickName).then(function () {
          _this.setState(function (state) {
            return {
              list: state.list.filter(function (child) {
                return child && child.nickName !== nickName;
              }),
              layerVisible: 3
            };
          });
        }).catch(function (e) {
          _this.setState({
            layerVisible: 2
          });
        });
        _this.itemToRemove = null;
      };

      _this.listenerDidFocus = null;
      return _this;
    }

    (0, _createClass2.default)(ChildList, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.getChildList();
        this.listenerDidFocus = this.props.navigation.addListener('didFocus', this.getChildList);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.listenerDidFocus && this.listenerDidFocus.remove();
        this.listenerDidFocus = null;
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$state = this.state,
            list = _this$state.list,
            layerVisible = _this$state.layerVisible;
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.content,
          showsVerticalScrollIndicator: false
        }, list.length ? _react.default.createElement(_reactNative.ScrollView, {
          style: Styles.list
        }, list.filter(function (item) {
          return !!item.nickName;
        }).map(function (item) {
          return _react.default.createElement(_reactNative.TouchableOpacity, {
            key: item.nickName + "." + item.birthday,
            style: Styles.item,
            activeOpacity: 0.9,
            onPress: function onPress() {
              _this2.goChildInfo(item);
            },
            onLongPress: function onLongPress() {
              _this2.tryRemoveChildInfo(item);
            }
          }, _react.default.createElement(_reactNative.View, {
            style: Styles.text
          }, _react.default.createElement(_reactNative.View, {
            style: Styles.upper
          }, _react.default.createElement(_reactNative.Text, {
            style: [Styles.name, item.sex === 1 ? Styles.nameMale : Styles.nameFemale]
          }, item.nickName), _react.default.createElement(_reactNative.Image, {
            style: Styles.sex,
            source: item.sex === 1 ? SourceMale : SourceFemale
          })), _react.default.createElement(_reactNative.Text, {
            style: Styles.lower
          }, formatDate(item.birthday))), _react.default.createElement(_reactNative.Image, {
            style: Styles.arror,
            source: SourceArrow
          }));
        })) : _react.default.createElement(_reactNative.View, {
          style: Styles.empty
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.emptyTip
        }, _i18n.default.noChildInfo())), _react.default.createElement(_reactNative.View, {
          style: Styles.btns
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: Styles.btnNext,
          activeOpacity: 0.8,
          onPress: function onPress() {
            _this2.goChildInfo();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.btnNextText
        }, _i18n.default.addChild())))), layerVisible === 1 ? _react.default.createElement(_MessageDialog.default, {
          visible: true,
          message: _i18n.default.removeChildConfirm(),
          buttons: [{
            text: _Strings.default.cencel,
            callback: this.cancel
          }, {
            text: _Strings.default.ok,
            callback: this.removeChildInfo
          }],
          onDismiss: this.cancel
        }) : null, layerVisible === 2 ? _react.default.createElement(_LoadingDialog.default, {
          visible: true,
          message: _Strings.default.error,
          timeout: 1000,
          onDismiss: this.cancel
        }) : null, layerVisible === 3 ? _react.default.createElement(_LoadingDialog.default, {
          visible: true,
          message: _i18n.default.removeSuccess(),
          timeout: 1000,
          onDismiss: this.cancel
        }) : null);
      }
    }]);
    return ChildList;
  }(_react.Component);

  exports.default = ChildList;

  ChildList.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        title: _i18n.default.addChildInfo(),
        type: _NavigationBar.default.TYPE.LIGHT,
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack('ChildMode');
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#fff',
      paddingTop: (0, _sizes.adjustSize)(15)
    },
    content: {
      flex: 1
    },
    list: {
      flex: 1,
      marginTop: (0, _sizes.adjustSize)(20)
    },
    item: {
      marginHorizontal: (0, _sizes.adjustSize)(30),
      marginBottom: (0, _sizes.adjustSize)(30),
      flexDirection: 'row',
      minHeight: (0, _sizes.adjustSize)(231),
      paddingLeft: (0, _sizes.adjustSize)(75),
      paddingRight: (0, _sizes.adjustSize)(60),
      alignItems: 'center',
      backgroundColor: '#F7F7F7',
      borderRadius: (0, _sizes.adjustSize)(36)
    },
    text: {
      flex: 1
    },
    upper: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    name: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(48),
      lineHeight: (0, _sizes.adjustSize)(66),
      color: '#000'
    },
    nameMale: {
      color: '#4939D6'
    },
    nameFemale: {
      color: '#E14563'
    },
    sex: {
      width: (0, _sizes.adjustSize)(57),
      height: (0, _sizes.adjustSize)(57),
      resizeMode: 'contain'
    },
    lower: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(39),
      lineHeight: (0, _sizes.adjustSize)(54),
      marginTop: (0, _sizes.adjustSize)(3),
      color: '#999'
    },
    empty: {
      flex: 1,
      marginBottom: (0, _sizes.adjustSize)(420),
      marginHorizontal: (0, _sizes.adjustSize)(72),
      alignItems: 'center',
      justifyContent: 'center'
    },
    emptyTip: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#999'
    },
    btns: {
      margin: (0, _sizes.adjustSize)(72),
      flexDirection: 'row'
    },
    btnNext: {
      flex: 1,
      height: (0, _sizes.adjustSize)(138),
      backgroundColor: '#f5f5f5',
      borderRadius: (0, _sizes.adjustSize)(69),
      justifyContent: 'center',
      alignItems: 'center'
    },
    btnNextText: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(45),
      color: '#4c4c4c'
    }
  });
},10544,[14308,14305,14320,14323,14371,14377,14386,10297,10033,10719,10743,10740,10776,10782,10320,10779,10097,10043,10311,10547,10550]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 57,
    "height": 57,
    "scales": [1],
    "hash": "d7ac00483e2faf29035794911d6c1cb1",
    "name": "male",
    "type": "png"
  });
},10547,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 57,
    "height": 57,
    "scales": [1],
    "hash": "602688362078013a650a154052d54a81",
    "name": "female",
    "type": "png"
  });
},10550,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _InputDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _ActionSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _MHDatePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _sizes = _$$_REQUIRE(_dependencyMap[15]);

  var _fns = _$$_REQUIRE(_dependencyMap[16]);

  var _Strings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _apis = _$$_REQUIRE(_dependencyMap[19]);

  function formatDate(timestamp) {
    if (!timestamp) {
      return '';
    }

    var then = new Date(timestamp);
    return then.getFullYear() + "-" + (0, _fns.fixNum)(then.getMonth() + 1) + "-" + (0, _fns.fixNum)(then.getDate());
  }

  var ChildList = function (_Component) {
    (0, _inherits2.default)(ChildList, _Component);

    function ChildList() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, ChildList);

      for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
        _args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ChildList)).call.apply(_getPrototypeOf2, [this].concat(_args)));
      _this.state = {
        nickName: '',
        sex: '',
        birthday: '',
        editorFlag: 0,
        inputNickname: ''
      };
      _this.childInfo = null;

      _this.showEditor = function (flag) {
        _this.setState({
          editorFlag: flag
        });
      };

      _this.cancel = function () {
        _this.setState({
          editorFlag: 0,
          needVisible: false
        });
      };

      _this.changeInputNickname = function (v) {
        _this.setState({
          inputNickname: v
        });
      };

      _this.setNickname = function () {
        _this.setState(function (state) {
          return {
            nickName: state.inputNickname,
            editorFlag: 0
          };
        });
      };

      _this.setSex = function (v) {
        _this.setState({
          sex: v,
          editorFlag: 0
        });
      };

      _this.setBirthday = function (v) {
        if (!v || !v.date) {
          return;
        }

        _this.setState({
          birthday: v.date.getTime(),
          editorFlag: 0
        });
      };

      _this.onsave = function () {
        var childInfo = _this.childInfo;
        var _this$state = _this.state,
            nickName = _this$state.nickName,
            sex = _this$state.sex,
            birthday = _this$state.birthday;
        var fn = childInfo ? _apis.updateChildInfo : _apis.addChildInfo;
        var args = childInfo ? [childInfo.nickName, {
          nickName: nickName,
          sex: sex,
          birthday: birthday
        }] : [{
          nickName: nickName,
          sex: sex,
          birthday: birthday
        }];

        if (!nickName) {
          _this.showError(1);

          return;
        }

        if (!sex) {
          _this.showError(2);

          return;
        }

        if (!birthday) {
          _this.showError(3);

          return;
        }

        fn.apply(undefined, args).then(function () {
          _this.showSaveSuccess();
        }).catch(function (e) {
          _this.showError(4);
        });
        return;
      };

      _this.showError = function (key) {
        _this.setState({
          needVisible: !!key,
          needTip: {
            1: _i18n.default.needNickname(),
            2: _i18n.default.needGender(),
            3: _i18n.default.needBirthday(),
            4: _Strings.default.error
          }[key]
        });
      };

      _this.showSaveSuccess = function () {
        _this.setState({
          successVisible: true
        });
      };

      _this.saveDismiss = function () {
        _this.setState({
          successVisible: false
        }, function () {
          _this.props.navigation.goBack('ChildList');
        });
      };

      return _this;
    }

    (0, _createClass2.default)(ChildList, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var childInfo = this.props.navigation.getParam('childInfo', null);
        this.childInfo = childInfo;

        if (childInfo) {
          this.setState({
            nickName: childInfo.nickName,
            sex: childInfo.sex,
            birthday: childInfo.birthday
          });
        }

        this.props.navigation.setParams({
          onsave: this.onsave
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$state2 = this.state,
            nickName = _this$state2.nickName,
            sex = _this$state2.sex,
            birthday = _this$state2.birthday,
            editorFlag = _this$state2.editorFlag,
            inputNickname = _this$state2.inputNickname,
            needVisible = _this$state2.needVisible,
            needTip = _this$state2.needTip,
            successVisible = _this$state2.successVisible;
        var then = birthday ? new Date(birthday) : new Date();
        var now = new Date();
        var y = then.getFullYear();
        var m = then.getMonth() + 1;
        var d = then.getDate();
        var ny = now.getFullYear();
        var nm = now.getMonth() + 1;
        var nd = now.getDate();
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.ScrollView, {
          contentContainerStyle: Styles.content,
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_ListItem.default, {
          title: _i18n.default.nickname(),
          subtitle: nickName || _i18n.default.notSettled(),
          onPress: function onPress() {
            _this2.showEditor(1);
          }
        }), _react.default.createElement(_ListItem.default, {
          title: _i18n.default.gender(),
          subtitle: sex === 1 ? _i18n.default.male() : sex === 2 ? _i18n.default.female() : _i18n.default.notSettled(),
          onPress: function onPress() {
            _this2.showEditor(2);
          }
        }), _react.default.createElement(_ListItem.default, {
          title: _i18n.default.birthday(),
          subtitle: birthday ? formatDate(birthday) : _i18n.default.notSettled(),
          onPress: function onPress() {
            _this2.showEditor(3);
          }
        })), editorFlag === 1 ? _react.default.createElement(_InputDialog.default, {
          visible: true,
          title: _i18n.default.nickname(),
          inputs: [{
            placeholder: _i18n.default.nickname(),
            onChangeText: this.changeInputNickname,
            defaultValue: inputNickname
          }],
          buttons: [{
            text: _Strings.default.cancel,
            callback: this.cancel
          }, {
            text: _Strings.default.ok,
            callback: this.setNickname
          }],
          onDismiss: this.cancel
        }) : editorFlag === 2 ? _react.default.createElement(_ActionSheet.default, {
          visible: true,
          options: [{
            title: _i18n.default.male(),
            onPress: function onPress() {
              _this2.setSex(1);
            }
          }, {
            title: _i18n.default.female(),
            onPress: function onPress() {
              _this2.setSex(2);
            }
          }],
          onDismiss: this.cancel
        }) : editorFlag === 3 ? _react.default.createElement(_MHDatePicker.default, {
          visible: true,
          title: _i18n.default.birthday(),
          type: _MHDatePicker.default.TYPE.DATE,
          onSelect: this.setBirthday,
          onDismiss: this.cancel,
          current: [y, m, d],
          max: [ny, nm, nd],
          min: [Math.min(y, Math.max(y - 18, ny - 18)), m, d]
        }) : null, needVisible && needTip ? _react.default.createElement(_LoadingDialog.default, {
          visible: true,
          message: needTip,
          timeout: 1000,
          onDismiss: this.cancel
        }) : null, successVisible ? _react.default.createElement(_LoadingDialog.default, {
          visible: true,
          message: _i18n.default.saveSuccess(),
          timeout: 1000,
          onDismiss: this.saveDismiss
        }) : null);
      }
    }]);
    return ChildList;
  }(_react.Component);

  exports.default = ChildList;

  ChildList.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    var onsave = navigation.getParam('onsave', function () {});
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        title: _i18n.default.addChildInfo(),
        type: _NavigationBar.default.TYPE.LIGHT,
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }],
        right: [{
          key: _NavigationBar.default.ICON.COMPLETE,
          onPress: function onPress() {
            onsave();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#fff',
      paddingTop: (0, _sizes.adjustSize)(15)
    },
    content: {
      flex: 1
    }
  });
},10553,[14308,14305,14320,14323,14371,14377,14386,10297,10033,10719,10329,10737,10728,10740,10716,10776,10779,10320,10097,10043]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _MHDatePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _sizes = _$$_REQUIRE(_dependencyMap[15]);

  var _fns = _$$_REQUIRE(_dependencyMap[16]);

  var _fonts = _$$_REQUIRE(_dependencyMap[17]);

  var _Strings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _apis = _$$_REQUIRE(_dependencyMap[20]);

  var ChildNoVideoSetting = function (_Component) {
    (0, _inherits2.default)(ChildNoVideoSetting, _Component);

    function ChildNoVideoSetting() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, ChildNoVideoSetting);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ChildNoVideoSetting)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        status: {},
        timerSelectorVisible: false,
        timerFlag: '',
        errorVisible: false
      };

      _this.showTimerSelector = function (flag) {
        _this.setState({
          timerSelectorVisible: true,
          timerFlag: flag
        });
      };

      _this.hideTimerSelector = function () {
        _this.setState({
          timerSelectorVisible: false
        });
      };

      _this.selectTimer = function (v) {
        _this.setState(function (state) {
          return {
            status: (0, _objectSpread3.default)({}, state.status, {
              eyeProtection: (0, _objectSpread3.default)({}, state.status.eyeProtection || {}, (0, _defineProperty2.default)({}, state.timerFlag, {
                hour: parseInt(v.rawArray[0], 10),
                minute: parseInt(v.rawArray[1], 10)
              }))
            })
          };
        });
      };

      _this.save = function () {
        _this.setChildModeStatus(_this.state.status);
      };

      _this.setChildModeStatus = function (cfg) {
        (0, _apis.setChildModeStatus)(null, cfg).then(function () {
          _this.props.navigation.goBack('ChildMode');
        }).catch(function (e) {
          _this.showError();
        });
      };

      _this.showError = function () {
        _this.setState({
          errorVisible: true
        });
      };

      _this.cancel = function () {
        _this.setState({
          errorVisible: false
        });
      };

      return _this;
    }

    (0, _createClass2.default)(ChildNoVideoSetting, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var status = this.props.navigation.getParam('status', null);

        if (!status) {
          this.props.navigation.goBack();
          return;
        }

        this.setState({
          status: status
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        if (!this.state.status.eyeProtection) {
          return null;
        }

        var _this$state = this.state,
            errorVisible = _this$state.errorVisible,
            timerSelectorVisible = _this$state.timerSelectorVisible,
            timerFlag = _this$state.timerFlag,
            _this$state$status$ey = _this$state.status.eyeProtection,
            forbidWatchVideoStartTime = _this$state$status$ey.forbidWatchVideoStartTime,
            forbidWatchVideoEndTime = _this$state$status$ey.forbidWatchVideoEndTime;
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.ScrollView, {
          contentContainerStyle: Styles.content,
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.list
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.itemMin
        }, _react.default.createElement(_ListItem.default, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          title: _i18n.default.startTime(),
          value: (0, _fns.fixNum)(forbidWatchVideoStartTime.hour) + ":" + (0, _fns.fixNum)(forbidWatchVideoStartTime.minute),
          onPress: function onPress() {
            _this2.showTimerSelector('forbidWatchVideoStartTime');
          },
          showSeparator: false
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.itemMin
        }, _react.default.createElement(_ListItem.default, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          title: _i18n.default.disableTime(),
          value: (0, _fns.fixNum)(forbidWatchVideoEndTime.hour) + ":" + (0, _fns.fixNum)(forbidWatchVideoEndTime.minute),
          onPress: function onPress() {
            _this2.showTimerSelector('forbidWatchVideoEndTime');
          },
          showSeparator: false
        }))), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: Styles.btnNext,
          activeOpacity: 0.8,
          onPress: this.save
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.btnNextText
        }, _i18n.default.save()))), timerSelectorVisible ? _react.default.createElement(_MHDatePicker.default, {
          visible: timerSelectorVisible,
          title: timerFlag === 'forbidWatchVideoStartTime' ? _i18n.default.startTime() : _i18n.default.disableTime(),
          type: _MHDatePicker.default.TYPE.TIME24,
          current: [timerFlag === 'forbidWatchVideoStartTime' ? forbidWatchVideoStartTime.hour : forbidWatchVideoEndTime.hour, timerFlag === 'forbidWatchVideoStartTime' ? forbidWatchVideoStartTime.minute : forbidWatchVideoEndTime.minute],
          onSelect: this.selectTimer,
          onDismiss: this.hideTimerSelector
        }) : null, errorVisible ? _react.default.createElement(_LoadingDialog.default, {
          visible: true,
          message: _Strings.default.error,
          timeout: 1000,
          onDismiss: this.cancel
        }) : null);
      }
    }]);
    return ChildNoVideoSetting;
  }(_react.Component);

  exports.default = ChildNoVideoSetting;

  ChildNoVideoSetting.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        title: _i18n.default.noVideoLimit(),
        type: _NavigationBar.default.TYPE.LIGHT,
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#fff',
      paddingTop: (0, _sizes.adjustSize)(15)
    },
    content: {
      flex: 1
    },
    list: {
      flex: 1
    },
    itemMin: {
      height: (0, _sizes.adjustSize)(162),
      justifyContent: 'center'
    },
    btnNext: {
      margin: (0, _sizes.adjustSize)(72),
      height: (0, _sizes.adjustSize)(138),
      backgroundColor: '#f5f5f5',
      borderRadius: (0, _sizes.adjustSize)(69),
      justifyContent: 'center',
      alignItems: 'center'
    },
    btnNextText: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(45),
      color: '#4c4c4c'
    }
  });
},10556,[14308,14305,14317,14314,14320,14323,14371,14377,14386,10297,10033,10329,10719,10716,10740,10776,10779,10782,10320,10097,10043]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _miot = _$$_REQUIRE(_dependencyMap[11]);

  var _native = _$$_REQUIRE(_dependencyMap[12]);

  var _sizes = _$$_REQUIRE(_dependencyMap[13]);

  var _fonts = _$$_REQUIRE(_dependencyMap[14]);

  var _ListItemWithSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _fns = _$$_REQUIRE(_dependencyMap[19]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _apis = _$$_REQUIRE(_dependencyMap[21]);

  var Setting = function (_Component) {
    (0, _inherits2.default)(Setting, _Component);

    function Setting() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Setting);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Setting)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        status: {},
        layerVisible: false
      };

      _this.onValueChange = function (value) {
        var data = _this.state.status.data;

        if (value && (!data || !data.positionData || !data.positionData.address)) {
          _this.goChoosePosition(true);

          return;
        }

        var cfg = (0, _objectSpread2.default)({}, (data || {}).positionData || {}, {
          ok: value
        });

        _this.setEarthquakeStatus(cfg);
      };

      _this.goChoosePosition = function (withEnable, location) {
        var status = _this.state.status;

        if ((!status.data || !status.data.positionData) && !location && _native.isAndroid) {
          _miot.Host.locale.getLocation().then(function (res) {
            if (!res || !res.aoiname && !res.AOIName) {
              _this.goChoosePosition(withEnable, {});

              return;
            }

            _this.goChoosePosition(withEnable, {
              city: res.city,
              district: res.district,
              address: res.aoiname || res.AOIName,
              latitude: parseFloat(res.latitude),
              longitude: parseFloat(res.longitude)
            });
          }).catch(function () {
            _this.goChoosePosition(withEnable, {});
          });

          return;
        }

        var params = status.data && status.data.positionData ? status.data.positionData : location || {};
        params.name = params.address;

        _miot.Host.ui.openEarthquakeLocationSelector(params).then(function (res) {
          if (!res || !res.data || !res.data.name) {
            if (!withEnable) {
              return;
            }

            _this.setState(function (state) {
              return {
                status: (0, _objectSpread2.default)({}, state.status, {
                  ok: false
                })
              };
            });

            return;
          }

          var data = res.data;
          var cfg = {
            ok: withEnable ? true : status.ok,
            city: data.city,
            district: data.district,
            address: data.name,
            latitude: data.latitude,
            longitude: data.longitude
          };

          _this.setEarthquakeStatus(cfg, withEnable);
        }).catch(function (e) {
          if (withEnable) {
            _this.setState(function (state) {
              return {
                status: (0, _objectSpread2.default)({}, state.status, {
                  ok: false
                })
              };
            });
          }
        });
      };

      _this.cancel = function () {
        _this.setState({
          layerVisible: 0
        });
      };

      _this.setEarthquakeStatus = function (cfg, withEnable) {
        var ok = cfg.ok;
        var status = _this.state.status;
        var params = (0, _objectSpread2.default)({}, status, {
          ok: ok,
          data: (0, _objectSpread2.default)({}, status.data || {}, {
            positionData: (0, _objectSpread2.default)({}, (status.data || {}).positionData || {}, {
              address: cfg.address,
              city: cfg.city,
              district: cfg.district,
              latitude: cfg.latitude,
              longitude: cfg.longitude
            })
          })
        });
        (0, _apis.setEarthquakeStatus)(null, params).then(function () {
          _this.setState(function (state) {
            return {
              layerVisible: state.status.ok === cfg.ok ? 0 : 1,
              status: (0, _objectSpread2.default)({}, state.status, {
                ok: cfg.ok,
                data: (0, _objectSpread2.default)({}, state.status.data || {}, {
                  positionData: (0, _objectSpread2.default)({}, (state.status.data || {}).positionData || {}, {
                    address: cfg.address,
                    city: cfg.city,
                    district: cfg.district,
                    latitude: cfg.latitude,
                    longitude: cfg.longitude
                  })
                })
              })
            };
          });
        }).catch(function (e) {
          if (withEnable) {
            _this.setState(function (state) {
              return {
                status: (0, _objectSpread2.default)({}, state.status, {
                  ok: false
                })
              };
            });
          }
        });
      };

      return _this;
    }

    (0, _createClass2.default)(Setting, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        (0, _apis.getEarthquakeStatus)().then(function (res) {
          _this2.setState({
            status: res
          });
        }).catch(_fns.log);
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var _this$state = this.state,
            _this$state$status = _this$state.status,
            ok = _this$state$status.ok,
            data = _this$state$status.data,
            layerVisible = _this$state.layerVisible;
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.ScrollView, {
          contentContainerStyle: Styles.content,
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.item
        }, _react.default.createElement(_ListItemWithSwitch.default, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          subtitleStyle: {
            marginTop: (0, _sizes.adjustSize)(9)
          },
          title: _i18n.default.broadcastEarthquake(),
          subtitle: _i18n.default.broadcastEarthquakeTip(),
          value: ok,
          onValueChange: this.onValueChange,
          onTintColor: "#0097FF",
          showSeparator: false
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.separatorWrap
        }, _react.default.createElement(_Separator.default, {
          style: Styles.separator
        })), data && data.positionData && data.positionData.address && ok ? _react.default.createElement(_react.Fragment, null, _react.default.createElement(_reactNative.View, {
          style: Styles.item
        }, _react.default.createElement(_ListItem.default, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          title: _i18n.default.broadcastEarthquakePos(),
          subtitle: _i18n.default.broadcastEarthquakePosText(data.positionData.city, data.positionData.district, data.positionData.address),
          onPress: function onPress() {
            _this3.goChoosePosition();
          },
          showSeparator: false
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.separatorWrap
        }, _react.default.createElement(_Separator.default, {
          style: Styles.separator
        }))) : null, _react.default.createElement(_reactNative.Text, {
          style: Styles.tip
        }, _i18n.default.earthquakeMark())), data && data.positionData && data.positionData.address && ok ? _react.default.createElement(_reactNative.Text, {
          style: Styles.lower
        }, _i18n.default.broadcastEarthquakeTip2()) : null, layerVisible === 1 ? _react.default.createElement(_LoadingDialog.default, {
          visible: true,
          message: ok ? _i18n.default.earthquakeEnabled() : _i18n.default.earthquakeDisabled(),
          timeout: 1000,
          onDismiss: this.cancel
        }) : null);
      }
    }]);
    return Setting;
  }(_react.Component);

  exports.default = Setting;

  Setting.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        title: _i18n.default.earthquakeSetting(),
        type: _NavigationBar.default.TYPE.LIGHT,
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: 'white',
      paddingTop: (0, _sizes.adjustSize)(15)
    },
    content: {},
    separatorWrap: {
      marginVertical: (0, _sizes.adjustSize)(60),
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    tip: {
      marginHorizontal: (0, _sizes.adjustSize)(72),
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#999'
    },
    lower: {
      position: 'absolute',
      left: 0,
      bottom: (0, _sizes.adjustSize)(72),
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#999',
      textAlign: 'center',
      marginHorizontal: (0, _sizes.adjustSize)(72)
    }
  });
},10559,[14308,14305,14314,14320,14323,14371,14377,14386,10297,10719,10033,10074,10005,10776,10782,10344,10329,10332,10740,10779,10097,10043]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _miot = _$$_REQUIRE(_dependencyMap[11]);

  var _native = _$$_REQUIRE(_dependencyMap[12]);

  var _sizes = _$$_REQUIRE(_dependencyMap[13]);

  var _fonts = _$$_REQUIRE(_dependencyMap[14]);

  var _ListItemWithSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _fns = _$$_REQUIRE(_dependencyMap[19]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _apis = _$$_REQUIRE(_dependencyMap[21]);

  var Setting = function (_Component) {
    (0, _inherits2.default)(Setting, _Component);

    function Setting() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Setting);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Setting)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        status: {},
        layerVisible: false,
        data: {
          positionData: {
            cfg: {
              address: ''
            }
          }
        }
      };

      _this.goChoosePosition = function (withEnable, location) {
        var status = _this.state.status;

        if ((!status.data || !status.data.positionData) && !location && _native.isAndroid) {
          _miot.Host.locale.getLocation().then(function (res) {
            if (!res || !res.aoiname && !res.AOIName) {
              _this.goChoosePosition(withEnable, {});

              return;
            }

            _this.goChoosePosition(withEnable, {
              city: res.city,
              district: res.district,
              address: res.aoiname || res.AOIName,
              latitude: parseFloat(res.latitude),
              longitude: parseFloat(res.longitude)
            });
          }).catch(function () {
            _this.goChoosePosition(withEnable, {});
          });

          return;
        }

        var params = status.data && status.data.positionData ? status.data.positionData : location || {};
        params.name = params.address;

        _miot.Host.ui.openEarthquakeLocationSelector(params).then(function (res) {
          if (!res || !res.data || !res.data.name) {
            if (!withEnable) {
              return;
            }

            _this.setState(function (state) {
              return {
                status: (0, _objectSpread2.default)({}, state.status, {
                  ok: false
                })
              };
            });

            return;
          }

          var data = res.data;
          var cfg = {
            city: data.city,
            district: data.district,
            address: data.name,
            latitude: data.latitude,
            longitude: data.longitude
          };

          _this.setAddressStatus(cfg).then(function () {});
        }).catch(function (e) {
          if (withEnable) {
            _this.setState(function (state) {
              return {
                status: (0, _objectSpread2.default)({}, state.status, {
                  ok: false
                })
              };
            });
          }
        });
      };

      _this.cancel = function () {
        _this.setState({
          layerVisible: 0
        });
      };

      _this.setAddressStatus = function (cfg) {
        var params = {
          data: {
            positionData: {
              address: cfg.address,
              city: cfg.city,
              district: cfg.district,
              latitude: cfg.latitude,
              longitude: cfg.longitude
            }
          }
        };
        (0, _apis.setAddressStatus)(null, params).then(function () {
          _this.setState({
            data: {
              positionData: {
                address: cfg.address,
                city: cfg.city,
                district: cfg.district,
                latitude: cfg.latitude,
                longitude: cfg.longitude
              }
            }
          });
        }).catch(function (e) {});
      };

      return _this;
    }

    (0, _createClass2.default)(Setting, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        (0, _apis.getAddressStatus)().then(function (res) {
          _this2.setState({
            data: res
          }, function () {});
        }).catch(_fns.log);
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var data = this.state.data;
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.ScrollView, {
          contentContainerStyle: Styles.content,
          showsVerticalScrollIndicator: false
        }, data ? _react.default.createElement(_react.Fragment, null, _react.default.createElement(_reactNative.View, {
          style: Styles.item
        }, data.positionData ? _react.default.createElement(_ListItem.default, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          title: _i18n.default.broadcastAddressPos(),
          subtitle: _i18n.default.broadcastEarthquakePosText(data.positionData.city, data.positionData.district, data.positionData.address),
          onPress: function onPress() {
            _this3.goChoosePosition();
          },
          showSeparator: false
        }) : _react.default.createElement(_ListItem.default, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          title: _i18n.default.broadcastAddressPos(),
          onPress: function onPress() {
            _this3.goChoosePosition();
          },
          showSeparator: false
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.separatorWrap
        }, _react.default.createElement(_Separator.default, {
          style: Styles.separator
        }))) : null));
      }
    }]);
    return Setting;
  }(_react.Component);

  exports.default = Setting;

  Setting.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        title: _i18n.default.addressSetting(),
        type: _NavigationBar.default.TYPE.LIGHT,
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: 'white',
      paddingTop: (0, _sizes.adjustSize)(15)
    },
    content: {},
    separatorWrap: {
      marginVertical: (0, _sizes.adjustSize)(30),
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    tip: {
      marginHorizontal: (0, _sizes.adjustSize)(72),
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#999'
    },
    lower: {
      position: 'absolute',
      left: 0,
      bottom: (0, _sizes.adjustSize)(72),
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#999',
      textAlign: 'center',
      marginHorizontal: (0, _sizes.adjustSize)(72)
    }
  });
},10562,[14308,14305,14314,14320,14323,14371,14377,14386,10297,10719,10033,10074,10005,10776,10782,10344,10329,10332,10740,10779,10097,10043]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _apis = _$$_REQUIRE(_dependencyMap[14]);

  var SourceIcon = _$$_REQUIRE(_dependencyMap[15]);

  var TimbreNames = [_i18n.default.timbreLively(), _i18n.default.timbreTender(), _i18n.default.timbreVigour(), _i18n.default.timbreCute()];

  var Timbre = function (_Component) {
    (0, _inherits2.default)(Timbre, _Component);

    function Timbre() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Timbre);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Timbre)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        list: []
      };

      _this.selectItem = function (index, isSelected) {
        if (isSelected) {
          return;
        }

        (0, _apis.setTimbreStatus)(null, index).then(function () {
          _this.setState(function (state) {
            return {
              list: state.list.map(function (item, i) {
                return (0, _objectSpread2.default)({}, item, {
                  selected: i === index
                });
              })
            };
          });
        }).catch(function (e) {});
      };

      return _this;
    }

    (0, _createClass2.default)(Timbre, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        (0, _apis.getTimbreStatus)().then(function (res) {
          _this2.setState({
            list: res
          });
        }).catch(function (e) {});
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var list = this.state.list;
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.ScrollView, {
          contentContainerStyle: Styles.content,
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.list
        }, list.map(function (item, index) {
          var isSelected = item.selected;
          return _react.default.createElement(_reactNative.TouchableOpacity, {
            key: item.name,
            style: Styles.btn,
            activeOpacity: 0.8,
            onPress: function onPress() {
              _this3.selectItem(index, isSelected);
            }
          }, _react.default.createElement(_reactNative.View, {
            style: [Styles.item, isSelected ? Styles.itemSelected : null]
          }, _react.default.createElement(_reactNative.Image, {
            style: [Styles.icon, isSelected ? Styles.iconSelected : null],
            source: SourceIcon
          }), _react.default.createElement(_reactNative.Text, {
            style: [Styles.title, isSelected ? Styles.titleSelected : null]
          }, TimbreNames[index] || item.desc)));
        })), _react.default.createElement(_reactNative.Text, {
          style: Styles.tip
        }, _i18n.default.xiaoaiTimbreTip())));
      }
    }]);
    return Timbre;
  }(_react.Component);

  exports.default = Timbre;

  Timbre.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        title: _i18n.default.timbreSetting(),
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: 'white',
      paddingTop: (0, _sizes.adjustSize)(15)
    },
    content: {
      flex: 1
    },
    list: {
      marginTop: (0, _sizes.adjustSize)(60)
    },
    btn: {
      marginBottom: (0, _sizes.adjustSize)(30),
      marginHorizontal: (0, _sizes.adjustSize)(30)
    },
    item: {
      height: (0, _sizes.adjustSize)(231),
      backgroundColor: '#f7f7f7',
      borderRadius: (0, _sizes.adjustSize)(36),
      flexDirection: 'row',
      paddingHorizontal: (0, _sizes.adjustSize)(45),
      alignItems: 'center'
    },
    itemSelected: {
      backgroundColor: 'rgba(0,151,255,0.10)'
    },
    icon: {
      width: (0, _sizes.adjustSize)(60),
      height: (0, _sizes.adjustSize)(60),
      resizeMode: 'contain',
      marginRight: (0, _sizes.adjustSize)(42),
      opacity: 0
    },
    iconSelected: {
      opacity: 1
    },
    title: {
      flex: 1,
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(54),
      lineHeight: (0, _sizes.adjustSize)(72),
      color: '#000'
    },
    titleSelected: {
      color: '#0097FF'
    },
    tip: {
      marginHorizontal: (0, _sizes.adjustSize)(72),
      paddingTop: (0, _sizes.adjustSize)(30),
      paddingBottom: (0, _sizes.adjustSize)(54),
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#999'
    }
  });
},10565,[14308,14305,14314,14320,14323,14371,14377,14386,10297,10033,10719,10776,10782,10097,10043,10436]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _miot = _$$_REQUIRE(_dependencyMap[14]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _apis = _$$_REQUIRE(_dependencyMap[16]);

  var SourcePaoFu = _$$_REQUIRE(_dependencyMap[17]);

  var SourceMiTang = _$$_REQUIRE(_dependencyMap[18]);

  var SourceMoLi = _$$_REQUIRE(_dependencyMap[19]);

  var SourceQingCong = _$$_REQUIRE(_dependencyMap[20]);

  var SourceImg = [SourceMiTang, SourceMoLi, SourceQingCong, SourcePaoFu];
  var TimbreNames = [_i18n.default.timbreLively(), _i18n.default.timbreTender(), _i18n.default.timbreVigour(), _i18n.default.timbreCute()];
  var TimbreNamesDes = [_i18n.default.timbreLivelyDes(), _i18n.default.timbreTenderDes(), _i18n.default.timbreVigourDes(), _i18n.default.timbreCuteDes()];

  var TimbreV2 = function (_Component) {
    (0, _inherits2.default)(TimbreV2, _Component);

    function TimbreV2() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, TimbreV2);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(TimbreV2)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        list: [],
        showloading: true
      };
      _this.timeoutTimes = 0;

      _this.selectItem = function (index, isSelected) {
        if (isSelected) {
          return;
        }

        _this.setState({
          showloading: true
        });

        _this.willSetedItem = _this.toneList[index];
        (0, _apis.setTimbreStatus)(null, index, true).then(function () {
          _this.setState(function (state) {
            return {
              list: state.list.map(function (item, i) {
                return (0, _objectSpread2.default)({}, item, {
                  selected: i === index
                });
              }),
              showloading: false
            };
          });
        }).catch(function (e) {
          _this.startTimer();
        });
      };

      return _this;
    }

    (0, _createClass2.default)(TimbreV2, [{
      key: "startTimer",
      value: function startTimer() {
        var _this2 = this;

        this.timeoutTimes++;
        setTimeout(function () {
          _this2.getCurSelectTone();
        }, 5000);
      }
    }, {
      key: "getCurSelectTone",
      value: function getCurSelectTone() {
        var _this3 = this;

        (0, _apis.getTimbreCurrentSelect)().then(function (toneInfo) {
          var language = toneInfo.language_name,
              toneId = toneInfo.vendor_name;

          if (_this3.willSetedItem) {
            var _this3$willSetedItem = _this3.willSetedItem,
                name = _this3$willSetedItem.name,
                toneid = _this3$willSetedItem.toneid;

            if (name === language && toneId === toneid) {
              _this3.resetCurState(_this3.toneList, language, toneId);

              _this3.timeoutTimes = 0;
            } else {
              if (_this3.timeoutTimes < 4) {
                _this3.startTimer();
              } else {
                _this3.setState({
                  showloading: false
                });

                _this3.timeoutTimes = 0;
              }
            }
          } else {
            _this3.resetCurState(_this3.toneList, language, toneId);

            _this3.timeoutTimes = 0;
          }
        }).catch(function (_ref) {
          var isTimeout = _ref.isTimeout;

          if (isTimeout && _this3.timeoutTimes < 4) {
            _this3.startTimer();
          } else {
            _this3.setState({
              showloading: false
            });

            _this3.timeoutTimes = 0;
          }
        });
      }
    }, {
      key: "resetCurState",
      value: function resetCurState(toneList, language, toneId) {
        this.toneList = toneList.map(function (item) {
          return (0, _objectSpread2.default)({}, item, {
            selected: item.name === language && item.toneid === toneId
          });
        });
        this.setState({
          list: this.toneList,
          showloading: false
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this4 = this;

        (0, _apis.getTimbreStatusV2)().then(function (res) {
          _this4.toneList = res;

          _this4.getCurSelectTone();
        }).catch(function (e) {
          _this4.setState({
            showloading: false
          });
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this5 = this;

        var list = this.state.list;
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.ScrollView, {
          contentContainerStyle: Styles.content,
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.head
        }, _i18n.default.timbreAndDialect()), _react.default.createElement(_reactNative.Text, {
          style: Styles.headDes
        }, _i18n.default.timbreTitle()), _react.default.createElement(_reactNative.Text, {
          style: Styles.language
        }, _i18n.default.timbreMandarin()), _react.default.createElement(_reactNative.View, {
          style: Styles.list
        }, list.map(function (item, index) {
          var isSelected = item.selected;
          return _react.default.createElement(_reactNative.TouchableOpacity, {
            key: item.toneid,
            style: Styles.card,
            activeOpacity: 0.8,
            onPress: function onPress() {
              _this5.selectItem(index, isSelected);
            }
          }, _react.default.createElement(_reactNative.View, {
            style: [Styles.item, isSelected ? Styles.itemSelected : null]
          }, _react.default.createElement(_reactNative.Image, {
            style: [Styles.icon],
            source: SourceImg[index]
          })), _react.default.createElement(_reactNative.Text, {
            style: [Styles.title]
          }, TimbreNames[index]), _react.default.createElement(_reactNative.Text, {
            style: [Styles.titleDes]
          }, TimbreNamesDes[index]));
        }))), _react.default.createElement(_LoadingDialog.default, {
          visible: this.state.showloading,
          message: _miot.Device.model === 'l05b' || _miot.Device.model === 'l05c' ? _i18n.default.loadinloadingTitleSpecialgTitle() : _i18n.default.loadingTitle()
        }));
      }
    }]);
    return TimbreV2;
  }(_react.Component);

  exports.default = TimbreV2;

  TimbreV2.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: 'white',
      paddingTop: (0, _sizes.adjustSize)(15)
    },
    head: {
      height: (0, _sizes.adjustSize)(117),
      marginLeft: (0, _sizes.adjustSize)(81),
      fontSize: (0, _sizes.adjustSize)(90),
      marginBottom: (0, _sizes.adjustSize)(12)
    },
    headDes: {
      height: (0, _sizes.adjustSize)(54),
      marginLeft: (0, _sizes.adjustSize)(81),
      fontSize: (0, _sizes.adjustSize)(39),
      marginBottom: (0, _sizes.adjustSize)(67),
      color: '#999999'
    },
    language: {
      height: (0, _sizes.adjustSize)(48),
      marginLeft: (0, _sizes.adjustSize)(81),
      fontSize: (0, _sizes.adjustSize)(36),
      marginBottom: (0, _sizes.adjustSize)(33)
    },
    list: {
      flex: 1,
      flexDirection: 'row',
      width: (0, _sizes.adjustSize)(1200),
      flexWrap: 'wrap',
      justifyContent: 'flex-start',
      marginHorizontal: (0, _sizes.adjustSize)(63)
    },
    card: {
      width: (0, _sizes.adjustSize)(500),
      marginBottom: (0, _sizes.adjustSize)(30)
    },
    item: {
      width: (0, _sizes.adjustSize)(480),
      height: (0, _sizes.adjustSize)(480),
      paddingHorizontal: (0, _sizes.adjustSize)(7),
      paddingVertical: (0, _sizes.adjustSize)(7),
      borderColor: 'white',
      borderWidth: (0, _sizes.adjustSize)(8)
    },
    itemSelected: {
      borderWidth: (0, _sizes.adjustSize)(8),
      borderColor: '#64C9FF',
      borderRadius: (0, _sizes.adjustSize)(55)
    },
    icon: {
      width: (0, _sizes.adjustSize)(450),
      height: (0, _sizes.adjustSize)(450)
    },
    iconSelected: {
      borderWidth: (0, _sizes.adjustSize)(8),
      borderColor: '#64C9FF',
      borderRadius: (0, _sizes.adjustSize)(55)
    },
    title: {
      flex: 1,
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(48),
      lineHeight: (0, _sizes.adjustSize)(66),
      marginLeft: (0, _sizes.adjustSize)(15),
      color: '#000'
    },
    titleDes: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(39),
      lineHeight: (0, _sizes.adjustSize)(54),
      marginLeft: (0, _sizes.adjustSize)(15),
      color: '#999999'
    }
  });
},10568,[14308,14305,14314,14320,14323,14371,14377,14386,10297,10033,10719,10776,10782,10740,10074,10097,10043,10571,10574,10577,10580]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 450,
    "height": 450,
    "scales": [1],
    "hash": "fe680fa0a94d191c506b8dbf917371d5",
    "name": "voice_paofu",
    "type": "png"
  });
},10571,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 450,
    "height": 450,
    "scales": [1],
    "hash": "66bf55ee7a352fbcebad9f6961d880e0",
    "name": "voice_mitang",
    "type": "png"
  });
},10574,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 450,
    "height": 450,
    "scales": [1],
    "hash": "a61bdc5b2d114fa381736f60a6094ac8",
    "name": "voice_moli",
    "type": "png"
  });
},10577,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/resources/images",
    "width": 450,
    "height": 450,
    "scales": [1],
    "hash": "aee439d1940dd34841fab459e14d1fb4",
    "name": "voice_qingcong",
    "type": "png"
  });
},10580,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _sizes = _$$_REQUIRE(_dependencyMap[10]);

  var _fonts = _$$_REQUIRE(_dependencyMap[11]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _apis = _$$_REQUIRE(_dependencyMap[13]);

  var Setting = function (_Component) {
    (0, _inherits2.default)(Setting, _Component);

    function Setting() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Setting);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Setting)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        vol: 3
      };

      _this.setAuxInVolume = function (vol) {
        (0, _apis.setAuxInVolume)(null, vol).then(function () {
          _this.setState({
            vol: vol
          });
        }).catch(function (e) {});
      };

      return _this;
    }

    (0, _createClass2.default)(Setting, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        (0, _apis.getAuxInVolume)().then(function (_ref) {
          var vol = _ref.vol;

          _this2.setState({
            vol: vol
          });
        }).catch(function (e) {});
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.ScrollView, {
          contentContainerStyle: Styles.content,
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_reactNative.Text, {
          style: [Styles.tip, {
            fontWeight: 'bold',
            color: '#000'
          }]
        }, _i18n.default.auxInTip()), _react.default.createElement(_reactNative.Text, {
          style: Styles.tip
        }, _i18n.default.volumeSpreadTip())));
      }
    }]);
    return Setting;
  }(_react.Component);

  exports.default = Setting;

  Setting.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        title: _i18n.default.auxInUsage(),
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#fff',
      paddingTop: (0, _sizes.adjustSize)(15)
    },
    content: {
      flex: 1,
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    tip: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      paddingTop: (0, _sizes.adjustSize)(30),
      paddingBottom: (0, _sizes.adjustSize)(46),
      color: '#999'
    },
    icon: {
      width: (0, _sizes.adjustSize)(666),
      height: (0, _sizes.adjustSize)(504),
      marginTop: (0, _sizes.adjustSize)(180),
      alignSelf: 'center'
    },
    sliderWrap: {
      paddingTop: (0, _sizes.adjustSize)(18),
      paddingBottom: (0, _sizes.adjustSize)(48)
    },
    title: {
      marginTop: (0, _sizes.adjustSize)(180),
      paddingVertical: (0, _sizes.adjustSize)(51),
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(45),
      lineHeight: (0, _sizes.adjustSize)(60),
      color: '#000'
    }
  });
},10583,[14308,14305,14320,14323,14371,14377,14386,10297,10719,10033,10776,10782,10097,10043]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _sizes = _$$_REQUIRE(_dependencyMap[10]);

  var _fns = _$$_REQUIRE(_dependencyMap[11]);

  var _apis = _$$_REQUIRE(_dependencyMap[12]);

  var _ListItemWithSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var Setting = function (_Component) {
    (0, _inherits2.default)(Setting, _Component);

    function Setting() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Setting);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Setting)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        value: false
      };

      _this.onValueChange = function (value) {
        (0, _apis.setLightEffectStatus)(null, value).then(function () {
          _this.setState({
            value: value
          });
        }).catch(_fns.log);
      };

      return _this;
    }

    (0, _createClass2.default)(Setting, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        (0, _apis.getLightEffectStatus)().then(function (_ref) {
          var info = _ref.info;

          _this2.setState({
            value: info === 1
          });
        }).catch(_fns.log);
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.ScrollView, {
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: Styles.item
        }, _react.default.createElement(_ListItemWithSwitch.default, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          title: _i18n.default.musicLightEffect(),
          value: this.state.value,
          subtitle: _i18n.default.musicLightEffectTip(),
          onTintColor: "#0097ff",
          showSeparator: false,
          onValueChange: this.onValueChange
        })))));
      }
    }]);
    return Setting;
  }(_react.Component);

  exports.default = Setting;

  Setting.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        title: _i18n.default.lightEffectSetting(),
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: "#FFFFFF",
      paddingTop: (0, _sizes.adjustSize)(15)
    },
    item: {}
  });
},10586,[14308,14305,14320,14323,14371,14377,14386,10297,10719,10033,10776,10779,10043,10344,10097]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _sizes = _$$_REQUIRE(_dependencyMap[10]);

  var _fonts = _$$_REQUIRE(_dependencyMap[11]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[13]);

  var _fns = _$$_REQUIRE(_dependencyMap[14]);

  var _apis = _$$_REQUIRE(_dependencyMap[15]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var Setting = function (_Component) {
    (0, _inherits2.default)(Setting, _Component);

    function Setting() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Setting);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Setting)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        value: false
      };

      _this.onValueChange = function (value) {
        (0, _apis.setDlnaStatus)(null, value).then(function () {
          _this.setState({
            value: value
          });
        }).catch(_fns.log);
      };

      return _this;
    }

    (0, _createClass2.default)(Setting, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        (0, _apis.getDlnaStatus)().then(function (_ref) {
          var info = _ref.info;

          _this2.setState({
            value: info === 1
          });
        }).catch(_fns.log);
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.ScrollView, {
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: Styles.item
        }, _react.default.createElement(_ListItem.ListItemWithSwitch, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          title: _i18n.default.dlnaMusicPlay(),
          value: this.state.value,
          showSeparator: false,
          onTintColor: "#0097ff",
          onValueChange: this.onValueChange
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.separatorView
        }, _react.default.createElement(_Separator.default, null)), _react.default.createElement(_reactNative.View, {
          style: Styles.illustration
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.illustrationText
        }, _i18n.default.dlnaMusicPlayTip1())), _react.default.createElement(_reactNative.View, {
          style: Styles.illustration
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.illustrationText
        }, _i18n.default.dlnaMusicPlayTip2())))));
      }
    }]);
    return Setting;
  }(_react.Component);

  exports.default = Setting;

  Setting.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        title: _i18n.default.dlnaMusicPlay(),
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: 'white',
      paddingTop: (0, _sizes.adjustSize)(15)
    },
    separatorView: {
      marginVertical: (0, _sizes.adjustSize)(60),
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    illustration: {
      paddingTop: (0, _sizes.adjustSize)(30),
      paddingBottom: (0, _sizes.adjustSize)(54),
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    illustrationText: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#999999'
    }
  });
},10589,[14308,14305,14320,14323,14371,14377,14386,10297,10719,10033,10776,10782,10332,10338,10779,10043,10097]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _sizes = _$$_REQUIRE(_dependencyMap[10]);

  var _fonts = _$$_REQUIRE(_dependencyMap[11]);

  var _fns = _$$_REQUIRE(_dependencyMap[12]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[14]);

  var _apis = _$$_REQUIRE(_dependencyMap[15]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var continuousTalk = function (_Component) {
    (0, _inherits2.default)(continuousTalk, _Component);

    function continuousTalk() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, continuousTalk);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(continuousTalk)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        value: false
      };

      _this.onValueChange = function (value) {
        (0, _apis.setContinuousTalkStatus)(null, value).then(function () {
          _this.setState({
            value: value
          });
        }).catch(_fns.log);
      };

      return _this;
    }

    (0, _createClass2.default)(continuousTalk, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        (0, _apis.getContinuousTalkStatus)().then(function (_ref) {
          var status = _ref.status;

          _this2.setState({
            value: status === 'on'
          });
        }).catch(_fns.log);
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.ScrollView, {
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_ListItem.ListItemWithSwitch, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          title: _i18n.default.continuousTalk(),
          value: this.state.value,
          showSeparator: false,
          onTintColor: "#0097ff",
          onValueChange: this.onValueChange
        }), _react.default.createElement(_reactNative.View, {
          style: Styles.separatorView
        }, _react.default.createElement(_Separator.default, null)), _react.default.createElement(_reactNative.View, {
          style: Styles.illustration
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.illustrationText
        }, _i18n.default.continuousTalkTip())))));
      }
    }]);
    return continuousTalk;
  }(_react.Component);

  exports.default = continuousTalk;

  continuousTalk.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        title: _i18n.default.continuousTalk(),
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: 'white',
      paddingTop: (0, _sizes.adjustSize)(15)
    },
    separatorView: {
      marginVertical: (0, _sizes.adjustSize)(60),
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    illustration: {
      paddingTop: (0, _sizes.adjustSize)(28),
      paddingBottom: (0, _sizes.adjustSize)(50),
      paddingHorizontal: (0, _sizes.adjustSize)(66)
    },
    illustrationText: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: "#999999"
    }
  });
},10592,[14308,14305,14320,14323,14371,14377,14386,10297,10719,10033,10776,10782,10779,10332,10338,10043,10097]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _sizes = _$$_REQUIRE(_dependencyMap[10]);

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _ListItemWithSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _fonts = _$$_REQUIRE(_dependencyMap[15]);

  var _Strings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _apis = _$$_REQUIRE(_dependencyMap[18]);

  var SecuritySetting = function (_Component) {
    (0, _inherits2.default)(SecuritySetting, _Component);

    function SecuritySetting() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, SecuritySetting);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SecuritySetting)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        status: {}
      };

      _this.getSecurityStatus = function () {
        (0, _apis.getSecurityStatus)().then(function (res) {
          _this.setState({
            status: (0, _objectSpread2.default)({}, res)
          });
        }).catch(function (e) {});
      };

      _this.setSecurityStatus = function (cfg) {
        (0, _apis.setSecurityStatus)(cfg).then(function (res) {
          _this.setState({
            status: res
          });
        }).catch(function (e) {
          _this.showError();
        });
      };

      _this.changeMusicPersonalization = function (v) {
        var cfg = (0, _objectSpread2.default)({}, _this.state.status, {
          musicPersonalization: v
        });

        _this.setSecurityStatus(cfg);
      };

      _this.changeWakeWordUpload = function (v) {
        var cfg = (0, _objectSpread2.default)({}, _this.state.status, {
          wakeWordUpload: v
        });

        _this.setSecurityStatus(cfg);
      };

      _this.showError = function () {
        _this.setState({
          errorVisible: true
        });
      };

      _this.cancel = function () {
        _this.setState({
          errorVisible: false
        });
      };

      return _this;
    }

    (0, _createClass2.default)(SecuritySetting, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.getSecurityStatus();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }, {
      key: "render",
      value: function render() {
        var _this$state = this.state,
            errorVisible = _this$state.errorVisible,
            _this$state$status = _this$state.status,
            musicPersonalization = _this$state$status.musicPersonalization,
            wakeWordUpload = _this$state$status.wakeWordUpload;
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.ScrollView, {
          contentContainerStyle: Styles.content,
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.item
        }, _react.default.createElement(_ListItemWithSwitch.default, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          title: _i18n.default.musicPersonalization(),
          subtitle: _i18n.default.musicPersonalizationTip(),
          subtitleNumberOfLines: 5,
          value: musicPersonalization,
          onValueChange: this.changeMusicPersonalization,
          onTintColor: "#0097FF",
          showSeparator: false
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.item
        }, _react.default.createElement(_ListItemWithSwitch.default, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          title: _i18n.default.wakeWordUpload(),
          subtitle: _i18n.default.wakeWordUploadTip(),
          subtitleNumberOfLines: 5,
          value: wakeWordUpload,
          onValueChange: this.changeWakeWordUpload,
          onTintColor: "#0097FF",
          showSeparator: false
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.item
        }, _react.default.createElement(_ListItem.default, {
          allowFontScaling: true,
          unlimitedHeightEnable: true,
          title: _i18n.default.qqMusicRecommond(),
          subtitle: _i18n.default.qqMusicRecommondTip(),
          subtitleNumberOfLines: 5,
          hideArrow: true,
          showSeparator: false
        }))), errorVisible ? _react.default.createElement(_LoadingDialog.default, {
          visible: true,
          message: _Strings.default.error,
          timeout: 1000,
          onDismiss: this.cancel
        }) : null);
      }
    }]);
    return SecuritySetting;
  }(_react.Component);

  exports.default = SecuritySetting;

  SecuritySetting.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        title: _i18n.default.securitySetting(),
        type: _NavigationBar.default.TYPE.LIGHT,
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#fff',
      paddingTop: (0, _sizes.adjustSize)(15)
    },
    content: {},
    separatorWrap: {
      marginVertical: (0, _sizes.adjustSize)(60),
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    legalTip: {
      paddingTop: (0, _sizes.adjustSize)(30),
      paddingBottom: (0, _sizes.adjustSize)(54),
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    legalTipText: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#999'
    },
    legalLink: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#0097FF'
    }
  });
},10595,[14308,14305,14314,14320,14323,14371,14377,14386,10297,10033,10776,10329,10719,10344,10740,10782,10320,10097,10043]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _GlobalData = _$$_REQUIRE(_dependencyMap[9]);

  var _Button = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _DirectiveList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _ListCell = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _MHModal = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _PlayList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _miot = _$$_REQUIRE(_dependencyMap[16]);

  var _Utils = _$$_REQUIRE(_dependencyMap[17]);

  var _apis = _$$_REQUIRE(_dependencyMap[18]);

  var _CustomDeviceSetting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var CUSTOM_REMOTER = 'miir.remote.ir01';

  var DeviceDetail = function (_React$Component) {
    (0, _inherits2.default)(DeviceDetail, _React$Component);

    function DeviceDetail(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, DeviceDetail);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DeviceDetail).call(this, props, context));
      var device = _this.props.navigation.getParam('device') || {};
      _this.isNormal = true;

      if (device.member_count && device.member_count >= 2) {
        _this.isNormal = false;
      }

      _this.hasUpdate = false;
      _this.isInfraredDevice = typeof device.model === 'string' && device.model.startsWith('miir.');
      _this.isInfraredCustomDevice = device.model === CUSTOM_REMOTER;
      _this.unsharedMHDevice = device.from === _GlobalData.DEVICETYPE.NORMAL || device.from === _GlobalData.DEVICETYPE.CUSTOM;
      _this.state = {
        device: device,
        showDeviceSetting: false,
        visible: false,
        MHControlIco: false,
        spinner: false,
        directiveList: []
      };
      return _this;
    }

    (0, _createClass2.default)(DeviceDetail, [{
      key: "_renderNormal",
      value: function _renderNormal() {
        var device = this.state.device;
        var obj = {
          normal: {
            name: {
              data: {
                title: _i18n.default.device_detail_name(),
                subTitle: device.name,
                disabled: true
              }
            },
            room: {
              data: {
                title: _i18n.default.deviceRoom(),
                subTitle: device.room,
                disabled: true,
                showDot: false
              }
            }
          }
        };
        return this._renderGroup(obj);
      }
    }, {
      key: "_renderDouble",
      value: function _renderDouble() {
        var memberShip = this.state.device.memberShip;
        var keys = Object.keys(memberShip);
        var leftMember = memberShip[keys[0]];
        var rightMember = memberShip[keys[1]];
        var left = {
          left: {
            name: {
              data: {
                title: _i18n.default.device_detail_left_button() + _i18n.default.device_detail_list_name(),
                subTitle: leftMember.name,
                disabled: true
              }
            },
            room: {
              data: {
                title: _i18n.default.device_detail_left_button() + _i18n.default.device_detail_list_room(),
                subTitle: leftMember.roomName,
                disabled: true,
                showDot: false
              }
            }
          }
        };
        var right = {
          right: {
            name: {
              data: {
                title: _i18n.default.device_detail_right_button() + _i18n.default.device_detail_list_name(),
                subTitle: rightMember.name,
                disabled: true
              }
            },
            room: {
              data: {
                title: _i18n.default.device_detail_right_button() + _i18n.default.device_detail_list_room(),
                subTitle: rightMember.roomName,
                disabled: true,
                showDot: false
              }
            }
          }
        };
        return _react.default.createElement(_reactNative.View, null, this._renderGroup(left), _react.default.createElement(_reactNative.View, {
          style: [styles.separatorRow, {
            marginLeft: 15
          }]
        }), this._renderGroup(right));
      }
    }, {
      key: "_renderTriple",
      value: function _renderTriple() {
        var memberShip = this.state.device.memberShip;
        var keys = Object.keys(memberShip);
        var leftMember = memberShip[keys[0]];
        var middleMember = memberShip[keys[1]];
        var rightMember = memberShip[keys[2]];
        var left = {
          left: {
            name: {
              data: {
                title: _i18n.default.device_detail_left_button() + _i18n.default.device_detail_list_name(),
                subTitle: leftMember.name,
                disabled: true
              }
            },
            room: {
              data: {
                title: _i18n.default.device_detail_left_button() + _i18n.default.device_detail_list_room(),
                subTitle: leftMember.roomName,
                disabled: true,
                showDot: false
              }
            }
          }
        };
        var middle = {
          middle: {
            name: {
              data: {
                title: _i18n.default.device_detail_middle_button() + _i18n.default.device_detail_list_name(),
                subTitle: middleMember.name,
                disabled: true
              }
            },
            room: {
              data: {
                title: _i18n.default.device_detail_middle_button() + _i18n.default.device_detail_list_room(),
                subTitle: middleMember.roomName,
                disabled: true,
                showDot: false
              }
            }
          }
        };
        var right = {
          right: {
            name: {
              data: {
                title: _i18n.default.device_detail_right_button() + _i18n.default.device_detail_list_name(),
                subTitle: rightMember.name,
                disabled: true
              }
            },
            room: {
              data: {
                title: _i18n.default.device_detail_right_button() + _i18n.default.device_detail_list_room(),
                subTitle: rightMember.roomName,
                disabled: true,
                showDot: false
              }
            }
          }
        };
        return _react.default.createElement(_reactNative.View, null, this._renderGroup(left), _react.default.createElement(_reactNative.View, {
          style: [styles.separatorRow, {
            marginLeft: 15
          }]
        }), this._renderGroup(middle), _react.default.createElement(_reactNative.View, {
          style: [styles.separatorRow, {
            marginLeft: 15
          }]
        }), this._renderGroup(right));
      }
    }, {
      key: "_renderMore",
      value: function _renderMore() {
        var _this2 = this;

        var memberShip = this.state.device.memberShip;

        var objArray = this._memberShip2ObjArray(memberShip);

        return objArray.map(function (obj, index) {
          return _react.default.createElement(_reactNative.View, {
            key: index
          }, _this2._renderGroup(obj), index !== objArray.length - 1 && _react.default.createElement(_reactNative.View, {
            style: [styles.separatorRow, {
              marginLeft: 15
            }]
          }));
        });
      }
    }, {
      key: "_memberShip2ObjArray",
      value: function _memberShip2ObjArray(memberShip) {
        var objArray = [];
        var index = 1;

        for (var k in memberShip) {
          var obj = {};
          var member = memberShip[k];
          var titleBasic = _i18n.default.device_detail_button() + index;
          obj[k] = {
            name: {
              data: {
                title: titleBasic + _i18n.default.device_detail_list_name(),
                subTitle: member.name,
                disabled: true
              }
            },
            room: {
              data: {
                title: titleBasic + _i18n.default.device_detail_list_room(),
                subTitle: member.roomName,
                disabled: true,
                showDot: false
              }
            }
          };
          objArray.push(obj);
          index++;
        }

        return objArray;
      }
    }, {
      key: "_renderGroup",
      value: function _renderGroup(obj) {
        var key = Object.keys(obj)[0];
        var _obj$key = obj[key],
            nameRowData = _obj$key.name,
            roomRowData = _obj$key.room;
        return _react.default.createElement(_reactNative.View, {
          key: key
        }, _react.default.createElement(_ListCell.default, {
          key: "name",
          data: nameRowData.data
        }), this.unsharedMHDevice && _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: [styles.separatorRow, {
            marginLeft: 15
          }]
        }), _react.default.createElement(_ListCell.default, {
          key: "room",
          data: roomRowData.data
        })));
      }
    }, {
      key: "_showDeviceSetting",
      value: function _showDeviceSetting() {
        this.setState({
          showDeviceSetting: true
        });
      }
    }, {
      key: "_delete",
      value: function _delete() {
        this.setState({
          showDeviceSetting: false,
          visible: true
        });
      }
    }, {
      key: "_deleteDevice",
      value: function _deleteDevice(device) {
        this.setState({
          visible: false
        });
        var skillIds = this.state.directiveList.map(function (directive) {
          return directive.skillId;
        }).join(",");

        _Utils.MHNative.deleteCustomIR({
          did: device.did,
          skillIds: skillIds
        });
      }
    }, {
      key: "_renderPlayList",
      value: function _renderPlayList(device) {
        if (this.isInfraredCustomDevice) {
          return _react.default.createElement(_DirectiveList.default, {
            data: this.state.directiveList,
            device: device
          });
        } else {
          return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_PlayList.default, {
            data: device.tips
          }));
        }
      }
    }, {
      key: "_renderList",
      value: function _renderList(device) {
        var listContent;

        if (this.isNormal) {
          listContent = this._renderNormal();
        } else {
          var memberCount = device.member_count;
          if (device.memberShip === undefined || Object.keys(device.memberShip).length === 0) return null;

          switch (memberCount) {
            case 2:
              listContent = this._renderDouble();
              break;

            case 3:
              listContent = this._renderTriple();
              break;

            default:
              listContent = this._renderMore();
              break;
          }
        }

        return _react.default.createElement(_reactNative.View, {
          style: styles.listContainer
        }, listContent);
      }
    }, {
      key: "_updateDevice",
      value: function _updateDevice(device) {
        var _this3 = this;

        if (this.isInfraredCustomDevice) {
          this.props.navigation.setParams({
            title: device.name
          });
          this.forceUpdate();
        } else {
          _Utils.MHRequest.callSmartHomeAPI("/v2/voicectrl/ai_dev", {
            "voice_id": _miot.Device.deviceID,
            "control_id": device.did,
            "env": 0,
            "tip_type": "name"
          }).then(function (_ref) {
            var device = _ref.device;

            if (device && device.tips) {
              var tmpDevice = _this3.state.device;
              tmpDevice.tips = device.tips;

              _this3.setState({
                device: tmpDevice
              });
            }

            _this3.hasUpdate = true;

            _this3.props.navigation.setParams({
              title: device.name
            });

            _this3.forceUpdate();
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var device = this.state.device;
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, _react.default.createElement(_reactNative.ScrollView, {
          showsVerticalScrollIndicator: false,
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.simulationIconContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.subTitle
        }, device.platform || ''), _react.default.createElement(_reactNative.View, {
          style: styles.iconContainer
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          resizeMode: "contain",
          source: {
            uri: device.icon_url,
            width: 64,
            height: 64
          }
        }))), _react.default.createElement(_reactNative.View, {
          style: {
            padding: 10
          }
        }, this._renderList(device), this._renderPlayList(device)), _react.default.createElement(_reactNative.View, {
          style: {
            height: 15
          }
        })), this.state.showDeviceSetting && _react.default.createElement(_CustomDeviceSetting.default, {
          _onPress: function _onPress() {
            return _this4.setState({
              showDeviceSetting: false
            });
          },
          _delete: function _delete() {
            return _this4._delete();
          }
        }), _react.default.createElement(_MHModal.default, {
          data: {
            title: _i18n.default.tip()
          },
          syncVisible: function syncVisible() {
            return _this4.setState({
              visible: false
            });
          },
          visible: this.state.visible,
          onPressRight: function onPressRight() {
            return _this4._deleteDevice(device);
          },
          view: _react.default.createElement(_reactNative.View, {
            style: styles.modalInputContainer
          }, _react.default.createElement(_reactNative.Text, {
            style: styles.modalContentText
          }, _i18n.default.common_mhmodal_content_delete_control()))
        }));
      }
    }, {
      key: "_navigateToGuide",
      value: function _navigateToGuide() {
        _miot.Host.ui.openWebPage('https://home.mi.com/views/articleList.html?shortKey=771932606000000001');
      }
    }, {
      key: "_openSubPage",
      value: function _openSubPage(page, props) {
        this.props.navigation.navigate(page, props);
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        var _this5 = this;

        var device = this.state.device;

        if (this.isInfraredCustomDevice) {
          (0, _apis.getCustomIRSkillList)({
            status: 1,
            limit: 50,
            groupName: device.did
          }).then(function (res) {
            if (res.code == 0) {
              if (res.result && res.result.count > 0 && res.result.skills && res.result.skills.length > 0) {
                _this5.setState({
                  directiveList: res.result.skills
                });
              }
            }
          }).catch(function (reject) {});
        }
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this6 = this;

        var device = this.state.device;

        if (!this.isNormal) {
          _Utils.MHRequest.callSmartHomeAPI('/v2/device/deviceinfo', {
            dids: [device.did],
            get_sub_relation: true
          }).then(function (_ref2) {
            var list = _ref2.list;

            if (list && list.length > 0) {
              if (list[0].member_ship === undefined || Object.keys(list[0].member_ship).length === 0) {
                _Utils.MHRequest.callSmartHomeAPI('/v2/device/multi_button_template', {
                  model: device.model
                }).then(function (_ref3) {
                  var members = _ref3.members;

                  if (members && members.length > 0) {
                    var _DataParser$getHomeRo = _Utils.DataParser.getHomeRoomIdWithName(device.home, device.room),
                        homeId = _DataParser$getHomeRo.homeId,
                        roomId = _DataParser$getHomeRo.roomId;

                    var memberShip = {};

                    for (var _iterator = members, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
                      var _ref4;

                      if (_isArray) {
                        if (_i >= _iterator.length) break;
                        _ref4 = _iterator[_i++];
                      } else {
                        _i = _iterator.next();
                        if (_i.done) break;
                        _ref4 = _i.value;
                      }

                      var _member = _ref4;
                      _member.home_id = Number(homeId);
                      _member.room_id = Number(roomId);
                      var newMember = (0, _extends2.default)({
                        homeName: device.home,
                        roomName: device.room
                      }, _member);
                      memberShip[_member.id] = newMember;
                    }

                    var newDevice = (0, _extends2.default)({
                      memberShip: memberShip
                    }, device);

                    _this6.setState({
                      device: newDevice
                    });

                    _Utils.MHRequest.callSmartHomeAPI('/v2/device/init_membership', {
                      did: device.did,
                      members: members
                    }).then(function () {}).catch(function (error) {});
                  }
                }).catch(function (error) {});
              } else {
                var member_ship = list[0].member_ship;

                for (var key in member_ship) {
                  var item = member_ship[key];
                  var home_id = item.home_id,
                      room_id = item.room_id;

                  var _DataParser$getHomeRo2 = _Utils.DataParser.getHomeRoomNameWithId(home_id, device.home, room_id),
                      homeName = _DataParser$getHomeRo2.homeName,
                      roomName = _DataParser$getHomeRo2.roomName;

                  item.homeName = homeName || device.home;
                  item.roomName = roomName || device.room;
                }

                var newDevice = (0, _extends2.default)({
                  memberShip: member_ship
                }, device);

                _this6.setState({
                  device: newDevice
                });
              }
            }
          }).catch(function (error) {});
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.subscription1) this.subscription1.remove();
        if (this.subscription2) this.subscription2.remove();
        if (this.subscription3) this.subscription3.remove();

        if (this.hasUpdate && this.props.navigation.getParam('update')) {
          this.props.navigation.getParam('update')(1);
        }
      }
    }]);
    return DeviceDetail;
  }(_react.default.Component);

  exports.default = DeviceDetail;

  DeviceDetail.navigationOptions = function (_ref5) {
    var navigation = _ref5.navigation;
    var device = navigation.getParam('device', {});
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        title: device.name || '',
        type: _NavigationBar.default.TYPE.LIGHT,
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#f6f6f6'
    },
    simulationIconContainer: {
      flex: 1,
      alignItems: 'center',
      backgroundColor: '#fff'
    },
    subTitle: {
      fontFamily: _GlobalData.myFontFamily.Regular,
      fontSize: 12,
      color: '#999'
    },
    iconContainer: {
      width: width,
      height: 110,
      alignItems: 'center',
      justifyContent: 'center'
    },
    separatorRow: {
      flex: 1,
      flexDirection: 'row',
      height: 0.5,
      backgroundColor: 'rgba(0,0,0,0.05)'
    },
    listContainer: {
      flex: 1,
      backgroundColor: '#fff',
      borderRadius: 8
    },
    modalInputContainer: {
      paddingHorizontal: 30,
      flex: 1,
      alignSelf: 'stretch',
      height: 40,
      marginBottom: 20
    },
    modalContentText: {
      fontSize: 15,
      color: '#666',
      textAlign: 'center'
    },
    button: {
      backgroundColor: '#fff',
      marginTop: 10,
      height: 37,
      borderRadius: 18.5
    },
    buttonText: {
      color: '#333'
    },
    controllerContainer: {
      position: 'absolute',
      zIndex: 999,
      right: 20,
      bottom: 20
    },
    controller: {
      width: 100,
      height: 100
    }
  });
},10598,[14305,14344,14320,14323,14371,14377,14386,10297,10033,10412,10601,10604,10424,10607,10610,10719,10074,10415,10043,10628,10097]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _GlobalData = _$$_REQUIRE(_dependencyMap[8]);

  var Button = function (_React$Component) {
    (0, _inherits2.default)(Button, _React$Component);

    function Button(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, Button);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Button).call(this, props, context));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(Button, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            disabled = _this$props.disabled,
            style = _this$props.style,
            data = _this$props.data,
            callback = _this$props.callback;
        return _react.default.createElement(_reactNative.TouchableHighlight, {
          disabled: disabled,
          style: [{
            flex: 1
          }, style.container],
          underlayColor: "#f2f2f2",
          onPress: function onPress() {
            return callback();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, data.icon && _react.default.createElement(_reactNative.Image, {
          style: [styles.icon, style.icon],
          source: data.icon,
          resizeMode: "cover"
        }), _react.default.createElement(_reactNative.Text, {
          style: [styles.text, style.text, disabled ? {
            opacity: 0.4
          } : {}]
        }, data.text)));
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }]);
    return Button;
  }(_react.default.Component);

  exports.default = Button;
  Button.propTypes = {};
  Button.defaultProps = {
    disabled: false,
    style: {
      container: {},
      icon: {},
      text: {}
    },
    data: {
      text: '',
      icon: ''
    },
    callback: function callback() {}
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      flexDirection: 'row',
      justifyContent: "center",
      alignItems: 'center'
    },
    icon: {
      width: 19,
      height: 19
    },
    text: {
      fontFamily: _GlobalData.myFontFamily.Regular,
      fontSize: 12
    }
  });
},10601,[14305,14320,14323,14371,14377,14386,10297,10033,10412]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _GlobalData = _$$_REQUIRE(_dependencyMap[8]);

  var _Utils = _$$_REQUIRE(_dependencyMap[9]);

  var _ListCell = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var DirectiveList = function (_React$Component) {
    (0, _inherits2.default)(DirectiveList, _React$Component);

    function DirectiveList() {
      (0, _classCallCheck2.default)(this, DirectiveList);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DirectiveList).apply(this, arguments));
    }

    (0, _createClass2.default)(DirectiveList, [{
      key: "_editDirective",
      value: function _editDirective(directive) {
        var device = this.props.device;
        var param = {
          "did": device.did,
          "deviceName": device.name,
          "skillId": directive.skillId,
          "keyId": directive.keyId,
          "keyName": directive.keyName,
          "triggers": directive.triggers,
          "execValue": directive.execValue
        };

        _Utils.MHNative.editCustomIRDirective(param);
      }
    }, {
      key: "_addDirective",
      value: function _addDirective() {
        var device = this.props.device;

        _Utils.MHNative.addCustomIRDirective({
          did: device.did,
          deviceName: device.name
        });
      }
    }, {
      key: "_renderDirectiveList",
      value: function _renderDirectiveList() {
        var directives = this.props.data;
        return directives.map(function (directive, i) {
          if (directive && directive.trigger.items && directive.trigger.items.length > 0) {
            return _react.default.createElement(_reactNative.View, {
              key: i + directive.skillId
            }, _react.default.createElement(_ListCell.default, {
              data: {
                title: directive.trigger.items[0].value,
                disabled: true
              }
            }), _react.default.createElement(_reactNative.View, {
              style: [styles.separatorRow]
            }));
          } else return null;
        });
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: [styles.container, this.props.style]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, _i18n.default.common_directive_list())), _react.default.createElement(_reactNative.View, {
          style: styles.separatorRow
        }), this._renderDirectiveList());
      }
    }]);
    return DirectiveList;
  }(_react.default.Component);

  exports.default = DirectiveList;
  DirectiveList.defaultProps = {
    style: {
      marginTop: 10
    },
    data: []
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width - 20,
      backgroundColor: '#fff',
      borderRadius: 8
    },
    controllerContainer: {
      flex: 1,
      height: 71,
      justifyContent: 'center',
      alignItems: 'center'
    },
    wrapper: {
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: "center"
    },
    titleContainer: {
      height: 51,
      justifyContent: 'center'
    },
    title: {
      fontFamily: _GlobalData.myFontFamily.Regular,
      fontSize: 11,
      color: '#999',
      marginLeft: 15
    },
    separatorRow: {
      flex: 1,
      flexDirection: 'row',
      marginLeft: 15,
      height: 0.5,
      backgroundColor: 'rgba(0,0,0,0.05)'
    },
    addIco: {},
    addDirectiveText: {
      fontSize: 15,
      color: "#ff2525"
    }
  });
},10604,[14305,14320,14323,14371,14377,14386,10297,10033,10412,10415,10424,10097]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Button = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var MHModal = function (_React$Component) {
    (0, _inherits2.default)(MHModal, _React$Component);

    function MHModal(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, MHModal);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MHModal).call(this, props, context));
      _this.state = {
        visible: props.visible
      };
      return _this;
    }

    (0, _createClass2.default)(MHModal, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props = this.props,
            leftButtonDisabled = _this$props.leftButtonDisabled,
            rightButtonDisabled = _this$props.rightButtonDisabled,
            style = _this$props.style,
            data = _this$props.data,
            view = _this$props.view,
            onPressLeft = _this$props.onPressLeft,
            onPressRight = _this$props.onPressRight;

        var _data = (0, _extends2.default)(MHModal.defaultProps.data, data);

        var _onPressLeft = onPressLeft ? onPressLeft : function () {
          return _this2._dismissModal();
        };

        return _react.default.createElement(_reactNative.Modal, {
          onRequestClose: function onRequestClose(_) {},
          animationType: "fade",
          transparent: true,
          visible: this.state.visible
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          style: {
            flex: 1
          },
          onPress: function onPress() {
            return _this2._dismissModal();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, null, _react.default.createElement(_reactNative.View, {
          style: [styles.innerModalView, style.container]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.modalTitleContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.modalTitle, style.title]
        }, _data.title)), view, _react.default.createElement(_reactNative.View, {
          style: styles.modalSeparator
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.buttonGroup, style.buttonGroup]
        }, _react.default.createElement(_Button.default, {
          disabled: leftButtonDisabled,
          style: {
            container: style.button,
            text: style.buttonText
          },
          data: {
            text: _data.leftButtonText
          },
          callback: function callback() {
            return _onPressLeft();
          }
        }), _react.default.createElement(_reactNative.View, {
          style: styles.separatorCol
        }), _react.default.createElement(_Button.default, {
          disabled: rightButtonDisabled,
          style: {
            container: style.button,
            text: [styles.rightButtonText, style.buttonText]
          },
          data: {
            text: _data.rightButtonText
          },
          callback: function callback() {
            return onPressRight();
          }
        })))))));
      }
    }, {
      key: "_dismissModal",
      value: function _dismissModal() {
        this.setState({
          visible: false
        });
        this.props.syncVisible && this.props.syncVisible();
      }
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(props) {
        this.setState({
          visible: props.visible
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }]);
    return MHModal;
  }(_react.default.Component);

  exports.default = MHModal;
  MHModal.propTypes = {};
  MHModal.defaultProps = {
    visible: false,
    leftButtonDisabled: false,
    rightButtonDisabled: false,
    onPressRight: function onPressRight() {},
    style: {
      container: {},
      title: {},
      buttonGroup: {},
      button: {},
      buttonText: {}
    },
    data: {
      title: 'Modal Title',
      leftButtonText: _i18n.default.common_mhmodal_button_cancel(),
      rightButtonText: _i18n.default.common_mhmodal_button_ok()
    },
    view: _react.default.createElement(_reactNative.Text, null, "Modal Content")
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: "rgba(0,0,0,0.5)",
      alignItems: 'center'
    },
    innerModalView: {
      width: width - 20,
      marginHorizontal: 10,
      position: "absolute",
      bottom: height * 0.45,
      backgroundColor: "#fff",
      borderRadius: 18,
      alignItems: "center"
    },
    modalTitleContainer: {
      alignSelf: "stretch",
      height: 66,
      justifyContent: "center",
      alignItems: "center"
    },
    modalTitle: {
      fontSize: 15
    },
    modalSeparator: {
      height: 0.5,
      alignSelf: "stretch",
      backgroundColor: "#e5e5e5"
    },
    separatorCol: {
      width: 0.5,
      alignSelf: "stretch",
      backgroundColor: "#e5e5e5"
    },
    buttonGroup: {
      flexDirection: 'row',
      height: 50
    },
    rightButtonText: {
      color: '#FF5D45'
    }
  });
},10607,[14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,10601,10097]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _PlayListCell = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _GlobalData = _$$_REQUIRE(_dependencyMap[10]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var iconArray = [_$$_REQUIRE(_dependencyMap[12]), _$$_REQUIRE(_dependencyMap[13]), _$$_REQUIRE(_dependencyMap[14]), _$$_REQUIRE(_dependencyMap[15])];

  var PlayList = function (_React$Component) {
    (0, _inherits2.default)(PlayList, _React$Component);

    function PlayList(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, PlayList);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PlayList).call(this, props, context));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(PlayList, [{
      key: "_renderPlayList",
      value: function _renderPlayList() {
        var data = this.props.data;
        return data.map(function (item, i) {
          var icon = iconArray[i] || iconArray[3];
          item.icon = icon;
          return _react.default.createElement(_reactNative.View, {
            key: item.title + i
          }, _react.default.createElement(_PlayListCell.default, {
            data: item
          }), i != data.length - 1 && _react.default.createElement(_reactNative.View, {
            style: [styles.separatorRow, {
              marginLeft: 36
            }]
          }));
        });
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: [styles.container, this.props.style]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, _i18n.default.common_play_list())), _react.default.createElement(_reactNative.View, {
          style: styles.separatorRow
        }), this._renderPlayList());
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }]);
    return PlayList;
  }(_react.default.Component);

  exports.default = PlayList;
  PlayList.propTypes = {};
  PlayList.defaultProps = {
    style: {
      marginTop: 10
    },
    data: [{
      title: '开关',
      contents: ['打开台灯', '关闭台灯']
    }]
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width - 20,
      backgroundColor: '#fff',
      borderRadius: 8
    },
    titleContainer: {
      height: 36,
      justifyContent: 'center'
    },
    title: {
      fontFamily: _GlobalData.myFontFamily.Regular,
      fontSize: 11,
      color: '#999',
      marginLeft: 10
    },
    separatorRow: {
      flex: 1,
      flexDirection: 'row',
      height: 0.5,
      backgroundColor: 'rgba(0,0,0,0.05)'
    }
  });
},10610,[14305,14320,14323,14371,14377,14386,10297,10033,10318,10613,10412,10097,10619,10616,10622,10625]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _GlobalData = _$$_REQUIRE(_dependencyMap[8]);

  var _Commands = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var PlayListCell = function (_React$Component) {
    (0, _inherits2.default)(PlayListCell, _React$Component);

    function PlayListCell(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, PlayListCell);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PlayListCell).call(this, props, context));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(PlayListCell, [{
      key: "render",
      value: function render() {
        var data = this.props.data;
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer
        }, _react.default.createElement(_reactNative.View, {
          style: styles.iconContainer
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: data.icon,
          resizeMode: "contain"
        })), _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, data.title || '')), _react.default.createElement(_Commands.default, {
          style: {
            marginLeft: 38,
            marginBottom: 18
          },
          contents: data.contents || []
        }));
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }]);
    return PlayListCell;
  }(_react.default.Component);

  exports.default = PlayListCell;
  PlayListCell.propTypes = {};
  PlayListCell.defaultProps = {
    data: {
      icon: _$$_REQUIRE(_dependencyMap[10]),
      title: '开关',
      contents: ['打开台灯', '关闭台灯']
    }
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1
    },
    titleContainer: {
      marginTop: 15,
      height: 20,
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center'
    },
    iconContainer: {
      marginLeft: 10,
      width: 20,
      height: 20,
      justifyContent: 'center',
      alignItems: 'center'
    },
    icon: {
      width: 14,
      height: 14
    },
    title: {
      marginLeft: 8,
      fontFamily: _GlobalData.myFontFamily.Regular,
      fontSize: 11
    }
  });
},10613,[14305,14320,14323,14371,14377,14386,10297,10033,10412,10421,10616]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/device/common/images",
    "width": 16,
    "height": 15,
    "scales": [2, 3],
    "hash": "4acf78572a7193f03faa9ddcfc1dfb4f",
    "name": "002",
    "type": "png"
  });
},10616,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/device/common/images",
    "width": 16,
    "height": 15,
    "scales": [2, 3],
    "hash": "b389bd020d2c5f364e4704bb12a3c9c5",
    "name": "001",
    "type": "png"
  });
},10619,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/device/common/images",
    "width": 16,
    "height": 15,
    "scales": [2, 3],
    "hash": "1937a2d1e7641b74223938a03e68fc00",
    "name": "003",
    "type": "png"
  });
},10622,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/device/common/images",
    "width": 16,
    "height": 15,
    "scales": [2, 3],
    "hash": "de9e19590bb5629ca9a1527b8a9ae252",
    "name": "004",
    "type": "png"
  });
},10625,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _reactNativeIphoneXHelper = _$$_REQUIRE(_dependencyMap[8]);

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[9]);

  var _GlobalData = _$$_REQUIRE(_dependencyMap[10]);

  var _i18n = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var statusBarHeight = (0, _reactNativeIphoneXHelper.getStatusBarHeight)(true);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var TIME = 300;
  var mainTitleBarHeight = 41;

  var CustomDeviceSetting = function (_React$Component) {
    (0, _inherits2.default)(CustomDeviceSetting, _React$Component);

    function CustomDeviceSetting(props) {
      var _this;

      (0, _classCallCheck2.default)(this, CustomDeviceSetting);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CustomDeviceSetting).call(this, props));
      _this.state = {
        animSlide: new _reactNative.Animated.Value(0),
        animOpacity: new _reactNative.Animated.Value(0)
      };
      return _this;
    }

    (0, _createClass2.default)(CustomDeviceSetting, [{
      key: "_renderlist",
      value: function _renderlist() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            flexDirection: 'row'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[12]),
          style: {
            width: 16,
            height: 8,
            marginRight: 6
          }
        })), _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: '#fff',
            borderRadius: 5
          }
        }, _react.default.createElement(_reactNative.TouchableHighlight, {
          underlayColor: "#f2f2f2",
          onPress: function onPress(_) {
            return _this2.props._delete && _this2.props._delete();
          },
          style: {
            flex: 1
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.listCell
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[13]),
          style: {
            width: 20,
            height: 20
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.listCellText
        }, _i18n.default.common_mhmodal_button_delete())))));
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        return _react.default.createElement(_reactNavigation.SafeAreaView, {
          style: {
            height: height,
            width: width,
            position: 'absolute',
            top: statusBarHeight
          }
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          style: {
            flex: 1
          },
          onPress: function onPress(_) {
            return _this3.props._onPress();
          }
        }, _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.container, {
            opacity: this.state.animOpacity
          }]
        })), _react.default.createElement(_reactNative.Animated.View, {
          style: {
            flex: 1,
            position: 'absolute',
            borderRadius: 4,
            top: mainTitleBarHeight,
            right: 10,
            backgroundColor: 'transparent',
            marginTop: this.state.animSlide
          }
        }, this._renderlist()));
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.state.animSlide.setValue(-height);
        this.state.animOpacity.setValue(0.0);

        _reactNative.Animated.parallel([_reactNative.Animated.timing(this.state.animSlide, {
          toValue: 0.0,
          duration: 150,
          easing: _reactNative.Easing.linear
        }), _reactNative.Animated.timing(this.state.animOpacity, {
          toValue: 1.0,
          duration: TIME,
          easing: _reactNative.Easing.linear
        })]).start();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.state.animSlide.setValue(0);
        this.state.animOpacity.setValue(1.0);

        _reactNative.Animated.parallel([_reactNative.Animated.timing(this.state.animSlide, {
          toValue: -height,
          duration: 150,
          easing: _reactNative.Easing.linear
        }), _reactNative.Animated.timing(this.state.animOpacity, {
          toValue: 0,
          duration: TIME,
          easing: _reactNative.Easing.linear
        })]).start();
      }
    }]);
    return CustomDeviceSetting;
  }(_react.default.Component);

  exports.default = CustomDeviceSetting;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: 'rgba(0,0,0,0.15)'
    },
    listCell: {
      flex: 1,
      padding: 10,
      flexDirection: 'row',
      alignItems: 'center',
      height: 43
    },
    listCellText: {
      marginLeft: 5,
      fontSize: 14,
      fontFamily: _GlobalData.myFontFamily.Regular
    },
    separatorRow: {
      flex: 1,
      flexDirection: 'row',
      height: 0.5,
      backgroundColor: 'rgba(0,0,0,0.1)'
    },
    dot: {
      position: 'absolute',
      top: 7,
      right: 4,
      width: 9,
      height: 9
    }
  });
},10628,[14305,14320,14323,14371,14377,14386,10297,10033,13696,10918,10412,10097,10631,10634]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/device/common/images",
    "width": 16,
    "height": 8,
    "scales": [2, 3],
    "hash": "5ced075546107c3d93142b9038b0a249",
    "name": "triangle",
    "type": "png"
  });
},10631,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.xiaomi.wifispeaker/device/common/images",
    "width": 30,
    "height": 30,
    "scales": [2, 3],
    "hash": "98daf276da979b0fbf23d61d095bb8fd",
    "name": "delete",
    "type": "png"
  });
},10634,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNativeWebview = _$$_REQUIRE(_dependencyMap[8]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _Strings = _$$_REQUIRE(_dependencyMap[12]);

  var webViewRef = 'webviewref';

  var MicoWebView = function (_Component) {
    (0, _inherits2.default)(MicoWebView, _Component);

    function MicoWebView() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, MicoWebView);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(MicoWebView)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        url: ''
      };
      _this.iosMicoJsBridge = 'window.webkit.messageHandlers.micoJsBridge={\
        postMessage:function(data){\
            window.ReactNativeWebView.postMessage(data);\
        }\
    };\
    true;';
      _this.androidMicoJsBridge = 'window.webkit.messageHandlers.micoJsBridge={\
        postMessage:function(data){\
            window.ReactNativeWebView.postMessage(data);\
        }\
    };\
    true;';
      _this.requesturl = {
        uri: 'http://i.ai.mi.com/h5/ai-voice-pay-fe/#/'
      };

      _this.handleMessage = function (event) {
        var data = JSON.parse(event.nativeEvent.data);

        switch (data.action) {
          case 'getAccessToken':
            data.data = data.action;
            break;

          case 'getUserId':
            data.data = data.action;
            break;
        }

        var webView = _this.refs[webViewRef];
        var jsCode = data.callback + "('" + JSON.stringify(data) + "')";
        webView.injectJavaScript(jsCode);
      };

      return _this;
    }

    (0, _createClass2.default)(MicoWebView, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNativeWebview.WebView, {
          ref: webViewRef,
          style: Styles.webview,
          originWhitelist: ['*'],
          source: this.requesturl,
          javaScriptEnabled: true,
          injectedJavaScript: 'aaaaaaaaaaaaaa',
          onMessage: this.handleMessage
        }));
      }
    }]);
    return MicoWebView;
  }(_react.Component);

  exports.default = MicoWebView;

  MicoWebView.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        title: I18n.lightEffectSetting(),
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  MicoWebView.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.LIGHT,
        title: "\u58F0\u7EB9\u7BA1\u7406",
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }]
      })
    };
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: 'white',
      paddingTop: (0, _sizes.adjustSize)(15)
    },
    webview: {
      flex: 1,
      backgroundColor: 'white',
      paddingTop: (0, _sizes.adjustSize)(15)
    }
  });
},10637,[14308,14305,14320,14323,14371,14377,14386,10297,14731,10033,10719,10776,10320]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }

  module.exports = _interopRequireDefault;
},14305,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _typeof = _$$_REQUIRE(_dependencyMap[0]);

  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function") return null;
    var cache = new WeakMap();

    _getRequireWildcardCache = function _getRequireWildcardCache() {
      return cache;
    };

    return cache;
  }

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }

    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {
        "default": obj
      };
    }

    var cache = _getRequireWildcardCache();

    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }

    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }

    newObj["default"] = obj;

    if (cache) {
      cache.set(obj, newObj);
    }

    return newObj;
  }

  module.exports = _interopRequireWildcard;
},14308,[14311]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _typeof(obj) {
    if (typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol") {
      module.exports = _typeof = function _typeof(obj) {
        return typeof obj;
      };
    } else {
      module.exports = _typeof = function _typeof(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
      };
    }

    return _typeof(obj);
  }

  module.exports = _typeof;
},14311,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var defineProperty = _$$_REQUIRE(_dependencyMap[0]);

  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      var ownKeys = Object.keys(Object(source));

      if (typeof Object.getOwnPropertySymbols === 'function') {
        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }));
      }

      ownKeys.forEach(function (key) {
        defineProperty(target, key, source[key]);
      });
    }

    return target;
  }

  module.exports = _objectSpread;
},14314,[14317]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  module.exports = _defineProperty;
},14317,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  module.exports = _classCallCheck;
},14320,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  module.exports = _createClass;
},14323,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = function invariant(condition, format, a, b, c, d, e, f) {
    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return args[argIndex++];
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1;
      throw error;
    }
  };

  module.exports = invariant;
},14326,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var warning = _$$_REQUIRE(_dependencyMap[0]);

  var warnedKeys = {};

  function warnOnce(key, message) {
    if (warnedKeys[key]) {
      return;
    }

    warning(false, message);
    warnedKeys[key] = true;
  }

  module.exports = warnOnce;
},14329,[14332]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var emptyFunction = _$$_REQUIRE(_dependencyMap[0]);

  var warning = emptyFunction;
  module.exports = warning;
},14332,[14335]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  function makeEmptyFunction(arg) {
    return function () {
      return arg;
    };
  }

  var emptyFunction = function emptyFunction() {};

  emptyFunction.thatReturns = makeEmptyFunction;
  emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
  emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
  emptyFunction.thatReturnsNull = makeEmptyFunction(null);

  emptyFunction.thatReturnsThis = function () {
    return this;
  };

  emptyFunction.thatReturnsArgument = function (arg) {
    return arg;
  };

  module.exports = emptyFunction;
},14335,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('AccessibilityInfo');

  exports.default = _default;
},14338,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.get = get;
  exports.getEnforcing = getEnforcing;

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var NativeModules = _$$_REQUIRE(_dependencyMap[2]);

  var turboModuleProxy = global.__turboModuleProxy;

  function get(name) {
    if (!global.RN$Bridgeless) {
      var legacyModule = NativeModules[name];

      if (legacyModule != null) {
        return legacyModule;
      }
    }

    if (turboModuleProxy != null) {
      var module = turboModuleProxy(name);
      return module;
    }

    return null;
  }

  function getEnforcing(name) {
    var module = get(name);
    (0, _invariant.default)(module != null, "TurboModuleRegistry.getEnforcing(...): '" + name + "' could not be found. " + 'Verify that a module by this name is registered in the native binary.');
    return module;
  }
},14341,[14305,14326,10042]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _extends() {
    module.exports = _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  module.exports = _extends;
},14344,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayWithHoles = _$$_REQUIRE(_dependencyMap[0]);

  var iterableToArrayLimit = _$$_REQUIRE(_dependencyMap[1]);

  var nonIterableRest = _$$_REQUIRE(_dependencyMap[2]);

  function _slicedToArray(arr, i) {
    return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();
  }

  module.exports = _slicedToArray;
},14347,[14350,14353,14356]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }

  module.exports = _arrayWithHoles;
},14350,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _iterableToArrayLimit(arr, i) {
    if (!((typeof Symbol === "function" ? Symbol.iterator : "@@iterator") in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) {
      return;
    }

    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  module.exports = _iterableToArrayLimit;
},14353,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }

  module.exports = _nonIterableRest;
},14356,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayWithoutHoles = _$$_REQUIRE(_dependencyMap[0]);

  var iterableToArray = _$$_REQUIRE(_dependencyMap[1]);

  var nonIterableSpread = _$$_REQUIRE(_dependencyMap[2]);

  function _toConsumableArray(arr) {
    return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();
  }

  module.exports = _toConsumableArray;
},14359,[14362,14365,14368]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }

      return arr2;
    }
  }

  module.exports = _arrayWithoutHoles;
},14362,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _iterableToArray(iter) {
    if ((typeof Symbol === "function" ? Symbol.iterator : "@@iterator") in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
  }

  module.exports = _iterableToArray;
},14365,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance");
  }

  module.exports = _nonIterableSpread;
},14368,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _typeof = _$$_REQUIRE(_dependencyMap[0]);

  var assertThisInitialized = _$$_REQUIRE(_dependencyMap[1]);

  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }

    return assertThisInitialized(self);
  }

  module.exports = _possibleConstructorReturn;
},14371,[14311,14374]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _assertThisInitialized(self) {
    if (self === undefined) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  module.exports = _assertThisInitialized;
},14374,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _getPrototypeOf(o) {
    module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
  }

  module.exports = _getPrototypeOf;
},14377,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var superPropBase = _$$_REQUIRE(_dependencyMap[0]);

  function _get(target, property, receiver) {
    if (typeof Reflect !== "undefined" && Reflect.get) {
      module.exports = _get = Reflect.get;
    } else {
      module.exports = _get = function _get(target, property, receiver) {
        var base = superPropBase(target, property);
        if (!base) return;
        var desc = Object.getOwnPropertyDescriptor(base, property);

        if (desc.get) {
          return desc.get.call(receiver);
        }

        return desc.value;
      };
    }

    return _get(target, property, receiver || target);
  }

  module.exports = _get;
},14380,[14383]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  function _superPropBase(object, property) {
    while (!Object.prototype.hasOwnProperty.call(object, property)) {
      object = getPrototypeOf(object);
      if (object === null) break;
    }

    return object;
  }

  module.exports = _superPropBase;
},14383,[14377]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var setPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) setPrototypeOf(subClass, superClass);
  }

  module.exports = _inherits;
},14386,[14389]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _setPrototypeOf(o, p) {
    module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };

    return _setPrototypeOf(o, p);
  }

  module.exports = _setPrototypeOf;
},14389,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = {
    getViewManagerConfig: function getViewManagerConfig(viewManagerName) {
      return null;
    },
    getConstants: function getConstants() {
      return {};
    },
    getConstantsForViewManager: function getConstantsForViewManager(viewManagerName) {},
    getDefaultEventTypes: function getDefaultEventTypes() {
      return [];
    },
    playTouchSound: function playTouchSound() {},
    lazilyLoadView: function lazilyLoadView(name) {},
    createView: function createView(reactTag, viewName, rootTag, props) {},
    updateView: function updateView(reactTag, viewName, props) {},
    focus: function focus(reactTag) {},
    blur: function blur(reactTag) {},
    findSubviewIn: function findSubviewIn(reactTag, point, callback) {},
    dispatchViewManagerCommand: function dispatchViewManagerCommand(reactTag, commandID, commandArgs) {},
    measure: function measure(reactTag, callback) {},
    measureInWindow: function measureInWindow(reactTag, callback) {},
    viewIsDescendantOf: function viewIsDescendantOf(reactTag, ancestorReactTag, callback) {},
    measureLayout: function measureLayout(reactTag, ancestorReactTag, errorCallback, callback) {},
    measureLayoutRelativeToParent: function measureLayoutRelativeToParent(reactTag, errorCallback, callback) {},
    setJSResponder: function setJSResponder(reactTag, blockNativeResponder) {},
    clearJSResponder: function clearJSResponder() {},
    configureNextLayoutAnimation: function configureNextLayoutAnimation(config, callback, errorCallback) {},
    removeSubviewsFromContainerWithID: function removeSubviewsFromContainerWithID(containerID) {},
    replaceExistingNonRootView: function replaceExistingNonRootView(reactTag, newReactTag) {},
    setChildren: function setChildren(containerTag, reactTags) {},
    manageChildren: function manageChildren(containerTag, moveFromIndices, moveToIndices, addChildReactTags, addAtIndices, removeAtIndices) {},
    setLayoutAnimationEnabledExperimental: function setLayoutAnimationEnabledExperimental(enabled) {},
    sendAccessibilityEvent: function sendAccessibilityEvent(reactTag, eventType) {},
    showPopupMenu: function showPopupMenu(reactTag, items, error, success) {},
    dismissPopupMenu: function dismissPopupMenu() {}
  };
},14392,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _NativeUIManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var NativeModules = _$$_REQUIRE(_dependencyMap[3]);

  var Platform = _$$_REQUIRE(_dependencyMap[4]);

  var UIManagerProperties = _$$_REQUIRE(_dependencyMap[5]);

  var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[6]);

  var viewManagerConfigs = {};
  var triedLoadingConfig = new Set();
  var NativeUIManagerConstants = {};
  var isNativeUIManagerConstantsSet = false;

  function _getConstants() {
    if (!isNativeUIManagerConstantsSet) {
      NativeUIManagerConstants = _NativeUIManager.default.getConstants();
      isNativeUIManagerConstantsSet = true;
    }

    return NativeUIManagerConstants;
  }

  var UIManagerJS = (0, _objectSpread2.default)({}, _NativeUIManager.default, {
    getConstants: function getConstants() {
      return _getConstants();
    },
    getViewManagerConfig: function getViewManagerConfig(viewManagerName) {
      if (viewManagerConfigs[viewManagerName] === undefined && _NativeUIManager.default.getConstantsForViewManager) {
        try {
          viewManagerConfigs[viewManagerName] = _NativeUIManager.default.getConstantsForViewManager(viewManagerName);
        } catch (e) {
          viewManagerConfigs[viewManagerName] = null;
        }
      }

      var config = viewManagerConfigs[viewManagerName];

      if (config) {
        return config;
      }

      if (!global.nativeCallSyncHook) {
        return config;
      }

      if (_NativeUIManager.default.lazilyLoadView && !triedLoadingConfig.has(viewManagerName)) {
        var result = _NativeUIManager.default.lazilyLoadView(viewManagerName);

        triedLoadingConfig.add(viewManagerName);

        if (result.viewConfig) {
          _getConstants()[viewManagerName] = result.viewConfig;
          lazifyViewManagerConfig(viewManagerName);
        }
      }

      return viewManagerConfigs[viewManagerName];
    }
  });
  _NativeUIManager.default.getViewManagerConfig = UIManagerJS.getViewManagerConfig;

  function lazifyViewManagerConfig(viewName) {
    var viewConfig = _getConstants()[viewName];

    viewManagerConfigs[viewName] = viewConfig;

    if (viewConfig.Manager) {
      defineLazyObjectProperty(viewConfig, 'Constants', {
        get: function get() {
          var viewManager = NativeModules[viewConfig.Manager];
          var constants = {};
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];

            if (typeof value !== 'function') {
              constants[key] = value;
            }
          });
          return constants;
        }
      });
      defineLazyObjectProperty(viewConfig, 'Commands', {
        get: function get() {
          var viewManager = NativeModules[viewConfig.Manager];
          var commands = {};
          var index = 0;
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];

            if (typeof value === 'function') {
              commands[key] = index++;
            }
          });
          return commands;
        }
      });
    }
  }

  if (_getConstants().ViewManagerNames) {
    _NativeUIManager.default.getConstants().ViewManagerNames.forEach(function (viewManagerName) {
      defineLazyObjectProperty(_NativeUIManager.default, viewManagerName, {
        get: function get() {
          return _NativeUIManager.default.getConstantsForViewManager(viewManagerName);
        }
      });
    });
  }

  if (!global.nativeCallSyncHook) {
    Object.keys(_getConstants()).forEach(function (viewManagerName) {
      if (!UIManagerProperties.includes(viewManagerName)) {
        if (!viewManagerConfigs[viewManagerName]) {
          viewManagerConfigs[viewManagerName] = _getConstants()[viewManagerName];
        }

        defineLazyObjectProperty(_NativeUIManager.default, viewManagerName, {
          get: function get() {
            return UIManagerJS.getViewManagerConfig(viewManagerName);
          }
        });
      }
    });
  }

  module.exports = UIManagerJS;
},14395,[14305,14314,14398,10042,10066,14404,10084]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('UIManager');

  exports.default = _default;
},14398,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('PlatformConstants');

  exports.default = _default;
},14401,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = ['clearJSResponder', 'configureNextLayoutAnimation', 'createView', 'dismissPopupMenu', 'dispatchViewManagerCommand', 'findSubviewIn', 'getConstantsForViewManager', 'getDefaultEventTypes', 'manageChildren', 'measure', 'measureInWindow', 'measureLayout', 'measureLayoutRelativeToParent', 'playTouchSound', 'removeRootView', 'removeSubviewsFromContainerWithID', 'replaceExistingNonRootView', 'sendAccessibilityEvent', 'setChildren', 'setJSResponder', 'setLayoutAnimationEnabledExperimental', 'showPopupMenu', 'updateView', 'viewIsDescendantOf', 'PopupMenu', 'LazyViewManagersEnabled', 'ViewManagerNames', 'StyleConstants', 'AccessibilityEventTypes', 'UIView', 'getViewManagerConfig', 'blur', 'focus', 'genericBubblingEventTypes', 'genericDirectEventTypes', 'lazilyLoadView'];
},14404,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var objectWithoutPropertiesLoose = _$$_REQUIRE(_dependencyMap[0]);

  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = objectWithoutPropertiesLoose(source, excluded);
    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  module.exports = _objectWithoutProperties;
},14407,[14410]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  module.exports = _objectWithoutPropertiesLoose;
},14410,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var NativeModule = TurboModuleRegistry.getEnforcing('DeviceInfo');
  var NativeDeviceInfo = NativeModule;
  var _default = NativeDeviceInfo;
  exports.default = _default;
},14413,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedLayoutPropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedShadowPropTypesIOS = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedTransformPropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var ImageStylePropTypes = _objectSpread({}, DeprecatedLayoutPropTypes, DeprecatedShadowPropTypesIOS, DeprecatedTransformPropTypes, {
    resizeMode: ReactPropTypes.oneOf(['center', 'contain', 'cover', 'repeat', 'stretch']),
    backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
    backgroundColor: DeprecatedColorPropType,
    borderColor: DeprecatedColorPropType,
    borderWidth: ReactPropTypes.number,
    borderRadius: ReactPropTypes.number,
    overflow: ReactPropTypes.oneOf(['visible', 'hidden']),
    tintColor: DeprecatedColorPropType,
    opacity: ReactPropTypes.number,
    overlayColor: ReactPropTypes.string,
    borderTopLeftRadius: ReactPropTypes.number,
    borderTopRightRadius: ReactPropTypes.number,
    borderBottomLeftRadius: ReactPropTypes.number,
    borderBottomRightRadius: ReactPropTypes.number
  });

  module.exports = ImageStylePropTypes;
},14416,[14314,14419,14425,14428,14431,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var normalizeColor = _$$_REQUIRE(_dependencyMap[0]);

  var colorPropType = function colorPropType(isRequired, props, propName, componentName, location, propFullName) {
    var color = props[propName];

    if (color === undefined || color === null) {
      if (isRequired) {
        return new Error('Required ' + location + ' `' + (propFullName || propName) + '` was not specified in `' + componentName + '`.');
      }

      return;
    }

    if (typeof color === 'number') {
      return;
    }

    if (normalizeColor(color) === null) {
      return new Error('Invalid ' + location + ' `' + (propFullName || propName) + '` supplied to `' + componentName + '`: ' + color + '\n' + "Valid color formats are\n  - '#f0f' (#rgb)\n  - '#f0fc' (#rgba)\n  - '#ff00ff' (#rrggbb)\n  - '#ff00ff00' (#rrggbbaa)\n  - 'rgb(255, 255, 255)'\n  - 'rgba(255, 255, 255, 1.0)'\n  - 'hsl(360, 100%, 100%)'\n  - 'hsla(360, 100%, 100%, 1.0)'\n  - 'transparent'\n  - 'red'\n  - 0xff00ff00 (0xrrggbbaa)\n");
    }
  };

  var ColorPropType = colorPropType.bind(null, false);
  ColorPropType.isRequired = colorPropType.bind(null, true);
  module.exports = ColorPropType;
},14419,[14422]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _native = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _utils = _$$_REQUIRE(_dependencyMap[2]);

  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  function shouldUseAutoDarkmode() {
    if (_native.default.MIOTService.currentDarkMode == "dark" && !_index.default.darkModeStore.setDarkMode) {
      return true;
    } else {
      return false;
    }
  }

  function changeColor(color, flag, isText) {
    if (!shouldUseAutoDarkmode() || flag) {
      return color;
    }

    var tmp = color.toString(16);

    if (tmp.length < 8) {
      if (tmp.length == 1) {
        tmp = "0000000" + tmp;
      } else if (tmp.length == 2) {
        tmp = "000000" + tmp;
      } else if (tmp.length == 3) {
        tmp = "00000" + tmp;
      } else if (tmp.length == 4) {
        tmp = "0000" + tmp;
      } else if (tmp.length == 5) {
        tmp = "000" + tmp;
      } else if (tmp.length == 6) {
        tmp = "00" + tmp;
      } else if (tmp.length == 7) {
        tmp = "0" + tmp;
      } else {
        tmp = '00000000';
      }
    }

    var alpha = tmp.substr(6, 2);
    var first = "0x" + tmp.substr(0, 6);
    var finalColor = getAntiColor(parseInt(first, 16), parseInt(alpha, 16), isText);
    var finalAlpha = getAntiAlpha(parseInt(first, 16), parseInt(alpha, 16));
    var final = parseInt(finalColor.toString(16) + alpha, 16) >>> 0;
    return final;
  }

  function getAntiAlpha(originColor, alpha, isText) {
    if (alpha <= 0x65 && alpha >= 0x4c && originColor === 0x000000) {
      return 0x99;
    }

    return alpha;
  }

  function getAntiColor(originColor, alpha, isText) {
    if (originColor === 0x32bac0) {
      return 0x25A9AF;
    } else if (originColor === 0x25A9AF) {
      return 0x158B90;
    } else if (originColor === 0xF43F31) {
      return 0xD92719;
    } else if (originColor === 0xD53C32) {
      return 0xB62920;
    }

    if (!isText) {
      if (originColor === 0xf6f7f8 || originColor === 0xe9e9ef || originColor === 0xEBEBEC || originColor === 0xefeff0) {
        return 0x000000;
      }

      if (originColor === 0xE3E6E7) {
        return 0x1a1a1a;
      }

      if (originColor === 0xb0b0b0) {
        return 0x1a1a1a;
      }
    } else {
      if (originColor === 0x23262a || originColor === 0x404346 || originColor === 0x454553) {
        return 0xffffff;
      }
    }

    var rgbColor = hexToRgb(originColor.toString(16));
    var hsvColor = rgbToHsv(rgbColor[0], rgbColor[1], rgbColor[2]);
    var h = hsvColor.h;
    var s = hsvColor.s;
    var v = hsvColor.v;
    var flag = false;

    if (isText) {
      if (hsvColor.h === 0 && hsvColor.s === 0) {
        flag = true;

        if (v >= 0 && v < 20) {
          hsvColor.v = 90;
        } else if (v >= 20 && v < 30) {
          hsvColor.v = 80;
        } else if (v >= 30 && v < 40) {
          hsvColor.v = 70;
        } else if (v >= 40 && v < 50) {
          hsvColor.v = 60;
        } else if (v >= 50 && v < 60) {
          hsvColor.v = 50;
        } else if (v >= 60 && v < 90) {
          hsvColor.v = 40;
        } else if (v >= 90 && v <= 100) {
          hsvColor.v = 90;
        } else {
          flag = false;
        }
      } else {}
    } else {
      if (hsvColor.h === 0 && hsvColor.s === 0) {
        flag = true;

        if (v >= 90 && v < 97) {
          hsvColor.v = 15;
        } else if (v >= 97 && v < 100) {
          hsvColor.v = 0;
        } else if (v === 100) {
          hsvColor.v = 10;
        } else {
          flag = false;
        }
      }
    }

    if (!flag) {
      hsvColor.s += 8;
      hsvColor.v -= 10;
    }

    return hsvToHex(hsvColor.h, Math.min(Math.max(hsvColor.s, 0), 100), Math.min(Math.max(hsvColor.v, 0), 100));
  }

  function hexToRgb(color) {
    var sColorChange = [];
    var tmp = color.toString(16);

    if (tmp.length < 8) {
      if (tmp.length == 1) {
        tmp = "#00000" + tmp;
      } else if (tmp.length == 2) {
        tmp = "#0000" + tmp;
      } else if (tmp.length == 3) {
        tmp = "#000" + tmp;
      } else if (tmp.length == 4) {
        tmp = "#00" + tmp;
      } else if (tmp.length == 5) {
        tmp = "#0" + tmp;
      } else if (tmp.length == 6) {
        tmp = "#" + tmp;
      } else {
        tmp = '#000000';
      }
    }

    var rgbString = "" + tmp.slice(1).match(/.{2}/g).map(function (x) {
      return parseInt(x, 16);
    }).join();
    sColorChange = rgbString.split(",");
    return sColorChange;
  }

  function rgbToHsv(r, g, b) {
    r = r / 255;
    g = g / 255;
    b = b / 255;
    var h, s, v;
    var min = Math.min(r, g, b);
    var max = v = Math.max(r, g, b);
    var l = (min + max) / 2;
    var difference = max - min;

    if (max == min) {
      h = 0;
    } else {
      switch (max) {
        case r:
          h = (g - b) / difference + (g < b ? 6 : 0);
          break;

        case g:
          h = 2.0 + (b - r) / difference;
          break;

        case b:
          h = 4.0 + (r - g) / difference;
          break;
      }

      h = Math.round(h * 60);
    }

    if (max == 0) {
      s = 0;
    } else {
      s = 1 - min / max;
    }

    s = Math.round(s * 100);
    v = Math.round(v * 100);
    return {
      "h": h,
      "s": s,
      "v": v
    };
  }

  function hsvToHex(h, s, v) {
    s = s / 100;
    v = v / 100;
    var r = 0,
        g = 0,
        b = 0;
    var i = parseInt(h / 60 % 6);
    var f = h / 60 - i;
    var p = v * (1 - s);
    var q = v * (1 - f * s);
    var t = v * (1 - (1 - f) * s);

    switch (i) {
      case 0:
        r = v;
        g = t;
        b = p;
        break;

      case 1:
        r = q;
        g = v;
        b = p;
        break;

      case 2:
        r = p;
        g = v;
        b = t;
        break;

      case 3:
        r = p;
        g = q;
        b = v;
        break;

      case 4:
        r = t;
        g = p;
        b = v;
        break;

      case 5:
        r = v;
        g = p;
        b = q;
        break;

      default:
        break;
    }

    r = parseInt(r * 255.0);
    g = parseInt(g * 255.0);
    b = parseInt(b * 255.0);
    var color = (0, _utils.rgbToHex)(r, g, b);
    return color;
  }

  function normalizeColor(color) {
    var matchers = getMatchers();
    var match;

    if (typeof color === 'number') {
      if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
        return changeColor(color, false, false);
      }

      return null;
    }

    var isText = false;

    if (color.indexOf('text') != -1) {
      isText = true;
      color = color.replace(new RegExp("text", "gm"), '');
    }

    var flag = false;

    if (color.indexOf('xm') != -1) {
      flag = true;
      color = color.replace(new RegExp("xm", "gm"), '');
    }

    if (match = matchers.hex6.exec(color)) {
      var tmp = parseInt(match[1] + "ff", 16) >>> 0;
      return changeColor(tmp, flag, isText);
    }

    if (names.hasOwnProperty(color)) {
      return changeColor(names[color], flag, isText);
    }

    if (match = matchers.rgb.exec(color)) {
      var _tmp = (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | 0x000000ff) >>> 0;

      return changeColor(_tmp, flag, isText);
    }

    if (match = matchers.rgba.exec(color)) {
      var _tmp2 = (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | parse1(match[4])) >>> 0;

      return changeColor(_tmp2, flag, isText);
    }

    if (match = matchers.hex3.exec(color)) {
      var _tmp3 = parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + "ff", 16) >>> 0;

      return changeColor(_tmp3, flag, isText);
    }

    if (match = matchers.hex8.exec(color)) {
      var _tmp4 = parseInt(match[1], 16) >>> 0;

      return changeColor(_tmp4, flag, isText);
    }

    if (match = matchers.hex4.exec(color)) {
      var _tmp5 = parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + match[4] + match[4], 16) >>> 0;

      return changeColor(_tmp5, flag, isText);
    }

    if (match = matchers.hsl.exec(color)) {
      var _tmp6 = (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | 0x000000ff) >>> 0;

      return changeColor(_tmp6, flag, isText);
    }

    if (match = matchers.hsla.exec(color)) {
      var _tmp7 = (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | parse1(match[4])) >>> 0;

      return changeColor(_tmp7, flag, isText);
    }

    return null;
  }

  function hue2rgb(p, q, t) {
    if (t < 0) {
      t += 1;
    }

    if (t > 1) {
      t -= 1;
    }

    if (t < 0.16666666666666666) {
      return p + (q - p) * 6 * t;
    }

    if (t < 0.5) {
      return q;
    }

    if (t < 0.6666666666666666) {
      return p + (q - p) * (0.6666666666666666 - t) * 6;
    }

    return p;
  }

  function hslToRgb(h, s, l) {
    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
    var p = 2 * l - q;
    var r = hue2rgb(p, q, h + 0.3333333333333333);
    var g = hue2rgb(p, q, h);
    var b = hue2rgb(p, q, h - 0.3333333333333333);
    return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;
  }

  var NUMBER = '[-+]?\\d*\\.?\\d+';
  var PERCENTAGE = "[-+]?\\d*\\.?\\d+%";

  function call() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return "\\(\\s*(" + args.join(')\\s*,\\s*(') + ")\\s*\\)";
  }

  var cachedMatchers;

  function getMatchers() {
    if (cachedMatchers === undefined) {
      cachedMatchers = {
        rgb: new RegExp("rgb" + call(NUMBER, NUMBER, NUMBER)),
        rgba: new RegExp("rgba" + call(NUMBER, NUMBER, NUMBER, NUMBER)),
        hsl: new RegExp("hsl" + call(NUMBER, PERCENTAGE, PERCENTAGE)),
        hsla: new RegExp("hsla" + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)),
        hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex6: /^#([0-9a-fA-F]{6})$/,
        hex8: /^#([0-9a-fA-F]{8})$/
      };
    }

    return cachedMatchers;
  }

  function parse255(str) {
    var int = parseInt(str, 10);

    if (int < 0) {
      return 0;
    }

    if (int > 255) {
      return 255;
    }

    return int;
  }

  function parse360(str) {
    var int = parseFloat(str);
    return (int % 360 + 360) % 360 / 360;
  }

  function parse1(str) {
    var num = parseFloat(str);

    if (num < 0) {
      return 0;
    }

    if (num > 1) {
      return 255;
    }

    return Math.round(num * 255);
  }

  function parsePercentage(str) {
    var int = parseFloat(str);

    if (int < 0) {
      return 0;
    }

    if (int > 100) {
      return 1;
    }

    return int / 100;
  }

  var names = {
    transparent: 0x00000000,
    aliceblue: 0xf0f8ffff,
    antiquewhite: 0xfaebd7ff,
    aqua: 0x00ffffff,
    aquamarine: 0x7fffd4ff,
    azure: 0xf0ffffff,
    beige: 0xf5f5dcff,
    bisque: 0xffe4c4ff,
    black: 0x000000ff,
    blanchedalmond: 0xffebcdff,
    blue: 0x0000ffff,
    blueviolet: 0x8a2be2ff,
    brown: 0xa52a2aff,
    burlywood: 0xdeb887ff,
    burntsienna: 0xea7e5dff,
    cadetblue: 0x5f9ea0ff,
    chartreuse: 0x7fff00ff,
    chocolate: 0xd2691eff,
    coral: 0xff7f50ff,
    cornflowerblue: 0x6495edff,
    cornsilk: 0xfff8dcff,
    crimson: 0xdc143cff,
    cyan: 0x00ffffff,
    darkblue: 0x00008bff,
    darkcyan: 0x008b8bff,
    darkgoldenrod: 0xb8860bff,
    darkgray: 0xa9a9a9ff,
    darkgreen: 0x006400ff,
    darkgrey: 0xa9a9a9ff,
    darkkhaki: 0xbdb76bff,
    darkmagenta: 0x8b008bff,
    darkolivegreen: 0x556b2fff,
    darkorange: 0xff8c00ff,
    darkorchid: 0x9932ccff,
    darkred: 0x8b0000ff,
    darksalmon: 0xe9967aff,
    darkseagreen: 0x8fbc8fff,
    darkslateblue: 0x483d8bff,
    darkslategray: 0x2f4f4fff,
    darkslategrey: 0x2f4f4fff,
    darkturquoise: 0x00ced1ff,
    darkviolet: 0x9400d3ff,
    deeppink: 0xff1493ff,
    deepskyblue: 0x00bfffff,
    dimgray: 0x696969ff,
    dimgrey: 0x696969ff,
    dodgerblue: 0x1e90ffff,
    firebrick: 0xb22222ff,
    floralwhite: 0xfffaf0ff,
    forestgreen: 0x228b22ff,
    fuchsia: 0xff00ffff,
    gainsboro: 0xdcdcdcff,
    ghostwhite: 0xf8f8ffff,
    gold: 0xffd700ff,
    goldenrod: 0xdaa520ff,
    gray: 0x808080ff,
    green: 0x008000ff,
    greenyellow: 0xadff2fff,
    grey: 0x808080ff,
    honeydew: 0xf0fff0ff,
    hotpink: 0xff69b4ff,
    indianred: 0xcd5c5cff,
    indigo: 0x4b0082ff,
    ivory: 0xfffff0ff,
    khaki: 0xf0e68cff,
    lavender: 0xe6e6faff,
    lavenderblush: 0xfff0f5ff,
    lawngreen: 0x7cfc00ff,
    lemonchiffon: 0xfffacdff,
    lightblue: 0xadd8e6ff,
    lightcoral: 0xf08080ff,
    lightcyan: 0xe0ffffff,
    lightgoldenrodyellow: 0xfafad2ff,
    lightgray: 0xd3d3d3ff,
    lightgreen: 0x90ee90ff,
    lightgrey: 0xd3d3d3ff,
    lightpink: 0xffb6c1ff,
    lightsalmon: 0xffa07aff,
    lightseagreen: 0x20b2aaff,
    lightskyblue: 0x87cefaff,
    lightslategray: 0x778899ff,
    lightslategrey: 0x778899ff,
    lightsteelblue: 0xb0c4deff,
    lightyellow: 0xffffe0ff,
    lime: 0x00ff00ff,
    limegreen: 0x32cd32ff,
    linen: 0xfaf0e6ff,
    magenta: 0xff00ffff,
    maroon: 0x800000ff,
    mediumaquamarine: 0x66cdaaff,
    mediumblue: 0x0000cdff,
    mediumorchid: 0xba55d3ff,
    mediumpurple: 0x9370dbff,
    mediumseagreen: 0x3cb371ff,
    mediumslateblue: 0x7b68eeff,
    mediumspringgreen: 0x00fa9aff,
    mediumturquoise: 0x48d1ccff,
    mediumvioletred: 0xc71585ff,
    midnightblue: 0x191970ff,
    mintcream: 0xf5fffaff,
    mistyrose: 0xffe4e1ff,
    moccasin: 0xffe4b5ff,
    navajowhite: 0xffdeadff,
    navy: 0x000080ff,
    oldlace: 0xfdf5e6ff,
    olive: 0x808000ff,
    olivedrab: 0x6b8e23ff,
    orange: 0xffa500ff,
    orangered: 0xff4500ff,
    orchid: 0xda70d6ff,
    palegoldenrod: 0xeee8aaff,
    palegreen: 0x98fb98ff,
    paleturquoise: 0xafeeeeff,
    palevioletred: 0xdb7093ff,
    papayawhip: 0xffefd5ff,
    peachpuff: 0xffdab9ff,
    peru: 0xcd853fff,
    pink: 0xffc0cbff,
    plum: 0xdda0ddff,
    powderblue: 0xb0e0e6ff,
    purple: 0x800080ff,
    rebeccapurple: 0x663399ff,
    red: 0xff0000ff,
    rosybrown: 0xbc8f8fff,
    royalblue: 0x4169e1ff,
    saddlebrown: 0x8b4513ff,
    salmon: 0xfa8072ff,
    sandybrown: 0xf4a460ff,
    seagreen: 0x2e8b57ff,
    seashell: 0xfff5eeff,
    sienna: 0xa0522dff,
    silver: 0xc0c0c0ff,
    skyblue: 0x87ceebff,
    slateblue: 0x6a5acdff,
    slategray: 0x708090ff,
    slategrey: 0x708090ff,
    snow: 0xfffafaff,
    springgreen: 0x00ff7fff,
    steelblue: 0x4682b4ff,
    tan: 0xd2b48cff,
    teal: 0x008080ff,
    thistle: 0xd8bfd8ff,
    tomato: 0xff6347ff,
    turquoise: 0x40e0d0ff,
    violet: 0xee82eeff,
    wheat: 0xf5deb3ff,
    white: 0xffffffff,
    whitesmoke: 0xf5f5f5ff,
    yellow: 0xffff00ff,
    yellowgreen: 0x9acd32ff
  };
  module.exports = normalizeColor;
},14422,[14305,10005,10014,10998]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var LayoutPropTypes = {
    display: ReactPropTypes.oneOf(['none', 'flex']),
    width: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    height: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    start: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    end: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    top: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    left: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    right: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    bottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    minWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    maxWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    minHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    maxHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    margin: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginStart: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginEnd: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    padding: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingStart: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingEnd: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    borderWidth: ReactPropTypes.number,
    borderTopWidth: ReactPropTypes.number,
    borderStartWidth: ReactPropTypes.number,
    borderEndWidth: ReactPropTypes.number,
    borderRightWidth: ReactPropTypes.number,
    borderBottomWidth: ReactPropTypes.number,
    borderLeftWidth: ReactPropTypes.number,
    position: ReactPropTypes.oneOf(['absolute', 'relative']),
    flexDirection: ReactPropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),
    flexWrap: ReactPropTypes.oneOf(['wrap', 'nowrap', 'wrap-reverse']),
    justifyContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'space-evenly']),
    alignItems: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'baseline']),
    alignSelf: ReactPropTypes.oneOf(['auto', 'flex-start', 'flex-end', 'center', 'stretch', 'baseline']),
    alignContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'space-between', 'space-around']),
    overflow: ReactPropTypes.oneOf(['visible', 'hidden', 'scroll']),
    flex: ReactPropTypes.number,
    flexGrow: ReactPropTypes.number,
    flexShrink: ReactPropTypes.number,
    flexBasis: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    aspectRatio: ReactPropTypes.number,
    zIndex: ReactPropTypes.number,
    direction: ReactPropTypes.oneOf(['inherit', 'ltr', 'rtl'])
  };
  module.exports = LayoutPropTypes;
},14425,[10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[0]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedShadowPropTypesIOS = {
    shadowColor: DeprecatedColorPropType,
    shadowOffset: ReactPropTypes.shape({
      width: ReactPropTypes.number,
      height: ReactPropTypes.number
    }),
    shadowOpacity: ReactPropTypes.number,
    shadowRadius: ReactPropTypes.number
  };
  module.exports = DeprecatedShadowPropTypesIOS;
},14428,[14419,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var deprecatedPropType = _$$_REQUIRE(_dependencyMap[1]);

  var TransformMatrixPropType = function TransformMatrixPropType(props, propName, componentName) {
    if (props[propName]) {
      return new Error("The transformMatrix style property is deprecated. Use `transform: [{ matrix: ... }]` instead.");
    }
  };

  var DecomposedMatrixPropType = function DecomposedMatrixPropType(props, propName, componentName) {
    if (props[propName]) {
      return new Error("The decomposedMatrix style property is deprecated. Use `transform: [...]` instead.");
    }
  };

  var DeprecatedTransformPropTypes = {
    transform: ReactPropTypes.arrayOf(ReactPropTypes.oneOfType([ReactPropTypes.shape({
      perspective: ReactPropTypes.number
    }), ReactPropTypes.shape({
      rotate: ReactPropTypes.string
    }), ReactPropTypes.shape({
      rotateX: ReactPropTypes.string
    }), ReactPropTypes.shape({
      rotateY: ReactPropTypes.string
    }), ReactPropTypes.shape({
      rotateZ: ReactPropTypes.string
    }), ReactPropTypes.shape({
      scale: ReactPropTypes.number
    }), ReactPropTypes.shape({
      scaleX: ReactPropTypes.number
    }), ReactPropTypes.shape({
      scaleY: ReactPropTypes.number
    }), ReactPropTypes.shape({
      translateX: ReactPropTypes.number
    }), ReactPropTypes.shape({
      translateY: ReactPropTypes.number
    }), ReactPropTypes.shape({
      skewX: ReactPropTypes.string
    }), ReactPropTypes.shape({
      skewY: ReactPropTypes.string
    })])),
    transformMatrix: TransformMatrixPropType,
    decomposedMatrix: DecomposedMatrixPropType,
    scaleX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    scaleY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    rotation: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    translateX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    translateY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.')
  };
  module.exports = DeprecatedTransformPropTypes;
},14431,[10318,10366]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedViewStylePropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedTextStylePropTypes = _objectSpread({}, DeprecatedViewStylePropTypes, {
    color: DeprecatedColorPropType,
    fontFamily: ReactPropTypes.string,
    fontSize: ReactPropTypes.number,
    fontStyle: ReactPropTypes.oneOf(['normal', 'italic']),
    fontWeight: ReactPropTypes.oneOf(['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900']),
    fontVariant: ReactPropTypes.arrayOf(ReactPropTypes.oneOf(['small-caps', 'oldstyle-nums', 'lining-nums', 'tabular-nums', 'proportional-nums'])),
    textShadowOffset: ReactPropTypes.shape({
      width: ReactPropTypes.number,
      height: ReactPropTypes.number
    }),
    textShadowRadius: ReactPropTypes.number,
    textShadowColor: DeprecatedColorPropType,
    letterSpacing: ReactPropTypes.number,
    lineHeight: ReactPropTypes.number,
    textAlign: ReactPropTypes.oneOf(['auto', 'left', 'right', 'center', 'justify']),
    textAlignVertical: ReactPropTypes.oneOf(['auto', 'top', 'bottom', 'center']),
    includeFontPadding: ReactPropTypes.bool,
    textDecorationLine: ReactPropTypes.oneOf(['none', 'underline', 'line-through', 'underline line-through']),
    textDecorationStyle: ReactPropTypes.oneOf(['solid', 'double', 'dotted', 'dashed']),
    textDecorationColor: DeprecatedColorPropType,
    textTransform: ReactPropTypes.oneOf(['none', 'capitalize', 'uppercase', 'lowercase']),
    writingDirection: ReactPropTypes.oneOf(['auto', 'ltr', 'rtl'])
  });

  module.exports = DeprecatedTextStylePropTypes;
},14434,[14314,14419,14437,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedLayoutPropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedShadowPropTypesIOS = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedTransformPropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var DeprecatedViewStylePropTypes = _objectSpread({}, DeprecatedLayoutPropTypes, DeprecatedShadowPropTypesIOS, DeprecatedTransformPropTypes, {
    backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
    backgroundColor: DeprecatedColorPropType,
    borderColor: DeprecatedColorPropType,
    borderTopColor: DeprecatedColorPropType,
    borderRightColor: DeprecatedColorPropType,
    borderBottomColor: DeprecatedColorPropType,
    borderLeftColor: DeprecatedColorPropType,
    borderStartColor: DeprecatedColorPropType,
    borderEndColor: DeprecatedColorPropType,
    borderRadius: ReactPropTypes.number,
    borderTopLeftRadius: ReactPropTypes.number,
    borderTopRightRadius: ReactPropTypes.number,
    borderTopStartRadius: ReactPropTypes.number,
    borderTopEndRadius: ReactPropTypes.number,
    borderBottomLeftRadius: ReactPropTypes.number,
    borderBottomRightRadius: ReactPropTypes.number,
    borderBottomStartRadius: ReactPropTypes.number,
    borderBottomEndRadius: ReactPropTypes.number,
    borderStyle: ReactPropTypes.oneOf(['solid', 'dotted', 'dashed']),
    borderWidth: ReactPropTypes.number,
    borderTopWidth: ReactPropTypes.number,
    borderRightWidth: ReactPropTypes.number,
    borderBottomWidth: ReactPropTypes.number,
    borderLeftWidth: ReactPropTypes.number,
    opacity: ReactPropTypes.number,
    elevation: ReactPropTypes.number
  });

  module.exports = DeprecatedViewStylePropTypes;
},14437,[14314,14419,14425,14428,14431,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.__INTERNAL_VIEW_CONFIG = undefined;

  var Platform = _$$_REQUIRE(_dependencyMap[0]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativeViewViewConfigAndroid = _$$_REQUIRE(_dependencyMap[2]);

  var registerGeneratedViewConfig = _$$_REQUIRE(_dependencyMap[3]);

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[4]);

  var NativeViewComponent;
  var viewConfig;
  {
    NativeViewComponent = requireNativeComponent('RCTView');
  }
  var __INTERNAL_VIEW_CONFIG = viewConfig;
  exports.__INTERNAL_VIEW_CONFIG = __INTERNAL_VIEW_CONFIG;
  var _default = NativeViewComponent;
  exports.default = _default;
},14440,[10066,10114,14581,14584,10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativePrivateInterface = _$$_REQUIRE(_dependencyMap[2]),
      React = _$$_REQUIRE(_dependencyMap[3]),
      Scheduler = _$$_REQUIRE(_dependencyMap[4]);

  function ReactError(error) {
    error.name = "Invariant Violation";
    return error;
  }

  var eventPluginOrder = null,
      namesToPlugins = {};

  function recomputePluginOrdering() {
    if (eventPluginOrder) for (var pluginName in namesToPlugins) {
      var pluginModule = namesToPlugins[pluginName],
          pluginIndex = eventPluginOrder.indexOf(pluginName);
      if (!(-1 < pluginIndex)) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `" + pluginName + "`."));

      if (!plugins[pluginIndex]) {
        if (!pluginModule.extractEvents) throw ReactError(Error("EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `" + pluginName + "` does not."));
        plugins[pluginIndex] = pluginModule;
        pluginIndex = pluginModule.eventTypes;

        for (var eventName in pluginIndex) {
          var JSCompiler_inline_result = undefined;
          var dispatchConfig = pluginIndex[eventName],
              pluginModule$jscomp$0 = pluginModule,
              eventName$jscomp$0 = eventName;
          if (eventNameDispatchConfigs.hasOwnProperty(eventName$jscomp$0)) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same event name, `" + eventName$jscomp$0 + "`."));
          eventNameDispatchConfigs[eventName$jscomp$0] = dispatchConfig;
          var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

          if (phasedRegistrationNames) {
            for (JSCompiler_inline_result in phasedRegistrationNames) {
              phasedRegistrationNames.hasOwnProperty(JSCompiler_inline_result) && publishRegistrationName(phasedRegistrationNames[JSCompiler_inline_result], pluginModule$jscomp$0, eventName$jscomp$0);
            }

            JSCompiler_inline_result = true;
          } else dispatchConfig.registrationName ? (publishRegistrationName(dispatchConfig.registrationName, pluginModule$jscomp$0, eventName$jscomp$0), JSCompiler_inline_result = true) : JSCompiler_inline_result = false;

          if (!JSCompiler_inline_result) throw ReactError(Error("EventPluginRegistry: Failed to publish event `" + eventName + "` for plugin `" + pluginName + "`."));
        }
      }
    }
  }

  function publishRegistrationName(registrationName, pluginModule) {
    if (registrationNameModules[registrationName]) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same registration name, `" + registrationName + "`."));
    registrationNameModules[registrationName] = pluginModule;
  }

  var plugins = [],
      eventNameDispatchConfigs = {},
      registrationNameModules = {};

  function invokeGuardedCallbackImpl(name, func, context, a, b, c, d, e, f) {
    var funcArgs = Array.prototype.slice.call(arguments, 3);

    try {
      func.apply(context, funcArgs);
    } catch (error) {
      this.onError(error);
    }
  }

  var hasError = false,
      caughtError = null,
      hasRethrowError = false,
      rethrowError = null,
      reporter = {
    onError: function onError(error) {
      hasError = true;
      caughtError = error;
    }
  };

  function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
    hasError = false;
    caughtError = null;
    invokeGuardedCallbackImpl.apply(reporter, arguments);
  }

  function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
    invokeGuardedCallback.apply(this, arguments);

    if (hasError) {
      if (hasError) {
        var error = caughtError;
        hasError = false;
        caughtError = null;
      } else throw ReactError(Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue."));

      hasRethrowError || (hasRethrowError = true, rethrowError = error);
    }
  }

  var getFiberCurrentPropsFromNode = null,
      getInstanceFromNode = null,
      getNodeFromInstance = null;

  function executeDispatch(event, listener, inst) {
    var type = event.type || "unknown-event";
    event.currentTarget = getNodeFromInstance(inst);
    invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
    event.currentTarget = null;
  }

  function executeDirectDispatch(event) {
    var dispatchListener = event._dispatchListeners,
        dispatchInstance = event._dispatchInstances;
    if (Array.isArray(dispatchListener)) throw ReactError(Error("executeDirectDispatch(...): Invalid `event`."));
    event.currentTarget = dispatchListener ? getNodeFromInstance(dispatchInstance) : null;
    dispatchListener = dispatchListener ? dispatchListener(event) : null;
    event.currentTarget = null;
    event._dispatchListeners = null;
    event._dispatchInstances = null;
    return dispatchListener;
  }

  function accumulateInto(current, next) {
    if (null == next) throw ReactError(Error("accumulateInto(...): Accumulated items must not be null or undefined."));
    if (null == current) return next;

    if (Array.isArray(current)) {
      if (Array.isArray(next)) return current.push.apply(current, next), current;
      current.push(next);
      return current;
    }

    return Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  function forEachAccumulated(arr, cb, scope) {
    Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
  }

  var eventQueue = null;

  function executeDispatchesAndReleaseTopLevel(e) {
    if (e) {
      var dispatchListeners = e._dispatchListeners,
          dispatchInstances = e._dispatchInstances;
      if (Array.isArray(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !e.isPropagationStopped(); i++) {
        executeDispatch(e, dispatchListeners[i], dispatchInstances[i]);
      } else dispatchListeners && executeDispatch(e, dispatchListeners, dispatchInstances);
      e._dispatchListeners = null;
      e._dispatchInstances = null;
      e.isPersistent() || e.constructor.release(e);
    }
  }

  var injection = {
    injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
      if (eventPluginOrder) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React."));
      eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
      recomputePluginOrdering();
    },
    injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
      var isOrderingDirty = false,
          pluginName;

      for (pluginName in injectedNamesToPlugins) {
        if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
          var pluginModule = injectedNamesToPlugins[pluginName];

          if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
            if (namesToPlugins[pluginName]) throw ReactError(Error("EventPluginRegistry: Cannot inject two different event plugins using the same name, `" + pluginName + "`."));
            namesToPlugins[pluginName] = pluginModule;
            isOrderingDirty = true;
          }
        }
      }

      isOrderingDirty && recomputePluginOrdering();
    }
  };

  function getListener(inst, registrationName) {
    var listener = inst.stateNode;
    if (!listener) return null;
    var props = getFiberCurrentPropsFromNode(listener);
    if (!props) return null;
    listener = props[registrationName];

    a: switch (registrationName) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
        (props = !props.disabled) || (inst = inst.type, props = !("button" === inst || "input" === inst || "select" === inst || "textarea" === inst));
        inst = !props;
        break a;

      default:
        inst = false;
    }

    if (inst) return null;
    if (listener && "function" !== typeof listener) throw ReactError(Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type."));
    return listener;
  }

  function getParent(inst) {
    do {
      inst = inst.return;
    } while (inst && 5 !== inst.tag);

    return inst ? inst : null;
  }

  function traverseTwoPhase(inst, fn, arg) {
    for (var path = []; inst;) {
      path.push(inst), inst = getParent(inst);
    }

    for (inst = path.length; 0 < inst--;) {
      fn(path[inst], "captured", arg);
    }

    for (inst = 0; inst < path.length; inst++) {
      fn(path[inst], "bubbled", arg);
    }
  }

  function accumulateDirectionalDispatches(inst, phase, event) {
    if (phase = getListener(inst, event.dispatchConfig.phasedRegistrationNames[phase])) event._dispatchListeners = accumulateInto(event._dispatchListeners, phase), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }

  function accumulateTwoPhaseDispatchesSingle(event) {
    event && event.dispatchConfig.phasedRegistrationNames && traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }

  function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
      var targetInst = event._targetInst;
      targetInst = targetInst ? getParent(targetInst) : null;
      traverseTwoPhase(targetInst, accumulateDirectionalDispatches, event);
    }
  }

  function accumulateDirectDispatchesSingle(event) {
    if (event && event.dispatchConfig.registrationName) {
      var inst = event._targetInst;

      if (inst && event && event.dispatchConfig.registrationName) {
        var listener = getListener(inst, event.dispatchConfig.registrationName);
        listener && (event._dispatchListeners = accumulateInto(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst));
      }
    }
  }

  function functionThatReturnsTrue() {
    return true;
  }

  function functionThatReturnsFalse() {
    return false;
  }

  function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
    this.dispatchConfig = dispatchConfig;
    this._targetInst = targetInst;
    this.nativeEvent = nativeEvent;
    dispatchConfig = this.constructor.Interface;

    for (var propName in dispatchConfig) {
      dispatchConfig.hasOwnProperty(propName) && ((targetInst = dispatchConfig[propName]) ? this[propName] = targetInst(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName]);
    }

    this.isDefaultPrevented = (null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : false === nativeEvent.returnValue) ? functionThatReturnsTrue : functionThatReturnsFalse;
    this.isPropagationStopped = functionThatReturnsFalse;
    return this;
  }

  _extends(SyntheticEvent.prototype, {
    preventDefault: function preventDefault() {
      this.defaultPrevented = true;
      var event = this.nativeEvent;
      event && (event.preventDefault ? event.preventDefault() : "unknown" !== typeof event.returnValue && (event.returnValue = false), this.isDefaultPrevented = functionThatReturnsTrue);
    },
    stopPropagation: function stopPropagation() {
      var event = this.nativeEvent;
      event && (event.stopPropagation ? event.stopPropagation() : "unknown" !== typeof event.cancelBubble && (event.cancelBubble = true), this.isPropagationStopped = functionThatReturnsTrue);
    },
    persist: function persist() {
      this.isPersistent = functionThatReturnsTrue;
    },
    isPersistent: functionThatReturnsFalse,
    destructor: function destructor() {
      var Interface = this.constructor.Interface,
          propName;

      for (propName in Interface) {
        this[propName] = null;
      }

      this.nativeEvent = this._targetInst = this.dispatchConfig = null;
      this.isPropagationStopped = this.isDefaultPrevented = functionThatReturnsFalse;
      this._dispatchInstances = this._dispatchListeners = null;
    }
  });

  SyntheticEvent.Interface = {
    type: null,
    target: null,
    currentTarget: function currentTarget() {
      return null;
    },
    eventPhase: null,
    bubbles: null,
    cancelable: null,
    timeStamp: function timeStamp(event) {
      return event.timeStamp || Date.now();
    },
    defaultPrevented: null,
    isTrusted: null
  };

  SyntheticEvent.extend = function (Interface) {
    function E() {}

    function Class() {
      return Super.apply(this, arguments);
    }

    var Super = this;
    E.prototype = Super.prototype;
    var prototype = new E();

    _extends(prototype, Class.prototype);

    Class.prototype = prototype;
    Class.prototype.constructor = Class;
    Class.Interface = _extends({}, Super.Interface, Interface);
    Class.extend = Super.extend;
    addEventPoolingTo(Class);
    return Class;
  };

  addEventPoolingTo(SyntheticEvent);

  function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
    if (this.eventPool.length) {
      var instance = this.eventPool.pop();
      this.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
      return instance;
    }

    return new this(dispatchConfig, targetInst, nativeEvent, nativeInst);
  }

  function releasePooledEvent(event) {
    if (!(event instanceof this)) throw ReactError(Error("Trying to release an event instance into a pool of a different type."));
    event.destructor();
    10 > this.eventPool.length && this.eventPool.push(event);
  }

  function addEventPoolingTo(EventConstructor) {
    EventConstructor.eventPool = [];
    EventConstructor.getPooled = getPooledEvent;
    EventConstructor.release = releasePooledEvent;
  }

  var ResponderSyntheticEvent = SyntheticEvent.extend({
    touchHistory: function touchHistory() {
      return null;
    }
  });

  function isStartish(topLevelType) {
    return "topTouchStart" === topLevelType;
  }

  function isMoveish(topLevelType) {
    return "topTouchMove" === topLevelType;
  }

  var startDependencies = ["topTouchStart"],
      moveDependencies = ["topTouchMove"],
      endDependencies = ["topTouchCancel", "topTouchEnd"],
      touchBank = [],
      touchHistory = {
    touchBank: touchBank,
    numberActiveTouches: 0,
    indexOfSingleActiveTouch: -1,
    mostRecentTimeStamp: 0
  };

  function timestampForTouch(touch) {
    return touch.timeStamp || touch.timestamp;
  }

  function getTouchIdentifier(_ref) {
    _ref = _ref.identifier;
    if (null == _ref) throw ReactError(Error("Touch object is missing identifier."));
    return _ref;
  }

  function recordTouchStart(touch) {
    var identifier = getTouchIdentifier(touch),
        touchRecord = touchBank[identifier];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch)) : (touchRecord = {
      touchActive: true,
      startPageX: touch.pageX,
      startPageY: touch.pageY,
      startTimeStamp: timestampForTouch(touch),
      currentPageX: touch.pageX,
      currentPageY: touch.pageY,
      currentTimeStamp: timestampForTouch(touch),
      previousPageX: touch.pageX,
      previousPageY: touch.pageY,
      previousTimeStamp: timestampForTouch(touch)
    }, touchBank[identifier] = touchRecord);
    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
  }

  function recordTouchMove(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
  }

  function recordTouchEnd(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = false, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
  }

  var ResponderTouchHistoryStore = {
    recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
      if (isMoveish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove);else if (isStartish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches) for (topLevelType = 0; topLevelType < touchBank.length; topLevelType++) {
        if (nativeEvent = touchBank[topLevelType], null != nativeEvent && nativeEvent.touchActive) {
          touchHistory.indexOfSingleActiveTouch = topLevelType;
          break;
        }
      }
    },
    touchHistory: touchHistory
  };

  function accumulate(current, next) {
    if (null == next) throw ReactError(Error("accumulate(...): Accumulated items must not be null or undefined."));
    return null == current ? next : Array.isArray(current) ? current.concat(next) : Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  var responderInst = null,
      trackedTouchCount = 0;

  function changeResponder(nextResponderInst, blockHostResponder) {
    var oldResponderInst = responderInst;
    responderInst = nextResponderInst;
    if (null !== ResponderEventPlugin.GlobalResponderHandler) ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
  }

  var eventTypes = {
    startShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onStartShouldSetResponder",
        captured: "onStartShouldSetResponderCapture"
      },
      dependencies: startDependencies
    },
    scrollShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onScrollShouldSetResponder",
        captured: "onScrollShouldSetResponderCapture"
      },
      dependencies: ["topScroll"]
    },
    selectionChangeShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onSelectionChangeShouldSetResponder",
        captured: "onSelectionChangeShouldSetResponderCapture"
      },
      dependencies: ["topSelectionChange"]
    },
    moveShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onMoveShouldSetResponder",
        captured: "onMoveShouldSetResponderCapture"
      },
      dependencies: moveDependencies
    },
    responderStart: {
      registrationName: "onResponderStart",
      dependencies: startDependencies
    },
    responderMove: {
      registrationName: "onResponderMove",
      dependencies: moveDependencies
    },
    responderEnd: {
      registrationName: "onResponderEnd",
      dependencies: endDependencies
    },
    responderRelease: {
      registrationName: "onResponderRelease",
      dependencies: endDependencies
    },
    responderTerminationRequest: {
      registrationName: "onResponderTerminationRequest",
      dependencies: []
    },
    responderGrant: {
      registrationName: "onResponderGrant",
      dependencies: []
    },
    responderReject: {
      registrationName: "onResponderReject",
      dependencies: []
    },
    responderTerminate: {
      registrationName: "onResponderTerminate",
      dependencies: []
    }
  },
      ResponderEventPlugin = {
    _getResponder: function _getResponder() {
      return responderInst;
    },
    eventTypes: eventTypes,
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      if (isStartish(topLevelType)) trackedTouchCount += 1;else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (0 <= trackedTouchCount) --trackedTouchCount;else return undefined, null;
      ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);

      if (targetInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || 0 < trackedTouchCount && "topSelectionChange" === topLevelType || isStartish(topLevelType) || isMoveish(topLevelType))) {
        var JSCompiler_temp = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;
        if (responderInst) b: {
          var JSCompiler_temp$jscomp$0 = responderInst;

          for (var depthA = 0, tempA = JSCompiler_temp$jscomp$0; tempA; tempA = getParent(tempA)) {
            depthA++;
          }

          tempA = 0;

          for (var tempB = targetInst; tempB; tempB = getParent(tempB)) {
            tempA++;
          }

          for (; 0 < depthA - tempA;) {
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0), depthA--;
          }

          for (; 0 < tempA - depthA;) {
            targetInst = getParent(targetInst), tempA--;
          }

          for (; depthA--;) {
            if (JSCompiler_temp$jscomp$0 === targetInst || JSCompiler_temp$jscomp$0 === targetInst.alternate) break b;
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0);
            targetInst = getParent(targetInst);
          }

          JSCompiler_temp$jscomp$0 = null;
        } else JSCompiler_temp$jscomp$0 = targetInst;
        targetInst = JSCompiler_temp$jscomp$0 === responderInst;
        JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp, JSCompiler_temp$jscomp$0, nativeEvent, nativeEventTarget);
        JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory;
        targetInst ? forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingleSkipTarget) : forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingle);

        b: {
          JSCompiler_temp = JSCompiler_temp$jscomp$0._dispatchListeners;
          targetInst = JSCompiler_temp$jscomp$0._dispatchInstances;
          if (Array.isArray(JSCompiler_temp)) for (depthA = 0; depthA < JSCompiler_temp.length && !JSCompiler_temp$jscomp$0.isPropagationStopped(); depthA++) {
            if (JSCompiler_temp[depthA](JSCompiler_temp$jscomp$0, targetInst[depthA])) {
              JSCompiler_temp = targetInst[depthA];
              break b;
            }
          } else if (JSCompiler_temp && JSCompiler_temp(JSCompiler_temp$jscomp$0, targetInst)) {
            JSCompiler_temp = targetInst;
            break b;
          }
          JSCompiler_temp = null;
        }

        JSCompiler_temp$jscomp$0._dispatchInstances = null;
        JSCompiler_temp$jscomp$0._dispatchListeners = null;
        JSCompiler_temp$jscomp$0.isPersistent() || JSCompiler_temp$jscomp$0.constructor.release(JSCompiler_temp$jscomp$0);
        JSCompiler_temp && JSCompiler_temp !== responderInst ? (JSCompiler_temp$jscomp$0 = undefined, targetInst = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, JSCompiler_temp, nativeEvent, nativeEventTarget), targetInst.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(targetInst, accumulateDirectDispatchesSingle), depthA = true === executeDirectDispatch(targetInst), responderInst ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), tempB = !tempA._dispatchListeners || executeDirectDispatch(tempA), tempA.isPersistent() || tempA.constructor.release(tempA), tempB ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, [targetInst, tempA]), changeResponder(JSCompiler_temp, depthA)) : (JSCompiler_temp = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, JSCompiler_temp, nativeEvent, nativeEventTarget), JSCompiler_temp.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, JSCompiler_temp))) : (JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, targetInst), changeResponder(JSCompiler_temp, depthA)), JSCompiler_temp = JSCompiler_temp$jscomp$0) : JSCompiler_temp = null;
      } else JSCompiler_temp = null;

      JSCompiler_temp$jscomp$0 = responderInst && isStartish(topLevelType);
      targetInst = responderInst && isMoveish(topLevelType);
      depthA = responderInst && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType);
      if (JSCompiler_temp$jscomp$0 = JSCompiler_temp$jscomp$0 ? eventTypes.responderStart : targetInst ? eventTypes.responderMove : depthA ? eventTypes.responderEnd : null) JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp$jscomp$0, responderInst, nativeEvent, nativeEventTarget), JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, JSCompiler_temp$jscomp$0);
      JSCompiler_temp$jscomp$0 = responderInst && "topTouchCancel" === topLevelType;
      if (topLevelType = responderInst && !JSCompiler_temp$jscomp$0 && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType)) a: {
        if ((topLevelType = nativeEvent.touches) && 0 !== topLevelType.length) for (targetInst = 0; targetInst < topLevelType.length; targetInst++) {
          if (depthA = topLevelType[targetInst].target, null !== depthA && undefined !== depthA && 0 !== depthA) {
            tempA = getInstanceFromNode(depthA);

            b: {
              for (depthA = responderInst; tempA;) {
                if (depthA === tempA || depthA === tempA.alternate) {
                  depthA = true;
                  break b;
                }

                tempA = getParent(tempA);
              }

              depthA = false;
            }

            if (depthA) {
              topLevelType = false;
              break a;
            }
          }
        }
        topLevelType = true;
      }
      if (topLevelType = JSCompiler_temp$jscomp$0 ? eventTypes.responderTerminate : topLevelType ? eventTypes.responderRelease : null) nativeEvent = ResponderSyntheticEvent.getPooled(topLevelType, responderInst, nativeEvent, nativeEventTarget), nativeEvent.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(nativeEvent, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, nativeEvent), changeResponder(null);
      return JSCompiler_temp;
    },
    GlobalResponderHandler: null,
    injection: {
      injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
        ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
      }
    }
  },
      customBubblingEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customBubblingEventTypes,
      customDirectEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customDirectEventTypes;
  injection.injectEventPluginOrder(["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"]);
  injection.injectEventPluginsByName({
    ResponderEventPlugin: ResponderEventPlugin,
    ReactNativeBridgeEventPlugin: {
      eventTypes: {},
      extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        if (null == targetInst) return null;
        var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
            directDispatchConfig = customDirectEventTypes[topLevelType];
        if (!bubbleDispatchConfig && !directDispatchConfig) throw ReactError(Error('Unsupported top level event type "' + topLevelType + '" dispatched'));
        topLevelType = SyntheticEvent.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
        if (bubbleDispatchConfig) forEachAccumulated(topLevelType, accumulateTwoPhaseDispatchesSingle);else if (directDispatchConfig) forEachAccumulated(topLevelType, accumulateDirectDispatchesSingle);else return null;
        return topLevelType;
      }
    }
  });
  var instanceCache = new Map(),
      instanceProps = new Map();

  function getInstanceFromTag(tag) {
    return instanceCache.get(tag) || null;
  }

  var restoreTarget = null,
      restoreQueue = null;

  function restoreStateOfTarget(target) {
    if (getInstanceFromNode(target)) throw ReactError(Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue."));
  }

  function batchedUpdatesImpl(fn, bookkeeping) {
    return fn(bookkeeping);
  }

  function flushDiscreteUpdatesImpl() {}

  var isInsideEventHandler = false;

  function batchedUpdates(fn, bookkeeping) {
    if (isInsideEventHandler) return fn(bookkeeping);
    isInsideEventHandler = true;

    try {
      return batchedUpdatesImpl(fn, bookkeeping);
    } finally {
      if (isInsideEventHandler = false, null !== restoreTarget || null !== restoreQueue) if (flushDiscreteUpdatesImpl(), restoreTarget && (bookkeeping = restoreTarget, fn = restoreQueue, restoreQueue = restoreTarget = null, restoreStateOfTarget(bookkeeping), fn)) for (bookkeeping = 0; bookkeeping < fn.length; bookkeeping++) {
        restoreStateOfTarget(fn[bookkeeping]);
      }
    }
  }

  var EMPTY_NATIVE_EVENT = {};

  function _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {
    var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT,
        inst = getInstanceFromTag(rootNodeID);
    batchedUpdates(function () {
      var events = nativeEvent.target;

      for (var events$jscomp$0 = null, i = 0; i < plugins.length; i++) {
        var possiblePlugin = plugins[i];
        possiblePlugin && (possiblePlugin = possiblePlugin.extractEvents(topLevelType, inst, nativeEvent, events)) && (events$jscomp$0 = accumulateInto(events$jscomp$0, possiblePlugin));
      }

      events = events$jscomp$0;
      null !== events && (eventQueue = accumulateInto(eventQueue, events));
      events = eventQueue;
      eventQueue = null;

      if (events) {
        forEachAccumulated(events, executeDispatchesAndReleaseTopLevel);
        if (eventQueue) throw ReactError(Error("processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented."));
        if (hasRethrowError) throw events = rethrowError, hasRethrowError = false, rethrowError = null, events;
      }
    });
  }

  ReactNativePrivateInterface.RCTEventEmitter.register({
    receiveEvent: function receiveEvent(rootNodeID, topLevelType, nativeEventParam) {
      _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);
    },
    receiveTouches: function receiveTouches(eventTopLevelType, touches, changedIndices) {
      if ("topTouchEnd" === eventTopLevelType || "topTouchCancel" === eventTopLevelType) {
        var JSCompiler_temp = [];

        for (var i = 0; i < changedIndices.length; i++) {
          var index = changedIndices[i];
          JSCompiler_temp.push(touches[index]);
          touches[index] = null;
        }

        for (i = changedIndices = 0; i < touches.length; i++) {
          index = touches[i], null !== index && (touches[changedIndices++] = index);
        }

        touches.length = changedIndices;
      } else for (JSCompiler_temp = [], i = 0; i < changedIndices.length; i++) {
        JSCompiler_temp.push(touches[changedIndices[i]]);
      }

      for (changedIndices = 0; changedIndices < JSCompiler_temp.length; changedIndices++) {
        i = JSCompiler_temp[changedIndices];
        i.changedTouches = JSCompiler_temp;
        i.touches = touches;
        index = null;
        var target = i.target;
        null === target || undefined === target || 1 > target || (index = target);

        _receiveRootNodeIDEvent(index, eventTopLevelType, i);
      }
    }
  });

  getFiberCurrentPropsFromNode = function getFiberCurrentPropsFromNode(stateNode) {
    return instanceProps.get(stateNode._nativeTag) || null;
  };

  getInstanceFromNode = getInstanceFromTag;

  getNodeFromInstance = function getNodeFromInstance(inst) {
    var tag = inst.stateNode._nativeTag;
    undefined === tag && (tag = inst.stateNode.canonical._nativeTag);
    if (!tag) throw ReactError(Error("All native instances should have a tag."));
    return tag;
  };

  ResponderEventPlugin.injection.injectGlobalResponderHandler({
    onChange: function onChange(from, to, blockNativeResponder) {
      null !== to ? ReactNativePrivateInterface.UIManager.setJSResponder(to.stateNode._nativeTag, blockNativeResponder) : ReactNativePrivateInterface.UIManager.clearJSResponder();
    }
  });
  var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  ReactSharedInternals.hasOwnProperty("ReactCurrentDispatcher") || (ReactSharedInternals.ReactCurrentDispatcher = {
    current: null
  });
  ReactSharedInternals.hasOwnProperty("ReactCurrentBatchConfig") || (ReactSharedInternals.ReactCurrentBatchConfig = {
    suspense: null
  });
  var hasSymbol = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for"),
      REACT_ELEMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") : 60103,
      REACT_PORTAL_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") : 60106,
      REACT_FRAGMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fragment") : 60107,
      REACT_STRICT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.strict_mode") : 60108,
      REACT_PROFILER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.profiler") : 60114,
      REACT_PROVIDER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.provider") : 60109,
      REACT_CONTEXT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.context") : 60110,
      REACT_CONCURRENT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.concurrent_mode") : 60111,
      REACT_FORWARD_REF_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.forward_ref") : 60112,
      REACT_SUSPENSE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense") : 60113,
      REACT_SUSPENSE_LIST_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense_list") : 60120,
      REACT_MEMO_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.memo") : 60115,
      REACT_LAZY_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.lazy") : 60116;
  hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fundamental");
  hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.responder");
  var MAYBE_ITERATOR_SYMBOL = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator");

  function getIteratorFn(maybeIterable) {
    if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
    maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
    return "function" === typeof maybeIterable ? maybeIterable : null;
  }

  function getComponentName(type) {
    if (null == type) return null;
    if ("function" === typeof type) return type.displayName || type.name || null;
    if ("string" === typeof type) return type;

    switch (type) {
      case REACT_FRAGMENT_TYPE:
        return "Fragment";

      case REACT_PORTAL_TYPE:
        return "Portal";

      case REACT_PROFILER_TYPE:
        return "Profiler";

      case REACT_STRICT_MODE_TYPE:
        return "StrictMode";

      case REACT_SUSPENSE_TYPE:
        return "Suspense";

      case REACT_SUSPENSE_LIST_TYPE:
        return "SuspenseList";
    }

    if ("object" === typeof type) switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return "Context.Consumer";

      case REACT_PROVIDER_TYPE:
        return "Context.Provider";

      case REACT_FORWARD_REF_TYPE:
        var innerType = type.render;
        innerType = innerType.displayName || innerType.name || "";
        return type.displayName || ("" !== innerType ? "ForwardRef(" + innerType + ")" : "ForwardRef");

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_LAZY_TYPE:
        if (type = 1 === type._status ? type._result : null) return getComponentName(type);
    }
    return null;
  }

  function isFiberMountedImpl(fiber) {
    var node = fiber;
    if (fiber.alternate) for (; node.return;) {
      node = node.return;
    } else {
      if (0 !== (node.effectTag & 2)) return 1;

      for (; node.return;) {
        if (node = node.return, 0 !== (node.effectTag & 2)) return 1;
      }
    }
    return 3 === node.tag ? 2 : 3;
  }

  function assertIsMounted(fiber) {
    if (2 !== isFiberMountedImpl(fiber)) throw ReactError(Error("Unable to find node on an unmounted component."));
  }

  function findCurrentFiberUsingSlowPath(fiber) {
    var alternate = fiber.alternate;

    if (!alternate) {
      alternate = isFiberMountedImpl(fiber);
      if (3 === alternate) throw ReactError(Error("Unable to find node on an unmounted component."));
      return 1 === alternate ? null : fiber;
    }

    for (var a = fiber, b = alternate;;) {
      var parentA = a.return;
      if (null === parentA) break;
      var parentB = parentA.alternate;

      if (null === parentB) {
        b = parentA.return;

        if (null !== b) {
          a = b;
          continue;
        }

        break;
      }

      if (parentA.child === parentB.child) {
        for (parentB = parentA.child; parentB;) {
          if (parentB === a) return assertIsMounted(parentA), fiber;
          if (parentB === b) return assertIsMounted(parentA), alternate;
          parentB = parentB.sibling;
        }

        throw ReactError(Error("Unable to find node on an unmounted component."));
      }

      if (a.return !== b.return) a = parentA, b = parentB;else {
        for (var didFindChild = false, _child = parentA.child; _child;) {
          if (_child === a) {
            didFindChild = true;
            a = parentA;
            b = parentB;
            break;
          }

          if (_child === b) {
            didFindChild = true;
            b = parentA;
            a = parentB;
            break;
          }

          _child = _child.sibling;
        }

        if (!didFindChild) {
          for (_child = parentB.child; _child;) {
            if (_child === a) {
              didFindChild = true;
              a = parentB;
              b = parentA;
              break;
            }

            if (_child === b) {
              didFindChild = true;
              b = parentB;
              a = parentA;
              break;
            }

            _child = _child.sibling;
          }

          if (!didFindChild) throw ReactError(Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue."));
        }
      }
      if (a.alternate !== b) throw ReactError(Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue."));
    }

    if (3 !== a.tag) throw ReactError(Error("Unable to find node on an unmounted component."));
    return a.stateNode.current === a ? fiber : alternate;
  }

  function findCurrentHostFiber(parent) {
    parent = findCurrentFiberUsingSlowPath(parent);
    if (!parent) return null;

    for (var node = parent;;) {
      if (5 === node.tag || 6 === node.tag) return node;
      if (node.child) node.child.return = node, node = node.child;else {
        if (node === parent) break;

        for (; !node.sibling;) {
          if (!node.return || node.return === parent) return null;
          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    return null;
  }

  var emptyObject = {},
      removedKeys = null,
      removedKeyCount = 0;

  function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (Array.isArray(node)) for (var i = node.length; i-- && 0 < removedKeyCount;) {
      restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
    } else if (node && 0 < removedKeyCount) for (i in removedKeys) {
      if (removedKeys[i]) {
        var nextProp = node[i];

        if (undefined !== nextProp) {
          var attributeConfig = validAttributes[i];

          if (attributeConfig) {
            "function" === typeof nextProp && (nextProp = true);
            "undefined" === typeof nextProp && (nextProp = null);
            if ("object" !== typeof attributeConfig) updatePayload[i] = nextProp;else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) nextProp = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[i] = nextProp;
            removedKeys[i] = false;
            removedKeyCount--;
          }
        }
      }
    }
  }

  function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    if (!updatePayload && prevProp === nextProp) return updatePayload;
    if (!prevProp || !nextProp) return nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload;
    if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) return diffProperties(updatePayload, prevProp, nextProp, validAttributes);

    if (Array.isArray(prevProp) && Array.isArray(nextProp)) {
      var minLength = prevProp.length < nextProp.length ? prevProp.length : nextProp.length,
          i;

      for (i = 0; i < minLength; i++) {
        updatePayload = diffNestedProperty(updatePayload, prevProp[i], nextProp[i], validAttributes);
      }

      for (; i < prevProp.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
      }

      for (; i < nextProp.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
      }

      return updatePayload;
    }

    return Array.isArray(prevProp) ? diffProperties(updatePayload, ReactNativePrivateInterface.flattenStyle(prevProp), nextProp, validAttributes) : diffProperties(updatePayload, prevProp, ReactNativePrivateInterface.flattenStyle(nextProp), validAttributes);
  }

  function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) return updatePayload;
    if (!Array.isArray(nextProp)) return diffProperties(updatePayload, emptyObject, nextProp, validAttributes);

    for (var i = 0; i < nextProp.length; i++) {
      updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    }

    return updatePayload;
  }

  function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) return updatePayload;
    if (!Array.isArray(prevProp)) return diffProperties(updatePayload, prevProp, emptyObject, validAttributes);

    for (var i = 0; i < prevProp.length; i++) {
      updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    }

    return updatePayload;
  }

  function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig, propKey;

    for (propKey in nextProps) {
      if (attributeConfig = validAttributes[propKey]) {
        var prevProp = prevProps[propKey];
        var nextProp = nextProps[propKey];
        "function" === typeof nextProp && (nextProp = true, "function" === typeof prevProp && (prevProp = true));
        "undefined" === typeof nextProp && (nextProp = null, "undefined" === typeof prevProp && (prevProp = null));
        removedKeys && (removedKeys[propKey] = false);
        if (updatePayload && undefined !== updatePayload[propKey]) {
          if ("object" !== typeof attributeConfig) updatePayload[propKey] = nextProp;else {
            if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[propKey] = attributeConfig;
          }
        } else if (prevProp !== nextProp) if ("object" !== typeof attributeConfig) ("object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp)) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp);else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) {
          if (undefined === prevProp || ("function" === typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : "object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp))) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = attributeConfig;
        } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), 0 < removedKeyCount && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
      }
    }

    for (var _propKey in prevProps) {
      undefined === nextProps[_propKey] && (!(attributeConfig = validAttributes[_propKey]) || updatePayload && undefined !== updatePayload[_propKey] || (prevProp = prevProps[_propKey], undefined !== prevProp && ("object" !== typeof attributeConfig || "function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[_propKey] = null, removedKeys || (removedKeys = {}), removedKeys[_propKey] || (removedKeys[_propKey] = true, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig))));
    }

    return updatePayload;
  }

  function mountSafeCallback_NOT_REALLY_SAFE(context, callback) {
    return function () {
      if (callback && ("boolean" !== typeof context.__isMounted || context.__isMounted)) return callback.apply(context, arguments);
    };
  }

  var ReactNativeFiberHostComponent = function () {
    function ReactNativeFiberHostComponent(tag, viewConfig) {
      if (!(this instanceof ReactNativeFiberHostComponent)) throw new TypeError("Cannot call a class as a function");
      this._nativeTag = tag;
      this._children = [];
      this.viewConfig = viewConfig;
    }

    ReactNativeFiberHostComponent.prototype.blur = function () {
      ReactNativePrivateInterface.TextInputState.blurTextInput(this._nativeTag);
    };

    ReactNativeFiberHostComponent.prototype.focus = function () {
      ReactNativePrivateInterface.TextInputState.focusTextInput(this._nativeTag);
    };

    ReactNativeFiberHostComponent.prototype.measure = function (callback) {
      ReactNativePrivateInterface.UIManager.measure(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactNativeFiberHostComponent.prototype.measureInWindow = function (callback) {
      ReactNativePrivateInterface.UIManager.measureInWindow(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactNativeFiberHostComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
      var relativeNode = undefined;
      "number" === typeof relativeToNativeNode ? relativeNode = relativeToNativeNode : relativeToNativeNode._nativeTag ? relativeNode = relativeToNativeNode._nativeTag : relativeToNativeNode.canonical && relativeToNativeNode.canonical._nativeTag && (relativeNode = relativeToNativeNode.canonical._nativeTag);
      null != relativeNode && ReactNativePrivateInterface.UIManager.measureLayout(this._nativeTag, relativeNode, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));
    };

    ReactNativeFiberHostComponent.prototype.setNativeProps = function (nativeProps) {
      nativeProps = diffProperties(null, emptyObject, nativeProps, this.viewConfig.validAttributes);
      null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(this._nativeTag, this.viewConfig.uiViewClassName, nativeProps);
    };

    return ReactNativeFiberHostComponent;
  }();

  function shim$1() {
    throw ReactError(Error("The current renderer does not support hydration. This error is likely caused by a bug in React. Please file an issue."));
  }

  var getViewConfigForType = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get,
      UPDATE_SIGNAL = {},
      nextReactTag = 3;

  function allocateTag() {
    var tag = nextReactTag;
    1 === tag % 10 && (tag += 2);
    nextReactTag = tag + 2;
    return tag;
  }

  function recursivelyUncacheFiberNode(node) {
    if ("number" === typeof node) instanceCache.delete(node), instanceProps.delete(node);else {
      var tag = node._nativeTag;
      instanceCache.delete(tag);
      instanceProps.delete(tag);

      node._children.forEach(recursivelyUncacheFiberNode);
    }
  }

  function finalizeInitialChildren(parentInstance) {
    if (0 === parentInstance._children.length) return false;

    var nativeTags = parentInstance._children.map(function (child) {
      return "number" === typeof child ? child : child._nativeTag;
    });

    ReactNativePrivateInterface.UIManager.setChildren(parentInstance._nativeTag, nativeTags);
    return false;
  }

  var scheduleTimeout = setTimeout,
      cancelTimeout = clearTimeout,
      BEFORE_SLASH_RE = /^(.*)[\\\/]/;

  function getStackByFiberInDevAndProd(workInProgress) {
    var info = "";

    do {
      a: switch (workInProgress.tag) {
        case 3:
        case 4:
        case 6:
        case 7:
        case 10:
        case 9:
          var JSCompiler_inline_result = "";
          break a;

        default:
          var owner = workInProgress._debugOwner,
              source = workInProgress._debugSource,
              name = getComponentName(workInProgress.type);
          JSCompiler_inline_result = null;
          owner && (JSCompiler_inline_result = getComponentName(owner.type));
          owner = name;
          name = "";
          source ? name = " (at " + source.fileName.replace(BEFORE_SLASH_RE, "") + ":" + source.lineNumber + ")" : JSCompiler_inline_result && (name = " (created by " + JSCompiler_inline_result + ")");
          JSCompiler_inline_result = "\n    in " + (owner || "Unknown") + name;
      }

      info += JSCompiler_inline_result;
      workInProgress = workInProgress.return;
    } while (workInProgress);

    return info;
  }

  new Set();
  var valueStack = [],
      index = -1;

  function pop(cursor) {
    0 > index || (cursor.current = valueStack[index], valueStack[index] = null, index--);
  }

  function push(cursor, value) {
    index++;
    valueStack[index] = cursor.current;
    cursor.current = value;
  }

  var emptyContextObject = {},
      contextStackCursor = {
    current: emptyContextObject
  },
      didPerformWorkStackCursor = {
    current: false
  },
      previousContext = emptyContextObject;

  function getMaskedContext(workInProgress, unmaskedContext) {
    var contextTypes = workInProgress.type.contextTypes;
    if (!contextTypes) return emptyContextObject;
    var instance = workInProgress.stateNode;
    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
    var context = {},
        key;

    for (key in contextTypes) {
      context[key] = unmaskedContext[key];
    }

    instance && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return context;
  }

  function isContextProvider(type) {
    type = type.childContextTypes;
    return null !== type && undefined !== type;
  }

  function popContext(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function popTopLevelContextObject(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function pushTopLevelContextObject(fiber, context, didChange) {
    if (contextStackCursor.current !== emptyContextObject) throw ReactError(Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue."));
    push(contextStackCursor, context, fiber);
    push(didPerformWorkStackCursor, didChange, fiber);
  }

  function processChildContext(fiber, type, parentContext) {
    var instance = fiber.stateNode;
    fiber = type.childContextTypes;
    if ("function" !== typeof instance.getChildContext) return parentContext;
    instance = instance.getChildContext();

    for (var contextKey in instance) {
      if (!(contextKey in fiber)) throw ReactError(Error((getComponentName(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.'));
    }

    return _extends({}, parentContext, instance);
  }

  function pushContextProvider(workInProgress) {
    var instance = workInProgress.stateNode;
    instance = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
    previousContext = contextStackCursor.current;
    push(contextStackCursor, instance, workInProgress);
    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
    return true;
  }

  function invalidateContextProvider(workInProgress, type, didChange) {
    var instance = workInProgress.stateNode;
    if (!instance) throw ReactError(Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue."));
    didChange ? (type = processChildContext(workInProgress, type, previousContext), instance.__reactInternalMemoizedMergedChildContext = type, pop(didPerformWorkStackCursor, workInProgress), pop(contextStackCursor, workInProgress), push(contextStackCursor, type, workInProgress)) : pop(didPerformWorkStackCursor, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  }

  var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority,
      Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback,
      Scheduler_cancelCallback = Scheduler.unstable_cancelCallback,
      Scheduler_shouldYield = Scheduler.unstable_shouldYield,
      Scheduler_requestPaint = Scheduler.unstable_requestPaint,
      Scheduler_now = Scheduler.unstable_now,
      Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,
      Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority,
      Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,
      Scheduler_NormalPriority = Scheduler.unstable_NormalPriority,
      Scheduler_LowPriority = Scheduler.unstable_LowPriority,
      Scheduler_IdlePriority = Scheduler.unstable_IdlePriority,
      fakeCallbackNode = {},
      requestPaint = undefined !== Scheduler_requestPaint ? Scheduler_requestPaint : function () {},
      syncQueue = null,
      immediateQueueCallbackNode = null,
      isFlushingSyncQueue = false,
      initialTimeMs = Scheduler_now(),
      now = 1e4 > initialTimeMs ? Scheduler_now : function () {
    return Scheduler_now() - initialTimeMs;
  };

  function getCurrentPriorityLevel() {
    switch (Scheduler_getCurrentPriorityLevel()) {
      case Scheduler_ImmediatePriority:
        return 99;

      case Scheduler_UserBlockingPriority:
        return 98;

      case Scheduler_NormalPriority:
        return 97;

      case Scheduler_LowPriority:
        return 96;

      case Scheduler_IdlePriority:
        return 95;

      default:
        throw ReactError(Error("Unknown priority level."));
    }
  }

  function reactPriorityToSchedulerPriority(reactPriorityLevel) {
    switch (reactPriorityLevel) {
      case 99:
        return Scheduler_ImmediatePriority;

      case 98:
        return Scheduler_UserBlockingPriority;

      case 97:
        return Scheduler_NormalPriority;

      case 96:
        return Scheduler_LowPriority;

      case 95:
        return Scheduler_IdlePriority;

      default:
        throw ReactError(Error("Unknown priority level."));
    }
  }

  function runWithPriority(reactPriorityLevel, fn) {
    reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
    return Scheduler_runWithPriority(reactPriorityLevel, fn);
  }

  function scheduleCallback(reactPriorityLevel, callback, options) {
    reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
    return Scheduler_scheduleCallback(reactPriorityLevel, callback, options);
  }

  function scheduleSyncCallback(callback) {
    null === syncQueue ? (syncQueue = [callback], immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl)) : syncQueue.push(callback);
    return fakeCallbackNode;
  }

  function flushSyncCallbackQueue() {
    null !== immediateQueueCallbackNode && Scheduler_cancelCallback(immediateQueueCallbackNode);
    flushSyncCallbackQueueImpl();
  }

  function flushSyncCallbackQueueImpl() {
    if (!isFlushingSyncQueue && null !== syncQueue) {
      isFlushingSyncQueue = true;
      var i = 0;

      try {
        var queue = syncQueue;
        runWithPriority(99, function () {
          for (; i < queue.length; i++) {
            var callback = queue[i];

            do {
              callback = callback(true);
            } while (null !== callback);
          }
        });
        syncQueue = null;
      } catch (error) {
        throw null !== syncQueue && (syncQueue = syncQueue.slice(i + 1)), Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue), error;
      } finally {
        isFlushingSyncQueue = false;
      }
    }
  }

  function inferPriorityFromExpirationTime(currentTime, expirationTime) {
    if (1073741823 === expirationTime) return 99;
    if (1 === expirationTime) return 95;
    currentTime = 10 * (1073741821 - expirationTime) - 10 * (1073741821 - currentTime);
    return 0 >= currentTime ? 99 : 250 >= currentTime ? 98 : 5250 >= currentTime ? 97 : 95;
  }

  function is(x, y) {
    return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
  }

  var hasOwnProperty = Object.prototype.hasOwnProperty;

  function shallowEqual(objA, objB) {
    if (is(objA, objB)) return true;
    if ("object" !== typeof objA || null === objA || "object" !== typeof objB || null === objB) return false;
    var keysA = Object.keys(objA),
        keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) return false;

    for (keysB = 0; keysB < keysA.length; keysB++) {
      if (!hasOwnProperty.call(objB, keysA[keysB]) || !is(objA[keysA[keysB]], objB[keysA[keysB]])) return false;
    }

    return true;
  }

  function resolveDefaultProps(Component, baseProps) {
    if (Component && Component.defaultProps) {
      baseProps = _extends({}, baseProps);
      Component = Component.defaultProps;

      for (var propName in Component) {
        undefined === baseProps[propName] && (baseProps[propName] = Component[propName]);
      }
    }

    return baseProps;
  }

  function readLazyComponentType(lazyComponent) {
    var result = lazyComponent._result;

    switch (lazyComponent._status) {
      case 1:
        return result;

      case 2:
        throw result;

      case 0:
        throw result;

      default:
        lazyComponent._status = 0;
        result = lazyComponent._ctor;
        result = result();
        result.then(function (moduleObject) {
          0 === lazyComponent._status && (moduleObject = moduleObject.default, lazyComponent._status = 1, lazyComponent._result = moduleObject);
        }, function (error) {
          0 === lazyComponent._status && (lazyComponent._status = 2, lazyComponent._result = error);
        });

        switch (lazyComponent._status) {
          case 1:
            return lazyComponent._result;

          case 2:
            throw lazyComponent._result;
        }

        lazyComponent._result = result;
        throw result;
    }
  }

  var valueCursor = {
    current: null
  },
      currentlyRenderingFiber = null,
      lastContextDependency = null,
      lastContextWithAllBitsObserved = null;

  function resetContextDependencies() {
    lastContextWithAllBitsObserved = lastContextDependency = currentlyRenderingFiber = null;
  }

  function pushProvider(providerFiber, nextValue) {
    var context = providerFiber.type._context;
    push(valueCursor, context._currentValue, providerFiber);
    context._currentValue = nextValue;
  }

  function popProvider(providerFiber) {
    var currentValue = valueCursor.current;
    pop(valueCursor, providerFiber);
    providerFiber.type._context._currentValue = currentValue;
  }

  function scheduleWorkOnParentPath(parent, renderExpirationTime) {
    for (; null !== parent;) {
      var alternate = parent.alternate;
      if (parent.childExpirationTime < renderExpirationTime) parent.childExpirationTime = renderExpirationTime, null !== alternate && alternate.childExpirationTime < renderExpirationTime && (alternate.childExpirationTime = renderExpirationTime);else if (null !== alternate && alternate.childExpirationTime < renderExpirationTime) alternate.childExpirationTime = renderExpirationTime;else break;
      parent = parent.return;
    }
  }

  function prepareToReadContext(workInProgress, renderExpirationTime) {
    currentlyRenderingFiber = workInProgress;
    lastContextWithAllBitsObserved = lastContextDependency = null;
    workInProgress = workInProgress.dependencies;
    null !== workInProgress && null !== workInProgress.firstContext && (workInProgress.expirationTime >= renderExpirationTime && (didReceiveUpdate = true), workInProgress.firstContext = null);
  }

  function readContext(context, observedBits) {
    if (lastContextWithAllBitsObserved !== context && false !== observedBits && 0 !== observedBits) {
      if ("number" !== typeof observedBits || 1073741823 === observedBits) lastContextWithAllBitsObserved = context, observedBits = 1073741823;
      observedBits = {
        context: context,
        observedBits: observedBits,
        next: null
      };

      if (null === lastContextDependency) {
        if (null === currentlyRenderingFiber) throw ReactError(Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."));
        lastContextDependency = observedBits;
        currentlyRenderingFiber.dependencies = {
          expirationTime: 0,
          firstContext: observedBits,
          responders: null
        };
      } else lastContextDependency = lastContextDependency.next = observedBits;
    }

    return context._currentValue;
  }

  var hasForceUpdate = false;

  function createUpdateQueue(baseState) {
    return {
      baseState: baseState,
      firstUpdate: null,
      lastUpdate: null,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function cloneUpdateQueue(currentQueue) {
    return {
      baseState: currentQueue.baseState,
      firstUpdate: currentQueue.firstUpdate,
      lastUpdate: currentQueue.lastUpdate,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function createUpdate(expirationTime, suspenseConfig) {
    return {
      expirationTime: expirationTime,
      suspenseConfig: suspenseConfig,
      tag: 0,
      payload: null,
      callback: null,
      next: null,
      nextEffect: null
    };
  }

  function appendUpdateToQueue(queue, update) {
    null === queue.lastUpdate ? queue.firstUpdate = queue.lastUpdate = update : (queue.lastUpdate.next = update, queue.lastUpdate = update);
  }

  function enqueueUpdate(fiber, update) {
    var alternate = fiber.alternate;

    if (null === alternate) {
      var queue1 = fiber.updateQueue;
      var queue2 = null;
      null === queue1 && (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState));
    } else queue1 = fiber.updateQueue, queue2 = alternate.updateQueue, null === queue1 ? null === queue2 ? (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState), queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState)) : queue1 = fiber.updateQueue = cloneUpdateQueue(queue2) : null === queue2 && (queue2 = alternate.updateQueue = cloneUpdateQueue(queue1));

    null === queue2 || queue1 === queue2 ? appendUpdateToQueue(queue1, update) : null === queue1.lastUpdate || null === queue2.lastUpdate ? (appendUpdateToQueue(queue1, update), appendUpdateToQueue(queue2, update)) : (appendUpdateToQueue(queue1, update), queue2.lastUpdate = update);
  }

  function enqueueCapturedUpdate(workInProgress, update) {
    var workInProgressQueue = workInProgress.updateQueue;
    workInProgressQueue = null === workInProgressQueue ? workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState) : ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
    null === workInProgressQueue.lastCapturedUpdate ? workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update : (workInProgressQueue.lastCapturedUpdate.next = update, workInProgressQueue.lastCapturedUpdate = update);
  }

  function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
    var current = workInProgress.alternate;
    null !== current && queue === current.updateQueue && (queue = workInProgress.updateQueue = cloneUpdateQueue(queue));
    return queue;
  }

  function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
    switch (update.tag) {
      case 1:
        return workInProgress = update.payload, "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;

      case 3:
        workInProgress.effectTag = workInProgress.effectTag & -2049 | 64;

      case 0:
        workInProgress = update.payload;
        nextProps = "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;
        if (null === nextProps || undefined === nextProps) break;
        return _extends({}, prevState, nextProps);

      case 2:
        hasForceUpdate = true;
    }

    return prevState;
  }

  function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
    hasForceUpdate = false;
    queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

    for (var newBaseState = queue.baseState, newFirstUpdate = null, newExpirationTime = 0, update = queue.firstUpdate, resultState = newBaseState; null !== update;) {
      var updateExpirationTime = update.expirationTime;
      updateExpirationTime < renderExpirationTime ? (null === newFirstUpdate && (newFirstUpdate = update, newBaseState = resultState), newExpirationTime < updateExpirationTime && (newExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, update.suspenseConfig), resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastEffect ? queue.firstEffect = queue.lastEffect = update : (queue.lastEffect.nextEffect = update, queue.lastEffect = update)));
      update = update.next;
    }

    updateExpirationTime = null;

    for (update = queue.firstCapturedUpdate; null !== update;) {
      var _updateExpirationTime = update.expirationTime;
      _updateExpirationTime < renderExpirationTime ? (null === updateExpirationTime && (updateExpirationTime = update, null === newFirstUpdate && (newBaseState = resultState)), newExpirationTime < _updateExpirationTime && (newExpirationTime = _updateExpirationTime)) : (resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastCapturedEffect ? queue.firstCapturedEffect = queue.lastCapturedEffect = update : (queue.lastCapturedEffect.nextEffect = update, queue.lastCapturedEffect = update)));
      update = update.next;
    }

    null === newFirstUpdate && (queue.lastUpdate = null);
    null === updateExpirationTime ? queue.lastCapturedUpdate = null : workInProgress.effectTag |= 32;
    null === newFirstUpdate && null === updateExpirationTime && (newBaseState = resultState);
    queue.baseState = newBaseState;
    queue.firstUpdate = newFirstUpdate;
    queue.firstCapturedUpdate = updateExpirationTime;
    workInProgress.expirationTime = newExpirationTime;
    workInProgress.memoizedState = resultState;
  }

  function commitUpdateQueue(finishedWork, finishedQueue, instance) {
    null !== finishedQueue.firstCapturedUpdate && (null !== finishedQueue.lastUpdate && (finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate, finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate), finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null);
    commitUpdateEffects(finishedQueue.firstEffect, instance);
    finishedQueue.firstEffect = finishedQueue.lastEffect = null;
    commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
    finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
  }

  function commitUpdateEffects(effect, instance) {
    for (; null !== effect;) {
      var _callback3 = effect.callback;

      if (null !== _callback3) {
        effect.callback = null;
        var context = instance;
        if ("function" !== typeof _callback3) throw ReactError(Error("Invalid argument passed as callback. Expected a function. Instead received: " + _callback3));

        _callback3.call(context);
      }

      effect = effect.nextEffect;
    }
  }

  var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig,
      emptyRefsObject = new React.Component().refs;

  function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
    ctor = workInProgress.memoizedState;
    getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);
    getDerivedStateFromProps = null === getDerivedStateFromProps || undefined === getDerivedStateFromProps ? ctor : _extends({}, ctor, getDerivedStateFromProps);
    workInProgress.memoizedState = getDerivedStateFromProps;
    nextProps = workInProgress.updateQueue;
    null !== nextProps && 0 === workInProgress.expirationTime && (nextProps.baseState = getDerivedStateFromProps);
  }

  var classComponentUpdater = {
    isMounted: function isMounted(component) {
      return (component = component._reactInternalFiber) ? 2 === isFiberMountedImpl(component) : false;
    },
    enqueueSetState: function enqueueSetState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.payload = payload;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    },
    enqueueReplaceState: function enqueueReplaceState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.tag = 1;
      suspenseConfig.payload = payload;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    },
    enqueueForceUpdate: function enqueueForceUpdate(inst, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.tag = 2;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    }
  };

  function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
    workInProgress = workInProgress.stateNode;
    return "function" === typeof workInProgress.shouldComponentUpdate ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext) : ctor.prototype && ctor.prototype.isPureReactComponent ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState) : true;
  }

  function constructClassInstance(workInProgress, ctor, props) {
    var isLegacyContextConsumer = false,
        unmaskedContext = emptyContextObject;
    var context = ctor.contextType;
    "object" === typeof context && null !== context ? context = readContext(context) : (unmaskedContext = isContextProvider(ctor) ? previousContext : contextStackCursor.current, isLegacyContextConsumer = ctor.contextTypes, context = (isLegacyContextConsumer = null !== isLegacyContextConsumer && undefined !== isLegacyContextConsumer) ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject);
    ctor = new ctor(props, context);
    workInProgress.memoizedState = null !== ctor.state && undefined !== ctor.state ? ctor.state : null;
    ctor.updater = classComponentUpdater;
    workInProgress.stateNode = ctor;
    ctor._reactInternalFiber = workInProgress;
    isLegacyContextConsumer && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return ctor;
  }

  function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
    workInProgress = instance.state;
    "function" === typeof instance.componentWillReceiveProps && instance.componentWillReceiveProps(newProps, nextContext);
    "function" === typeof instance.UNSAFE_componentWillReceiveProps && instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
    instance.state !== workInProgress && classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }

  function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
    var instance = workInProgress.stateNode;
    instance.props = newProps;
    instance.state = workInProgress.memoizedState;
    instance.refs = emptyRefsObject;
    var contextType = ctor.contextType;
    "object" === typeof contextType && null !== contextType ? instance.context = readContext(contextType) : (contextType = isContextProvider(ctor) ? previousContext : contextStackCursor.current, instance.context = getMaskedContext(workInProgress, contextType));
    contextType = workInProgress.updateQueue;
    null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState);
    contextType = ctor.getDerivedStateFromProps;
    "function" === typeof contextType && (applyDerivedStateFromProps(workInProgress, ctor, contextType, newProps), instance.state = workInProgress.memoizedState);
    "function" === typeof ctor.getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || (ctor = instance.state, "function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount(), ctor !== instance.state && classComponentUpdater.enqueueReplaceState(instance, instance.state, null), contextType = workInProgress.updateQueue, null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState));
    "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4);
  }

  var isArray = Array.isArray;

  function coerceRef(returnFiber, current$$1, element) {
    returnFiber = element.ref;

    if (null !== returnFiber && "function" !== typeof returnFiber && "object" !== typeof returnFiber) {
      if (element._owner) {
        element = element._owner;
        var inst = undefined;

        if (element) {
          if (1 !== element.tag) throw ReactError(Error("Function components cannot have refs. Did you mean to use React.forwardRef()?"));
          inst = element.stateNode;
        }

        if (!inst) throw ReactError(Error("Missing owner for string ref " + returnFiber + ". This error is likely caused by a bug in React. Please file an issue."));
        var stringRef = "" + returnFiber;
        if (null !== current$$1 && null !== current$$1.ref && "function" === typeof current$$1.ref && current$$1.ref._stringRef === stringRef) return current$$1.ref;

        current$$1 = function current$$1(value) {
          var refs = inst.refs;
          refs === emptyRefsObject && (refs = inst.refs = {});
          null === value ? delete refs[stringRef] : refs[stringRef] = value;
        };

        current$$1._stringRef = stringRef;
        return current$$1;
      }

      if ("string" !== typeof returnFiber) throw ReactError(Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null."));
      if (!element._owner) throw ReactError(Error("Element ref was specified as a string (" + returnFiber + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information."));
    }

    return returnFiber;
  }

  function throwOnInvalidObjectType(returnFiber, newChild) {
    if ("textarea" !== returnFiber.type) throw ReactError(Error("Objects are not valid as a React child (found: " + ("[object Object]" === Object.prototype.toString.call(newChild) ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild) + ")."));
  }

  function ChildReconciler(shouldTrackSideEffects) {
    function deleteChild(returnFiber, childToDelete) {
      if (shouldTrackSideEffects) {
        var last = returnFiber.lastEffect;
        null !== last ? (last.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
        childToDelete.nextEffect = null;
        childToDelete.effectTag = 8;
      }
    }

    function deleteRemainingChildren(returnFiber, currentFirstChild) {
      if (!shouldTrackSideEffects) return null;

      for (; null !== currentFirstChild;) {
        deleteChild(returnFiber, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return null;
    }

    function mapRemainingChildren(returnFiber, currentFirstChild) {
      for (returnFiber = new Map(); null !== currentFirstChild;) {
        null !== currentFirstChild.key ? returnFiber.set(currentFirstChild.key, currentFirstChild) : returnFiber.set(currentFirstChild.index, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return returnFiber;
    }

    function useFiber(fiber, pendingProps, expirationTime) {
      fiber = createWorkInProgress(fiber, pendingProps, expirationTime);
      fiber.index = 0;
      fiber.sibling = null;
      return fiber;
    }

    function placeChild(newFiber, lastPlacedIndex, newIndex) {
      newFiber.index = newIndex;
      if (!shouldTrackSideEffects) return lastPlacedIndex;
      newIndex = newFiber.alternate;
      if (null !== newIndex) return newIndex = newIndex.index, newIndex < lastPlacedIndex ? (newFiber.effectTag = 2, lastPlacedIndex) : newIndex;
      newFiber.effectTag = 2;
      return lastPlacedIndex;
    }

    function placeSingleChild(newFiber) {
      shouldTrackSideEffects && null === newFiber.alternate && (newFiber.effectTag = 2);
      return newFiber;
    }

    function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
      if (null === current$$1 || 6 !== current$$1.tag) return current$$1 = createFiberFromText(textContent, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, textContent, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateElement(returnFiber, current$$1, element, expirationTime) {
      if (null !== current$$1 && current$$1.elementType === element.type) return expirationTime = useFiber(current$$1, element.props, expirationTime), expirationTime.ref = coerceRef(returnFiber, current$$1, element), expirationTime.return = returnFiber, expirationTime;
      expirationTime = createFiberFromTypeAndProps(element.type, element.key, element.props, null, returnFiber.mode, expirationTime);
      expirationTime.ref = coerceRef(returnFiber, current$$1, element);
      expirationTime.return = returnFiber;
      return expirationTime;
    }

    function updatePortal(returnFiber, current$$1, portal, expirationTime) {
      if (null === current$$1 || 4 !== current$$1.tag || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) return current$$1 = createFiberFromPortal(portal, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, portal.children || [], expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
      if (null === current$$1 || 7 !== current$$1.tag) return current$$1 = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, fragment, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function createChild(returnFiber, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = createFiberFromText("" + newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, null, newChild), expirationTime.return = returnFiber, expirationTime;

          case REACT_PORTAL_TYPE:
            return newChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return newChild = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null), newChild.return = returnFiber, newChild;
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
      var key = null !== oldFiber ? oldFiber.key : null;
      if ("string" === typeof newChild || "number" === typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return newChild.key === key ? newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key) : updateElement(returnFiber, oldFiber, newChild, expirationTime) : null;

          case REACT_PORTAL_TYPE:
            return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, expirationTime) : null;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return null !== key ? null : updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return existingChildren = existingChildren.get(newIdx) || null, updateTextNode(returnFiber, existingChildren, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, existingChildren, newChild.props.children, expirationTime, newChild.key) : updateElement(returnFiber, existingChildren, newChild, expirationTime);

          case REACT_PORTAL_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, updatePortal(returnFiber, existingChildren, newChild, expirationTime);
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return existingChildren = existingChildren.get(newIdx) || null, updateFragment(returnFiber, existingChildren, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
      for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;

      if (null === oldFiber) {
        for (; newIdx < newChildren.length; newIdx++) {
          oldFiber = createChild(returnFiber, newChildren[newIdx], expirationTime), null !== oldFiber && (currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber);
        }

        return resultingFirstChild;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); newIdx < newChildren.length; newIdx++) {
        nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, newChildren[newIdx], expirationTime), null !== nextOldFiber && (shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return resultingFirstChild;
    }

    function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
      var iteratorFn = getIteratorFn(newChildrenIterable);
      if ("function" !== typeof iteratorFn) throw ReactError(Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue."));
      newChildrenIterable = iteratorFn.call(newChildrenIterable);
      if (null == newChildrenIterable) throw ReactError(Error("An iterable object provided no iterator."));

      for (var previousNewFiber = iteratorFn = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null, step = newChildrenIterable.next(); null !== oldFiber && !step.done; newIdx++, step = newChildrenIterable.next()) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? iteratorFn = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), iteratorFn;

      if (null === oldFiber) {
        for (; !step.done; newIdx++, step = newChildrenIterable.next()) {
          step = createChild(returnFiber, step.value, expirationTime), null !== step && (currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
        }

        return iteratorFn;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); !step.done; newIdx++, step = newChildrenIterable.next()) {
        step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, expirationTime), null !== step && (shouldTrackSideEffects && null !== step.alternate && oldFiber.delete(null === step.key ? newIdx : step.key), currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return iteratorFn;
    }

    return function (returnFiber, currentFirstChild, newChild, expirationTime) {
      var isUnkeyedTopLevelFragment = "object" === typeof newChild && null !== newChild && newChild.type === REACT_FRAGMENT_TYPE && null === newChild.key;
      isUnkeyedTopLevelFragment && (newChild = newChild.props.children);
      var isObject = "object" === typeof newChild && null !== newChild;
      if (isObject) switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          a: {
            isObject = newChild.key;

            for (isUnkeyedTopLevelFragment = currentFirstChild; null !== isUnkeyedTopLevelFragment;) {
              if (isUnkeyedTopLevelFragment.key === isObject) {
                if (7 === isUnkeyedTopLevelFragment.tag ? newChild.type === REACT_FRAGMENT_TYPE : isUnkeyedTopLevelFragment.elementType === newChild.type) {
                  deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment.sibling);
                  currentFirstChild = useFiber(isUnkeyedTopLevelFragment, newChild.type === REACT_FRAGMENT_TYPE ? newChild.props.children : newChild.props, expirationTime);
                  currentFirstChild.ref = coerceRef(returnFiber, isUnkeyedTopLevelFragment, newChild);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                }

                deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment);
                break;
              } else deleteChild(returnFiber, isUnkeyedTopLevelFragment);

              isUnkeyedTopLevelFragment = isUnkeyedTopLevelFragment.sibling;
            }

            newChild.type === REACT_FRAGMENT_TYPE ? (currentFirstChild = createFiberFromFragment(newChild.props.children, returnFiber.mode, expirationTime, newChild.key), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, currentFirstChild, newChild), expirationTime.return = returnFiber, returnFiber = expirationTime);
          }

          return placeSingleChild(returnFiber);

        case REACT_PORTAL_TYPE:
          a: {
            for (isUnkeyedTopLevelFragment = newChild.key; null !== currentFirstChild;) {
              if (currentFirstChild.key === isUnkeyedTopLevelFragment) {
                if (4 === currentFirstChild.tag && currentFirstChild.stateNode.containerInfo === newChild.containerInfo && currentFirstChild.stateNode.implementation === newChild.implementation) {
                  deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                  currentFirstChild = useFiber(currentFirstChild, newChild.children || [], expirationTime);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                }

                deleteRemainingChildren(returnFiber, currentFirstChild);
                break;
              } else deleteChild(returnFiber, currentFirstChild);

              currentFirstChild = currentFirstChild.sibling;
            }

            currentFirstChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
            currentFirstChild.return = returnFiber;
            returnFiber = currentFirstChild;
          }

          return placeSingleChild(returnFiber);
      }
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = "" + newChild, null !== currentFirstChild && 6 === currentFirstChild.tag ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling), currentFirstChild = useFiber(currentFirstChild, newChild, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (deleteRemainingChildren(returnFiber, currentFirstChild), currentFirstChild = createFiberFromText(newChild, returnFiber.mode, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild), placeSingleChild(returnFiber);
      if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
      if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
      isObject && throwOnInvalidObjectType(returnFiber, newChild);
      if ("undefined" === typeof newChild && !isUnkeyedTopLevelFragment) switch (returnFiber.tag) {
        case 1:
        case 0:
          throw returnFiber = returnFiber.type, ReactError(Error((returnFiber.displayName || returnFiber.name || "Component") + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null."));
      }
      return deleteRemainingChildren(returnFiber, currentFirstChild);
    };
  }

  var reconcileChildFibers = ChildReconciler(true),
      mountChildFibers = ChildReconciler(false),
      NO_CONTEXT = {},
      contextStackCursor$1 = {
    current: NO_CONTEXT
  },
      contextFiberStackCursor = {
    current: NO_CONTEXT
  },
      rootInstanceStackCursor = {
    current: NO_CONTEXT
  };

  function requiredContext(c) {
    if (c === NO_CONTEXT) throw ReactError(Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue."));
    return c;
  }

  function pushHostContainer(fiber, nextRootInstance) {
    push(rootInstanceStackCursor, nextRootInstance, fiber);
    push(contextFiberStackCursor, fiber, fiber);
    push(contextStackCursor$1, NO_CONTEXT, fiber);
    pop(contextStackCursor$1, fiber);
    push(contextStackCursor$1, {
      isInAParentText: false
    }, fiber);
  }

  function popHostContainer(fiber) {
    pop(contextStackCursor$1, fiber);
    pop(contextFiberStackCursor, fiber);
    pop(rootInstanceStackCursor, fiber);
  }

  function pushHostContext(fiber) {
    requiredContext(rootInstanceStackCursor.current);
    var context = requiredContext(contextStackCursor$1.current);
    var nextContext = fiber.type;
    nextContext = "AndroidTextInput" === nextContext || "RCTMultilineTextInputView" === nextContext || "RCTSinglelineTextInputView" === nextContext || "RCTText" === nextContext || "RCTVirtualText" === nextContext;
    nextContext = context.isInAParentText !== nextContext ? {
      isInAParentText: nextContext
    } : context;
    context !== nextContext && (push(contextFiberStackCursor, fiber, fiber), push(contextStackCursor$1, nextContext, fiber));
  }

  function popHostContext(fiber) {
    contextFiberStackCursor.current === fiber && (pop(contextStackCursor$1, fiber), pop(contextFiberStackCursor, fiber));
  }

  var SubtreeSuspenseContextMask = 1,
      InvisibleParentSuspenseContext = 1,
      ForceSuspenseFallback = 2,
      suspenseStackCursor = {
    current: 0
  };

  function findFirstSuspended(row) {
    for (var node = row; null !== node;) {
      if (13 === node.tag) {
        if (null !== node.memoizedState) return node;
      } else if (19 === node.tag && undefined !== node.memoizedProps.revealOrder) {
        if (0 !== (node.effectTag & 64)) return node;
      } else if (null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === row) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === row) return null;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }

    return null;
  }

  function createResponderListener(responder, props) {
    return {
      responder: responder,
      props: props
    };
  }

  var NoEffect$1 = 0,
      UnmountSnapshot = 2,
      UnmountMutation = 4,
      MountMutation = 8,
      UnmountLayout = 16,
      MountLayout = 32,
      MountPassive = 64,
      UnmountPassive = 128,
      ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,
      renderExpirationTime$1 = 0,
      currentlyRenderingFiber$1 = null,
      currentHook = null,
      nextCurrentHook = null,
      firstWorkInProgressHook = null,
      workInProgressHook = null,
      nextWorkInProgressHook = null,
      remainingExpirationTime = 0,
      componentUpdateQueue = null,
      sideEffectTag = 0,
      didScheduleRenderPhaseUpdate = false,
      renderPhaseUpdates = null,
      numberOfReRenders = 0;

  function throwInvalidHookError() {
    throw ReactError(Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem."));
  }

  function areHookInputsEqual(nextDeps, prevDeps) {
    if (null === prevDeps) return false;

    for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
      if (!is(nextDeps[i], prevDeps[i])) return false;
    }

    return true;
  }

  function renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {
    renderExpirationTime$1 = nextRenderExpirationTime;
    currentlyRenderingFiber$1 = workInProgress;
    nextCurrentHook = null !== current ? current.memoizedState : null;
    ReactCurrentDispatcher$1.current = null === nextCurrentHook ? HooksDispatcherOnMount : HooksDispatcherOnUpdate;
    workInProgress = Component(props, refOrContext);

    if (didScheduleRenderPhaseUpdate) {
      do {
        didScheduleRenderPhaseUpdate = false, numberOfReRenders += 1, nextCurrentHook = null !== current ? current.memoizedState : null, nextWorkInProgressHook = firstWorkInProgressHook, componentUpdateQueue = workInProgressHook = currentHook = null, ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdate, workInProgress = Component(props, refOrContext);
      } while (didScheduleRenderPhaseUpdate);

      renderPhaseUpdates = null;
      numberOfReRenders = 0;
    }

    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    current = currentlyRenderingFiber$1;
    current.memoizedState = firstWorkInProgressHook;
    current.expirationTime = remainingExpirationTime;
    current.updateQueue = componentUpdateQueue;
    current.effectTag |= sideEffectTag;
    current = null !== currentHook && null !== currentHook.next;
    renderExpirationTime$1 = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    if (current) throw ReactError(Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement."));
    return workInProgress;
  }

  function resetHooks() {
    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    renderExpirationTime$1 = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    didScheduleRenderPhaseUpdate = false;
    renderPhaseUpdates = null;
    numberOfReRenders = 0;
  }

  function mountWorkInProgressHook() {
    var hook = {
      memoizedState: null,
      baseState: null,
      queue: null,
      baseUpdate: null,
      next: null
    };
    null === workInProgressHook ? firstWorkInProgressHook = workInProgressHook = hook : workInProgressHook = workInProgressHook.next = hook;
    return workInProgressHook;
  }

  function updateWorkInProgressHook() {
    if (null !== nextWorkInProgressHook) workInProgressHook = nextWorkInProgressHook, nextWorkInProgressHook = workInProgressHook.next, currentHook = nextCurrentHook, nextCurrentHook = null !== currentHook ? currentHook.next : null;else {
      if (null === nextCurrentHook) throw ReactError(Error("Rendered more hooks than during the previous render."));
      currentHook = nextCurrentHook;
      var newHook = {
        memoizedState: currentHook.memoizedState,
        baseState: currentHook.baseState,
        queue: currentHook.queue,
        baseUpdate: currentHook.baseUpdate,
        next: null
      };
      workInProgressHook = null === workInProgressHook ? firstWorkInProgressHook = newHook : workInProgressHook.next = newHook;
      nextCurrentHook = currentHook.next;
    }
    return workInProgressHook;
  }

  function basicStateReducer(state, action) {
    return "function" === typeof action ? action(state) : action;
  }

  function updateReducer(reducer) {
    var hook = updateWorkInProgressHook(),
        queue = hook.queue;
    if (null === queue) throw ReactError(Error("Should have a queue. This is likely a bug in React. Please file an issue."));
    queue.lastRenderedReducer = reducer;

    if (0 < numberOfReRenders) {
      var _dispatch = queue.dispatch;

      if (null !== renderPhaseUpdates) {
        var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

        if (undefined !== firstRenderPhaseUpdate) {
          renderPhaseUpdates.delete(queue);
          var newState = hook.memoizedState;

          do {
            newState = reducer(newState, firstRenderPhaseUpdate.action), firstRenderPhaseUpdate = firstRenderPhaseUpdate.next;
          } while (null !== firstRenderPhaseUpdate);

          is(newState, hook.memoizedState) || (didReceiveUpdate = true);
          hook.memoizedState = newState;
          hook.baseUpdate === queue.last && (hook.baseState = newState);
          queue.lastRenderedState = newState;
          return [newState, _dispatch];
        }
      }

      return [hook.memoizedState, _dispatch];
    }

    _dispatch = queue.last;
    var baseUpdate = hook.baseUpdate;
    newState = hook.baseState;
    null !== baseUpdate ? (null !== _dispatch && (_dispatch.next = null), _dispatch = baseUpdate.next) : _dispatch = null !== _dispatch ? _dispatch.next : null;

    if (null !== _dispatch) {
      var newBaseUpdate = firstRenderPhaseUpdate = null,
          _update = _dispatch,
          didSkip = false;

      do {
        var updateExpirationTime = _update.expirationTime;
        updateExpirationTime < renderExpirationTime$1 ? (didSkip || (didSkip = true, newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState), updateExpirationTime > remainingExpirationTime && (remainingExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, _update.suspenseConfig), newState = _update.eagerReducer === reducer ? _update.eagerState : reducer(newState, _update.action));
        baseUpdate = _update;
        _update = _update.next;
      } while (null !== _update && _update !== _dispatch);

      didSkip || (newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState);
      is(newState, hook.memoizedState) || (didReceiveUpdate = true);
      hook.memoizedState = newState;
      hook.baseUpdate = newBaseUpdate;
      hook.baseState = firstRenderPhaseUpdate;
      queue.lastRenderedState = newState;
    }

    return [hook.memoizedState, queue.dispatch];
  }

  function pushEffect(tag, create, destroy, deps) {
    tag = {
      tag: tag,
      create: create,
      destroy: destroy,
      deps: deps,
      next: null
    };
    null === componentUpdateQueue ? (componentUpdateQueue = {
      lastEffect: null
    }, componentUpdateQueue.lastEffect = tag.next = tag) : (create = componentUpdateQueue.lastEffect, null === create ? componentUpdateQueue.lastEffect = tag.next = tag : (destroy = create.next, create.next = tag, tag.next = destroy, componentUpdateQueue.lastEffect = tag));
    return tag;
  }

  function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = mountWorkInProgressHook();
    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, undefined, undefined === deps ? null : deps);
  }

  function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = updateWorkInProgressHook();
    deps = undefined === deps ? null : deps;
    var destroy = undefined;

    if (null !== currentHook) {
      var prevEffect = currentHook.memoizedState;
      destroy = prevEffect.destroy;

      if (null !== deps && areHookInputsEqual(deps, prevEffect.deps)) {
        pushEffect(NoEffect$1, create, destroy, deps);
        return;
      }
    }

    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, destroy, deps);
  }

  function imperativeHandleEffect(create, ref) {
    if ("function" === typeof ref) return create = create(), ref(create), function () {
      ref(null);
    };
    if (null !== ref && undefined !== ref) return create = create(), ref.current = create, function () {
      ref.current = null;
    };
  }

  function mountDebugValue() {}

  function dispatchAction(fiber, queue, action) {
    if (!(25 > numberOfReRenders)) throw ReactError(Error("Too many re-renders. React limits the number of renders to prevent an infinite loop."));
    var alternate = fiber.alternate;
    if (fiber === currentlyRenderingFiber$1 || null !== alternate && alternate === currentlyRenderingFiber$1) {
      if (didScheduleRenderPhaseUpdate = true, fiber = {
        expirationTime: renderExpirationTime$1,
        suspenseConfig: null,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      }, null === renderPhaseUpdates && (renderPhaseUpdates = new Map()), action = renderPhaseUpdates.get(queue), undefined === action) renderPhaseUpdates.set(queue, fiber);else {
        for (queue = action; null !== queue.next;) {
          queue = queue.next;
        }

        queue.next = fiber;
      }
    } else {
      var currentTime = requestCurrentTime(),
          _suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, fiber, _suspenseConfig);
      _suspenseConfig = {
        expirationTime: currentTime,
        suspenseConfig: _suspenseConfig,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      };
      var _last = queue.last;
      if (null === _last) _suspenseConfig.next = _suspenseConfig;else {
        var first = _last.next;
        null !== first && (_suspenseConfig.next = first);
        _last.next = _suspenseConfig;
      }
      queue.last = _suspenseConfig;
      if (0 === fiber.expirationTime && (null === alternate || 0 === alternate.expirationTime) && (alternate = queue.lastRenderedReducer, null !== alternate)) try {
        var currentState = queue.lastRenderedState,
            _eagerState = alternate(currentState, action);

        _suspenseConfig.eagerReducer = alternate;
        _suspenseConfig.eagerState = _eagerState;
        if (is(_eagerState, currentState)) return;
      } catch (error) {} finally {}
      scheduleUpdateOnFiber(fiber, currentTime);
    }
  }

  var ContextOnlyDispatcher = {
    readContext: readContext,
    useCallback: throwInvalidHookError,
    useContext: throwInvalidHookError,
    useEffect: throwInvalidHookError,
    useImperativeHandle: throwInvalidHookError,
    useLayoutEffect: throwInvalidHookError,
    useMemo: throwInvalidHookError,
    useReducer: throwInvalidHookError,
    useRef: throwInvalidHookError,
    useState: throwInvalidHookError,
    useDebugValue: throwInvalidHookError,
    useResponder: throwInvalidHookError
  },
      HooksDispatcherOnMount = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      mountWorkInProgressHook().memoizedState = [callback, undefined === deps ? null : deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return mountEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return mountEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return mountEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = mountWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: function useReducer(reducer, initialArg, init) {
      var hook = mountWorkInProgressHook();
      initialArg = undefined !== init ? init(initialArg) : initialArg;
      hook.memoizedState = hook.baseState = initialArg;
      reducer = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: reducer,
        lastRenderedState: initialArg
      };
      reducer = reducer.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, reducer);
      return [hook.memoizedState, reducer];
    },
    useRef: function useRef(initialValue) {
      var hook = mountWorkInProgressHook();
      initialValue = {
        current: initialValue
      };
      return hook.memoizedState = initialValue;
    },
    useState: function useState(initialState) {
      var hook = mountWorkInProgressHook();
      "function" === typeof initialState && (initialState = initialState());
      hook.memoizedState = hook.baseState = initialState;
      initialState = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: basicStateReducer,
        lastRenderedState: initialState
      };
      initialState = initialState.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, initialState);
      return [hook.memoizedState, initialState];
    },
    useDebugValue: mountDebugValue,
    useResponder: createResponderListener
  },
      HooksDispatcherOnUpdate = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      hook.memoizedState = [callback, deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return updateEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return updateEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return updateEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: updateReducer,
    useRef: function useRef() {
      return updateWorkInProgressHook().memoizedState;
    },
    useState: function useState(initialState) {
      return updateReducer(basicStateReducer, initialState);
    },
    useDebugValue: mountDebugValue,
    useResponder: createResponderListener
  },
      hydrationParentFiber = null,
      nextHydratableInstance = null,
      isHydrating = false;

  function tryHydrate(fiber, nextInstance) {
    switch (fiber.tag) {
      case 5:
        return nextInstance = shim$1(nextInstance, fiber.type, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 6:
        return nextInstance = shim$1(nextInstance, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 13:
        return false;

      default:
        return false;
    }
  }

  function tryToClaimNextHydratableInstance(fiber$jscomp$0) {
    if (isHydrating) {
      var nextInstance = nextHydratableInstance;

      if (nextInstance) {
        var firstAttemptedInstance = nextInstance;

        if (!tryHydrate(fiber$jscomp$0, nextInstance)) {
          nextInstance = shim$1(firstAttemptedInstance);

          if (!nextInstance || !tryHydrate(fiber$jscomp$0, nextInstance)) {
            fiber$jscomp$0.effectTag |= 2;
            isHydrating = false;
            hydrationParentFiber = fiber$jscomp$0;
            return;
          }

          var returnFiber = hydrationParentFiber,
              fiber = createFiber(5, null, null, 0);
          fiber.elementType = "DELETED";
          fiber.type = "DELETED";
          fiber.stateNode = firstAttemptedInstance;
          fiber.return = returnFiber;
          fiber.effectTag = 8;
          null !== returnFiber.lastEffect ? (returnFiber.lastEffect.nextEffect = fiber, returnFiber.lastEffect = fiber) : returnFiber.firstEffect = returnFiber.lastEffect = fiber;
        }

        hydrationParentFiber = fiber$jscomp$0;
        nextHydratableInstance = shim$1(nextInstance);
      } else fiber$jscomp$0.effectTag |= 2, isHydrating = false, hydrationParentFiber = fiber$jscomp$0;
    }
  }

  var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner,
      didReceiveUpdate = false;

  function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
    workInProgress.child = null === current$$1 ? mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime) : reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
  }

  function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    Component = Component.render;
    var ref = workInProgress.ref;
    prepareToReadContext(workInProgress, renderExpirationTime);
    nextProps = renderWithHooks(current$$1, workInProgress, Component, nextProps, ref, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, nextProps, renderExpirationTime);
    return workInProgress.child;
  }

  function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    if (null === current$$1) {
      var type = Component.type;
      if ("function" === typeof type && !shouldConstruct(type) && undefined === type.defaultProps && null === Component.compare && undefined === Component.defaultProps) return workInProgress.tag = 15, workInProgress.type = type, updateSimpleMemoComponent(current$$1, workInProgress, type, nextProps, updateExpirationTime, renderExpirationTime);
      current$$1 = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
      current$$1.ref = workInProgress.ref;
      current$$1.return = workInProgress;
      return workInProgress.child = current$$1;
    }

    type = current$$1.child;
    if (updateExpirationTime < renderExpirationTime && (updateExpirationTime = type.memoizedProps, Component = Component.compare, Component = null !== Component ? Component : shallowEqual, Component(updateExpirationTime, nextProps) && current$$1.ref === workInProgress.ref)) return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    current$$1 = createWorkInProgress(type, nextProps, renderExpirationTime);
    current$$1.ref = workInProgress.ref;
    current$$1.return = workInProgress;
    return workInProgress.child = current$$1;
  }

  function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    return null !== current$$1 && shallowEqual(current$$1.memoizedProps, nextProps) && current$$1.ref === workInProgress.ref && (didReceiveUpdate = false, updateExpirationTime < renderExpirationTime) ? bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
  }

  function markRef(current$$1, workInProgress) {
    var ref = workInProgress.ref;
    if (null === current$$1 && null !== ref || null !== current$$1 && current$$1.ref !== ref) workInProgress.effectTag |= 128;
  }

  function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    var context = isContextProvider(Component) ? previousContext : contextStackCursor.current;
    context = getMaskedContext(workInProgress, context);
    prepareToReadContext(workInProgress, renderExpirationTime);
    Component = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, Component, renderExpirationTime);
    return workInProgress.child;
  }

  function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    if (isContextProvider(Component)) {
      var hasContext = true;
      pushContextProvider(workInProgress);
    } else hasContext = false;

    prepareToReadContext(workInProgress, renderExpirationTime);
    if (null === workInProgress.stateNode) null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime), mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime), nextProps = true;else if (null === current$$1) {
      var instance = workInProgress.stateNode,
          oldProps = workInProgress.memoizedProps;
      instance.props = oldProps;
      var oldContext = instance.context,
          contextType = Component.contextType;
      "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType));
      var getDerivedStateFromProps = Component.getDerivedStateFromProps,
          hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate;
      hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType);
      hasForceUpdate = false;
      var oldState = workInProgress.memoizedState;
      oldContext = instance.state = oldState;
      var updateQueue = workInProgress.updateQueue;
      null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldContext = workInProgress.memoizedState);
      oldProps !== nextProps || oldState !== oldContext || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldContext = workInProgress.memoizedState), (oldProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldState, oldContext, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || ("function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount()), "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4)) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldContext), instance.props = nextProps, instance.state = oldContext, instance.context = contextType, nextProps = oldProps) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), nextProps = false);
    } else instance = workInProgress.stateNode, oldProps = workInProgress.memoizedProps, instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps), oldContext = instance.context, contextType = Component.contextType, "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType)), getDerivedStateFromProps = Component.getDerivedStateFromProps, (hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate) || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType), hasForceUpdate = false, oldContext = workInProgress.memoizedState, oldState = instance.state = oldContext, updateQueue = workInProgress.updateQueue, null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldState = workInProgress.memoizedState), oldProps !== nextProps || oldContext !== oldState || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldState = workInProgress.memoizedState), (getDerivedStateFromProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldContext, oldState, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillUpdate && "function" !== typeof instance.componentWillUpdate || ("function" === typeof instance.componentWillUpdate && instance.componentWillUpdate(nextProps, oldState, contextType), "function" === typeof instance.UNSAFE_componentWillUpdate && instance.UNSAFE_componentWillUpdate(nextProps, oldState, contextType)), "function" === typeof instance.componentDidUpdate && (workInProgress.effectTag |= 4), "function" === typeof instance.getSnapshotBeforeUpdate && (workInProgress.effectTag |= 256)) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldState), instance.props = nextProps, instance.state = oldState, instance.context = contextType, nextProps = getDerivedStateFromProps) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), nextProps = false);
    return finishClassComponent(current$$1, workInProgress, Component, nextProps, hasContext, renderExpirationTime);
  }

  function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
    markRef(current$$1, workInProgress);
    var didCaptureError = 0 !== (workInProgress.effectTag & 64);
    if (!shouldUpdate && !didCaptureError) return hasContext && invalidateContextProvider(workInProgress, Component, false), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    shouldUpdate = workInProgress.stateNode;
    ReactCurrentOwner$3.current = workInProgress;
    var nextChildren = didCaptureError && "function" !== typeof Component.getDerivedStateFromError ? null : shouldUpdate.render();
    workInProgress.effectTag |= 1;
    null !== current$$1 && didCaptureError ? (workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime), workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime)) : reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
    workInProgress.memoizedState = shouldUpdate.state;
    hasContext && invalidateContextProvider(workInProgress, Component, true);
    return workInProgress.child;
  }

  function pushHostRootContext(workInProgress) {
    var root = workInProgress.stateNode;
    root.pendingContext ? pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context) : root.context && pushTopLevelContextObject(workInProgress, root.context, false);
    pushHostContainer(workInProgress, root.containerInfo);
  }

  var SUSPENDED_MARKER = {};

  function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
    var mode = workInProgress.mode,
        nextProps = workInProgress.pendingProps,
        suspenseContext = suspenseStackCursor.current,
        nextState = null,
        nextDidTimeout = false,
        JSCompiler_temp;
    (JSCompiler_temp = 0 !== (workInProgress.effectTag & 64)) || (JSCompiler_temp = 0 !== (suspenseContext & ForceSuspenseFallback) && (null === current$$1 || null !== current$$1.memoizedState));
    JSCompiler_temp ? (nextState = SUSPENDED_MARKER, nextDidTimeout = true, workInProgress.effectTag &= -65) : null !== current$$1 && null === current$$1.memoizedState || undefined === nextProps.fallback || true === nextProps.unstable_avoidThisFallback || (suspenseContext |= InvisibleParentSuspenseContext);
    suspenseContext &= SubtreeSuspenseContextMask;
    push(suspenseStackCursor, suspenseContext, workInProgress);
    if (null === current$$1) {
      if (nextDidTimeout) {
        nextProps = nextProps.fallback;
        current$$1 = createFiberFromFragment(null, mode, 0, null);
        current$$1.return = workInProgress;
        if (0 === (workInProgress.mode & 2)) for (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, current$$1.child = nextDidTimeout; null !== nextDidTimeout;) {
          nextDidTimeout.return = current$$1, nextDidTimeout = nextDidTimeout.sibling;
        }
        renderExpirationTime = createFiberFromFragment(nextProps, mode, renderExpirationTime, null);
        renderExpirationTime.return = workInProgress;
        current$$1.sibling = renderExpirationTime;
        mode = current$$1;
      } else mode = renderExpirationTime = mountChildFibers(workInProgress, null, nextProps.children, renderExpirationTime);
    } else {
      if (null !== current$$1.memoizedState) {
        if (suspenseContext = current$$1.child, mode = suspenseContext.sibling, nextDidTimeout) {
          nextProps = nextProps.fallback;
          renderExpirationTime = createWorkInProgress(suspenseContext, suspenseContext.pendingProps, 0);
          renderExpirationTime.return = workInProgress;
          if (0 === (workInProgress.mode & 2) && (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextDidTimeout !== suspenseContext.child)) for (renderExpirationTime.child = nextDidTimeout; null !== nextDidTimeout;) {
            nextDidTimeout.return = renderExpirationTime, nextDidTimeout = nextDidTimeout.sibling;
          }
          nextProps = createWorkInProgress(mode, nextProps, mode.expirationTime);
          nextProps.return = workInProgress;
          renderExpirationTime.sibling = nextProps;
          mode = renderExpirationTime;
          renderExpirationTime.childExpirationTime = 0;
          renderExpirationTime = nextProps;
        } else mode = renderExpirationTime = reconcileChildFibers(workInProgress, suspenseContext.child, nextProps.children, renderExpirationTime);
      } else if (suspenseContext = current$$1.child, nextDidTimeout) {
        nextDidTimeout = nextProps.fallback;
        nextProps = createFiberFromFragment(null, mode, 0, null);
        nextProps.return = workInProgress;
        nextProps.child = suspenseContext;
        null !== suspenseContext && (suspenseContext.return = nextProps);
        if (0 === (workInProgress.mode & 2)) for (suspenseContext = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextProps.child = suspenseContext; null !== suspenseContext;) {
          suspenseContext.return = nextProps, suspenseContext = suspenseContext.sibling;
        }
        renderExpirationTime = createFiberFromFragment(nextDidTimeout, mode, renderExpirationTime, null);
        renderExpirationTime.return = workInProgress;
        nextProps.sibling = renderExpirationTime;
        renderExpirationTime.effectTag |= 2;
        mode = nextProps;
        nextProps.childExpirationTime = 0;
      } else renderExpirationTime = mode = reconcileChildFibers(workInProgress, suspenseContext, nextProps.children, renderExpirationTime);
      workInProgress.stateNode = current$$1.stateNode;
    }
    workInProgress.memoizedState = nextState;
    workInProgress.child = mode;
    return renderExpirationTime;
  }

  function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
    var renderState = workInProgress.memoizedState;
    null === renderState ? workInProgress.memoizedState = {
      isBackwards: isBackwards,
      rendering: null,
      last: lastContentRow,
      tail: tail,
      tailExpiration: 0,
      tailMode: tailMode
    } : (renderState.isBackwards = isBackwards, renderState.rendering = null, renderState.last = lastContentRow, renderState.tail = tail, renderState.tailExpiration = 0, renderState.tailMode = tailMode);
  }

  function updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime) {
    var nextProps = workInProgress.pendingProps,
        revealOrder = nextProps.revealOrder,
        tailMode = nextProps.tail;
    reconcileChildren(current$$1, workInProgress, nextProps.children, renderExpirationTime);
    nextProps = suspenseStackCursor.current;
    if (0 !== (nextProps & ForceSuspenseFallback)) nextProps = nextProps & SubtreeSuspenseContextMask | ForceSuspenseFallback, workInProgress.effectTag |= 64;else {
      if (null !== current$$1 && 0 !== (current$$1.effectTag & 64)) a: for (current$$1 = workInProgress.child; null !== current$$1;) {
        if (13 === current$$1.tag) {
          if (null !== current$$1.memoizedState) {
            current$$1.expirationTime < renderExpirationTime && (current$$1.expirationTime = renderExpirationTime);
            var alternate = current$$1.alternate;
            null !== alternate && alternate.expirationTime < renderExpirationTime && (alternate.expirationTime = renderExpirationTime);
            scheduleWorkOnParentPath(current$$1.return, renderExpirationTime);
          }
        } else if (null !== current$$1.child) {
          current$$1.child.return = current$$1;
          current$$1 = current$$1.child;
          continue;
        }

        if (current$$1 === workInProgress) break a;

        for (; null === current$$1.sibling;) {
          if (null === current$$1.return || current$$1.return === workInProgress) break a;
          current$$1 = current$$1.return;
        }

        current$$1.sibling.return = current$$1.return;
        current$$1 = current$$1.sibling;
      }
      nextProps &= SubtreeSuspenseContextMask;
    }
    push(suspenseStackCursor, nextProps, workInProgress);
    if (0 === (workInProgress.mode & 2)) workInProgress.memoizedState = null;else switch (revealOrder) {
      case "forwards":
        renderExpirationTime = workInProgress.child;

        for (revealOrder = null; null !== renderExpirationTime;) {
          nextProps = renderExpirationTime.alternate, null !== nextProps && null === findFirstSuspended(nextProps) && (revealOrder = renderExpirationTime), renderExpirationTime = renderExpirationTime.sibling;
        }

        renderExpirationTime = revealOrder;
        null === renderExpirationTime ? (revealOrder = workInProgress.child, workInProgress.child = null) : (revealOrder = renderExpirationTime.sibling, renderExpirationTime.sibling = null);
        initSuspenseListRenderState(workInProgress, false, revealOrder, renderExpirationTime, tailMode);
        break;

      case "backwards":
        renderExpirationTime = null;
        revealOrder = workInProgress.child;

        for (workInProgress.child = null; null !== revealOrder;) {
          nextProps = revealOrder.alternate;

          if (null !== nextProps && null === findFirstSuspended(nextProps)) {
            workInProgress.child = revealOrder;
            break;
          }

          nextProps = revealOrder.sibling;
          revealOrder.sibling = renderExpirationTime;
          renderExpirationTime = revealOrder;
          revealOrder = nextProps;
        }

        initSuspenseListRenderState(workInProgress, true, renderExpirationTime, null, tailMode);
        break;

      case "together":
        initSuspenseListRenderState(workInProgress, false, null, null, undefined);
        break;

      default:
        workInProgress.memoizedState = null;
    }
    return workInProgress.child;
  }

  function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
    null !== current$$1 && (workInProgress.dependencies = current$$1.dependencies);
    if (workInProgress.childExpirationTime < renderExpirationTime) return null;
    if (null !== current$$1 && workInProgress.child !== current$$1.child) throw ReactError(Error("Resuming work not yet implemented."));

    if (null !== workInProgress.child) {
      current$$1 = workInProgress.child;
      renderExpirationTime = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime);
      workInProgress.child = renderExpirationTime;

      for (renderExpirationTime.return = workInProgress; null !== current$$1.sibling;) {
        current$$1 = current$$1.sibling, renderExpirationTime = renderExpirationTime.sibling = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime), renderExpirationTime.return = workInProgress;
      }

      renderExpirationTime.sibling = null;
    }

    return workInProgress.child;
  }

  var appendAllChildren = undefined,
      updateHostContainer = undefined,
      updateHostComponent$1 = undefined,
      updateHostText$1 = undefined;

  appendAllChildren = function appendAllChildren(parent, workInProgress) {
    for (var node = workInProgress.child; null !== node;) {
      if (5 === node.tag || 6 === node.tag) parent._children.push(node.stateNode);else if (4 !== node.tag && null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      if (node === workInProgress) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === workInProgress) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  updateHostContainer = function updateHostContainer() {};

  updateHostComponent$1 = function updateHostComponent$1(current, workInProgress, type, newProps) {
    current.memoizedProps !== newProps && (requiredContext(contextStackCursor$1.current), workInProgress.updateQueue = UPDATE_SIGNAL) && (workInProgress.effectTag |= 4);
  };

  updateHostText$1 = function updateHostText$1(current, workInProgress, oldText, newText) {
    oldText !== newText && (workInProgress.effectTag |= 4);
  };

  function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
    switch (renderState.tailMode) {
      case "hidden":
        hasRenderedATailFallback = renderState.tail;

        for (var lastTailNode = null; null !== hasRenderedATailFallback;) {
          null !== hasRenderedATailFallback.alternate && (lastTailNode = hasRenderedATailFallback), hasRenderedATailFallback = hasRenderedATailFallback.sibling;
        }

        null === lastTailNode ? renderState.tail = null : lastTailNode.sibling = null;
        break;

      case "collapsed":
        lastTailNode = renderState.tail;

        for (var _lastTailNode = null; null !== lastTailNode;) {
          null !== lastTailNode.alternate && (_lastTailNode = lastTailNode), lastTailNode = lastTailNode.sibling;
        }

        null === _lastTailNode ? hasRenderedATailFallback || null === renderState.tail ? renderState.tail = null : renderState.tail.sibling = null : _lastTailNode.sibling = null;
    }
  }

  function unwindWork(workInProgress) {
    switch (workInProgress.tag) {
      case 1:
        isContextProvider(workInProgress.type) && popContext(workInProgress);
        var effectTag = workInProgress.effectTag;
        return effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 3:
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        effectTag = workInProgress.effectTag;
        if (0 !== (effectTag & 64)) throw ReactError(Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue."));
        workInProgress.effectTag = effectTag & -2049 | 64;
        return workInProgress;

      case 5:
        return popHostContext(workInProgress), null;

      case 13:
        return pop(suspenseStackCursor, workInProgress), effectTag = workInProgress.effectTag, effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 18:
        return null;

      case 19:
        return pop(suspenseStackCursor, workInProgress), null;

      case 4:
        return popHostContainer(workInProgress), null;

      case 10:
        return popProvider(workInProgress), null;

      default:
        return null;
    }
  }

  function createCapturedValue(value, source) {
    return {
      value: value,
      source: source,
      stack: getStackByFiberInDevAndProd(source)
    };
  }

  if ("function" !== typeof ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog) throw ReactError(Error("Expected ReactFiberErrorDialog.showErrorDialog to be a function."));

  function logCapturedError(capturedError) {
    false !== ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog(capturedError) && undefined;
  }

  var PossiblyWeakSet$1 = "function" === typeof WeakSet ? WeakSet : Set;

  function logError(boundary, errorInfo) {
    var source = errorInfo.source,
        stack = errorInfo.stack;
    null === stack && null !== source && (stack = getStackByFiberInDevAndProd(source));
    errorInfo = {
      componentName: null !== source ? getComponentName(source.type) : null,
      componentStack: null !== stack ? stack : "",
      error: errorInfo.value,
      errorBoundary: null,
      errorBoundaryName: null,
      errorBoundaryFound: false,
      willRetry: false
    };
    null !== boundary && 1 === boundary.tag && (errorInfo.errorBoundary = boundary.stateNode, errorInfo.errorBoundaryName = getComponentName(boundary.type), errorInfo.errorBoundaryFound = true, errorInfo.willRetry = true);

    try {
      logCapturedError(errorInfo);
    } catch (e) {
      setTimeout(function () {
        throw e;
      });
    }
  }

  function safelyCallComponentWillUnmount(current$$1, instance) {
    try {
      instance.props = current$$1.memoizedProps, instance.state = current$$1.memoizedState, instance.componentWillUnmount();
    } catch (unmountError) {
      captureCommitPhaseError(current$$1, unmountError);
    }
  }

  function safelyDetachRef(current$$1) {
    var ref = current$$1.ref;
    if (null !== ref) if ("function" === typeof ref) try {
      ref(null);
    } catch (refError) {
      captureCommitPhaseError(current$$1, refError);
    } else ref.current = null;
  }

  function commitHookEffectList(unmountTag, mountTag, finishedWork) {
    finishedWork = finishedWork.updateQueue;
    finishedWork = null !== finishedWork ? finishedWork.lastEffect : null;

    if (null !== finishedWork) {
      var effect = finishedWork = finishedWork.next;

      do {
        if ((effect.tag & unmountTag) !== NoEffect$1) {
          var destroy = effect.destroy;
          effect.destroy = undefined;
          undefined !== destroy && destroy();
        }

        (effect.tag & mountTag) !== NoEffect$1 && (destroy = effect.create, effect.destroy = destroy());
        effect = effect.next;
      } while (effect !== finishedWork);
    }
  }

  function commitUnmount(current$$1$jscomp$0, renderPriorityLevel) {
    "function" === typeof onCommitFiberUnmount && onCommitFiberUnmount(current$$1$jscomp$0);

    switch (current$$1$jscomp$0.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        var updateQueue = current$$1$jscomp$0.updateQueue;

        if (null !== updateQueue && (updateQueue = updateQueue.lastEffect, null !== updateQueue)) {
          var firstEffect = updateQueue.next;
          runWithPriority(97 < renderPriorityLevel ? 97 : renderPriorityLevel, function () {
            var effect = firstEffect;

            do {
              var destroy = effect.destroy;

              if (undefined !== destroy) {
                var current$$1 = current$$1$jscomp$0;

                try {
                  destroy();
                } catch (error) {
                  captureCommitPhaseError(current$$1, error);
                }
              }

              effect = effect.next;
            } while (effect !== firstEffect);
          });
        }

        break;

      case 1:
        safelyDetachRef(current$$1$jscomp$0);
        renderPriorityLevel = current$$1$jscomp$0.stateNode;
        "function" === typeof renderPriorityLevel.componentWillUnmount && safelyCallComponentWillUnmount(current$$1$jscomp$0, renderPriorityLevel);
        break;

      case 5:
        safelyDetachRef(current$$1$jscomp$0);
        break;

      case 4:
        unmountHostComponents(current$$1$jscomp$0, renderPriorityLevel);
    }
  }

  function detachFiber(current$$1) {
    var alternate = current$$1.alternate;
    current$$1.return = null;
    current$$1.child = null;
    current$$1.memoizedState = null;
    current$$1.updateQueue = null;
    current$$1.dependencies = null;
    current$$1.alternate = null;
    current$$1.firstEffect = null;
    current$$1.lastEffect = null;
    current$$1.pendingProps = null;
    current$$1.memoizedProps = null;
    null !== alternate && detachFiber(alternate);
  }

  function isHostParent(fiber) {
    return 5 === fiber.tag || 3 === fiber.tag || 4 === fiber.tag;
  }

  function commitPlacement(finishedWork) {
    a: {
      for (var parent = finishedWork.return; null !== parent;) {
        if (isHostParent(parent)) {
          var parentFiber = parent;
          break a;
        }

        parent = parent.return;
      }

      throw ReactError(Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."));
    }

    parent = parentFiber.stateNode;

    switch (parentFiber.tag) {
      case 5:
        var isContainer = false;
        break;

      case 3:
        parent = parent.containerInfo;
        isContainer = true;
        break;

      case 4:
        parent = parent.containerInfo;
        isContainer = true;
        break;

      default:
        throw ReactError(Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue."));
    }

    parentFiber.effectTag & 16 && (parentFiber.effectTag &= -17);

    a: b: for (parentFiber = finishedWork;;) {
      for (; null === parentFiber.sibling;) {
        if (null === parentFiber.return || isHostParent(parentFiber.return)) {
          parentFiber = null;
          break a;
        }

        parentFiber = parentFiber.return;
      }

      parentFiber.sibling.return = parentFiber.return;

      for (parentFiber = parentFiber.sibling; 5 !== parentFiber.tag && 6 !== parentFiber.tag && 18 !== parentFiber.tag;) {
        if (parentFiber.effectTag & 2) continue b;
        if (null === parentFiber.child || 4 === parentFiber.tag) continue b;else parentFiber.child.return = parentFiber, parentFiber = parentFiber.child;
      }

      if (!(parentFiber.effectTag & 2)) {
        parentFiber = parentFiber.stateNode;
        break a;
      }
    }

    for (var node = finishedWork;;) {
      var isHost = 5 === node.tag || 6 === node.tag;

      if (isHost) {
        var stateNode = isHost ? node.stateNode : node.stateNode.instance;
        if (parentFiber) {
          if (isContainer) {
            if ("number" === typeof parent) throw ReactError(Error("Container does not support insertBefore operation"));
          } else {
            isHost = parent;
            var beforeChild = parentFiber,
                children = isHost._children,
                index = children.indexOf(stateNode);
            0 <= index ? (children.splice(index, 1), beforeChild = children.indexOf(beforeChild), children.splice(beforeChild, 0, stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [index], [beforeChild], [], [], [])) : (index = children.indexOf(beforeChild), children.splice(index, 0, stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [], [], ["number" === typeof stateNode ? stateNode : stateNode._nativeTag], [index], []));
          }
        } else isContainer ? ReactNativePrivateInterface.UIManager.setChildren(parent, ["number" === typeof stateNode ? stateNode : stateNode._nativeTag]) : (isHost = parent, children = "number" === typeof stateNode ? stateNode : stateNode._nativeTag, index = isHost._children, beforeChild = index.indexOf(stateNode), 0 <= beforeChild ? (index.splice(beforeChild, 1), index.push(stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [beforeChild], [index.length - 1], [], [], [])) : (index.push(stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [], [], [children], [index.length - 1], [])));
      } else if (4 !== node.tag && null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === finishedWork) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === finishedWork) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  function unmountHostComponents(current$$1, renderPriorityLevel$jscomp$0) {
    for (var node = current$$1, currentParentIsValid = false, currentParent = undefined, currentParentIsContainer = undefined;;) {
      if (!currentParentIsValid) {
        currentParentIsValid = node.return;

        a: for (;;) {
          if (null === currentParentIsValid) throw ReactError(Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."));
          currentParent = currentParentIsValid.stateNode;

          switch (currentParentIsValid.tag) {
            case 5:
              currentParentIsContainer = false;
              break a;

            case 3:
              currentParent = currentParent.containerInfo;
              currentParentIsContainer = true;
              break a;

            case 4:
              currentParent = currentParent.containerInfo;
              currentParentIsContainer = true;
              break a;
          }

          currentParentIsValid = currentParentIsValid.return;
        }

        currentParentIsValid = true;
      }

      if (5 === node.tag || 6 === node.tag) {
        a: for (var root = node, renderPriorityLevel = renderPriorityLevel$jscomp$0, node$jscomp$0 = root;;) {
          if (commitUnmount(node$jscomp$0, renderPriorityLevel), null !== node$jscomp$0.child && 4 !== node$jscomp$0.tag) node$jscomp$0.child.return = node$jscomp$0, node$jscomp$0 = node$jscomp$0.child;else {
            if (node$jscomp$0 === root) break;

            for (; null === node$jscomp$0.sibling;) {
              if (null === node$jscomp$0.return || node$jscomp$0.return === root) break a;
              node$jscomp$0 = node$jscomp$0.return;
            }

            node$jscomp$0.sibling.return = node$jscomp$0.return;
            node$jscomp$0 = node$jscomp$0.sibling;
          }
        }

        currentParentIsContainer ? (root = currentParent, recursivelyUncacheFiberNode(node.stateNode), ReactNativePrivateInterface.UIManager.manageChildren(root, [], [], [], [], [0])) : (root = currentParent, node$jscomp$0 = node.stateNode, recursivelyUncacheFiberNode(node$jscomp$0), renderPriorityLevel = root._children, node$jscomp$0 = renderPriorityLevel.indexOf(node$jscomp$0), renderPriorityLevel.splice(node$jscomp$0, 1), ReactNativePrivateInterface.UIManager.manageChildren(root._nativeTag, [], [], [], [], [node$jscomp$0]));
      } else if (4 === node.tag) {
        if (null !== node.child) {
          currentParent = node.stateNode.containerInfo;
          currentParentIsContainer = true;
          node.child.return = node;
          node = node.child;
          continue;
        }
      } else if (commitUnmount(node, renderPriorityLevel$jscomp$0), null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === current$$1) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === current$$1) return;
        node = node.return;
        4 === node.tag && (currentParentIsValid = false);
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  function commitWork(current$$1, finishedWork) {
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
        break;

      case 1:
        break;

      case 5:
        var instance = finishedWork.stateNode;

        if (null != instance) {
          var newProps = finishedWork.memoizedProps;
          current$$1 = null !== current$$1 ? current$$1.memoizedProps : newProps;
          var updatePayload = finishedWork.updateQueue;
          finishedWork.updateQueue = null;
          null !== updatePayload && (finishedWork = instance.viewConfig, instanceProps.set(instance._nativeTag, newProps), newProps = diffProperties(null, current$$1, newProps, finishedWork.validAttributes), null != newProps && ReactNativePrivateInterface.UIManager.updateView(instance._nativeTag, finishedWork.uiViewClassName, newProps));
        }

        break;

      case 6:
        if (null === finishedWork.stateNode) throw ReactError(Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue."));
        ReactNativePrivateInterface.UIManager.updateView(finishedWork.stateNode, "RCTRawText", {
          text: finishedWork.memoizedProps
        });
        break;

      case 3:
        break;

      case 12:
        break;

      case 13:
        instance = finishedWork;
        null === finishedWork.memoizedState ? newProps = false : (newProps = true, instance = finishedWork.child, globalMostRecentFallbackTime = now());
        if (null !== instance) a: for (current$$1 = instance;;) {
          if (5 === current$$1.tag) {
            if (updatePayload = current$$1.stateNode, newProps) {
              var viewConfig = updatePayload.viewConfig;
              var updatePayload$jscomp$0 = diffProperties(null, emptyObject, {
                style: {
                  display: "none"
                }
              }, viewConfig.validAttributes);
              ReactNativePrivateInterface.UIManager.updateView(updatePayload._nativeTag, viewConfig.uiViewClassName, updatePayload$jscomp$0);
            } else {
              updatePayload = current$$1.stateNode;
              updatePayload$jscomp$0 = current$$1.memoizedProps;
              viewConfig = updatePayload.viewConfig;

              var prevProps = _extends({}, updatePayload$jscomp$0, {
                style: [updatePayload$jscomp$0.style, {
                  display: "none"
                }]
              });

              updatePayload$jscomp$0 = diffProperties(null, prevProps, updatePayload$jscomp$0, viewConfig.validAttributes);
              ReactNativePrivateInterface.UIManager.updateView(updatePayload._nativeTag, viewConfig.uiViewClassName, updatePayload$jscomp$0);
            }
          } else {
            if (6 === current$$1.tag) throw Error("Not yet implemented.");

            if (13 === current$$1.tag && null !== current$$1.memoizedState) {
              updatePayload = current$$1.child.sibling;
              updatePayload.return = current$$1;
              current$$1 = updatePayload;
              continue;
            } else if (null !== current$$1.child) {
              current$$1.child.return = current$$1;
              current$$1 = current$$1.child;
              continue;
            }
          }
          if (current$$1 === instance) break a;

          for (; null === current$$1.sibling;) {
            if (null === current$$1.return || current$$1.return === instance) break a;
            current$$1 = current$$1.return;
          }

          current$$1.sibling.return = current$$1.return;
          current$$1 = current$$1.sibling;
        }
        attachSuspenseRetryListeners(finishedWork);
        break;

      case 19:
        attachSuspenseRetryListeners(finishedWork);
        break;

      case 17:
        break;

      case 20:
        break;

      default:
        throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
    }
  }

  function attachSuspenseRetryListeners(finishedWork) {
    var thenables = finishedWork.updateQueue;

    if (null !== thenables) {
      finishedWork.updateQueue = null;
      var retryCache = finishedWork.stateNode;
      null === retryCache && (retryCache = finishedWork.stateNode = new PossiblyWeakSet$1());
      thenables.forEach(function (thenable) {
        var retry = resolveRetryThenable.bind(null, finishedWork, thenable);
        retryCache.has(thenable) || (retryCache.add(thenable), thenable.then(retry, retry));
      });
    }
  }

  var PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map;

  function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime, null);
    expirationTime.tag = 3;
    expirationTime.payload = {
      element: null
    };
    var error = errorInfo.value;

    expirationTime.callback = function () {
      hasUncaughtError || (hasUncaughtError = true, firstUncaughtError = error);
      logError(fiber, errorInfo);
    };

    return expirationTime;
  }

  function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime, null);
    expirationTime.tag = 3;
    var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

    if ("function" === typeof getDerivedStateFromError) {
      var error = errorInfo.value;

      expirationTime.payload = function () {
        logError(fiber, errorInfo);
        return getDerivedStateFromError(error);
      };
    }

    var inst = fiber.stateNode;
    null !== inst && "function" === typeof inst.componentDidCatch && (expirationTime.callback = function () {
      "function" !== typeof getDerivedStateFromError && (null === legacyErrorBoundariesThatAlreadyFailed ? legacyErrorBoundariesThatAlreadyFailed = new Set([this]) : legacyErrorBoundariesThatAlreadyFailed.add(this), logError(fiber, errorInfo));
      var stack = errorInfo.stack;
      this.componentDidCatch(errorInfo.value, {
        componentStack: null !== stack ? stack : ""
      });
    });
    return expirationTime;
  }

  var ceil = Math.ceil,
      ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher,
      ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,
      NoContext = 0,
      LegacyUnbatchedContext = 8,
      RenderContext = 16,
      CommitContext = 32,
      RootIncomplete = 0,
      RootErrored = 1,
      RootSuspended = 2,
      RootSuspendedWithDelay = 3,
      RootCompleted = 4,
      executionContext = NoContext,
      workInProgressRoot = null,
      workInProgress = null,
      renderExpirationTime = 0,
      workInProgressRootExitStatus = RootIncomplete,
      workInProgressRootLatestProcessedExpirationTime = 1073741823,
      workInProgressRootLatestSuspenseTimeout = 1073741823,
      workInProgressRootCanSuspendUsingConfig = null,
      workInProgressRootHasPendingPing = false,
      globalMostRecentFallbackTime = 0,
      FALLBACK_THROTTLE_MS = 500,
      nextEffect = null,
      hasUncaughtError = false,
      firstUncaughtError = null,
      legacyErrorBoundariesThatAlreadyFailed = null,
      rootDoesHavePassiveEffects = false,
      rootWithPendingPassiveEffects = null,
      pendingPassiveEffectsRenderPriority = 90,
      pendingPassiveEffectsExpirationTime = 0,
      rootsWithPendingDiscreteUpdates = null,
      nestedUpdateCount = 0,
      rootWithNestedUpdates = null,
      currentEventTime = 0;

  function requestCurrentTime() {
    return (executionContext & 48) !== NoContext ? 1073741821 - (now() / 10 | 0) : 0 !== currentEventTime ? currentEventTime : currentEventTime = 1073741821 - (now() / 10 | 0);
  }

  function computeExpirationForFiber(currentTime, fiber, suspenseConfig) {
    fiber = fiber.mode;
    if (0 === (fiber & 2)) return 1073741823;
    var priorityLevel = getCurrentPriorityLevel();
    if (0 === (fiber & 4)) return 99 === priorityLevel ? 1073741823 : 1073741822;
    if ((executionContext & RenderContext) !== NoContext) return renderExpirationTime;
    if (null !== suspenseConfig) currentTime = 1073741821 - 25 * (((1073741821 - currentTime + (suspenseConfig.timeoutMs | 0 || 5e3) / 10) / 25 | 0) + 1);else switch (priorityLevel) {
      case 99:
        currentTime = 1073741823;
        break;

      case 98:
        currentTime = 1073741821 - 10 * (((1073741821 - currentTime + 15) / 10 | 0) + 1);
        break;

      case 97:
      case 96:
        currentTime = 1073741821 - 25 * (((1073741821 - currentTime + 500) / 25 | 0) + 1);
        break;

      case 95:
        currentTime = 1;
        break;

      default:
        throw ReactError(Error("Expected a valid priority level"));
    }
    null !== workInProgressRoot && currentTime === renderExpirationTime && --currentTime;
    return currentTime;
  }

  function scheduleUpdateOnFiber(fiber, expirationTime) {
    if (50 < nestedUpdateCount) throw nestedUpdateCount = 0, rootWithNestedUpdates = null, ReactError(Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops."));
    fiber = markUpdateTimeFromFiberToRoot(fiber, expirationTime);

    if (null !== fiber) {
      fiber.pingTime = 0;
      var priorityLevel = getCurrentPriorityLevel();
      if (1073741823 === expirationTime) {
        if ((executionContext & LegacyUnbatchedContext) !== NoContext && (executionContext & 48) === NoContext) for (var callback = renderRoot(fiber, 1073741823, true); null !== callback;) {
          callback = callback(true);
        } else scheduleCallbackForRoot(fiber, 99, 1073741823), executionContext === NoContext && flushSyncCallbackQueue();
      } else scheduleCallbackForRoot(fiber, priorityLevel, expirationTime);
      (executionContext & 4) === NoContext || 98 !== priorityLevel && 99 !== priorityLevel || (null === rootsWithPendingDiscreteUpdates ? rootsWithPendingDiscreteUpdates = new Map([[fiber, expirationTime]]) : (priorityLevel = rootsWithPendingDiscreteUpdates.get(fiber), (undefined === priorityLevel || priorityLevel > expirationTime) && rootsWithPendingDiscreteUpdates.set(fiber, expirationTime)));
    }
  }

  function markUpdateTimeFromFiberToRoot(fiber, expirationTime) {
    fiber.expirationTime < expirationTime && (fiber.expirationTime = expirationTime);
    var alternate = fiber.alternate;
    null !== alternate && alternate.expirationTime < expirationTime && (alternate.expirationTime = expirationTime);
    var node = fiber.return,
        root = null;
    if (null === node && 3 === fiber.tag) root = fiber.stateNode;else for (; null !== node;) {
      alternate = node.alternate;
      node.childExpirationTime < expirationTime && (node.childExpirationTime = expirationTime);
      null !== alternate && alternate.childExpirationTime < expirationTime && (alternate.childExpirationTime = expirationTime);

      if (null === node.return && 3 === node.tag) {
        root = node.stateNode;
        break;
      }

      node = node.return;
    }
    null !== root && (expirationTime > root.firstPendingTime && (root.firstPendingTime = expirationTime), fiber = root.lastPendingTime, 0 === fiber || expirationTime < fiber) && (root.lastPendingTime = expirationTime);
    return root;
  }

  function scheduleCallbackForRoot(root, priorityLevel, expirationTime) {
    if (root.callbackExpirationTime < expirationTime) {
      var existingCallbackNode = root.callbackNode;
      null !== existingCallbackNode && existingCallbackNode !== fakeCallbackNode && Scheduler_cancelCallback(existingCallbackNode);
      root.callbackExpirationTime = expirationTime;
      1073741823 === expirationTime ? root.callbackNode = scheduleSyncCallback(runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime))) : (existingCallbackNode = null, 1 !== expirationTime && (existingCallbackNode = {
        timeout: 10 * (1073741821 - expirationTime) - now()
      }), root.callbackNode = scheduleCallback(priorityLevel, runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime)), existingCallbackNode));
    }
  }

  function runRootCallback(root, callback, isSync) {
    var prevCallbackNode = root.callbackNode,
        continuation = null;

    try {
      return continuation = callback(isSync), null !== continuation ? runRootCallback.bind(null, root, continuation) : null;
    } finally {
      null === continuation && prevCallbackNode === root.callbackNode && (root.callbackNode = null, root.callbackExpirationTime = 0);
    }
  }

  function resolveLocksOnRoot(root, expirationTime) {
    var firstBatch = root.firstBatch;
    return null !== firstBatch && firstBatch._defer && firstBatch._expirationTime >= expirationTime ? (scheduleCallback(97, function () {
      firstBatch._onComplete();

      return null;
    }), true) : false;
  }

  function flushPendingDiscreteUpdates() {
    if (null !== rootsWithPendingDiscreteUpdates) {
      var roots = rootsWithPendingDiscreteUpdates;
      rootsWithPendingDiscreteUpdates = null;
      roots.forEach(function (expirationTime, root) {
        scheduleSyncCallback(renderRoot.bind(null, root, expirationTime));
      });
      flushSyncCallbackQueue();
    }
  }

  function prepareFreshStack(root, expirationTime) {
    root.finishedWork = null;
    root.finishedExpirationTime = 0;
    var timeoutHandle = root.timeoutHandle;
    -1 !== timeoutHandle && (root.timeoutHandle = -1, cancelTimeout(timeoutHandle));
    if (null !== workInProgress) for (timeoutHandle = workInProgress.return; null !== timeoutHandle;) {
      var interruptedWork = timeoutHandle;

      switch (interruptedWork.tag) {
        case 1:
          var childContextTypes = interruptedWork.type.childContextTypes;
          null !== childContextTypes && undefined !== childContextTypes && popContext(interruptedWork);
          break;

        case 3:
          popHostContainer(interruptedWork);
          popTopLevelContextObject(interruptedWork);
          break;

        case 5:
          popHostContext(interruptedWork);
          break;

        case 4:
          popHostContainer(interruptedWork);
          break;

        case 13:
          pop(suspenseStackCursor, interruptedWork);
          break;

        case 19:
          pop(suspenseStackCursor, interruptedWork);
          break;

        case 10:
          popProvider(interruptedWork);
      }

      timeoutHandle = timeoutHandle.return;
    }
    workInProgressRoot = root;
    workInProgress = createWorkInProgress(root.current, null, expirationTime);
    renderExpirationTime = expirationTime;
    workInProgressRootExitStatus = RootIncomplete;
    workInProgressRootLatestSuspenseTimeout = workInProgressRootLatestProcessedExpirationTime = 1073741823;
    workInProgressRootCanSuspendUsingConfig = null;
    workInProgressRootHasPendingPing = false;
  }

  function renderRoot(root$jscomp$0, expirationTime, isSync) {
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
    if (root$jscomp$0.firstPendingTime < expirationTime) return null;
    if (isSync && root$jscomp$0.finishedExpirationTime === expirationTime) return commitRoot.bind(null, root$jscomp$0);
    flushPassiveEffects();
    if (root$jscomp$0 !== workInProgressRoot || expirationTime !== renderExpirationTime) prepareFreshStack(root$jscomp$0, expirationTime);else if (workInProgressRootExitStatus === RootSuspendedWithDelay) if (workInProgressRootHasPendingPing) prepareFreshStack(root$jscomp$0, expirationTime);else {
      var lastPendingTime = root$jscomp$0.lastPendingTime;
      if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
    }

    if (null !== workInProgress) {
      lastPendingTime = executionContext;
      executionContext |= RenderContext;
      var prevDispatcher = ReactCurrentDispatcher.current;
      null === prevDispatcher && (prevDispatcher = ContextOnlyDispatcher);
      ReactCurrentDispatcher.current = ContextOnlyDispatcher;

      if (isSync) {
        if (1073741823 !== expirationTime) {
          var currentTime = requestCurrentTime();
          if (currentTime < expirationTime) return executionContext = lastPendingTime, resetContextDependencies(), ReactCurrentDispatcher.current = prevDispatcher, renderRoot.bind(null, root$jscomp$0, currentTime);
        }
      } else currentEventTime = 0;

      do {
        try {
          if (isSync) for (; null !== workInProgress;) {
            workInProgress = performUnitOfWork(workInProgress);
          } else for (; null !== workInProgress && !Scheduler_shouldYield();) {
            workInProgress = performUnitOfWork(workInProgress);
          }
          break;
        } catch (thrownValue) {
          resetContextDependencies();
          resetHooks();
          currentTime = workInProgress;
          if (null === currentTime || null === currentTime.return) throw prepareFreshStack(root$jscomp$0, expirationTime), executionContext = lastPendingTime, thrownValue;

          a: {
            var root = root$jscomp$0,
                returnFiber = currentTime.return,
                sourceFiber = currentTime,
                value = thrownValue,
                renderExpirationTime$jscomp$0 = renderExpirationTime;
            sourceFiber.effectTag |= 1024;
            sourceFiber.firstEffect = sourceFiber.lastEffect = null;

            if (null !== value && "object" === typeof value && "function" === typeof value.then) {
              var thenable = value,
                  hasInvisibleParentBoundary = 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext);
              value = returnFiber;

              do {
                var JSCompiler_temp;
                if (JSCompiler_temp = 13 === value.tag) null !== value.memoizedState ? JSCompiler_temp = false : (JSCompiler_temp = value.memoizedProps, JSCompiler_temp = undefined === JSCompiler_temp.fallback ? false : true !== JSCompiler_temp.unstable_avoidThisFallback ? true : hasInvisibleParentBoundary ? false : true);

                if (JSCompiler_temp) {
                  returnFiber = value.updateQueue;
                  null === returnFiber ? (returnFiber = new Set(), returnFiber.add(thenable), value.updateQueue = returnFiber) : returnFiber.add(thenable);

                  if (0 === (value.mode & 2)) {
                    value.effectTag |= 64;
                    sourceFiber.effectTag &= -1957;
                    1 === sourceFiber.tag && (null === sourceFiber.alternate ? sourceFiber.tag = 17 : (renderExpirationTime$jscomp$0 = createUpdate(1073741823, null), renderExpirationTime$jscomp$0.tag = 2, enqueueUpdate(sourceFiber, renderExpirationTime$jscomp$0)));
                    sourceFiber.expirationTime = 1073741823;
                    break a;
                  }

                  sourceFiber = root;
                  root = renderExpirationTime$jscomp$0;
                  hasInvisibleParentBoundary = sourceFiber.pingCache;
                  null === hasInvisibleParentBoundary ? (hasInvisibleParentBoundary = sourceFiber.pingCache = new PossiblyWeakMap(), returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)) : (returnFiber = hasInvisibleParentBoundary.get(thenable), undefined === returnFiber && (returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)));
                  returnFiber.has(root) || (returnFiber.add(root), sourceFiber = pingSuspendedRoot.bind(null, sourceFiber, thenable, root), thenable.then(sourceFiber, sourceFiber));
                  value.effectTag |= 2048;
                  value.expirationTime = renderExpirationTime$jscomp$0;
                  break a;
                }

                value = value.return;
              } while (null !== value);

              value = Error((getComponentName(sourceFiber.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + getStackByFiberInDevAndProd(sourceFiber));
            }

            workInProgressRootExitStatus !== RootCompleted && (workInProgressRootExitStatus = RootErrored);
            value = createCapturedValue(value, sourceFiber);
            sourceFiber = returnFiber;

            do {
              switch (sourceFiber.tag) {
                case 3:
                  sourceFiber.effectTag |= 2048;
                  sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                  renderExpirationTime$jscomp$0 = createRootErrorUpdate(sourceFiber, value, renderExpirationTime$jscomp$0);
                  enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                  break a;

                case 1:
                  if (thenable = value, root = sourceFiber.type, returnFiber = sourceFiber.stateNode, 0 === (sourceFiber.effectTag & 64) && ("function" === typeof root.getDerivedStateFromError || null !== returnFiber && "function" === typeof returnFiber.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(returnFiber)))) {
                    sourceFiber.effectTag |= 2048;
                    sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                    renderExpirationTime$jscomp$0 = createClassErrorUpdate(sourceFiber, thenable, renderExpirationTime$jscomp$0);
                    enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                    break a;
                  }

              }

              sourceFiber = sourceFiber.return;
            } while (null !== sourceFiber);
          }

          workInProgress = completeUnitOfWork(currentTime);
        }
      } while (1);

      executionContext = lastPendingTime;
      resetContextDependencies();
      ReactCurrentDispatcher.current = prevDispatcher;
      if (null !== workInProgress) return renderRoot.bind(null, root$jscomp$0, expirationTime);
    }

    root$jscomp$0.finishedWork = root$jscomp$0.current.alternate;
    root$jscomp$0.finishedExpirationTime = expirationTime;
    if (resolveLocksOnRoot(root$jscomp$0, expirationTime)) return null;
    workInProgressRoot = null;

    switch (workInProgressRootExitStatus) {
      case RootIncomplete:
        throw ReactError(Error("Should have a work-in-progress."));

      case RootErrored:
        return lastPendingTime = root$jscomp$0.lastPendingTime, lastPendingTime < expirationTime ? renderRoot.bind(null, root$jscomp$0, lastPendingTime) : isSync ? commitRoot.bind(null, root$jscomp$0) : (prepareFreshStack(root$jscomp$0, expirationTime), scheduleSyncCallback(renderRoot.bind(null, root$jscomp$0, expirationTime)), null);

      case RootSuspended:
        if (1073741823 === workInProgressRootLatestProcessedExpirationTime && !isSync && (isSync = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(), 10 < isSync)) {
          if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
          lastPendingTime = root$jscomp$0.lastPendingTime;
          if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
          root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync);
          return null;
        }

        return commitRoot.bind(null, root$jscomp$0);

      case RootSuspendedWithDelay:
        if (!isSync) {
          if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
          isSync = root$jscomp$0.lastPendingTime;
          if (isSync < expirationTime) return renderRoot.bind(null, root$jscomp$0, isSync);
          1073741823 !== workInProgressRootLatestSuspenseTimeout ? isSync = 10 * (1073741821 - workInProgressRootLatestSuspenseTimeout) - now() : 1073741823 === workInProgressRootLatestProcessedExpirationTime ? isSync = 0 : (isSync = 10 * (1073741821 - workInProgressRootLatestProcessedExpirationTime) - 5e3, lastPendingTime = now(), expirationTime = 10 * (1073741821 - expirationTime) - lastPendingTime, isSync = lastPendingTime - isSync, 0 > isSync && (isSync = 0), isSync = (120 > isSync ? 120 : 480 > isSync ? 480 : 1080 > isSync ? 1080 : 1920 > isSync ? 1920 : 3e3 > isSync ? 3e3 : 4320 > isSync ? 4320 : 1960 * ceil(isSync / 1960)) - isSync, expirationTime < isSync && (isSync = expirationTime));
          if (10 < isSync) return root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync), null;
        }

        return commitRoot.bind(null, root$jscomp$0);

      case RootCompleted:
        return !isSync && 1073741823 !== workInProgressRootLatestProcessedExpirationTime && null !== workInProgressRootCanSuspendUsingConfig && (lastPendingTime = workInProgressRootLatestProcessedExpirationTime, prevDispatcher = workInProgressRootCanSuspendUsingConfig, expirationTime = prevDispatcher.busyMinDurationMs | 0, 0 >= expirationTime ? expirationTime = 0 : (isSync = prevDispatcher.busyDelayMs | 0, lastPendingTime = now() - (10 * (1073741821 - lastPendingTime) - (prevDispatcher.timeoutMs | 0 || 5e3)), expirationTime = lastPendingTime <= isSync ? 0 : isSync + expirationTime - lastPendingTime), 10 < expirationTime) ? (root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), expirationTime), null) : commitRoot.bind(null, root$jscomp$0);

      default:
        throw ReactError(Error("Unknown root exit status."));
    }
  }

  function markRenderEventTimeAndConfig(expirationTime, suspenseConfig) {
    expirationTime < workInProgressRootLatestProcessedExpirationTime && 1 < expirationTime && (workInProgressRootLatestProcessedExpirationTime = expirationTime);
    null !== suspenseConfig && expirationTime < workInProgressRootLatestSuspenseTimeout && 1 < expirationTime && (workInProgressRootLatestSuspenseTimeout = expirationTime, workInProgressRootCanSuspendUsingConfig = suspenseConfig);
  }

  function performUnitOfWork(unitOfWork) {
    var next = beginWork$$1(unitOfWork.alternate, unitOfWork, renderExpirationTime);
    unitOfWork.memoizedProps = unitOfWork.pendingProps;
    null === next && (next = completeUnitOfWork(unitOfWork));
    ReactCurrentOwner$2.current = null;
    return next;
  }

  function completeUnitOfWork(unitOfWork) {
    workInProgress = unitOfWork;

    do {
      var current$$1 = workInProgress.alternate;
      unitOfWork = workInProgress.return;

      if (0 === (workInProgress.effectTag & 1024)) {
        a: {
          var current = current$$1;
          current$$1 = workInProgress;
          var renderExpirationTime$jscomp$0 = renderExpirationTime,
              newProps = current$$1.pendingProps;

          switch (current$$1.tag) {
            case 2:
              break;

            case 16:
              break;

            case 15:
            case 0:
              break;

            case 1:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 3:
              popHostContainer(current$$1);
              popTopLevelContextObject(current$$1);
              newProps = current$$1.stateNode;
              newProps.pendingContext && (newProps.context = newProps.pendingContext, newProps.pendingContext = null);
              if (null === current || null === current.child) current$$1.effectTag &= -3;
              updateHostContainer(current$$1);
              break;

            case 5:
              popHostContext(current$$1);
              renderExpirationTime$jscomp$0 = requiredContext(rootInstanceStackCursor.current);
              var type = current$$1.type;
              if (null !== current && null != current$$1.stateNode) updateHostComponent$1(current, current$$1, type, newProps, renderExpirationTime$jscomp$0), current.ref !== current$$1.ref && (current$$1.effectTag |= 128);else if (newProps) {
                current = requiredContext(contextStackCursor$1.current);
                var type$jscomp$0 = type;
                var _instance6 = newProps;
                var rootContainerInstance = renderExpirationTime$jscomp$0,
                    internalInstanceHandle = current$$1,
                    tag = allocateTag();
                type$jscomp$0 = getViewConfigForType(type$jscomp$0);
                var updatePayload = diffProperties(null, emptyObject, _instance6, type$jscomp$0.validAttributes);
                ReactNativePrivateInterface.UIManager.createView(tag, type$jscomp$0.uiViewClassName, rootContainerInstance, updatePayload);
                rootContainerInstance = new ReactNativeFiberHostComponent(tag, type$jscomp$0);
                instanceCache.set(tag, internalInstanceHandle);
                instanceProps.set(tag, _instance6);
                _instance6 = rootContainerInstance;
                appendAllChildren(_instance6, current$$1, false, false);
                finalizeInitialChildren(_instance6, type, newProps, renderExpirationTime$jscomp$0, current) && (current$$1.effectTag |= 4);
                current$$1.stateNode = _instance6;
                null !== current$$1.ref && (current$$1.effectTag |= 128);
              } else if (null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
              break;

            case 6:
              if (current && null != current$$1.stateNode) updateHostText$1(current, current$$1, current.memoizedProps, newProps);else {
                if ("string" !== typeof newProps && null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
                type = requiredContext(rootInstanceStackCursor.current);
                renderExpirationTime$jscomp$0 = requiredContext(contextStackCursor$1.current);
                current = current$$1;
                if (!renderExpirationTime$jscomp$0.isInAParentText) throw ReactError(Error("Text strings must be rendered within a <Text> component."));
                renderExpirationTime$jscomp$0 = allocateTag();
                ReactNativePrivateInterface.UIManager.createView(renderExpirationTime$jscomp$0, "RCTRawText", type, {
                  text: newProps
                });
                instanceCache.set(renderExpirationTime$jscomp$0, current$$1);
                current.stateNode = renderExpirationTime$jscomp$0;
              }
              break;

            case 11:
              break;

            case 13:
              pop(suspenseStackCursor, current$$1);
              newProps = current$$1.memoizedState;

              if (0 !== (current$$1.effectTag & 64)) {
                current$$1.expirationTime = renderExpirationTime$jscomp$0;
                break a;
              }

              newProps = null !== newProps;
              renderExpirationTime$jscomp$0 = false;
              null !== current && (type = current.memoizedState, renderExpirationTime$jscomp$0 = null !== type, newProps || null === type || (type = current.child.sibling, null !== type && (_instance6 = current$$1.firstEffect, null !== _instance6 ? (current$$1.firstEffect = type, type.nextEffect = _instance6) : (current$$1.firstEffect = current$$1.lastEffect = type, type.nextEffect = null), type.effectTag = 8)));
              if (newProps && !renderExpirationTime$jscomp$0 && 0 !== (current$$1.mode & 2)) if (null === current && true !== current$$1.memoizedProps.unstable_avoidThisFallback || 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext)) workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootSuspended);else if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) workInProgressRootExitStatus = RootSuspendedWithDelay;
              if (newProps || renderExpirationTime$jscomp$0) current$$1.effectTag |= 4;
              break;

            case 7:
              break;

            case 8:
              break;

            case 12:
              break;

            case 4:
              popHostContainer(current$$1);
              updateHostContainer(current$$1);
              break;

            case 10:
              popProvider(current$$1);
              break;

            case 9:
              break;

            case 14:
              break;

            case 17:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 18:
              break;

            case 19:
              pop(suspenseStackCursor, current$$1);
              newProps = current$$1.memoizedState;
              if (null === newProps) break;
              type = 0 !== (current$$1.effectTag & 64);
              _instance6 = newProps.rendering;
              if (null === _instance6) {
                if (type) cutOffTailIfNeeded(newProps, false);else {
                  if (workInProgressRootExitStatus !== RootIncomplete || null !== current && 0 !== (current.effectTag & 64)) for (current = current$$1.child; null !== current;) {
                    _instance6 = findFirstSuspended(current);

                    if (null !== _instance6) {
                      current$$1.effectTag |= 64;
                      cutOffTailIfNeeded(newProps, false);
                      newProps = _instance6.updateQueue;
                      null !== newProps && (current$$1.updateQueue = newProps, current$$1.effectTag |= 4);
                      current$$1.firstEffect = current$$1.lastEffect = null;
                      newProps = renderExpirationTime$jscomp$0;

                      for (current = current$$1.child; null !== current;) {
                        renderExpirationTime$jscomp$0 = current, type = newProps, renderExpirationTime$jscomp$0.effectTag &= 2, renderExpirationTime$jscomp$0.nextEffect = null, renderExpirationTime$jscomp$0.firstEffect = null, renderExpirationTime$jscomp$0.lastEffect = null, _instance6 = renderExpirationTime$jscomp$0.alternate, null === _instance6 ? (renderExpirationTime$jscomp$0.childExpirationTime = 0, renderExpirationTime$jscomp$0.expirationTime = type, renderExpirationTime$jscomp$0.child = null, renderExpirationTime$jscomp$0.memoizedProps = null, renderExpirationTime$jscomp$0.memoizedState = null, renderExpirationTime$jscomp$0.updateQueue = null, renderExpirationTime$jscomp$0.dependencies = null) : (renderExpirationTime$jscomp$0.childExpirationTime = _instance6.childExpirationTime, renderExpirationTime$jscomp$0.expirationTime = _instance6.expirationTime, renderExpirationTime$jscomp$0.child = _instance6.child, renderExpirationTime$jscomp$0.memoizedProps = _instance6.memoizedProps, renderExpirationTime$jscomp$0.memoizedState = _instance6.memoizedState, renderExpirationTime$jscomp$0.updateQueue = _instance6.updateQueue, type = _instance6.dependencies, renderExpirationTime$jscomp$0.dependencies = null === type ? null : {
                          expirationTime: type.expirationTime,
                          firstContext: type.firstContext,
                          responders: type.responders
                        }), current = current.sibling;
                      }

                      push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask | ForceSuspenseFallback, current$$1);
                      current$$1 = current$$1.child;
                      break a;
                    }

                    current = current.sibling;
                  }
                }
              } else {
                if (!type) if (current = findFirstSuspended(_instance6), null !== current) {
                  if (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, true), null === newProps.tail && "hidden" === newProps.tailMode) {
                    current = current.updateQueue;
                    null !== current && (current$$1.updateQueue = current, current$$1.effectTag |= 4);
                    current$$1 = current$$1.lastEffect = newProps.lastEffect;
                    null !== current$$1 && (current$$1.nextEffect = null);
                    break;
                  }
                } else now() > newProps.tailExpiration && 1 < renderExpirationTime$jscomp$0 && (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, false), current$$1.expirationTime = current$$1.childExpirationTime = renderExpirationTime$jscomp$0 - 1);
                newProps.isBackwards ? (_instance6.sibling = current$$1.child, current$$1.child = _instance6) : (current = newProps.last, null !== current ? current.sibling = _instance6 : current$$1.child = _instance6, newProps.last = _instance6);
              }

              if (null !== newProps.tail) {
                0 === newProps.tailExpiration && (newProps.tailExpiration = now() + 500);
                current = newProps.tail;
                newProps.rendering = current;
                newProps.tail = current.sibling;
                newProps.lastEffect = current$$1.lastEffect;
                current.sibling = null;
                newProps = suspenseStackCursor.current;
                newProps = type ? newProps & SubtreeSuspenseContextMask | ForceSuspenseFallback : newProps & SubtreeSuspenseContextMask;
                push(suspenseStackCursor, newProps, current$$1);
                current$$1 = current;
                break a;
              }

              break;

            case 20:
              break;

            default:
              throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
          }

          current$$1 = null;
        }

        newProps = workInProgress;

        if (1 === renderExpirationTime || 1 !== newProps.childExpirationTime) {
          current = 0;

          for (renderExpirationTime$jscomp$0 = newProps.child; null !== renderExpirationTime$jscomp$0;) {
            type = renderExpirationTime$jscomp$0.expirationTime, _instance6 = renderExpirationTime$jscomp$0.childExpirationTime, type > current && (current = type), _instance6 > current && (current = _instance6), renderExpirationTime$jscomp$0 = renderExpirationTime$jscomp$0.sibling;
          }

          newProps.childExpirationTime = current;
        }

        if (null !== current$$1) return current$$1;
        null !== unitOfWork && 0 === (unitOfWork.effectTag & 1024) && (null === unitOfWork.firstEffect && (unitOfWork.firstEffect = workInProgress.firstEffect), null !== workInProgress.lastEffect && (null !== unitOfWork.lastEffect && (unitOfWork.lastEffect.nextEffect = workInProgress.firstEffect), unitOfWork.lastEffect = workInProgress.lastEffect), 1 < workInProgress.effectTag && (null !== unitOfWork.lastEffect ? unitOfWork.lastEffect.nextEffect = workInProgress : unitOfWork.firstEffect = workInProgress, unitOfWork.lastEffect = workInProgress));
      } else {
        current$$1 = unwindWork(workInProgress, renderExpirationTime);
        if (null !== current$$1) return current$$1.effectTag &= 1023, current$$1;
        null !== unitOfWork && (unitOfWork.firstEffect = unitOfWork.lastEffect = null, unitOfWork.effectTag |= 1024);
      }

      current$$1 = workInProgress.sibling;
      if (null !== current$$1) return current$$1;
      workInProgress = unitOfWork;
    } while (null !== workInProgress);

    workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootCompleted);
    return null;
  }

  function commitRoot(root) {
    var renderPriorityLevel = getCurrentPriorityLevel();
    runWithPriority(99, commitRootImpl.bind(null, root, renderPriorityLevel));
    null !== rootWithPendingPassiveEffects && scheduleCallback(97, function () {
      flushPassiveEffects();
      return null;
    });
    return null;
  }

  function commitRootImpl(root, renderPriorityLevel) {
    flushPassiveEffects();
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
    var finishedWork = root.finishedWork,
        expirationTime = root.finishedExpirationTime;
    if (null === finishedWork) return null;
    root.finishedWork = null;
    root.finishedExpirationTime = 0;
    if (finishedWork === root.current) throw ReactError(Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue."));
    root.callbackNode = null;
    root.callbackExpirationTime = 0;
    var updateExpirationTimeBeforeCommit = finishedWork.expirationTime,
        childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;
    updateExpirationTimeBeforeCommit = childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit ? childExpirationTimeBeforeCommit : updateExpirationTimeBeforeCommit;
    root.firstPendingTime = updateExpirationTimeBeforeCommit;
    updateExpirationTimeBeforeCommit < root.lastPendingTime && (root.lastPendingTime = updateExpirationTimeBeforeCommit);
    root === workInProgressRoot && (workInProgress = workInProgressRoot = null, renderExpirationTime = 0);
    1 < finishedWork.effectTag ? null !== finishedWork.lastEffect ? (finishedWork.lastEffect.nextEffect = finishedWork, updateExpirationTimeBeforeCommit = finishedWork.firstEffect) : updateExpirationTimeBeforeCommit = finishedWork : updateExpirationTimeBeforeCommit = finishedWork.firstEffect;

    if (null !== updateExpirationTimeBeforeCommit) {
      childExpirationTimeBeforeCommit = executionContext;
      executionContext |= CommitContext;
      ReactCurrentOwner$2.current = null;
      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (; null !== nextEffect;) {
            if (0 !== (nextEffect.effectTag & 256)) {
              var current$$1 = nextEffect.alternate,
                  finishedWork$jscomp$0 = nextEffect;

              switch (finishedWork$jscomp$0.tag) {
                case 0:
                case 11:
                case 15:
                  commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork$jscomp$0);
                  break;

                case 1:
                  if (finishedWork$jscomp$0.effectTag & 256 && null !== current$$1) {
                    var prevProps = current$$1.memoizedProps,
                        prevState = current$$1.memoizedState,
                        instance = finishedWork$jscomp$0.stateNode,
                        snapshot = instance.getSnapshotBeforeUpdate(finishedWork$jscomp$0.elementType === finishedWork$jscomp$0.type ? prevProps : resolveDefaultProps(finishedWork$jscomp$0.type, prevProps), prevState);
                    instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                  }

                  break;

                case 3:
                case 5:
                case 6:
                case 4:
                case 17:
                  break;

                default:
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
              }
            }

            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (current$$1 = renderPriorityLevel; null !== nextEffect;) {
            var effectTag = nextEffect.effectTag;

            if (effectTag & 128) {
              var current$$1$jscomp$0 = nextEffect.alternate;

              if (null !== current$$1$jscomp$0) {
                var currentRef = current$$1$jscomp$0.ref;
                null !== currentRef && ("function" === typeof currentRef ? currentRef(null) : currentRef.current = null);
              }
            }

            switch (effectTag & 14) {
              case 2:
                commitPlacement(nextEffect);
                nextEffect.effectTag &= -3;
                break;

              case 6:
                commitPlacement(nextEffect);
                nextEffect.effectTag &= -3;
                commitWork(nextEffect.alternate, nextEffect);
                break;

              case 4:
                commitWork(nextEffect.alternate, nextEffect);
                break;

              case 8:
                prevProps = nextEffect, unmountHostComponents(prevProps, current$$1), detachFiber(prevProps);
            }

            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      root.current = finishedWork;
      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (effectTag = expirationTime; null !== nextEffect;) {
            var effectTag$jscomp$0 = nextEffect.effectTag;

            if (effectTag$jscomp$0 & 36) {
              var current$$1$jscomp$1 = nextEffect.alternate;
              current$$1$jscomp$0 = nextEffect;
              currentRef = effectTag;

              switch (current$$1$jscomp$0.tag) {
                case 0:
                case 11:
                case 15:
                  commitHookEffectList(UnmountLayout, MountLayout, current$$1$jscomp$0);
                  break;

                case 1:
                  var instance$jscomp$0 = current$$1$jscomp$0.stateNode;
                  if (current$$1$jscomp$0.effectTag & 4) if (null === current$$1$jscomp$1) instance$jscomp$0.componentDidMount();else {
                    var prevProps$jscomp$0 = current$$1$jscomp$0.elementType === current$$1$jscomp$0.type ? current$$1$jscomp$1.memoizedProps : resolveDefaultProps(current$$1$jscomp$0.type, current$$1$jscomp$1.memoizedProps);
                    instance$jscomp$0.componentDidUpdate(prevProps$jscomp$0, current$$1$jscomp$1.memoizedState, instance$jscomp$0.__reactInternalSnapshotBeforeUpdate);
                  }
                  var updateQueue = current$$1$jscomp$0.updateQueue;
                  null !== updateQueue && commitUpdateQueue(current$$1$jscomp$0, updateQueue, instance$jscomp$0, currentRef);
                  break;

                case 3:
                  var _updateQueue = current$$1$jscomp$0.updateQueue;

                  if (null !== _updateQueue) {
                    current$$1 = null;
                    if (null !== current$$1$jscomp$0.child) switch (current$$1$jscomp$0.child.tag) {
                      case 5:
                        current$$1 = current$$1$jscomp$0.child.stateNode;
                        break;

                      case 1:
                        current$$1 = current$$1$jscomp$0.child.stateNode;
                    }
                    commitUpdateQueue(current$$1$jscomp$0, _updateQueue, current$$1, currentRef);
                  }

                  break;

                case 5:
                  break;

                case 6:
                  break;

                case 4:
                  break;

                case 12:
                  break;

                case 13:
                case 19:
                case 17:
                case 20:
                  break;

                default:
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
              }
            }

            if (effectTag$jscomp$0 & 128) {
              var ref = nextEffect.ref;

              if (null !== ref) {
                var instance$jscomp$1 = nextEffect.stateNode;

                switch (nextEffect.tag) {
                  case 5:
                    var instanceToUse = instance$jscomp$1;
                    break;

                  default:
                    instanceToUse = instance$jscomp$1;
                }

                "function" === typeof ref ? ref(instanceToUse) : ref.current = instanceToUse;
              }
            }

            effectTag$jscomp$0 & 512 && (rootDoesHavePassiveEffects = true);
            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      nextEffect = null;
      requestPaint();
      executionContext = childExpirationTimeBeforeCommit;
    } else root.current = finishedWork;

    if (rootDoesHavePassiveEffects) rootDoesHavePassiveEffects = false, rootWithPendingPassiveEffects = root, pendingPassiveEffectsExpirationTime = expirationTime, pendingPassiveEffectsRenderPriority = renderPriorityLevel;else for (nextEffect = updateExpirationTimeBeforeCommit; null !== nextEffect;) {
      renderPriorityLevel = nextEffect.nextEffect, nextEffect.nextEffect = null, nextEffect = renderPriorityLevel;
    }
    renderPriorityLevel = root.firstPendingTime;
    0 !== renderPriorityLevel ? (effectTag$jscomp$0 = requestCurrentTime(), effectTag$jscomp$0 = inferPriorityFromExpirationTime(effectTag$jscomp$0, renderPriorityLevel), scheduleCallbackForRoot(root, effectTag$jscomp$0, renderPriorityLevel)) : legacyErrorBoundariesThatAlreadyFailed = null;
    "function" === typeof onCommitFiberRoot && onCommitFiberRoot(finishedWork.stateNode, expirationTime);
    1073741823 === renderPriorityLevel ? root === rootWithNestedUpdates ? nestedUpdateCount++ : (nestedUpdateCount = 0, rootWithNestedUpdates = root) : nestedUpdateCount = 0;
    if (hasUncaughtError) throw hasUncaughtError = false, root = firstUncaughtError, firstUncaughtError = null, root;
    if ((executionContext & LegacyUnbatchedContext) !== NoContext) return null;
    flushSyncCallbackQueue();
    return null;
  }

  function flushPassiveEffects() {
    if (null === rootWithPendingPassiveEffects) return false;
    var root = rootWithPendingPassiveEffects,
        expirationTime = pendingPassiveEffectsExpirationTime,
        renderPriorityLevel = pendingPassiveEffectsRenderPriority;
    rootWithPendingPassiveEffects = null;
    pendingPassiveEffectsExpirationTime = 0;
    pendingPassiveEffectsRenderPriority = 90;
    return runWithPriority(97 < renderPriorityLevel ? 97 : renderPriorityLevel, flushPassiveEffectsImpl.bind(null, root, expirationTime));
  }

  function flushPassiveEffectsImpl(root) {
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Cannot flush passive effects while already rendering."));
    var prevExecutionContext = executionContext;
    executionContext |= CommitContext;

    for (root = root.current.firstEffect; null !== root;) {
      try {
        var finishedWork = root;
        if (0 !== (finishedWork.effectTag & 512)) switch (finishedWork.tag) {
          case 0:
          case 11:
          case 15:
            commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork), commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
        }
      } catch (error) {
        if (null === root) throw ReactError(Error("Should be working on an effect."));
        captureCommitPhaseError(root, error);
      }

      finishedWork = root.nextEffect;
      root.nextEffect = null;
      root = finishedWork;
    }

    executionContext = prevExecutionContext;
    flushSyncCallbackQueue();
    return true;
  }

  function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
    sourceFiber = createCapturedValue(error, sourceFiber);
    sourceFiber = createRootErrorUpdate(rootFiber, sourceFiber, 1073741823);
    enqueueUpdate(rootFiber, sourceFiber);
    rootFiber = markUpdateTimeFromFiberToRoot(rootFiber, 1073741823);
    null !== rootFiber && scheduleCallbackForRoot(rootFiber, 99, 1073741823);
  }

  function captureCommitPhaseError(sourceFiber, error) {
    if (3 === sourceFiber.tag) captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);else for (var fiber = sourceFiber.return; null !== fiber;) {
      if (3 === fiber.tag) {
        captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
        break;
      } else if (1 === fiber.tag) {
        var instance = fiber.stateNode;

        if ("function" === typeof fiber.type.getDerivedStateFromError || "function" === typeof instance.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(instance))) {
          sourceFiber = createCapturedValue(error, sourceFiber);
          sourceFiber = createClassErrorUpdate(fiber, sourceFiber, 1073741823);
          enqueueUpdate(fiber, sourceFiber);
          fiber = markUpdateTimeFromFiberToRoot(fiber, 1073741823);
          null !== fiber && scheduleCallbackForRoot(fiber, 99, 1073741823);
          break;
        }
      }

      fiber = fiber.return;
    }
  }

  function pingSuspendedRoot(root, thenable, suspendedTime) {
    var pingCache = root.pingCache;
    null !== pingCache && pingCache.delete(thenable);
    workInProgressRoot === root && renderExpirationTime === suspendedTime ? workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && 1073741823 === workInProgressRootLatestProcessedExpirationTime && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS ? prepareFreshStack(root, renderExpirationTime) : workInProgressRootHasPendingPing = true : root.lastPendingTime < suspendedTime || (thenable = root.pingTime, 0 !== thenable && thenable < suspendedTime || (root.pingTime = suspendedTime, root.finishedExpirationTime === suspendedTime && (root.finishedExpirationTime = 0, root.finishedWork = null), thenable = requestCurrentTime(), thenable = inferPriorityFromExpirationTime(thenable, suspendedTime), scheduleCallbackForRoot(root, thenable, suspendedTime)));
  }

  function resolveRetryThenable(boundaryFiber, thenable) {
    var retryCache = boundaryFiber.stateNode;
    null !== retryCache && retryCache.delete(thenable);
    retryCache = requestCurrentTime();
    thenable = computeExpirationForFiber(retryCache, boundaryFiber, null);
    retryCache = inferPriorityFromExpirationTime(retryCache, thenable);
    boundaryFiber = markUpdateTimeFromFiberToRoot(boundaryFiber, thenable);
    null !== boundaryFiber && scheduleCallbackForRoot(boundaryFiber, retryCache, thenable);
  }

  var beginWork$$1 = undefined;

  beginWork$$1 = function beginWork$$1(current$$1, workInProgress, renderExpirationTime) {
    var updateExpirationTime = workInProgress.expirationTime;
    if (null !== current$$1) {
      if (current$$1.memoizedProps !== workInProgress.pendingProps || didPerformWorkStackCursor.current) didReceiveUpdate = true;else {
        if (updateExpirationTime < renderExpirationTime) {
          didReceiveUpdate = false;

          switch (workInProgress.tag) {
            case 3:
              pushHostRootContext(workInProgress);
              break;

            case 5:
              pushHostContext(workInProgress);
              break;

            case 1:
              isContextProvider(workInProgress.type) && pushContextProvider(workInProgress);
              break;

            case 4:
              pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
              break;

            case 10:
              pushProvider(workInProgress, workInProgress.memoizedProps.value);
              break;

            case 13:
              if (null !== workInProgress.memoizedState) {
                updateExpirationTime = workInProgress.child.childExpirationTime;
                if (0 !== updateExpirationTime && updateExpirationTime >= renderExpirationTime) return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
                push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                return null !== workInProgress ? workInProgress.sibling : null;
              }

              push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
              break;

            case 19:
              updateExpirationTime = workInProgress.childExpirationTime >= renderExpirationTime;

              if (0 !== (current$$1.effectTag & 64)) {
                if (updateExpirationTime) return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
                workInProgress.effectTag |= 64;
              }

              var renderState = workInProgress.memoizedState;
              null !== renderState && (renderState.rendering = null, renderState.tail = null);
              push(suspenseStackCursor, suspenseStackCursor.current, workInProgress);
              if (!updateExpirationTime) return null;
          }

          return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        }
      }
    } else didReceiveUpdate = false;
    workInProgress.expirationTime = 0;

    switch (workInProgress.tag) {
      case 2:
        updateExpirationTime = workInProgress.type;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        renderState = getMaskedContext(workInProgress, contextStackCursor.current);
        prepareToReadContext(workInProgress, renderExpirationTime);
        renderState = renderWithHooks(null, workInProgress, updateExpirationTime, current$$1, renderState, renderExpirationTime);
        workInProgress.effectTag |= 1;

        if ("object" === typeof renderState && null !== renderState && "function" === typeof renderState.render && undefined === renderState.$$typeof) {
          workInProgress.tag = 1;
          resetHooks();

          if (isContextProvider(updateExpirationTime)) {
            var hasContext = true;
            pushContextProvider(workInProgress);
          } else hasContext = false;

          workInProgress.memoizedState = null !== renderState.state && undefined !== renderState.state ? renderState.state : null;
          var getDerivedStateFromProps = updateExpirationTime.getDerivedStateFromProps;
          "function" === typeof getDerivedStateFromProps && applyDerivedStateFromProps(workInProgress, updateExpirationTime, getDerivedStateFromProps, current$$1);
          renderState.updater = classComponentUpdater;
          workInProgress.stateNode = renderState;
          renderState._reactInternalFiber = workInProgress;
          mountClassInstance(workInProgress, updateExpirationTime, current$$1, renderExpirationTime);
          workInProgress = finishClassComponent(null, workInProgress, updateExpirationTime, true, hasContext, renderExpirationTime);
        } else workInProgress.tag = 0, reconcileChildren(null, workInProgress, renderState, renderExpirationTime), workInProgress = workInProgress.child;

        return workInProgress;

      case 16:
        renderState = workInProgress.elementType;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        renderState = readLazyComponentType(renderState);
        workInProgress.type = renderState;
        hasContext = workInProgress.tag = resolveLazyComponentTag(renderState);
        current$$1 = resolveDefaultProps(renderState, current$$1);

        switch (hasContext) {
          case 0:
            workInProgress = updateFunctionComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 1:
            workInProgress = updateClassComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 11:
            workInProgress = updateForwardRef(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 14:
            workInProgress = updateMemoComponent(null, workInProgress, renderState, resolveDefaultProps(renderState.type, current$$1), updateExpirationTime, renderExpirationTime);
            break;

          default:
            throw ReactError(Error("Element type is invalid. Received a promise that resolves to: " + renderState + ". Lazy element type must resolve to a class or function."));
        }

        return workInProgress;

      case 0:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateFunctionComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 1:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateClassComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 3:
        pushHostRootContext(workInProgress);
        updateExpirationTime = workInProgress.updateQueue;
        if (null === updateExpirationTime) throw ReactError(Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue."));
        renderState = workInProgress.memoizedState;
        renderState = null !== renderState ? renderState.element : null;
        processUpdateQueue(workInProgress, updateExpirationTime, workInProgress.pendingProps, null, renderExpirationTime);
        updateExpirationTime = workInProgress.memoizedState.element;
        updateExpirationTime === renderState ? workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : (reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress = workInProgress.child);
        return workInProgress;

      case 5:
        return pushHostContext(workInProgress), null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), updateExpirationTime = workInProgress.pendingProps.children, markRef(current$$1, workInProgress), reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 6:
        return null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), null;

      case 13:
        return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);

      case 4:
        return pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo), updateExpirationTime = workInProgress.pendingProps, null === current$$1 ? workInProgress.child = reconcileChildFibers(workInProgress, null, updateExpirationTime, renderExpirationTime) : reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 11:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateForwardRef(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 7:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps, renderExpirationTime), workInProgress.child;

      case 8:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 12:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 10:
        a: {
          updateExpirationTime = workInProgress.type._context;
          renderState = workInProgress.pendingProps;
          getDerivedStateFromProps = workInProgress.memoizedProps;
          hasContext = renderState.value;
          pushProvider(workInProgress, hasContext);

          if (null !== getDerivedStateFromProps) {
            var oldValue = getDerivedStateFromProps.value;
            hasContext = is(oldValue, hasContext) ? 0 : ("function" === typeof updateExpirationTime._calculateChangedBits ? updateExpirationTime._calculateChangedBits(oldValue, hasContext) : 1073741823) | 0;

            if (0 === hasContext) {
              if (getDerivedStateFromProps.children === renderState.children && !didPerformWorkStackCursor.current) {
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                break a;
              }
            } else for (oldValue = workInProgress.child, null !== oldValue && (oldValue.return = workInProgress); null !== oldValue;) {
              var list = oldValue.dependencies;

              if (null !== list) {
                getDerivedStateFromProps = oldValue.child;

                for (var dependency = list.firstContext; null !== dependency;) {
                  if (dependency.context === updateExpirationTime && 0 !== (dependency.observedBits & hasContext)) {
                    1 === oldValue.tag && (dependency = createUpdate(renderExpirationTime, null), dependency.tag = 2, enqueueUpdate(oldValue, dependency));
                    oldValue.expirationTime < renderExpirationTime && (oldValue.expirationTime = renderExpirationTime);
                    dependency = oldValue.alternate;
                    null !== dependency && dependency.expirationTime < renderExpirationTime && (dependency.expirationTime = renderExpirationTime);
                    scheduleWorkOnParentPath(oldValue.return, renderExpirationTime);
                    list.expirationTime < renderExpirationTime && (list.expirationTime = renderExpirationTime);
                    break;
                  }

                  dependency = dependency.next;
                }
              } else getDerivedStateFromProps = 10 === oldValue.tag ? oldValue.type === workInProgress.type ? null : oldValue.child : oldValue.child;

              if (null !== getDerivedStateFromProps) getDerivedStateFromProps.return = oldValue;else for (getDerivedStateFromProps = oldValue; null !== getDerivedStateFromProps;) {
                if (getDerivedStateFromProps === workInProgress) {
                  getDerivedStateFromProps = null;
                  break;
                }

                oldValue = getDerivedStateFromProps.sibling;

                if (null !== oldValue) {
                  oldValue.return = getDerivedStateFromProps.return;
                  getDerivedStateFromProps = oldValue;
                  break;
                }

                getDerivedStateFromProps = getDerivedStateFromProps.return;
              }
              oldValue = getDerivedStateFromProps;
            }
          }

          reconcileChildren(current$$1, workInProgress, renderState.children, renderExpirationTime);
          workInProgress = workInProgress.child;
        }

        return workInProgress;

      case 9:
        return renderState = workInProgress.type, hasContext = workInProgress.pendingProps, updateExpirationTime = hasContext.children, prepareToReadContext(workInProgress, renderExpirationTime), renderState = readContext(renderState, hasContext.unstable_observedBits), updateExpirationTime = updateExpirationTime(renderState), workInProgress.effectTag |= 1, reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 14:
        return renderState = workInProgress.type, hasContext = resolveDefaultProps(renderState, workInProgress.pendingProps), hasContext = resolveDefaultProps(renderState.type, hasContext), updateMemoComponent(current$$1, workInProgress, renderState, hasContext, updateExpirationTime, renderExpirationTime);

      case 15:
        return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);

      case 17:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), workInProgress.tag = 1, isContextProvider(updateExpirationTime) ? (current$$1 = true, pushContextProvider(workInProgress)) : current$$1 = false, prepareToReadContext(workInProgress, renderExpirationTime), constructClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), mountClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), finishClassComponent(null, workInProgress, updateExpirationTime, true, current$$1, renderExpirationTime);

      case 19:
        return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
    }

    throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
  };

  var onCommitFiberRoot = null,
      onCommitFiberUnmount = null;

  function injectInternals(internals) {
    if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return false;
    var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (hook.isDisabled || !hook.supportsFiber) return true;

    try {
      var rendererID = hook.inject(internals);

      onCommitFiberRoot = function onCommitFiberRoot(root) {
        try {
          hook.onCommitFiberRoot(rendererID, root, undefined, 64 === (root.current.effectTag & 64));
        } catch (err) {}
      };

      onCommitFiberUnmount = function onCommitFiberUnmount(fiber) {
        try {
          hook.onCommitFiberUnmount(rendererID, fiber);
        } catch (err) {}
      };
    } catch (err) {}

    return true;
  }

  function FiberNode(tag, pendingProps, key, mode) {
    this.tag = tag;
    this.key = key;
    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
    this.index = 0;
    this.ref = null;
    this.pendingProps = pendingProps;
    this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
    this.mode = mode;
    this.effectTag = 0;
    this.lastEffect = this.firstEffect = this.nextEffect = null;
    this.childExpirationTime = this.expirationTime = 0;
    this.alternate = null;
  }

  function createFiber(tag, pendingProps, key, mode) {
    return new FiberNode(tag, pendingProps, key, mode);
  }

  function shouldConstruct(Component) {
    Component = Component.prototype;
    return !(!Component || !Component.isReactComponent);
  }

  function resolveLazyComponentTag(Component) {
    if ("function" === typeof Component) return shouldConstruct(Component) ? 1 : 0;

    if (undefined !== Component && null !== Component) {
      Component = Component.$$typeof;
      if (Component === REACT_FORWARD_REF_TYPE) return 11;
      if (Component === REACT_MEMO_TYPE) return 14;
    }

    return 2;
  }

  function createWorkInProgress(current, pendingProps) {
    var workInProgress = current.alternate;
    null === workInProgress ? (workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode), workInProgress.elementType = current.elementType, workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.pendingProps = pendingProps, workInProgress.effectTag = 0, workInProgress.nextEffect = null, workInProgress.firstEffect = null, workInProgress.lastEffect = null);
    workInProgress.childExpirationTime = current.childExpirationTime;
    workInProgress.expirationTime = current.expirationTime;
    workInProgress.child = current.child;
    workInProgress.memoizedProps = current.memoizedProps;
    workInProgress.memoizedState = current.memoizedState;
    workInProgress.updateQueue = current.updateQueue;
    pendingProps = current.dependencies;
    workInProgress.dependencies = null === pendingProps ? null : {
      expirationTime: pendingProps.expirationTime,
      firstContext: pendingProps.firstContext,
      responders: pendingProps.responders
    };
    workInProgress.sibling = current.sibling;
    workInProgress.index = current.index;
    workInProgress.ref = current.ref;
    return workInProgress;
  }

  function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime) {
    var fiberTag = 2;
    owner = type;
    if ("function" === typeof type) shouldConstruct(type) && (fiberTag = 1);else if ("string" === typeof type) fiberTag = 5;else a: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);

      case REACT_CONCURRENT_MODE_TYPE:
        fiberTag = 8;
        mode |= 7;
        break;

      case REACT_STRICT_MODE_TYPE:
        fiberTag = 8;
        mode |= 1;
        break;

      case REACT_PROFILER_TYPE:
        return type = createFiber(12, pendingProps, key, mode | 8), type.elementType = REACT_PROFILER_TYPE, type.type = REACT_PROFILER_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_TYPE:
        return type = createFiber(13, pendingProps, key, mode), type.type = REACT_SUSPENSE_TYPE, type.elementType = REACT_SUSPENSE_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_LIST_TYPE:
        return type = createFiber(19, pendingProps, key, mode), type.elementType = REACT_SUSPENSE_LIST_TYPE, type.expirationTime = expirationTime, type;

      default:
        if ("object" === typeof type && null !== type) switch (type.$$typeof) {
          case REACT_PROVIDER_TYPE:
            fiberTag = 10;
            break a;

          case REACT_CONTEXT_TYPE:
            fiberTag = 9;
            break a;

          case REACT_FORWARD_REF_TYPE:
            fiberTag = 11;
            break a;

          case REACT_MEMO_TYPE:
            fiberTag = 14;
            break a;

          case REACT_LAZY_TYPE:
            fiberTag = 16;
            owner = null;
            break a;
        }
        throw ReactError(Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (null == type ? type : typeof type) + "."));
    }
    key = createFiber(fiberTag, pendingProps, key, mode);
    key.elementType = type;
    key.type = owner;
    key.expirationTime = expirationTime;
    return key;
  }

  function createFiberFromFragment(elements, mode, expirationTime, key) {
    elements = createFiber(7, elements, key, mode);
    elements.expirationTime = expirationTime;
    return elements;
  }

  function createFiberFromText(content, mode, expirationTime) {
    content = createFiber(6, content, null, mode);
    content.expirationTime = expirationTime;
    return content;
  }

  function createFiberFromPortal(portal, mode, expirationTime) {
    mode = createFiber(4, null !== portal.children ? portal.children : [], portal.key, mode);
    mode.expirationTime = expirationTime;
    mode.stateNode = {
      containerInfo: portal.containerInfo,
      pendingChildren: null,
      implementation: portal.implementation
    };
    return mode;
  }

  function FiberRootNode(containerInfo, tag, hydrate) {
    this.tag = tag;
    this.current = null;
    this.containerInfo = containerInfo;
    this.pingCache = this.pendingChildren = null;
    this.finishedExpirationTime = 0;
    this.finishedWork = null;
    this.timeoutHandle = -1;
    this.pendingContext = this.context = null;
    this.hydrate = hydrate;
    this.callbackNode = this.firstBatch = null;
    this.pingTime = this.lastPendingTime = this.firstPendingTime = this.callbackExpirationTime = 0;
  }

  function findHostInstance(component) {
    var fiber = component._reactInternalFiber;

    if (undefined === fiber) {
      if ("function" === typeof component.render) throw ReactError(Error("Unable to find node on an unmounted component."));
      throw ReactError(Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component)));
    }

    component = findCurrentHostFiber(fiber);
    return null === component ? null : component.stateNode;
  }

  function updateContainer(element, container, parentComponent, callback) {
    var current$$1 = container.current,
        currentTime = requestCurrentTime(),
        suspenseConfig = ReactCurrentBatchConfig.suspense;
    current$$1 = computeExpirationForFiber(currentTime, current$$1, suspenseConfig);
    currentTime = container.current;

    a: if (parentComponent) {
      parentComponent = parentComponent._reactInternalFiber;

      b: {
        if (2 !== isFiberMountedImpl(parentComponent) || 1 !== parentComponent.tag) throw ReactError(Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue."));
        var parentContext = parentComponent;

        do {
          switch (parentContext.tag) {
            case 3:
              parentContext = parentContext.stateNode.context;
              break b;

            case 1:
              if (isContextProvider(parentContext.type)) {
                parentContext = parentContext.stateNode.__reactInternalMemoizedMergedChildContext;
                break b;
              }

          }

          parentContext = parentContext.return;
        } while (null !== parentContext);

        throw ReactError(Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue."));
      }

      if (1 === parentComponent.tag) {
        var Component = parentComponent.type;

        if (isContextProvider(Component)) {
          parentComponent = processChildContext(parentComponent, Component, parentContext);
          break a;
        }
      }

      parentComponent = parentContext;
    } else parentComponent = emptyContextObject;

    null === container.context ? container.context = parentComponent : container.pendingContext = parentComponent;
    container = callback;
    suspenseConfig = createUpdate(current$$1, suspenseConfig);
    suspenseConfig.payload = {
      element: element
    };
    container = undefined === container ? null : container;
    null !== container && (suspenseConfig.callback = container);
    enqueueUpdate(currentTime, suspenseConfig);
    scheduleUpdateOnFiber(currentTime, current$$1);
    return current$$1;
  }

  function _createPortal(children, containerInfo, implementation) {
    var key = 3 < arguments.length && undefined !== arguments[3] ? arguments[3] : null;
    return {
      $$typeof: REACT_PORTAL_TYPE,
      key: null == key ? null : "" + key,
      children: children,
      containerInfo: containerInfo,
      implementation: implementation
    };
  }

  function _inherits(subClass, superClass) {
    if ("function" !== typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
  }

  var getInspectorDataForViewTag = undefined;

  getInspectorDataForViewTag = function getInspectorDataForViewTag() {
    throw ReactError(Error("getInspectorDataForViewTag() is not available in production"));
  };

  function findNodeHandle(componentOrHandle) {
    if (null == componentOrHandle) return null;
    if ("number" === typeof componentOrHandle) return componentOrHandle;
    if (componentOrHandle._nativeTag) return componentOrHandle._nativeTag;
    if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) return componentOrHandle.canonical._nativeTag;
    componentOrHandle = findHostInstance(componentOrHandle);
    return null == componentOrHandle ? componentOrHandle : componentOrHandle.canonical ? componentOrHandle.canonical._nativeTag : componentOrHandle._nativeTag;
  }

  batchedUpdatesImpl = function batchedUpdatesImpl(fn, a) {
    var prevExecutionContext = executionContext;
    executionContext |= 1;

    try {
      return fn(a);
    } finally {
      executionContext = prevExecutionContext, executionContext === NoContext && flushSyncCallbackQueue();
    }
  };

  flushDiscreteUpdatesImpl = function flushDiscreteUpdatesImpl() {
    (executionContext & 49) === NoContext && (flushPendingDiscreteUpdates(), flushPassiveEffects());
  };

  var roots = new Map(),
      ReactNativeRenderer = {
    NativeComponent: function (findNodeHandle, findHostInstance) {
      return function (_React$Component) {
        function ReactNativeComponent() {
          if (!(this instanceof ReactNativeComponent)) throw new TypeError("Cannot call a class as a function");

          var call = _React$Component.apply(this, arguments);

          if (!this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return !call || "object" !== typeof call && "function" !== typeof call ? this : call;
        }

        _inherits(ReactNativeComponent, _React$Component);

        ReactNativeComponent.prototype.blur = function () {
          ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.focus = function () {
          ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.measure = function (callback) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
        };

        ReactNativeComponent.prototype.measureInWindow = function (callback) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
        };

        ReactNativeComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
        };

        ReactNativeComponent.prototype.setNativeProps = function (nativeProps) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          if (null != maybeInstance && !maybeInstance.canonical) {
            var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
            maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
            nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
            null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
          }
        };

        return ReactNativeComponent;
      }(React.Component);
    }(findNodeHandle, findHostInstance),
    findNodeHandle: findNodeHandle,
    dispatchCommand: function dispatchCommand(handle, command, args) {
      null != handle._nativeTag && ReactNativePrivateInterface.UIManager.dispatchViewManagerCommand(handle._nativeTag, command, args);
    },
    setNativeProps: function setNativeProps(handle, nativeProps) {
      null != handle._nativeTag && (nativeProps = diffProperties(null, emptyObject, nativeProps, handle.viewConfig.validAttributes), null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(handle._nativeTag, handle.viewConfig.uiViewClassName, nativeProps));
    },
    render: function render(element, containerTag, callback) {
      var root = roots.get(containerTag);

      if (!root) {
        root = new FiberRootNode(containerTag, 0, false);
        var uninitializedFiber = createFiber(3, null, null, 0);
        root.current = uninitializedFiber;
        uninitializedFiber.stateNode = root;
        roots.set(containerTag, root);
      }

      updateContainer(element, root, null, callback);

      a: if (element = root.current, element.child) switch (element.child.tag) {
        case 5:
          element = element.child.stateNode;
          break a;

        default:
          element = element.child.stateNode;
      } else element = null;

      return element;
    },
    unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
      var root = roots.get(containerTag);
      root && updateContainer(null, root, null, function () {
        roots.delete(containerTag);
      });
    },
    unmountComponentAtNodeAndRemoveContainer: function unmountComponentAtNodeAndRemoveContainer(containerTag) {
      ReactNativeRenderer.unmountComponentAtNode(containerTag);
      ReactNativePrivateInterface.UIManager.removeRootView(containerTag);
    },
    createPortal: function createPortal(children, containerTag) {
      return _createPortal(children, containerTag, null, 2 < arguments.length && undefined !== arguments[2] ? arguments[2] : null);
    },
    unstable_batchedUpdates: batchedUpdates,
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
      NativeMethodsMixin: function (findNodeHandle, findHostInstance) {
        return {
          measure: function measure(callback) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
          },
          measureInWindow: function measureInWindow(callback) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
          },
          measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
          },
          setNativeProps: function setNativeProps(nativeProps) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            if (null != maybeInstance && !maybeInstance.canonical) {
              var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
              maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
              nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
              null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
            }
          },
          focus: function focus() {
            ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
          },
          blur: function blur() {
            ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
          }
        };
      }(findNodeHandle, findHostInstance),
      computeComponentStackForErrorReporting: function computeComponentStackForErrorReporting(reactTag) {
        return (reactTag = getInstanceFromTag(reactTag)) ? getStackByFiberInDevAndProd(reactTag) : "";
      }
    }
  };

  (function (devToolsConfig) {
    var _findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
    return injectInternals(_extends({}, devToolsConfig, {
      overrideHookState: null,
      overrideProps: null,
      setSuspenseHandler: null,
      scheduleUpdate: null,
      currentDispatcherRef: ReactSharedInternals.ReactCurrentDispatcher,
      findHostInstanceByFiber: function findHostInstanceByFiber(fiber) {
        fiber = findCurrentHostFiber(fiber);
        return null === fiber ? null : fiber.stateNode;
      },
      findFiberByHostInstance: function findFiberByHostInstance(instance) {
        return _findFiberByHostInstance ? _findFiberByHostInstance(instance) : null;
      },
      findHostInstancesForRefresh: null,
      scheduleRefresh: null,
      scheduleRoot: null,
      setRefreshHandler: null,
      getCurrentFiber: null
    }));
  })({
    findFiberByHostInstance: getInstanceFromTag,
    getInspectorDataForViewTag: getInspectorDataForViewTag,
    bundleType: 0,
    version: "16.8.6",
    rendererPackageName: "react-native-renderer"
  });

  var ReactNativeRenderer$2 = {
    default: ReactNativeRenderer
  },
      ReactNativeRenderer$3 = ReactNativeRenderer$2 && ReactNativeRenderer || ReactNativeRenderer$2;
  module.exports = ReactNativeRenderer$3.default || ReactNativeRenderer$3;
},14443,[14344,14446,14566,10297,14575]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  _$$_REQUIRE(_dependencyMap[0]);
},14446,[10120]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (global.GLOBAL === undefined) {
    global.GLOBAL = global;
  }

  if (global.window === undefined) {
    global.window = global;
  }

  if (global.self === undefined) {
    global.self = global;
  }

  global.process = global.process || {};
  global.process.env = global.process.env || {};

  if (!global.process.env.NODE_ENV) {
    global.process.env.NODE_ENV = 'production';
  }
},14449,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (global.__RCTProfileIsProfiling) {
    var Systrace = _$$_REQUIRE(_dependencyMap[0]);

    Systrace.installReactHook();
    Systrace.setEnabled(true);
  }
},14452,[10054]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ExceptionsManager = _$$_REQUIRE(_dependencyMap[0]);

  ExceptionsManager.installConsoleErrorReporter();

  if (!global.__fbDisableExceptionsManager) {
    var handleError = function handleError(e, isFatal) {
      try {
        ExceptionsManager.handleException(e, isFatal);
      } catch (ee) {
        throw e;
      }
    };

    var ErrorUtils = _$$_REQUIRE(_dependencyMap[1]);

    ErrorUtils.setGlobalHandler(handleError);
  }
},14455,[10141,10051]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  var setPrototypeOf = _$$_REQUIRE(_dependencyMap[1]);

  var isNativeFunction = _$$_REQUIRE(_dependencyMap[2]);

  var construct = _$$_REQUIRE(_dependencyMap[3]);

  function _wrapNativeSuper(Class) {
    var _cache = typeof Map === "function" ? new Map() : undefined;

    module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {
      if (Class === null || !isNativeFunction(Class)) return Class;

      if (typeof Class !== "function") {
        throw new TypeError("Super expression must either be null or a function");
      }

      if (typeof _cache !== "undefined") {
        if (_cache.has(Class)) return _cache.get(Class);

        _cache.set(Class, Wrapper);
      }

      function Wrapper() {
        return construct(Class, arguments, getPrototypeOf(this).constructor);
      }

      Wrapper.prototype = Object.create(Class.prototype, {
        constructor: {
          value: Wrapper,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
      return setPrototypeOf(Wrapper, Class);
    };

    return _wrapNativeSuper(Class);
  }

  module.exports = _wrapNativeSuper;
},14458,[14377,14389,14461,14464]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _isNativeFunction(fn) {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
  }

  module.exports = _isNativeFunction;
},14461,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var setPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  function isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  function _construct(Parent, args, Class) {
    if (isNativeReflectConstruct()) {
      module.exports = _construct = Reflect.construct;
    } else {
      module.exports = _construct = function _construct(Parent, args, Class) {
        var a = [null];
        a.push.apply(a, args);
        var Constructor = Function.bind.apply(Parent, a);
        var instance = new Constructor();
        if (Class) setPrototypeOf(instance, Class.prototype);
        return instance;
      };
    }

    return _construct.apply(null, arguments);
  }

  module.exports = _construct;
},14464,[14389]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var Platform = _$$_REQUIRE(_dependencyMap[2]);

  var NativeModule = TurboModuleRegistry.getEnforcing('ExceptionsManager');
  var ExceptionsManager = {
    reportFatalException: function reportFatalException(message, stack, exceptionId) {
      NativeModule.reportFatalException(message, stack, exceptionId);
    },
    reportSoftException: function reportSoftException(message, stack, exceptionId) {
      NativeModule.reportSoftException(message, stack, exceptionId);
    },
    updateExceptionMessage: function updateExceptionMessage(message, stack, exceptionId) {
      NativeModule.updateExceptionMessage(message, stack, exceptionId);
    },
    dismissRedbox: function dismissRedbox() {
      if (NativeModule.dismissRedbox) {
        NativeModule.dismissRedbox();
      }
    },
    reportException: function reportException(data) {
      if (NativeModule.reportException) {
        NativeModule.reportException(data);
        return;
      }

      if (data.isFatal) {
        ExceptionsManager.reportFatalException(data.message, data.stack, data.id);
      } else {
        ExceptionsManager.reportSoftException(data.message, data.stack, data.id);
      }
    }
  };
  var _default = ExceptionsManager;
  exports.default = _default;
},14467,[14308,14341,10066]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillGlobal = _require.polyfillGlobal;

  polyfillGlobal('Promise', function () {
    return _$$_REQUIRE(_dependencyMap[1]);
  });
},14470,[14473,10159]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[0]);

  function polyfillObjectProperty(object, name, getValue) {
    var descriptor = Object.getOwnPropertyDescriptor(object, name);

    var _ref = descriptor || {},
        enumerable = _ref.enumerable,
        writable = _ref.writable,
        configurable = _ref.configurable;

    if (descriptor && !configurable) {
      return;
    }

    defineLazyObjectProperty(object, name, {
      get: getValue,
      enumerable: enumerable !== false,
      writable: writable !== false
    });
  }

  function polyfillGlobal(name, getValue) {
    polyfillObjectProperty(global, name, getValue);
  }

  module.exports = {
    polyfillObjectProperty: polyfillObjectProperty,
    polyfillGlobal: polyfillGlobal
  };
},14473,[10084]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Promise = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = Promise;

  Promise.prototype['finally'] = function (f) {
    return this.then(function (value) {
      return Promise.resolve(f()).then(function () {
        return value;
      });
    }, function (err) {
      return Promise.resolve(f()).then(function () {
        throw err;
      });
    });
  };
},14476,[10168]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillGlobal = _require.polyfillGlobal;

  polyfillGlobal('regeneratorRuntime', function () {
    delete global.regeneratorRuntime;
    return _$$_REQUIRE(_dependencyMap[1]);
  });
},14479,[14473,14482]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var runtime = function (exports) {
    "use strict";

    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var undefined;
    var $Symbol = typeof Symbol === "function" ? Symbol : {};
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

    function wrap(innerFn, outerFn, self, tryLocsList) {
      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
      var generator = Object.create(protoGenerator.prototype);
      var context = new Context(tryLocsList || []);
      generator._invoke = makeInvokeMethod(innerFn, self, context);
      return generator;
    }

    exports.wrap = wrap;

    function tryCatch(fn, obj, arg) {
      try {
        return {
          type: "normal",
          arg: fn.call(obj, arg)
        };
      } catch (err) {
        return {
          type: "throw",
          arg: err
        };
      }
    }

    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";
    var ContinueSentinel = {};

    function Generator() {}

    function GeneratorFunction() {}

    function GeneratorFunctionPrototype() {}

    var IteratorPrototype = {};

    IteratorPrototype[iteratorSymbol] = function () {
      return this;
    };

    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
      IteratorPrototype = NativeIteratorPrototype;
    }

    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
    GeneratorFunctionPrototype.constructor = GeneratorFunction;
    GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

    function defineIteratorMethods(prototype) {
      ["next", "throw", "return"].forEach(function (method) {
        prototype[method] = function (arg) {
          return this._invoke(method, arg);
        };
      });
    }

    exports.isGeneratorFunction = function (genFun) {
      var ctor = typeof genFun === "function" && genFun.constructor;
      return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
    };

    exports.mark = function (genFun) {
      if (Object.setPrototypeOf) {
        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
      } else {
        genFun.__proto__ = GeneratorFunctionPrototype;

        if (!(toStringTagSymbol in genFun)) {
          genFun[toStringTagSymbol] = "GeneratorFunction";
        }
      }

      genFun.prototype = Object.create(Gp);
      return genFun;
    };

    exports.awrap = function (arg) {
      return {
        __await: arg
      };
    };

    function AsyncIterator(generator, PromiseImpl) {
      function invoke(method, arg, resolve, reject) {
        var record = tryCatch(generator[method], generator, arg);

        if (record.type === "throw") {
          reject(record.arg);
        } else {
          var result = record.arg;
          var value = result.value;

          if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
            return PromiseImpl.resolve(value.__await).then(function (value) {
              invoke("next", value, resolve, reject);
            }, function (err) {
              invoke("throw", err, resolve, reject);
            });
          }

          return PromiseImpl.resolve(value).then(function (unwrapped) {
            result.value = unwrapped;
            resolve(result);
          }, function (error) {
            return invoke("throw", error, resolve, reject);
          });
        }
      }

      var previousPromise;

      function enqueue(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }

        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }

      this._invoke = enqueue;
    }

    defineIteratorMethods(AsyncIterator.prototype);

    AsyncIterator.prototype[asyncIteratorSymbol] = function () {
      return this;
    };

    exports.AsyncIterator = AsyncIterator;

    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
      if (PromiseImpl === undefined) PromiseImpl = Promise;
      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
      return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
        return result.done ? result.value : iter.next();
      });
    };

    function makeInvokeMethod(innerFn, self, context) {
      var state = GenStateSuspendedStart;
      return function invoke(method, arg) {
        if (state === GenStateExecuting) {
          throw new Error("Generator is already running");
        }

        if (state === GenStateCompleted) {
          if (method === "throw") {
            throw arg;
          }

          return doneResult();
        }

        context.method = method;
        context.arg = arg;

        while (true) {
          var delegate = context.delegate;

          if (delegate) {
            var delegateResult = maybeInvokeDelegate(delegate, context);

            if (delegateResult) {
              if (delegateResult === ContinueSentinel) continue;
              return delegateResult;
            }
          }

          if (context.method === "next") {
            context.sent = context._sent = context.arg;
          } else if (context.method === "throw") {
            if (state === GenStateSuspendedStart) {
              state = GenStateCompleted;
              throw context.arg;
            }

            context.dispatchException(context.arg);
          } else if (context.method === "return") {
            context.abrupt("return", context.arg);
          }

          state = GenStateExecuting;
          var record = tryCatch(innerFn, self, context);

          if (record.type === "normal") {
            state = context.done ? GenStateCompleted : GenStateSuspendedYield;

            if (record.arg === ContinueSentinel) {
              continue;
            }

            return {
              value: record.arg,
              done: context.done
            };
          } else if (record.type === "throw") {
            state = GenStateCompleted;
            context.method = "throw";
            context.arg = record.arg;
          }
        }
      };
    }

    function maybeInvokeDelegate(delegate, context) {
      var method = delegate.iterator[context.method];

      if (method === undefined) {
        context.delegate = null;

        if (context.method === "throw") {
          if (delegate.iterator["return"]) {
            context.method = "return";
            context.arg = undefined;
            maybeInvokeDelegate(delegate, context);

            if (context.method === "throw") {
              return ContinueSentinel;
            }
          }

          context.method = "throw";
          context.arg = new TypeError("The iterator does not provide a 'throw' method");
        }

        return ContinueSentinel;
      }

      var record = tryCatch(method, delegate.iterator, context.arg);

      if (record.type === "throw") {
        context.method = "throw";
        context.arg = record.arg;
        context.delegate = null;
        return ContinueSentinel;
      }

      var info = record.arg;

      if (!info) {
        context.method = "throw";
        context.arg = new TypeError("iterator result is not an object");
        context.delegate = null;
        return ContinueSentinel;
      }

      if (info.done) {
        context[delegate.resultName] = info.value;
        context.next = delegate.nextLoc;

        if (context.method !== "return") {
          context.method = "next";
          context.arg = undefined;
        }
      } else {
        return info;
      }

      context.delegate = null;
      return ContinueSentinel;
    }

    defineIteratorMethods(Gp);
    Gp[toStringTagSymbol] = "Generator";

    Gp[iteratorSymbol] = function () {
      return this;
    };

    Gp.toString = function () {
      return "[object Generator]";
    };

    function pushTryEntry(locs) {
      var entry = {
        tryLoc: locs[0]
      };

      if (1 in locs) {
        entry.catchLoc = locs[1];
      }

      if (2 in locs) {
        entry.finallyLoc = locs[2];
        entry.afterLoc = locs[3];
      }

      this.tryEntries.push(entry);
    }

    function resetTryEntry(entry) {
      var record = entry.completion || {};
      record.type = "normal";
      delete record.arg;
      entry.completion = record;
    }

    function Context(tryLocsList) {
      this.tryEntries = [{
        tryLoc: "root"
      }];
      tryLocsList.forEach(pushTryEntry, this);
      this.reset(true);
    }

    exports.keys = function (object) {
      var keys = [];

      for (var key in object) {
        keys.push(key);
      }

      keys.reverse();
      return function next() {
        while (keys.length) {
          var key = keys.pop();

          if (key in object) {
            next.value = key;
            next.done = false;
            return next;
          }
        }

        next.done = true;
        return next;
      };
    };

    function values(iterable) {
      if (iterable) {
        var iteratorMethod = iterable[iteratorSymbol];

        if (iteratorMethod) {
          return iteratorMethod.call(iterable);
        }

        if (typeof iterable.next === "function") {
          return iterable;
        }

        if (!isNaN(iterable.length)) {
          var i = -1,
              next = function next() {
            while (++i < iterable.length) {
              if (hasOwn.call(iterable, i)) {
                next.value = iterable[i];
                next.done = false;
                return next;
              }
            }

            next.value = undefined;
            next.done = true;
            return next;
          };

          return next.next = next;
        }
      }

      return {
        next: doneResult
      };
    }

    exports.values = values;

    function doneResult() {
      return {
        value: undefined,
        done: true
      };
    }

    Context.prototype = {
      constructor: Context,
      reset: function reset(skipTempReset) {
        this.prev = 0;
        this.next = 0;
        this.sent = this._sent = undefined;
        this.done = false;
        this.delegate = null;
        this.method = "next";
        this.arg = undefined;
        this.tryEntries.forEach(resetTryEntry);

        if (!skipTempReset) {
          for (var name in this) {
            if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
              this[name] = undefined;
            }
          }
        }
      },
      stop: function stop() {
        this.done = true;
        var rootEntry = this.tryEntries[0];
        var rootRecord = rootEntry.completion;

        if (rootRecord.type === "throw") {
          throw rootRecord.arg;
        }

        return this.rval;
      },
      dispatchException: function dispatchException(exception) {
        if (this.done) {
          throw exception;
        }

        var context = this;

        function handle(loc, caught) {
          record.type = "throw";
          record.arg = exception;
          context.next = loc;

          if (caught) {
            context.method = "next";
            context.arg = undefined;
          }

          return !!caught;
        }

        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          var record = entry.completion;

          if (entry.tryLoc === "root") {
            return handle("end");
          }

          if (entry.tryLoc <= this.prev) {
            var hasCatch = hasOwn.call(entry, "catchLoc");
            var hasFinally = hasOwn.call(entry, "finallyLoc");

            if (hasCatch && hasFinally) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              } else if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else if (hasCatch) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              }
            } else if (hasFinally) {
              if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else {
              throw new Error("try statement without catch or finally");
            }
          }
        }
      },
      abrupt: function abrupt(type, arg) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
            var finallyEntry = entry;
            break;
          }
        }

        if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
          finallyEntry = null;
        }

        var record = finallyEntry ? finallyEntry.completion : {};
        record.type = type;
        record.arg = arg;

        if (finallyEntry) {
          this.method = "next";
          this.next = finallyEntry.finallyLoc;
          return ContinueSentinel;
        }

        return this.complete(record);
      },
      complete: function complete(record, afterLoc) {
        if (record.type === "throw") {
          throw record.arg;
        }

        if (record.type === "break" || record.type === "continue") {
          this.next = record.arg;
        } else if (record.type === "return") {
          this.rval = this.arg = record.arg;
          this.method = "return";
          this.next = "end";
        } else if (record.type === "normal" && afterLoc) {
          this.next = afterLoc;
        }

        return ContinueSentinel;
      },
      finish: function finish(finallyLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.finallyLoc === finallyLoc) {
            this.complete(entry.completion, entry.afterLoc);
            resetTryEntry(entry);
            return ContinueSentinel;
          }
        }
      },
      "catch": function _catch(tryLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc === tryLoc) {
            var record = entry.completion;

            if (record.type === "throw") {
              var thrown = record.arg;
              resetTryEntry(entry);
            }

            return thrown;
          }
        }

        throw new Error("illegal catch attempt");
      },
      delegateYield: function delegateYield(iterable, resultName, nextLoc) {
        this.delegate = {
          iterator: values(iterable),
          resultName: resultName,
          nextLoc: nextLoc
        };

        if (this.method === "next") {
          this.arg = undefined;
        }

        return ContinueSentinel;
      }
    };
    return exports;
  }(typeof module === "object" ? module.exports : {});

  try {
    regeneratorRuntime = runtime;
  } catch (accidentalStrictMode) {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
},14482,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (!global.RN$Bridgeless) {
    var _require = _$$_REQUIRE(_dependencyMap[0]),
        polyfillGlobal = _require.polyfillGlobal;

    var defineLazyTimer = function defineLazyTimer(name) {
      polyfillGlobal(name, function () {
        return _$$_REQUIRE(_dependencyMap[1])[name];
      });
    };

    defineLazyTimer('setTimeout');
    defineLazyTimer('setInterval');
    defineLazyTimer('setImmediate');
    defineLazyTimer('clearTimeout');
    defineLazyTimer('clearInterval');
    defineLazyTimer('clearImmediate');
    defineLazyTimer('requestAnimationFrame');
    defineLazyTimer('cancelAnimationFrame');
    defineLazyTimer('requestIdleCallback');
    defineLazyTimer('cancelIdleCallback');
  }
},14485,[14473,10063]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('Timing');

  exports.default = _default;
},14488,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var performance = _$$_REQUIRE(_dependencyMap[0]);

  var performanceNow;

  if (performance.now) {
    performanceNow = function performanceNow() {
      return performance.now();
    };
  } else {
    performanceNow = function performanceNow() {
      return Date.now();
    };
  }

  module.exports = performanceNow;
},14491,[14494]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ExecutionEnvironment = _$$_REQUIRE(_dependencyMap[0]);

  var performance;

  if (ExecutionEnvironment.canUseDOM) {
    performance = window.performance || window.msPerformance || window.webkitPerformance;
  }

  module.exports = performance || {};
},14494,[14497]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
  var ExecutionEnvironment = {
    canUseDOM: canUseDOM,
    canUseWorkers: typeof Worker !== 'undefined',
    canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
    canUseViewport: canUseDOM && !!window.screen,
    isInWorker: !canUseDOM
  };
  module.exports = ExecutionEnvironment;
},14497,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillGlobal = _require.polyfillGlobal;

  polyfillGlobal('XMLHttpRequest', function () {
    return _$$_REQUIRE(_dependencyMap[1]);
  });
  polyfillGlobal('FormData', function () {
    return _$$_REQUIRE(_dependencyMap[2]);
  });
  polyfillGlobal('fetch', function () {
    return _$$_REQUIRE(_dependencyMap[3]).fetch;
  });
  polyfillGlobal('Headers', function () {
    return _$$_REQUIRE(_dependencyMap[3]).Headers;
  });
  polyfillGlobal('Request', function () {
    return _$$_REQUIRE(_dependencyMap[3]).Request;
  });
  polyfillGlobal('Response', function () {
    return _$$_REQUIRE(_dependencyMap[3]).Response;
  });
  polyfillGlobal('WebSocket', function () {
    return _$$_REQUIRE(_dependencyMap[4]);
  });
  polyfillGlobal('Blob', function () {
    return _$$_REQUIRE(_dependencyMap[5]);
  });
  polyfillGlobal('File', function () {
    return _$$_REQUIRE(_dependencyMap[6]);
  });
  polyfillGlobal('FileReader', function () {
    return _$$_REQUIRE(_dependencyMap[7]);
  });
  polyfillGlobal('URL', function () {
    return _$$_REQUIRE(_dependencyMap[8]).URL;
  });
  polyfillGlobal('URLSearchParams', function () {
    return _$$_REQUIRE(_dependencyMap[8]).URLSearchParams;
  });
  polyfillGlobal('AbortController', function () {
    return _$$_REQUIRE(_dependencyMap[9]).AbortController;
  });
  polyfillGlobal('AbortSignal', function () {
    return _$$_REQUIRE(_dependencyMap[9]).AbortSignal;
  });
},14500,[14473,10177,10219,10222,10228,10210,10234,10237,10240,14521]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('BlobModule');

  exports.default = _default;
},14503,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, '__esModule', {
    value: true
  });
  var privateData = new WeakMap();
  var wrappers = new WeakMap();

  function pd(event) {
    var retv = privateData.get(event);

    if (retv === null) {
      throw new TypeError("'this' is expected an Event object, but got " + JSON.stringify(event));
    }

    return retv;
  }

  function setCancelFlag(data) {
    if (data.passiveListener != null) {
      if (typeof console !== "undefined" && true) {}

      return;
    }

    if (!data.event.cancelable) {
      return;
    }

    data.canceled = true;

    if (typeof data.event.preventDefault === "function") {
      data.event.preventDefault();
    }
  }

  function Event(eventTarget, event) {
    privateData.set(this, {
      eventTarget: eventTarget,
      event: event,
      eventPhase: 2,
      currentTarget: eventTarget,
      canceled: false,
      stopped: false,
      immediateStopped: false,
      passiveListener: null,
      timeStamp: event.timeStamp || Date.now()
    });
    Object.defineProperty(this, "isTrusted", {
      value: false,
      enumerable: true
    });
    var keys = Object.keys(event);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!(key in this)) {
        Object.defineProperty(this, key, defineRedirectDescriptor(key));
      }
    }
  }

  Event.prototype = {
    get type() {
      return pd(this).event.type;
    },

    get target() {
      return pd(this).eventTarget;
    },

    get currentTarget() {
      return pd(this).currentTarget;
    },

    composedPath: function composedPath() {
      var currentTarget = pd(this).currentTarget;

      if (currentTarget == null) {
        return [];
      }

      return [currentTarget];
    },

    get NONE() {
      return 0;
    },

    get CAPTURING_PHASE() {
      return 1;
    },

    get AT_TARGET() {
      return 2;
    },

    get BUBBLING_PHASE() {
      return 3;
    },

    get eventPhase() {
      return pd(this).eventPhase;
    },

    stopPropagation: function stopPropagation() {
      var data = pd(this);
      data.stopped = true;

      if (typeof data.event.stopPropagation === "function") {
        data.event.stopPropagation();
      }
    },
    stopImmediatePropagation: function stopImmediatePropagation() {
      var data = pd(this);
      data.stopped = true;
      data.immediateStopped = true;

      if (typeof data.event.stopImmediatePropagation === "function") {
        data.event.stopImmediatePropagation();
      }
    },

    get bubbles() {
      return Boolean(pd(this).event.bubbles);
    },

    get cancelable() {
      return Boolean(pd(this).event.cancelable);
    },

    preventDefault: function preventDefault() {
      setCancelFlag(pd(this));
    },

    get defaultPrevented() {
      return pd(this).canceled;
    },

    get composed() {
      return Boolean(pd(this).event.composed);
    },

    get timeStamp() {
      return pd(this).timeStamp;
    },

    get srcElement() {
      return pd(this).eventTarget;
    },

    get cancelBubble() {
      return pd(this).stopped;
    },

    set cancelBubble(value) {
      if (!value) {
        return;
      }

      var data = pd(this);
      data.stopped = true;

      if (typeof data.event.cancelBubble === "boolean") {
        data.event.cancelBubble = true;
      }
    },

    get returnValue() {
      return !pd(this).canceled;
    },

    set returnValue(value) {
      if (!value) {
        setCancelFlag(pd(this));
      }
    },

    initEvent: function initEvent() {}
  };
  Object.defineProperty(Event.prototype, "constructor", {
    value: Event,
    configurable: true,
    writable: true
  });

  if (typeof window !== "undefined" && typeof window.Event !== "undefined" && typeof window.Event.prototype === "object") {
    Object.setPrototypeOf(Event.prototype, window.Event.prototype);
    wrappers.set(window.Event.prototype, Event);
  }

  function defineRedirectDescriptor(key) {
    return {
      get: function get() {
        return pd(this).event[key];
      },
      set: function set(value) {
        pd(this).event[key] = value;
      },
      configurable: true,
      enumerable: true
    };
  }

  function defineCallDescriptor(key) {
    return {
      value: function value() {
        var event = pd(this).event;
        return event[key].apply(event, arguments);
      },
      configurable: true,
      enumerable: true
    };
  }

  function defineWrapper(BaseEvent, proto) {
    var keys = Object.keys(proto);

    if (keys.length === 0) {
      return BaseEvent;
    }

    function CustomEvent(eventTarget, event) {
      BaseEvent.call(this, eventTarget, event);
    }

    CustomEvent.prototype = Object.create(BaseEvent.prototype, {
      constructor: {
        value: CustomEvent,
        configurable: true,
        writable: true
      }
    });

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!(key in BaseEvent.prototype)) {
        var descriptor = Object.getOwnPropertyDescriptor(proto, key);
        var isFunc = typeof descriptor.value === "function";
        Object.defineProperty(CustomEvent.prototype, key, isFunc ? defineCallDescriptor(key) : defineRedirectDescriptor(key));
      }
    }

    return CustomEvent;
  }

  function getWrapper(proto) {
    if (proto == null || proto === Object.prototype) {
      return Event;
    }

    var wrapper = wrappers.get(proto);

    if (wrapper == null) {
      wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);
      wrappers.set(proto, wrapper);
    }

    return wrapper;
  }

  function wrapEvent(eventTarget, event) {
    var Wrapper = getWrapper(Object.getPrototypeOf(event));
    return new Wrapper(eventTarget, event);
  }

  function isStopped(event) {
    return pd(event).immediateStopped;
  }

  function setEventPhase(event, eventPhase) {
    pd(event).eventPhase = eventPhase;
  }

  function setCurrentTarget(event, currentTarget) {
    pd(event).currentTarget = currentTarget;
  }

  function setPassiveListener(event, passiveListener) {
    pd(event).passiveListener = passiveListener;
  }

  var listenersMap = new WeakMap();
  var CAPTURE = 1;
  var BUBBLE = 2;
  var ATTRIBUTE = 3;

  function isObject(x) {
    return x !== null && typeof x === "object";
  }

  function getListeners(eventTarget) {
    var listeners = listenersMap.get(eventTarget);

    if (listeners == null) {
      throw new TypeError("'this' is expected an EventTarget object, but got another value.");
    }

    return listeners;
  }

  function defineEventAttributeDescriptor(eventName) {
    return {
      get: function get() {
        var listeners = getListeners(this);
        var node = listeners.get(eventName);

        while (node != null) {
          if (node.listenerType === ATTRIBUTE) {
            return node.listener;
          }

          node = node.next;
        }

        return null;
      },
      set: function set(listener) {
        if (typeof listener !== "function" && !isObject(listener)) {
          listener = null;
        }

        var listeners = getListeners(this);
        var prev = null;
        var node = listeners.get(eventName);

        while (node != null) {
          if (node.listenerType === ATTRIBUTE) {
            if (prev !== null) {
              prev.next = node.next;
            } else if (node.next !== null) {
              listeners.set(eventName, node.next);
            } else {
              listeners.delete(eventName);
            }
          } else {
            prev = node;
          }

          node = node.next;
        }

        if (listener !== null) {
          var newNode = {
            listener: listener,
            listenerType: ATTRIBUTE,
            passive: false,
            once: false,
            next: null
          };

          if (prev === null) {
            listeners.set(eventName, newNode);
          } else {
            prev.next = newNode;
          }
        }
      },
      configurable: true,
      enumerable: true
    };
  }

  function defineEventAttribute(eventTargetPrototype, eventName) {
    Object.defineProperty(eventTargetPrototype, "on" + eventName, defineEventAttributeDescriptor(eventName));
  }

  function defineCustomEventTarget(eventNames) {
    function CustomEventTarget() {
      EventTarget.call(this);
    }

    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {
      constructor: {
        value: CustomEventTarget,
        configurable: true,
        writable: true
      }
    });

    for (var i = 0; i < eventNames.length; ++i) {
      defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);
    }

    return CustomEventTarget;
  }

  function EventTarget() {
    if (this instanceof EventTarget) {
      listenersMap.set(this, new Map());
      return;
    }

    if (arguments.length === 1 && Array.isArray(arguments[0])) {
      return defineCustomEventTarget(arguments[0]);
    }

    if (arguments.length > 0) {
      var types = new Array(arguments.length);

      for (var i = 0; i < arguments.length; ++i) {
        types[i] = arguments[i];
      }

      return defineCustomEventTarget(types);
    }

    throw new TypeError("Cannot call a class as a function");
  }

  EventTarget.prototype = {
    addEventListener: function addEventListener(eventName, listener, options) {
      if (listener == null) {
        return;
      }

      if (typeof listener !== "function" && !isObject(listener)) {
        throw new TypeError("'listener' should be a function or an object.");
      }

      var listeners = getListeners(this);
      var optionsIsObj = isObject(options);
      var capture = optionsIsObj ? Boolean(options.capture) : Boolean(options);
      var listenerType = capture ? CAPTURE : BUBBLE;
      var newNode = {
        listener: listener,
        listenerType: listenerType,
        passive: optionsIsObj && Boolean(options.passive),
        once: optionsIsObj && Boolean(options.once),
        next: null
      };
      var node = listeners.get(eventName);

      if (node === undefined) {
        listeners.set(eventName, newNode);
        return;
      }

      var prev = null;

      while (node != null) {
        if (node.listener === listener && node.listenerType === listenerType) {
          return;
        }

        prev = node;
        node = node.next;
      }

      prev.next = newNode;
    },
    removeEventListener: function removeEventListener(eventName, listener, options) {
      if (listener == null) {
        return;
      }

      var listeners = getListeners(this);
      var capture = isObject(options) ? Boolean(options.capture) : Boolean(options);
      var listenerType = capture ? CAPTURE : BUBBLE;
      var prev = null;
      var node = listeners.get(eventName);

      while (node != null) {
        if (node.listener === listener && node.listenerType === listenerType) {
          if (prev !== null) {
            prev.next = node.next;
          } else if (node.next !== null) {
            listeners.set(eventName, node.next);
          } else {
            listeners.delete(eventName);
          }

          return;
        }

        prev = node;
        node = node.next;
      }
    },
    dispatchEvent: function dispatchEvent(event) {
      if (event == null || typeof event.type !== "string") {
        throw new TypeError('"event.type" should be a string.');
      }

      var listeners = getListeners(this);
      var eventName = event.type;
      var node = listeners.get(eventName);

      if (node == null) {
        return true;
      }

      var wrappedEvent = wrapEvent(this, event);
      var prev = null;

      while (node != null) {
        if (node.once) {
          if (prev !== null) {
            prev.next = node.next;
          } else if (node.next !== null) {
            listeners.set(eventName, node.next);
          } else {
            listeners.delete(eventName);
          }
        } else {
          prev = node;
        }

        setPassiveListener(wrappedEvent, node.passive ? node.listener : null);

        if (typeof node.listener === "function") {
          try {
            node.listener.call(this, wrappedEvent);
          } catch (err) {
            if (typeof console !== "undefined" && true) {}
          }
        } else if (node.listenerType !== ATTRIBUTE && typeof node.listener.handleEvent === "function") {
          node.listener.handleEvent(wrappedEvent);
        }

        if (isStopped(wrappedEvent)) {
          break;
        }

        node = node.next;
      }

      setPassiveListener(wrappedEvent, null);
      setEventPhase(wrappedEvent, 0);
      setCurrentTarget(wrappedEvent, null);
      return !wrappedEvent.defaultPrevented;
    }
  };
  Object.defineProperty(EventTarget.prototype, "constructor", {
    value: EventTarget,
    configurable: true,
    writable: true
  });

  if (typeof window !== "undefined" && typeof window.EventTarget !== "undefined") {
    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);
  }

  exports.defineEventAttribute = defineEventAttribute;
  exports.EventTarget = EventTarget;
  exports.default = EventTarget;
  module.exports = EventTarget;
  module.exports.EventTarget = module.exports["default"] = EventTarget;
  module.exports.defineEventAttribute = defineEventAttribute;
},14506,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('Networking');

  exports.default = _default;
},14509,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.WHATWGFetch = {});
  })(this, function (exports) {
    'use strict';

    var support = {
      searchParams: 'URLSearchParams' in self,
      iterable: 'Symbol' in self && 'iterator' in Symbol,
      blob: 'FileReader' in self && 'Blob' in self && function () {
        try {
          new Blob();
          return true;
        } catch (e) {
          return false;
        }
      }(),
      formData: 'FormData' in self,
      arrayBuffer: 'ArrayBuffer' in self
    };

    function isDataView(obj) {
      return obj && DataView.prototype.isPrototypeOf(obj);
    }

    if (support.arrayBuffer) {
      var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];

      var isArrayBufferView = ArrayBuffer.isView || function (obj) {
        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
      };
    }

    function normalizeName(name) {
      if (typeof name !== 'string') {
        name = String(name);
      }

      if (/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(name)) {
        throw new TypeError('Invalid character in header field name');
      }

      return name.toLowerCase();
    }

    function normalizeValue(value) {
      if (typeof value !== 'string') {
        value = String(value);
      }

      return value;
    }

    function iteratorFor(items) {
      var iterator = {
        next: function next() {
          var value = items.shift();
          return {
            done: value === undefined,
            value: value
          };
        }
      };

      if (support.iterable) {
        iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"] = function () {
          return iterator;
        };
      }

      return iterator;
    }

    function Headers(headers) {
      this.map = {};

      if (headers instanceof Headers) {
        headers.forEach(function (value, name) {
          this.append(name, value);
        }, this);
      } else if (Array.isArray(headers)) {
        headers.forEach(function (header) {
          this.append(header[0], header[1]);
        }, this);
      } else if (headers) {
        Object.getOwnPropertyNames(headers).forEach(function (name) {
          this.append(name, headers[name]);
        }, this);
      }
    }

    Headers.prototype.append = function (name, value) {
      name = normalizeName(name);
      value = normalizeValue(value);
      var oldValue = this.map[name];
      this.map[name] = oldValue ? oldValue + ', ' + value : value;
    };

    Headers.prototype['delete'] = function (name) {
      delete this.map[normalizeName(name)];
    };

    Headers.prototype.get = function (name) {
      name = normalizeName(name);
      return this.has(name) ? this.map[name] : null;
    };

    Headers.prototype.has = function (name) {
      return this.map.hasOwnProperty(normalizeName(name));
    };

    Headers.prototype.set = function (name, value) {
      this.map[normalizeName(name)] = normalizeValue(value);
    };

    Headers.prototype.forEach = function (callback, thisArg) {
      for (var name in this.map) {
        if (this.map.hasOwnProperty(name)) {
          callback.call(thisArg, this.map[name], name, this);
        }
      }
    };

    Headers.prototype.keys = function () {
      var items = [];
      this.forEach(function (value, name) {
        items.push(name);
      });
      return iteratorFor(items);
    };

    Headers.prototype.values = function () {
      var items = [];
      this.forEach(function (value) {
        items.push(value);
      });
      return iteratorFor(items);
    };

    Headers.prototype.entries = function () {
      var items = [];
      this.forEach(function (value, name) {
        items.push([name, value]);
      });
      return iteratorFor(items);
    };

    if (support.iterable) {
      Headers.prototype[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"] = Headers.prototype.entries;
    }

    function consumed(body) {
      if (body.bodyUsed) {
        return Promise.reject(new TypeError('Already read'));
      }

      body.bodyUsed = true;
    }

    function fileReaderReady(reader) {
      return new Promise(function (resolve, reject) {
        reader.onload = function () {
          resolve(reader.result);
        };

        reader.onerror = function () {
          reject(reader.error);
        };
      });
    }

    function readBlobAsArrayBuffer(blob) {
      var reader = new FileReader();
      var promise = fileReaderReady(reader);
      reader.readAsArrayBuffer(blob);
      return promise;
    }

    function readBlobAsText(blob) {
      var reader = new FileReader();
      var promise = fileReaderReady(reader);
      reader.readAsText(blob);
      return promise;
    }

    function readArrayBufferAsText(buf) {
      var view = new Uint8Array(buf);
      var chars = new Array(view.length);

      for (var i = 0; i < view.length; i++) {
        chars[i] = String.fromCharCode(view[i]);
      }

      return chars.join('');
    }

    function bufferClone(buf) {
      if (buf.slice) {
        return buf.slice(0);
      } else {
        var view = new Uint8Array(buf.byteLength);
        view.set(new Uint8Array(buf));
        return view.buffer;
      }
    }

    function Body() {
      this.bodyUsed = false;

      this._initBody = function (body) {
        this._bodyInit = body;

        if (!body) {
          this._bodyText = '';
        } else if (typeof body === 'string') {
          this._bodyText = body;
        } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
          this._bodyBlob = body;
        } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
          this._bodyFormData = body;
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this._bodyText = body.toString();
        } else if (support.arrayBuffer && support.blob && isDataView(body)) {
          this._bodyArrayBuffer = bufferClone(body.buffer);
          this._bodyInit = new Blob([this._bodyArrayBuffer]);
        } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
          this._bodyArrayBuffer = bufferClone(body);
        } else {
          this._bodyText = body = Object.prototype.toString.call(body);
        }

        if (!this.headers.get('content-type')) {
          if (typeof body === 'string') {
            this.headers.set('content-type', 'text/plain;charset=UTF-8');
          } else if (this._bodyBlob && this._bodyBlob.type) {
            this.headers.set('content-type', this._bodyBlob.type);
          } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
            this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
          }
        }
      };

      if (support.blob) {
        this.blob = function () {
          var rejected = consumed(this);

          if (rejected) {
            return rejected;
          }

          if (this._bodyBlob) {
            return Promise.resolve(this._bodyBlob);
          } else if (this._bodyArrayBuffer) {
            return Promise.resolve(new Blob([this._bodyArrayBuffer]));
          } else if (this._bodyFormData) {
            throw new Error('could not read FormData body as blob');
          } else {
            return Promise.resolve(new Blob([this._bodyText]));
          }
        };

        this.arrayBuffer = function () {
          if (this._bodyArrayBuffer) {
            return consumed(this) || Promise.resolve(this._bodyArrayBuffer);
          } else {
            return this.blob().then(readBlobAsArrayBuffer);
          }
        };
      }

      this.text = function () {
        var rejected = consumed(this);

        if (rejected) {
          return rejected;
        }

        if (this._bodyBlob) {
          return readBlobAsText(this._bodyBlob);
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as text');
        } else {
          return Promise.resolve(this._bodyText);
        }
      };

      if (support.formData) {
        this.formData = function () {
          return this.text().then(decode);
        };
      }

      this.json = function () {
        return this.text().then(JSON.parse);
      };

      return this;
    }

    var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

    function normalizeMethod(method) {
      var upcased = method.toUpperCase();
      return methods.indexOf(upcased) > -1 ? upcased : method;
    }

    function Request(input, options) {
      options = options || {};
      var body = options.body;

      if (input instanceof Request) {
        if (input.bodyUsed) {
          throw new TypeError('Already read');
        }

        this.url = input.url;
        this.credentials = input.credentials;

        if (!options.headers) {
          this.headers = new Headers(input.headers);
        }

        this.method = input.method;
        this.mode = input.mode;
        this.signal = input.signal;

        if (!body && input._bodyInit != null) {
          body = input._bodyInit;
          input.bodyUsed = true;
        }
      } else {
        this.url = String(input);
      }

      this.credentials = options.credentials || this.credentials || 'same-origin';

      if (options.headers || !this.headers) {
        this.headers = new Headers(options.headers);
      }

      this.method = normalizeMethod(options.method || this.method || 'GET');
      this.mode = options.mode || this.mode || null;
      this.signal = options.signal || this.signal;
      this.referrer = null;

      if ((this.method === 'GET' || this.method === 'HEAD') && body) {
        throw new TypeError('Body not allowed for GET or HEAD requests');
      }

      this._initBody(body);
    }

    Request.prototype.clone = function () {
      return new Request(this, {
        body: this._bodyInit
      });
    };

    function decode(body) {
      var form = new FormData();
      body.trim().split('&').forEach(function (bytes) {
        if (bytes) {
          var split = bytes.split('=');
          var name = split.shift().replace(/\+/g, ' ');
          var value = split.join('=').replace(/\+/g, ' ');
          form.append(decodeURIComponent(name), decodeURIComponent(value));
        }
      });
      return form;
    }

    function parseHeaders(rawHeaders) {
      var headers = new Headers();
      var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ');
      preProcessedHeaders.split(/\r?\n/).forEach(function (line) {
        var parts = line.split(':');
        var key = parts.shift().trim();

        if (key) {
          var value = parts.join(':').trim();
          headers.append(key, value);
        }
      });
      return headers;
    }

    Body.call(Request.prototype);

    function Response(bodyInit, options) {
      if (!options) {
        options = {};
      }

      this.type = 'default';
      this.status = options.status === undefined ? 200 : options.status;
      this.ok = this.status >= 200 && this.status < 300;
      this.statusText = 'statusText' in options ? options.statusText : 'OK';
      this.headers = new Headers(options.headers);
      this.url = options.url || '';

      this._initBody(bodyInit);
    }

    Body.call(Response.prototype);

    Response.prototype.clone = function () {
      return new Response(this._bodyInit, {
        status: this.status,
        statusText: this.statusText,
        headers: new Headers(this.headers),
        url: this.url
      });
    };

    Response.error = function () {
      var response = new Response(null, {
        status: 0,
        statusText: ''
      });
      response.type = 'error';
      return response;
    };

    var redirectStatuses = [301, 302, 303, 307, 308];

    Response.redirect = function (url, status) {
      if (redirectStatuses.indexOf(status) === -1) {
        throw new RangeError('Invalid status code');
      }

      return new Response(null, {
        status: status,
        headers: {
          location: url
        }
      });
    };

    exports.DOMException = self.DOMException;

    try {
      new exports.DOMException();
    } catch (err) {
      exports.DOMException = function (message, name) {
        this.message = message;
        this.name = name;
        var error = Error(message);
        this.stack = error.stack;
      };

      exports.DOMException.prototype = Object.create(Error.prototype);
      exports.DOMException.prototype.constructor = exports.DOMException;
    }

    function fetch(input, init) {
      return new Promise(function (resolve, reject) {
        var request = new Request(input, init);

        if (request.signal && request.signal.aborted) {
          return reject(new exports.DOMException('Aborted', 'AbortError'));
        }

        var xhr = new XMLHttpRequest();

        function abortXhr() {
          xhr.abort();
        }

        xhr.onload = function () {
          var options = {
            status: xhr.status,
            statusText: xhr.statusText,
            headers: parseHeaders(xhr.getAllResponseHeaders() || '')
          };
          options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
          var body = 'response' in xhr ? xhr.response : xhr.responseText;
          resolve(new Response(body, options));
        };

        xhr.onerror = function () {
          reject(new TypeError('Network request failed'));
        };

        xhr.ontimeout = function () {
          reject(new TypeError('Network request failed'));
        };

        xhr.onabort = function () {
          reject(new exports.DOMException('Aborted', 'AbortError'));
        };

        xhr.open(request.method, request.url, true);

        if (request.credentials === 'include') {
          xhr.withCredentials = true;
        } else if (request.credentials === 'omit') {
          xhr.withCredentials = false;
        }

        if ('responseType' in xhr && support.blob) {
          xhr.responseType = 'blob';
        }

        request.headers.forEach(function (value, name) {
          xhr.setRequestHeader(name, value);
        });

        if (request.signal) {
          request.signal.addEventListener('abort', abortXhr);

          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              request.signal.removeEventListener('abort', abortXhr);
            }
          };
        }

        xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
      });
    }

    fetch.polyfill = true;

    if (!self.fetch) {
      self.fetch = fetch;
      self.Headers = Headers;
      self.Request = Request;
      self.Response = Response;
    }

    exports.Headers = Headers;
    exports.Request = Request;
    exports.Response = Response;
    exports.fetch = fetch;
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
  });
},14512,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('WebSocketModule');

  exports.default = _default;
},14515,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('FileReaderModule');

  exports.default = _default;
},14518,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  Object.defineProperty(exports, '__esModule', {
    value: true
  });

  var eventTargetShim = _$$_REQUIRE(_dependencyMap[5]);

  var AbortSignal = function (_eventTargetShim$Even) {
    _inherits(AbortSignal, _eventTargetShim$Even);

    function AbortSignal() {
      var _this;

      _classCallCheck(this, AbortSignal);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AbortSignal).call(this));
      throw new TypeError("AbortSignal cannot be constructed directly");
      return _this;
    }

    _createClass(AbortSignal, [{
      key: "aborted",
      get: function get() {
        var aborted = abortedFlags.get(this);

        if (typeof aborted !== "boolean") {
          throw new TypeError("Expected 'this' to be an 'AbortSignal' object, but got " + (this === null ? "null" : typeof this));
        }

        return aborted;
      }
    }]);

    return AbortSignal;
  }(eventTargetShim.EventTarget);

  eventTargetShim.defineEventAttribute(AbortSignal.prototype, "abort");

  function createAbortSignal() {
    var signal = Object.create(AbortSignal.prototype);
    eventTargetShim.EventTarget.call(signal);
    abortedFlags.set(signal, false);
    return signal;
  }

  function abortSignal(signal) {
    if (abortedFlags.get(signal) !== false) {
      return;
    }

    abortedFlags.set(signal, true);
    signal.dispatchEvent({
      type: "abort"
    });
  }

  var abortedFlags = new WeakMap();
  Object.defineProperties(AbortSignal.prototype, {
    aborted: {
      enumerable: true
    }
  });

  if (typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag") === "symbol") {
    Object.defineProperty(AbortSignal.prototype, typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag", {
      configurable: true,
      value: "AbortSignal"
    });
  }

  var AbortController = function () {
    function AbortController() {
      _classCallCheck(this, AbortController);

      signals.set(this, createAbortSignal());
    }

    _createClass(AbortController, [{
      key: "abort",
      value: function abort() {
        abortSignal(getSignal(this));
      }
    }, {
      key: "signal",
      get: function get() {
        return getSignal(this);
      }
    }]);

    return AbortController;
  }();

  var signals = new WeakMap();

  function getSignal(controller) {
    var signal = signals.get(controller);

    if (signal == null) {
      throw new TypeError("Expected 'this' to be an 'AbortController' object, but got " + (controller === null ? "null" : typeof controller));
    }

    return signal;
  }

  Object.defineProperties(AbortController.prototype, {
    signal: {
      enumerable: true
    },
    abort: {
      enumerable: true
    }
  });

  if (typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag") === "symbol") {
    Object.defineProperty(AbortController.prototype, typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag", {
      configurable: true,
      value: "AbortController"
    });
  }

  exports.AbortController = AbortController;
  exports.AbortSignal = AbortSignal;
  exports.default = AbortController;
  module.exports = AbortController;
  module.exports.AbortController = module.exports["default"] = AbortController;
  module.exports.AbortSignal = AbortSignal;
},14521,[14320,14323,14371,14377,14386,14506]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (!global.alert) {
    global.alert = function (text) {
      _$$_REQUIRE(_dependencyMap[0]).alert('Alert', '' + text);
    };
  }
},14524,[10243]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('DialogManagerAndroid');

  exports.default = _default;
},14527,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _NativeDialogManagerAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  function emptyCallback() {}

  module.exports = {
    alertWithArgs: function alertWithArgs(args, callback) {
      if (!_NativeDialogManagerAndroid.default) {
        return;
      }

      _NativeDialogManagerAndroid.default.showAlert(args, emptyCallback, callback || emptyCallback);
    }
  };
},14530,[14305,14527]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillObjectProperty = _require.polyfillObjectProperty;

  var navigator = global.navigator;

  if (navigator === undefined) {
    global.navigator = navigator = {};
  }

  polyfillObjectProperty(navigator, 'product', function () {
    return 'ReactNative';
  });
},14533,[14473]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (!global.RN$Bridgeless) {
    var BatchedBridge = _$$_REQUIRE(_dependencyMap[0]);

    BatchedBridge.registerLazyCallableModule('Systrace', function () {
      return _$$_REQUIRE(_dependencyMap[1]);
    });
    BatchedBridge.registerLazyCallableModule('JSTimers', function () {
      return _$$_REQUIRE(_dependencyMap[2]);
    });
    BatchedBridge.registerLazyCallableModule('HeapCapture', function () {
      return _$$_REQUIRE(_dependencyMap[3]);
    });
    BatchedBridge.registerLazyCallableModule('SamplingProfiler', function () {
      return _$$_REQUIRE(_dependencyMap[4]);
    });
    BatchedBridge.registerLazyCallableModule('RCTLog', function () {
      return _$$_REQUIRE(_dependencyMap[5]);
    });
    BatchedBridge.registerLazyCallableModule('RCTDeviceEventEmitter', function () {
      return _$$_REQUIRE(_dependencyMap[6]);
    });
    BatchedBridge.registerLazyCallableModule('RCTNativeAppEventEmitter', function () {
      return _$$_REQUIRE(_dependencyMap[7]);
    });
    BatchedBridge.registerLazyCallableModule('GlobalPerformanceLogger', function () {
      return _$$_REQUIRE(_dependencyMap[8]);
    });
    BatchedBridge.registerLazyCallableModule('JSDevSupportModule', function () {
      return _$$_REQUIRE(_dependencyMap[9]);
    });
    {
      BatchedBridge.registerCallableModule('HMRClient', _$$_REQUIRE(_dependencyMap[10]));
    }
  }
},14536,[10045,10054,10063,14539,10261,10264,10087,10267,14548,10276,14557]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _NativeHeapCapture = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var HeapCapture = {
    captureHeap: function captureHeap(path) {
      var error = null;

      try {
        global.nativeCaptureHeap(path);
      } catch (e) {
        error = e.toString();
      }

      if (_NativeHeapCapture.default) {
        _NativeHeapCapture.default.captureComplete(path, error);
      }
    }
  };
  module.exports = HeapCapture;
},14539,[14305,14542]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('HeapCapture');

  exports.default = _default;
},14542,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('JSCSamplingProfiler');

  exports.default = _default;
},14545,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var createPerformanceLogger = _$$_REQUIRE(_dependencyMap[0]);

  var GlobalPerformanceLogger = createPerformanceLogger();
  module.exports = GlobalPerformanceLogger;
},14548,[14551]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Systrace = _$$_REQUIRE(_dependencyMap[0]);

  var infoLog = _$$_REQUIRE(_dependencyMap[1]);

  var performanceNow = global.nativeQPLTimestamp || global.nativePerformanceNow || _$$_REQUIRE(_dependencyMap[2]);

  var _cookies = {};
  var PRINT_TO_CONSOLE = false;

  function createPerformanceLogger() {
    var result = {
      _timespans: {},
      _extras: {},
      _points: {},
      addTimespan: function addTimespan(key, lengthInMs, description) {
        if (this._timespans[key]) {
          return;
        }

        this._timespans[key] = {
          description: description,
          totalTime: lengthInMs
        };
      },
      startTimespan: function startTimespan(key, description) {
        if (this._timespans[key]) {
          return;
        }

        this._timespans[key] = {
          description: description,
          startTime: performanceNow()
        };
        _cookies[key] = Systrace.beginAsyncEvent(key);
      },
      stopTimespan: function stopTimespan(key) {
        var timespan = this._timespans[key];

        if (!timespan || !timespan.startTime) {
          return;
        }

        if (timespan.endTime) {
          return;
        }

        timespan.endTime = performanceNow();
        timespan.totalTime = timespan.endTime - (timespan.startTime || 0);
        Systrace.endAsyncEvent(key, _cookies[key]);
        delete _cookies[key];
      },
      clear: function clear() {
        this._timespans = {};
        this._extras = {};
        this._points = {};
      },
      clearCompleted: function clearCompleted() {
        for (var _key in this._timespans) {
          if (this._timespans[_key].totalTime) {
            delete this._timespans[_key];
          }
        }

        this._extras = {};
        this._points = {};
      },
      clearExceptTimespans: function clearExceptTimespans(keys) {
        this._timespans = Object.keys(this._timespans).reduce(function (previous, key) {
          if (keys.indexOf(key) !== -1) {
            previous[key] = this._timespans[key];
          }

          return previous;
        }, {});
        this._extras = {};
        this._points = {};
      },
      currentTimestamp: function currentTimestamp() {
        return performanceNow();
      },
      getTimespans: function getTimespans() {
        return this._timespans;
      },
      hasTimespan: function hasTimespan(key) {
        return !!this._timespans[key];
      },
      logTimespans: function logTimespans() {},
      addTimespans: function addTimespans(newTimespans, labels) {
        for (var ii = 0, l = newTimespans.length; ii < l; ii += 2) {
          var label = labels[ii / 2];
          this.addTimespan(label, newTimespans[ii + 1] - newTimespans[ii], label);
        }
      },
      setExtra: function setExtra(key, value) {
        if (this._extras[key]) {
          return;
        }

        this._extras[key] = value;
      },
      getExtras: function getExtras() {
        return this._extras;
      },
      removeExtra: function removeExtra(key) {
        var value = this._extras[key];
        delete this._extras[key];
        return value;
      },
      logExtras: function logExtras() {},
      markPoint: function markPoint(key, timestamp) {
        var _timestamp;

        if (this._points[key]) {
          return;
        }

        this._points[key] = (_timestamp = timestamp) != null ? _timestamp : performanceNow();
      },
      getPoints: function getPoints() {
        return this._points;
      },
      logPoints: function logPoints() {},
      logEverything: function logEverything() {
        this.logTimespans();
        this.logExtras();
        this.logPoints();
      }
    };
    return result;
  }

  module.exports = createPerformanceLogger;
},14551,[10054,10273,14491]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('JSDevSupport');

  exports.default = _default;
},14554,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var HMRClientProdShim = {
    setup: function setup() {},
    enable: function enable() {},
    disable: function disable() {},
    registerBundle: function registerBundle() {},
    log: function log() {}
  };
  module.exports = HMRClientProdShim;
},14557,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function __fetchSegment(segmentId, options, callback) {
    var SegmentFetcher = _$$_REQUIRE(_dependencyMap[0]).default;

    SegmentFetcher.fetchSegment(segmentId, options, function (errorObject) {
      if (errorObject) {
        var error = new Error(errorObject.message);
        error.code = errorObject.code;
        callback(error);
      }

      callback(null);
    });
  }

  global.__fetchSegment = __fetchSegment;

  function __getSegment(segmentId, options, callback) {
    var SegmentFetcher = _$$_REQUIRE(_dependencyMap[0]).default;

    if (!SegmentFetcher.getSegment) {
      throw new Error('SegmentFetcher.getSegment must be defined');
    }

    SegmentFetcher.getSegment(segmentId, options, function (errorObject, path) {
      if (errorObject) {
        var error = new Error(errorObject.message);
        error.code = errorObject.code;
        callback(error);
      }

      callback(null, path);
    });
  }

  global.__getSegment = __getSegment;
},14560,[14563]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('SegmentFetcher');

  exports.default = _default;
},14563,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    get BatchedBridge() {
      return _$$_REQUIRE(_dependencyMap[0]);
    },

    get ExceptionsManager() {
      return _$$_REQUIRE(_dependencyMap[1]);
    },

    get Platform() {
      return _$$_REQUIRE(_dependencyMap[2]);
    },

    get RCTEventEmitter() {
      return _$$_REQUIRE(_dependencyMap[3]);
    },

    get ReactNativeViewConfigRegistry() {
      return _$$_REQUIRE(_dependencyMap[4]);
    },

    get TextInputState() {
      return _$$_REQUIRE(_dependencyMap[5]);
    },

    get UIManager() {
      return _$$_REQUIRE(_dependencyMap[6]);
    },

    get deepDiffer() {
      return _$$_REQUIRE(_dependencyMap[7]);
    },

    get deepFreezeAndThrowOnMutationInDev() {
      return _$$_REQUIRE(_dependencyMap[8]);
    },

    get flattenStyle() {
      return _$$_REQUIRE(_dependencyMap[9]);
    },

    get ReactFiberErrorDialog() {
      return _$$_REQUIRE(_dependencyMap[10]);
    }

  };
},14566,[10045,10141,10066,10282,14569,10285,10279,10288,10057,10291,14572]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var customBubblingEventTypes = {};
  var customDirectEventTypes = {};
  exports.customBubblingEventTypes = customBubblingEventTypes;
  exports.customDirectEventTypes = customDirectEventTypes;
  var viewConfigCallbacks = new Map();
  var viewConfigs = new Map();

  function processEventTypes(viewConfig) {
    var bubblingEventTypes = viewConfig.bubblingEventTypes,
        directEventTypes = viewConfig.directEventTypes;

    if (bubblingEventTypes != null) {
      for (var _topLevelType in bubblingEventTypes) {
        if (customBubblingEventTypes[_topLevelType] == null) {
          customBubblingEventTypes[_topLevelType] = bubblingEventTypes[_topLevelType];
        }
      }
    }

    if (directEventTypes != null) {
      for (var _topLevelType2 in directEventTypes) {
        if (customDirectEventTypes[_topLevelType2] == null) {
          customDirectEventTypes[_topLevelType2] = directEventTypes[_topLevelType2];
        }
      }
    }
  }

  exports.register = function (name, callback) {
    invariant(!viewConfigCallbacks.has(name), 'Tried to register two views with the same name %s', name);
    viewConfigCallbacks.set(name, callback);
    return name;
  };

  exports.get = function (name) {
    var viewConfig;

    if (!viewConfigs.has(name)) {
      var callback = viewConfigCallbacks.get(name);

      if (typeof callback !== 'function') {
        invariant(false, 'View config not found for name %s.%s', name, typeof name[0] === 'string' && /[a-z]/.test(name[0]) ? ' Make sure to start component names with a capital letter.' : '');
      }

      viewConfigCallbacks.set(name, null);
      viewConfig = callback();
      processEventTypes(viewConfig);
      viewConfigs.set(name, viewConfig);
    } else {
      viewConfig = viewConfigs.get(name);
    }

    invariant(viewConfig, 'View config not found for name %s', name);
    return viewConfig;
  };
},14569,[14326]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _ExceptionsManager = _$$_REQUIRE(_dependencyMap[0]);

  function showErrorDialog(capturedError) {
    var componentStack = capturedError.componentStack,
        error = capturedError.error;
    var errorToHandle;

    if (error instanceof Error) {
      errorToHandle = error;
    } else if (typeof error === 'string') {
      errorToHandle = new _ExceptionsManager.SyntheticError(error);
    } else {
      errorToHandle = new _ExceptionsManager.SyntheticError('Unspecified error');
    }

    try {
      errorToHandle.componentStack = componentStack;
    } catch (e) {}

    (0, _ExceptionsManager.handleException)(errorToHandle, false);
    return false;
  }

  module.exports = {
    showErrorDialog: showErrorDialog
  };
},14572,[10141]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  {
    module.exports = _$$_REQUIRE(_dependencyMap[0]);
  }
},14575,[14578]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /** @license React v0.15.0
   * scheduler.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _d = undefined,
      e = undefined,
      g = undefined,
      m = undefined,
      n = undefined;
  exports.unstable_now = undefined;
  exports.unstable_forceFrameRate = undefined;

  if ("undefined" === typeof window || "function" !== typeof MessageChannel) {
    var p = null,
        q = null,
        r = function r() {
      if (null !== p) try {
        var a = exports.unstable_now();
        p(true, a);
        p = null;
      } catch (b) {
        throw setTimeout(r, 0), b;
      }
    };

    exports.unstable_now = function () {
      return Date.now();
    };

    _d = function d(a) {
      null !== p ? setTimeout(_d, 0, a) : (p = a, setTimeout(r, 0));
    };

    e = function e(a, b) {
      q = setTimeout(a, b);
    };

    g = function g() {
      clearTimeout(q);
    };

    m = function m() {
      return false;
    };

    n = exports.unstable_forceFrameRate = function () {};
  } else {
    var t = window.performance,
        u = window.Date,
        v = window.setTimeout,
        w = window.clearTimeout,
        x = window.requestAnimationFrame,
        y = window.cancelAnimationFrame;
    "undefined" !== typeof console && ("function" !== typeof x && undefined, "function" !== typeof y && undefined);
    exports.unstable_now = "object" === typeof t && "function" === typeof t.now ? function () {
      return t.now();
    } : function () {
      return u.now();
    };
    var z = false,
        A = null,
        B = -1,
        C = -1,
        D = 33.33,
        E = -1,
        F = -1,
        G = 0,
        H = false;

    m = function m() {
      return exports.unstable_now() >= G;
    };

    n = function n() {};

    exports.unstable_forceFrameRate = function (a) {
      0 > a || 125 < a ? undefined : 0 < a ? (D = Math.floor(1E3 / a), H = true) : (D = 33.33, H = false);
    };

    var J = function J() {
      if (null !== A) {
        var a = exports.unstable_now(),
            b = 0 < G - a;

        try {
          A(b, a) || (A = null);
        } catch (c) {
          throw I.postMessage(null), c;
        }
      }
    },
        K = new MessageChannel(),
        I = K.port2;

    K.port1.onmessage = J;

    var L = function L(a) {
      if (null === A) F = E = -1, z = false;else {
        z = true;
        x(function (a) {
          w(B);
          L(a);
        });

        var b = function b() {
          G = exports.unstable_now() + D / 2;
          J();
          B = v(b, 3 * D);
        };

        B = v(b, 3 * D);

        if (-1 !== E && .1 < a - E) {
          var c = a - E;
          !H && -1 !== F && c < D && F < D && (D = c < F ? F : c, 8.33 > D && (D = 8.33));
          F = c;
        }

        E = a;
        G = a + D;
        I.postMessage(null);
      }
    };

    _d = function _d(a) {
      A = a;
      z || (z = true, x(function (a) {
        L(a);
      }));
    };

    e = function e(a, b) {
      C = v(function () {
        a(exports.unstable_now());
      }, b);
    };

    g = function g() {
      w(C);
      C = -1;
    };
  }

  var M = null,
      N = null,
      O = null,
      P = 3,
      Q = false,
      R = false,
      S = false;

  function T(a, b) {
    var c = a.next;
    if (c === a) M = null;else {
      a === M && (M = c);
      var f = a.previous;
      f.next = c;
      c.previous = f;
    }
    a.next = a.previous = null;
    c = a.callback;
    f = P;
    var l = O;
    P = a.priorityLevel;
    O = a;

    try {
      var h = a.expirationTime <= b;

      switch (P) {
        case 1:
          var k = c(h);
          break;

        case 2:
          k = c(h);
          break;

        case 3:
          k = c(h);
          break;

        case 4:
          k = c(h);
          break;

        case 5:
          k = c(h);
      }
    } catch (Z) {
      throw Z;
    } finally {
      P = f, O = l;
    }

    if ("function" === typeof k) if (b = a.expirationTime, a.callback = k, null === M) M = a.next = a.previous = a;else {
      k = null;
      h = M;

      do {
        if (b <= h.expirationTime) {
          k = h;
          break;
        }

        h = h.next;
      } while (h !== M);

      null === k ? k = M : k === M && (M = a);
      b = k.previous;
      b.next = k.previous = a;
      a.next = k;
      a.previous = b;
    }
  }

  function U(a) {
    if (null !== N && N.startTime <= a) {
      do {
        var b = N,
            c = b.next;
        if (b === c) N = null;else {
          N = c;
          var f = b.previous;
          f.next = c;
          c.previous = f;
        }
        b.next = b.previous = null;
        V(b, b.expirationTime);
      } while (null !== N && N.startTime <= a);
    }
  }

  function W(a) {
    S = false;
    U(a);
    R || (null !== M ? (R = true, _d(X)) : null !== N && e(W, N.startTime - a));
  }

  function X(a, b) {
    R = false;
    S && (S = false, g());
    U(b);
    Q = true;

    try {
      if (!a) for (; null !== M && M.expirationTime <= b;) {
        T(M, b), b = exports.unstable_now(), U(b);
      } else if (null !== M) {
        do {
          T(M, b), b = exports.unstable_now(), U(b);
        } while (null !== M && !m());
      }
      if (null !== M) return true;
      null !== N && e(W, N.startTime - b);
      return false;
    } finally {
      Q = false;
    }
  }

  function Y(a) {
    switch (a) {
      case 1:
        return -1;

      case 2:
        return 250;

      case 5:
        return 1073741823;

      case 4:
        return 1E4;

      default:
        return 5E3;
    }
  }

  function V(a, b) {
    if (null === M) M = a.next = a.previous = a;else {
      var c = null,
          f = M;

      do {
        if (b < f.expirationTime) {
          c = f;
          break;
        }

        f = f.next;
      } while (f !== M);

      null === c ? c = M : c === M && (M = a);
      b = c.previous;
      b.next = c.previous = a;
      a.next = c;
      a.previous = b;
    }
  }

  var aa = n;
  exports.unstable_ImmediatePriority = 1;
  exports.unstable_UserBlockingPriority = 2;
  exports.unstable_NormalPriority = 3;
  exports.unstable_IdlePriority = 5;
  exports.unstable_LowPriority = 4;

  exports.unstable_runWithPriority = function (a, b) {
    switch (a) {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        break;

      default:
        a = 3;
    }

    var c = P;
    P = a;

    try {
      return b();
    } finally {
      P = c;
    }
  };

  exports.unstable_next = function (a) {
    switch (P) {
      case 1:
      case 2:
      case 3:
        var b = 3;
        break;

      default:
        b = P;
    }

    var c = P;
    P = b;

    try {
      return a();
    } finally {
      P = c;
    }
  };

  exports.unstable_scheduleCallback = function (a, b, c) {
    var f = exports.unstable_now();

    if ("object" === typeof c && null !== c) {
      var l = c.delay;
      l = "number" === typeof l && 0 < l ? f + l : f;
      c = "number" === typeof c.timeout ? c.timeout : Y(a);
    } else c = Y(a), l = f;

    c = l + c;
    a = {
      callback: b,
      priorityLevel: a,
      startTime: l,
      expirationTime: c,
      next: null,
      previous: null
    };

    if (l > f) {
      c = l;
      if (null === N) N = a.next = a.previous = a;else {
        b = null;
        var h = N;

        do {
          if (c < h.startTime) {
            b = h;
            break;
          }

          h = h.next;
        } while (h !== N);

        null === b ? b = N : b === N && (N = a);
        c = b.previous;
        c.next = b.previous = a;
        a.next = b;
        a.previous = c;
      }
      null === M && N === a && (S ? g() : S = true, e(W, l - f));
    } else V(a, c), R || Q || (R = true, _d(X));

    return a;
  };

  exports.unstable_cancelCallback = function (a) {
    var b = a.next;

    if (null !== b) {
      if (a === b) a === M ? M = null : a === N && (N = null);else {
        a === M ? M = b : a === N && (N = b);
        var c = a.previous;
        c.next = b;
        b.previous = c;
      }
      a.next = a.previous = null;
    }
  };

  exports.unstable_wrapCallback = function (a) {
    var b = P;
    return function () {
      var c = P;
      P = b;

      try {
        return a.apply(this, arguments);
      } finally {
        P = c;
      }
    };
  };

  exports.unstable_getCurrentPriorityLevel = function () {
    return P;
  };

  exports.unstable_shouldYield = function () {
    var a = exports.unstable_now();
    U(a);
    return null !== O && null !== M && M.startTime <= a && M.expirationTime < O.expirationTime || m();
  };

  exports.unstable_requestPaint = aa;

  exports.unstable_continueExecution = function () {
    R || Q || (R = true, _d(X));
  };

  exports.unstable_pauseExecution = function () {};

  exports.unstable_getFirstCallbackNode = function () {
    return M;
  };
},14578,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactNativeViewViewConfigAndroid = {
    uiViewClassName: 'RCTView',
    bubblingEventTypes: {
      topSelect: {
        phasedRegistrationNames: {
          bubbled: 'onSelect',
          captured: 'onSelectCapture'
        }
      }
    },
    directEventTypes: {
      topClick: {
        registrationName: 'onClick'
      },
      topContentSizeChange: {
        registrationName: 'onContentSizeChange'
      },
      topLoadingError: {
        registrationName: 'onLoadingError'
      },
      topLoadingFinish: {
        registrationName: 'onLoadingFinish'
      },
      topLoadingStart: {
        registrationName: 'onLoadingStart'
      },
      topMessage: {
        registrationName: 'onMessage'
      },
      topMomentumScrollBegin: {
        registrationName: 'onMomentumScrollBegin'
      },
      topMomentumScrollEnd: {
        registrationName: 'onMomentumScrollEnd'
      },
      topScroll: {
        registrationName: 'onScroll'
      },
      topScrollBeginDrag: {
        registrationName: 'onScrollBeginDrag'
      },
      topScrollEndDrag: {
        registrationName: 'onScrollEndDrag'
      },
      topSelectionChange: {
        registrationName: 'onSelectionChange'
      }
    },
    validAttributes: {
      hasTVPreferredFocus: true,
      focusable: true,
      nativeBackgroundAndroid: true,
      nativeForegroundAndroid: true,
      nextFocusDown: true,
      nextFocusForward: true,
      nextFocusLeft: true,
      nextFocusRight: true,
      nextFocusUp: true
    }
  };
  module.exports = ReactNativeViewViewConfigAndroid;
},14581,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _verifyComponentAttributeEquivalence = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var ReactNativeViewConfigRegistry = _$$_REQUIRE(_dependencyMap[3]);

  var ReactNativeViewViewConfig = _$$_REQUIRE(_dependencyMap[4]);

  function registerGeneratedViewConfig(componentName, viewConfig) {
    var mergedViewConfig = {
      uiViewClassName: componentName,
      Commands: {},
      bubblingEventTypes: (0, _objectSpread2.default)({}, ReactNativeViewViewConfig.bubblingEventTypes, viewConfig.bubblingEventTypes || {}),
      directEventTypes: (0, _objectSpread2.default)({}, ReactNativeViewViewConfig.directEventTypes, viewConfig.directEventTypes || {}),
      validAttributes: (0, _objectSpread2.default)({}, ReactNativeViewViewConfig.validAttributes, viewConfig.validAttributes || {})
    };
    ReactNativeViewConfigRegistry.register(componentName, function () {
      (0, _verifyComponentAttributeEquivalence.default)(componentName, mergedViewConfig);
      return mergedViewConfig;
    });
  }

  module.exports = registerGeneratedViewConfig;
},14584,[14305,14314,14587,14569,14590]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.lefthandObjectDiff = lefthandObjectDiff;
  exports.getConfigWithoutViewProps = getConfigWithoutViewProps;
  exports.stringifyViewConfig = stringifyViewConfig;
  exports.default = undefined;

  var _ReactNativeViewViewConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var getNativeComponentAttributes = _$$_REQUIRE(_dependencyMap[2]);

  var IGNORED_KEYS = ['transform', 'hitSlop'];

  function verifyComponentAttributeEquivalence(componentName, config) {}

  function lefthandObjectDiff(leftObj, rightObj) {
    var differentKeys = {};

    function compare(leftItem, rightItem, key) {
      if (typeof leftItem !== typeof rightItem && leftItem != null) {
        differentKeys[key] = rightItem;
        return;
      }

      if (typeof leftItem === 'object') {
        var objDiff = lefthandObjectDiff(leftItem, rightItem);

        if (Object.keys(objDiff).length > 1) {
          differentKeys[key] = objDiff;
        }

        return;
      }

      if (leftItem !== rightItem) {
        differentKeys[key] = rightItem;
        return;
      }
    }

    for (var key in leftObj) {
      if (IGNORED_KEYS.includes(key)) {
        continue;
      }

      if (!rightObj) {
        differentKeys[key] = {};
      } else if (leftObj.hasOwnProperty(key)) {
        compare(leftObj[key], rightObj[key], key);
      }
    }

    return differentKeys;
  }

  function getConfigWithoutViewProps(viewConfig, propName) {
    if (!viewConfig[propName]) {
      return {};
    }

    return Object.keys(viewConfig[propName]).filter(function (prop) {
      return !_ReactNativeViewViewConfig.default[propName][prop];
    }).reduce(function (obj, prop) {
      obj[prop] = viewConfig[propName][prop];
      return obj;
    }, {});
  }

  function stringifyViewConfig(viewConfig) {
    return JSON.stringify(viewConfig, function (key, val) {
      if (typeof val === 'function') {
        return "\u0192 " + val.name;
      }

      return val;
    }, 2);
  }

  var _default = verifyComponentAttributeEquivalence;
  exports.default = _default;
},14587,[14305,14590,14593]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _ReactNativeViewViewConfigAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var ReactNativeViewConfig = {
    uiViewClassName: 'RCTView',
    baseModuleName: null,
    Manager: 'ViewManager',
    Commands: {},
    Constants: {},
    bubblingEventTypes: (0, _objectSpread2.default)({}, _ReactNativeViewViewConfigAndroid.default.bubblingEventTypes, {
      topBlur: {
        phasedRegistrationNames: {
          bubbled: 'onBlur',
          captured: 'onBlurCapture'
        }
      },
      topChange: {
        phasedRegistrationNames: {
          bubbled: 'onChange',
          captured: 'onChangeCapture'
        }
      },
      topEndEditing: {
        phasedRegistrationNames: {
          bubbled: 'onEndEditing',
          captured: 'onEndEditingCapture'
        }
      },
      topFocus: {
        phasedRegistrationNames: {
          bubbled: 'onFocus',
          captured: 'onFocusCapture'
        }
      },
      topKeyPress: {
        phasedRegistrationNames: {
          bubbled: 'onKeyPress',
          captured: 'onKeyPressCapture'
        }
      },
      topPress: {
        phasedRegistrationNames: {
          bubbled: 'onPress',
          captured: 'onPressCapture'
        }
      },
      topSubmitEditing: {
        phasedRegistrationNames: {
          bubbled: 'onSubmitEditing',
          captured: 'onSubmitEditingCapture'
        }
      },
      topTouchCancel: {
        phasedRegistrationNames: {
          bubbled: 'onTouchCancel',
          captured: 'onTouchCancelCapture'
        }
      },
      topTouchEnd: {
        phasedRegistrationNames: {
          bubbled: 'onTouchEnd',
          captured: 'onTouchEndCapture'
        }
      },
      topTouchMove: {
        phasedRegistrationNames: {
          bubbled: 'onTouchMove',
          captured: 'onTouchMoveCapture'
        }
      },
      topTouchStart: {
        phasedRegistrationNames: {
          bubbled: 'onTouchStart',
          captured: 'onTouchStartCapture'
        }
      }
    }),
    directEventTypes: (0, _objectSpread2.default)({}, _ReactNativeViewViewConfigAndroid.default.directEventTypes, {
      topAccessibilityAction: {
        registrationName: 'onAccessibilityAction'
      },
      topAccessibilityEscape: {
        registrationName: 'onAccessibilityEscape'
      },
      topAccessibilityTap: {
        registrationName: 'onAccessibilityTap'
      },
      topLayout: {
        registrationName: 'onLayout'
      },
      topMagicTap: {
        registrationName: 'onMagicTap'
      },
      onGestureHandlerEvent: {
        registrationName: 'onGestureHandlerEvent'
      },
      onGestureHandlerStateChange: {
        registrationName: 'onGestureHandlerStateChange'
      }
    }),
    validAttributes: (0, _objectSpread2.default)({}, _ReactNativeViewViewConfigAndroid.default.validAttributes, {
      accessibilityActions: true,
      accessibilityElementsHidden: true,
      accessibilityHint: true,
      accessibilityIgnoresInvertColors: true,
      accessibilityLabel: true,
      accessibilityLiveRegion: true,
      accessibilityRole: true,
      accessibilityStates: true,
      accessibilityState: true,
      accessibilityViewIsModal: true,
      accessible: true,
      alignContent: true,
      alignItems: true,
      alignSelf: true,
      aspectRatio: true,
      backfaceVisibility: true,
      backgroundColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderBottomColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderBottomEndRadius: true,
      borderBottomLeftRadius: true,
      borderBottomRightRadius: true,
      borderBottomStartRadius: true,
      borderBottomWidth: true,
      borderColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderEndColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderEndWidth: true,
      borderLeftColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderLeftWidth: true,
      borderRadius: true,
      borderRightColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderRightWidth: true,
      borderStartColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderStartWidth: true,
      borderStyle: true,
      borderTopColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderTopEndRadius: true,
      borderTopLeftRadius: true,
      borderTopRightRadius: true,
      borderTopStartRadius: true,
      borderTopWidth: true,
      borderWidth: true,
      bottom: true,
      clickable: true,
      collapsable: true,
      direction: true,
      display: true,
      elevation: true,
      end: true,
      flex: true,
      flexBasis: true,
      flexDirection: true,
      flexGrow: true,
      flexShrink: true,
      flexWrap: true,
      height: true,
      hitSlop: {
        diff: _$$_REQUIRE(_dependencyMap[4])
      },
      importantForAccessibility: true,
      justifyContent: true,
      left: true,
      margin: true,
      marginBottom: true,
      marginEnd: true,
      marginHorizontal: true,
      marginLeft: true,
      marginRight: true,
      marginStart: true,
      marginTop: true,
      marginVertical: true,
      maxHeight: true,
      maxWidth: true,
      minHeight: true,
      minWidth: true,
      nativeID: true,
      needsOffscreenAlphaCompositing: true,
      onAccessibilityAction: true,
      onAccessibilityEscape: true,
      onAccessibilityTap: true,
      onLayout: true,
      onMagicTap: true,
      opacity: true,
      overflow: true,
      padding: true,
      paddingBottom: true,
      paddingEnd: true,
      paddingHorizontal: true,
      paddingLeft: true,
      paddingRight: true,
      paddingStart: true,
      paddingTop: true,
      paddingVertical: true,
      pointerEvents: true,
      position: true,
      removeClippedSubviews: true,
      renderToHardwareTextureAndroid: true,
      right: true,
      rotation: true,
      scaleX: true,
      scaleY: true,
      shadowColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      shadowOffset: {
        diff: _$$_REQUIRE(_dependencyMap[5])
      },
      shadowOpacity: true,
      shadowRadius: true,
      shouldRasterizeIOS: true,
      start: true,
      style: {
        alignContent: true,
        alignItems: true,
        alignSelf: true,
        aspectRatio: true,
        backfaceVisibility: true,
        backgroundColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderBottomColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderBottomEndRadius: true,
        borderBottomLeftRadius: true,
        borderBottomRightRadius: true,
        borderBottomStartRadius: true,
        borderBottomWidth: true,
        borderColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderEndColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderEndWidth: true,
        borderLeftColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderLeftWidth: true,
        borderRadius: true,
        borderRightColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderRightWidth: true,
        borderStartColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderStartWidth: true,
        borderStyle: true,
        borderTopColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderTopEndRadius: true,
        borderTopLeftRadius: true,
        borderTopRightRadius: true,
        borderTopStartRadius: true,
        borderTopWidth: true,
        borderWidth: true,
        bottom: true,
        color: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        decomposedMatrix: true,
        direction: true,
        display: true,
        elevation: true,
        end: true,
        flex: true,
        flexBasis: true,
        flexDirection: true,
        flexGrow: true,
        flexShrink: true,
        flexWrap: true,
        fontFamily: true,
        fontSize: true,
        fontStyle: true,
        fontVariant: true,
        fontWeight: true,
        height: true,
        includeFontPadding: true,
        justifyContent: true,
        left: true,
        letterSpacing: true,
        lineHeight: true,
        margin: true,
        marginBottom: true,
        marginEnd: true,
        marginHorizontal: true,
        marginLeft: true,
        marginRight: true,
        marginStart: true,
        marginTop: true,
        marginVertical: true,
        maxHeight: true,
        maxWidth: true,
        minHeight: true,
        minWidth: true,
        opacity: true,
        overflow: true,
        overlayColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        padding: true,
        paddingBottom: true,
        paddingEnd: true,
        paddingHorizontal: true,
        paddingLeft: true,
        paddingRight: true,
        paddingStart: true,
        paddingTop: true,
        paddingVertical: true,
        position: true,
        resizeMode: true,
        right: true,
        rotation: true,
        scaleX: true,
        scaleY: true,
        shadowColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        shadowOffset: {
          diff: _$$_REQUIRE(_dependencyMap[5])
        },
        shadowOpacity: true,
        shadowRadius: true,
        start: true,
        textAlign: true,
        textAlignVertical: true,
        textDecorationColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        textDecorationLine: true,
        textDecorationStyle: true,
        textShadowColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        textShadowOffset: true,
        textShadowRadius: true,
        textTransform: true,
        tintColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        top: true,
        transform: {
          diff: _$$_REQUIRE(_dependencyMap[6])
        },
        transformMatrix: true,
        translateX: true,
        translateY: true,
        width: true,
        writingDirection: true,
        zIndex: true
      },
      testID: true,
      top: true,
      transform: {
        diff: _$$_REQUIRE(_dependencyMap[6])
      },
      translateX: true,
      translateY: true,
      width: true,
      zIndex: true
    })
  };
  module.exports = ReactNativeViewConfig;
},14590,[14305,14314,14581,10393,10408,10402,10411]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread = _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativeStyleAttributes = _$$_REQUIRE(_dependencyMap[2]);

  var UIManager = _$$_REQUIRE(_dependencyMap[3]);

  var insetsDiffer = _$$_REQUIRE(_dependencyMap[4]);

  var invariant = _$$_REQUIRE(_dependencyMap[5]);

  var matricesDiffer = _$$_REQUIRE(_dependencyMap[6]);

  var pointsDiffer = _$$_REQUIRE(_dependencyMap[7]);

  var processColor = _$$_REQUIRE(_dependencyMap[8]);

  var processColorArray = _$$_REQUIRE(_dependencyMap[9]);

  var resolveAssetSource = _$$_REQUIRE(_dependencyMap[10]);

  var sizesDiffer = _$$_REQUIRE(_dependencyMap[11]);

  var warning = _$$_REQUIRE(_dependencyMap[12]);

  function getNativeComponentAttributes(uiViewClassName) {
    var viewConfig = UIManager.getViewManagerConfig(uiViewClassName);
    invariant(viewConfig != null && viewConfig.NativeProps != null, 'requireNativeComponent: "%s" was not found in the UIManager.', uiViewClassName);
    var baseModuleName = viewConfig.baseModuleName,
        bubblingEventTypes = viewConfig.bubblingEventTypes,
        directEventTypes = viewConfig.directEventTypes;
    var nativeProps = viewConfig.NativeProps;

    while (baseModuleName) {
      var baseModule = UIManager.getViewManagerConfig(baseModuleName);

      if (!baseModule) {
        warning(false, 'Base module "%s" does not exist', baseModuleName);
        baseModuleName = null;
      } else {
        bubblingEventTypes = _objectSpread({}, baseModule.bubblingEventTypes, bubblingEventTypes);
        directEventTypes = _objectSpread({}, baseModule.directEventTypes, directEventTypes);
        nativeProps = _objectSpread({}, baseModule.NativeProps, nativeProps);
        baseModuleName = baseModule.baseModuleName;
      }
    }

    var validAttributes = {};

    for (var key in nativeProps) {
      var typeName = nativeProps[key];
      var diff = getDifferForType(typeName);
      var process = getProcessorForType(typeName);
      validAttributes[key] = diff == null && process == null ? true : {
        diff: diff,
        process: process
      };
    }

    validAttributes.style = ReactNativeStyleAttributes;

    _extends(viewConfig, {
      uiViewClassName: uiViewClassName,
      validAttributes: validAttributes,
      bubblingEventTypes: bubblingEventTypes,
      directEventTypes: directEventTypes
    });

    if (!hasAttachedDefaultEventTypes) {
      attachDefaultEventTypes(viewConfig);
      hasAttachedDefaultEventTypes = true;
    }

    return viewConfig;
  }

  var hasAttachedDefaultEventTypes = false;

  function attachDefaultEventTypes(viewConfig) {
    var constants = UIManager.getConstants();

    if (constants.ViewManagerNames || constants.LazyViewManagersEnabled) {
      viewConfig = merge(viewConfig, UIManager.getDefaultEventTypes());
    } else {
      viewConfig.bubblingEventTypes = merge(viewConfig.bubblingEventTypes, constants.genericBubblingEventTypes);
      viewConfig.directEventTypes = merge(viewConfig.directEventTypes, constants.genericDirectEventTypes);
    }
  }

  function merge(destination, source) {
    if (!source) {
      return destination;
    }

    if (!destination) {
      return source;
    }

    for (var key in source) {
      if (!source.hasOwnProperty(key)) {
        continue;
      }

      var sourceValue = source[key];

      if (destination.hasOwnProperty(key)) {
        var destinationValue = destination[key];

        if (typeof sourceValue === 'object' && typeof destinationValue === 'object') {
          sourceValue = merge(destinationValue, sourceValue);
        }
      }

      destination[key] = sourceValue;
    }

    return destination;
  }

  function getDifferForType(typeName) {
    switch (typeName) {
      case 'CATransform3D':
        return matricesDiffer;

      case 'CGPoint':
        return pointsDiffer;

      case 'CGSize':
        return sizesDiffer;

      case 'UIEdgeInsets':
        return insetsDiffer;
    }

    return null;
  }

  function getProcessorForType(typeName) {
    switch (typeName) {
      case 'CGColor':
      case 'UIColor':
        return processColor;

      case 'CGColorArray':
      case 'UIColorArray':
        return processColorArray;

      case 'CGImage':
      case 'UIImage':
      case 'RCTImageSource':
        return resolveAssetSource;

      case 'Color':
        return processColor;

      case 'ColorArray':
        return processColorArray;
    }

    return null;
  }

  module.exports = getNativeComponentAttributes;
},14593,[14344,14314,10378,10279,10408,14326,10411,10414,10393,14596,10417,10402,14332]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var processColor = _$$_REQUIRE(_dependencyMap[0]);

  function processColorArray(colors) {
    return colors == null ? null : colors.map(processColor);
  }

  module.exports = processColorArray;
},14596,[10393]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var androidScaleSuffix = {
    '0.75': 'ldpi',
    '1': 'mdpi',
    '1.5': 'hdpi',
    '2': 'xhdpi',
    '3': 'xxhdpi',
    '4': 'xxxhdpi'
  };

  function getAndroidAssetSuffix(scale) {
    if (scale.toString() in androidScaleSuffix) {
      return androidScaleSuffix[scale.toString()];
    }

    throw new Error('no such scale ' + scale.toString());
  }

  var drawableFileTypes = new Set(['gif', 'jpeg', 'jpg', 'png', 'svg', 'webp', 'xml']);

  function getAndroidResourceFolderName(asset, scale) {
    if (!drawableFileTypes.has(asset.type)) {
      return 'raw';
    }

    var suffix = getAndroidAssetSuffix(scale);

    if (!suffix) {
      throw new Error("Don't know which android drawable suffix to use for scale: " + scale + '\nAsset: ' + JSON.stringify(asset, null, '\t') + '\nPossible scales are:' + JSON.stringify(androidScaleSuffix, null, '\t'));
    }

    var androidFolder = 'drawable-' + suffix;
    return androidFolder;
  }

  function getAndroidResourceIdentifier(asset) {
    var folderPath = getBasePath(asset);
    return (folderPath + '/' + asset.name).toLowerCase().replace(/\//g, '_').replace(/([^a-z0-9_])/g, '').replace(/^assets_/, '');
  }

  function getBasePath(asset) {
    var basePath = asset.httpServerLocation;

    if (basePath[0] === '/') {
      basePath = basePath.substr(1);
    }

    return basePath;
  }

  module.exports = {
    getAndroidAssetSuffix: getAndroidAssetSuffix,
    getAndroidResourceFolderName: getAndroidResourceFolderName,
    getAndroidResourceIdentifier: getAndroidResourceIdentifier,
    getBasePath: getBasePath
  };
},14599,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('SourceCode');

  exports.default = _default;
},14602,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('AndroidProgressBar');

  exports.default = _default;
},14605,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _requireNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  function codegenNativeComponent(componentName, options) {
    var componentNameInUse = options && options.paperComponentName ? options.paperComponentName : componentName;

    if (options != null && options.paperComponentNameDeprecated != null) {
      if (_reactNative.UIManager.getViewManagerConfig(componentName)) {
        componentNameInUse = componentName;
      } else if (options.paperComponentNameDeprecated != null && _reactNative.UIManager.getViewManagerConfig(options.paperComponentNameDeprecated)) {
        componentNameInUse = options.paperComponentNameDeprecated;
      } else {
        throw new Error("Failed to find native component for either " + componentName + " or " + (options.paperComponentNameDeprecated || '(unknown)'));
      }
    }

    return (0, _requireNativeComponent.default)(componentNameInUse);
  }

  var _default = codegenNativeComponent;
  exports.default = _default;
},14608,[14305,10372,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedEdgeInsetsPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedStyleSheetPropType = _$$_REQUIRE(_dependencyMap[2]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedTextStylePropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var stylePropType = DeprecatedStyleSheetPropType(DeprecatedTextStylePropTypes);
  var DataDetectorTypes = ['phoneNumber', 'link', 'email', 'none', 'all'];
  module.exports = {
    ellipsizeMode: PropTypes.oneOf(['head', 'middle', 'tail', 'clip']),
    numberOfLines: PropTypes.number,
    textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),
    onLayout: PropTypes.func,
    onPress: PropTypes.func,
    onLongPress: PropTypes.func,
    pressRetentionOffset: DeprecatedEdgeInsetsPropType,
    selectable: PropTypes.bool,
    selectionColor: DeprecatedColorPropType,
    suppressHighlighting: PropTypes.bool,
    style: stylePropType,
    testID: PropTypes.string,
    nativeID: PropTypes.string,
    allowFontScaling: PropTypes.bool,
    maxFontSizeMultiplier: PropTypes.number,
    accessible: PropTypes.bool,
    adjustsFontSizeToFit: PropTypes.bool,
    minimumFontScale: PropTypes.number,
    disabled: PropTypes.bool,
    dataDetectorType: PropTypes.oneOf(DataDetectorTypes)
  };
},14611,[14419,14614,14617,10318,14434]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var PropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedEdgeInsetsPropType = PropTypes.shape({
    top: PropTypes.number,
    left: PropTypes.number,
    bottom: PropTypes.number,
    right: PropTypes.number
  });
  module.exports = DeprecatedEdgeInsetsPropType;
},14614,[10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var deprecatedCreateStrictShapeTypeChecker = _$$_REQUIRE(_dependencyMap[0]);

  var flattenStyle = _$$_REQUIRE(_dependencyMap[1]);

  function DeprecatedStyleSheetPropType(shape) {
    var shapePropType = deprecatedCreateStrictShapeTypeChecker(shape);
    return function (props, propName, componentName, location) {
      var newProps = props;

      if (props[propName]) {
        newProps = {};
        newProps[propName] = flattenStyle(props[propName]);
      }

      for (var _len = arguments.length, rest = new Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
        rest[_key - 4] = arguments[_key];
      }

      return shapePropType.apply(undefined, [newProps, propName, componentName, location].concat(rest));
    };
  }

  module.exports = DeprecatedStyleSheetPropType;
},14617,[14620,10291]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var merge = _$$_REQUIRE(_dependencyMap[1]);

  function deprecatedCreateStrictShapeTypeChecker(shapeTypes) {
    function checkType(isRequired, props, propName, componentName, location) {
      if (!props[propName]) {
        if (isRequired) {
          invariant(false, "Required object `" + propName + "` was not specified in " + ("`" + componentName + "`."));
        }

        return;
      }

      var propValue = props[propName];
      var propType = typeof propValue;
      var locationName = location || '(unknown)';

      if (propType !== 'object') {
        invariant(false, "Invalid " + locationName + " `" + propName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
      }

      var allKeys = merge(props[propName], shapeTypes);

      for (var _len = arguments.length, rest = new Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
        rest[_key - 5] = arguments[_key];
      }

      for (var _key2 in allKeys) {
        var checker = shapeTypes[_key2];

        if (!checker) {
          invariant(false, "Invalid props." + propName + " key `" + _key2 + "` supplied to `" + componentName + "`." + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
        }

        var error = checker.apply(undefined, [propValue, _key2, componentName, location].concat(rest));

        if (error) {
          invariant(false, error.message + '\nBad object: ' + JSON.stringify(props[propName], null, '  '));
        }
      }
    }

    function chainedCheckType(props, propName, componentName, location) {
      for (var _len2 = arguments.length, rest = new Array(_len2 > 4 ? _len2 - 4 : 0), _key3 = 4; _key3 < _len2; _key3++) {
        rest[_key3 - 4] = arguments[_key3];
      }

      return checkType.apply(undefined, [false, props, propName, componentName, location].concat(rest));
    }

    chainedCheckType.isRequired = checkType.bind(null, true);
    return chainedCheckType;
  }

  module.exports = deprecatedCreateStrictShapeTypeChecker;
},14620,[14326,10339]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = React.createContext(false);
},14623,[10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _NativeTVNavigationEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var Platform = _$$_REQUIRE(_dependencyMap[2]);

  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[3]);

  function TVEventHandler() {
    this.__nativeTVNavigationEventListener = null;
    this.__nativeTVNavigationEventEmitter = null;
  }

  TVEventHandler.prototype.enable = function (component, callback) {
    this.__nativeTVNavigationEventEmitter = new NativeEventEmitter(_NativeTVNavigationEventEmitter.default);
    this.__nativeTVNavigationEventListener = this.__nativeTVNavigationEventEmitter.addListener('onHWKeyEvent', function (data) {
      if (callback) {
        callback(component, data);
      }
    });
  };

  TVEventHandler.prototype.disable = function () {
    if (this.__nativeTVNavigationEventListener) {
      this.__nativeTVNavigationEventListener.remove();

      delete this.__nativeTVNavigationEventListener;
    }

    if (this.__nativeTVNavigationEventEmitter) {
      delete this.__nativeTVNavigationEventEmitter;
    }
  };

  module.exports = TVEventHandler;
},14626,[14305,14629,10066,10198]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('TVNavigationEventEmitter');

  exports.default = _default;
},14629,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var keyMirror = function keyMirror(obj) {
    var ret = {};
    var key;
    !(obj instanceof Object && !Array.isArray(obj)) ? invariant(false) : undefined;

    for (key in obj) {
      if (!obj.hasOwnProperty(key)) {
        continue;
      }

      ret[key] = key;
    }

    return ret;
  };

  module.exports = keyMirror;
},14632,[14635]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var validateFormat = function (format) {
    if (format === undefined) {
      throw new Error('invariant(...): Second argument must be a string.');
    }
  };

  function invariant(condition, format) {
    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    validateFormat(format);

    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
      } else {
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return String(args[argIndex++]);
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1;
      throw error;
    }
  }

  module.exports = invariant;
},14635,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function nullthrows(x, message) {
    if (x != null) {
      return x;
    }

    var error = new Error(message !== undefined ? message : 'Got unexpected ' + x);
    error.framesToPop = 1;
    throw error;
  }

  module.exports = nullthrows;
  module.exports.default = nullthrows;
  Object.defineProperty(module.exports, '__esModule', {
    value: true
  });
},14638,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = {
    DeprecatedAccessibilityRoles: ['none', 'button', 'link', 'search', 'image', 'keyboardkey', 'text', 'adjustable', 'imagebutton', 'header', 'summary', 'alert', 'checkbox', 'combobox', 'menu', 'menubar', 'menuitem', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'spinbutton', 'switch', 'tab', 'tablist', 'timer', 'toolbar'],
    DeprecatedAccessibilityStates: ['selected', 'disabled', 'checked', 'unchecked', 'busy', 'expanded', 'collapsed', 'hasPopup']
  };
},14641,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var _require = _$$_REQUIRE(_dependencyMap[1]),
      AnimatedEvent = _require.AnimatedEvent,
      attachNativeEvent = _require.attachNativeEvent;

  var AnimatedImplementation = _$$_REQUIRE(_dependencyMap[2]);

  var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[3]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[4]);

  var AnimatedProps = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedValue = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedValueXY = _$$_REQUIRE(_dependencyMap[7]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[8]);

  var emptyAnimation = {
    start: function start() {},
    stop: function stop() {},
    reset: function reset() {},
    _startNativeLoop: function _startNativeLoop() {},
    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return false;
    }
  };

  var spring = function spring(value, config) {
    var anyValue = value;
    return _objectSpread({}, emptyAnimation, {
      start: function start(callback) {
        anyValue.setValue(config.toValue);
        callback && callback({
          finished: true
        });
      }
    });
  };

  var timing = function timing(value, config) {
    var anyValue = value;
    return _objectSpread({}, emptyAnimation, {
      start: function start(callback) {
        anyValue.setValue(config.toValue);
        callback && callback({
          finished: true
        });
      }
    });
  };

  var decay = function decay(value, config) {
    return emptyAnimation;
  };

  var sequence = function sequence(animations) {
    return emptyAnimation;
  };

  var parallel = function parallel(animations, config) {
    return emptyAnimation;
  };

  var delay = function delay(time) {
    return emptyAnimation;
  };

  var stagger = function stagger(time, animations) {
    return emptyAnimation;
  };

  var loop = function loop(animation) {
    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        _ref$iterations = _ref.iterations,
        iterations = _ref$iterations === undefined ? -1 : _ref$iterations;

    return emptyAnimation;
  };

  var event = function event(argMapping, config) {
    return null;
  };

  module.exports = {
    Value: AnimatedValue,
    ValueXY: AnimatedValueXY,
    Interpolation: AnimatedInterpolation,
    Node: AnimatedNode,
    decay: decay,
    timing: timing,
    spring: spring,
    add: AnimatedImplementation.add,
    subtract: AnimatedImplementation.subtract,
    divide: AnimatedImplementation.divide,
    multiply: AnimatedImplementation.multiply,
    modulo: AnimatedImplementation.modulo,
    diffClamp: AnimatedImplementation.diffClamp,
    delay: delay,
    sequence: sequence,
    parallel: parallel,
    stagger: stagger,
    loop: loop,
    event: event,
    createAnimatedComponent: createAnimatedComponent,
    attachNativeEvent: attachNativeEvent,
    forkEvent: AnimatedImplementation.forkEvent,
    unforkEvent: AnimatedImplementation.unforkEvent,
    Event: AnimatedEvent,
    __PropsOnlyForTests: AnimatedProps
  };
},14644,[14314,10528,10525,10534,10537,10567,10531,10579,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('NativeAnimatedModule');

  exports.default = _default;
},14647,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _get = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[7]);

  var AnimatedValue = _$$_REQUIRE(_dependencyMap[8]);

  var AnimatedWithChildren = _$$_REQUIRE(_dependencyMap[9]);

  var AnimatedSubtraction = function (_AnimatedWithChildren) {
    _inherits(AnimatedSubtraction, _AnimatedWithChildren);

    function AnimatedSubtraction(a, b) {
      var _this;

      _classCallCheck(this, AnimatedSubtraction);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedSubtraction).call(this));
      _this._a = typeof a === 'number' ? new AnimatedValue(a) : a;
      _this._b = typeof b === 'number' ? new AnimatedValue(b) : b;
      return _this;
    }

    _createClass(AnimatedSubtraction, [{
      key: "__makeNative",
      value: function __makeNative() {
        this._a.__makeNative();

        this._b.__makeNative();

        _get(_getPrototypeOf(AnimatedSubtraction.prototype), "__makeNative", this).call(this);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        return this._a.__getValue() - this._b.__getValue();
      }
    }, {
      key: "interpolate",
      value: function interpolate(config) {
        return new AnimatedInterpolation(this, config);
      }
    }, {
      key: "__attach",
      value: function __attach() {
        this._a.__addChild(this);

        this._b.__addChild(this);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        this._a.__removeChild(this);

        this._b.__removeChild(this);

        _get(_getPrototypeOf(AnimatedSubtraction.prototype), "__detach", this).call(this);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        return {
          type: 'subtraction',
          input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
        };
      }
    }]);

    return AnimatedSubtraction;
  }(AnimatedWithChildren);

  module.exports = AnimatedSubtraction;
},14650,[14320,14323,14371,14377,14380,14386,10534,10537,10531,10543]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var FlatList = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(FlatList, {
    scrollEventThrottle: 0.0001
  });
},14653,[10657,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('AndroidSwipeRefreshLayout');

  exports.default = _default;
},14656,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('PullToRefreshView', {
    paperComponentName: 'RCTRefreshControl'
  });

  exports.default = _default;
},14659,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('FrameRateLogger');

  exports.default = _default;
},14662,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('KeyboardObserver');

  exports.default = _default;
},14665,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var OUTER_PROPS = _extends(Object.create(null), {
    margin: true,
    marginHorizontal: true,
    marginVertical: true,
    marginBottom: true,
    marginTop: true,
    marginLeft: true,
    marginRight: true,
    flex: true,
    flexGrow: true,
    flexShrink: true,
    flexBasis: true,
    alignSelf: true,
    height: true,
    minHeight: true,
    maxHeight: true,
    width: true,
    minWidth: true,
    maxWidth: true,
    position: true,
    left: true,
    right: true,
    bottom: true,
    top: true
  });

  function splitLayoutProps(props) {
    var inner = {};
    var outer = {};

    if (props) {
      Object.keys(props).forEach(function (k) {
        var value = props[k];

        if (OUTER_PROPS[k]) {
          outer[k] = value;
        } else {
          inner[k] = value;
        }
      });
    }

    return {
      outer: outer,
      inner: inner
    };
  }

  module.exports = splitLayoutProps;
},14668,[14344]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Image = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(Image);
},14671,[10606,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]);
},14674,[14677]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var runtime = function (exports) {
    "use strict";

    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var undefined;
    var $Symbol = typeof Symbol === "function" ? Symbol : {};
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

    function wrap(innerFn, outerFn, self, tryLocsList) {
      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
      var generator = Object.create(protoGenerator.prototype);
      var context = new Context(tryLocsList || []);
      generator._invoke = makeInvokeMethod(innerFn, self, context);
      return generator;
    }

    exports.wrap = wrap;

    function tryCatch(fn, obj, arg) {
      try {
        return {
          type: "normal",
          arg: fn.call(obj, arg)
        };
      } catch (err) {
        return {
          type: "throw",
          arg: err
        };
      }
    }

    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";
    var ContinueSentinel = {};

    function Generator() {}

    function GeneratorFunction() {}

    function GeneratorFunctionPrototype() {}

    var IteratorPrototype = {};

    IteratorPrototype[iteratorSymbol] = function () {
      return this;
    };

    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
      IteratorPrototype = NativeIteratorPrototype;
    }

    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
    GeneratorFunctionPrototype.constructor = GeneratorFunction;
    GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

    function defineIteratorMethods(prototype) {
      ["next", "throw", "return"].forEach(function (method) {
        prototype[method] = function (arg) {
          return this._invoke(method, arg);
        };
      });
    }

    exports.isGeneratorFunction = function (genFun) {
      var ctor = typeof genFun === "function" && genFun.constructor;
      return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
    };

    exports.mark = function (genFun) {
      if (Object.setPrototypeOf) {
        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
      } else {
        genFun.__proto__ = GeneratorFunctionPrototype;

        if (!(toStringTagSymbol in genFun)) {
          genFun[toStringTagSymbol] = "GeneratorFunction";
        }
      }

      genFun.prototype = Object.create(Gp);
      return genFun;
    };

    exports.awrap = function (arg) {
      return {
        __await: arg
      };
    };

    function AsyncIterator(generator, PromiseImpl) {
      function invoke(method, arg, resolve, reject) {
        var record = tryCatch(generator[method], generator, arg);

        if (record.type === "throw") {
          reject(record.arg);
        } else {
          var result = record.arg;
          var value = result.value;

          if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
            return PromiseImpl.resolve(value.__await).then(function (value) {
              invoke("next", value, resolve, reject);
            }, function (err) {
              invoke("throw", err, resolve, reject);
            });
          }

          return PromiseImpl.resolve(value).then(function (unwrapped) {
            result.value = unwrapped;
            resolve(result);
          }, function (error) {
            return invoke("throw", error, resolve, reject);
          });
        }
      }

      var previousPromise;

      function enqueue(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }

        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }

      this._invoke = enqueue;
    }

    defineIteratorMethods(AsyncIterator.prototype);

    AsyncIterator.prototype[asyncIteratorSymbol] = function () {
      return this;
    };

    exports.AsyncIterator = AsyncIterator;

    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
      if (PromiseImpl === undefined) PromiseImpl = Promise;
      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
      return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
        return result.done ? result.value : iter.next();
      });
    };

    function makeInvokeMethod(innerFn, self, context) {
      var state = GenStateSuspendedStart;
      return function invoke(method, arg) {
        if (state === GenStateExecuting) {
          throw new Error("Generator is already running");
        }

        if (state === GenStateCompleted) {
          if (method === "throw") {
            throw arg;
          }

          return doneResult();
        }

        context.method = method;
        context.arg = arg;

        while (true) {
          var delegate = context.delegate;

          if (delegate) {
            var delegateResult = maybeInvokeDelegate(delegate, context);

            if (delegateResult) {
              if (delegateResult === ContinueSentinel) continue;
              return delegateResult;
            }
          }

          if (context.method === "next") {
            context.sent = context._sent = context.arg;
          } else if (context.method === "throw") {
            if (state === GenStateSuspendedStart) {
              state = GenStateCompleted;
              throw context.arg;
            }

            context.dispatchException(context.arg);
          } else if (context.method === "return") {
            context.abrupt("return", context.arg);
          }

          state = GenStateExecuting;
          var record = tryCatch(innerFn, self, context);

          if (record.type === "normal") {
            state = context.done ? GenStateCompleted : GenStateSuspendedYield;

            if (record.arg === ContinueSentinel) {
              continue;
            }

            return {
              value: record.arg,
              done: context.done
            };
          } else if (record.type === "throw") {
            state = GenStateCompleted;
            context.method = "throw";
            context.arg = record.arg;
          }
        }
      };
    }

    function maybeInvokeDelegate(delegate, context) {
      var method = delegate.iterator[context.method];

      if (method === undefined) {
        context.delegate = null;

        if (context.method === "throw") {
          if (delegate.iterator["return"]) {
            context.method = "return";
            context.arg = undefined;
            maybeInvokeDelegate(delegate, context);

            if (context.method === "throw") {
              return ContinueSentinel;
            }
          }

          context.method = "throw";
          context.arg = new TypeError("The iterator does not provide a 'throw' method");
        }

        return ContinueSentinel;
      }

      var record = tryCatch(method, delegate.iterator, context.arg);

      if (record.type === "throw") {
        context.method = "throw";
        context.arg = record.arg;
        context.delegate = null;
        return ContinueSentinel;
      }

      var info = record.arg;

      if (!info) {
        context.method = "throw";
        context.arg = new TypeError("iterator result is not an object");
        context.delegate = null;
        return ContinueSentinel;
      }

      if (info.done) {
        context[delegate.resultName] = info.value;
        context.next = delegate.nextLoc;

        if (context.method !== "return") {
          context.method = "next";
          context.arg = undefined;
        }
      } else {
        return info;
      }

      context.delegate = null;
      return ContinueSentinel;
    }

    defineIteratorMethods(Gp);
    Gp[toStringTagSymbol] = "Generator";

    Gp[iteratorSymbol] = function () {
      return this;
    };

    Gp.toString = function () {
      return "[object Generator]";
    };

    function pushTryEntry(locs) {
      var entry = {
        tryLoc: locs[0]
      };

      if (1 in locs) {
        entry.catchLoc = locs[1];
      }

      if (2 in locs) {
        entry.finallyLoc = locs[2];
        entry.afterLoc = locs[3];
      }

      this.tryEntries.push(entry);
    }

    function resetTryEntry(entry) {
      var record = entry.completion || {};
      record.type = "normal";
      delete record.arg;
      entry.completion = record;
    }

    function Context(tryLocsList) {
      this.tryEntries = [{
        tryLoc: "root"
      }];
      tryLocsList.forEach(pushTryEntry, this);
      this.reset(true);
    }

    exports.keys = function (object) {
      var keys = [];

      for (var key in object) {
        keys.push(key);
      }

      keys.reverse();
      return function next() {
        while (keys.length) {
          var key = keys.pop();

          if (key in object) {
            next.value = key;
            next.done = false;
            return next;
          }
        }

        next.done = true;
        return next;
      };
    };

    function values(iterable) {
      if (iterable) {
        var iteratorMethod = iterable[iteratorSymbol];

        if (iteratorMethod) {
          return iteratorMethod.call(iterable);
        }

        if (typeof iterable.next === "function") {
          return iterable;
        }

        if (!isNaN(iterable.length)) {
          var i = -1,
              next = function next() {
            while (++i < iterable.length) {
              if (hasOwn.call(iterable, i)) {
                next.value = iterable[i];
                next.done = false;
                return next;
              }
            }

            next.value = undefined;
            next.done = true;
            return next;
          };

          return next.next = next;
        }
      }

      return {
        next: doneResult
      };
    }

    exports.values = values;

    function doneResult() {
      return {
        value: undefined,
        done: true
      };
    }

    Context.prototype = {
      constructor: Context,
      reset: function reset(skipTempReset) {
        this.prev = 0;
        this.next = 0;
        this.sent = this._sent = undefined;
        this.done = false;
        this.delegate = null;
        this.method = "next";
        this.arg = undefined;
        this.tryEntries.forEach(resetTryEntry);

        if (!skipTempReset) {
          for (var name in this) {
            if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
              this[name] = undefined;
            }
          }
        }
      },
      stop: function stop() {
        this.done = true;
        var rootEntry = this.tryEntries[0];
        var rootRecord = rootEntry.completion;

        if (rootRecord.type === "throw") {
          throw rootRecord.arg;
        }

        return this.rval;
      },
      dispatchException: function dispatchException(exception) {
        if (this.done) {
          throw exception;
        }

        var context = this;

        function handle(loc, caught) {
          record.type = "throw";
          record.arg = exception;
          context.next = loc;

          if (caught) {
            context.method = "next";
            context.arg = undefined;
          }

          return !!caught;
        }

        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          var record = entry.completion;

          if (entry.tryLoc === "root") {
            return handle("end");
          }

          if (entry.tryLoc <= this.prev) {
            var hasCatch = hasOwn.call(entry, "catchLoc");
            var hasFinally = hasOwn.call(entry, "finallyLoc");

            if (hasCatch && hasFinally) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              } else if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else if (hasCatch) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              }
            } else if (hasFinally) {
              if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else {
              throw new Error("try statement without catch or finally");
            }
          }
        }
      },
      abrupt: function abrupt(type, arg) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
            var finallyEntry = entry;
            break;
          }
        }

        if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
          finallyEntry = null;
        }

        var record = finallyEntry ? finallyEntry.completion : {};
        record.type = type;
        record.arg = arg;

        if (finallyEntry) {
          this.method = "next";
          this.next = finallyEntry.finallyLoc;
          return ContinueSentinel;
        }

        return this.complete(record);
      },
      complete: function complete(record, afterLoc) {
        if (record.type === "throw") {
          throw record.arg;
        }

        if (record.type === "break" || record.type === "continue") {
          this.next = record.arg;
        } else if (record.type === "return") {
          this.rval = this.arg = record.arg;
          this.method = "return";
          this.next = "end";
        } else if (record.type === "normal" && afterLoc) {
          this.next = afterLoc;
        }

        return ContinueSentinel;
      },
      finish: function finish(finallyLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.finallyLoc === finallyLoc) {
            this.complete(entry.completion, entry.afterLoc);
            resetTryEntry(entry);
            return ContinueSentinel;
          }
        }
      },
      "catch": function _catch(tryLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc === tryLoc) {
            var record = entry.completion;

            if (record.type === "throw") {
              var thrown = record.arg;
              resetTryEntry(entry);
            }

            return thrown;
          }
        }

        throw new Error("illegal catch attempt");
      },
      delegateYield: function delegateYield(iterable, resultName, nextLoc) {
        this.delegate = {
          iterator: values(iterable),
          resultName: resultName,
          nextLoc: nextLoc
        };

        if (this.method === "next") {
          this.arg = undefined;
        }

        return ContinueSentinel;
      }
    };
    return exports;
  }(typeof module === "object" ? module.exports : {});

  try {
    regeneratorRuntime = runtime;
  } catch (accidentalStrictMode) {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
},14677,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedEdgeInsetsPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedStyleSheetPropType = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedViewStylePropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var PlatformViewPropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var _require = _$$_REQUIRE(_dependencyMap[6]),
      DeprecatedAccessibilityRoles = _require.DeprecatedAccessibilityRoles,
      DeprecatedAccessibilityStates = _require.DeprecatedAccessibilityStates;

  var stylePropType = DeprecatedStyleSheetPropType(DeprecatedViewStylePropTypes);
  module.exports = _objectSpread({
    accessible: PropTypes.bool,
    accessibilityLabel: PropTypes.node,
    accessibilityHint: PropTypes.string,
    accessibilityActions: PropTypes.arrayOf(PropTypes.string),
    accessibilityIgnoresInvertColors: PropTypes.bool,
    accessibilityRole: PropTypes.oneOf(DeprecatedAccessibilityRoles),
    accessibilityStates: PropTypes.arrayOf(PropTypes.oneOf(DeprecatedAccessibilityStates)),
    accessibilityState: PropTypes.object,
    accessibilityLiveRegion: PropTypes.oneOf(['none', 'polite', 'assertive']),
    importantForAccessibility: PropTypes.oneOf(['auto', 'yes', 'no', 'no-hide-descendants']),
    accessibilityViewIsModal: PropTypes.bool,
    accessibilityElementsHidden: PropTypes.bool,
    onAccessibilityAction: PropTypes.func,
    onAccessibilityTap: PropTypes.func,
    onMagicTap: PropTypes.func,
    testID: PropTypes.string,
    nativeID: PropTypes.string,
    onResponderGrant: PropTypes.func,
    onResponderMove: PropTypes.func,
    onResponderReject: PropTypes.func,
    onResponderRelease: PropTypes.func,
    onResponderTerminate: PropTypes.func,
    onResponderTerminationRequest: PropTypes.func,
    onStartShouldSetResponder: PropTypes.func,
    onStartShouldSetResponderCapture: PropTypes.func,
    onMoveShouldSetResponder: PropTypes.func,
    onMoveShouldSetResponderCapture: PropTypes.func,
    hitSlop: DeprecatedEdgeInsetsPropType,
    onLayout: PropTypes.func,
    pointerEvents: PropTypes.oneOf(['box-none', 'none', 'box-only', 'auto']),
    style: stylePropType,
    removeClippedSubviews: PropTypes.bool,
    renderToHardwareTextureAndroid: PropTypes.bool,
    shouldRasterizeIOS: PropTypes.bool,
    collapsable: PropTypes.bool,
    needsOffscreenAlphaCompositing: PropTypes.bool
  }, PlatformViewPropTypes);
},14680,[14314,14614,14617,14437,10348,10318,14641]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  var ImageViewNativeComponent = requireNativeComponent('RCTImageView');
  module.exports = ImageViewNativeComponent;
},14683,[10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  var TextInlineImage = requireNativeComponent('RCTTextInlineImage');
  module.exports = TextInlineImage;
},14686,[10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ScrollView = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(ScrollView, {
    scrollEventThrottle: 0.0001
  });
},14689,[10609,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var SectionList = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(SectionList, {
    scrollEventThrottle: 0.0001
  });
},14692,[10744,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Text = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(Text);
},14695,[10483,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var View = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(View);
},14698,[10447,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = requireNativeComponent('AndroidCheckBox');
},14701,[10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function setAndForwardRef(_ref) {
    var getForwardedRef = _ref.getForwardedRef,
        setLocalRef = _ref.setLocalRef;
    return function forwardRef(ref) {
      var forwardedRef = getForwardedRef();
      setLocalRef(ref);

      if (typeof forwardedRef === 'function') {
        forwardedRef(ref);
      } else if (typeof forwardedRef === 'object' && forwardedRef != null) {
        forwardedRef.current = ref;
      }
    };
  }

  module.exports = setAndForwardRef;
},14704,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Commands = undefined;

  var _codegenNativeCommands = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var Commands = (0, _codegenNativeCommands.default)({
    supportedCommands: ['openDrawer', 'closeDrawer']
  });
  exports.Commands = Commands;

  var _default = (0, _codegenNativeComponent.default)('AndroidDrawerLayout');

  exports.default = _default;
},14707,[14308,14305,14710,14608,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _ReactNative = _$$_REQUIRE(_dependencyMap[0]);

  function codegenNativeCommands(options) {
    var commandObj = {};
    options.supportedCommands.forEach(function (command) {
      commandObj[command] = function (ref) {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        (0, _ReactNative.dispatchCommand)(ref, command, args);
      };
    });
    return commandObj;
  }

  var _default = codegenNativeCommands;
  exports.default = _default;
},14710,[10114]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('StatusBarManager');

  exports.default = _default;
},14713,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "WebView", {
    enumerable: true,
    get: function get() {
      return _WebView.default;
    }
  });
  exports.default = undefined;

  var _WebView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _WebView.default;
  exports.default = _default;
},14731,[14305,14734]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _WebViewShared = _$$_REQUIRE(_dependencyMap[5]);

  var _WebView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var __extends = this && this.__extends || function () {
    var _extendStatics = function extendStatics(d, b) {
      _extendStatics = Object.setPrototypeOf || {
        __proto__: []
      } instanceof Array && function (d, b) {
        d.__proto__ = b;
      } || function (d, b) {
        for (var p in b) {
          if (b.hasOwnProperty(p)) d[p] = b[p];
        }
      };

      return _extendStatics(d, b);
    };

    return function (d, b) {
      _extendStatics(d, b);

      function __() {
        this.constructor = d;
      }

      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
  }();

  var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function (resolve) {
        resolve(value);
      });
    }

    return new (P || (P = Promise))(function (resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }

      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }

      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }

      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };

  var __generator = this && this.__generator || function (thisArg, body) {
    var _ = {
      label: 0,
      sent: function sent() {
        if (t[0] & 1) throw t[1];
        return t[1];
      },
      trys: [],
      ops: []
    },
        f,
        y,
        t,
        g;
    return g = {
      next: verb(0),
      "throw": verb(1),
      "return": verb(2)
    }, typeof Symbol === "function" && (g[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"] = function () {
      return this;
    }), g;

    function verb(n) {
      return function (v) {
        return step([n, v]);
      };
    }

    function step(op) {
      if (f) throw new TypeError("Generator is already executing.");

      while (_) {
        try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];

          switch (op[0]) {
            case 0:
            case 1:
              t = op;
              break;

            case 4:
              _.label++;
              return {
                value: op[1],
                done: false
              };

            case 5:
              _.label++;
              y = op[1];
              op = [0];
              continue;

            case 7:
              op = _.ops.pop();

              _.trys.pop();

              continue;

            default:
              if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                _ = 0;
                continue;
              }

              if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                _.label = op[1];
                break;
              }

              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1];
                t = op;
                break;
              }

              if (t && _.label < t[2]) {
                _.label = t[2];

                _.ops.push(op);

                break;
              }

              if (t[2]) _.ops.pop();

              _.trys.pop();

              continue;
          }

          op = body.call(thisArg, _);
        } catch (e) {
          op = [6, e];
          y = 0;
        } finally {
          f = t = 0;
        }
      }

      if (op[0] & 5) throw op[1];
      return {
        value: op[0] ? op[1] : undefined,
        done: true
      };
    }
  };

  var __rest = this && this.__rest || function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
  };

  var UIManager = _reactNative.UIManager;
  var RNCWebView = (0, _reactNative.requireNativeComponent)('RNCWebView');
  var resolveAssetSource = _reactNative.Image.resolveAssetSource;

  var WebView = function (_super) {
    __extends(WebView, _super);

    function WebView() {
      var _this = _super !== null && _super.apply(this, arguments) || this;

      _this.startUrl = null;
      _this.state = {
        viewState: _this.props.startInLoadingState ? 'LOADING' : 'IDLE',
        lastErrorEvent: null
      };
      _this.webViewRef = _react.default.createRef();

      _this.getCommands = function () {
        return UIManager.getViewManagerConfig('RNCWebView').Commands;
      };

      _this.goForward = function () {
        UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), _this.getCommands().goForward, undefined);
      };

      _this.goBack = function () {
        UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), _this.getCommands().goBack, undefined);
      };

      _this.reload = function () {
        _this.setState({
          viewState: 'LOADING'
        });

        UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), _this.getCommands().reload, undefined);
      };

      _this.stopLoading = function () {
        UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), _this.getCommands().stopLoading, undefined);
      };

      _this.requestFocus = function () {
        UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), _this.getCommands().requestFocus, undefined);
      };

      _this.postMessage = function (data) {
        UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), _this.getCommands().postMessage, [String(data)]);
      };

      _this.injectJavaScript = function (data) {
        UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), _this.getCommands().injectJavaScript, [data]);
      };

      _this.updateNavigationState = function (event) {
        if (_this.props.onNavigationStateChange) {
          _this.props.onNavigationStateChange(event.nativeEvent);
        }
      };

      _this.getWebViewHandle = function () {
        var nodeHandle = (0, _reactNative.findNodeHandle)(_this.webViewRef.current);
        (0, _invariant.default)(nodeHandle != null, 'nodeHandle expected to be non-null');
        return nodeHandle;
      };

      _this.onLoadingStart = function (event) {
        var onLoadStart = _this.props.onLoadStart;
        var url = event.nativeEvent.url;
        _this.startUrl = url;

        if (onLoadStart) {
          onLoadStart(event);
        }

        _this.updateNavigationState(event);
      };

      _this.onLoadingError = function (event) {
        event.persist();
        var _a = _this.props,
            onError = _a.onError,
            onLoadEnd = _a.onLoadEnd;

        if (onError) {
          onError(event);
        }

        if (onLoadEnd) {
          onLoadEnd(event);
        }

        _this.setState({
          lastErrorEvent: event.nativeEvent,
          viewState: 'ERROR'
        });
      };

      _this.onHttpError = function (event) {
        var onHttpError = _this.props.onHttpError;

        if (onHttpError) {
          onHttpError(event);
        }
      };

      _this.onLoadingFinish = function (event) {
        var _a = _this.props,
            onLoad = _a.onLoad,
            onLoadEnd = _a.onLoadEnd;
        var url = event.nativeEvent.url;

        if (onLoad) {
          onLoad(event);
        }

        if (onLoadEnd) {
          onLoadEnd(event);
        }

        if (url === _this.startUrl) {
          _this.setState({
            viewState: 'IDLE'
          });
        }

        _this.updateNavigationState(event);
      };

      _this.onMessage = function (event) {
        var onMessage = _this.props.onMessage;

        if (onMessage) {
          onMessage(event);
        }
      };

      _this.onLoadingProgress = function (event) {
        var onLoadProgress = _this.props.onLoadProgress;
        var progress = event.nativeEvent.progress;

        if (progress === 1) {
          _this.setState(function (state) {
            if (state.viewState === 'LOADING') {
              return {
                viewState: 'IDLE'
              };
            }

            return null;
          });
        }

        if (onLoadProgress) {
          onLoadProgress(event);
        }
      };

      _this.onShouldStartLoadWithRequestCallback = function (shouldStart, url) {
        if (shouldStart) {
          UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), _this.getCommands().loadUrl, [String(url)]);
        }
      };

      return _this;
    }

    WebView.prototype.render = function () {
      var _a = this.props,
          onMessage = _a.onMessage,
          onShouldStartLoadWithRequestProp = _a.onShouldStartLoadWithRequest,
          originWhitelist = _a.originWhitelist,
          renderError = _a.renderError,
          renderLoading = _a.renderLoading,
          source = _a.source,
          style = _a.style,
          containerStyle = _a.containerStyle,
          _b = _a.nativeConfig,
          nativeConfig = _b === undefined ? {} : _b,
          otherProps = __rest(_a, ["onMessage", "onShouldStartLoadWithRequest", "originWhitelist", "renderError", "renderLoading", "source", "style", "containerStyle", "nativeConfig"]);

      var otherView = null;

      if (this.state.viewState === 'LOADING') {
        otherView = (renderLoading || _WebViewShared.defaultRenderLoading)();
      } else if (this.state.viewState === 'ERROR') {
        var errorEvent = this.state.lastErrorEvent;
        (0, _invariant.default)(errorEvent != null, 'lastErrorEvent expected to be non-null');
        otherView = (renderError || _WebViewShared.defaultRenderError)(errorEvent.domain, errorEvent.code, errorEvent.description);
      } else if (this.state.viewState !== 'IDLE') {}

      var webViewStyles = [_WebView.default.container, _WebView.default.webView, style];
      var webViewContainerStyle = [_WebView.default.container, containerStyle];

      if (typeof source !== "number" && source && 'method' in source) {
        if (source.method === 'POST' && source.headers) {} else if (source.method === 'GET' && source.body) {}
      }

      var NativeWebView = nativeConfig.component || RNCWebView;
      var onShouldStartLoadWithRequest = (0, _WebViewShared.createOnShouldStartLoadWithRequest)(this.onShouldStartLoadWithRequestCallback, originWhitelist, onShouldStartLoadWithRequestProp);

      var webView = _react.default.createElement(NativeWebView, (0, _extends2.default)({
        key: "webViewKey"
      }, otherProps, {
        messagingEnabled: typeof onMessage === 'function',
        onLoadingError: this.onLoadingError,
        onLoadingFinish: this.onLoadingFinish,
        onLoadingProgress: this.onLoadingProgress,
        onLoadingStart: this.onLoadingStart,
        onHttpError: this.onHttpError,
        onMessage: this.onMessage,
        onShouldStartLoadWithRequest: onShouldStartLoadWithRequest,
        ref: this.webViewRef,
        source: resolveAssetSource(source),
        style: webViewStyles
      }, nativeConfig.props));

      return _react.default.createElement(_reactNative.View, {
        style: webViewContainerStyle
      }, webView, otherView);
    };

    WebView.defaultProps = {
      overScrollMode: 'always',
      javaScriptEnabled: true,
      thirdPartyCookiesEnabled: true,
      scalesPageToFit: true,
      allowsFullscreenVideo: false,
      allowFileAccess: false,
      saveFormDataDisabled: false,
      cacheEnabled: true,
      androidHardwareAccelerationDisabled: false,
      originWhitelist: _WebViewShared.defaultOriginWhitelist
    };

    WebView.isFileUploadSupported = function () {
      return __awaiter(undefined, undefined, undefined, function () {
        return __generator(this, function (_a) {
          return [2, _reactNative.NativeModules.RNCWebView.isFileUploadSupported()];
        });
      });
    };

    return WebView;
  }(_react.default.Component);

  var _default = WebView;
  exports.default = _default;
},14734,[14305,14344,10297,10033,22408,14737,14743]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.defaultRenderError = exports.defaultRenderLoading = exports.createOnShouldStartLoadWithRequest = exports.defaultOriginWhitelist = undefined;

  var _escapeStringRegexp = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var _WebView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var __spreadArrays = this && this.__spreadArrays || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
      s += arguments[i].length;
    }

    for (var r = Array(s), k = 0, i = 0; i < il; i++) {
      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
        r[k] = a[j];
      }
    }

    return r;
  };

  var defaultOriginWhitelist = ['http://*', 'https://*'];
  exports.defaultOriginWhitelist = defaultOriginWhitelist;

  var extractOrigin = function extractOrigin(url) {
    var result = /^[A-Za-z][A-Za-z0-9+\-.]+:(\/\/)?[^/]*/.exec(url);
    return result === null ? '' : result[0];
  };

  var originWhitelistToRegex = function originWhitelistToRegex(originWhitelist) {
    return "^" + (0, _escapeStringRegexp.default)(originWhitelist).replace(/\\\*/g, '.*');
  };

  var passesWhitelist = function passesWhitelist(compiledWhitelist, url) {
    var origin = extractOrigin(url);
    return compiledWhitelist.some(function (x) {
      return new RegExp(x).test(origin);
    });
  };

  var compileWhitelist = function compileWhitelist(originWhitelist) {
    return __spreadArrays(['about:blank'], originWhitelist || []).map(originWhitelistToRegex);
  };

  var createOnShouldStartLoadWithRequest = function createOnShouldStartLoadWithRequest(loadRequest, originWhitelist, onShouldStartLoadWithRequest) {
    return function (_a) {
      var nativeEvent = _a.nativeEvent;
      var shouldStart = true;
      var url = nativeEvent.url,
          lockIdentifier = nativeEvent.lockIdentifier;

      if (!passesWhitelist(compileWhitelist(originWhitelist), url)) {
        _reactNative.Linking.openURL(url);

        shouldStart = false;
      }

      if (onShouldStartLoadWithRequest) {
        shouldStart = onShouldStartLoadWithRequest(nativeEvent);
      }

      loadRequest(shouldStart, url, lockIdentifier);
    };
  };

  exports.createOnShouldStartLoadWithRequest = createOnShouldStartLoadWithRequest;

  var defaultRenderLoading = function defaultRenderLoading() {
    return _react.default.createElement(_reactNative.View, {
      style: _WebView.default.loadingOrErrorView
    }, _react.default.createElement(_reactNative.ActivityIndicator, null));
  };

  exports.defaultRenderLoading = defaultRenderLoading;

  var defaultRenderError = function defaultRenderError(errorDomain, errorCode, errorDesc) {
    return _react.default.createElement(_reactNative.View, {
      style: _WebView.default.loadingOrErrorView
    }, _react.default.createElement(_reactNative.Text, {
      style: _WebView.default.errorTextTitle
    }, "Error loading page"), _react.default.createElement(_reactNative.Text, {
      style: _WebView.default.errorText
    }, "Domain: " + errorDomain), _react.default.createElement(_reactNative.Text, {
      style: _WebView.default.errorText
    }, "Error Code: " + errorCode), _react.default.createElement(_reactNative.Text, {
      style: _WebView.default.errorText
    }, "Description: " + errorDesc));
  };

  exports.defaultRenderError = defaultRenderError;
},14737,[14305,14740,10297,10033,14743]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var matchOperatorsRegex = /[|\\{}()[\]^$+*?.-]/g;

  module.exports = function (string) {
    if (typeof string !== 'string') {
      throw new TypeError('Expected a string');
    }

    return string.replace(matchOperatorsRegex, '\\$&');
  };
},14740,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      overflow: 'hidden'
    },
    loadingOrErrorView: {
      position: 'absolute',
      flex: 1,
      justifyContent: 'center',
      alignItems: 'center',
      height: '100%',
      width: '100%',
      backgroundColor: 'white'
    },
    loadingProgressBar: {
      height: 20
    },
    errorText: {
      fontSize: 14,
      textAlign: 'center',
      marginBottom: 2
    },
    errorTextTitle: {
      fontSize: 15,
      fontWeight: '500',
      marginBottom: 10
    },
    webView: {
      backgroundColor: '#ffffff'
    }
  });

  var _default = styles;
  exports.default = _default;
},14743,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _RCTInputAccessoryViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[7]);

  var Platform = _$$_REQUIRE(_dependencyMap[8]);

  var React = _$$_REQUIRE(_dependencyMap[9]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[10]);

  var InputAccessoryView = function (_React$Component) {
    (0, _inherits2.default)(InputAccessoryView, _React$Component);

    function InputAccessoryView() {
      (0, _classCallCheck2.default)(this, InputAccessoryView);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InputAccessoryView).apply(this, arguments));
    }

    (0, _createClass2.default)(InputAccessoryView, [{
      key: "render",
      value: function render() {
        {}

        if (React.Children.count(this.props.children) === 0) {
          return null;
        }

        return React.createElement(_RCTInputAccessoryViewNativeComponent.default, {
          style: [this.props.style, styles.container],
          nativeID: this.props.nativeID,
          backgroundColor: this.props.backgroundColor
        }, this.props.children);
      }
    }]);
    return InputAccessoryView;
  }(React.Component);

  var styles = StyleSheet.create({
    container: {
      position: 'absolute'
    }
  });
  module.exports = InputAccessoryView;
},14746,[14305,14320,14323,14371,14377,14386,14749,14419,10066,10297,10441]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('RCTInputAccessoryView');

  exports.default = _default;
},14749,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('ModalManager');

  exports.default = _default;
},14752,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('ModalHostView', {
    interfaceOnly: true,
    paperComponentName: 'RCTModalHostView'
  });

  exports.default = _default;
},14755,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = React.createContext(0);
},14758,[10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('I18nManager');

  exports.default = _default;
},14761,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = (0, _reactNative.requireNativeComponent)('AndroidDropdownPicker');
},14764,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = (0, _reactNative.requireNativeComponent)('AndroidDialogPicker');
},14767,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[1]);

  var Platform = _$$_REQUIRE(_dependencyMap[2]);

  var React = _$$_REQUIRE(_dependencyMap[3]);

  var View = _$$_REQUIRE(_dependencyMap[4]);

  var exported;
  {
    var SafeAreaView = function SafeAreaView(props, forwardedRef) {
      var emulateUnlessSupported = props.emulateUnlessSupported,
          localProps = _objectWithoutProperties(props, ["emulateUnlessSupported"]);

      return React.createElement(View, _extends({}, localProps, {
        ref: forwardedRef
      }));
    };

    var SafeAreaViewRef = React.forwardRef(SafeAreaView);
    SafeAreaViewRef.displayName = 'SafeAreaView';
    exported = SafeAreaViewRef;
  }
  module.exports = exported;
},14770,[14344,14407,10066,10297,10447]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('Slider', {
    interfaceOnly: true,
    paperComponentName: 'RCTSlider'
  });

  exports.default = _default;
},14773,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('Switch', {
    paperComponentName: 'RCTSwitch'
  });

  exports.default = _default;
},14776,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      NativeComponent = _require.NativeComponent;

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = requireNativeComponent('AndroidSwitch');
},14779,[10114,10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedViewPropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var DocumentSelectionState = _$$_REQUIRE(_dependencyMap[4]);

  var Text = _$$_REQUIRE(_dependencyMap[5]);

  var DataDetectorTypes = ['phoneNumber', 'link', 'address', 'calendarEvent', 'none', 'all'];
  module.exports = _objectSpread({}, DeprecatedViewPropTypes, {
    autoCapitalize: PropTypes.oneOf(['none', 'sentences', 'words', 'characters']),
    autoCompleteType: PropTypes.oneOf(['cc-csc', 'cc-exp', 'cc-exp-month', 'cc-exp-year', 'cc-number', 'email', 'name', 'password', 'postal-code', 'street-address', 'tel', 'username', 'off']),
    autoCorrect: PropTypes.bool,
    spellCheck: PropTypes.bool,
    autoFocus: PropTypes.bool,
    allowFontScaling: PropTypes.bool,
    maxFontSizeMultiplier: PropTypes.number,
    editable: PropTypes.bool,
    keyboardType: PropTypes.oneOf(['default', 'email-address', 'numeric', 'phone-pad', 'number-pad', 'ascii-capable', 'numbers-and-punctuation', 'url', 'name-phone-pad', 'decimal-pad', 'twitter', 'web-search', 'visible-password']),
    keyboardAppearance: PropTypes.oneOf(['default', 'light', 'dark']),
    returnKeyType: PropTypes.oneOf(['done', 'go', 'next', 'search', 'send', 'none', 'previous', 'default', 'emergency-call', 'google', 'join', 'route', 'yahoo']),
    returnKeyLabel: PropTypes.string,
    maxLength: PropTypes.number,
    numberOfLines: PropTypes.number,
    disableFullscreenUI: PropTypes.bool,
    enablesReturnKeyAutomatically: PropTypes.bool,
    multiline: PropTypes.bool,
    textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),
    onBlur: PropTypes.func,
    onFocus: PropTypes.func,
    onChange: PropTypes.func,
    onChangeText: PropTypes.func,
    onContentSizeChange: PropTypes.func,
    onTextInput: PropTypes.func,
    onEndEditing: PropTypes.func,
    onSelectionChange: PropTypes.func,
    onSubmitEditing: PropTypes.func,
    onKeyPress: PropTypes.func,
    onLayout: PropTypes.func,
    onScroll: PropTypes.func,
    placeholder: PropTypes.string,
    placeholderTextColor: DeprecatedColorPropType,
    scrollEnabled: PropTypes.bool,
    secureTextEntry: PropTypes.bool,
    selectionColor: DeprecatedColorPropType,
    selectionState: PropTypes.instanceOf(DocumentSelectionState),
    selection: PropTypes.shape({
      start: PropTypes.number.isRequired,
      end: PropTypes.number
    }),
    value: PropTypes.string,
    defaultValue: PropTypes.string,
    clearButtonMode: PropTypes.oneOf(['never', 'while-editing', 'unless-editing', 'always']),
    clearTextOnFocus: PropTypes.bool,
    selectTextOnFocus: PropTypes.bool,
    blurOnSubmit: PropTypes.bool,
    style: Text.propTypes.style,
    underlineColorAndroid: DeprecatedColorPropType,
    inlineImageLeft: PropTypes.string,
    inlineImagePadding: PropTypes.number,
    rejectResponderTermination: PropTypes.bool,
    dataDetectorTypes: PropTypes.oneOfType([PropTypes.oneOf(DataDetectorTypes), PropTypes.arrayOf(PropTypes.oneOf(DataDetectorTypes))]),
    caretHidden: PropTypes.bool,
    contextMenuHidden: PropTypes.bool,
    inputAccessoryViewID: PropTypes.string,
    textContentType: PropTypes.oneOf(['none', 'URL', 'addressCity', 'addressCityAndState', 'addressState', 'countryName', 'creditCardNumber', 'emailAddress', 'familyName', 'fullStreetAddress', 'givenName', 'jobTitle', 'location', 'middleName', 'name', 'namePrefix', 'nameSuffix', 'nickname', 'organizationName', 'postalCode', 'streetAddressLine1', 'streetAddressLine2', 'sublocality', 'telephoneNumber', 'username', 'password', 'newPassword', 'oneTimeCode']),
    showSoftInputOnFocus: PropTypes.bool
  });
},14782,[14314,10318,14419,14680,10789,10483]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var keyOf = function keyOf(oneKeyObj) {
    var key;

    for (key in oneKeyObj) {
      if (!oneKeyObj.hasOwnProperty(key)) {
        continue;
      }

      return key;
    }

    return null;
  };

  module.exports = keyOf;
},14785,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('ActionSheetManager');

  exports.default = _default;
},14788,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('HeadlessJsTaskSupport');

  exports.default = _default;
},14791,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _wrapNativeSuper2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var HeadlessJsTaskError = function (_Error) {
    (0, _inherits2.default)(HeadlessJsTaskError, _Error);

    function HeadlessJsTaskError() {
      (0, _classCallCheck2.default)(this, HeadlessJsTaskError);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HeadlessJsTaskError).apply(this, arguments));
    }

    return HeadlessJsTaskError;
  }((0, _wrapNativeSuper2.default)(Error));

  exports.default = HeadlessJsTaskError;
},14794,[14305,14320,14371,14377,14386,14458]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('BugReporting');

  exports.default = _default;
},14797,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('RedBox');

  exports.default = _default;
},14800,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  var _GlobalPerformanceLogger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var PerformanceLoggerContext = React.createContext(_GlobalPerformanceLogger.default);
  module.exports = PerformanceLoggerContext;
},14803,[14305,14308,10297,14548]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[1]);

  var Text = _$$_REQUIRE(_dependencyMap[2]);

  var View = _$$_REQUIRE(_dependencyMap[3]);

  function ReactFabricIndicator() {
    return React.createElement(View, {
      style: styles.container
    }, React.createElement(Text, {
      style: styles.text
    }, "FABRIC"));
  }

  var styles = StyleSheet.create({
    container: {
      alignItems: 'center',
      justifyContent: 'center',
      backgroundColor: 'rgba(0,0,0, 0.25)',
      position: 'absolute',
      top: 0,
      right: 0,
      padding: 2
    },
    text: {
      fontSize: 6,
      color: '#ffffff'
    }
  });
  module.exports = ReactFabricIndicator;
},14806,[10297,10441,10483,10447]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('DeviceEventManager');

  exports.default = _default;
},14809,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _ReactNativePrivateInterface = _$$_REQUIRE(_dependencyMap[0]);

  var ReactFabric;
  {
    ReactFabric = _$$_REQUIRE(_dependencyMap[1]);
  }

  _ReactNativePrivateInterface.BatchedBridge.registerCallableModule('ReactFabric', ReactFabric);

  module.exports = ReactFabric;
},14812,[14566,14815]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativePrivateInterface = _$$_REQUIRE(_dependencyMap[2]),
      React = _$$_REQUIRE(_dependencyMap[3]),
      Scheduler = _$$_REQUIRE(_dependencyMap[4]);

  function ReactError(error) {
    error.name = "Invariant Violation";
    return error;
  }

  var eventPluginOrder = null,
      namesToPlugins = {};

  function recomputePluginOrdering() {
    if (eventPluginOrder) for (var pluginName in namesToPlugins) {
      var pluginModule = namesToPlugins[pluginName],
          pluginIndex = eventPluginOrder.indexOf(pluginName);
      if (!(-1 < pluginIndex)) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `" + pluginName + "`."));

      if (!plugins[pluginIndex]) {
        if (!pluginModule.extractEvents) throw ReactError(Error("EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `" + pluginName + "` does not."));
        plugins[pluginIndex] = pluginModule;
        pluginIndex = pluginModule.eventTypes;

        for (var eventName in pluginIndex) {
          var JSCompiler_inline_result = undefined;
          var dispatchConfig = pluginIndex[eventName],
              pluginModule$jscomp$0 = pluginModule,
              eventName$jscomp$0 = eventName;
          if (eventNameDispatchConfigs.hasOwnProperty(eventName$jscomp$0)) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same event name, `" + eventName$jscomp$0 + "`."));
          eventNameDispatchConfigs[eventName$jscomp$0] = dispatchConfig;
          var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

          if (phasedRegistrationNames) {
            for (JSCompiler_inline_result in phasedRegistrationNames) {
              phasedRegistrationNames.hasOwnProperty(JSCompiler_inline_result) && publishRegistrationName(phasedRegistrationNames[JSCompiler_inline_result], pluginModule$jscomp$0, eventName$jscomp$0);
            }

            JSCompiler_inline_result = true;
          } else dispatchConfig.registrationName ? (publishRegistrationName(dispatchConfig.registrationName, pluginModule$jscomp$0, eventName$jscomp$0), JSCompiler_inline_result = true) : JSCompiler_inline_result = false;

          if (!JSCompiler_inline_result) throw ReactError(Error("EventPluginRegistry: Failed to publish event `" + eventName + "` for plugin `" + pluginName + "`."));
        }
      }
    }
  }

  function publishRegistrationName(registrationName, pluginModule) {
    if (registrationNameModules[registrationName]) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same registration name, `" + registrationName + "`."));
    registrationNameModules[registrationName] = pluginModule;
  }

  var plugins = [],
      eventNameDispatchConfigs = {},
      registrationNameModules = {};

  function invokeGuardedCallbackImpl(name, func, context, a, b, c, d, e, f) {
    var funcArgs = Array.prototype.slice.call(arguments, 3);

    try {
      func.apply(context, funcArgs);
    } catch (error) {
      this.onError(error);
    }
  }

  var hasError = false,
      caughtError = null,
      hasRethrowError = false,
      rethrowError = null,
      reporter = {
    onError: function onError(error) {
      hasError = true;
      caughtError = error;
    }
  };

  function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
    hasError = false;
    caughtError = null;
    invokeGuardedCallbackImpl.apply(reporter, arguments);
  }

  function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
    invokeGuardedCallback.apply(this, arguments);

    if (hasError) {
      if (hasError) {
        var error = caughtError;
        hasError = false;
        caughtError = null;
      } else throw ReactError(Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue."));

      hasRethrowError || (hasRethrowError = true, rethrowError = error);
    }
  }

  var getFiberCurrentPropsFromNode = null,
      getInstanceFromNode = null,
      getNodeFromInstance = null;

  function executeDispatch(event, listener, inst) {
    var type = event.type || "unknown-event";
    event.currentTarget = getNodeFromInstance(inst);
    invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
    event.currentTarget = null;
  }

  function executeDirectDispatch(event) {
    var dispatchListener = event._dispatchListeners,
        dispatchInstance = event._dispatchInstances;
    if (Array.isArray(dispatchListener)) throw ReactError(Error("executeDirectDispatch(...): Invalid `event`."));
    event.currentTarget = dispatchListener ? getNodeFromInstance(dispatchInstance) : null;
    dispatchListener = dispatchListener ? dispatchListener(event) : null;
    event.currentTarget = null;
    event._dispatchListeners = null;
    event._dispatchInstances = null;
    return dispatchListener;
  }

  function accumulateInto(current, next) {
    if (null == next) throw ReactError(Error("accumulateInto(...): Accumulated items must not be null or undefined."));
    if (null == current) return next;

    if (Array.isArray(current)) {
      if (Array.isArray(next)) return current.push.apply(current, next), current;
      current.push(next);
      return current;
    }

    return Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  function forEachAccumulated(arr, cb, scope) {
    Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
  }

  var eventQueue = null;

  function executeDispatchesAndReleaseTopLevel(e) {
    if (e) {
      var dispatchListeners = e._dispatchListeners,
          dispatchInstances = e._dispatchInstances;
      if (Array.isArray(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !e.isPropagationStopped(); i++) {
        executeDispatch(e, dispatchListeners[i], dispatchInstances[i]);
      } else dispatchListeners && executeDispatch(e, dispatchListeners, dispatchInstances);
      e._dispatchListeners = null;
      e._dispatchInstances = null;
      e.isPersistent() || e.constructor.release(e);
    }
  }

  var injection = {
    injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
      if (eventPluginOrder) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React."));
      eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
      recomputePluginOrdering();
    },
    injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
      var isOrderingDirty = false,
          pluginName;

      for (pluginName in injectedNamesToPlugins) {
        if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
          var pluginModule = injectedNamesToPlugins[pluginName];

          if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
            if (namesToPlugins[pluginName]) throw ReactError(Error("EventPluginRegistry: Cannot inject two different event plugins using the same name, `" + pluginName + "`."));
            namesToPlugins[pluginName] = pluginModule;
            isOrderingDirty = true;
          }
        }
      }

      isOrderingDirty && recomputePluginOrdering();
    }
  };

  function getListener(inst, registrationName) {
    var listener = inst.stateNode;
    if (!listener) return null;
    var props = getFiberCurrentPropsFromNode(listener);
    if (!props) return null;
    listener = props[registrationName];

    a: switch (registrationName) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
        (props = !props.disabled) || (inst = inst.type, props = !("button" === inst || "input" === inst || "select" === inst || "textarea" === inst));
        inst = !props;
        break a;

      default:
        inst = false;
    }

    if (inst) return null;
    if (listener && "function" !== typeof listener) throw ReactError(Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type."));
    return listener;
  }

  function getParent(inst) {
    do {
      inst = inst.return;
    } while (inst && 5 !== inst.tag);

    return inst ? inst : null;
  }

  function traverseTwoPhase(inst, fn, arg) {
    for (var path = []; inst;) {
      path.push(inst), inst = getParent(inst);
    }

    for (inst = path.length; 0 < inst--;) {
      fn(path[inst], "captured", arg);
    }

    for (inst = 0; inst < path.length; inst++) {
      fn(path[inst], "bubbled", arg);
    }
  }

  function accumulateDirectionalDispatches(inst, phase, event) {
    if (phase = getListener(inst, event.dispatchConfig.phasedRegistrationNames[phase])) event._dispatchListeners = accumulateInto(event._dispatchListeners, phase), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }

  function accumulateTwoPhaseDispatchesSingle(event) {
    event && event.dispatchConfig.phasedRegistrationNames && traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }

  function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
      var targetInst = event._targetInst;
      targetInst = targetInst ? getParent(targetInst) : null;
      traverseTwoPhase(targetInst, accumulateDirectionalDispatches, event);
    }
  }

  function accumulateDirectDispatchesSingle(event) {
    if (event && event.dispatchConfig.registrationName) {
      var inst = event._targetInst;

      if (inst && event && event.dispatchConfig.registrationName) {
        var listener = getListener(inst, event.dispatchConfig.registrationName);
        listener && (event._dispatchListeners = accumulateInto(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst));
      }
    }
  }

  function functionThatReturnsTrue() {
    return true;
  }

  function functionThatReturnsFalse() {
    return false;
  }

  function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
    this.dispatchConfig = dispatchConfig;
    this._targetInst = targetInst;
    this.nativeEvent = nativeEvent;
    dispatchConfig = this.constructor.Interface;

    for (var propName in dispatchConfig) {
      dispatchConfig.hasOwnProperty(propName) && ((targetInst = dispatchConfig[propName]) ? this[propName] = targetInst(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName]);
    }

    this.isDefaultPrevented = (null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : false === nativeEvent.returnValue) ? functionThatReturnsTrue : functionThatReturnsFalse;
    this.isPropagationStopped = functionThatReturnsFalse;
    return this;
  }

  _extends(SyntheticEvent.prototype, {
    preventDefault: function preventDefault() {
      this.defaultPrevented = true;
      var event = this.nativeEvent;
      event && (event.preventDefault ? event.preventDefault() : "unknown" !== typeof event.returnValue && (event.returnValue = false), this.isDefaultPrevented = functionThatReturnsTrue);
    },
    stopPropagation: function stopPropagation() {
      var event = this.nativeEvent;
      event && (event.stopPropagation ? event.stopPropagation() : "unknown" !== typeof event.cancelBubble && (event.cancelBubble = true), this.isPropagationStopped = functionThatReturnsTrue);
    },
    persist: function persist() {
      this.isPersistent = functionThatReturnsTrue;
    },
    isPersistent: functionThatReturnsFalse,
    destructor: function destructor() {
      var Interface = this.constructor.Interface,
          propName;

      for (propName in Interface) {
        this[propName] = null;
      }

      this.nativeEvent = this._targetInst = this.dispatchConfig = null;
      this.isPropagationStopped = this.isDefaultPrevented = functionThatReturnsFalse;
      this._dispatchInstances = this._dispatchListeners = null;
    }
  });

  SyntheticEvent.Interface = {
    type: null,
    target: null,
    currentTarget: function currentTarget() {
      return null;
    },
    eventPhase: null,
    bubbles: null,
    cancelable: null,
    timeStamp: function timeStamp(event) {
      return event.timeStamp || Date.now();
    },
    defaultPrevented: null,
    isTrusted: null
  };

  SyntheticEvent.extend = function (Interface) {
    function E() {}

    function Class() {
      return Super.apply(this, arguments);
    }

    var Super = this;
    E.prototype = Super.prototype;
    var prototype = new E();

    _extends(prototype, Class.prototype);

    Class.prototype = prototype;
    Class.prototype.constructor = Class;
    Class.Interface = _extends({}, Super.Interface, Interface);
    Class.extend = Super.extend;
    addEventPoolingTo(Class);
    return Class;
  };

  addEventPoolingTo(SyntheticEvent);

  function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
    if (this.eventPool.length) {
      var instance = this.eventPool.pop();
      this.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
      return instance;
    }

    return new this(dispatchConfig, targetInst, nativeEvent, nativeInst);
  }

  function releasePooledEvent(event) {
    if (!(event instanceof this)) throw ReactError(Error("Trying to release an event instance into a pool of a different type."));
    event.destructor();
    10 > this.eventPool.length && this.eventPool.push(event);
  }

  function addEventPoolingTo(EventConstructor) {
    EventConstructor.eventPool = [];
    EventConstructor.getPooled = getPooledEvent;
    EventConstructor.release = releasePooledEvent;
  }

  var ResponderSyntheticEvent = SyntheticEvent.extend({
    touchHistory: function touchHistory() {
      return null;
    }
  });

  function isStartish(topLevelType) {
    return "topTouchStart" === topLevelType;
  }

  function isMoveish(topLevelType) {
    return "topTouchMove" === topLevelType;
  }

  var startDependencies = ["topTouchStart"],
      moveDependencies = ["topTouchMove"],
      endDependencies = ["topTouchCancel", "topTouchEnd"],
      touchBank = [],
      touchHistory = {
    touchBank: touchBank,
    numberActiveTouches: 0,
    indexOfSingleActiveTouch: -1,
    mostRecentTimeStamp: 0
  };

  function timestampForTouch(touch) {
    return touch.timeStamp || touch.timestamp;
  }

  function getTouchIdentifier(_ref) {
    _ref = _ref.identifier;
    if (null == _ref) throw ReactError(Error("Touch object is missing identifier."));
    return _ref;
  }

  function recordTouchStart(touch) {
    var identifier = getTouchIdentifier(touch),
        touchRecord = touchBank[identifier];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch)) : (touchRecord = {
      touchActive: true,
      startPageX: touch.pageX,
      startPageY: touch.pageY,
      startTimeStamp: timestampForTouch(touch),
      currentPageX: touch.pageX,
      currentPageY: touch.pageY,
      currentTimeStamp: timestampForTouch(touch),
      previousPageX: touch.pageX,
      previousPageY: touch.pageY,
      previousTimeStamp: timestampForTouch(touch)
    }, touchBank[identifier] = touchRecord);
    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
  }

  function recordTouchMove(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
  }

  function recordTouchEnd(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = false, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
  }

  var ResponderTouchHistoryStore = {
    recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
      if (isMoveish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove);else if (isStartish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches) for (topLevelType = 0; topLevelType < touchBank.length; topLevelType++) {
        if (nativeEvent = touchBank[topLevelType], null != nativeEvent && nativeEvent.touchActive) {
          touchHistory.indexOfSingleActiveTouch = topLevelType;
          break;
        }
      }
    },
    touchHistory: touchHistory
  };

  function accumulate(current, next) {
    if (null == next) throw ReactError(Error("accumulate(...): Accumulated items must not be null or undefined."));
    return null == current ? next : Array.isArray(current) ? current.concat(next) : Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  var responderInst = null,
      trackedTouchCount = 0;

  function changeResponder(nextResponderInst, blockHostResponder) {
    var oldResponderInst = responderInst;
    responderInst = nextResponderInst;
    if (null !== ResponderEventPlugin.GlobalResponderHandler) ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
  }

  var eventTypes = {
    startShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onStartShouldSetResponder",
        captured: "onStartShouldSetResponderCapture"
      },
      dependencies: startDependencies
    },
    scrollShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onScrollShouldSetResponder",
        captured: "onScrollShouldSetResponderCapture"
      },
      dependencies: ["topScroll"]
    },
    selectionChangeShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onSelectionChangeShouldSetResponder",
        captured: "onSelectionChangeShouldSetResponderCapture"
      },
      dependencies: ["topSelectionChange"]
    },
    moveShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onMoveShouldSetResponder",
        captured: "onMoveShouldSetResponderCapture"
      },
      dependencies: moveDependencies
    },
    responderStart: {
      registrationName: "onResponderStart",
      dependencies: startDependencies
    },
    responderMove: {
      registrationName: "onResponderMove",
      dependencies: moveDependencies
    },
    responderEnd: {
      registrationName: "onResponderEnd",
      dependencies: endDependencies
    },
    responderRelease: {
      registrationName: "onResponderRelease",
      dependencies: endDependencies
    },
    responderTerminationRequest: {
      registrationName: "onResponderTerminationRequest",
      dependencies: []
    },
    responderGrant: {
      registrationName: "onResponderGrant",
      dependencies: []
    },
    responderReject: {
      registrationName: "onResponderReject",
      dependencies: []
    },
    responderTerminate: {
      registrationName: "onResponderTerminate",
      dependencies: []
    }
  },
      ResponderEventPlugin = {
    _getResponder: function _getResponder() {
      return responderInst;
    },
    eventTypes: eventTypes,
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      if (isStartish(topLevelType)) trackedTouchCount += 1;else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (0 <= trackedTouchCount) --trackedTouchCount;else return undefined, null;
      ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);

      if (targetInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || 0 < trackedTouchCount && "topSelectionChange" === topLevelType || isStartish(topLevelType) || isMoveish(topLevelType))) {
        var JSCompiler_temp = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;
        if (responderInst) b: {
          var JSCompiler_temp$jscomp$0 = responderInst;

          for (var depthA = 0, tempA = JSCompiler_temp$jscomp$0; tempA; tempA = getParent(tempA)) {
            depthA++;
          }

          tempA = 0;

          for (var tempB = targetInst; tempB; tempB = getParent(tempB)) {
            tempA++;
          }

          for (; 0 < depthA - tempA;) {
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0), depthA--;
          }

          for (; 0 < tempA - depthA;) {
            targetInst = getParent(targetInst), tempA--;
          }

          for (; depthA--;) {
            if (JSCompiler_temp$jscomp$0 === targetInst || JSCompiler_temp$jscomp$0 === targetInst.alternate) break b;
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0);
            targetInst = getParent(targetInst);
          }

          JSCompiler_temp$jscomp$0 = null;
        } else JSCompiler_temp$jscomp$0 = targetInst;
        targetInst = JSCompiler_temp$jscomp$0 === responderInst;
        JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp, JSCompiler_temp$jscomp$0, nativeEvent, nativeEventTarget);
        JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory;
        targetInst ? forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingleSkipTarget) : forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingle);

        b: {
          JSCompiler_temp = JSCompiler_temp$jscomp$0._dispatchListeners;
          targetInst = JSCompiler_temp$jscomp$0._dispatchInstances;
          if (Array.isArray(JSCompiler_temp)) for (depthA = 0; depthA < JSCompiler_temp.length && !JSCompiler_temp$jscomp$0.isPropagationStopped(); depthA++) {
            if (JSCompiler_temp[depthA](JSCompiler_temp$jscomp$0, targetInst[depthA])) {
              JSCompiler_temp = targetInst[depthA];
              break b;
            }
          } else if (JSCompiler_temp && JSCompiler_temp(JSCompiler_temp$jscomp$0, targetInst)) {
            JSCompiler_temp = targetInst;
            break b;
          }
          JSCompiler_temp = null;
        }

        JSCompiler_temp$jscomp$0._dispatchInstances = null;
        JSCompiler_temp$jscomp$0._dispatchListeners = null;
        JSCompiler_temp$jscomp$0.isPersistent() || JSCompiler_temp$jscomp$0.constructor.release(JSCompiler_temp$jscomp$0);
        JSCompiler_temp && JSCompiler_temp !== responderInst ? (JSCompiler_temp$jscomp$0 = undefined, targetInst = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, JSCompiler_temp, nativeEvent, nativeEventTarget), targetInst.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(targetInst, accumulateDirectDispatchesSingle), depthA = true === executeDirectDispatch(targetInst), responderInst ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), tempB = !tempA._dispatchListeners || executeDirectDispatch(tempA), tempA.isPersistent() || tempA.constructor.release(tempA), tempB ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, [targetInst, tempA]), changeResponder(JSCompiler_temp, depthA)) : (JSCompiler_temp = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, JSCompiler_temp, nativeEvent, nativeEventTarget), JSCompiler_temp.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, JSCompiler_temp))) : (JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, targetInst), changeResponder(JSCompiler_temp, depthA)), JSCompiler_temp = JSCompiler_temp$jscomp$0) : JSCompiler_temp = null;
      } else JSCompiler_temp = null;

      JSCompiler_temp$jscomp$0 = responderInst && isStartish(topLevelType);
      targetInst = responderInst && isMoveish(topLevelType);
      depthA = responderInst && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType);
      if (JSCompiler_temp$jscomp$0 = JSCompiler_temp$jscomp$0 ? eventTypes.responderStart : targetInst ? eventTypes.responderMove : depthA ? eventTypes.responderEnd : null) JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp$jscomp$0, responderInst, nativeEvent, nativeEventTarget), JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, JSCompiler_temp$jscomp$0);
      JSCompiler_temp$jscomp$0 = responderInst && "topTouchCancel" === topLevelType;
      if (topLevelType = responderInst && !JSCompiler_temp$jscomp$0 && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType)) a: {
        if ((topLevelType = nativeEvent.touches) && 0 !== topLevelType.length) for (targetInst = 0; targetInst < topLevelType.length; targetInst++) {
          if (depthA = topLevelType[targetInst].target, null !== depthA && undefined !== depthA && 0 !== depthA) {
            tempA = getInstanceFromNode(depthA);

            b: {
              for (depthA = responderInst; tempA;) {
                if (depthA === tempA || depthA === tempA.alternate) {
                  depthA = true;
                  break b;
                }

                tempA = getParent(tempA);
              }

              depthA = false;
            }

            if (depthA) {
              topLevelType = false;
              break a;
            }
          }
        }
        topLevelType = true;
      }
      if (topLevelType = JSCompiler_temp$jscomp$0 ? eventTypes.responderTerminate : topLevelType ? eventTypes.responderRelease : null) nativeEvent = ResponderSyntheticEvent.getPooled(topLevelType, responderInst, nativeEvent, nativeEventTarget), nativeEvent.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(nativeEvent, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, nativeEvent), changeResponder(null);
      return JSCompiler_temp;
    },
    GlobalResponderHandler: null,
    injection: {
      injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
        ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
      }
    }
  },
      customBubblingEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customBubblingEventTypes,
      customDirectEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customDirectEventTypes;
  injection.injectEventPluginOrder(["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"]);
  injection.injectEventPluginsByName({
    ResponderEventPlugin: ResponderEventPlugin,
    ReactNativeBridgeEventPlugin: {
      eventTypes: {},
      extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        if (null == targetInst) return null;
        var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
            directDispatchConfig = customDirectEventTypes[topLevelType];
        if (!bubbleDispatchConfig && !directDispatchConfig) throw ReactError(Error('Unsupported top level event type "' + topLevelType + '" dispatched'));
        topLevelType = SyntheticEvent.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
        if (bubbleDispatchConfig) forEachAccumulated(topLevelType, accumulateTwoPhaseDispatchesSingle);else if (directDispatchConfig) forEachAccumulated(topLevelType, accumulateDirectDispatchesSingle);else return null;
        return topLevelType;
      }
    }
  });

  function getInstanceFromInstance(instanceHandle) {
    return instanceHandle;
  }

  getFiberCurrentPropsFromNode = function getFiberCurrentPropsFromNode(inst) {
    return inst.canonical.currentProps;
  };

  getInstanceFromNode = getInstanceFromInstance;

  getNodeFromInstance = function getNodeFromInstance(inst) {
    inst = inst.stateNode.canonical._nativeTag;
    if (!inst) throw ReactError(Error("All native instances should have a tag."));
    return inst;
  };

  ResponderEventPlugin.injection.injectGlobalResponderHandler({
    onChange: function onChange(from, to, blockNativeResponder) {
      null !== to ? ReactNativePrivateInterface.UIManager.setJSResponder(to.stateNode.canonical._nativeTag, blockNativeResponder) : ReactNativePrivateInterface.UIManager.clearJSResponder();
    }
  });
  var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  ReactSharedInternals.hasOwnProperty("ReactCurrentDispatcher") || (ReactSharedInternals.ReactCurrentDispatcher = {
    current: null
  });
  ReactSharedInternals.hasOwnProperty("ReactCurrentBatchConfig") || (ReactSharedInternals.ReactCurrentBatchConfig = {
    suspense: null
  });
  var hasSymbol = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for"),
      REACT_ELEMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") : 60103,
      REACT_PORTAL_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") : 60106,
      REACT_FRAGMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fragment") : 60107,
      REACT_STRICT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.strict_mode") : 60108,
      REACT_PROFILER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.profiler") : 60114,
      REACT_PROVIDER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.provider") : 60109,
      REACT_CONTEXT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.context") : 60110,
      REACT_CONCURRENT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.concurrent_mode") : 60111,
      REACT_FORWARD_REF_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.forward_ref") : 60112,
      REACT_SUSPENSE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense") : 60113,
      REACT_SUSPENSE_LIST_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense_list") : 60120,
      REACT_MEMO_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.memo") : 60115,
      REACT_LAZY_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.lazy") : 60116;
  hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fundamental");
  hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.responder");
  var MAYBE_ITERATOR_SYMBOL = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator");

  function getIteratorFn(maybeIterable) {
    if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
    maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
    return "function" === typeof maybeIterable ? maybeIterable : null;
  }

  function getComponentName(type) {
    if (null == type) return null;
    if ("function" === typeof type) return type.displayName || type.name || null;
    if ("string" === typeof type) return type;

    switch (type) {
      case REACT_FRAGMENT_TYPE:
        return "Fragment";

      case REACT_PORTAL_TYPE:
        return "Portal";

      case REACT_PROFILER_TYPE:
        return "Profiler";

      case REACT_STRICT_MODE_TYPE:
        return "StrictMode";

      case REACT_SUSPENSE_TYPE:
        return "Suspense";

      case REACT_SUSPENSE_LIST_TYPE:
        return "SuspenseList";
    }

    if ("object" === typeof type) switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return "Context.Consumer";

      case REACT_PROVIDER_TYPE:
        return "Context.Provider";

      case REACT_FORWARD_REF_TYPE:
        var innerType = type.render;
        innerType = innerType.displayName || innerType.name || "";
        return type.displayName || ("" !== innerType ? "ForwardRef(" + innerType + ")" : "ForwardRef");

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_LAZY_TYPE:
        if (type = 1 === type._status ? type._result : null) return getComponentName(type);
    }
    return null;
  }

  function isFiberMountedImpl(fiber) {
    var node = fiber;
    if (fiber.alternate) for (; node.return;) {
      node = node.return;
    } else {
      if (0 !== (node.effectTag & 2)) return 1;

      for (; node.return;) {
        if (node = node.return, 0 !== (node.effectTag & 2)) return 1;
      }
    }
    return 3 === node.tag ? 2 : 3;
  }

  function assertIsMounted(fiber) {
    if (2 !== isFiberMountedImpl(fiber)) throw ReactError(Error("Unable to find node on an unmounted component."));
  }

  function findCurrentFiberUsingSlowPath(fiber) {
    var alternate = fiber.alternate;

    if (!alternate) {
      alternate = isFiberMountedImpl(fiber);
      if (3 === alternate) throw ReactError(Error("Unable to find node on an unmounted component."));
      return 1 === alternate ? null : fiber;
    }

    for (var a = fiber, b = alternate;;) {
      var parentA = a.return;
      if (null === parentA) break;
      var parentB = parentA.alternate;

      if (null === parentB) {
        b = parentA.return;

        if (null !== b) {
          a = b;
          continue;
        }

        break;
      }

      if (parentA.child === parentB.child) {
        for (parentB = parentA.child; parentB;) {
          if (parentB === a) return assertIsMounted(parentA), fiber;
          if (parentB === b) return assertIsMounted(parentA), alternate;
          parentB = parentB.sibling;
        }

        throw ReactError(Error("Unable to find node on an unmounted component."));
      }

      if (a.return !== b.return) a = parentA, b = parentB;else {
        for (var didFindChild = false, _child = parentA.child; _child;) {
          if (_child === a) {
            didFindChild = true;
            a = parentA;
            b = parentB;
            break;
          }

          if (_child === b) {
            didFindChild = true;
            b = parentA;
            a = parentB;
            break;
          }

          _child = _child.sibling;
        }

        if (!didFindChild) {
          for (_child = parentB.child; _child;) {
            if (_child === a) {
              didFindChild = true;
              a = parentB;
              b = parentA;
              break;
            }

            if (_child === b) {
              didFindChild = true;
              b = parentB;
              a = parentA;
              break;
            }

            _child = _child.sibling;
          }

          if (!didFindChild) throw ReactError(Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue."));
        }
      }
      if (a.alternate !== b) throw ReactError(Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue."));
    }

    if (3 !== a.tag) throw ReactError(Error("Unable to find node on an unmounted component."));
    return a.stateNode.current === a ? fiber : alternate;
  }

  function findCurrentHostFiber(parent) {
    parent = findCurrentFiberUsingSlowPath(parent);
    if (!parent) return null;

    for (var node = parent;;) {
      if (5 === node.tag || 6 === node.tag) return node;
      if (node.child) node.child.return = node, node = node.child;else {
        if (node === parent) break;

        for (; !node.sibling;) {
          if (!node.return || node.return === parent) return null;
          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    return null;
  }

  function mountSafeCallback_NOT_REALLY_SAFE(context, callback) {
    return function () {
      if (callback && ("boolean" !== typeof context.__isMounted || context.__isMounted)) return callback.apply(context, arguments);
    };
  }

  var emptyObject = {},
      removedKeys = null,
      removedKeyCount = 0;

  function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (Array.isArray(node)) for (var i = node.length; i-- && 0 < removedKeyCount;) {
      restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
    } else if (node && 0 < removedKeyCount) for (i in removedKeys) {
      if (removedKeys[i]) {
        var nextProp = node[i];

        if (undefined !== nextProp) {
          var attributeConfig = validAttributes[i];

          if (attributeConfig) {
            "function" === typeof nextProp && (nextProp = true);
            "undefined" === typeof nextProp && (nextProp = null);
            if ("object" !== typeof attributeConfig) updatePayload[i] = nextProp;else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) nextProp = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[i] = nextProp;
            removedKeys[i] = false;
            removedKeyCount--;
          }
        }
      }
    }
  }

  function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    if (!updatePayload && prevProp === nextProp) return updatePayload;
    if (!prevProp || !nextProp) return nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload;
    if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) return diffProperties(updatePayload, prevProp, nextProp, validAttributes);

    if (Array.isArray(prevProp) && Array.isArray(nextProp)) {
      var minLength = prevProp.length < nextProp.length ? prevProp.length : nextProp.length,
          i;

      for (i = 0; i < minLength; i++) {
        updatePayload = diffNestedProperty(updatePayload, prevProp[i], nextProp[i], validAttributes);
      }

      for (; i < prevProp.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
      }

      for (; i < nextProp.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
      }

      return updatePayload;
    }

    return Array.isArray(prevProp) ? diffProperties(updatePayload, ReactNativePrivateInterface.flattenStyle(prevProp), nextProp, validAttributes) : diffProperties(updatePayload, prevProp, ReactNativePrivateInterface.flattenStyle(nextProp), validAttributes);
  }

  function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) return updatePayload;
    if (!Array.isArray(nextProp)) return diffProperties(updatePayload, emptyObject, nextProp, validAttributes);

    for (var i = 0; i < nextProp.length; i++) {
      updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    }

    return updatePayload;
  }

  function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) return updatePayload;
    if (!Array.isArray(prevProp)) return diffProperties(updatePayload, prevProp, emptyObject, validAttributes);

    for (var i = 0; i < prevProp.length; i++) {
      updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    }

    return updatePayload;
  }

  function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig, propKey;

    for (propKey in nextProps) {
      if (attributeConfig = validAttributes[propKey]) {
        var prevProp = prevProps[propKey];
        var nextProp = nextProps[propKey];
        "function" === typeof nextProp && (nextProp = true, "function" === typeof prevProp && (prevProp = true));
        "undefined" === typeof nextProp && (nextProp = null, "undefined" === typeof prevProp && (prevProp = null));
        removedKeys && (removedKeys[propKey] = false);
        if (updatePayload && undefined !== updatePayload[propKey]) {
          if ("object" !== typeof attributeConfig) updatePayload[propKey] = nextProp;else {
            if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[propKey] = attributeConfig;
          }
        } else if (prevProp !== nextProp) if ("object" !== typeof attributeConfig) ("object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp)) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp);else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) {
          if (undefined === prevProp || ("function" === typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : "object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp))) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = attributeConfig;
        } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), 0 < removedKeyCount && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
      }
    }

    for (var _propKey in prevProps) {
      undefined === nextProps[_propKey] && (!(attributeConfig = validAttributes[_propKey]) || updatePayload && undefined !== updatePayload[_propKey] || (prevProp = prevProps[_propKey], undefined !== prevProp && ("object" !== typeof attributeConfig || "function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[_propKey] = null, removedKeys || (removedKeys = {}), removedKeys[_propKey] || (removedKeys[_propKey] = true, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig))));
    }

    return updatePayload;
  }

  var restoreTarget = null,
      restoreQueue = null;

  function restoreStateOfTarget(target) {
    if (getInstanceFromNode(target)) throw ReactError(Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue."));
  }

  function batchedUpdatesImpl(fn, bookkeeping) {
    return fn(bookkeeping);
  }

  function flushDiscreteUpdatesImpl() {}

  var isInsideEventHandler = false;

  function batchedUpdates(fn, bookkeeping) {
    if (isInsideEventHandler) return fn(bookkeeping);
    isInsideEventHandler = true;

    try {
      return batchedUpdatesImpl(fn, bookkeeping);
    } finally {
      if (isInsideEventHandler = false, null !== restoreTarget || null !== restoreQueue) if (flushDiscreteUpdatesImpl(), restoreTarget && (bookkeeping = restoreTarget, fn = restoreQueue, restoreQueue = restoreTarget = null, restoreStateOfTarget(bookkeeping), fn)) for (bookkeeping = 0; bookkeeping < fn.length; bookkeeping++) {
        restoreStateOfTarget(fn[bookkeeping]);
      }
    }
  }

  function _inherits(subClass, superClass) {
    if ("function" !== typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
  }

  (function (_React$Component) {
    function ReactNativeComponent() {
      if (!(this instanceof ReactNativeComponent)) throw new TypeError("Cannot call a class as a function");

      var call = _React$Component.apply(this, arguments);

      if (!this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return !call || "object" !== typeof call && "function" !== typeof call ? this : call;
    }

    _inherits(ReactNativeComponent, _React$Component);

    ReactNativeComponent.prototype.blur = function () {};

    ReactNativeComponent.prototype.focus = function () {};

    ReactNativeComponent.prototype.measure = function () {};

    ReactNativeComponent.prototype.measureInWindow = function () {};

    ReactNativeComponent.prototype.measureLayout = function () {};

    ReactNativeComponent.prototype.setNativeProps = function () {};

    return ReactNativeComponent;
  })(React.Component);

  new Map();
  new Map();
  new Set();
  new Map();

  function dispatchEvent(target, topLevelType, nativeEvent) {
    batchedUpdates(function () {
      var events = nativeEvent.target;

      for (var events$jscomp$0 = null, i = 0; i < plugins.length; i++) {
        var possiblePlugin = plugins[i];
        possiblePlugin && (possiblePlugin = possiblePlugin.extractEvents(topLevelType, target, nativeEvent, events)) && (events$jscomp$0 = accumulateInto(events$jscomp$0, possiblePlugin));
      }

      events = events$jscomp$0;
      null !== events && (eventQueue = accumulateInto(eventQueue, events));
      events = eventQueue;
      eventQueue = null;

      if (events) {
        forEachAccumulated(events, executeDispatchesAndReleaseTopLevel);
        if (eventQueue) throw ReactError(Error("processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented."));
        if (hasRethrowError) throw events = rethrowError, hasRethrowError = false, rethrowError = null, events;
      }
    });
  }

  function shim$1() {
    throw ReactError(Error("The current renderer does not support hydration. This error is likely caused by a bug in React. Please file an issue."));
  }

  var _nativeFabricUIManage$1 = nativeFabricUIManager,
      createNode = _nativeFabricUIManage$1.createNode,
      cloneNode = _nativeFabricUIManage$1.cloneNode,
      cloneNodeWithNewChildren = _nativeFabricUIManage$1.cloneNodeWithNewChildren,
      cloneNodeWithNewChildrenAndProps = _nativeFabricUIManage$1.cloneNodeWithNewChildrenAndProps,
      cloneNodeWithNewProps = _nativeFabricUIManage$1.cloneNodeWithNewProps,
      createChildNodeSet = _nativeFabricUIManage$1.createChildSet,
      appendChildNode = _nativeFabricUIManage$1.appendChild,
      appendChildNodeToSet = _nativeFabricUIManage$1.appendChildToSet,
      completeRoot = _nativeFabricUIManage$1.completeRoot,
      registerEventHandler = _nativeFabricUIManage$1.registerEventHandler,
      fabricMeasure = _nativeFabricUIManage$1.measure,
      fabricMeasureInWindow = _nativeFabricUIManage$1.measureInWindow,
      fabricMeasureLayout = _nativeFabricUIManage$1.measureLayout,
      getViewConfigForType = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get,
      nextReactTag = 2;
  registerEventHandler && registerEventHandler(dispatchEvent);

  var ReactFabricHostComponent = function () {
    function ReactFabricHostComponent(tag, viewConfig, props, internalInstanceHandle) {
      if (!(this instanceof ReactFabricHostComponent)) throw new TypeError("Cannot call a class as a function");
      this._nativeTag = tag;
      this.viewConfig = viewConfig;
      this.currentProps = props;
      this._internalInstanceHandle = internalInstanceHandle;
    }

    ReactFabricHostComponent.prototype.blur = function () {
      ReactNativePrivateInterface.TextInputState.blurTextInput(this._nativeTag);
    };

    ReactFabricHostComponent.prototype.focus = function () {
      ReactNativePrivateInterface.TextInputState.focusTextInput(this._nativeTag);
    };

    ReactFabricHostComponent.prototype.measure = function (callback) {
      fabricMeasure(this._internalInstanceHandle.stateNode.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactFabricHostComponent.prototype.measureInWindow = function (callback) {
      fabricMeasureInWindow(this._internalInstanceHandle.stateNode.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactFabricHostComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
      "number" !== typeof relativeToNativeNode && relativeToNativeNode instanceof ReactFabricHostComponent && fabricMeasureLayout(this._internalInstanceHandle.stateNode.node, relativeToNativeNode._internalInstanceHandle.stateNode.node, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));
    };

    ReactFabricHostComponent.prototype.setNativeProps = function () {};

    return ReactFabricHostComponent;
  }();

  function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
    if (!hostContext.isInAParentText) throw ReactError(Error("Text strings must be rendered within a <Text> component."));
    hostContext = nextReactTag;
    nextReactTag += 2;
    return {
      node: createNode(hostContext, "RCTRawText", rootContainerInstance, {
        text: text
      }, internalInstanceHandle)
    };
  }

  var scheduleTimeout = setTimeout,
      cancelTimeout = clearTimeout;

  function cloneHiddenInstance(instance) {
    var node = instance.node;
    var updatePayload = diffProperties(null, emptyObject, {
      style: {
        display: "none"
      }
    }, instance.canonical.viewConfig.validAttributes);
    return {
      node: cloneNodeWithNewProps(node, updatePayload),
      canonical: instance.canonical
    };
  }

  var BEFORE_SLASH_RE = /^(.*)[\\\/]/;

  function getStackByFiberInDevAndProd(workInProgress) {
    var info = "";

    do {
      a: switch (workInProgress.tag) {
        case 3:
        case 4:
        case 6:
        case 7:
        case 10:
        case 9:
          var JSCompiler_inline_result = "";
          break a;

        default:
          var owner = workInProgress._debugOwner,
              source = workInProgress._debugSource,
              name = getComponentName(workInProgress.type);
          JSCompiler_inline_result = null;
          owner && (JSCompiler_inline_result = getComponentName(owner.type));
          owner = name;
          name = "";
          source ? name = " (at " + source.fileName.replace(BEFORE_SLASH_RE, "") + ":" + source.lineNumber + ")" : JSCompiler_inline_result && (name = " (created by " + JSCompiler_inline_result + ")");
          JSCompiler_inline_result = "\n    in " + (owner || "Unknown") + name;
      }

      info += JSCompiler_inline_result;
      workInProgress = workInProgress.return;
    } while (workInProgress);

    return info;
  }

  new Set();
  var valueStack = [],
      index = -1;

  function pop(cursor) {
    0 > index || (cursor.current = valueStack[index], valueStack[index] = null, index--);
  }

  function push(cursor, value) {
    index++;
    valueStack[index] = cursor.current;
    cursor.current = value;
  }

  var emptyContextObject = {},
      contextStackCursor = {
    current: emptyContextObject
  },
      didPerformWorkStackCursor = {
    current: false
  },
      previousContext = emptyContextObject;

  function getMaskedContext(workInProgress, unmaskedContext) {
    var contextTypes = workInProgress.type.contextTypes;
    if (!contextTypes) return emptyContextObject;
    var instance = workInProgress.stateNode;
    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
    var context = {},
        key;

    for (key in contextTypes) {
      context[key] = unmaskedContext[key];
    }

    instance && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return context;
  }

  function isContextProvider(type) {
    type = type.childContextTypes;
    return null !== type && undefined !== type;
  }

  function popContext(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function popTopLevelContextObject(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function pushTopLevelContextObject(fiber, context, didChange) {
    if (contextStackCursor.current !== emptyContextObject) throw ReactError(Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue."));
    push(contextStackCursor, context, fiber);
    push(didPerformWorkStackCursor, didChange, fiber);
  }

  function processChildContext(fiber, type, parentContext) {
    var instance = fiber.stateNode;
    fiber = type.childContextTypes;
    if ("function" !== typeof instance.getChildContext) return parentContext;
    instance = instance.getChildContext();

    for (var contextKey in instance) {
      if (!(contextKey in fiber)) throw ReactError(Error((getComponentName(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.'));
    }

    return _extends({}, parentContext, instance);
  }

  function pushContextProvider(workInProgress) {
    var instance = workInProgress.stateNode;
    instance = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
    previousContext = contextStackCursor.current;
    push(contextStackCursor, instance, workInProgress);
    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
    return true;
  }

  function invalidateContextProvider(workInProgress, type, didChange) {
    var instance = workInProgress.stateNode;
    if (!instance) throw ReactError(Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue."));
    didChange ? (type = processChildContext(workInProgress, type, previousContext), instance.__reactInternalMemoizedMergedChildContext = type, pop(didPerformWorkStackCursor, workInProgress), pop(contextStackCursor, workInProgress), push(contextStackCursor, type, workInProgress)) : pop(didPerformWorkStackCursor, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  }

  var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority,
      Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback,
      Scheduler_cancelCallback = Scheduler.unstable_cancelCallback,
      Scheduler_shouldYield = Scheduler.unstable_shouldYield,
      Scheduler_requestPaint = Scheduler.unstable_requestPaint,
      Scheduler_now = Scheduler.unstable_now,
      Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,
      Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority,
      Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,
      Scheduler_NormalPriority = Scheduler.unstable_NormalPriority,
      Scheduler_LowPriority = Scheduler.unstable_LowPriority,
      Scheduler_IdlePriority = Scheduler.unstable_IdlePriority,
      fakeCallbackNode = {},
      requestPaint = undefined !== Scheduler_requestPaint ? Scheduler_requestPaint : function () {},
      syncQueue = null,
      immediateQueueCallbackNode = null,
      isFlushingSyncQueue = false,
      initialTimeMs = Scheduler_now(),
      now = 1e4 > initialTimeMs ? Scheduler_now : function () {
    return Scheduler_now() - initialTimeMs;
  };

  function getCurrentPriorityLevel() {
    switch (Scheduler_getCurrentPriorityLevel()) {
      case Scheduler_ImmediatePriority:
        return 99;

      case Scheduler_UserBlockingPriority:
        return 98;

      case Scheduler_NormalPriority:
        return 97;

      case Scheduler_LowPriority:
        return 96;

      case Scheduler_IdlePriority:
        return 95;

      default:
        throw ReactError(Error("Unknown priority level."));
    }
  }

  function reactPriorityToSchedulerPriority(reactPriorityLevel) {
    switch (reactPriorityLevel) {
      case 99:
        return Scheduler_ImmediatePriority;

      case 98:
        return Scheduler_UserBlockingPriority;

      case 97:
        return Scheduler_NormalPriority;

      case 96:
        return Scheduler_LowPriority;

      case 95:
        return Scheduler_IdlePriority;

      default:
        throw ReactError(Error("Unknown priority level."));
    }
  }

  function runWithPriority$1(reactPriorityLevel, fn) {
    reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
    return Scheduler_runWithPriority(reactPriorityLevel, fn);
  }

  function scheduleCallback(reactPriorityLevel, callback, options) {
    reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
    return Scheduler_scheduleCallback(reactPriorityLevel, callback, options);
  }

  function scheduleSyncCallback(callback) {
    null === syncQueue ? (syncQueue = [callback], immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl)) : syncQueue.push(callback);
    return fakeCallbackNode;
  }

  function flushSyncCallbackQueue() {
    null !== immediateQueueCallbackNode && Scheduler_cancelCallback(immediateQueueCallbackNode);
    flushSyncCallbackQueueImpl();
  }

  function flushSyncCallbackQueueImpl() {
    if (!isFlushingSyncQueue && null !== syncQueue) {
      isFlushingSyncQueue = true;
      var i = 0;

      try {
        var queue = syncQueue;
        runWithPriority$1(99, function () {
          for (; i < queue.length; i++) {
            var callback = queue[i];

            do {
              callback = callback(true);
            } while (null !== callback);
          }
        });
        syncQueue = null;
      } catch (error) {
        throw null !== syncQueue && (syncQueue = syncQueue.slice(i + 1)), Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue), error;
      } finally {
        isFlushingSyncQueue = false;
      }
    }
  }

  function inferPriorityFromExpirationTime(currentTime, expirationTime) {
    if (1073741823 === expirationTime) return 99;
    if (1 === expirationTime) return 95;
    currentTime = 10 * (1073741821 - expirationTime) - 10 * (1073741821 - currentTime);
    return 0 >= currentTime ? 99 : 250 >= currentTime ? 98 : 5250 >= currentTime ? 97 : 95;
  }

  function is(x, y) {
    return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
  }

  var hasOwnProperty = Object.prototype.hasOwnProperty;

  function shallowEqual(objA, objB) {
    if (is(objA, objB)) return true;
    if ("object" !== typeof objA || null === objA || "object" !== typeof objB || null === objB) return false;
    var keysA = Object.keys(objA),
        keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) return false;

    for (keysB = 0; keysB < keysA.length; keysB++) {
      if (!hasOwnProperty.call(objB, keysA[keysB]) || !is(objA[keysA[keysB]], objB[keysA[keysB]])) return false;
    }

    return true;
  }

  function resolveDefaultProps(Component, baseProps) {
    if (Component && Component.defaultProps) {
      baseProps = _extends({}, baseProps);
      Component = Component.defaultProps;

      for (var propName in Component) {
        undefined === baseProps[propName] && (baseProps[propName] = Component[propName]);
      }
    }

    return baseProps;
  }

  function readLazyComponentType(lazyComponent) {
    var result = lazyComponent._result;

    switch (lazyComponent._status) {
      case 1:
        return result;

      case 2:
        throw result;

      case 0:
        throw result;

      default:
        lazyComponent._status = 0;
        result = lazyComponent._ctor;
        result = result();
        result.then(function (moduleObject) {
          0 === lazyComponent._status && (moduleObject = moduleObject.default, lazyComponent._status = 1, lazyComponent._result = moduleObject);
        }, function (error) {
          0 === lazyComponent._status && (lazyComponent._status = 2, lazyComponent._result = error);
        });

        switch (lazyComponent._status) {
          case 1:
            return lazyComponent._result;

          case 2:
            throw lazyComponent._result;
        }

        lazyComponent._result = result;
        throw result;
    }
  }

  var valueCursor = {
    current: null
  },
      currentlyRenderingFiber = null,
      lastContextDependency = null,
      lastContextWithAllBitsObserved = null;

  function resetContextDependencies() {
    lastContextWithAllBitsObserved = lastContextDependency = currentlyRenderingFiber = null;
  }

  function pushProvider(providerFiber, nextValue) {
    var context = providerFiber.type._context;
    push(valueCursor, context._currentValue2, providerFiber);
    context._currentValue2 = nextValue;
  }

  function popProvider(providerFiber) {
    var currentValue = valueCursor.current;
    pop(valueCursor, providerFiber);
    providerFiber.type._context._currentValue2 = currentValue;
  }

  function scheduleWorkOnParentPath(parent, renderExpirationTime) {
    for (; null !== parent;) {
      var alternate = parent.alternate;
      if (parent.childExpirationTime < renderExpirationTime) parent.childExpirationTime = renderExpirationTime, null !== alternate && alternate.childExpirationTime < renderExpirationTime && (alternate.childExpirationTime = renderExpirationTime);else if (null !== alternate && alternate.childExpirationTime < renderExpirationTime) alternate.childExpirationTime = renderExpirationTime;else break;
      parent = parent.return;
    }
  }

  function prepareToReadContext(workInProgress, renderExpirationTime) {
    currentlyRenderingFiber = workInProgress;
    lastContextWithAllBitsObserved = lastContextDependency = null;
    workInProgress = workInProgress.dependencies;
    null !== workInProgress && null !== workInProgress.firstContext && (workInProgress.expirationTime >= renderExpirationTime && (didReceiveUpdate = true), workInProgress.firstContext = null);
  }

  function readContext(context, observedBits) {
    if (lastContextWithAllBitsObserved !== context && false !== observedBits && 0 !== observedBits) {
      if ("number" !== typeof observedBits || 1073741823 === observedBits) lastContextWithAllBitsObserved = context, observedBits = 1073741823;
      observedBits = {
        context: context,
        observedBits: observedBits,
        next: null
      };

      if (null === lastContextDependency) {
        if (null === currentlyRenderingFiber) throw ReactError(Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."));
        lastContextDependency = observedBits;
        currentlyRenderingFiber.dependencies = {
          expirationTime: 0,
          firstContext: observedBits,
          responders: null
        };
      } else lastContextDependency = lastContextDependency.next = observedBits;
    }

    return context._currentValue2;
  }

  var hasForceUpdate = false;

  function createUpdateQueue(baseState) {
    return {
      baseState: baseState,
      firstUpdate: null,
      lastUpdate: null,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function cloneUpdateQueue(currentQueue) {
    return {
      baseState: currentQueue.baseState,
      firstUpdate: currentQueue.firstUpdate,
      lastUpdate: currentQueue.lastUpdate,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function createUpdate(expirationTime, suspenseConfig) {
    return {
      expirationTime: expirationTime,
      suspenseConfig: suspenseConfig,
      tag: 0,
      payload: null,
      callback: null,
      next: null,
      nextEffect: null
    };
  }

  function appendUpdateToQueue(queue, update) {
    null === queue.lastUpdate ? queue.firstUpdate = queue.lastUpdate = update : (queue.lastUpdate.next = update, queue.lastUpdate = update);
  }

  function enqueueUpdate(fiber, update) {
    var alternate = fiber.alternate;

    if (null === alternate) {
      var queue1 = fiber.updateQueue;
      var queue2 = null;
      null === queue1 && (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState));
    } else queue1 = fiber.updateQueue, queue2 = alternate.updateQueue, null === queue1 ? null === queue2 ? (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState), queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState)) : queue1 = fiber.updateQueue = cloneUpdateQueue(queue2) : null === queue2 && (queue2 = alternate.updateQueue = cloneUpdateQueue(queue1));

    null === queue2 || queue1 === queue2 ? appendUpdateToQueue(queue1, update) : null === queue1.lastUpdate || null === queue2.lastUpdate ? (appendUpdateToQueue(queue1, update), appendUpdateToQueue(queue2, update)) : (appendUpdateToQueue(queue1, update), queue2.lastUpdate = update);
  }

  function enqueueCapturedUpdate(workInProgress, update) {
    var workInProgressQueue = workInProgress.updateQueue;
    workInProgressQueue = null === workInProgressQueue ? workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState) : ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
    null === workInProgressQueue.lastCapturedUpdate ? workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update : (workInProgressQueue.lastCapturedUpdate.next = update, workInProgressQueue.lastCapturedUpdate = update);
  }

  function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
    var current = workInProgress.alternate;
    null !== current && queue === current.updateQueue && (queue = workInProgress.updateQueue = cloneUpdateQueue(queue));
    return queue;
  }

  function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
    switch (update.tag) {
      case 1:
        return workInProgress = update.payload, "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;

      case 3:
        workInProgress.effectTag = workInProgress.effectTag & -2049 | 64;

      case 0:
        workInProgress = update.payload;
        nextProps = "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;
        if (null === nextProps || undefined === nextProps) break;
        return _extends({}, prevState, nextProps);

      case 2:
        hasForceUpdate = true;
    }

    return prevState;
  }

  function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
    hasForceUpdate = false;
    queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

    for (var newBaseState = queue.baseState, newFirstUpdate = null, newExpirationTime = 0, update = queue.firstUpdate, resultState = newBaseState; null !== update;) {
      var updateExpirationTime = update.expirationTime;
      updateExpirationTime < renderExpirationTime ? (null === newFirstUpdate && (newFirstUpdate = update, newBaseState = resultState), newExpirationTime < updateExpirationTime && (newExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, update.suspenseConfig), resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastEffect ? queue.firstEffect = queue.lastEffect = update : (queue.lastEffect.nextEffect = update, queue.lastEffect = update)));
      update = update.next;
    }

    updateExpirationTime = null;

    for (update = queue.firstCapturedUpdate; null !== update;) {
      var _updateExpirationTime = update.expirationTime;
      _updateExpirationTime < renderExpirationTime ? (null === updateExpirationTime && (updateExpirationTime = update, null === newFirstUpdate && (newBaseState = resultState)), newExpirationTime < _updateExpirationTime && (newExpirationTime = _updateExpirationTime)) : (resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastCapturedEffect ? queue.firstCapturedEffect = queue.lastCapturedEffect = update : (queue.lastCapturedEffect.nextEffect = update, queue.lastCapturedEffect = update)));
      update = update.next;
    }

    null === newFirstUpdate && (queue.lastUpdate = null);
    null === updateExpirationTime ? queue.lastCapturedUpdate = null : workInProgress.effectTag |= 32;
    null === newFirstUpdate && null === updateExpirationTime && (newBaseState = resultState);
    queue.baseState = newBaseState;
    queue.firstUpdate = newFirstUpdate;
    queue.firstCapturedUpdate = updateExpirationTime;
    workInProgress.expirationTime = newExpirationTime;
    workInProgress.memoizedState = resultState;
  }

  function commitUpdateQueue(finishedWork, finishedQueue, instance) {
    null !== finishedQueue.firstCapturedUpdate && (null !== finishedQueue.lastUpdate && (finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate, finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate), finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null);
    commitUpdateEffects(finishedQueue.firstEffect, instance);
    finishedQueue.firstEffect = finishedQueue.lastEffect = null;
    commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
    finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
  }

  function commitUpdateEffects(effect, instance) {
    for (; null !== effect;) {
      var _callback3 = effect.callback;

      if (null !== _callback3) {
        effect.callback = null;
        var context = instance;
        if ("function" !== typeof _callback3) throw ReactError(Error("Invalid argument passed as callback. Expected a function. Instead received: " + _callback3));

        _callback3.call(context);
      }

      effect = effect.nextEffect;
    }
  }

  var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig,
      emptyRefsObject = new React.Component().refs;

  function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
    ctor = workInProgress.memoizedState;
    getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);
    getDerivedStateFromProps = null === getDerivedStateFromProps || undefined === getDerivedStateFromProps ? ctor : _extends({}, ctor, getDerivedStateFromProps);
    workInProgress.memoizedState = getDerivedStateFromProps;
    nextProps = workInProgress.updateQueue;
    null !== nextProps && 0 === workInProgress.expirationTime && (nextProps.baseState = getDerivedStateFromProps);
  }

  var classComponentUpdater = {
    isMounted: function isMounted(component) {
      return (component = component._reactInternalFiber) ? 2 === isFiberMountedImpl(component) : false;
    },
    enqueueSetState: function enqueueSetState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.payload = payload;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    },
    enqueueReplaceState: function enqueueReplaceState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.tag = 1;
      suspenseConfig.payload = payload;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    },
    enqueueForceUpdate: function enqueueForceUpdate(inst, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.tag = 2;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    }
  };

  function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
    workInProgress = workInProgress.stateNode;
    return "function" === typeof workInProgress.shouldComponentUpdate ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext) : ctor.prototype && ctor.prototype.isPureReactComponent ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState) : true;
  }

  function constructClassInstance(workInProgress, ctor, props) {
    var isLegacyContextConsumer = false,
        unmaskedContext = emptyContextObject;
    var context = ctor.contextType;
    "object" === typeof context && null !== context ? context = readContext(context) : (unmaskedContext = isContextProvider(ctor) ? previousContext : contextStackCursor.current, isLegacyContextConsumer = ctor.contextTypes, context = (isLegacyContextConsumer = null !== isLegacyContextConsumer && undefined !== isLegacyContextConsumer) ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject);
    ctor = new ctor(props, context);
    workInProgress.memoizedState = null !== ctor.state && undefined !== ctor.state ? ctor.state : null;
    ctor.updater = classComponentUpdater;
    workInProgress.stateNode = ctor;
    ctor._reactInternalFiber = workInProgress;
    isLegacyContextConsumer && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return ctor;
  }

  function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
    workInProgress = instance.state;
    "function" === typeof instance.componentWillReceiveProps && instance.componentWillReceiveProps(newProps, nextContext);
    "function" === typeof instance.UNSAFE_componentWillReceiveProps && instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
    instance.state !== workInProgress && classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }

  function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
    var instance = workInProgress.stateNode;
    instance.props = newProps;
    instance.state = workInProgress.memoizedState;
    instance.refs = emptyRefsObject;
    var contextType = ctor.contextType;
    "object" === typeof contextType && null !== contextType ? instance.context = readContext(contextType) : (contextType = isContextProvider(ctor) ? previousContext : contextStackCursor.current, instance.context = getMaskedContext(workInProgress, contextType));
    contextType = workInProgress.updateQueue;
    null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState);
    contextType = ctor.getDerivedStateFromProps;
    "function" === typeof contextType && (applyDerivedStateFromProps(workInProgress, ctor, contextType, newProps), instance.state = workInProgress.memoizedState);
    "function" === typeof ctor.getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || (ctor = instance.state, "function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount(), ctor !== instance.state && classComponentUpdater.enqueueReplaceState(instance, instance.state, null), contextType = workInProgress.updateQueue, null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState));
    "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4);
  }

  var isArray = Array.isArray;

  function coerceRef(returnFiber, current$$1, element) {
    returnFiber = element.ref;

    if (null !== returnFiber && "function" !== typeof returnFiber && "object" !== typeof returnFiber) {
      if (element._owner) {
        element = element._owner;
        var inst = undefined;

        if (element) {
          if (1 !== element.tag) throw ReactError(Error("Function components cannot have refs. Did you mean to use React.forwardRef()?"));
          inst = element.stateNode;
        }

        if (!inst) throw ReactError(Error("Missing owner for string ref " + returnFiber + ". This error is likely caused by a bug in React. Please file an issue."));
        var stringRef = "" + returnFiber;
        if (null !== current$$1 && null !== current$$1.ref && "function" === typeof current$$1.ref && current$$1.ref._stringRef === stringRef) return current$$1.ref;

        current$$1 = function current$$1(value) {
          var refs = inst.refs;
          refs === emptyRefsObject && (refs = inst.refs = {});
          null === value ? delete refs[stringRef] : refs[stringRef] = value;
        };

        current$$1._stringRef = stringRef;
        return current$$1;
      }

      if ("string" !== typeof returnFiber) throw ReactError(Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null."));
      if (!element._owner) throw ReactError(Error("Element ref was specified as a string (" + returnFiber + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information."));
    }

    return returnFiber;
  }

  function throwOnInvalidObjectType(returnFiber, newChild) {
    if ("textarea" !== returnFiber.type) throw ReactError(Error("Objects are not valid as a React child (found: " + ("[object Object]" === Object.prototype.toString.call(newChild) ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild) + ")."));
  }

  function ChildReconciler(shouldTrackSideEffects) {
    function deleteChild(returnFiber, childToDelete) {
      if (shouldTrackSideEffects) {
        var last = returnFiber.lastEffect;
        null !== last ? (last.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
        childToDelete.nextEffect = null;
        childToDelete.effectTag = 8;
      }
    }

    function deleteRemainingChildren(returnFiber, currentFirstChild) {
      if (!shouldTrackSideEffects) return null;

      for (; null !== currentFirstChild;) {
        deleteChild(returnFiber, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return null;
    }

    function mapRemainingChildren(returnFiber, currentFirstChild) {
      for (returnFiber = new Map(); null !== currentFirstChild;) {
        null !== currentFirstChild.key ? returnFiber.set(currentFirstChild.key, currentFirstChild) : returnFiber.set(currentFirstChild.index, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return returnFiber;
    }

    function useFiber(fiber, pendingProps, expirationTime) {
      fiber = createWorkInProgress(fiber, pendingProps, expirationTime);
      fiber.index = 0;
      fiber.sibling = null;
      return fiber;
    }

    function placeChild(newFiber, lastPlacedIndex, newIndex) {
      newFiber.index = newIndex;
      if (!shouldTrackSideEffects) return lastPlacedIndex;
      newIndex = newFiber.alternate;
      if (null !== newIndex) return newIndex = newIndex.index, newIndex < lastPlacedIndex ? (newFiber.effectTag = 2, lastPlacedIndex) : newIndex;
      newFiber.effectTag = 2;
      return lastPlacedIndex;
    }

    function placeSingleChild(newFiber) {
      shouldTrackSideEffects && null === newFiber.alternate && (newFiber.effectTag = 2);
      return newFiber;
    }

    function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
      if (null === current$$1 || 6 !== current$$1.tag) return current$$1 = createFiberFromText(textContent, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, textContent, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateElement(returnFiber, current$$1, element, expirationTime) {
      if (null !== current$$1 && current$$1.elementType === element.type) return expirationTime = useFiber(current$$1, element.props, expirationTime), expirationTime.ref = coerceRef(returnFiber, current$$1, element), expirationTime.return = returnFiber, expirationTime;
      expirationTime = createFiberFromTypeAndProps(element.type, element.key, element.props, null, returnFiber.mode, expirationTime);
      expirationTime.ref = coerceRef(returnFiber, current$$1, element);
      expirationTime.return = returnFiber;
      return expirationTime;
    }

    function updatePortal(returnFiber, current$$1, portal, expirationTime) {
      if (null === current$$1 || 4 !== current$$1.tag || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) return current$$1 = createFiberFromPortal(portal, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, portal.children || [], expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
      if (null === current$$1 || 7 !== current$$1.tag) return current$$1 = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, fragment, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function createChild(returnFiber, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = createFiberFromText("" + newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, null, newChild), expirationTime.return = returnFiber, expirationTime;

          case REACT_PORTAL_TYPE:
            return newChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return newChild = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null), newChild.return = returnFiber, newChild;
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
      var key = null !== oldFiber ? oldFiber.key : null;
      if ("string" === typeof newChild || "number" === typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return newChild.key === key ? newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key) : updateElement(returnFiber, oldFiber, newChild, expirationTime) : null;

          case REACT_PORTAL_TYPE:
            return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, expirationTime) : null;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return null !== key ? null : updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return existingChildren = existingChildren.get(newIdx) || null, updateTextNode(returnFiber, existingChildren, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, existingChildren, newChild.props.children, expirationTime, newChild.key) : updateElement(returnFiber, existingChildren, newChild, expirationTime);

          case REACT_PORTAL_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, updatePortal(returnFiber, existingChildren, newChild, expirationTime);
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return existingChildren = existingChildren.get(newIdx) || null, updateFragment(returnFiber, existingChildren, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
      for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;

      if (null === oldFiber) {
        for (; newIdx < newChildren.length; newIdx++) {
          oldFiber = createChild(returnFiber, newChildren[newIdx], expirationTime), null !== oldFiber && (currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber);
        }

        return resultingFirstChild;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); newIdx < newChildren.length; newIdx++) {
        nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, newChildren[newIdx], expirationTime), null !== nextOldFiber && (shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return resultingFirstChild;
    }

    function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
      var iteratorFn = getIteratorFn(newChildrenIterable);
      if ("function" !== typeof iteratorFn) throw ReactError(Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue."));
      newChildrenIterable = iteratorFn.call(newChildrenIterable);
      if (null == newChildrenIterable) throw ReactError(Error("An iterable object provided no iterator."));

      for (var previousNewFiber = iteratorFn = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null, step = newChildrenIterable.next(); null !== oldFiber && !step.done; newIdx++, step = newChildrenIterable.next()) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? iteratorFn = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), iteratorFn;

      if (null === oldFiber) {
        for (; !step.done; newIdx++, step = newChildrenIterable.next()) {
          step = createChild(returnFiber, step.value, expirationTime), null !== step && (currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
        }

        return iteratorFn;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); !step.done; newIdx++, step = newChildrenIterable.next()) {
        step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, expirationTime), null !== step && (shouldTrackSideEffects && null !== step.alternate && oldFiber.delete(null === step.key ? newIdx : step.key), currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return iteratorFn;
    }

    return function (returnFiber, currentFirstChild, newChild, expirationTime) {
      var isUnkeyedTopLevelFragment = "object" === typeof newChild && null !== newChild && newChild.type === REACT_FRAGMENT_TYPE && null === newChild.key;
      isUnkeyedTopLevelFragment && (newChild = newChild.props.children);
      var isObject = "object" === typeof newChild && null !== newChild;
      if (isObject) switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          a: {
            isObject = newChild.key;

            for (isUnkeyedTopLevelFragment = currentFirstChild; null !== isUnkeyedTopLevelFragment;) {
              if (isUnkeyedTopLevelFragment.key === isObject) {
                if (7 === isUnkeyedTopLevelFragment.tag ? newChild.type === REACT_FRAGMENT_TYPE : isUnkeyedTopLevelFragment.elementType === newChild.type) {
                  deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment.sibling);
                  currentFirstChild = useFiber(isUnkeyedTopLevelFragment, newChild.type === REACT_FRAGMENT_TYPE ? newChild.props.children : newChild.props, expirationTime);
                  currentFirstChild.ref = coerceRef(returnFiber, isUnkeyedTopLevelFragment, newChild);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                }

                deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment);
                break;
              } else deleteChild(returnFiber, isUnkeyedTopLevelFragment);

              isUnkeyedTopLevelFragment = isUnkeyedTopLevelFragment.sibling;
            }

            newChild.type === REACT_FRAGMENT_TYPE ? (currentFirstChild = createFiberFromFragment(newChild.props.children, returnFiber.mode, expirationTime, newChild.key), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, currentFirstChild, newChild), expirationTime.return = returnFiber, returnFiber = expirationTime);
          }

          return placeSingleChild(returnFiber);

        case REACT_PORTAL_TYPE:
          a: {
            for (isUnkeyedTopLevelFragment = newChild.key; null !== currentFirstChild;) {
              if (currentFirstChild.key === isUnkeyedTopLevelFragment) {
                if (4 === currentFirstChild.tag && currentFirstChild.stateNode.containerInfo === newChild.containerInfo && currentFirstChild.stateNode.implementation === newChild.implementation) {
                  deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                  currentFirstChild = useFiber(currentFirstChild, newChild.children || [], expirationTime);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                }

                deleteRemainingChildren(returnFiber, currentFirstChild);
                break;
              } else deleteChild(returnFiber, currentFirstChild);

              currentFirstChild = currentFirstChild.sibling;
            }

            currentFirstChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
            currentFirstChild.return = returnFiber;
            returnFiber = currentFirstChild;
          }

          return placeSingleChild(returnFiber);
      }
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = "" + newChild, null !== currentFirstChild && 6 === currentFirstChild.tag ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling), currentFirstChild = useFiber(currentFirstChild, newChild, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (deleteRemainingChildren(returnFiber, currentFirstChild), currentFirstChild = createFiberFromText(newChild, returnFiber.mode, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild), placeSingleChild(returnFiber);
      if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
      if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
      isObject && throwOnInvalidObjectType(returnFiber, newChild);
      if ("undefined" === typeof newChild && !isUnkeyedTopLevelFragment) switch (returnFiber.tag) {
        case 1:
        case 0:
          throw returnFiber = returnFiber.type, ReactError(Error((returnFiber.displayName || returnFiber.name || "Component") + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null."));
      }
      return deleteRemainingChildren(returnFiber, currentFirstChild);
    };
  }

  var reconcileChildFibers = ChildReconciler(true),
      mountChildFibers = ChildReconciler(false),
      NO_CONTEXT = {},
      contextStackCursor$1 = {
    current: NO_CONTEXT
  },
      contextFiberStackCursor = {
    current: NO_CONTEXT
  },
      rootInstanceStackCursor = {
    current: NO_CONTEXT
  };

  function requiredContext(c) {
    if (c === NO_CONTEXT) throw ReactError(Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue."));
    return c;
  }

  function pushHostContainer(fiber, nextRootInstance) {
    push(rootInstanceStackCursor, nextRootInstance, fiber);
    push(contextFiberStackCursor, fiber, fiber);
    push(contextStackCursor$1, NO_CONTEXT, fiber);
    pop(contextStackCursor$1, fiber);
    push(contextStackCursor$1, {
      isInAParentText: false
    }, fiber);
  }

  function popHostContainer(fiber) {
    pop(contextStackCursor$1, fiber);
    pop(contextFiberStackCursor, fiber);
    pop(rootInstanceStackCursor, fiber);
  }

  function pushHostContext(fiber) {
    requiredContext(rootInstanceStackCursor.current);
    var context = requiredContext(contextStackCursor$1.current);
    var nextContext = fiber.type;
    nextContext = "AndroidTextInput" === nextContext || "RCTMultilineTextInputView" === nextContext || "RCTSinglelineTextInputView" === nextContext || "RCTText" === nextContext || "RCTVirtualText" === nextContext;
    nextContext = context.isInAParentText !== nextContext ? {
      isInAParentText: nextContext
    } : context;
    context !== nextContext && (push(contextFiberStackCursor, fiber, fiber), push(contextStackCursor$1, nextContext, fiber));
  }

  function popHostContext(fiber) {
    contextFiberStackCursor.current === fiber && (pop(contextStackCursor$1, fiber), pop(contextFiberStackCursor, fiber));
  }

  var SubtreeSuspenseContextMask = 1,
      InvisibleParentSuspenseContext = 1,
      ForceSuspenseFallback = 2,
      suspenseStackCursor = {
    current: 0
  };

  function findFirstSuspended(row) {
    for (var node = row; null !== node;) {
      if (13 === node.tag) {
        if (null !== node.memoizedState) return node;
      } else if (19 === node.tag && undefined !== node.memoizedProps.revealOrder) {
        if (0 !== (node.effectTag & 64)) return node;
      } else if (null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === row) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === row) return null;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }

    return null;
  }

  function createResponderListener(responder, props) {
    return {
      responder: responder,
      props: props
    };
  }

  var NoEffect$1 = 0,
      UnmountSnapshot = 2,
      UnmountMutation = 4,
      MountMutation = 8,
      UnmountLayout = 16,
      MountLayout = 32,
      MountPassive = 64,
      UnmountPassive = 128,
      ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,
      renderExpirationTime$1 = 0,
      currentlyRenderingFiber$1 = null,
      currentHook = null,
      nextCurrentHook = null,
      firstWorkInProgressHook = null,
      workInProgressHook = null,
      nextWorkInProgressHook = null,
      remainingExpirationTime = 0,
      componentUpdateQueue = null,
      sideEffectTag = 0,
      didScheduleRenderPhaseUpdate = false,
      renderPhaseUpdates = null,
      numberOfReRenders = 0;

  function throwInvalidHookError() {
    throw ReactError(Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem."));
  }

  function areHookInputsEqual(nextDeps, prevDeps) {
    if (null === prevDeps) return false;

    for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
      if (!is(nextDeps[i], prevDeps[i])) return false;
    }

    return true;
  }

  function renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {
    renderExpirationTime$1 = nextRenderExpirationTime;
    currentlyRenderingFiber$1 = workInProgress;
    nextCurrentHook = null !== current ? current.memoizedState : null;
    ReactCurrentDispatcher$1.current = null === nextCurrentHook ? HooksDispatcherOnMount : HooksDispatcherOnUpdate;
    workInProgress = Component(props, refOrContext);

    if (didScheduleRenderPhaseUpdate) {
      do {
        didScheduleRenderPhaseUpdate = false, numberOfReRenders += 1, nextCurrentHook = null !== current ? current.memoizedState : null, nextWorkInProgressHook = firstWorkInProgressHook, componentUpdateQueue = workInProgressHook = currentHook = null, ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdate, workInProgress = Component(props, refOrContext);
      } while (didScheduleRenderPhaseUpdate);

      renderPhaseUpdates = null;
      numberOfReRenders = 0;
    }

    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    current = currentlyRenderingFiber$1;
    current.memoizedState = firstWorkInProgressHook;
    current.expirationTime = remainingExpirationTime;
    current.updateQueue = componentUpdateQueue;
    current.effectTag |= sideEffectTag;
    current = null !== currentHook && null !== currentHook.next;
    renderExpirationTime$1 = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    if (current) throw ReactError(Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement."));
    return workInProgress;
  }

  function resetHooks() {
    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    renderExpirationTime$1 = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    didScheduleRenderPhaseUpdate = false;
    renderPhaseUpdates = null;
    numberOfReRenders = 0;
  }

  function mountWorkInProgressHook() {
    var hook = {
      memoizedState: null,
      baseState: null,
      queue: null,
      baseUpdate: null,
      next: null
    };
    null === workInProgressHook ? firstWorkInProgressHook = workInProgressHook = hook : workInProgressHook = workInProgressHook.next = hook;
    return workInProgressHook;
  }

  function updateWorkInProgressHook() {
    if (null !== nextWorkInProgressHook) workInProgressHook = nextWorkInProgressHook, nextWorkInProgressHook = workInProgressHook.next, currentHook = nextCurrentHook, nextCurrentHook = null !== currentHook ? currentHook.next : null;else {
      if (null === nextCurrentHook) throw ReactError(Error("Rendered more hooks than during the previous render."));
      currentHook = nextCurrentHook;
      var newHook = {
        memoizedState: currentHook.memoizedState,
        baseState: currentHook.baseState,
        queue: currentHook.queue,
        baseUpdate: currentHook.baseUpdate,
        next: null
      };
      workInProgressHook = null === workInProgressHook ? firstWorkInProgressHook = newHook : workInProgressHook.next = newHook;
      nextCurrentHook = currentHook.next;
    }
    return workInProgressHook;
  }

  function basicStateReducer(state, action) {
    return "function" === typeof action ? action(state) : action;
  }

  function updateReducer(reducer) {
    var hook = updateWorkInProgressHook(),
        queue = hook.queue;
    if (null === queue) throw ReactError(Error("Should have a queue. This is likely a bug in React. Please file an issue."));
    queue.lastRenderedReducer = reducer;

    if (0 < numberOfReRenders) {
      var _dispatch = queue.dispatch;

      if (null !== renderPhaseUpdates) {
        var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

        if (undefined !== firstRenderPhaseUpdate) {
          renderPhaseUpdates.delete(queue);
          var newState = hook.memoizedState;

          do {
            newState = reducer(newState, firstRenderPhaseUpdate.action), firstRenderPhaseUpdate = firstRenderPhaseUpdate.next;
          } while (null !== firstRenderPhaseUpdate);

          is(newState, hook.memoizedState) || (didReceiveUpdate = true);
          hook.memoizedState = newState;
          hook.baseUpdate === queue.last && (hook.baseState = newState);
          queue.lastRenderedState = newState;
          return [newState, _dispatch];
        }
      }

      return [hook.memoizedState, _dispatch];
    }

    _dispatch = queue.last;
    var baseUpdate = hook.baseUpdate;
    newState = hook.baseState;
    null !== baseUpdate ? (null !== _dispatch && (_dispatch.next = null), _dispatch = baseUpdate.next) : _dispatch = null !== _dispatch ? _dispatch.next : null;

    if (null !== _dispatch) {
      var newBaseUpdate = firstRenderPhaseUpdate = null,
          _update = _dispatch,
          didSkip = false;

      do {
        var updateExpirationTime = _update.expirationTime;
        updateExpirationTime < renderExpirationTime$1 ? (didSkip || (didSkip = true, newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState), updateExpirationTime > remainingExpirationTime && (remainingExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, _update.suspenseConfig), newState = _update.eagerReducer === reducer ? _update.eagerState : reducer(newState, _update.action));
        baseUpdate = _update;
        _update = _update.next;
      } while (null !== _update && _update !== _dispatch);

      didSkip || (newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState);
      is(newState, hook.memoizedState) || (didReceiveUpdate = true);
      hook.memoizedState = newState;
      hook.baseUpdate = newBaseUpdate;
      hook.baseState = firstRenderPhaseUpdate;
      queue.lastRenderedState = newState;
    }

    return [hook.memoizedState, queue.dispatch];
  }

  function pushEffect(tag, create, destroy, deps) {
    tag = {
      tag: tag,
      create: create,
      destroy: destroy,
      deps: deps,
      next: null
    };
    null === componentUpdateQueue ? (componentUpdateQueue = {
      lastEffect: null
    }, componentUpdateQueue.lastEffect = tag.next = tag) : (create = componentUpdateQueue.lastEffect, null === create ? componentUpdateQueue.lastEffect = tag.next = tag : (destroy = create.next, create.next = tag, tag.next = destroy, componentUpdateQueue.lastEffect = tag));
    return tag;
  }

  function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = mountWorkInProgressHook();
    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, undefined, undefined === deps ? null : deps);
  }

  function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = updateWorkInProgressHook();
    deps = undefined === deps ? null : deps;
    var destroy = undefined;

    if (null !== currentHook) {
      var prevEffect = currentHook.memoizedState;
      destroy = prevEffect.destroy;

      if (null !== deps && areHookInputsEqual(deps, prevEffect.deps)) {
        pushEffect(NoEffect$1, create, destroy, deps);
        return;
      }
    }

    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, destroy, deps);
  }

  function imperativeHandleEffect(create, ref) {
    if ("function" === typeof ref) return create = create(), ref(create), function () {
      ref(null);
    };
    if (null !== ref && undefined !== ref) return create = create(), ref.current = create, function () {
      ref.current = null;
    };
  }

  function mountDebugValue() {}

  function dispatchAction(fiber, queue, action) {
    if (!(25 > numberOfReRenders)) throw ReactError(Error("Too many re-renders. React limits the number of renders to prevent an infinite loop."));
    var alternate = fiber.alternate;
    if (fiber === currentlyRenderingFiber$1 || null !== alternate && alternate === currentlyRenderingFiber$1) {
      if (didScheduleRenderPhaseUpdate = true, fiber = {
        expirationTime: renderExpirationTime$1,
        suspenseConfig: null,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      }, null === renderPhaseUpdates && (renderPhaseUpdates = new Map()), action = renderPhaseUpdates.get(queue), undefined === action) renderPhaseUpdates.set(queue, fiber);else {
        for (queue = action; null !== queue.next;) {
          queue = queue.next;
        }

        queue.next = fiber;
      }
    } else {
      var currentTime = requestCurrentTime(),
          _suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, fiber, _suspenseConfig);
      _suspenseConfig = {
        expirationTime: currentTime,
        suspenseConfig: _suspenseConfig,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      };
      var _last = queue.last;
      if (null === _last) _suspenseConfig.next = _suspenseConfig;else {
        var first = _last.next;
        null !== first && (_suspenseConfig.next = first);
        _last.next = _suspenseConfig;
      }
      queue.last = _suspenseConfig;
      if (0 === fiber.expirationTime && (null === alternate || 0 === alternate.expirationTime) && (alternate = queue.lastRenderedReducer, null !== alternate)) try {
        var currentState = queue.lastRenderedState,
            _eagerState = alternate(currentState, action);

        _suspenseConfig.eagerReducer = alternate;
        _suspenseConfig.eagerState = _eagerState;
        if (is(_eagerState, currentState)) return;
      } catch (error) {} finally {}
      scheduleUpdateOnFiber(fiber, currentTime);
    }
  }

  var ContextOnlyDispatcher = {
    readContext: readContext,
    useCallback: throwInvalidHookError,
    useContext: throwInvalidHookError,
    useEffect: throwInvalidHookError,
    useImperativeHandle: throwInvalidHookError,
    useLayoutEffect: throwInvalidHookError,
    useMemo: throwInvalidHookError,
    useReducer: throwInvalidHookError,
    useRef: throwInvalidHookError,
    useState: throwInvalidHookError,
    useDebugValue: throwInvalidHookError,
    useResponder: throwInvalidHookError
  },
      HooksDispatcherOnMount = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      mountWorkInProgressHook().memoizedState = [callback, undefined === deps ? null : deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return mountEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return mountEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return mountEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = mountWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: function useReducer(reducer, initialArg, init) {
      var hook = mountWorkInProgressHook();
      initialArg = undefined !== init ? init(initialArg) : initialArg;
      hook.memoizedState = hook.baseState = initialArg;
      reducer = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: reducer,
        lastRenderedState: initialArg
      };
      reducer = reducer.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, reducer);
      return [hook.memoizedState, reducer];
    },
    useRef: function useRef(initialValue) {
      var hook = mountWorkInProgressHook();
      initialValue = {
        current: initialValue
      };
      return hook.memoizedState = initialValue;
    },
    useState: function useState(initialState) {
      var hook = mountWorkInProgressHook();
      "function" === typeof initialState && (initialState = initialState());
      hook.memoizedState = hook.baseState = initialState;
      initialState = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: basicStateReducer,
        lastRenderedState: initialState
      };
      initialState = initialState.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, initialState);
      return [hook.memoizedState, initialState];
    },
    useDebugValue: mountDebugValue,
    useResponder: createResponderListener
  },
      HooksDispatcherOnUpdate = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      hook.memoizedState = [callback, deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return updateEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return updateEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return updateEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: updateReducer,
    useRef: function useRef() {
      return updateWorkInProgressHook().memoizedState;
    },
    useState: function useState(initialState) {
      return updateReducer(basicStateReducer, initialState);
    },
    useDebugValue: mountDebugValue,
    useResponder: createResponderListener
  },
      hydrationParentFiber = null,
      nextHydratableInstance = null,
      isHydrating = false;

  function tryHydrate(fiber, nextInstance) {
    switch (fiber.tag) {
      case 5:
        return nextInstance = shim$1(nextInstance, fiber.type, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 6:
        return nextInstance = shim$1(nextInstance, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 13:
        return false;

      default:
        return false;
    }
  }

  function tryToClaimNextHydratableInstance(fiber$jscomp$0) {
    if (isHydrating) {
      var nextInstance = nextHydratableInstance;

      if (nextInstance) {
        var firstAttemptedInstance = nextInstance;

        if (!tryHydrate(fiber$jscomp$0, nextInstance)) {
          nextInstance = shim$1(firstAttemptedInstance);

          if (!nextInstance || !tryHydrate(fiber$jscomp$0, nextInstance)) {
            fiber$jscomp$0.effectTag |= 2;
            isHydrating = false;
            hydrationParentFiber = fiber$jscomp$0;
            return;
          }

          var returnFiber = hydrationParentFiber,
              fiber = createFiber(5, null, null, 0);
          fiber.elementType = "DELETED";
          fiber.type = "DELETED";
          fiber.stateNode = firstAttemptedInstance;
          fiber.return = returnFiber;
          fiber.effectTag = 8;
          null !== returnFiber.lastEffect ? (returnFiber.lastEffect.nextEffect = fiber, returnFiber.lastEffect = fiber) : returnFiber.firstEffect = returnFiber.lastEffect = fiber;
        }

        hydrationParentFiber = fiber$jscomp$0;
        nextHydratableInstance = shim$1(nextInstance);
      } else fiber$jscomp$0.effectTag |= 2, isHydrating = false, hydrationParentFiber = fiber$jscomp$0;
    }
  }

  var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner,
      didReceiveUpdate = false;

  function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
    workInProgress.child = null === current$$1 ? mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime) : reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
  }

  function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    Component = Component.render;
    var ref = workInProgress.ref;
    prepareToReadContext(workInProgress, renderExpirationTime);
    nextProps = renderWithHooks(current$$1, workInProgress, Component, nextProps, ref, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, nextProps, renderExpirationTime);
    return workInProgress.child;
  }

  function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    if (null === current$$1) {
      var type = Component.type;
      if ("function" === typeof type && !shouldConstruct(type) && undefined === type.defaultProps && null === Component.compare && undefined === Component.defaultProps) return workInProgress.tag = 15, workInProgress.type = type, updateSimpleMemoComponent(current$$1, workInProgress, type, nextProps, updateExpirationTime, renderExpirationTime);
      current$$1 = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
      current$$1.ref = workInProgress.ref;
      current$$1.return = workInProgress;
      return workInProgress.child = current$$1;
    }

    type = current$$1.child;
    if (updateExpirationTime < renderExpirationTime && (updateExpirationTime = type.memoizedProps, Component = Component.compare, Component = null !== Component ? Component : shallowEqual, Component(updateExpirationTime, nextProps) && current$$1.ref === workInProgress.ref)) return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    current$$1 = createWorkInProgress(type, nextProps, renderExpirationTime);
    current$$1.ref = workInProgress.ref;
    current$$1.return = workInProgress;
    return workInProgress.child = current$$1;
  }

  function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    return null !== current$$1 && shallowEqual(current$$1.memoizedProps, nextProps) && current$$1.ref === workInProgress.ref && (didReceiveUpdate = false, updateExpirationTime < renderExpirationTime) ? bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
  }

  function markRef(current$$1, workInProgress) {
    var ref = workInProgress.ref;
    if (null === current$$1 && null !== ref || null !== current$$1 && current$$1.ref !== ref) workInProgress.effectTag |= 128;
  }

  function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    var context = isContextProvider(Component) ? previousContext : contextStackCursor.current;
    context = getMaskedContext(workInProgress, context);
    prepareToReadContext(workInProgress, renderExpirationTime);
    Component = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, Component, renderExpirationTime);
    return workInProgress.child;
  }

  function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    if (isContextProvider(Component)) {
      var hasContext = true;
      pushContextProvider(workInProgress);
    } else hasContext = false;

    prepareToReadContext(workInProgress, renderExpirationTime);
    if (null === workInProgress.stateNode) null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime), mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime), nextProps = true;else if (null === current$$1) {
      var instance = workInProgress.stateNode,
          oldProps = workInProgress.memoizedProps;
      instance.props = oldProps;
      var oldContext = instance.context,
          contextType = Component.contextType;
      "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType));
      var getDerivedStateFromProps = Component.getDerivedStateFromProps,
          hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate;
      hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType);
      hasForceUpdate = false;
      var oldState = workInProgress.memoizedState;
      oldContext = instance.state = oldState;
      var updateQueue = workInProgress.updateQueue;
      null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldContext = workInProgress.memoizedState);
      oldProps !== nextProps || oldState !== oldContext || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldContext = workInProgress.memoizedState), (oldProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldState, oldContext, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || ("function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount()), "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4)) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldContext), instance.props = nextProps, instance.state = oldContext, instance.context = contextType, nextProps = oldProps) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), nextProps = false);
    } else instance = workInProgress.stateNode, oldProps = workInProgress.memoizedProps, instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps), oldContext = instance.context, contextType = Component.contextType, "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType)), getDerivedStateFromProps = Component.getDerivedStateFromProps, (hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate) || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType), hasForceUpdate = false, oldContext = workInProgress.memoizedState, oldState = instance.state = oldContext, updateQueue = workInProgress.updateQueue, null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldState = workInProgress.memoizedState), oldProps !== nextProps || oldContext !== oldState || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldState = workInProgress.memoizedState), (getDerivedStateFromProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldContext, oldState, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillUpdate && "function" !== typeof instance.componentWillUpdate || ("function" === typeof instance.componentWillUpdate && instance.componentWillUpdate(nextProps, oldState, contextType), "function" === typeof instance.UNSAFE_componentWillUpdate && instance.UNSAFE_componentWillUpdate(nextProps, oldState, contextType)), "function" === typeof instance.componentDidUpdate && (workInProgress.effectTag |= 4), "function" === typeof instance.getSnapshotBeforeUpdate && (workInProgress.effectTag |= 256)) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldState), instance.props = nextProps, instance.state = oldState, instance.context = contextType, nextProps = getDerivedStateFromProps) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), nextProps = false);
    return finishClassComponent(current$$1, workInProgress, Component, nextProps, hasContext, renderExpirationTime);
  }

  function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
    markRef(current$$1, workInProgress);
    var didCaptureError = 0 !== (workInProgress.effectTag & 64);
    if (!shouldUpdate && !didCaptureError) return hasContext && invalidateContextProvider(workInProgress, Component, false), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    shouldUpdate = workInProgress.stateNode;
    ReactCurrentOwner$3.current = workInProgress;
    var nextChildren = didCaptureError && "function" !== typeof Component.getDerivedStateFromError ? null : shouldUpdate.render();
    workInProgress.effectTag |= 1;
    null !== current$$1 && didCaptureError ? (workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime), workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime)) : reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
    workInProgress.memoizedState = shouldUpdate.state;
    hasContext && invalidateContextProvider(workInProgress, Component, true);
    return workInProgress.child;
  }

  function pushHostRootContext(workInProgress) {
    var root = workInProgress.stateNode;
    root.pendingContext ? pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context) : root.context && pushTopLevelContextObject(workInProgress, root.context, false);
    pushHostContainer(workInProgress, root.containerInfo);
  }

  var SUSPENDED_MARKER = {};

  function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
    var mode = workInProgress.mode,
        nextProps = workInProgress.pendingProps,
        suspenseContext = suspenseStackCursor.current,
        nextState = null,
        nextDidTimeout = false,
        JSCompiler_temp;
    (JSCompiler_temp = 0 !== (workInProgress.effectTag & 64)) || (JSCompiler_temp = 0 !== (suspenseContext & ForceSuspenseFallback) && (null === current$$1 || null !== current$$1.memoizedState));
    JSCompiler_temp ? (nextState = SUSPENDED_MARKER, nextDidTimeout = true, workInProgress.effectTag &= -65) : null !== current$$1 && null === current$$1.memoizedState || undefined === nextProps.fallback || true === nextProps.unstable_avoidThisFallback || (suspenseContext |= InvisibleParentSuspenseContext);
    suspenseContext &= SubtreeSuspenseContextMask;
    push(suspenseStackCursor, suspenseContext, workInProgress);
    if (null === current$$1) {
      if (nextDidTimeout) {
        nextProps = nextProps.fallback;
        current$$1 = createFiberFromFragment(null, mode, 0, null);
        current$$1.return = workInProgress;
        if (0 === (workInProgress.mode & 2)) for (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, current$$1.child = nextDidTimeout; null !== nextDidTimeout;) {
          nextDidTimeout.return = current$$1, nextDidTimeout = nextDidTimeout.sibling;
        }
        renderExpirationTime = createFiberFromFragment(nextProps, mode, renderExpirationTime, null);
        renderExpirationTime.return = workInProgress;
        current$$1.sibling = renderExpirationTime;
        mode = current$$1;
      } else mode = renderExpirationTime = mountChildFibers(workInProgress, null, nextProps.children, renderExpirationTime);
    } else {
      if (null !== current$$1.memoizedState) {
        if (suspenseContext = current$$1.child, mode = suspenseContext.sibling, nextDidTimeout) {
          nextProps = nextProps.fallback;
          renderExpirationTime = createWorkInProgress(suspenseContext, suspenseContext.pendingProps, 0);
          renderExpirationTime.return = workInProgress;
          if (0 === (workInProgress.mode & 2) && (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextDidTimeout !== suspenseContext.child)) for (renderExpirationTime.child = nextDidTimeout; null !== nextDidTimeout;) {
            nextDidTimeout.return = renderExpirationTime, nextDidTimeout = nextDidTimeout.sibling;
          }
          nextProps = createWorkInProgress(mode, nextProps, mode.expirationTime);
          nextProps.return = workInProgress;
          renderExpirationTime.sibling = nextProps;
          mode = renderExpirationTime;
          renderExpirationTime.childExpirationTime = 0;
          renderExpirationTime = nextProps;
        } else mode = renderExpirationTime = reconcileChildFibers(workInProgress, suspenseContext.child, nextProps.children, renderExpirationTime);
      } else if (suspenseContext = current$$1.child, nextDidTimeout) {
        nextDidTimeout = nextProps.fallback;
        nextProps = createFiberFromFragment(null, mode, 0, null);
        nextProps.return = workInProgress;
        nextProps.child = suspenseContext;
        null !== suspenseContext && (suspenseContext.return = nextProps);
        if (0 === (workInProgress.mode & 2)) for (suspenseContext = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextProps.child = suspenseContext; null !== suspenseContext;) {
          suspenseContext.return = nextProps, suspenseContext = suspenseContext.sibling;
        }
        renderExpirationTime = createFiberFromFragment(nextDidTimeout, mode, renderExpirationTime, null);
        renderExpirationTime.return = workInProgress;
        nextProps.sibling = renderExpirationTime;
        renderExpirationTime.effectTag |= 2;
        mode = nextProps;
        nextProps.childExpirationTime = 0;
      } else renderExpirationTime = mode = reconcileChildFibers(workInProgress, suspenseContext, nextProps.children, renderExpirationTime);
      workInProgress.stateNode = current$$1.stateNode;
    }
    workInProgress.memoizedState = nextState;
    workInProgress.child = mode;
    return renderExpirationTime;
  }

  function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
    var renderState = workInProgress.memoizedState;
    null === renderState ? workInProgress.memoizedState = {
      isBackwards: isBackwards,
      rendering: null,
      last: lastContentRow,
      tail: tail,
      tailExpiration: 0,
      tailMode: tailMode
    } : (renderState.isBackwards = isBackwards, renderState.rendering = null, renderState.last = lastContentRow, renderState.tail = tail, renderState.tailExpiration = 0, renderState.tailMode = tailMode);
  }

  function updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime) {
    var nextProps = workInProgress.pendingProps,
        revealOrder = nextProps.revealOrder,
        tailMode = nextProps.tail;
    reconcileChildren(current$$1, workInProgress, nextProps.children, renderExpirationTime);
    nextProps = suspenseStackCursor.current;
    if (0 !== (nextProps & ForceSuspenseFallback)) nextProps = nextProps & SubtreeSuspenseContextMask | ForceSuspenseFallback, workInProgress.effectTag |= 64;else {
      if (null !== current$$1 && 0 !== (current$$1.effectTag & 64)) a: for (current$$1 = workInProgress.child; null !== current$$1;) {
        if (13 === current$$1.tag) {
          if (null !== current$$1.memoizedState) {
            current$$1.expirationTime < renderExpirationTime && (current$$1.expirationTime = renderExpirationTime);
            var alternate = current$$1.alternate;
            null !== alternate && alternate.expirationTime < renderExpirationTime && (alternate.expirationTime = renderExpirationTime);
            scheduleWorkOnParentPath(current$$1.return, renderExpirationTime);
          }
        } else if (null !== current$$1.child) {
          current$$1.child.return = current$$1;
          current$$1 = current$$1.child;
          continue;
        }

        if (current$$1 === workInProgress) break a;

        for (; null === current$$1.sibling;) {
          if (null === current$$1.return || current$$1.return === workInProgress) break a;
          current$$1 = current$$1.return;
        }

        current$$1.sibling.return = current$$1.return;
        current$$1 = current$$1.sibling;
      }
      nextProps &= SubtreeSuspenseContextMask;
    }
    push(suspenseStackCursor, nextProps, workInProgress);
    if (0 === (workInProgress.mode & 2)) workInProgress.memoizedState = null;else switch (revealOrder) {
      case "forwards":
        renderExpirationTime = workInProgress.child;

        for (revealOrder = null; null !== renderExpirationTime;) {
          nextProps = renderExpirationTime.alternate, null !== nextProps && null === findFirstSuspended(nextProps) && (revealOrder = renderExpirationTime), renderExpirationTime = renderExpirationTime.sibling;
        }

        renderExpirationTime = revealOrder;
        null === renderExpirationTime ? (revealOrder = workInProgress.child, workInProgress.child = null) : (revealOrder = renderExpirationTime.sibling, renderExpirationTime.sibling = null);
        initSuspenseListRenderState(workInProgress, false, revealOrder, renderExpirationTime, tailMode);
        break;

      case "backwards":
        renderExpirationTime = null;
        revealOrder = workInProgress.child;

        for (workInProgress.child = null; null !== revealOrder;) {
          nextProps = revealOrder.alternate;

          if (null !== nextProps && null === findFirstSuspended(nextProps)) {
            workInProgress.child = revealOrder;
            break;
          }

          nextProps = revealOrder.sibling;
          revealOrder.sibling = renderExpirationTime;
          renderExpirationTime = revealOrder;
          revealOrder = nextProps;
        }

        initSuspenseListRenderState(workInProgress, true, renderExpirationTime, null, tailMode);
        break;

      case "together":
        initSuspenseListRenderState(workInProgress, false, null, null, undefined);
        break;

      default:
        workInProgress.memoizedState = null;
    }
    return workInProgress.child;
  }

  function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
    null !== current$$1 && (workInProgress.dependencies = current$$1.dependencies);
    if (workInProgress.childExpirationTime < renderExpirationTime) return null;
    if (null !== current$$1 && workInProgress.child !== current$$1.child) throw ReactError(Error("Resuming work not yet implemented."));

    if (null !== workInProgress.child) {
      current$$1 = workInProgress.child;
      renderExpirationTime = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime);
      workInProgress.child = renderExpirationTime;

      for (renderExpirationTime.return = workInProgress; null !== current$$1.sibling;) {
        current$$1 = current$$1.sibling, renderExpirationTime = renderExpirationTime.sibling = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime), renderExpirationTime.return = workInProgress;
      }

      renderExpirationTime.sibling = null;
    }

    return workInProgress.child;
  }

  var _appendAllChildren = undefined,
      updateHostContainer = undefined,
      updateHostComponent$1 = undefined,
      updateHostText$1 = undefined;

  _appendAllChildren = function appendAllChildren(parent, workInProgress, needsVisibilityToggle, isHidden) {
    for (var node = workInProgress.child; null !== node;) {
      if (5 === node.tag) {
        var instance = node.stateNode;
        needsVisibilityToggle && isHidden && (instance = cloneHiddenInstance(instance, node.type, node.memoizedProps, node));
        appendChildNode(parent.node, instance.node);
      } else if (6 === node.tag) {
        instance = node.stateNode;
        if (needsVisibilityToggle && isHidden) throw Error("Not yet implemented.");
        appendChildNode(parent.node, instance.node);
      } else if (4 !== node.tag) {
        if (13 === node.tag && 0 !== (node.effectTag & 4) && (instance = null !== node.memoizedState)) {
          var primaryChildParent = node.child;

          if (null !== primaryChildParent && (null !== primaryChildParent.child && (primaryChildParent.child.return = primaryChildParent, _appendAllChildren(parent, primaryChildParent, true, instance)), instance = primaryChildParent.sibling, null !== instance)) {
            instance.return = node;
            node = instance;
            continue;
          }
        }

        if (null !== node.child) {
          node.child.return = node;
          node = node.child;
          continue;
        }
      }

      if (node === workInProgress) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === workInProgress) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  function appendAllChildrenToContainer(containerChildSet, workInProgress, needsVisibilityToggle, isHidden) {
    for (var node = workInProgress.child; null !== node;) {
      if (5 === node.tag) {
        var instance = node.stateNode;
        needsVisibilityToggle && isHidden && (instance = cloneHiddenInstance(instance, node.type, node.memoizedProps, node));
        appendChildNodeToSet(containerChildSet, instance.node);
      } else if (6 === node.tag) {
        instance = node.stateNode;
        if (needsVisibilityToggle && isHidden) throw Error("Not yet implemented.");
        appendChildNodeToSet(containerChildSet, instance.node);
      } else if (4 !== node.tag) {
        if (13 === node.tag && 0 !== (node.effectTag & 4) && (instance = null !== node.memoizedState)) {
          var primaryChildParent = node.child;

          if (null !== primaryChildParent && (null !== primaryChildParent.child && (primaryChildParent.child.return = primaryChildParent, appendAllChildrenToContainer(containerChildSet, primaryChildParent, true, instance)), instance = primaryChildParent.sibling, null !== instance)) {
            instance.return = node;
            node = instance;
            continue;
          }
        }

        if (null !== node.child) {
          node.child.return = node;
          node = node.child;
          continue;
        }
      }

      if (node === workInProgress) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === workInProgress) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  updateHostContainer = function updateHostContainer(workInProgress) {
    var portalOrRoot = workInProgress.stateNode;

    if (null !== workInProgress.firstEffect) {
      var container = portalOrRoot.containerInfo,
          newChildSet = createChildNodeSet(container);
      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);
      portalOrRoot.pendingChildren = newChildSet;
      workInProgress.effectTag |= 4;
      completeRoot(container, newChildSet);
    }
  };

  updateHostComponent$1 = function updateHostComponent$1(current, workInProgress, type, newProps) {
    type = current.stateNode;
    var oldProps = current.memoizedProps;
    if ((current = null === workInProgress.firstEffect) && oldProps === newProps) workInProgress.stateNode = type;else {
      var recyclableInstance = workInProgress.stateNode;
      requiredContext(contextStackCursor$1.current);
      var updatePayload = null;
      oldProps !== newProps && (oldProps = diffProperties(null, oldProps, newProps, recyclableInstance.canonical.viewConfig.validAttributes), recyclableInstance.canonical.currentProps = newProps, updatePayload = oldProps);
      current && null === updatePayload ? workInProgress.stateNode = type : (newProps = updatePayload, recyclableInstance = type.node, type = {
        node: current ? null !== newProps ? cloneNodeWithNewProps(recyclableInstance, newProps) : cloneNode(recyclableInstance) : null !== newProps ? cloneNodeWithNewChildrenAndProps(recyclableInstance, newProps) : cloneNodeWithNewChildren(recyclableInstance),
        canonical: type.canonical
      }, workInProgress.stateNode = type, current ? workInProgress.effectTag |= 4 : _appendAllChildren(type, workInProgress, false, false));
    }
  };

  updateHostText$1 = function updateHostText$1(current, workInProgress, oldText, newText) {
    oldText !== newText && (current = requiredContext(rootInstanceStackCursor.current), oldText = requiredContext(contextStackCursor$1.current), workInProgress.stateNode = createTextInstance(newText, current, oldText, workInProgress), workInProgress.effectTag |= 4);
  };

  function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
    switch (renderState.tailMode) {
      case "hidden":
        hasRenderedATailFallback = renderState.tail;

        for (var lastTailNode = null; null !== hasRenderedATailFallback;) {
          null !== hasRenderedATailFallback.alternate && (lastTailNode = hasRenderedATailFallback), hasRenderedATailFallback = hasRenderedATailFallback.sibling;
        }

        null === lastTailNode ? renderState.tail = null : lastTailNode.sibling = null;
        break;

      case "collapsed":
        lastTailNode = renderState.tail;

        for (var _lastTailNode = null; null !== lastTailNode;) {
          null !== lastTailNode.alternate && (_lastTailNode = lastTailNode), lastTailNode = lastTailNode.sibling;
        }

        null === _lastTailNode ? hasRenderedATailFallback || null === renderState.tail ? renderState.tail = null : renderState.tail.sibling = null : _lastTailNode.sibling = null;
    }
  }

  function unwindWork(workInProgress) {
    switch (workInProgress.tag) {
      case 1:
        isContextProvider(workInProgress.type) && popContext(workInProgress);
        var effectTag = workInProgress.effectTag;
        return effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 3:
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        effectTag = workInProgress.effectTag;
        if (0 !== (effectTag & 64)) throw ReactError(Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue."));
        workInProgress.effectTag = effectTag & -2049 | 64;
        return workInProgress;

      case 5:
        return popHostContext(workInProgress), null;

      case 13:
        return pop(suspenseStackCursor, workInProgress), effectTag = workInProgress.effectTag, effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 18:
        return null;

      case 19:
        return pop(suspenseStackCursor, workInProgress), null;

      case 4:
        return popHostContainer(workInProgress), null;

      case 10:
        return popProvider(workInProgress), null;

      default:
        return null;
    }
  }

  function createCapturedValue(value, source) {
    return {
      value: value,
      source: source,
      stack: getStackByFiberInDevAndProd(source)
    };
  }

  if ("function" !== typeof ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog) throw ReactError(Error("Expected ReactFiberErrorDialog.showErrorDialog to be a function."));

  function logCapturedError(capturedError) {
    false !== ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog(capturedError) && undefined;
  }

  var PossiblyWeakSet$1 = "function" === typeof WeakSet ? WeakSet : Set;

  function logError(boundary, errorInfo) {
    var source = errorInfo.source,
        stack = errorInfo.stack;
    null === stack && null !== source && (stack = getStackByFiberInDevAndProd(source));
    errorInfo = {
      componentName: null !== source ? getComponentName(source.type) : null,
      componentStack: null !== stack ? stack : "",
      error: errorInfo.value,
      errorBoundary: null,
      errorBoundaryName: null,
      errorBoundaryFound: false,
      willRetry: false
    };
    null !== boundary && 1 === boundary.tag && (errorInfo.errorBoundary = boundary.stateNode, errorInfo.errorBoundaryName = getComponentName(boundary.type), errorInfo.errorBoundaryFound = true, errorInfo.willRetry = true);

    try {
      logCapturedError(errorInfo);
    } catch (e) {
      setTimeout(function () {
        throw e;
      });
    }
  }

  function safelyCallComponentWillUnmount(current$$1, instance) {
    try {
      instance.props = current$$1.memoizedProps, instance.state = current$$1.memoizedState, instance.componentWillUnmount();
    } catch (unmountError) {
      captureCommitPhaseError(current$$1, unmountError);
    }
  }

  function safelyDetachRef(current$$1) {
    var ref = current$$1.ref;
    if (null !== ref) if ("function" === typeof ref) try {
      ref(null);
    } catch (refError) {
      captureCommitPhaseError(current$$1, refError);
    } else ref.current = null;
  }

  function commitHookEffectList(unmountTag, mountTag, finishedWork) {
    finishedWork = finishedWork.updateQueue;
    finishedWork = null !== finishedWork ? finishedWork.lastEffect : null;

    if (null !== finishedWork) {
      var effect = finishedWork = finishedWork.next;

      do {
        if ((effect.tag & unmountTag) !== NoEffect$1) {
          var destroy = effect.destroy;
          effect.destroy = undefined;
          undefined !== destroy && destroy();
        }

        (effect.tag & mountTag) !== NoEffect$1 && (destroy = effect.create, effect.destroy = destroy());
        effect = effect.next;
      } while (effect !== finishedWork);
    }
  }

  function commitUnmount(current$$1$jscomp$0, renderPriorityLevel) {
    "function" === typeof onCommitFiberUnmount && onCommitFiberUnmount(current$$1$jscomp$0);

    switch (current$$1$jscomp$0.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        var updateQueue = current$$1$jscomp$0.updateQueue;

        if (null !== updateQueue && (updateQueue = updateQueue.lastEffect, null !== updateQueue)) {
          var firstEffect = updateQueue.next;
          runWithPriority$1(97 < renderPriorityLevel ? 97 : renderPriorityLevel, function () {
            var effect = firstEffect;

            do {
              var destroy = effect.destroy;

              if (undefined !== destroy) {
                var current$$1 = current$$1$jscomp$0;

                try {
                  destroy();
                } catch (error) {
                  captureCommitPhaseError(current$$1, error);
                }
              }

              effect = effect.next;
            } while (effect !== firstEffect);
          });
        }

        break;

      case 1:
        safelyDetachRef(current$$1$jscomp$0);
        renderPriorityLevel = current$$1$jscomp$0.stateNode;
        "function" === typeof renderPriorityLevel.componentWillUnmount && safelyCallComponentWillUnmount(current$$1$jscomp$0, renderPriorityLevel);
        break;

      case 5:
        safelyDetachRef(current$$1$jscomp$0);
        break;

      case 4:
        createChildNodeSet(current$$1$jscomp$0.stateNode.containerInfo);
    }
  }

  function detachFiber(current$$1) {
    var alternate = current$$1.alternate;
    current$$1.return = null;
    current$$1.child = null;
    current$$1.memoizedState = null;
    current$$1.updateQueue = null;
    current$$1.dependencies = null;
    current$$1.alternate = null;
    current$$1.firstEffect = null;
    current$$1.lastEffect = null;
    current$$1.pendingProps = null;
    current$$1.memoizedProps = null;
    null !== alternate && detachFiber(alternate);
  }

  function commitWork(current$$1, finishedWork) {
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
        return;

      case 12:
        return;

      case 13:
        null !== finishedWork.memoizedState && (globalMostRecentFallbackTime = now());
        attachSuspenseRetryListeners(finishedWork);
        return;

      case 19:
        attachSuspenseRetryListeners(finishedWork);
        return;
    }

    switch (finishedWork.tag) {
      case 1:
      case 5:
      case 6:
      case 20:
        break;

      case 3:
      case 4:
        break;

      default:
        throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
    }
  }

  function attachSuspenseRetryListeners(finishedWork) {
    var thenables = finishedWork.updateQueue;

    if (null !== thenables) {
      finishedWork.updateQueue = null;
      var retryCache = finishedWork.stateNode;
      null === retryCache && (retryCache = finishedWork.stateNode = new PossiblyWeakSet$1());
      thenables.forEach(function (thenable) {
        var retry = resolveRetryThenable.bind(null, finishedWork, thenable);
        retryCache.has(thenable) || (retryCache.add(thenable), thenable.then(retry, retry));
      });
    }
  }

  var PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map;

  function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime, null);
    expirationTime.tag = 3;
    expirationTime.payload = {
      element: null
    };
    var error = errorInfo.value;

    expirationTime.callback = function () {
      hasUncaughtError || (hasUncaughtError = true, firstUncaughtError = error);
      logError(fiber, errorInfo);
    };

    return expirationTime;
  }

  function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime, null);
    expirationTime.tag = 3;
    var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

    if ("function" === typeof getDerivedStateFromError) {
      var error = errorInfo.value;

      expirationTime.payload = function () {
        logError(fiber, errorInfo);
        return getDerivedStateFromError(error);
      };
    }

    var inst = fiber.stateNode;
    null !== inst && "function" === typeof inst.componentDidCatch && (expirationTime.callback = function () {
      "function" !== typeof getDerivedStateFromError && (null === legacyErrorBoundariesThatAlreadyFailed ? legacyErrorBoundariesThatAlreadyFailed = new Set([this]) : legacyErrorBoundariesThatAlreadyFailed.add(this), logError(fiber, errorInfo));
      var stack = errorInfo.stack;
      this.componentDidCatch(errorInfo.value, {
        componentStack: null !== stack ? stack : ""
      });
    });
    return expirationTime;
  }

  var ceil = Math.ceil,
      ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher,
      ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,
      NoContext = 0,
      LegacyUnbatchedContext = 8,
      RenderContext = 16,
      CommitContext = 32,
      RootIncomplete = 0,
      RootErrored = 1,
      RootSuspended = 2,
      RootSuspendedWithDelay = 3,
      RootCompleted = 4,
      executionContext = NoContext,
      workInProgressRoot = null,
      workInProgress = null,
      renderExpirationTime = 0,
      workInProgressRootExitStatus = RootIncomplete,
      workInProgressRootLatestProcessedExpirationTime = 1073741823,
      workInProgressRootLatestSuspenseTimeout = 1073741823,
      workInProgressRootCanSuspendUsingConfig = null,
      workInProgressRootHasPendingPing = false,
      globalMostRecentFallbackTime = 0,
      FALLBACK_THROTTLE_MS = 500,
      nextEffect = null,
      hasUncaughtError = false,
      firstUncaughtError = null,
      legacyErrorBoundariesThatAlreadyFailed = null,
      rootDoesHavePassiveEffects = false,
      rootWithPendingPassiveEffects = null,
      pendingPassiveEffectsRenderPriority = 90,
      pendingPassiveEffectsExpirationTime = 0,
      rootsWithPendingDiscreteUpdates = null,
      nestedUpdateCount = 0,
      rootWithNestedUpdates = null,
      currentEventTime = 0;

  function requestCurrentTime() {
    return (executionContext & 48) !== NoContext ? 1073741821 - (now() / 10 | 0) : 0 !== currentEventTime ? currentEventTime : currentEventTime = 1073741821 - (now() / 10 | 0);
  }

  function computeExpirationForFiber(currentTime, fiber, suspenseConfig) {
    fiber = fiber.mode;
    if (0 === (fiber & 2)) return 1073741823;
    var priorityLevel = getCurrentPriorityLevel();
    if (0 === (fiber & 4)) return 99 === priorityLevel ? 1073741823 : 1073741822;
    if ((executionContext & RenderContext) !== NoContext) return renderExpirationTime;
    if (null !== suspenseConfig) currentTime = 1073741821 - 25 * (((1073741821 - currentTime + (suspenseConfig.timeoutMs | 0 || 5e3) / 10) / 25 | 0) + 1);else switch (priorityLevel) {
      case 99:
        currentTime = 1073741823;
        break;

      case 98:
        currentTime = 1073741821 - 10 * (((1073741821 - currentTime + 15) / 10 | 0) + 1);
        break;

      case 97:
      case 96:
        currentTime = 1073741821 - 25 * (((1073741821 - currentTime + 500) / 25 | 0) + 1);
        break;

      case 95:
        currentTime = 1;
        break;

      default:
        throw ReactError(Error("Expected a valid priority level"));
    }
    null !== workInProgressRoot && currentTime === renderExpirationTime && --currentTime;
    return currentTime;
  }

  function scheduleUpdateOnFiber(fiber, expirationTime) {
    if (50 < nestedUpdateCount) throw nestedUpdateCount = 0, rootWithNestedUpdates = null, ReactError(Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops."));
    fiber = markUpdateTimeFromFiberToRoot(fiber, expirationTime);

    if (null !== fiber) {
      fiber.pingTime = 0;
      var priorityLevel = getCurrentPriorityLevel();
      if (1073741823 === expirationTime) {
        if ((executionContext & LegacyUnbatchedContext) !== NoContext && (executionContext & 48) === NoContext) for (var callback = renderRoot(fiber, 1073741823, true); null !== callback;) {
          callback = callback(true);
        } else scheduleCallbackForRoot(fiber, 99, 1073741823), executionContext === NoContext && flushSyncCallbackQueue();
      } else scheduleCallbackForRoot(fiber, priorityLevel, expirationTime);
      (executionContext & 4) === NoContext || 98 !== priorityLevel && 99 !== priorityLevel || (null === rootsWithPendingDiscreteUpdates ? rootsWithPendingDiscreteUpdates = new Map([[fiber, expirationTime]]) : (priorityLevel = rootsWithPendingDiscreteUpdates.get(fiber), (undefined === priorityLevel || priorityLevel > expirationTime) && rootsWithPendingDiscreteUpdates.set(fiber, expirationTime)));
    }
  }

  function markUpdateTimeFromFiberToRoot(fiber, expirationTime) {
    fiber.expirationTime < expirationTime && (fiber.expirationTime = expirationTime);
    var alternate = fiber.alternate;
    null !== alternate && alternate.expirationTime < expirationTime && (alternate.expirationTime = expirationTime);
    var node = fiber.return,
        root = null;
    if (null === node && 3 === fiber.tag) root = fiber.stateNode;else for (; null !== node;) {
      alternate = node.alternate;
      node.childExpirationTime < expirationTime && (node.childExpirationTime = expirationTime);
      null !== alternate && alternate.childExpirationTime < expirationTime && (alternate.childExpirationTime = expirationTime);

      if (null === node.return && 3 === node.tag) {
        root = node.stateNode;
        break;
      }

      node = node.return;
    }
    null !== root && (expirationTime > root.firstPendingTime && (root.firstPendingTime = expirationTime), fiber = root.lastPendingTime, 0 === fiber || expirationTime < fiber) && (root.lastPendingTime = expirationTime);
    return root;
  }

  function scheduleCallbackForRoot(root, priorityLevel, expirationTime) {
    if (root.callbackExpirationTime < expirationTime) {
      var existingCallbackNode = root.callbackNode;
      null !== existingCallbackNode && existingCallbackNode !== fakeCallbackNode && Scheduler_cancelCallback(existingCallbackNode);
      root.callbackExpirationTime = expirationTime;
      1073741823 === expirationTime ? root.callbackNode = scheduleSyncCallback(runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime))) : (existingCallbackNode = null, 1 !== expirationTime && (existingCallbackNode = {
        timeout: 10 * (1073741821 - expirationTime) - now()
      }), root.callbackNode = scheduleCallback(priorityLevel, runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime)), existingCallbackNode));
    }
  }

  function runRootCallback(root, callback, isSync) {
    var prevCallbackNode = root.callbackNode,
        continuation = null;

    try {
      return continuation = callback(isSync), null !== continuation ? runRootCallback.bind(null, root, continuation) : null;
    } finally {
      null === continuation && prevCallbackNode === root.callbackNode && (root.callbackNode = null, root.callbackExpirationTime = 0);
    }
  }

  function resolveLocksOnRoot(root, expirationTime) {
    var firstBatch = root.firstBatch;
    return null !== firstBatch && firstBatch._defer && firstBatch._expirationTime >= expirationTime ? (scheduleCallback(97, function () {
      firstBatch._onComplete();

      return null;
    }), true) : false;
  }

  function flushPendingDiscreteUpdates() {
    if (null !== rootsWithPendingDiscreteUpdates) {
      var roots = rootsWithPendingDiscreteUpdates;
      rootsWithPendingDiscreteUpdates = null;
      roots.forEach(function (expirationTime, root) {
        scheduleSyncCallback(renderRoot.bind(null, root, expirationTime));
      });
      flushSyncCallbackQueue();
    }
  }

  function prepareFreshStack(root, expirationTime) {
    root.finishedWork = null;
    root.finishedExpirationTime = 0;
    var timeoutHandle = root.timeoutHandle;
    -1 !== timeoutHandle && (root.timeoutHandle = -1, cancelTimeout(timeoutHandle));
    if (null !== workInProgress) for (timeoutHandle = workInProgress.return; null !== timeoutHandle;) {
      var interruptedWork = timeoutHandle;

      switch (interruptedWork.tag) {
        case 1:
          var childContextTypes = interruptedWork.type.childContextTypes;
          null !== childContextTypes && undefined !== childContextTypes && popContext(interruptedWork);
          break;

        case 3:
          popHostContainer(interruptedWork);
          popTopLevelContextObject(interruptedWork);
          break;

        case 5:
          popHostContext(interruptedWork);
          break;

        case 4:
          popHostContainer(interruptedWork);
          break;

        case 13:
          pop(suspenseStackCursor, interruptedWork);
          break;

        case 19:
          pop(suspenseStackCursor, interruptedWork);
          break;

        case 10:
          popProvider(interruptedWork);
      }

      timeoutHandle = timeoutHandle.return;
    }
    workInProgressRoot = root;
    workInProgress = createWorkInProgress(root.current, null, expirationTime);
    renderExpirationTime = expirationTime;
    workInProgressRootExitStatus = RootIncomplete;
    workInProgressRootLatestSuspenseTimeout = workInProgressRootLatestProcessedExpirationTime = 1073741823;
    workInProgressRootCanSuspendUsingConfig = null;
    workInProgressRootHasPendingPing = false;
  }

  function renderRoot(root$jscomp$0, expirationTime, isSync) {
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
    if (root$jscomp$0.firstPendingTime < expirationTime) return null;
    if (isSync && root$jscomp$0.finishedExpirationTime === expirationTime) return commitRoot.bind(null, root$jscomp$0);
    flushPassiveEffects();
    if (root$jscomp$0 !== workInProgressRoot || expirationTime !== renderExpirationTime) prepareFreshStack(root$jscomp$0, expirationTime);else if (workInProgressRootExitStatus === RootSuspendedWithDelay) if (workInProgressRootHasPendingPing) prepareFreshStack(root$jscomp$0, expirationTime);else {
      var lastPendingTime = root$jscomp$0.lastPendingTime;
      if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
    }

    if (null !== workInProgress) {
      lastPendingTime = executionContext;
      executionContext |= RenderContext;
      var prevDispatcher = ReactCurrentDispatcher.current;
      null === prevDispatcher && (prevDispatcher = ContextOnlyDispatcher);
      ReactCurrentDispatcher.current = ContextOnlyDispatcher;

      if (isSync) {
        if (1073741823 !== expirationTime) {
          var currentTime = requestCurrentTime();
          if (currentTime < expirationTime) return executionContext = lastPendingTime, resetContextDependencies(), ReactCurrentDispatcher.current = prevDispatcher, renderRoot.bind(null, root$jscomp$0, currentTime);
        }
      } else currentEventTime = 0;

      do {
        try {
          if (isSync) for (; null !== workInProgress;) {
            workInProgress = performUnitOfWork(workInProgress);
          } else for (; null !== workInProgress && !Scheduler_shouldYield();) {
            workInProgress = performUnitOfWork(workInProgress);
          }
          break;
        } catch (thrownValue) {
          resetContextDependencies();
          resetHooks();
          currentTime = workInProgress;
          if (null === currentTime || null === currentTime.return) throw prepareFreshStack(root$jscomp$0, expirationTime), executionContext = lastPendingTime, thrownValue;

          a: {
            var root = root$jscomp$0,
                returnFiber = currentTime.return,
                sourceFiber = currentTime,
                value = thrownValue,
                renderExpirationTime$jscomp$0 = renderExpirationTime;
            sourceFiber.effectTag |= 1024;
            sourceFiber.firstEffect = sourceFiber.lastEffect = null;

            if (null !== value && "object" === typeof value && "function" === typeof value.then) {
              var thenable = value,
                  hasInvisibleParentBoundary = 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext);
              value = returnFiber;

              do {
                var JSCompiler_temp;
                if (JSCompiler_temp = 13 === value.tag) null !== value.memoizedState ? JSCompiler_temp = false : (JSCompiler_temp = value.memoizedProps, JSCompiler_temp = undefined === JSCompiler_temp.fallback ? false : true !== JSCompiler_temp.unstable_avoidThisFallback ? true : hasInvisibleParentBoundary ? false : true);

                if (JSCompiler_temp) {
                  returnFiber = value.updateQueue;
                  null === returnFiber ? (returnFiber = new Set(), returnFiber.add(thenable), value.updateQueue = returnFiber) : returnFiber.add(thenable);

                  if (0 === (value.mode & 2)) {
                    value.effectTag |= 64;
                    sourceFiber.effectTag &= -1957;
                    1 === sourceFiber.tag && (null === sourceFiber.alternate ? sourceFiber.tag = 17 : (renderExpirationTime$jscomp$0 = createUpdate(1073741823, null), renderExpirationTime$jscomp$0.tag = 2, enqueueUpdate(sourceFiber, renderExpirationTime$jscomp$0)));
                    sourceFiber.expirationTime = 1073741823;
                    break a;
                  }

                  sourceFiber = root;
                  root = renderExpirationTime$jscomp$0;
                  hasInvisibleParentBoundary = sourceFiber.pingCache;
                  null === hasInvisibleParentBoundary ? (hasInvisibleParentBoundary = sourceFiber.pingCache = new PossiblyWeakMap(), returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)) : (returnFiber = hasInvisibleParentBoundary.get(thenable), undefined === returnFiber && (returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)));
                  returnFiber.has(root) || (returnFiber.add(root), sourceFiber = pingSuspendedRoot.bind(null, sourceFiber, thenable, root), thenable.then(sourceFiber, sourceFiber));
                  value.effectTag |= 2048;
                  value.expirationTime = renderExpirationTime$jscomp$0;
                  break a;
                }

                value = value.return;
              } while (null !== value);

              value = Error((getComponentName(sourceFiber.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + getStackByFiberInDevAndProd(sourceFiber));
            }

            workInProgressRootExitStatus !== RootCompleted && (workInProgressRootExitStatus = RootErrored);
            value = createCapturedValue(value, sourceFiber);
            sourceFiber = returnFiber;

            do {
              switch (sourceFiber.tag) {
                case 3:
                  sourceFiber.effectTag |= 2048;
                  sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                  renderExpirationTime$jscomp$0 = createRootErrorUpdate(sourceFiber, value, renderExpirationTime$jscomp$0);
                  enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                  break a;

                case 1:
                  if (thenable = value, root = sourceFiber.type, returnFiber = sourceFiber.stateNode, 0 === (sourceFiber.effectTag & 64) && ("function" === typeof root.getDerivedStateFromError || null !== returnFiber && "function" === typeof returnFiber.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(returnFiber)))) {
                    sourceFiber.effectTag |= 2048;
                    sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                    renderExpirationTime$jscomp$0 = createClassErrorUpdate(sourceFiber, thenable, renderExpirationTime$jscomp$0);
                    enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                    break a;
                  }

              }

              sourceFiber = sourceFiber.return;
            } while (null !== sourceFiber);
          }

          workInProgress = completeUnitOfWork(currentTime);
        }
      } while (1);

      executionContext = lastPendingTime;
      resetContextDependencies();
      ReactCurrentDispatcher.current = prevDispatcher;
      if (null !== workInProgress) return renderRoot.bind(null, root$jscomp$0, expirationTime);
    }

    root$jscomp$0.finishedWork = root$jscomp$0.current.alternate;
    root$jscomp$0.finishedExpirationTime = expirationTime;
    if (resolveLocksOnRoot(root$jscomp$0, expirationTime)) return null;
    workInProgressRoot = null;

    switch (workInProgressRootExitStatus) {
      case RootIncomplete:
        throw ReactError(Error("Should have a work-in-progress."));

      case RootErrored:
        return lastPendingTime = root$jscomp$0.lastPendingTime, lastPendingTime < expirationTime ? renderRoot.bind(null, root$jscomp$0, lastPendingTime) : isSync ? commitRoot.bind(null, root$jscomp$0) : (prepareFreshStack(root$jscomp$0, expirationTime), scheduleSyncCallback(renderRoot.bind(null, root$jscomp$0, expirationTime)), null);

      case RootSuspended:
        if (1073741823 === workInProgressRootLatestProcessedExpirationTime && !isSync && (isSync = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(), 10 < isSync)) {
          if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
          lastPendingTime = root$jscomp$0.lastPendingTime;
          if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
          root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync);
          return null;
        }

        return commitRoot.bind(null, root$jscomp$0);

      case RootSuspendedWithDelay:
        if (!isSync) {
          if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
          isSync = root$jscomp$0.lastPendingTime;
          if (isSync < expirationTime) return renderRoot.bind(null, root$jscomp$0, isSync);
          1073741823 !== workInProgressRootLatestSuspenseTimeout ? isSync = 10 * (1073741821 - workInProgressRootLatestSuspenseTimeout) - now() : 1073741823 === workInProgressRootLatestProcessedExpirationTime ? isSync = 0 : (isSync = 10 * (1073741821 - workInProgressRootLatestProcessedExpirationTime) - 5e3, lastPendingTime = now(), expirationTime = 10 * (1073741821 - expirationTime) - lastPendingTime, isSync = lastPendingTime - isSync, 0 > isSync && (isSync = 0), isSync = (120 > isSync ? 120 : 480 > isSync ? 480 : 1080 > isSync ? 1080 : 1920 > isSync ? 1920 : 3e3 > isSync ? 3e3 : 4320 > isSync ? 4320 : 1960 * ceil(isSync / 1960)) - isSync, expirationTime < isSync && (isSync = expirationTime));
          if (10 < isSync) return root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync), null;
        }

        return commitRoot.bind(null, root$jscomp$0);

      case RootCompleted:
        return !isSync && 1073741823 !== workInProgressRootLatestProcessedExpirationTime && null !== workInProgressRootCanSuspendUsingConfig && (lastPendingTime = workInProgressRootLatestProcessedExpirationTime, prevDispatcher = workInProgressRootCanSuspendUsingConfig, expirationTime = prevDispatcher.busyMinDurationMs | 0, 0 >= expirationTime ? expirationTime = 0 : (isSync = prevDispatcher.busyDelayMs | 0, lastPendingTime = now() - (10 * (1073741821 - lastPendingTime) - (prevDispatcher.timeoutMs | 0 || 5e3)), expirationTime = lastPendingTime <= isSync ? 0 : isSync + expirationTime - lastPendingTime), 10 < expirationTime) ? (root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), expirationTime), null) : commitRoot.bind(null, root$jscomp$0);

      default:
        throw ReactError(Error("Unknown root exit status."));
    }
  }

  function markRenderEventTimeAndConfig(expirationTime, suspenseConfig) {
    expirationTime < workInProgressRootLatestProcessedExpirationTime && 1 < expirationTime && (workInProgressRootLatestProcessedExpirationTime = expirationTime);
    null !== suspenseConfig && expirationTime < workInProgressRootLatestSuspenseTimeout && 1 < expirationTime && (workInProgressRootLatestSuspenseTimeout = expirationTime, workInProgressRootCanSuspendUsingConfig = suspenseConfig);
  }

  function performUnitOfWork(unitOfWork) {
    var next = beginWork$$1(unitOfWork.alternate, unitOfWork, renderExpirationTime);
    unitOfWork.memoizedProps = unitOfWork.pendingProps;
    null === next && (next = completeUnitOfWork(unitOfWork));
    ReactCurrentOwner$2.current = null;
    return next;
  }

  function completeUnitOfWork(unitOfWork) {
    workInProgress = unitOfWork;

    do {
      var current$$1 = workInProgress.alternate;
      unitOfWork = workInProgress.return;

      if (0 === (workInProgress.effectTag & 1024)) {
        a: {
          var current = current$$1;
          current$$1 = workInProgress;
          var renderExpirationTime$jscomp$0 = renderExpirationTime,
              newProps = current$$1.pendingProps;

          switch (current$$1.tag) {
            case 2:
              break;

            case 16:
              break;

            case 15:
            case 0:
              break;

            case 1:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 3:
              popHostContainer(current$$1);
              popTopLevelContextObject(current$$1);
              renderExpirationTime$jscomp$0 = current$$1.stateNode;
              renderExpirationTime$jscomp$0.pendingContext && (renderExpirationTime$jscomp$0.context = renderExpirationTime$jscomp$0.pendingContext, renderExpirationTime$jscomp$0.pendingContext = null);
              if (null === current || null === current.child) current$$1.effectTag &= -3;
              updateHostContainer(current$$1);
              break;

            case 5:
              popHostContext(current$$1);
              renderExpirationTime$jscomp$0 = requiredContext(rootInstanceStackCursor.current);
              var type = current$$1.type;
              if (null !== current && null != current$$1.stateNode) updateHostComponent$1(current, current$$1, type, newProps, renderExpirationTime$jscomp$0), current.ref !== current$$1.ref && (current$$1.effectTag |= 128);else if (newProps) {
                requiredContext(contextStackCursor$1.current);
                current = newProps;
                var rootContainerInstance = renderExpirationTime$jscomp$0;
                renderExpirationTime$jscomp$0 = current$$1;
                newProps = nextReactTag;
                nextReactTag += 2;
                type = getViewConfigForType(type);
                var updatePayload = diffProperties(null, emptyObject, current, type.validAttributes);
                rootContainerInstance = createNode(newProps, type.uiViewClassName, rootContainerInstance, updatePayload, renderExpirationTime$jscomp$0);
                current = new ReactFabricHostComponent(newProps, type, current, renderExpirationTime$jscomp$0);
                current = {
                  node: rootContainerInstance,
                  canonical: current
                };

                _appendAllChildren(current, current$$1, false, false);

                current$$1.stateNode = current;
                null !== current$$1.ref && (current$$1.effectTag |= 128);
              } else if (null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
              break;

            case 6:
              if (current && null != current$$1.stateNode) updateHostText$1(current, current$$1, current.memoizedProps, newProps);else {
                if ("string" !== typeof newProps && null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
                current = requiredContext(rootInstanceStackCursor.current);
                renderExpirationTime$jscomp$0 = requiredContext(contextStackCursor$1.current);
                current$$1.stateNode = createTextInstance(newProps, current, renderExpirationTime$jscomp$0, current$$1);
              }
              break;

            case 11:
              break;

            case 13:
              pop(suspenseStackCursor, current$$1);
              newProps = current$$1.memoizedState;

              if (0 !== (current$$1.effectTag & 64)) {
                current$$1.expirationTime = renderExpirationTime$jscomp$0;
                break a;
              }

              renderExpirationTime$jscomp$0 = null !== newProps;
              newProps = false;
              null !== current && (type = current.memoizedState, newProps = null !== type, renderExpirationTime$jscomp$0 || null === type || (type = current.child.sibling, null !== type && (rootContainerInstance = current$$1.firstEffect, null !== rootContainerInstance ? (current$$1.firstEffect = type, type.nextEffect = rootContainerInstance) : (current$$1.firstEffect = current$$1.lastEffect = type, type.nextEffect = null), type.effectTag = 8)));
              if (renderExpirationTime$jscomp$0 && !newProps && 0 !== (current$$1.mode & 2)) if (null === current && true !== current$$1.memoizedProps.unstable_avoidThisFallback || 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext)) workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootSuspended);else if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) workInProgressRootExitStatus = RootSuspendedWithDelay;
              renderExpirationTime$jscomp$0 && (current$$1.effectTag |= 4);
              break;

            case 7:
              break;

            case 8:
              break;

            case 12:
              break;

            case 4:
              popHostContainer(current$$1);
              updateHostContainer(current$$1);
              break;

            case 10:
              popProvider(current$$1);
              break;

            case 9:
              break;

            case 14:
              break;

            case 17:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 18:
              break;

            case 19:
              pop(suspenseStackCursor, current$$1);
              newProps = current$$1.memoizedState;
              if (null === newProps) break;
              type = 0 !== (current$$1.effectTag & 64);
              rootContainerInstance = newProps.rendering;
              if (null === rootContainerInstance) {
                if (type) cutOffTailIfNeeded(newProps, false);else {
                  if (workInProgressRootExitStatus !== RootIncomplete || null !== current && 0 !== (current.effectTag & 64)) for (current = current$$1.child; null !== current;) {
                    rootContainerInstance = findFirstSuspended(current);

                    if (null !== rootContainerInstance) {
                      current$$1.effectTag |= 64;
                      cutOffTailIfNeeded(newProps, false);
                      current = rootContainerInstance.updateQueue;
                      null !== current && (current$$1.updateQueue = current, current$$1.effectTag |= 4);
                      current$$1.firstEffect = current$$1.lastEffect = null;
                      current = renderExpirationTime$jscomp$0;

                      for (renderExpirationTime$jscomp$0 = current$$1.child; null !== renderExpirationTime$jscomp$0;) {
                        newProps = renderExpirationTime$jscomp$0, type = current, newProps.effectTag &= 2, newProps.nextEffect = null, newProps.firstEffect = null, newProps.lastEffect = null, rootContainerInstance = newProps.alternate, null === rootContainerInstance ? (newProps.childExpirationTime = 0, newProps.expirationTime = type, newProps.child = null, newProps.memoizedProps = null, newProps.memoizedState = null, newProps.updateQueue = null, newProps.dependencies = null) : (newProps.childExpirationTime = rootContainerInstance.childExpirationTime, newProps.expirationTime = rootContainerInstance.expirationTime, newProps.child = rootContainerInstance.child, newProps.memoizedProps = rootContainerInstance.memoizedProps, newProps.memoizedState = rootContainerInstance.memoizedState, newProps.updateQueue = rootContainerInstance.updateQueue, type = rootContainerInstance.dependencies, newProps.dependencies = null === type ? null : {
                          expirationTime: type.expirationTime,
                          firstContext: type.firstContext,
                          responders: type.responders
                        }), renderExpirationTime$jscomp$0 = renderExpirationTime$jscomp$0.sibling;
                      }

                      push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask | ForceSuspenseFallback, current$$1);
                      current$$1 = current$$1.child;
                      break a;
                    }

                    current = current.sibling;
                  }
                }
              } else {
                if (!type) if (current = findFirstSuspended(rootContainerInstance), null !== current) {
                  if (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, true), null === newProps.tail && "hidden" === newProps.tailMode) {
                    current = current.updateQueue;
                    null !== current && (current$$1.updateQueue = current, current$$1.effectTag |= 4);
                    current$$1 = current$$1.lastEffect = newProps.lastEffect;
                    null !== current$$1 && (current$$1.nextEffect = null);
                    break;
                  }
                } else now() > newProps.tailExpiration && 1 < renderExpirationTime$jscomp$0 && (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, false), current$$1.expirationTime = current$$1.childExpirationTime = renderExpirationTime$jscomp$0 - 1);
                newProps.isBackwards ? (rootContainerInstance.sibling = current$$1.child, current$$1.child = rootContainerInstance) : (current = newProps.last, null !== current ? current.sibling = rootContainerInstance : current$$1.child = rootContainerInstance, newProps.last = rootContainerInstance);
              }

              if (null !== newProps.tail) {
                0 === newProps.tailExpiration && (newProps.tailExpiration = now() + 500);
                current = newProps.tail;
                newProps.rendering = current;
                newProps.tail = current.sibling;
                newProps.lastEffect = current$$1.lastEffect;
                current.sibling = null;
                renderExpirationTime$jscomp$0 = suspenseStackCursor.current;
                renderExpirationTime$jscomp$0 = type ? renderExpirationTime$jscomp$0 & SubtreeSuspenseContextMask | ForceSuspenseFallback : renderExpirationTime$jscomp$0 & SubtreeSuspenseContextMask;
                push(suspenseStackCursor, renderExpirationTime$jscomp$0, current$$1);
                current$$1 = current;
                break a;
              }

              break;

            case 20:
              break;

            default:
              throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
          }

          current$$1 = null;
        }

        current = workInProgress;

        if (1 === renderExpirationTime || 1 !== current.childExpirationTime) {
          renderExpirationTime$jscomp$0 = 0;

          for (newProps = current.child; null !== newProps;) {
            type = newProps.expirationTime, rootContainerInstance = newProps.childExpirationTime, type > renderExpirationTime$jscomp$0 && (renderExpirationTime$jscomp$0 = type), rootContainerInstance > renderExpirationTime$jscomp$0 && (renderExpirationTime$jscomp$0 = rootContainerInstance), newProps = newProps.sibling;
          }

          current.childExpirationTime = renderExpirationTime$jscomp$0;
        }

        if (null !== current$$1) return current$$1;
        null !== unitOfWork && 0 === (unitOfWork.effectTag & 1024) && (null === unitOfWork.firstEffect && (unitOfWork.firstEffect = workInProgress.firstEffect), null !== workInProgress.lastEffect && (null !== unitOfWork.lastEffect && (unitOfWork.lastEffect.nextEffect = workInProgress.firstEffect), unitOfWork.lastEffect = workInProgress.lastEffect), 1 < workInProgress.effectTag && (null !== unitOfWork.lastEffect ? unitOfWork.lastEffect.nextEffect = workInProgress : unitOfWork.firstEffect = workInProgress, unitOfWork.lastEffect = workInProgress));
      } else {
        current$$1 = unwindWork(workInProgress, renderExpirationTime);
        if (null !== current$$1) return current$$1.effectTag &= 1023, current$$1;
        null !== unitOfWork && (unitOfWork.firstEffect = unitOfWork.lastEffect = null, unitOfWork.effectTag |= 1024);
      }

      current$$1 = workInProgress.sibling;
      if (null !== current$$1) return current$$1;
      workInProgress = unitOfWork;
    } while (null !== workInProgress);

    workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootCompleted);
    return null;
  }

  function commitRoot(root) {
    var renderPriorityLevel = getCurrentPriorityLevel();
    runWithPriority$1(99, commitRootImpl.bind(null, root, renderPriorityLevel));
    null !== rootWithPendingPassiveEffects && scheduleCallback(97, function () {
      flushPassiveEffects();
      return null;
    });
    return null;
  }

  function commitRootImpl(root, renderPriorityLevel) {
    flushPassiveEffects();
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
    var finishedWork = root.finishedWork,
        expirationTime = root.finishedExpirationTime;
    if (null === finishedWork) return null;
    root.finishedWork = null;
    root.finishedExpirationTime = 0;
    if (finishedWork === root.current) throw ReactError(Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue."));
    root.callbackNode = null;
    root.callbackExpirationTime = 0;
    var updateExpirationTimeBeforeCommit = finishedWork.expirationTime,
        childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;
    updateExpirationTimeBeforeCommit = childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit ? childExpirationTimeBeforeCommit : updateExpirationTimeBeforeCommit;
    root.firstPendingTime = updateExpirationTimeBeforeCommit;
    updateExpirationTimeBeforeCommit < root.lastPendingTime && (root.lastPendingTime = updateExpirationTimeBeforeCommit);
    root === workInProgressRoot && (workInProgress = workInProgressRoot = null, renderExpirationTime = 0);
    1 < finishedWork.effectTag ? null !== finishedWork.lastEffect ? (finishedWork.lastEffect.nextEffect = finishedWork, updateExpirationTimeBeforeCommit = finishedWork.firstEffect) : updateExpirationTimeBeforeCommit = finishedWork : updateExpirationTimeBeforeCommit = finishedWork.firstEffect;

    if (null !== updateExpirationTimeBeforeCommit) {
      childExpirationTimeBeforeCommit = executionContext;
      executionContext |= CommitContext;
      ReactCurrentOwner$2.current = null;
      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (; null !== nextEffect;) {
            if (0 !== (nextEffect.effectTag & 256)) {
              var current$$1 = nextEffect.alternate,
                  finishedWork$jscomp$0 = nextEffect;

              switch (finishedWork$jscomp$0.tag) {
                case 0:
                case 11:
                case 15:
                  commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork$jscomp$0);
                  break;

                case 1:
                  if (finishedWork$jscomp$0.effectTag & 256 && null !== current$$1) {
                    var prevProps = current$$1.memoizedProps,
                        prevState = current$$1.memoizedState,
                        instance = finishedWork$jscomp$0.stateNode,
                        snapshot = instance.getSnapshotBeforeUpdate(finishedWork$jscomp$0.elementType === finishedWork$jscomp$0.type ? prevProps : resolveDefaultProps(finishedWork$jscomp$0.type, prevProps), prevState);
                    instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                  }

                  break;

                case 3:
                case 5:
                case 6:
                case 4:
                case 17:
                  break;

                default:
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
              }
            }

            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (current$$1 = renderPriorityLevel; null !== nextEffect;) {
            var effectTag = nextEffect.effectTag;

            if (effectTag & 128) {
              var current$$1$jscomp$0 = nextEffect.alternate;

              if (null !== current$$1$jscomp$0) {
                var currentRef = current$$1$jscomp$0.ref;
                null !== currentRef && ("function" === typeof currentRef ? currentRef(null) : currentRef.current = null);
              }
            }

            switch (effectTag & 14) {
              case 2:
                nextEffect.effectTag &= -3;
                break;

              case 6:
                nextEffect.effectTag &= -3;
                commitWork(nextEffect.alternate, nextEffect);
                break;

              case 4:
                commitWork(nextEffect.alternate, nextEffect);
                break;

              case 8:
                prevProps = nextEffect;

                a: for (prevState = prevProps, instance = current$$1, snapshot = prevState;;) {
                  if (commitUnmount(snapshot, instance), null !== snapshot.child) snapshot.child.return = snapshot, snapshot = snapshot.child;else {
                    if (snapshot === prevState) break;

                    for (; null === snapshot.sibling;) {
                      if (null === snapshot.return || snapshot.return === prevState) break a;
                      snapshot = snapshot.return;
                    }

                    snapshot.sibling.return = snapshot.return;
                    snapshot = snapshot.sibling;
                  }
                }

                detachFiber(prevProps);
            }

            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      root.current = finishedWork;
      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (effectTag = expirationTime; null !== nextEffect;) {
            var effectTag$jscomp$0 = nextEffect.effectTag;

            if (effectTag$jscomp$0 & 36) {
              var current$$1$jscomp$1 = nextEffect.alternate;
              current$$1$jscomp$0 = nextEffect;
              currentRef = effectTag;

              switch (current$$1$jscomp$0.tag) {
                case 0:
                case 11:
                case 15:
                  commitHookEffectList(UnmountLayout, MountLayout, current$$1$jscomp$0);
                  break;

                case 1:
                  var instance$jscomp$0 = current$$1$jscomp$0.stateNode;
                  if (current$$1$jscomp$0.effectTag & 4) if (null === current$$1$jscomp$1) instance$jscomp$0.componentDidMount();else {
                    var prevProps$jscomp$0 = current$$1$jscomp$0.elementType === current$$1$jscomp$0.type ? current$$1$jscomp$1.memoizedProps : resolveDefaultProps(current$$1$jscomp$0.type, current$$1$jscomp$1.memoizedProps);
                    instance$jscomp$0.componentDidUpdate(prevProps$jscomp$0, current$$1$jscomp$1.memoizedState, instance$jscomp$0.__reactInternalSnapshotBeforeUpdate);
                  }
                  var updateQueue = current$$1$jscomp$0.updateQueue;
                  null !== updateQueue && commitUpdateQueue(current$$1$jscomp$0, updateQueue, instance$jscomp$0, currentRef);
                  break;

                case 3:
                  var _updateQueue = current$$1$jscomp$0.updateQueue;

                  if (null !== _updateQueue) {
                    current$$1 = null;
                    if (null !== current$$1$jscomp$0.child) switch (current$$1$jscomp$0.child.tag) {
                      case 5:
                        current$$1 = current$$1$jscomp$0.child.stateNode.canonical;
                        break;

                      case 1:
                        current$$1 = current$$1$jscomp$0.child.stateNode;
                    }
                    commitUpdateQueue(current$$1$jscomp$0, _updateQueue, current$$1, currentRef);
                  }

                  break;

                case 5:
                  if (null === current$$1$jscomp$1 && current$$1$jscomp$0.effectTag & 4) throw ReactError(Error("The current renderer does not support mutation. This error is likely caused by a bug in React. Please file an issue."));
                  break;

                case 6:
                  break;

                case 4:
                  break;

                case 12:
                  break;

                case 13:
                case 19:
                case 17:
                case 20:
                  break;

                default:
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
              }
            }

            if (effectTag$jscomp$0 & 128) {
              var ref = nextEffect.ref;

              if (null !== ref) {
                var instance$jscomp$1 = nextEffect.stateNode;

                switch (nextEffect.tag) {
                  case 5:
                    var instanceToUse = instance$jscomp$1.canonical;
                    break;

                  default:
                    instanceToUse = instance$jscomp$1;
                }

                "function" === typeof ref ? ref(instanceToUse) : ref.current = instanceToUse;
              }
            }

            effectTag$jscomp$0 & 512 && (rootDoesHavePassiveEffects = true);
            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      nextEffect = null;
      requestPaint();
      executionContext = childExpirationTimeBeforeCommit;
    } else root.current = finishedWork;

    if (rootDoesHavePassiveEffects) rootDoesHavePassiveEffects = false, rootWithPendingPassiveEffects = root, pendingPassiveEffectsExpirationTime = expirationTime, pendingPassiveEffectsRenderPriority = renderPriorityLevel;else for (nextEffect = updateExpirationTimeBeforeCommit; null !== nextEffect;) {
      renderPriorityLevel = nextEffect.nextEffect, nextEffect.nextEffect = null, nextEffect = renderPriorityLevel;
    }
    renderPriorityLevel = root.firstPendingTime;
    0 !== renderPriorityLevel ? (effectTag$jscomp$0 = requestCurrentTime(), effectTag$jscomp$0 = inferPriorityFromExpirationTime(effectTag$jscomp$0, renderPriorityLevel), scheduleCallbackForRoot(root, effectTag$jscomp$0, renderPriorityLevel)) : legacyErrorBoundariesThatAlreadyFailed = null;
    "function" === typeof onCommitFiberRoot && onCommitFiberRoot(finishedWork.stateNode, expirationTime);
    1073741823 === renderPriorityLevel ? root === rootWithNestedUpdates ? nestedUpdateCount++ : (nestedUpdateCount = 0, rootWithNestedUpdates = root) : nestedUpdateCount = 0;
    if (hasUncaughtError) throw hasUncaughtError = false, root = firstUncaughtError, firstUncaughtError = null, root;
    if ((executionContext & LegacyUnbatchedContext) !== NoContext) return null;
    flushSyncCallbackQueue();
    return null;
  }

  function flushPassiveEffects() {
    if (null === rootWithPendingPassiveEffects) return false;
    var root = rootWithPendingPassiveEffects,
        expirationTime = pendingPassiveEffectsExpirationTime,
        renderPriorityLevel = pendingPassiveEffectsRenderPriority;
    rootWithPendingPassiveEffects = null;
    pendingPassiveEffectsExpirationTime = 0;
    pendingPassiveEffectsRenderPriority = 90;
    return runWithPriority$1(97 < renderPriorityLevel ? 97 : renderPriorityLevel, flushPassiveEffectsImpl.bind(null, root, expirationTime));
  }

  function flushPassiveEffectsImpl(root) {
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Cannot flush passive effects while already rendering."));
    var prevExecutionContext = executionContext;
    executionContext |= CommitContext;

    for (root = root.current.firstEffect; null !== root;) {
      try {
        var finishedWork = root;
        if (0 !== (finishedWork.effectTag & 512)) switch (finishedWork.tag) {
          case 0:
          case 11:
          case 15:
            commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork), commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
        }
      } catch (error) {
        if (null === root) throw ReactError(Error("Should be working on an effect."));
        captureCommitPhaseError(root, error);
      }

      finishedWork = root.nextEffect;
      root.nextEffect = null;
      root = finishedWork;
    }

    executionContext = prevExecutionContext;
    flushSyncCallbackQueue();
    return true;
  }

  function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
    sourceFiber = createCapturedValue(error, sourceFiber);
    sourceFiber = createRootErrorUpdate(rootFiber, sourceFiber, 1073741823);
    enqueueUpdate(rootFiber, sourceFiber);
    rootFiber = markUpdateTimeFromFiberToRoot(rootFiber, 1073741823);
    null !== rootFiber && scheduleCallbackForRoot(rootFiber, 99, 1073741823);
  }

  function captureCommitPhaseError(sourceFiber, error) {
    if (3 === sourceFiber.tag) captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);else for (var fiber = sourceFiber.return; null !== fiber;) {
      if (3 === fiber.tag) {
        captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
        break;
      } else if (1 === fiber.tag) {
        var instance = fiber.stateNode;

        if ("function" === typeof fiber.type.getDerivedStateFromError || "function" === typeof instance.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(instance))) {
          sourceFiber = createCapturedValue(error, sourceFiber);
          sourceFiber = createClassErrorUpdate(fiber, sourceFiber, 1073741823);
          enqueueUpdate(fiber, sourceFiber);
          fiber = markUpdateTimeFromFiberToRoot(fiber, 1073741823);
          null !== fiber && scheduleCallbackForRoot(fiber, 99, 1073741823);
          break;
        }
      }

      fiber = fiber.return;
    }
  }

  function pingSuspendedRoot(root, thenable, suspendedTime) {
    var pingCache = root.pingCache;
    null !== pingCache && pingCache.delete(thenable);
    workInProgressRoot === root && renderExpirationTime === suspendedTime ? workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && 1073741823 === workInProgressRootLatestProcessedExpirationTime && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS ? prepareFreshStack(root, renderExpirationTime) : workInProgressRootHasPendingPing = true : root.lastPendingTime < suspendedTime || (thenable = root.pingTime, 0 !== thenable && thenable < suspendedTime || (root.pingTime = suspendedTime, root.finishedExpirationTime === suspendedTime && (root.finishedExpirationTime = 0, root.finishedWork = null), thenable = requestCurrentTime(), thenable = inferPriorityFromExpirationTime(thenable, suspendedTime), scheduleCallbackForRoot(root, thenable, suspendedTime)));
  }

  function resolveRetryThenable(boundaryFiber, thenable) {
    var retryCache = boundaryFiber.stateNode;
    null !== retryCache && retryCache.delete(thenable);
    retryCache = requestCurrentTime();
    thenable = computeExpirationForFiber(retryCache, boundaryFiber, null);
    retryCache = inferPriorityFromExpirationTime(retryCache, thenable);
    boundaryFiber = markUpdateTimeFromFiberToRoot(boundaryFiber, thenable);
    null !== boundaryFiber && scheduleCallbackForRoot(boundaryFiber, retryCache, thenable);
  }

  var beginWork$$1 = undefined;

  beginWork$$1 = function beginWork$$1(current$$1, workInProgress, renderExpirationTime) {
    var updateExpirationTime = workInProgress.expirationTime;
    if (null !== current$$1) {
      if (current$$1.memoizedProps !== workInProgress.pendingProps || didPerformWorkStackCursor.current) didReceiveUpdate = true;else {
        if (updateExpirationTime < renderExpirationTime) {
          didReceiveUpdate = false;

          switch (workInProgress.tag) {
            case 3:
              pushHostRootContext(workInProgress);
              break;

            case 5:
              pushHostContext(workInProgress);
              break;

            case 1:
              isContextProvider(workInProgress.type) && pushContextProvider(workInProgress);
              break;

            case 4:
              pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
              break;

            case 10:
              pushProvider(workInProgress, workInProgress.memoizedProps.value);
              break;

            case 13:
              if (null !== workInProgress.memoizedState) {
                updateExpirationTime = workInProgress.child.childExpirationTime;
                if (0 !== updateExpirationTime && updateExpirationTime >= renderExpirationTime) return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
                push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                return null !== workInProgress ? workInProgress.sibling : null;
              }

              push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
              break;

            case 19:
              updateExpirationTime = workInProgress.childExpirationTime >= renderExpirationTime;

              if (0 !== (current$$1.effectTag & 64)) {
                if (updateExpirationTime) return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
                workInProgress.effectTag |= 64;
              }

              var renderState = workInProgress.memoizedState;
              null !== renderState && (renderState.rendering = null, renderState.tail = null);
              push(suspenseStackCursor, suspenseStackCursor.current, workInProgress);
              if (!updateExpirationTime) return null;
          }

          return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        }
      }
    } else didReceiveUpdate = false;
    workInProgress.expirationTime = 0;

    switch (workInProgress.tag) {
      case 2:
        updateExpirationTime = workInProgress.type;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        renderState = getMaskedContext(workInProgress, contextStackCursor.current);
        prepareToReadContext(workInProgress, renderExpirationTime);
        renderState = renderWithHooks(null, workInProgress, updateExpirationTime, current$$1, renderState, renderExpirationTime);
        workInProgress.effectTag |= 1;

        if ("object" === typeof renderState && null !== renderState && "function" === typeof renderState.render && undefined === renderState.$$typeof) {
          workInProgress.tag = 1;
          resetHooks();

          if (isContextProvider(updateExpirationTime)) {
            var hasContext = true;
            pushContextProvider(workInProgress);
          } else hasContext = false;

          workInProgress.memoizedState = null !== renderState.state && undefined !== renderState.state ? renderState.state : null;
          var getDerivedStateFromProps = updateExpirationTime.getDerivedStateFromProps;
          "function" === typeof getDerivedStateFromProps && applyDerivedStateFromProps(workInProgress, updateExpirationTime, getDerivedStateFromProps, current$$1);
          renderState.updater = classComponentUpdater;
          workInProgress.stateNode = renderState;
          renderState._reactInternalFiber = workInProgress;
          mountClassInstance(workInProgress, updateExpirationTime, current$$1, renderExpirationTime);
          workInProgress = finishClassComponent(null, workInProgress, updateExpirationTime, true, hasContext, renderExpirationTime);
        } else workInProgress.tag = 0, reconcileChildren(null, workInProgress, renderState, renderExpirationTime), workInProgress = workInProgress.child;

        return workInProgress;

      case 16:
        renderState = workInProgress.elementType;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        renderState = readLazyComponentType(renderState);
        workInProgress.type = renderState;
        hasContext = workInProgress.tag = resolveLazyComponentTag(renderState);
        current$$1 = resolveDefaultProps(renderState, current$$1);

        switch (hasContext) {
          case 0:
            workInProgress = updateFunctionComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 1:
            workInProgress = updateClassComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 11:
            workInProgress = updateForwardRef(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 14:
            workInProgress = updateMemoComponent(null, workInProgress, renderState, resolveDefaultProps(renderState.type, current$$1), updateExpirationTime, renderExpirationTime);
            break;

          default:
            throw ReactError(Error("Element type is invalid. Received a promise that resolves to: " + renderState + ". Lazy element type must resolve to a class or function."));
        }

        return workInProgress;

      case 0:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateFunctionComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 1:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateClassComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 3:
        pushHostRootContext(workInProgress);
        updateExpirationTime = workInProgress.updateQueue;
        if (null === updateExpirationTime) throw ReactError(Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue."));
        renderState = workInProgress.memoizedState;
        renderState = null !== renderState ? renderState.element : null;
        processUpdateQueue(workInProgress, updateExpirationTime, workInProgress.pendingProps, null, renderExpirationTime);
        updateExpirationTime = workInProgress.memoizedState.element;
        updateExpirationTime === renderState ? workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : (reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress = workInProgress.child);
        return workInProgress;

      case 5:
        return pushHostContext(workInProgress), null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), updateExpirationTime = workInProgress.pendingProps.children, markRef(current$$1, workInProgress), reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 6:
        return null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), null;

      case 13:
        return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);

      case 4:
        return pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo), updateExpirationTime = workInProgress.pendingProps, null === current$$1 ? workInProgress.child = reconcileChildFibers(workInProgress, null, updateExpirationTime, renderExpirationTime) : reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 11:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateForwardRef(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 7:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps, renderExpirationTime), workInProgress.child;

      case 8:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 12:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 10:
        a: {
          updateExpirationTime = workInProgress.type._context;
          renderState = workInProgress.pendingProps;
          getDerivedStateFromProps = workInProgress.memoizedProps;
          hasContext = renderState.value;
          pushProvider(workInProgress, hasContext);

          if (null !== getDerivedStateFromProps) {
            var oldValue = getDerivedStateFromProps.value;
            hasContext = is(oldValue, hasContext) ? 0 : ("function" === typeof updateExpirationTime._calculateChangedBits ? updateExpirationTime._calculateChangedBits(oldValue, hasContext) : 1073741823) | 0;

            if (0 === hasContext) {
              if (getDerivedStateFromProps.children === renderState.children && !didPerformWorkStackCursor.current) {
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                break a;
              }
            } else for (oldValue = workInProgress.child, null !== oldValue && (oldValue.return = workInProgress); null !== oldValue;) {
              var list = oldValue.dependencies;

              if (null !== list) {
                getDerivedStateFromProps = oldValue.child;

                for (var dependency = list.firstContext; null !== dependency;) {
                  if (dependency.context === updateExpirationTime && 0 !== (dependency.observedBits & hasContext)) {
                    1 === oldValue.tag && (dependency = createUpdate(renderExpirationTime, null), dependency.tag = 2, enqueueUpdate(oldValue, dependency));
                    oldValue.expirationTime < renderExpirationTime && (oldValue.expirationTime = renderExpirationTime);
                    dependency = oldValue.alternate;
                    null !== dependency && dependency.expirationTime < renderExpirationTime && (dependency.expirationTime = renderExpirationTime);
                    scheduleWorkOnParentPath(oldValue.return, renderExpirationTime);
                    list.expirationTime < renderExpirationTime && (list.expirationTime = renderExpirationTime);
                    break;
                  }

                  dependency = dependency.next;
                }
              } else getDerivedStateFromProps = 10 === oldValue.tag ? oldValue.type === workInProgress.type ? null : oldValue.child : oldValue.child;

              if (null !== getDerivedStateFromProps) getDerivedStateFromProps.return = oldValue;else for (getDerivedStateFromProps = oldValue; null !== getDerivedStateFromProps;) {
                if (getDerivedStateFromProps === workInProgress) {
                  getDerivedStateFromProps = null;
                  break;
                }

                oldValue = getDerivedStateFromProps.sibling;

                if (null !== oldValue) {
                  oldValue.return = getDerivedStateFromProps.return;
                  getDerivedStateFromProps = oldValue;
                  break;
                }

                getDerivedStateFromProps = getDerivedStateFromProps.return;
              }
              oldValue = getDerivedStateFromProps;
            }
          }

          reconcileChildren(current$$1, workInProgress, renderState.children, renderExpirationTime);
          workInProgress = workInProgress.child;
        }

        return workInProgress;

      case 9:
        return renderState = workInProgress.type, hasContext = workInProgress.pendingProps, updateExpirationTime = hasContext.children, prepareToReadContext(workInProgress, renderExpirationTime), renderState = readContext(renderState, hasContext.unstable_observedBits), updateExpirationTime = updateExpirationTime(renderState), workInProgress.effectTag |= 1, reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 14:
        return renderState = workInProgress.type, hasContext = resolveDefaultProps(renderState, workInProgress.pendingProps), hasContext = resolveDefaultProps(renderState.type, hasContext), updateMemoComponent(current$$1, workInProgress, renderState, hasContext, updateExpirationTime, renderExpirationTime);

      case 15:
        return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);

      case 17:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), workInProgress.tag = 1, isContextProvider(updateExpirationTime) ? (current$$1 = true, pushContextProvider(workInProgress)) : current$$1 = false, prepareToReadContext(workInProgress, renderExpirationTime), constructClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), mountClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), finishClassComponent(null, workInProgress, updateExpirationTime, true, current$$1, renderExpirationTime);

      case 19:
        return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
    }

    throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
  };

  var onCommitFiberRoot = null,
      onCommitFiberUnmount = null;

  function injectInternals(internals) {
    if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return false;
    var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (hook.isDisabled || !hook.supportsFiber) return true;

    try {
      var rendererID = hook.inject(internals);

      onCommitFiberRoot = function onCommitFiberRoot(root) {
        try {
          hook.onCommitFiberRoot(rendererID, root, undefined, 64 === (root.current.effectTag & 64));
        } catch (err) {}
      };

      onCommitFiberUnmount = function onCommitFiberUnmount(fiber) {
        try {
          hook.onCommitFiberUnmount(rendererID, fiber);
        } catch (err) {}
      };
    } catch (err) {}

    return true;
  }

  function FiberNode(tag, pendingProps, key, mode) {
    this.tag = tag;
    this.key = key;
    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
    this.index = 0;
    this.ref = null;
    this.pendingProps = pendingProps;
    this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
    this.mode = mode;
    this.effectTag = 0;
    this.lastEffect = this.firstEffect = this.nextEffect = null;
    this.childExpirationTime = this.expirationTime = 0;
    this.alternate = null;
  }

  function createFiber(tag, pendingProps, key, mode) {
    return new FiberNode(tag, pendingProps, key, mode);
  }

  function shouldConstruct(Component) {
    Component = Component.prototype;
    return !(!Component || !Component.isReactComponent);
  }

  function resolveLazyComponentTag(Component) {
    if ("function" === typeof Component) return shouldConstruct(Component) ? 1 : 0;

    if (undefined !== Component && null !== Component) {
      Component = Component.$$typeof;
      if (Component === REACT_FORWARD_REF_TYPE) return 11;
      if (Component === REACT_MEMO_TYPE) return 14;
    }

    return 2;
  }

  function createWorkInProgress(current, pendingProps) {
    var workInProgress = current.alternate;
    null === workInProgress ? (workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode), workInProgress.elementType = current.elementType, workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.pendingProps = pendingProps, workInProgress.effectTag = 0, workInProgress.nextEffect = null, workInProgress.firstEffect = null, workInProgress.lastEffect = null);
    workInProgress.childExpirationTime = current.childExpirationTime;
    workInProgress.expirationTime = current.expirationTime;
    workInProgress.child = current.child;
    workInProgress.memoizedProps = current.memoizedProps;
    workInProgress.memoizedState = current.memoizedState;
    workInProgress.updateQueue = current.updateQueue;
    pendingProps = current.dependencies;
    workInProgress.dependencies = null === pendingProps ? null : {
      expirationTime: pendingProps.expirationTime,
      firstContext: pendingProps.firstContext,
      responders: pendingProps.responders
    };
    workInProgress.sibling = current.sibling;
    workInProgress.index = current.index;
    workInProgress.ref = current.ref;
    return workInProgress;
  }

  function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime) {
    var fiberTag = 2;
    owner = type;
    if ("function" === typeof type) shouldConstruct(type) && (fiberTag = 1);else if ("string" === typeof type) fiberTag = 5;else a: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);

      case REACT_CONCURRENT_MODE_TYPE:
        fiberTag = 8;
        mode |= 7;
        break;

      case REACT_STRICT_MODE_TYPE:
        fiberTag = 8;
        mode |= 1;
        break;

      case REACT_PROFILER_TYPE:
        return type = createFiber(12, pendingProps, key, mode | 8), type.elementType = REACT_PROFILER_TYPE, type.type = REACT_PROFILER_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_TYPE:
        return type = createFiber(13, pendingProps, key, mode), type.type = REACT_SUSPENSE_TYPE, type.elementType = REACT_SUSPENSE_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_LIST_TYPE:
        return type = createFiber(19, pendingProps, key, mode), type.elementType = REACT_SUSPENSE_LIST_TYPE, type.expirationTime = expirationTime, type;

      default:
        if ("object" === typeof type && null !== type) switch (type.$$typeof) {
          case REACT_PROVIDER_TYPE:
            fiberTag = 10;
            break a;

          case REACT_CONTEXT_TYPE:
            fiberTag = 9;
            break a;

          case REACT_FORWARD_REF_TYPE:
            fiberTag = 11;
            break a;

          case REACT_MEMO_TYPE:
            fiberTag = 14;
            break a;

          case REACT_LAZY_TYPE:
            fiberTag = 16;
            owner = null;
            break a;
        }
        throw ReactError(Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (null == type ? type : typeof type) + "."));
    }
    key = createFiber(fiberTag, pendingProps, key, mode);
    key.elementType = type;
    key.type = owner;
    key.expirationTime = expirationTime;
    return key;
  }

  function createFiberFromFragment(elements, mode, expirationTime, key) {
    elements = createFiber(7, elements, key, mode);
    elements.expirationTime = expirationTime;
    return elements;
  }

  function createFiberFromText(content, mode, expirationTime) {
    content = createFiber(6, content, null, mode);
    content.expirationTime = expirationTime;
    return content;
  }

  function createFiberFromPortal(portal, mode, expirationTime) {
    mode = createFiber(4, null !== portal.children ? portal.children : [], portal.key, mode);
    mode.expirationTime = expirationTime;
    mode.stateNode = {
      containerInfo: portal.containerInfo,
      pendingChildren: null,
      implementation: portal.implementation
    };
    return mode;
  }

  function FiberRootNode(containerInfo, tag, hydrate) {
    this.tag = tag;
    this.current = null;
    this.containerInfo = containerInfo;
    this.pingCache = this.pendingChildren = null;
    this.finishedExpirationTime = 0;
    this.finishedWork = null;
    this.timeoutHandle = -1;
    this.pendingContext = this.context = null;
    this.hydrate = hydrate;
    this.callbackNode = this.firstBatch = null;
    this.pingTime = this.lastPendingTime = this.firstPendingTime = this.callbackExpirationTime = 0;
  }

  function findHostInstance(component) {
    var fiber = component._reactInternalFiber;

    if (undefined === fiber) {
      if ("function" === typeof component.render) throw ReactError(Error("Unable to find node on an unmounted component."));
      throw ReactError(Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component)));
    }

    component = findCurrentHostFiber(fiber);
    return null === component ? null : component.stateNode;
  }

  function updateContainer(element, container, parentComponent, callback) {
    var current$$1 = container.current,
        currentTime = requestCurrentTime(),
        suspenseConfig = ReactCurrentBatchConfig.suspense;
    current$$1 = computeExpirationForFiber(currentTime, current$$1, suspenseConfig);
    currentTime = container.current;

    a: if (parentComponent) {
      parentComponent = parentComponent._reactInternalFiber;

      b: {
        if (2 !== isFiberMountedImpl(parentComponent) || 1 !== parentComponent.tag) throw ReactError(Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue."));
        var parentContext = parentComponent;

        do {
          switch (parentContext.tag) {
            case 3:
              parentContext = parentContext.stateNode.context;
              break b;

            case 1:
              if (isContextProvider(parentContext.type)) {
                parentContext = parentContext.stateNode.__reactInternalMemoizedMergedChildContext;
                break b;
              }

          }

          parentContext = parentContext.return;
        } while (null !== parentContext);

        throw ReactError(Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue."));
      }

      if (1 === parentComponent.tag) {
        var Component = parentComponent.type;

        if (isContextProvider(Component)) {
          parentComponent = processChildContext(parentComponent, Component, parentContext);
          break a;
        }
      }

      parentComponent = parentContext;
    } else parentComponent = emptyContextObject;

    null === container.context ? container.context = parentComponent : container.pendingContext = parentComponent;
    container = callback;
    suspenseConfig = createUpdate(current$$1, suspenseConfig);
    suspenseConfig.payload = {
      element: element
    };
    container = undefined === container ? null : container;
    null !== container && (suspenseConfig.callback = container);
    enqueueUpdate(currentTime, suspenseConfig);
    scheduleUpdateOnFiber(currentTime, current$$1);
    return current$$1;
  }

  function _createPortal(children, containerInfo, implementation) {
    var key = 3 < arguments.length && undefined !== arguments[3] ? arguments[3] : null;
    return {
      $$typeof: REACT_PORTAL_TYPE,
      key: null == key ? null : "" + key,
      children: children,
      containerInfo: containerInfo,
      implementation: implementation
    };
  }

  function _inherits$1(subClass, superClass) {
    if ("function" !== typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
  }

  var getInspectorDataForViewTag = undefined;

  getInspectorDataForViewTag = function getInspectorDataForViewTag() {
    throw ReactError(Error("getInspectorDataForViewTag() is not available in production"));
  };

  var fabricDispatchCommand = nativeFabricUIManager.dispatchCommand;

  function findNodeHandle(componentOrHandle) {
    if (null == componentOrHandle) return null;
    if ("number" === typeof componentOrHandle) return componentOrHandle;
    if (componentOrHandle._nativeTag) return componentOrHandle._nativeTag;
    if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) return componentOrHandle.canonical._nativeTag;
    componentOrHandle = findHostInstance(componentOrHandle);
    return null == componentOrHandle ? componentOrHandle : componentOrHandle.canonical ? componentOrHandle.canonical._nativeTag : componentOrHandle._nativeTag;
  }

  batchedUpdatesImpl = function batchedUpdatesImpl(fn, a) {
    var prevExecutionContext = executionContext;
    executionContext |= 1;

    try {
      return fn(a);
    } finally {
      executionContext = prevExecutionContext, executionContext === NoContext && flushSyncCallbackQueue();
    }
  };

  flushDiscreteUpdatesImpl = function flushDiscreteUpdatesImpl() {
    (executionContext & 49) === NoContext && (flushPendingDiscreteUpdates(), flushPassiveEffects());
  };

  var roots = new Map(),
      ReactFabric = {
    NativeComponent: function (findNodeHandle, findHostInstance) {
      return function (_React$Component) {
        function ReactNativeComponent() {
          if (!(this instanceof ReactNativeComponent)) throw new TypeError("Cannot call a class as a function");

          var call = _React$Component.apply(this, arguments);

          if (!this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return !call || "object" !== typeof call && "function" !== typeof call ? this : call;
        }

        _inherits$1(ReactNativeComponent, _React$Component);

        ReactNativeComponent.prototype.blur = function () {
          ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.focus = function () {
          ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.measure = function (callback) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
        };

        ReactNativeComponent.prototype.measureInWindow = function (callback) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
        };

        ReactNativeComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
        };

        ReactNativeComponent.prototype.setNativeProps = function (nativeProps) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          if (null != maybeInstance && !maybeInstance.canonical) {
            var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
            maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
            nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
            null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
          }
        };

        return ReactNativeComponent;
      }(React.Component);
    }(findNodeHandle, findHostInstance),
    findNodeHandle: findNodeHandle,
    setNativeProps: function setNativeProps() {},
    dispatchCommand: function dispatchCommand(handle, command, args) {
      null != handle._nativeTag && null != handle._internalInstanceHandle && fabricDispatchCommand(handle._internalInstanceHandle.stateNode.node, command, args);
    },
    render: function render(element, containerTag, callback) {
      var root = roots.get(containerTag);

      if (!root) {
        root = new FiberRootNode(containerTag, 0, false);
        var uninitializedFiber = createFiber(3, null, null, 0);
        root.current = uninitializedFiber;
        uninitializedFiber.stateNode = root;
        roots.set(containerTag, root);
      }

      updateContainer(element, root, null, callback);

      a: if (element = root.current, element.child) switch (element.child.tag) {
        case 5:
          element = element.child.stateNode.canonical;
          break a;

        default:
          element = element.child.stateNode;
      } else element = null;

      return element;
    },
    unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
      var root = roots.get(containerTag);
      root && updateContainer(null, root, null, function () {
        roots.delete(containerTag);
      });
    },
    createPortal: function createPortal(children, containerTag) {
      return _createPortal(children, containerTag, null, 2 < arguments.length && undefined !== arguments[2] ? arguments[2] : null);
    },
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
      NativeMethodsMixin: function (findNodeHandle, findHostInstance) {
        return {
          measure: function measure(callback) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
          },
          measureInWindow: function measureInWindow(callback) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
          },
          measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
          },
          setNativeProps: function setNativeProps(nativeProps) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            if (null != maybeInstance && !maybeInstance.canonical) {
              var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
              maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
              nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
              null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
            }
          },
          focus: function focus() {
            ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
          },
          blur: function blur() {
            ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
          }
        };
      }(findNodeHandle, findHostInstance)
    }
  };

  (function (devToolsConfig) {
    var _findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
    return injectInternals(_extends({}, devToolsConfig, {
      overrideHookState: null,
      overrideProps: null,
      setSuspenseHandler: null,
      scheduleUpdate: null,
      currentDispatcherRef: ReactSharedInternals.ReactCurrentDispatcher,
      findHostInstanceByFiber: function findHostInstanceByFiber(fiber) {
        fiber = findCurrentHostFiber(fiber);
        return null === fiber ? null : fiber.stateNode;
      },
      findFiberByHostInstance: function findFiberByHostInstance(instance) {
        return _findFiberByHostInstance ? _findFiberByHostInstance(instance) : null;
      },
      findHostInstancesForRefresh: null,
      scheduleRefresh: null,
      scheduleRoot: null,
      setRefreshHandler: null,
      getCurrentFiber: null
    }));
  })({
    findFiberByHostInstance: getInstanceFromInstance,
    getInspectorDataForViewTag: getInspectorDataForViewTag,
    bundleType: 0,
    version: "16.8.6",
    rendererPackageName: "react-native-renderer"
  });

  var ReactFabric$2 = {
    default: ReactFabric
  },
      ReactFabric$3 = ReactFabric$2 && ReactFabric || ReactFabric$2;
  module.exports = ReactFabric$3.default || ReactFabric$3;
},14815,[14344,14446,14566,10297,14575]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('AppState');

  exports.default = _default;
},14818,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('AsyncSQLiteDBStorage') || TurboModuleRegistry.get('AsyncLocalStorage');

  exports.default = _default;
},14821,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('Clipboard');

  exports.default = _default;
},14824,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('DatePickerAndroid');

  exports.default = _default;
},14827,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _NativeImagePickerIOS = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var ImagePickerIOS = {
    canRecordVideos: function canRecordVideos(callback) {
      (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
      return _NativeImagePickerIOS.default.canRecordVideos(callback);
    },
    canUseCamera: function canUseCamera(callback) {
      (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
      return _NativeImagePickerIOS.default.canUseCamera(callback);
    },
    openCameraDialog: function openCameraDialog(config, successCallback, cancelCallback) {
      (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
      var newConfig = {
        videoMode: true,
        unmirrorFrontFacingCamera: false
      };

      if (config.videoMode != null) {
        newConfig.videoMode = config.videoMode;
      }

      if (config.unmirrorFrontFacingCamera != null) {
        newConfig.unmirrorFrontFacingCamera = config.unmirrorFrontFacingCamera;
      }

      return _NativeImagePickerIOS.default.openCameraDialog(newConfig, successCallback, cancelCallback);
    },
    openSelectDialog: function openSelectDialog(config, successCallback, cancelCallback) {
      (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
      var newConfig = {
        showImages: true,
        showVideos: false
      };

      if (config.showImages != null) {
        newConfig.showImages = config.showImages;
      }

      if (config.showVideos != null) {
        newConfig.showVideos = config.showVideos;
      }

      return _NativeImagePickerIOS.default.openSelectDialog(newConfig, successCallback, cancelCallback);
    }
  };
  module.exports = ImagePickerIOS;
},14830,[14305,14833,14326]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('ImagePickerIOS');

  exports.default = _default;
},14833,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _default = _Platform.default.OS === 'android' ? TurboModuleRegistry.getEnforcing('IntentAndroid') : TurboModuleRegistry.getEnforcing('LinkingManager');

  exports.default = _default;
},14836,[14305,14308,14341,10066]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TouchHistoryMath = {
    centroidDimension: function centroidDimension(touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {
      var touchBank = touchHistory.touchBank;
      var total = 0;
      var count = 0;
      var oneTouchData = touchHistory.numberActiveTouches === 1 ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch] : null;

      if (oneTouchData !== null) {
        if (oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter) {
          total += ofCurrent && isXAxis ? oneTouchData.currentPageX : ofCurrent && !isXAxis ? oneTouchData.currentPageY : !ofCurrent && isXAxis ? oneTouchData.previousPageX : oneTouchData.previousPageY;
          count = 1;
        }
      } else {
        for (var i = 0; i < touchBank.length; i++) {
          var touchTrack = touchBank[i];

          if (touchTrack !== null && touchTrack !== undefined && touchTrack.touchActive && touchTrack.currentTimeStamp >= touchesChangedAfter) {
            var toAdd = undefined;

            if (ofCurrent && isXAxis) {
              toAdd = touchTrack.currentPageX;
            } else if (ofCurrent && !isXAxis) {
              toAdd = touchTrack.currentPageY;
            } else if (!ofCurrent && isXAxis) {
              toAdd = touchTrack.previousPageX;
            } else {
              toAdd = touchTrack.previousPageY;
            }

            total += toAdd;
            count++;
          }
        }
      }

      return count > 0 ? total / count : TouchHistoryMath.noCentroid;
    },
    currentCentroidXOfTouchesChangedAfter: function currentCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, true);
    },
    currentCentroidYOfTouchesChangedAfter: function currentCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, true);
    },
    previousCentroidXOfTouchesChangedAfter: function previousCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, false);
    },
    previousCentroidYOfTouchesChangedAfter: function previousCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, false);
    },
    currentCentroidX: function currentCentroidX(touchHistory) {
      return TouchHistoryMath.centroidDimension(touchHistory, 0, true, true);
    },
    currentCentroidY: function currentCentroidY(touchHistory) {
      return TouchHistoryMath.centroidDimension(touchHistory, 0, false, true);
    },
    noCentroid: -1
  };
  module.exports = TouchHistoryMath;
},14839,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('PermissionsAndroid');

  exports.default = _default;
},14842,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('PushNotificationManager');

  exports.default = _default;
},14845,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('ShareModule');

  exports.default = _default;
},14848,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _NativeTimePickerAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var TimePickerAndroid = function () {
    function TimePickerAndroid() {
      (0, _classCallCheck2.default)(this, TimePickerAndroid);
    }

    (0, _createClass2.default)(TimePickerAndroid, null, [{
      key: "open",
      value: function open(options) {
        return _regenerator.default.async(function open$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!_NativeTimePickerAndroid.default) {
                  _context.next = 4;
                  break;
                }

                return _context.abrupt("return", _NativeTimePickerAndroid.default.open(options));

              case 4:
                return _context.abrupt("return", Promise.reject({
                  message: 'TimePickerAndroid is not supported on this platform.'
                }));

              case 5:
              case "end":
                return _context.stop();
            }
          }
        });
      }
    }]);
    return TimePickerAndroid;
  }();

  TimePickerAndroid.timeSetAction = 'timeSetAction';
  TimePickerAndroid.dismissedAction = 'dismissedAction';
  module.exports = TimePickerAndroid;
},14851,[14305,14674,14320,14323,14854]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('TimePickerAndroid');

  exports.default = _default;
},14854,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('ToastAndroid');

  exports.default = _default;
},14857,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = useWindowDimensions;

  var _Dimensions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));

  function useWindowDimensions() {
    var dims = _Dimensions.default.get('window');

    var forceUpdate = React.useState(false)[1].bind(null, function (v) {
      return !v;
    });
    var initialDims = React.useState(dims)[0];
    React.useEffect(function () {
      _Dimensions.default.addEventListener('change', forceUpdate);

      var latestDims = _Dimensions.default.get('window');

      if (latestDims !== initialDims) {
        forceUpdate();
      }

      return function () {
        _Dimensions.default.removeEventListener('change', forceUpdate);
      };
    }, [forceUpdate, initialDims]);
    return dims;
  }
},14860,[14308,14305,10429,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var deepFreezeAndThrowOnMutationInDev = _$$_REQUIRE(_dependencyMap[0]);

  var UTFSequence = deepFreezeAndThrowOnMutationInDev({
    BOM: "\uFEFF",
    BULLET: "\u2022",
    BULLET_SP: "\xA0\u2022\xA0",
    MIDDOT: "\xB7",
    MIDDOT_SP: "\xA0\xB7\xA0",
    MIDDOT_KATAKANA: "\u30FB",
    MDASH: "\u2014",
    MDASH_SP: "\xA0\u2014\xA0",
    NDASH: "\u2013",
    NDASH_SP: "\xA0\u2013\xA0",
    NBSP: "\xA0",
    PIZZA: "\uD83C\uDF55",
    TRIANGLE_LEFT: "\u25C0",
    TRIANGLE_RIGHT: "\u25B6"
  });
  module.exports = UTFSequence;
},14863,[10057]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('Vibration');

  exports.default = _default;
},14866,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var React = _$$_REQUIRE(_dependencyMap[5]);

  var YellowBox;
  {
    YellowBox = function (_React$Component2) {
      _inherits(YellowBox, _React$Component2);

      function YellowBox() {
        _classCallCheck(this, YellowBox);

        return _possibleConstructorReturn(this, _getPrototypeOf(YellowBox).apply(this, arguments));
      }

      _createClass(YellowBox, [{
        key: "render",
        value: function render() {
          return null;
        }
      }], [{
        key: "ignoreWarnings",
        value: function ignoreWarnings(patterns) {}
      }, {
        key: "install",
        value: function install() {}
      }, {
        key: "uninstall",
        value: function uninstall() {}
      }]);

      return YellowBox;
    }(React.Component);
  }
  module.exports = YellowBox;
},14869,[14320,14323,14371,14377,14386,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var PropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var PointPropType = PropTypes.shape({
    x: PropTypes.number,
    y: PropTypes.number
  });
  module.exports = PointPropType;
},14872,[10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  ;

  (function (isNode) {
    var Public = function Public(clone) {
      return merge(clone === true, false, arguments);
    },
        publicName = 'merge';

    Public.recursive = function (clone) {
      return merge(clone === true, true, arguments);
    };

    Public.clone = function (input) {
      var output = input,
          type = typeOf(input),
          index,
          size;

      if (type === 'array') {
        output = [];
        size = input.length;

        for (index = 0; index < size; ++index) {
          output[index] = Public.clone(input[index]);
        }
      } else if (type === 'object') {
        output = {};

        for (index in input) {
          output[index] = Public.clone(input[index]);
        }
      }

      return output;
    };

    function merge_recursive(base, extend) {
      if (typeOf(base) !== 'object') return extend;

      for (var key in extend) {
        if (typeOf(base[key]) === 'object' && typeOf(extend[key]) === 'object') {
          base[key] = merge_recursive(base[key], extend[key]);
        } else {
          base[key] = extend[key];
        }
      }

      return base;
    }

    function merge(clone, recursive, argv) {
      var result = argv[0],
          size = argv.length;
      if (clone || typeOf(result) !== 'object') result = {};

      for (var index = 0; index < size; ++index) {
        var item = argv[index],
            type = typeOf(item);
        if (type !== 'object') continue;

        for (var key in item) {
          if (key === '__proto__') continue;
          var sitem = clone ? Public.clone(item[key]) : item[key];

          if (recursive) {
            result[key] = merge_recursive(result[key], sitem);
          } else {
            result[key] = sitem;
          }
        }
      }

      return result;
    }

    function typeOf(input) {
      return {}.toString.call(input).slice(8, -1).toLowerCase();
    }

    if (isNode) {
      module.exports = Public;
    } else {
      window[publicName] = Public;
    }
  })(typeof module === 'object' && module && typeof module.exports === 'object' && module.exports);
},14914,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = extractColor;
  exports.integerColor = exports.colorNames = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var colorNames = {
    aliceblue: [240, 248, 255],
    antiquewhite: [250, 235, 215],
    aqua: [0, 255, 255],
    aquamarine: [127, 255, 212],
    azure: [240, 255, 255],
    beige: [245, 245, 220],
    bisque: [255, 228, 196],
    black: [0, 0, 0],
    blanchedalmond: [255, 235, 205],
    blue: [0, 0, 255],
    blueviolet: [138, 43, 226],
    brown: [165, 42, 42],
    burlywood: [222, 184, 135],
    cadetblue: [95, 158, 160],
    chartreuse: [127, 255, 0],
    chocolate: [210, 105, 30],
    coral: [255, 127, 80],
    cornflowerblue: [100, 149, 237],
    cornsilk: [255, 248, 220],
    crimson: [220, 20, 60],
    cyan: [0, 255, 255],
    darkblue: [0, 0, 139],
    darkcyan: [0, 139, 139],
    darkgoldenrod: [184, 134, 11],
    darkgray: [169, 169, 169],
    darkgreen: [0, 100, 0],
    darkgrey: [169, 169, 169],
    darkkhaki: [189, 183, 107],
    darkmagenta: [139, 0, 139],
    darkolivegreen: [85, 107, 47],
    darkorange: [255, 140, 0],
    darkorchid: [153, 50, 204],
    darkred: [139, 0, 0],
    darksalmon: [233, 150, 122],
    darkseagreen: [143, 188, 143],
    darkslateblue: [72, 61, 139],
    darkslategray: [47, 79, 79],
    darkslategrey: [47, 79, 79],
    darkturquoise: [0, 206, 209],
    darkviolet: [148, 0, 211],
    deeppink: [255, 20, 147],
    deepskyblue: [0, 191, 255],
    dimgray: [105, 105, 105],
    dimgrey: [105, 105, 105],
    dodgerblue: [30, 144, 255],
    firebrick: [178, 34, 34],
    floralwhite: [255, 250, 240],
    forestgreen: [34, 139, 34],
    fuchsia: [255, 0, 255],
    gainsboro: [220, 220, 220],
    ghostwhite: [248, 248, 255],
    gold: [255, 215, 0],
    goldenrod: [218, 165, 32],
    gray: [128, 128, 128],
    green: [0, 128, 0],
    greenyellow: [173, 255, 47],
    grey: [128, 128, 128],
    honeydew: [240, 255, 240],
    hotpink: [255, 105, 180],
    indianred: [205, 92, 92],
    indigo: [75, 0, 130],
    ivory: [255, 255, 240],
    khaki: [240, 230, 140],
    lavender: [230, 230, 250],
    lavenderblush: [255, 240, 245],
    lawngreen: [124, 252, 0],
    lemonchiffon: [255, 250, 205],
    lightblue: [173, 216, 230],
    lightcoral: [240, 128, 128],
    lightcyan: [224, 255, 255],
    lightgoldenrodyellow: [250, 250, 210],
    lightgray: [211, 211, 211],
    lightgreen: [144, 238, 144],
    lightgrey: [211, 211, 211],
    lightpink: [255, 182, 193],
    lightsalmon: [255, 160, 122],
    lightseagreen: [32, 178, 170],
    lightskyblue: [135, 206, 250],
    lightslategray: [119, 136, 153],
    lightslategrey: [119, 136, 153],
    lightsteelblue: [176, 196, 222],
    lightyellow: [255, 255, 224],
    lime: [0, 255, 0],
    limegreen: [50, 205, 50],
    linen: [250, 240, 230],
    magenta: [255, 0, 255],
    maroon: [128, 0, 0],
    mediumaquamarine: [102, 205, 170],
    mediumblue: [0, 0, 205],
    mediumorchid: [186, 85, 211],
    mediumpurple: [147, 112, 219],
    mediumseagreen: [60, 179, 113],
    mediumslateblue: [123, 104, 238],
    mediumspringgreen: [0, 250, 154],
    mediumturquoise: [72, 209, 204],
    mediumvioletred: [199, 21, 133],
    midnightblue: [25, 25, 112],
    mintcream: [245, 255, 250],
    mistyrose: [255, 228, 225],
    moccasin: [255, 228, 181],
    navajowhite: [255, 222, 173],
    navy: [0, 0, 128],
    oldlace: [253, 245, 230],
    olive: [128, 128, 0],
    olivedrab: [107, 142, 35],
    orange: [255, 165, 0],
    orangered: [255, 69, 0],
    orchid: [218, 112, 214],
    palegoldenrod: [238, 232, 170],
    palegreen: [152, 251, 152],
    paleturquoise: [175, 238, 238],
    palevioletred: [219, 112, 147],
    papayawhip: [255, 239, 213],
    peachpuff: [255, 218, 185],
    peru: [205, 133, 63],
    pink: [255, 192, 203],
    plum: [221, 160, 221],
    powderblue: [176, 224, 230],
    purple: [128, 0, 128],
    rebeccapurple: [102, 51, 153],
    red: [255, 0, 0],
    rosybrown: [188, 143, 143],
    royalblue: [65, 105, 225],
    saddlebrown: [139, 69, 19],
    salmon: [250, 128, 114],
    sandybrown: [244, 164, 96],
    seagreen: [46, 139, 87],
    seashell: [255, 245, 238],
    sienna: [160, 82, 45],
    silver: [192, 192, 192],
    skyblue: [135, 206, 235],
    slateblue: [106, 90, 205],
    slategray: [112, 128, 144],
    slategrey: [112, 128, 144],
    snow: [255, 250, 250],
    springgreen: [0, 255, 127],
    steelblue: [70, 130, 180],
    tan: [210, 180, 140],
    teal: [0, 128, 128],
    thistle: [216, 191, 216],
    tomato: [255, 99, 71],
    turquoise: [64, 224, 208],
    violet: [238, 130, 238],
    wheat: [245, 222, 179],
    white: [255, 255, 255],
    whitesmoke: [245, 245, 245],
    yellow: [255, 255, 0],
    yellowgreen: [154, 205, 50]
  };
  exports.colorNames = colorNames;

  for (var name in colorNames) {
    if (colorNames.hasOwnProperty(name)) {
      var color = colorNames[name];
      var r = color[0];
      var g = color[1];
      var b = color[2];
      colorNames[name] = (0xff000000 | r << 16 | g << 8 | b) >>> 0;
    }
  }

  Object.freeze(colorNames);

  function hslToRgb(hsl) {
    var h = hsl[0] / 360;
    var s = hsl[1] / 100;
    var l = hsl[2] / 100;
    var t1;
    var t2;
    var t3;
    var rgb;
    var val;

    if (s === 0) {
      val = l * 255;
      return [val, val, val];
    }

    if (l < 0.5) {
      t2 = l * (1 + s);
    } else {
      t2 = l + s - l * s;
    }

    t1 = 2 * l - t2;
    rgb = [0, 0, 0];

    for (var i = 0; i < 3; i++) {
      t3 = h + 0.3333333333333333 * -(i - 1);

      if (t3 < 0) {
        t3++;
      }

      if (t3 > 1) {
        t3--;
      }

      if (6 * t3 < 1) {
        val = t1 + (t2 - t1) * 6 * t3;
      } else if (2 * t3 < 1) {
        val = t2;
      } else if (3 * t3 < 2) {
        val = t1 + (t2 - t1) * (0.6666666666666666 - t3) * 6;
      } else {
        val = t1;
      }

      rgb[i] = val;
    }

    return rgb;
  }

  function hwbToRgb(hwb) {
    var h = hwb[0] / 360;
    var wh = hwb[1] / 100;
    var bl = hwb[2] / 100;
    var ratio = wh + bl;
    var i;
    var v;
    var f;
    var n;

    if (ratio > 1) {
      wh /= ratio;
      bl /= ratio;
    }

    i = Math.floor(6 * h);
    v = 1 - bl;
    f = 6 * h - i;

    if ((i & 0x01) !== 0) {
      f = 1 - f;
    }

    n = wh + f * (v - wh);
    var r;
    var g;
    var b;

    switch (i) {
      default:
      case 6:
      case 0:
        r = v;
        g = n;
        b = wh;
        break;

      case 1:
        r = n;
        g = v;
        b = wh;
        break;

      case 2:
        r = wh;
        g = v;
        b = n;
        break;

      case 3:
        r = wh;
        g = n;
        b = v;
        break;

      case 4:
        r = n;
        g = wh;
        b = v;
        break;

      case 5:
        r = v;
        g = wh;
        b = n;
        break;
    }

    return [r, g, b];
  }

  function clamp(num, min, max) {
    return Math.min(Math.max(min, num), max);
  }

  var abbr = /^#([a-f0-9]{3,4})$/i;
  var hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;
  var rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;
  var per = /^rgba?\(\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;
  var keyword = /(\D+)/;

  function rgbFromString(string) {
    var rgb = [0, 0, 0, 1];
    var match;
    var i;
    var hexAlpha;

    if (match = string.match(hex)) {
      hexAlpha = match[2];
      match = match[1];

      for (i = 0; i < 3; i++) {
        var i2 = i * 2;
        rgb[i] = parseInt(match.slice(i2, i2 + 2), 16) / 255;
      }

      if (hexAlpha) {
        rgb[3] = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;
      }
    } else if (match = string.match(abbr)) {
      match = match[1];
      hexAlpha = match[3];

      for (i = 0; i < 3; i++) {
        rgb[i] = parseInt(match[i] + match[i], 16) / 255;
      }

      if (hexAlpha) {
        rgb[3] = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;
      }
    } else if (match = string.match(rgba)) {
      for (i = 0; i < 3; i++) {
        rgb[i] = parseInt(match[i + 1], 0) / 255;
      }

      if (match[4]) {
        rgb[3] = parseFloat(match[4]);
      }
    } else if (match = string.match(per)) {
      for (i = 0; i < 3; i++) {
        rgb[i] = parseFloat(match[i + 1]) / 100;
      }

      if (match[4]) {
        rgb[3] = parseFloat(match[4]);
      }
    } else if (match = string.match(keyword)) {
      if (match[1] === 'transparent') {
        return [0, 0, 0, 0];
      }

      rgb = colorNames[match[1]];

      if (!(typeof rgb === 'number')) {
        return null;
      }

      return integerColor(rgb);
    } else {
      return null;
    }

    for (i = 0; i < 4; i++) {
      rgb[i] = clamp(rgb[i], 0, 1);
    }

    return rgb;
  }

  var hslRegEx = /^hsla?\(\s*([+-]?(?:\d*\.)?\d+)(?:deg)?\s*,\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;

  function rgbFromHslString(string) {
    var match = string.match(hslRegEx);

    if (!match) {
      return null;
    }

    var alpha = parseFloat(match[4]);
    var h = (parseFloat(match[1]) + 360) % 360;
    var s = clamp(parseFloat(match[2]), 0, 100);
    var l = clamp(parseFloat(match[3]), 0, 100);
    var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
    return hslToRgb([h, s, l, a]);
  }

  var hwbRegEx = /^hwb\(\s*([+-]?\d*[.]?\d+)(?:deg)?\s*,\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;

  function rgbFromHwbString(string) {
    var match = string.match(hwbRegEx);

    if (!match) {
      return null;
    }

    var alpha = parseFloat(match[4]);
    var h = (parseFloat(match[1]) % 360 + 360) % 360;
    var w = clamp(parseFloat(match[2]), 0, 100);
    var b = clamp(parseFloat(match[3]), 0, 100);
    var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
    return hwbToRgb([h, w, b, a]);
  }

  function colorFromString(string) {
    var prefix = string.substring(0, 3).toLowerCase();

    switch (prefix) {
      case 'hsl':
        return rgbFromHslString(string);

      case 'hwb':
        return rgbFromHwbString(string);

      default:
        return rgbFromString(string);
    }
  }

  var identity = function identity(x) {
    return x;
  };

  var toSignedInt32 = function toSignedInt32(x) {
    return x | 0x0;
  };

  var integerColor = _reactNative.Platform.OS === 'android' ? toSignedInt32 : identity;
  exports.integerColor = integerColor;

  function extractColor(color) {
    if (typeof color === 'number') {
      if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
        return integerColor(color);
      }

      return null;
    }

    var parsedColor = typeof color === 'string' ? colorFromString(color) : color;

    if (!Array.isArray(parsedColor)) {
      return parsedColor;
    }

    var r = parsedColor[0];
    var g = parsedColor[1];
    var b = parsedColor[2];
    var a = parsedColor[3];
    var int32Color = ((a === undefined ? 0xff000000 : Math.round(a * 255) << 24) | Math.round(r * 255) << 16 | Math.round(g * 255) << 8 | Math.round(b * 255)) >>> 0;
    return integerColor(int32Color);
  }
},14917,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  function peg$subclass(child, parent) {
    function ctor() {
      this.constructor = child;
    }

    ctor.prototype = parent.prototype;
    child.prototype = new ctor();
  }

  function peg$SyntaxError(message, expected, found, location) {
    this.message = message;
    this.expected = expected;
    this.found = found;
    this.location = location;
    this.name = "SyntaxError";

    if (typeof Error.captureStackTrace === "function") {
      Error.captureStackTrace(this, peg$SyntaxError);
    }
  }

  peg$subclass(peg$SyntaxError, Error);

  peg$SyntaxError.buildMessage = function (expected, found) {
    var DESCRIBE_EXPECTATION_FNS = {
      literal: function literal(expectation) {
        return "\"" + literalEscape(expectation.text) + "\"";
      },
      "class": function _class(expectation) {
        var escapedParts = "",
            i;

        for (i = 0; i < expectation.parts.length; i++) {
          escapedParts += expectation.parts[i] instanceof Array ? classEscape(expectation.parts[i][0]) + "-" + classEscape(expectation.parts[i][1]) : classEscape(expectation.parts[i]);
        }

        return "[" + (expectation.inverted ? "^" : "") + escapedParts + "]";
      },
      any: function any(expectation) {
        return "any character";
      },
      end: function end(expectation) {
        return "end of input";
      },
      other: function other(expectation) {
        return expectation.description;
      }
    };

    function hex(ch) {
      return ch.charCodeAt(0).toString(16).toUpperCase();
    }

    function literalEscape(s) {
      return s.replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (ch) {
        return '\\x0' + hex(ch);
      }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) {
        return '\\x' + hex(ch);
      });
    }

    function classEscape(s) {
      return s.replace(/\\/g, '\\\\').replace(/\]/g, '\\]').replace(/\^/g, '\\^').replace(/-/g, '\\-').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (ch) {
        return '\\x0' + hex(ch);
      }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) {
        return '\\x' + hex(ch);
      });
    }

    function describeExpectation(expectation) {
      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
    }

    function describeExpected(expected) {
      var descriptions = new Array(expected.length),
          i,
          j;

      for (i = 0; i < expected.length; i++) {
        descriptions[i] = describeExpectation(expected[i]);
      }

      descriptions.sort();

      if (descriptions.length > 0) {
        for (i = 1, j = 1; i < descriptions.length; i++) {
          if (descriptions[i - 1] !== descriptions[i]) {
            descriptions[j] = descriptions[i];
            j++;
          }
        }

        descriptions.length = j;
      }

      switch (descriptions.length) {
        case 1:
          return descriptions[0];

        case 2:
          return descriptions[0] + " or " + descriptions[1];

        default:
          return descriptions.slice(0, -1).join(", ") + ", or " + descriptions[descriptions.length - 1];
      }
    }

    function describeFound(found) {
      return found ? "\"" + literalEscape(found) + "\"" : "end of input";
    }

    return "Expected " + describeExpected(expected) + " but " + describeFound(found) + " found.";
  };

  function peg$parse(input, options) {
    options = options !== undefined ? options : {};

    var peg$FAILED = {},
        peg$startRuleFunctions = {
      transformList: peg$parsetransformList
    },
        peg$startRuleFunction = peg$parsetransformList,
        peg$c0 = function peg$c0(ts) {
      return ts;
    },
        peg$c1 = function peg$c1(t, ts) {
      return multiply_matrices(t, ts);
    },
        peg$c2 = "matrix",
        peg$c3 = peg$literalExpectation("matrix", false),
        peg$c4 = "(",
        peg$c5 = peg$literalExpectation("(", false),
        peg$c6 = ")",
        peg$c7 = peg$literalExpectation(")", false),
        peg$c8 = function peg$c8(a, b, c, d, e, f) {
      return [a, c, e, b, d, f];
    },
        peg$c9 = "translate",
        peg$c10 = peg$literalExpectation("translate", false),
        peg$c11 = function peg$c11(tx, ty) {
      return [1, 0, tx, 0, 1, ty || 0];
    },
        peg$c12 = "scale",
        peg$c13 = peg$literalExpectation("scale", false),
        peg$c14 = function peg$c14(sx, sy) {
      return [sx, 0, 0, 0, sy === null ? sx : sy, 0];
    },
        peg$c15 = "rotate",
        peg$c16 = peg$literalExpectation("rotate", false),
        peg$c17 = function peg$c17(angle, c) {
      var cos = Math.cos(deg2rad * angle);
      var sin = Math.sin(deg2rad * angle);

      if (c !== null) {
        var x = c[0];
        var y = c[1];
        return [cos, -sin, cos * -x + -sin * -y + x, sin, cos, sin * -x + cos * -y + y];
      }

      return [cos, -sin, 0, sin, cos, 0];
    },
        peg$c18 = "skewX",
        peg$c19 = peg$literalExpectation("skewX", false),
        peg$c20 = function peg$c20(angle) {
      return [1, Math.tan(deg2rad * angle), 0, 0, 1, 0];
    },
        peg$c21 = "skewY",
        peg$c22 = peg$literalExpectation("skewY", false),
        peg$c23 = function peg$c23(angle) {
      return [1, 0, 0, Math.tan(deg2rad * angle), 1, 0];
    },
        peg$c24 = function peg$c24(f) {
      return parseFloat(f.join(""));
    },
        peg$c25 = function peg$c25(i) {
      return parseInt(i.join(""));
    },
        peg$c26 = function peg$c26(n) {
      return n;
    },
        peg$c27 = function peg$c27(n1, n2) {
      return [n1, n2];
    },
        peg$c28 = ",",
        peg$c29 = peg$literalExpectation(",", false),
        peg$c30 = function peg$c30(ds) {
      return ds.join("");
    },
        peg$c31 = function peg$c31(f) {
      return f.join("");
    },
        peg$c32 = function peg$c32(d) {
      return d.join("");
    },
        peg$c33 = peg$otherExpectation("fractionalConstant"),
        peg$c34 = ".",
        peg$c35 = peg$literalExpectation(".", false),
        peg$c36 = function peg$c36(d1, d2) {
      return [d1 ? d1.join("") : null, ".", d2.join("")].join("");
    },
        peg$c37 = /^[eE]/,
        peg$c38 = peg$classExpectation(["e", "E"], false, false),
        peg$c39 = function peg$c39(e) {
      return [e[0], e[1], e[2].join("")].join("");
    },
        peg$c40 = /^[+\-]/,
        peg$c41 = peg$classExpectation(["+", "-"], false, false),
        peg$c42 = /^[0-9]/,
        peg$c43 = peg$classExpectation([["0", "9"]], false, false),
        peg$c44 = /^[ \t\r\n]/,
        peg$c45 = peg$classExpectation([" ", "\t", "\r", "\n"], false, false),
        peg$currPos = 0,
        peg$savedPos = 0,
        peg$posDetailsCache = [{
      line: 1,
      column: 1
    }],
        peg$maxFailPos = 0,
        peg$maxFailExpected = [],
        peg$silentFails = 0,
        peg$result;

    if ("startRule" in options) {
      if (!(options.startRule in peg$startRuleFunctions)) {
        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
      }

      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
    }

    function peg$literalExpectation(text, ignoreCase) {
      return {
        type: "literal",
        text: text,
        ignoreCase: ignoreCase
      };
    }

    function peg$classExpectation(parts, inverted, ignoreCase) {
      return {
        type: "class",
        parts: parts,
        inverted: inverted,
        ignoreCase: ignoreCase
      };
    }

    function peg$endExpectation() {
      return {
        type: "end"
      };
    }

    function peg$otherExpectation(description) {
      return {
        type: "other",
        description: description
      };
    }

    function peg$computePosDetails(pos) {
      var details = peg$posDetailsCache[pos],
          p;

      if (details) {
        return details;
      } else {
        p = pos - 1;

        while (!peg$posDetailsCache[p]) {
          p--;
        }

        details = peg$posDetailsCache[p];
        details = {
          line: details.line,
          column: details.column
        };

        while (p < pos) {
          if (input.charCodeAt(p) === 10) {
            details.line++;
            details.column = 1;
          } else {
            details.column++;
          }

          p++;
        }

        peg$posDetailsCache[pos] = details;
        return details;
      }
    }

    function peg$computeLocation(startPos, endPos) {
      var startPosDetails = peg$computePosDetails(startPos),
          endPosDetails = peg$computePosDetails(endPos);
      return {
        start: {
          offset: startPos,
          line: startPosDetails.line,
          column: startPosDetails.column
        },
        end: {
          offset: endPos,
          line: endPosDetails.line,
          column: endPosDetails.column
        }
      };
    }

    function peg$fail(expected) {
      if (peg$currPos < peg$maxFailPos) {
        return;
      }

      if (peg$currPos > peg$maxFailPos) {
        peg$maxFailPos = peg$currPos;
        peg$maxFailExpected = [];
      }

      peg$maxFailExpected.push(expected);
    }

    function peg$buildSimpleError(message, location) {
      return new peg$SyntaxError(message, null, null, location);
    }

    function peg$buildStructuredError(expected, found, location) {
      return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);
    }

    function peg$parsetransformList() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsewsp();

      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsewsp();
      }

      if (s1 !== peg$FAILED) {
        s2 = peg$parsetransforms();

        if (s2 === peg$FAILED) {
          s2 = null;
        }

        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parsewsp();

          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parsewsp();
          }

          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c0(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsetransforms() {
      var s0, s1, s2, s3;
      s0 = peg$currPos;
      s1 = peg$parsetransform();

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsecommaWsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsecommaWsp();
        }

        if (s2 !== peg$FAILED) {
          s3 = peg$parsetransforms();

          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c1(s1, s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      if (s0 === peg$FAILED) {
        s0 = peg$parsetransform();
      }

      return s0;
    }

    function peg$parsetransform() {
      var s0;
      s0 = peg$parsematrix();

      if (s0 === peg$FAILED) {
        s0 = peg$parsetranslate();

        if (s0 === peg$FAILED) {
          s0 = peg$parsescale();

          if (s0 === peg$FAILED) {
            s0 = peg$parserotate();

            if (s0 === peg$FAILED) {
              s0 = peg$parseskewX();

              if (s0 === peg$FAILED) {
                s0 = peg$parseskewY();
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsematrix() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 6) === peg$c2) {
        s1 = peg$c2;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c3);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWsp();

                if (s6 !== peg$FAILED) {
                  s7 = peg$parsenumber();

                  if (s7 !== peg$FAILED) {
                    s8 = peg$parsecommaWsp();

                    if (s8 !== peg$FAILED) {
                      s9 = peg$parsenumber();

                      if (s9 !== peg$FAILED) {
                        s10 = peg$parsecommaWsp();

                        if (s10 !== peg$FAILED) {
                          s11 = peg$parsenumber();

                          if (s11 !== peg$FAILED) {
                            s12 = peg$parsecommaWsp();

                            if (s12 !== peg$FAILED) {
                              s13 = peg$parsenumber();

                              if (s13 !== peg$FAILED) {
                                s14 = peg$parsecommaWsp();

                                if (s14 !== peg$FAILED) {
                                  s15 = peg$parsenumber();

                                  if (s15 !== peg$FAILED) {
                                    s16 = [];
                                    s17 = peg$parsewsp();

                                    while (s17 !== peg$FAILED) {
                                      s16.push(s17);
                                      s17 = peg$parsewsp();
                                    }

                                    if (s16 !== peg$FAILED) {
                                      if (input.charCodeAt(peg$currPos) === 41) {
                                        s17 = peg$c6;
                                        peg$currPos++;
                                      } else {
                                        s17 = peg$FAILED;

                                        if (peg$silentFails === 0) {
                                          peg$fail(peg$c7);
                                        }
                                      }

                                      if (s17 !== peg$FAILED) {
                                        peg$savedPos = s0;
                                        s1 = peg$c8(s5, s7, s9, s11, s13, s15);
                                        s0 = s1;
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsetranslate() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 9) === peg$c9) {
        s1 = peg$c9;
        peg$currPos += 9;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c10);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWspNumber();

                if (s6 === peg$FAILED) {
                  s6 = null;
                }

                if (s6 !== peg$FAILED) {
                  s7 = [];
                  s8 = peg$parsewsp();

                  while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    s8 = peg$parsewsp();
                  }

                  if (s7 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 41) {
                      s8 = peg$c6;
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;

                      if (peg$silentFails === 0) {
                        peg$fail(peg$c7);
                      }
                    }

                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c11(s5, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsescale() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 5) === peg$c12) {
        s1 = peg$c12;
        peg$currPos += 5;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c13);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWspNumber();

                if (s6 === peg$FAILED) {
                  s6 = null;
                }

                if (s6 !== peg$FAILED) {
                  s7 = [];
                  s8 = peg$parsewsp();

                  while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    s8 = peg$parsewsp();
                  }

                  if (s7 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 41) {
                      s8 = peg$c6;
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;

                      if (peg$silentFails === 0) {
                        peg$fail(peg$c7);
                      }
                    }

                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c14(s5, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parserotate() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 6) === peg$c15) {
        s1 = peg$c15;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c16);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWspTwoNumbers();

                if (s6 === peg$FAILED) {
                  s6 = null;
                }

                if (s6 !== peg$FAILED) {
                  s7 = [];
                  s8 = peg$parsewsp();

                  while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    s8 = peg$parsewsp();
                  }

                  if (s7 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 41) {
                      s8 = peg$c6;
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;

                      if (peg$silentFails === 0) {
                        peg$fail(peg$c7);
                      }
                    }

                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c17(s5, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseskewX() {
      var s0, s1, s2, s3, s4, s5, s6, s7;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 5) === peg$c18) {
        s1 = peg$c18;
        peg$currPos += 5;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c19);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = [];
                s7 = peg$parsewsp();

                while (s7 !== peg$FAILED) {
                  s6.push(s7);
                  s7 = peg$parsewsp();
                }

                if (s6 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 41) {
                    s7 = peg$c6;
                    peg$currPos++;
                  } else {
                    s7 = peg$FAILED;

                    if (peg$silentFails === 0) {
                      peg$fail(peg$c7);
                    }
                  }

                  if (s7 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c20(s5);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseskewY() {
      var s0, s1, s2, s3, s4, s5, s6, s7;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 5) === peg$c21) {
        s1 = peg$c21;
        peg$currPos += 5;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c22);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = [];
                s7 = peg$parsewsp();

                while (s7 !== peg$FAILED) {
                  s6.push(s7);
                  s7 = peg$parsewsp();
                }

                if (s6 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 41) {
                    s7 = peg$c6;
                    peg$currPos++;
                  } else {
                    s7 = peg$FAILED;

                    if (peg$silentFails === 0) {
                      peg$fail(peg$c7);
                    }
                  }

                  if (s7 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c23(s5);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsenumber() {
      var s0, s1, s2, s3;
      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parsesign();

      if (s2 === peg$FAILED) {
        s2 = null;
      }

      if (s2 !== peg$FAILED) {
        s3 = peg$parsefloatingPointConstant();

        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c24(s1);
      }

      s0 = s1;

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = peg$parsesign();

        if (s2 === peg$FAILED) {
          s2 = null;
        }

        if (s2 !== peg$FAILED) {
          s3 = peg$parseintegerConstant();

          if (s3 !== peg$FAILED) {
            s2 = [s2, s3];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }

        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c25(s1);
        }

        s0 = s1;
      }

      return s0;
    }

    function peg$parsecommaWspNumber() {
      var s0, s1, s2;
      s0 = peg$currPos;
      s1 = peg$parsecommaWsp();

      if (s1 !== peg$FAILED) {
        s2 = peg$parsenumber();

        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c26(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsecommaWspTwoNumbers() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = peg$parsecommaWsp();

      if (s1 !== peg$FAILED) {
        s2 = peg$parsenumber();

        if (s2 !== peg$FAILED) {
          s3 = peg$parsecommaWsp();

          if (s3 !== peg$FAILED) {
            s4 = peg$parsenumber();

            if (s4 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c27(s2, s4);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsecommaWsp() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsewsp();

      if (s2 !== peg$FAILED) {
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          s2 = peg$parsewsp();
        }
      } else {
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        s2 = peg$parsecomma();

        if (s2 === peg$FAILED) {
          s2 = null;
        }

        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parsewsp();

          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parsewsp();
          }

          if (s3 !== peg$FAILED) {
            s1 = [s1, s2, s3];
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parsecomma();

        if (s1 !== peg$FAILED) {
          s2 = [];
          s3 = peg$parsewsp();

          while (s3 !== peg$FAILED) {
            s2.push(s3);
            s3 = peg$parsewsp();
          }

          if (s2 !== peg$FAILED) {
            s1 = [s1, s2];
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      }

      return s0;
    }

    function peg$parsecomma() {
      var s0;

      if (input.charCodeAt(peg$currPos) === 44) {
        s0 = peg$c28;
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c29);
        }
      }

      return s0;
    }

    function peg$parseintegerConstant() {
      var s0, s1;
      s0 = peg$currPos;
      s1 = peg$parsedigitSequence();

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c30(s1);
      }

      s0 = s1;
      return s0;
    }

    function peg$parsefloatingPointConstant() {
      var s0, s1, s2, s3;
      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parsefractionalConstant();

      if (s2 !== peg$FAILED) {
        s3 = peg$parseexponent();

        if (s3 === peg$FAILED) {
          s3 = null;
        }

        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c31(s1);
      }

      s0 = s1;

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = peg$parsedigitSequence();

        if (s2 !== peg$FAILED) {
          s3 = peg$parseexponent();

          if (s3 !== peg$FAILED) {
            s2 = [s2, s3];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }

        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c32(s1);
        }

        s0 = s1;
      }

      return s0;
    }

    function peg$parsefractionalConstant() {
      var s0, s1, s2, s3;
      peg$silentFails++;
      s0 = peg$currPos;
      s1 = peg$parsedigitSequence();

      if (s1 === peg$FAILED) {
        s1 = null;
      }

      if (s1 !== peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 46) {
          s2 = peg$c34;
          peg$currPos++;
        } else {
          s2 = peg$FAILED;

          if (peg$silentFails === 0) {
            peg$fail(peg$c35);
          }
        }

        if (s2 !== peg$FAILED) {
          s3 = peg$parsedigitSequence();

          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c36(s1, s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parsedigitSequence();

        if (s1 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 46) {
            s2 = peg$c34;
            peg$currPos++;
          } else {
            s2 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c35);
            }
          }

          if (s2 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c32(s1);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      }

      peg$silentFails--;

      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c33);
        }
      }

      return s0;
    }

    function peg$parseexponent() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = peg$currPos;

      if (peg$c37.test(input.charAt(peg$currPos))) {
        s2 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s2 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c38);
        }
      }

      if (s2 !== peg$FAILED) {
        s3 = peg$parsesign();

        if (s3 === peg$FAILED) {
          s3 = null;
        }

        if (s3 !== peg$FAILED) {
          s4 = peg$parsedigitSequence();

          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c39(s1);
      }

      s0 = s1;
      return s0;
    }

    function peg$parsesign() {
      var s0;

      if (peg$c40.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c41);
        }
      }

      return s0;
    }

    function peg$parsedigitSequence() {
      var s0, s1;
      s0 = [];
      s1 = peg$parsedigit();

      if (s1 !== peg$FAILED) {
        while (s1 !== peg$FAILED) {
          s0.push(s1);
          s1 = peg$parsedigit();
        }
      } else {
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsedigit() {
      var s0;

      if (peg$c42.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c43);
        }
      }

      return s0;
    }

    function peg$parsewsp() {
      var s0;

      if (peg$c44.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c45);
        }
      }

      return s0;
    }

    var deg2rad = Math.PI / 180;

    function multiply_matrices(l, r) {
      var al = l[0];
      var cl = l[1];
      var el = l[2];
      var bl = l[3];
      var dl = l[4];
      var fl = l[5];
      var ar = r[0];
      var cr = r[1];
      var er = r[2];
      var br = r[3];
      var dr = r[4];
      var fr = r[5];
      var a = al * ar + cl * br;
      var c = al * cr + cl * dr;
      var e = al * er + cl * fr + el;
      var b = bl * ar + dl * br;
      var d = bl * cr + dl * dr;
      var f = bl * er + dl * fr + fl;
      return [a, c, e, b, d, f];
    }

    peg$result = peg$startRuleFunction();

    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
      return peg$result;
    } else {
      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
        peg$fail(peg$endExpectation());
      }

      throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));
    }
  }

  module.exports = {
    SyntaxError: peg$SyntaxError,
    parse: peg$parse
  };
},14920,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.pickNotNil = pickNotNil;
  exports.idPattern = undefined;

  function pickNotNil(object) {
    var result = {};

    for (var key in object) {
      if (object.hasOwnProperty(key)) {
        var value = object[key];

        if (value !== undefined && value !== null) {
          result[key] = value;
        }
      }
    }

    return result;
  }

  var idPattern = /#([^)]+)\)?$/;
  exports.idPattern = idPattern;
},14923,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    objectBoundingBox: 0,
    userSpaceOnUse: 1
  };
  exports.default = _default;
},14926,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _extractTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _extractViewBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _units = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var Pattern = function (_Shape) {
    (0, _inherits2.default)(Pattern, _Shape);

    function Pattern() {
      (0, _classCallCheck2.default)(this, Pattern);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Pattern).apply(this, arguments));
    }

    (0, _createClass2.default)(Pattern, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var patternTransform = props.patternTransform,
            transform = props.transform,
            id = props.id,
            x = props.x,
            y = props.y,
            width = props.width,
            height = props.height,
            patternUnits = props.patternUnits,
            patternContentUnits = props.patternContentUnits,
            children = props.children,
            viewBox = props.viewBox,
            preserveAspectRatio = props.preserveAspectRatio;
        var matrix = (0, _extractTransform.default)(patternTransform || transform || props);
        return _react.default.createElement(RNSVGPattern, (0, _extends2.default)({
          ref: this.refMethod,
          name: id,
          x: x,
          y: y,
          width: width,
          height: height,
          matrix: matrix,
          patternTransform: matrix,
          patternUnits: _units.default[patternUnits] || 0,
          patternContentUnits: patternContentUnits ? _units.default[patternContentUnits] : 1
        }, (0, _extractViewBox.default)({
          viewBox: viewBox,
          preserveAspectRatio: preserveAspectRatio
        })), children);
      }
    }]);
    return Pattern;
  }(_Shape2.default);

  exports.default = Pattern;
  Pattern.displayName = 'Pattern';
  Pattern.defaultProps = {
    x: '0%',
    y: '0%',
    width: '100%',
    height: '100%'
  };
  var RNSVGPattern = (0, _reactNative.requireNativeComponent)('RNSVGPattern');
},14929,[14305,14344,14320,14323,14371,14377,14386,10297,10033,11554,11644,14926,11497]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _extractTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _extractProps = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[12]));

  var _units = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var Mask = function (_Shape) {
    (0, _inherits2.default)(Mask, _Shape);

    function Mask() {
      (0, _classCallCheck2.default)(this, Mask);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Mask).apply(this, arguments));
    }

    (0, _createClass2.default)(Mask, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var maskTransform = props.maskTransform,
            transform = props.transform,
            x = props.x,
            y = props.y,
            width = props.width,
            height = props.height,
            maskUnits = props.maskUnits,
            maskContentUnits = props.maskContentUnits,
            children = props.children;
        return _react.default.createElement(RNSVGMask, (0, _extends2.default)({
          ref: this.refMethod
        }, (0, _extractProps.default)((0, _objectSpread2.default)({}, (0, _extractProps.propsAndStyles)(props), {
          x: null,
          y: null
        }), this), {
          x: x,
          y: y,
          width: width,
          height: height,
          maskTransform: (0, _extractTransform.default)(maskTransform || transform || props),
          maskUnits: maskUnits !== undefined ? _units.default[maskUnits] : 0,
          maskContentUnits: maskContentUnits !== undefined ? _units.default[maskContentUnits] : 1
        }), children);
      }
    }]);
    return Mask;
  }(_Shape2.default);

  exports.default = Mask;
  Mask.displayName = 'Mask';
  Mask.defaultProps = {
    x: '0%',
    y: '0%',
    width: '100%',
    height: '100%'
  };
  var RNSVGMask = (0, _reactNative.requireNativeComponent)('RNSVGMask');
},14932,[14308,14305,14344,14314,14320,14323,14371,14377,14386,10297,10033,11554,11509,14926,11497]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object.keys(descriptor).forEach(function (key) {
      desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
      desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
      return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== undefined) {
      desc.value = desc.initializer ? desc.initializer.call(context) : undefined;
      desc.initializer = undefined;
    }

    if (desc.initializer === undefined) {
      Object.defineProperty(target, property, desc);
      desc = null;
    }

    return desc;
  }

  module.exports = _applyDecoratedDescriptor;
},22393,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayWithHoles = _$$_REQUIRE(_dependencyMap[0]);

  var iterableToArray = _$$_REQUIRE(_dependencyMap[1]);

  var nonIterableRest = _$$_REQUIRE(_dependencyMap[2]);

  function _toArray(arr) {
    return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();
  }

  module.exports = _toArray;
},22396,[14350,14365,14356]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   */
  'use strict';

  var base64 = _$$_REQUIRE(_dependencyMap[0]);

  var ieee754 = _$$_REQUIRE(_dependencyMap[1]);

  exports.Buffer = Buffer;
  exports.SlowBuffer = SlowBuffer;
  exports.INSPECT_MAX_BYTES = 50;
  var K_MAX_LENGTH = 0x7fffffff;
  exports.kMaxLength = K_MAX_LENGTH;
  Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();

  if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && true) {}

  function typedArraySupport() {
    try {
      var arr = new Uint8Array(1);
      arr.__proto__ = {
        __proto__: Uint8Array.prototype,
        foo: function foo() {
          return 42;
        }
      };
      return arr.foo() === 42;
    } catch (e) {
      return false;
    }
  }

  Object.defineProperty(Buffer.prototype, 'parent', {
    enumerable: true,
    get: function get() {
      if (!Buffer.isBuffer(this)) return undefined;
      return this.buffer;
    }
  });
  Object.defineProperty(Buffer.prototype, 'offset', {
    enumerable: true,
    get: function get() {
      if (!Buffer.isBuffer(this)) return undefined;
      return this.byteOffset;
    }
  });

  function createBuffer(length) {
    if (length > K_MAX_LENGTH) {
      throw new RangeError('The value "' + length + '" is invalid for option "size"');
    }

    var buf = new Uint8Array(length);
    buf.__proto__ = Buffer.prototype;
    return buf;
  }

  function Buffer(arg, encodingOrOffset, length) {
    if (typeof arg === 'number') {
      if (typeof encodingOrOffset === 'string') {
        throw new TypeError('The "string" argument must be of type string. Received type number');
      }

      return allocUnsafe(arg);
    }

    return from(arg, encodingOrOffset, length);
  }

  if (typeof Symbol !== 'undefined' && (typeof Symbol === "function" ? Symbol.species : "@@species") != null && Buffer[typeof Symbol === "function" ? Symbol.species : "@@species"] === Buffer) {
    Object.defineProperty(Buffer, typeof Symbol === "function" ? Symbol.species : "@@species", {
      value: null,
      configurable: true,
      enumerable: false,
      writable: false
    });
  }

  Buffer.poolSize = 8192;

  function from(value, encodingOrOffset, length) {
    if (typeof value === 'string') {
      return fromString(value, encodingOrOffset);
    }

    if (ArrayBuffer.isView(value)) {
      return fromArrayLike(value);
    }

    if (value == null) {
      throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
    }

    if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {
      return fromArrayBuffer(value, encodingOrOffset, length);
    }

    if (typeof value === 'number') {
      throw new TypeError('The "value" argument must not be of type number. Received type number');
    }

    var valueOf = value.valueOf && value.valueOf();

    if (valueOf != null && valueOf !== value) {
      return Buffer.from(valueOf, encodingOrOffset, length);
    }

    var b = fromObject(value);
    if (b) return b;

    if (typeof Symbol !== 'undefined' && (typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive") != null && typeof value[typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive"] === 'function') {
      return Buffer.from(value[typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive"]('string'), encodingOrOffset, length);
    }

    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
  }

  Buffer.from = function (value, encodingOrOffset, length) {
    return from(value, encodingOrOffset, length);
  };

  Buffer.prototype.__proto__ = Uint8Array.prototype;
  Buffer.__proto__ = Uint8Array;

  function assertSize(size) {
    if (typeof size !== 'number') {
      throw new TypeError('"size" argument must be of type number');
    } else if (size < 0) {
      throw new RangeError('The value "' + size + '" is invalid for option "size"');
    }
  }

  function alloc(size, fill, encoding) {
    assertSize(size);

    if (size <= 0) {
      return createBuffer(size);
    }

    if (fill !== undefined) {
      return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);
    }

    return createBuffer(size);
  }

  Buffer.alloc = function (size, fill, encoding) {
    return alloc(size, fill, encoding);
  };

  function allocUnsafe(size) {
    assertSize(size);
    return createBuffer(size < 0 ? 0 : checked(size) | 0);
  }

  Buffer.allocUnsafe = function (size) {
    return allocUnsafe(size);
  };

  Buffer.allocUnsafeSlow = function (size) {
    return allocUnsafe(size);
  };

  function fromString(string, encoding) {
    if (typeof encoding !== 'string' || encoding === '') {
      encoding = 'utf8';
    }

    if (!Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding);
    }

    var length = byteLength(string, encoding) | 0;
    var buf = createBuffer(length);
    var actual = buf.write(string, encoding);

    if (actual !== length) {
      buf = buf.slice(0, actual);
    }

    return buf;
  }

  function fromArrayLike(array) {
    var length = array.length < 0 ? 0 : checked(array.length) | 0;
    var buf = createBuffer(length);

    for (var i = 0; i < length; i += 1) {
      buf[i] = array[i] & 255;
    }

    return buf;
  }

  function fromArrayBuffer(array, byteOffset, length) {
    if (byteOffset < 0 || array.byteLength < byteOffset) {
      throw new RangeError('"offset" is outside of buffer bounds');
    }

    if (array.byteLength < byteOffset + (length || 0)) {
      throw new RangeError('"length" is outside of buffer bounds');
    }

    var buf;

    if (byteOffset === undefined && length === undefined) {
      buf = new Uint8Array(array);
    } else if (length === undefined) {
      buf = new Uint8Array(array, byteOffset);
    } else {
      buf = new Uint8Array(array, byteOffset, length);
    }

    buf.__proto__ = Buffer.prototype;
    return buf;
  }

  function fromObject(obj) {
    if (Buffer.isBuffer(obj)) {
      var len = checked(obj.length) | 0;
      var buf = createBuffer(len);

      if (buf.length === 0) {
        return buf;
      }

      obj.copy(buf, 0, 0, len);
      return buf;
    }

    if (obj.length !== undefined) {
      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
        return createBuffer(0);
      }

      return fromArrayLike(obj);
    }

    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
      return fromArrayLike(obj.data);
    }
  }

  function checked(length) {
    if (length >= K_MAX_LENGTH) {
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + ' bytes');
    }

    return length | 0;
  }

  function SlowBuffer(length) {
    if (+length != length) {
      length = 0;
    }

    return Buffer.alloc(+length);
  }

  Buffer.isBuffer = function isBuffer(b) {
    return b != null && b._isBuffer === true && b !== Buffer.prototype;
  };

  Buffer.compare = function compare(a, b) {
    if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);
    if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);

    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
      throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
    }

    if (a === b) return 0;
    var x = a.length;
    var y = b.length;

    for (var i = 0, len = Math.min(x, y); i < len; ++i) {
      if (a[i] !== b[i]) {
        x = a[i];
        y = b[i];
        break;
      }
    }

    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
  };

  Buffer.isEncoding = function isEncoding(encoding) {
    switch (String(encoding).toLowerCase()) {
      case 'hex':
      case 'utf8':
      case 'utf-8':
      case 'ascii':
      case 'latin1':
      case 'binary':
      case 'base64':
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return true;

      default:
        return false;
    }
  };

  Buffer.concat = function concat(list, length) {
    if (!Array.isArray(list)) {
      throw new TypeError('"list" argument must be an Array of Buffers');
    }

    if (list.length === 0) {
      return Buffer.alloc(0);
    }

    var i;

    if (length === undefined) {
      length = 0;

      for (i = 0; i < list.length; ++i) {
        length += list[i].length;
      }
    }

    var buffer = Buffer.allocUnsafe(length);
    var pos = 0;

    for (i = 0; i < list.length; ++i) {
      var buf = list[i];

      if (isInstance(buf, Uint8Array)) {
        buf = Buffer.from(buf);
      }

      if (!Buffer.isBuffer(buf)) {
        throw new TypeError('"list" argument must be an Array of Buffers');
      }

      buf.copy(buffer, pos);
      pos += buf.length;
    }

    return buffer;
  };

  function byteLength(string, encoding) {
    if (Buffer.isBuffer(string)) {
      return string.length;
    }

    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
      return string.byteLength;
    }

    if (typeof string !== 'string') {
      throw new TypeError("The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type " + typeof string);
    }

    var len = string.length;
    var mustMatch = arguments.length > 2 && arguments[2] === true;
    if (!mustMatch && len === 0) return 0;
    var loweredCase = false;

    for (;;) {
      switch (encoding) {
        case 'ascii':
        case 'latin1':
        case 'binary':
          return len;

        case 'utf8':
        case 'utf-8':
          return utf8ToBytes(string).length;

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return len * 2;

        case 'hex':
          return len >>> 1;

        case 'base64':
          return base64ToBytes(string).length;

        default:
          if (loweredCase) {
            return mustMatch ? -1 : utf8ToBytes(string).length;
          }

          encoding = ('' + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  }

  Buffer.byteLength = byteLength;

  function slowToString(encoding, start, end) {
    var loweredCase = false;

    if (start === undefined || start < 0) {
      start = 0;
    }

    if (start > this.length) {
      return '';
    }

    if (end === undefined || end > this.length) {
      end = this.length;
    }

    if (end <= 0) {
      return '';
    }

    end >>>= 0;
    start >>>= 0;

    if (end <= start) {
      return '';
    }

    if (!encoding) encoding = 'utf8';

    while (true) {
      switch (encoding) {
        case 'hex':
          return hexSlice(this, start, end);

        case 'utf8':
        case 'utf-8':
          return utf8Slice(this, start, end);

        case 'ascii':
          return asciiSlice(this, start, end);

        case 'latin1':
        case 'binary':
          return latin1Slice(this, start, end);

        case 'base64':
          return base64Slice(this, start, end);

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return utf16leSlice(this, start, end);

        default:
          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
          encoding = (encoding + '').toLowerCase();
          loweredCase = true;
      }
    }
  }

  Buffer.prototype._isBuffer = true;

  function swap(b, n, m) {
    var i = b[n];
    b[n] = b[m];
    b[m] = i;
  }

  Buffer.prototype.swap16 = function swap16() {
    var len = this.length;

    if (len % 2 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 16-bits');
    }

    for (var i = 0; i < len; i += 2) {
      swap(this, i, i + 1);
    }

    return this;
  };

  Buffer.prototype.swap32 = function swap32() {
    var len = this.length;

    if (len % 4 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 32-bits');
    }

    for (var i = 0; i < len; i += 4) {
      swap(this, i, i + 3);
      swap(this, i + 1, i + 2);
    }

    return this;
  };

  Buffer.prototype.swap64 = function swap64() {
    var len = this.length;

    if (len % 8 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 64-bits');
    }

    for (var i = 0; i < len; i += 8) {
      swap(this, i, i + 7);
      swap(this, i + 1, i + 6);
      swap(this, i + 2, i + 5);
      swap(this, i + 3, i + 4);
    }

    return this;
  };

  Buffer.prototype.toString = function toString() {
    var length = this.length;
    if (length === 0) return '';
    if (arguments.length === 0) return utf8Slice(this, 0, length);
    return slowToString.apply(this, arguments);
  };

  Buffer.prototype.toLocaleString = Buffer.prototype.toString;

  Buffer.prototype.equals = function equals(b) {
    if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');
    if (this === b) return true;
    return Buffer.compare(this, b) === 0;
  };

  Buffer.prototype.inspect = function inspect() {
    var str = '';
    var max = exports.INSPECT_MAX_BYTES;
    str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();
    if (this.length > max) str += ' ... ';
    return '<Buffer ' + str + '>';
  };

  Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
    if (isInstance(target, Uint8Array)) {
      target = Buffer.from(target, target.offset, target.byteLength);
    }

    if (!Buffer.isBuffer(target)) {
      throw new TypeError("The \"target\" argument must be one of type Buffer or Uint8Array. Received type " + typeof target);
    }

    if (start === undefined) {
      start = 0;
    }

    if (end === undefined) {
      end = target ? target.length : 0;
    }

    if (thisStart === undefined) {
      thisStart = 0;
    }

    if (thisEnd === undefined) {
      thisEnd = this.length;
    }

    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
      throw new RangeError('out of range index');
    }

    if (thisStart >= thisEnd && start >= end) {
      return 0;
    }

    if (thisStart >= thisEnd) {
      return -1;
    }

    if (start >= end) {
      return 1;
    }

    start >>>= 0;
    end >>>= 0;
    thisStart >>>= 0;
    thisEnd >>>= 0;
    if (this === target) return 0;
    var x = thisEnd - thisStart;
    var y = end - start;
    var len = Math.min(x, y);
    var thisCopy = this.slice(thisStart, thisEnd);
    var targetCopy = target.slice(start, end);

    for (var i = 0; i < len; ++i) {
      if (thisCopy[i] !== targetCopy[i]) {
        x = thisCopy[i];
        y = targetCopy[i];
        break;
      }
    }

    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
  };

  function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
    if (buffer.length === 0) return -1;

    if (typeof byteOffset === 'string') {
      encoding = byteOffset;
      byteOffset = 0;
    } else if (byteOffset > 0x7fffffff) {
      byteOffset = 0x7fffffff;
    } else if (byteOffset < -2147483648) {
      byteOffset = -2147483648;
    }

    byteOffset = +byteOffset;

    if (numberIsNaN(byteOffset)) {
      byteOffset = dir ? 0 : buffer.length - 1;
    }

    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;

    if (byteOffset >= buffer.length) {
      if (dir) return -1;else byteOffset = buffer.length - 1;
    } else if (byteOffset < 0) {
      if (dir) byteOffset = 0;else return -1;
    }

    if (typeof val === 'string') {
      val = Buffer.from(val, encoding);
    }

    if (Buffer.isBuffer(val)) {
      if (val.length === 0) {
        return -1;
      }

      return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
    } else if (typeof val === 'number') {
      val = val & 0xFF;

      if (typeof Uint8Array.prototype.indexOf === 'function') {
        if (dir) {
          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
        } else {
          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
        }
      }

      return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
    }

    throw new TypeError('val must be string, number or Buffer');
  }

  function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
    var indexSize = 1;
    var arrLength = arr.length;
    var valLength = val.length;

    if (encoding !== undefined) {
      encoding = String(encoding).toLowerCase();

      if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
        if (arr.length < 2 || val.length < 2) {
          return -1;
        }

        indexSize = 2;
        arrLength /= 2;
        valLength /= 2;
        byteOffset /= 2;
      }
    }

    function read(buf, i) {
      if (indexSize === 1) {
        return buf[i];
      } else {
        return buf.readUInt16BE(i * indexSize);
      }
    }

    var i;

    if (dir) {
      var foundIndex = -1;

      for (i = byteOffset; i < arrLength; i++) {
        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
          if (foundIndex === -1) foundIndex = i;
          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
        } else {
          if (foundIndex !== -1) i -= i - foundIndex;
          foundIndex = -1;
        }
      }
    } else {
      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;

      for (i = byteOffset; i >= 0; i--) {
        var found = true;

        for (var j = 0; j < valLength; j++) {
          if (read(arr, i + j) !== read(val, j)) {
            found = false;
            break;
          }
        }

        if (found) return i;
      }
    }

    return -1;
  }

  Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
    return this.indexOf(val, byteOffset, encoding) !== -1;
  };

  Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
  };

  Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
  };

  function hexWrite(buf, string, offset, length) {
    offset = Number(offset) || 0;
    var remaining = buf.length - offset;

    if (!length) {
      length = remaining;
    } else {
      length = Number(length);

      if (length > remaining) {
        length = remaining;
      }
    }

    var strLen = string.length;

    if (length > strLen / 2) {
      length = strLen / 2;
    }

    for (var i = 0; i < length; ++i) {
      var parsed = parseInt(string.substr(i * 2, 2), 16);
      if (numberIsNaN(parsed)) return i;
      buf[offset + i] = parsed;
    }

    return i;
  }

  function utf8Write(buf, string, offset, length) {
    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
  }

  function asciiWrite(buf, string, offset, length) {
    return blitBuffer(asciiToBytes(string), buf, offset, length);
  }

  function latin1Write(buf, string, offset, length) {
    return asciiWrite(buf, string, offset, length);
  }

  function base64Write(buf, string, offset, length) {
    return blitBuffer(base64ToBytes(string), buf, offset, length);
  }

  function ucs2Write(buf, string, offset, length) {
    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
  }

  Buffer.prototype.write = function write(string, offset, length, encoding) {
    if (offset === undefined) {
      encoding = 'utf8';
      length = this.length;
      offset = 0;
    } else if (length === undefined && typeof offset === 'string') {
      encoding = offset;
      length = this.length;
      offset = 0;
    } else if (isFinite(offset)) {
      offset = offset >>> 0;

      if (isFinite(length)) {
        length = length >>> 0;
        if (encoding === undefined) encoding = 'utf8';
      } else {
        encoding = length;
        length = undefined;
      }
    } else {
      throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
    }

    var remaining = this.length - offset;
    if (length === undefined || length > remaining) length = remaining;

    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
      throw new RangeError('Attempt to write outside buffer bounds');
    }

    if (!encoding) encoding = 'utf8';
    var loweredCase = false;

    for (;;) {
      switch (encoding) {
        case 'hex':
          return hexWrite(this, string, offset, length);

        case 'utf8':
        case 'utf-8':
          return utf8Write(this, string, offset, length);

        case 'ascii':
          return asciiWrite(this, string, offset, length);

        case 'latin1':
        case 'binary':
          return latin1Write(this, string, offset, length);

        case 'base64':
          return base64Write(this, string, offset, length);

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return ucs2Write(this, string, offset, length);

        default:
          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
          encoding = ('' + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  };

  Buffer.prototype.toJSON = function toJSON() {
    return {
      type: 'Buffer',
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };

  function base64Slice(buf, start, end) {
    if (start === 0 && end === buf.length) {
      return base64.fromByteArray(buf);
    } else {
      return base64.fromByteArray(buf.slice(start, end));
    }
  }

  function utf8Slice(buf, start, end) {
    end = Math.min(buf.length, end);
    var res = [];
    var i = start;

    while (i < end) {
      var firstByte = buf[i];
      var codePoint = null;
      var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;

      if (i + bytesPerSequence <= end) {
        var secondByte, thirdByte, fourthByte, tempCodePoint;

        switch (bytesPerSequence) {
          case 1:
            if (firstByte < 0x80) {
              codePoint = firstByte;
            }

            break;

          case 2:
            secondByte = buf[i + 1];

            if ((secondByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;

              if (tempCodePoint > 0x7F) {
                codePoint = tempCodePoint;
              }
            }

            break;

          case 3:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];

            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;

              if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
                codePoint = tempCodePoint;
              }
            }

            break;

          case 4:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];
            fourthByte = buf[i + 3];

            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;

              if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
                codePoint = tempCodePoint;
              }
            }

        }
      }

      if (codePoint === null) {
        codePoint = 0xFFFD;
        bytesPerSequence = 1;
      } else if (codePoint > 0xFFFF) {
        codePoint -= 0x10000;
        res.push(codePoint >>> 10 & 0x3FF | 0xD800);
        codePoint = 0xDC00 | codePoint & 0x3FF;
      }

      res.push(codePoint);
      i += bytesPerSequence;
    }

    return decodeCodePointsArray(res);
  }

  var MAX_ARGUMENTS_LENGTH = 0x1000;

  function decodeCodePointsArray(codePoints) {
    var len = codePoints.length;

    if (len <= MAX_ARGUMENTS_LENGTH) {
      return String.fromCharCode.apply(String, codePoints);
    }

    var res = '';
    var i = 0;

    while (i < len) {
      res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
    }

    return res;
  }

  function asciiSlice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);

    for (var i = start; i < end; ++i) {
      ret += String.fromCharCode(buf[i] & 0x7F);
    }

    return ret;
  }

  function latin1Slice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);

    for (var i = start; i < end; ++i) {
      ret += String.fromCharCode(buf[i]);
    }

    return ret;
  }

  function hexSlice(buf, start, end) {
    var len = buf.length;
    if (!start || start < 0) start = 0;
    if (!end || end < 0 || end > len) end = len;
    var out = '';

    for (var i = start; i < end; ++i) {
      out += toHex(buf[i]);
    }

    return out;
  }

  function utf16leSlice(buf, start, end) {
    var bytes = buf.slice(start, end);
    var res = '';

    for (var i = 0; i < bytes.length; i += 2) {
      res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
    }

    return res;
  }

  Buffer.prototype.slice = function slice(start, end) {
    var len = this.length;
    start = ~~start;
    end = end === undefined ? len : ~~end;

    if (start < 0) {
      start += len;
      if (start < 0) start = 0;
    } else if (start > len) {
      start = len;
    }

    if (end < 0) {
      end += len;
      if (end < 0) end = 0;
    } else if (end > len) {
      end = len;
    }

    if (end < start) end = start;
    var newBuf = this.subarray(start, end);
    newBuf.__proto__ = Buffer.prototype;
    return newBuf;
  };

  function checkOffset(offset, ext, length) {
    if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');
    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');
  }

  Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;

    while (++i < byteLength && (mul *= 0x100)) {
      val += this[offset + i] * mul;
    }

    return val;
  };

  Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;

    if (!noAssert) {
      checkOffset(offset, byteLength, this.length);
    }

    var val = this[offset + --byteLength];
    var mul = 1;

    while (byteLength > 0 && (mul *= 0x100)) {
      val += this[offset + --byteLength] * mul;
    }

    return val;
  };

  Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 1, this.length);
    return this[offset];
  };

  Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] | this[offset + 1] << 8;
  };

  Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] << 8 | this[offset + 1];
  };

  Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;
  };

  Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
  };

  Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;

    while (++i < byteLength && (mul *= 0x100)) {
      val += this[offset + i] * mul;
    }

    mul *= 0x80;
    if (val >= mul) val -= Math.pow(2, 8 * byteLength);
    return val;
  };

  Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    var i = byteLength;
    var mul = 1;
    var val = this[offset + --i];

    while (i > 0 && (mul *= 0x100)) {
      val += this[offset + --i] * mul;
    }

    mul *= 0x80;
    if (val >= mul) val -= Math.pow(2, 8 * byteLength);
    return val;
  };

  Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 1, this.length);
    if (!(this[offset] & 0x80)) return this[offset];
    return (0xff - this[offset] + 1) * -1;
  };

  Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    var val = this[offset] | this[offset + 1] << 8;
    return val & 0x8000 ? val | 0xFFFF0000 : val;
  };

  Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    var val = this[offset + 1] | this[offset] << 8;
    return val & 0x8000 ? val | 0xFFFF0000 : val;
  };

  Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
  };

  Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
  };

  Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, true, 23, 4);
  };

  Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, false, 23, 4);
  };

  Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, true, 52, 8);
  };

  Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, false, 52, 8);
  };

  function checkInt(buf, value, offset, ext, max, min) {
    if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
    if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
  }

  Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;

    if (!noAssert) {
      var maxBytes = Math.pow(2, 8 * byteLength) - 1;
      checkInt(this, value, offset, byteLength, maxBytes, 0);
    }

    var mul = 1;
    var i = 0;
    this[offset] = value & 0xFF;

    while (++i < byteLength && (mul *= 0x100)) {
      this[offset + i] = value / mul & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;

    if (!noAssert) {
      var maxBytes = Math.pow(2, 8 * byteLength) - 1;
      checkInt(this, value, offset, byteLength, maxBytes, 0);
    }

    var i = byteLength - 1;
    var mul = 1;
    this[offset + i] = value & 0xFF;

    while (--i >= 0 && (mul *= 0x100)) {
      this[offset + i] = value / mul & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
    this[offset] = value & 0xff;
    return offset + 1;
  };

  Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    return offset + 2;
  };

  Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
    return offset + 2;
  };

  Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
    this[offset + 3] = value >>> 24;
    this[offset + 2] = value >>> 16;
    this[offset + 1] = value >>> 8;
    this[offset] = value & 0xff;
    return offset + 4;
  };

  Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
    return offset + 4;
  };

  Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      var limit = Math.pow(2, 8 * byteLength - 1);
      checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }

    var i = 0;
    var mul = 1;
    var sub = 0;
    this[offset] = value & 0xFF;

    while (++i < byteLength && (mul *= 0x100)) {
      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
        sub = 1;
      }

      this[offset + i] = (value / mul >> 0) - sub & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      var limit = Math.pow(2, 8 * byteLength - 1);
      checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }

    var i = byteLength - 1;
    var mul = 1;
    var sub = 0;
    this[offset + i] = value & 0xFF;

    while (--i >= 0 && (mul *= 0x100)) {
      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
        sub = 1;
      }

      this[offset + i] = (value / mul >> 0) - sub & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -128);
    if (value < 0) value = 0xff + value + 1;
    this[offset] = value & 0xff;
    return offset + 1;
  };

  Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -32768);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    return offset + 2;
  };

  Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -32768);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
    return offset + 2;
  };

  Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    this[offset + 2] = value >>> 16;
    this[offset + 3] = value >>> 24;
    return offset + 4;
  };

  Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);
    if (value < 0) value = 0xffffffff + value + 1;
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
    return offset + 4;
  };

  function checkIEEE754(buf, value, offset, ext, max, min) {
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
    if (offset < 0) throw new RangeError('Index out of range');
  }

  function writeFloat(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
    }

    ieee754.write(buf, value, offset, littleEndian, 23, 4);
    return offset + 4;
  }

  Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
    return writeFloat(this, value, offset, true, noAssert);
  };

  Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
    return writeFloat(this, value, offset, false, noAssert);
  };

  function writeDouble(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157e+308);
    }

    ieee754.write(buf, value, offset, littleEndian, 52, 8);
    return offset + 8;
  }

  Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
    return writeDouble(this, value, offset, true, noAssert);
  };

  Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
    return writeDouble(this, value, offset, false, noAssert);
  };

  Buffer.prototype.copy = function copy(target, targetStart, start, end) {
    if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');
    if (!start) start = 0;
    if (!end && end !== 0) end = this.length;
    if (targetStart >= target.length) targetStart = target.length;
    if (!targetStart) targetStart = 0;
    if (end > 0 && end < start) end = start;
    if (end === start) return 0;
    if (target.length === 0 || this.length === 0) return 0;

    if (targetStart < 0) {
      throw new RangeError('targetStart out of bounds');
    }

    if (start < 0 || start >= this.length) throw new RangeError('Index out of range');
    if (end < 0) throw new RangeError('sourceEnd out of bounds');
    if (end > this.length) end = this.length;

    if (target.length - targetStart < end - start) {
      end = target.length - targetStart + start;
    }

    var len = end - start;

    if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
      this.copyWithin(targetStart, start, end);
    } else if (this === target && start < targetStart && targetStart < end) {
      for (var i = len - 1; i >= 0; --i) {
        target[i + targetStart] = this[i + start];
      }
    } else {
      Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);
    }

    return len;
  };

  Buffer.prototype.fill = function fill(val, start, end, encoding) {
    if (typeof val === 'string') {
      if (typeof start === 'string') {
        encoding = start;
        start = 0;
        end = this.length;
      } else if (typeof end === 'string') {
        encoding = end;
        end = this.length;
      }

      if (encoding !== undefined && typeof encoding !== 'string') {
        throw new TypeError('encoding must be a string');
      }

      if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
        throw new TypeError('Unknown encoding: ' + encoding);
      }

      if (val.length === 1) {
        var code = val.charCodeAt(0);

        if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {
          val = code;
        }
      }
    } else if (typeof val === 'number') {
      val = val & 255;
    }

    if (start < 0 || this.length < start || this.length < end) {
      throw new RangeError('Out of range index');
    }

    if (end <= start) {
      return this;
    }

    start = start >>> 0;
    end = end === undefined ? this.length : end >>> 0;
    if (!val) val = 0;
    var i;

    if (typeof val === 'number') {
      for (i = start; i < end; ++i) {
        this[i] = val;
      }
    } else {
      var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);
      var len = bytes.length;

      if (len === 0) {
        throw new TypeError('The value "' + val + '" is invalid for argument "value"');
      }

      for (i = 0; i < end - start; ++i) {
        this[i + start] = bytes[i % len];
      }
    }

    return this;
  };

  var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;

  function base64clean(str) {
    str = str.split('=')[0];
    str = str.trim().replace(INVALID_BASE64_RE, '');
    if (str.length < 2) return '';

    while (str.length % 4 !== 0) {
      str = str + '=';
    }

    return str;
  }

  function toHex(n) {
    if (n < 16) return '0' + n.toString(16);
    return n.toString(16);
  }

  function utf8ToBytes(string, units) {
    units = units || Infinity;
    var codePoint;
    var length = string.length;
    var leadSurrogate = null;
    var bytes = [];

    for (var i = 0; i < length; ++i) {
      codePoint = string.charCodeAt(i);

      if (codePoint > 0xD7FF && codePoint < 0xE000) {
        if (!leadSurrogate) {
          if (codePoint > 0xDBFF) {
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
            continue;
          } else if (i + 1 === length) {
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
            continue;
          }

          leadSurrogate = codePoint;
          continue;
        }

        if (codePoint < 0xDC00) {
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
          leadSurrogate = codePoint;
          continue;
        }

        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
      } else if (leadSurrogate) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
      }

      leadSurrogate = null;

      if (codePoint < 0x80) {
        if ((units -= 1) < 0) break;
        bytes.push(codePoint);
      } else if (codePoint < 0x800) {
        if ((units -= 2) < 0) break;
        bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
      } else if (codePoint < 0x10000) {
        if ((units -= 3) < 0) break;
        bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
      } else if (codePoint < 0x110000) {
        if ((units -= 4) < 0) break;
        bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
      } else {
        throw new Error('Invalid code point');
      }
    }

    return bytes;
  }

  function asciiToBytes(str) {
    var byteArray = [];

    for (var i = 0; i < str.length; ++i) {
      byteArray.push(str.charCodeAt(i) & 0xFF);
    }

    return byteArray;
  }

  function utf16leToBytes(str, units) {
    var c, hi, lo;
    var byteArray = [];

    for (var i = 0; i < str.length; ++i) {
      if ((units -= 2) < 0) break;
      c = str.charCodeAt(i);
      hi = c >> 8;
      lo = c % 256;
      byteArray.push(lo);
      byteArray.push(hi);
    }

    return byteArray;
  }

  function base64ToBytes(str) {
    return base64.toByteArray(base64clean(str));
  }

  function blitBuffer(src, dst, offset, length) {
    for (var i = 0; i < length; ++i) {
      if (i + offset >= dst.length || i >= src.length) break;
      dst[i + offset] = src[i];
    }

    return i;
  }

  function isInstance(obj, type) {
    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
  }

  function numberIsNaN(obj) {
    return obj !== obj;
  }
},22399,[10207,22402]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  exports.read = function (buffer, offset, isLE, mLen, nBytes) {
    var e, m;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var nBits = -7;
    var i = isLE ? nBytes - 1 : 0;
    var d = isLE ? -1 : 1;
    var s = buffer[offset + i];
    i += d;
    e = s & (1 << -nBits) - 1;
    s >>= -nBits;
    nBits += eLen;

    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

    m = e & (1 << -nBits) - 1;
    e >>= -nBits;
    nBits += mLen;

    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

    if (e === 0) {
      e = 1 - eBias;
    } else if (e === eMax) {
      return m ? NaN : (s ? -1 : 1) * Infinity;
    } else {
      m = m + Math.pow(2, mLen);
      e = e - eBias;
    }

    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
  };

  exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
    var e, m, c;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
    var i = isLE ? 0 : nBytes - 1;
    var d = isLE ? 1 : -1;
    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
    value = Math.abs(value);

    if (isNaN(value) || value === Infinity) {
      m = isNaN(value) ? 1 : 0;
      e = eMax;
    } else {
      e = Math.floor(Math.log(value) / Math.LN2);

      if (value * (c = Math.pow(2, -e)) < 1) {
        e--;
        c *= 2;
      }

      if (e + eBias >= 1) {
        value += rt / c;
      } else {
        value += rt * Math.pow(2, 1 - eBias);
      }

      if (value * c >= 2) {
        e++;
        c /= 2;
      }

      if (e + eBias >= eMax) {
        m = 0;
        e = eMax;
      } else if (e + eBias >= 1) {
        m = (value * c - 1) * Math.pow(2, mLen);
        e = e + eBias;
      } else {
        m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
        e = 0;
      }
    }

    for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

    e = e << mLen | m;
    eLen += mLen;

    for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

    buffer[offset + i - d] |= s * 128;
  };
},22402,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, '__esModule', {
    value: true
  });
  var UNKNOWN_FUNCTION = '<unknown>';

  function parse(stackString) {
    var lines = stackString.split('\n');
    return lines.reduce(function (stack, line) {
      var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);

      if (parseResult) {
        stack.push(parseResult);
      }

      return stack;
    }, []);
  }

  var chromeRe = /^\s*at (.*?) ?\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\/|[a-z]:\\|\\\\).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i;
  var chromeEvalRe = /\((\S*)(?::(\d+))(?::(\d+))\)/;

  function parseChrome(line) {
    var parts = chromeRe.exec(line);

    if (!parts) {
      return null;
    }

    var isNative = parts[2] && parts[2].indexOf('native') === 0;
    var isEval = parts[2] && parts[2].indexOf('eval') === 0;
    var submatch = chromeEvalRe.exec(parts[2]);

    if (isEval && submatch != null) {
      parts[2] = submatch[1];
      parts[3] = submatch[2];
      parts[4] = submatch[3];
    }

    return {
      file: !isNative ? parts[2] : null,
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: isNative ? [parts[2]] : [],
      lineNumber: parts[3] ? +parts[3] : null,
      column: parts[4] ? +parts[4] : null
    };
  }

  var winjsRe = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i;

  function parseWinjs(line) {
    var parts = winjsRe.exec(line);

    if (!parts) {
      return null;
    }

    return {
      file: parts[2],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: [],
      lineNumber: +parts[3],
      column: parts[4] ? +parts[4] : null
    };
  }

  var geckoRe = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\[native).*?|[^@]*bundle)(?::(\d+))?(?::(\d+))?\s*$/i;
  var geckoEvalRe = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i;

  function parseGecko(line) {
    var parts = geckoRe.exec(line);

    if (!parts) {
      return null;
    }

    var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;
    var submatch = geckoEvalRe.exec(parts[3]);

    if (isEval && submatch != null) {
      parts[3] = submatch[1];
      parts[4] = submatch[2];
      parts[5] = null;
    }

    return {
      file: parts[3],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: parts[2] ? parts[2].split(',') : [],
      lineNumber: parts[4] ? +parts[4] : null,
      column: parts[5] ? +parts[5] : null
    };
  }

  var javaScriptCoreRe = /^\s*(?:([^@]*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i;

  function parseJSC(line) {
    var parts = javaScriptCoreRe.exec(line);

    if (!parts) {
      return null;
    }

    return {
      file: parts[3],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: [],
      lineNumber: +parts[4],
      column: parts[5] ? +parts[5] : null
    };
  }

  var nodeRe = /^\s*at (?:((?:\[object object\])?[^\\/]+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i;

  function parseNode(line) {
    var parts = nodeRe.exec(line);

    if (!parts) {
      return null;
    }

    return {
      file: parts[2],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: [],
      lineNumber: +parts[3],
      column: parts[4] ? +parts[4] : null
    };
  }

  exports.parse = parse;
},22405,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = function invariant(condition, format, a, b, c, d, e, f) {
    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return args[argIndex++];
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1;
      throw error;
    }
  };

  module.exports = invariant;
},22408,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Radio", {
    enumerable: true,
    get: function get() {
      return _radio.Radio;
    }
  });
  Object.defineProperty(exports, "Switch", {
    enumerable: true,
    get: function get() {
      return _switch.Switch;
    }
  });
  Object.defineProperty(exports, "Checkbox", {
    enumerable: true,
    get: function get() {
      return _checkbox.Checkbox;
    }
  });
  Object.defineProperty(exports, "ImageButton", {
    enumerable: true,
    get: function get() {
      return _imageButton.ImageButton;
    }
  });
  Object.defineProperty(exports, "TitleBar", {
    enumerable: true,
    get: function get() {
      return _titleBar.TitleBar;
    }
  });
  Object.defineProperty(exports, "NavigationBar", {
    enumerable: true,
    get: function get() {
      return _navigationBar.NavigationBar;
    }
  });
  Object.defineProperty(exports, "Card", {
    enumerable: true,
    get: function get() {
      return _card.Card;
    }
  });
  Object.defineProperty(exports, "MHCard", {
    enumerable: true,
    get: function get() {
      return _card.MHCard;
    }
  });
  Object.defineProperty(exports, "ModeCard", {
    enumerable: true,
    get: function get() {
      return _card.ModeCard;
    }
  });
  Object.defineProperty(exports, "IndependentCard", {
    enumerable: true,
    get: function get() {
      return _card.IndependentCard;
    }
  });
  Object.defineProperty(exports, "NormalGear", {
    enumerable: true,
    get: function get() {
      return _gear.NormalGear;
    }
  });
  Object.defineProperty(exports, "SlideGear", {
    enumerable: true,
    get: function get() {
      return _gear.SlideGear;
    }
  });
  Object.defineProperty(exports, "DragGear", {
    enumerable: true,
    get: function get() {
      return _gear.DragGear;
    }
  });
  Object.defineProperty(exports, "Separator", {
    enumerable: true,
    get: function get() {
      return _separator.Separator;
    }
  });
  Object.defineProperty(exports, "StringSpinner", {
    enumerable: true,
    get: function get() {
      return _spinner.StringSpinner;
    }
  });
  Object.defineProperty(exports, "NumberSpinner", {
    enumerable: true,
    get: function get() {
      return _spinner.NumberSpinner;
    }
  });
  Object.defineProperty(exports, "MHDatePicker", {
    enumerable: true,
    get: function get() {
      return _mhDatePicker.MHDatePicker;
    }
  });
  Object.defineProperty(exports, "AbstractDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.AbstractDialog;
    }
  });
  Object.defineProperty(exports, "ActionSheet", {
    enumerable: true,
    get: function get() {
      return _dialog.ActionSheet;
    }
  });
  Object.defineProperty(exports, "ChoiceDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.ChoiceDialog;
    }
  });
  Object.defineProperty(exports, "InputDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.InputDialog;
    }
  });
  Object.defineProperty(exports, "LoadingDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.LoadingDialog;
    }
  });
  Object.defineProperty(exports, "MessageDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.MessageDialog;
    }
  });
  Object.defineProperty(exports, "PinCodeDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.PinCodeDialog;
    }
  });
  Object.defineProperty(exports, "ProgressDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.ProgressDialog;
    }
  });
  Object.defineProperty(exports, "ShareDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.ShareDialog;
    }
  });
  Object.defineProperty(exports, "ListItem", {
    enumerable: true,
    get: function get() {
      return _listItem.ListItem;
    }
  });
  Object.defineProperty(exports, "ChoiceItem", {
    enumerable: true,
    get: function get() {
      return _listItem.ChoiceItem;
    }
  });
  Object.defineProperty(exports, "ListItemWithSlider", {
    enumerable: true,
    get: function get() {
      return _listItem.ListItemWithSlider;
    }
  });
  Object.defineProperty(exports, "ListItemWithSwitch", {
    enumerable: true,
    get: function get() {
      return _listItem.ListItemWithSwitch;
    }
  });
  Object.defineProperty(exports, "FadeSlide", {
    enumerable: true,
    get: function get() {
      return _fadeSlide.FadeSlide;
    }
  });
  Object.defineProperty(exports, "BlankPage", {
    enumerable: true,
    get: function get() {
      return _blankPage.BlankPage;
    }
  });
  Object.defineProperty(exports, "TouchableView", {
    enumerable: true,
    get: function get() {
      return _touchableView.TouchableView;
    }
  });
  Object.defineProperty(exports, "Locale", {
    enumerable: true,
    get: function get() {
      return _locale.Locale;
    }
  });
  Object.defineProperty(exports, "ConfigProvider", {
    enumerable: true,
    get: function get() {
      return _configProvider.ConfigProvider;
    }
  });

  var _radio = _$$_REQUIRE(_dependencyMap[0]);

  var _switch = _$$_REQUIRE(_dependencyMap[1]);

  var _checkbox = _$$_REQUIRE(_dependencyMap[2]);

  var _imageButton = _$$_REQUIRE(_dependencyMap[3]);

  var _titleBar = _$$_REQUIRE(_dependencyMap[4]);

  var _navigationBar = _$$_REQUIRE(_dependencyMap[5]);

  var _card = _$$_REQUIRE(_dependencyMap[6]);

  var _gear = _$$_REQUIRE(_dependencyMap[7]);

  var _separator = _$$_REQUIRE(_dependencyMap[8]);

  var _spinner = _$$_REQUIRE(_dependencyMap[9]);

  var _mhDatePicker = _$$_REQUIRE(_dependencyMap[10]);

  var _dialog = _$$_REQUIRE(_dependencyMap[11]);

  var _listItem = _$$_REQUIRE(_dependencyMap[12]);

  var _fadeSlide = _$$_REQUIRE(_dependencyMap[13]);

  var _blankPage = _$$_REQUIRE(_dependencyMap[14]);

  var _touchableView = _$$_REQUIRE(_dependencyMap[15]);

  var _locale = _$$_REQUIRE(_dependencyMap[16]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[17]);
},22411,[22414,22447,22783,22792,22798,22855,22861,22879,22903,22909,22921,22993,23026,23047,23053,23062,22933,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Radio", {
    enumerable: true,
    get: function get() {
      return _Radio.default;
    }
  });

  var _Radio = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22414,[14305,22417]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var Radio = function (_Component) {
    (0, _inherits2.default)(Radio, _Component);

    function Radio(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Radio);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Radio).call(this, props));
      _this.colorSwitchCircle = new _DynamicColor.default('#ffffff', 'rgba(255,255,255,0.90)');

      _this.changeStatus = function (scaleTo, opacityTo) {
        var _this$state = _this.state,
            scale = _this$state.scale,
            opacity = _this$state.opacity;

        _reactNative.Animated.parallel([_reactNative.Animated.spring(scale, {
          toValue: scaleTo,
          bounciness: 15,
          speed: 9
        }), _reactNative.Animated.timing(opacity, {
          toValue: opacityTo,
          duration: 200
        })]).start();
      };

      _this.changeRadioCheck = function () {
        var _this$props = _this.props,
            changeCheck = _this$props.changeCheck,
            id = _this$props.id;
        changeCheck(id);
      };

      (0, _reportDecorator.referenceReport)('Radio');
      var isChecked = props.isChecked;
      var circleOpacity = isChecked ? 1 : 0;
      var circleScale = isChecked ? 0.5 : 0.4;
      _this.state = {
        scale: new _reactNative.Animated.Value(circleScale),
        opacity: new _reactNative.Animated.Value(circleOpacity)
      };
      return _this;
    }

    (0, _createClass2.default)(Radio, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var isChecked = nextProps.isChecked;

        if (isChecked) {
          this.changeStatus(0.5, 1);
        } else {
          this.changeStatus(0.4, 0);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme, _this$context$theme2;

        var colorScheme = this.context.colorScheme;
        var _this$props2 = this.props,
            smallCircleBg = _this$props2.smallCircleBg,
            isChecked = _this$props2.isChecked,
            bigCircleStyle = _this$props2.bigCircleStyle,
            disabled = _this$props2.disabled,
            accessible = _this$props2.accessible,
            accessibilityRole = _this$props2.accessibilityRole,
            label = _this$props2.label,
            accessibilityLabel = _this$props2.accessibilityLabel,
            accessibilityHint = _this$props2.accessibilityHint,
            accessibilityState = _this$props2.accessibilityState;
        var checkedBigCircleStyle = {
          borderColorChecked: '#32BAC0',
          backgroundColorChecked: '#32BAC0',
          borderColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBtnGrayNor,
          backgroundColor: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorBtnGrayNor
        };

        if (this.props.checkedBigCircleStyle) {
          checkedBigCircleStyle = this.props.checkedBigCircleStyle;
        }

        var _checkedBigCircleStyl = checkedBigCircleStyle,
            borderColorChecked = _checkedBigCircleStyl.borderColorChecked,
            backgroundColorChecked = _checkedBigCircleStyl.backgroundColorChecked,
            borderColor = _checkedBigCircleStyl.borderColor,
            backgroundColor = _checkedBigCircleStyl.backgroundColor;
        var _this$state2 = this.state,
            scale = _this$state2.scale,
            opacity = _this$state2.opacity;
        var colorSmallCircleBg = smallCircleBg || this.colorSwitchCircle.color(colorScheme);
        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          onPress: this.changeRadioCheck,
          disabled: disabled
        }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props, {
          accessibilityRole: accessibilityRole || _accessibilityHelper.AccessibilityRoles.radio,
          accessibilityLabel: accessibilityLabel || label,
          accessibilityState: accessibilityState || {
            disabled: !!disabled,
            checked: !!isChecked
          }
        }))), _react.default.createElement(_reactNative.View, {
          style: [styles.btn, bigCircleStyle, {
            borderColor: isChecked ? borderColorChecked : borderColor,
            backgroundColor: isChecked ? backgroundColorChecked : backgroundColor,
            opacity: disabled ? 0.3 : 1
          }]
        }, _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.smallCircle, bigCircleStyle, {
            borderWidth: 0,
            transform: [{
              scale: scale
            }],
            opacity: opacity,
            backgroundColor: colorSmallCircleBg
          }]
        })));
      }
    }]);
    return Radio;
  }(_react.Component);

  Radio.contextType = _configProvider.ConfigContext;
  Radio.defaultProps = {
    bigCircleStyle: {},
    smallCircleBg: '#FFFFFF',
    isChecked: false,
    changeCheck: function changeCheck() {},
    id: -1,
    disabled: false
  };
  Radio.propTypes = (0, _objectSpread2.default)({
    bigCircleStyle: _propTypes.default.object,
    checkedBigCircleStyle: _propTypes.default.object,
    smallCircleBg: _propTypes.default.string,
    isChecked: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    changeCheck: _propTypes.default.func,
    id: _propTypes.default.number
  }, _accessibilityHelper.AccessibilityPropTypes);

  var styles = _reactNative.StyleSheet.create({
    btn: {
      justifyContent: 'center',
      alignItems: 'center',
      borderStyle: 'solid',
      borderWidth: 0,
      borderRadius: 11,
      width: 22,
      height: 22
    },
    smallCircle: {
      borderRadius: 11,
      width: 22,
      height: 22
    }
  });

  var _default = Radio;
  exports.default = _default;
},22417,[14308,14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22420,22423,22426,22435]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getAccessibilityConfig = getAccessibilityConfig;
  exports.AccessibilityPropTypes = exports.AccessibilityRoles = undefined;

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var isAndroid = _reactNative.Platform.OS === 'android';
  var roles = ['none', 'button', 'link', 'search', 'image', 'keyboardkey', 'text', 'adjustable', 'imagebutton', 'header', 'summary', 'alert', 'checkbox', 'combobox', 'menu', 'menubar', 'menuitem', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'spinbutton', 'switch', 'tab', 'tablist', 'timer', 'toolbar'];
  var AccessibilityRoles = roles.reduce(function (total, role) {
    (0, _extends3.default)(total, (0, _defineProperty2.default)({}, role, role));
    return total;
  }, {});
  exports.AccessibilityRoles = AccessibilityRoles;
  var AccessibilityPropTypes = {
    accessible: _propTypes.default.bool,
    accessibilityRole: _propTypes.default.oneOf(roles),
    accessibilityLabel: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    accessibilityHint: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    accessibilityState: _propTypes.default.shape({
      disabled: _propTypes.default.bool,
      selected: _propTypes.default.bool,
      checked: _propTypes.default.bool,
      busy: _propTypes.default.bool,
      expanded: _propTypes.default.bool
    }),
    accessibilityValue: _propTypes.default.shape({
      min: _propTypes.default.number,
      max: _propTypes.default.number,
      now: _propTypes.default.number,
      text: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])
    })
  };
  exports.AccessibilityPropTypes = AccessibilityPropTypes;
  var elementWithoutText = ['image', 'imagebutton'];

  function getAccessibilityConfig(accessibilityConfig) {
    var accessible = accessibilityConfig.accessible,
        accessibilityRole = accessibilityConfig.accessibilityRole,
        accessibilityLabel = accessibilityConfig.accessibilityLabel,
        accessibilityHint = accessibilityConfig.accessibilityHint,
        accessibilityState = accessibilityConfig.accessibilityState,
        accessibilityValue = accessibilityConfig.accessibilityValue;
    var isAccessible = accessible !== false;
    var accessibility = {
      accessible: isAccessible
    };

    if (!accessibility.accessible) {
      if (isAndroid) {
        accessibility.focusable = false;
      }

      return accessibility;
    }

    accessibility.accessibilityRole = String(accessibilityRole || AccessibilityRoles.none);

    if (accessibilityLabel !== undefined && accessibilityLabel !== null) {
      accessibility.accessibilityLabel = String(accessibilityLabel);
    } else if (elementWithoutText.includes(accessibility.accessibilityRole)) {
      accessibility.accessibilityLabel = ' ';
    }

    if (accessibilityHint !== undefined && accessibilityHint !== null) {
      accessibility.accessibilityHint = String(accessibilityHint);
    }

    if (accessibilityState && typeof accessibilityState === 'object') {
      accessibility.accessibilityState = accessibilityState;
    }

    if (accessibilityValue && typeof accessibilityValue === 'object') {
      accessibility.accessibilityValue = accessibilityValue;
    }

    return accessibility;
  }
},22420,[14305,14317,14344,10033,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.withReport = withReport;
  exports.referenceReport = undefined;

  var _construct2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var MIOTPackage = _reactNative.NativeModules.MIOTPackage;

  function _doReport(moduleName, methodName, success, cost) {
    var errcode = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 200404;

    if (!MIOTPackage) {
      return;
    }

    var reportInfo = {
      module: moduleName,
      method: methodName,
      success: success,
      cost: cost,
      tip: '6.0.0.0.114',
      errcode: errcode
    };
    MIOTPackage.apiReport(reportInfo);
  }

  var referenceReport = function referenceReport(moduleName) {
    var methodName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'constructor';
    {
      _doReport(moduleName, methodName, true, 0);
    }
  };

  exports.referenceReport = referenceReport;

  function withReport(target, moduleName) {
    if (MIOTPackage && typeof Proxy === 'function') {
      return new Proxy(target, {
        construct: function construct(target, args) {
          referenceReport(moduleName);
          return (0, _construct2.default)(target, (0, _toConsumableArray2.default)(args));
        }
      });
    } else {
      return target;
    }
  }
},22423,[14305,14464,14359,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ConfigProvider = exports.ConfigConsumer = exports.ConfigContext = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _themes = _$$_REQUIRE(_dependencyMap[9]);

  var _mihome = _$$_REQUIRE(_dependencyMap[10]);

  var ConfigContext = (0, _react.createContext)({
    language: _mihome.language,
    theme: (0, _themes.getTheme)('default', _mihome.currentDarkMode),
    colorScheme: _mihome.currentDarkMode,
    environment: 'mihome',
    media: {
      screenType: 'phone'
    }
  });
  exports.ConfigContext = ConfigContext;
  var ConfigConsumer = ConfigContext.Consumer;
  exports.ConfigConsumer = ConfigConsumer;

  var ConfigProvider = function (_PureComponent) {
    (0, _inherits2.default)(ConfigProvider, _PureComponent);

    function ConfigProvider() {
      (0, _classCallCheck2.default)(this, ConfigProvider);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ConfigProvider).apply(this, arguments));
    }

    (0, _createClass2.default)(ConfigProvider, [{
      key: "render",
      value: function render() {
        var config = {
          language: this.props.language || 'zh',
          theme: (0, _themes.getTheme)('default', this.props.colorScheme || 'light'),
          colorScheme: this.props.colorScheme || 'light',
          environment: this.props.environment || 'native',
          media: (0, _objectSpread2.default)({
            screenType: 'phone'
          }, this.props.media)
        };
        return _react.default.createElement(ConfigContext.Provider, {
          value: (0, _objectSpread2.default)({}, config)
        }, this.props.children);
      }
    }]);
    return ConfigProvider;
  }(_react.PureComponent);

  exports.ConfigProvider = ConfigProvider;
},22426,[14308,14305,14314,14320,14323,14371,14377,14386,10297,22429,22444]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getTheme = getTheme;
  Object.defineProperty(exports, "ITheme", {
    enumerable: true,
    get: function get() {
      return _ITheme.default;
    }
  });

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _ITheme = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var themes = {
    default: _default.default
  };

  function getTheme() {
    var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';
    var colorScheme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'light';
    var result = {};
    Object.entries(themes[theme]).forEach(function (_ref) {
      var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
          key = _ref2[0],
          value = _ref2[1];

      result[key] = value[colorScheme];
    });
    return result;
  }
},22429,[14305,14347,22432,22441]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var defaultTheme = {
    colorPrimary: new _DynamicColor.default('#32bac0', '#25a9af'),
    colorPrimaryFocus: new _DynamicColor.default('#25a9af', '#158b90'),
    colorPrimaryDisabled: new _DynamicColor.default('rgba(50,186,192,0.3)', 'rgba(37,169,175, 0.3)'),
    colorWarn: new _DynamicColor.default('#f43f31', '#d92719'),
    colorWarnFocus: new _DynamicColor.default('#d53c32', '#b62920'),
    colorWarnDisabled: new _DynamicColor.default('rgba(244,63,49,0.3)', '#b62920'),
    colorBlack: new _DynamicColor.default('#000000', '#e6e6e6'),
    colorGrayHeavier: new _DynamicColor.default('#333333', '#cccccc'),
    colorGrayHeavy: new _DynamicColor.default('#4c4c4c', '#b3b3b3'),
    colorGrayNormal: new _DynamicColor.default('#666666', '#999999'),
    colorGrayLight: new _DynamicColor.default('#7f7f7f', '#808080'),
    colorGrayLighter: new _DynamicColor.default('#999999', '#666666'),
    colorWhite: new _DynamicColor.default('#ffffff', '#000000'),
    colorWhite2: new _DynamicColor.default('#ffffff', 'rgba(255,255,255,0.9)'),
    colorBlack1: new _DynamicColor.default('#000000', '#ffffff'),
    colorToast: new _DynamicColor.default('#4c4c4c', 'rgba(255,255,255,0.7)'),
    colorPlaceHolder: new _DynamicColor.default('rgba(0,0,0,0.3)', 'rgba(255,255,255,0.9)'),
    colorBtnGreenNor: new _DynamicColor.default('#32bac0', '#25a9af'),
    colorBtnGreenPres: new _DynamicColor.default('#25a9af', '#158b90'),
    colorBtnGrayNor: new _DynamicColor.default('#f5f5f5', '#333333'),
    colorBtnGrayPres: new _DynamicColor.default('#e2e2e2', '#666666'),
    colorBtnGreenOpaNor: new _DynamicColor.default('rgba(50,186,192,0.1)', 'rgba(37,169,175,0.20)'),
    colorBtnGreenOpaPres: new _DynamicColor.default('rgba(50,186,192,0.3)', 'rgba(50,186,192,0.3)'),
    colorBackground: new _DynamicColor.default('#f7f7f7', '#000000'),
    colorOverLayerBlack: new _DynamicColor.default('rgba(0,0,0,0.4)', 'rgba(0,0,0,0.6)'),
    colorSeparator: new _DynamicColor.default('#e5e5e5', '#262626'),
    colorForeground: new _DynamicColor.default('#ffffff', '#1a1a1a'),
    colorSlideLeft: new _DynamicColor.default('#D9D9D9', 'rgba(255,255,255,0.08)'),
    colorInputBackground: new _DynamicColor.default('#F5F5F5', 'rgba(255,255,255,0.10)'),
    colorInputBorder: new _DynamicColor.default('rgba(244,63,49,0.2)', 'rgba(217,39,25,0.2)'),
    colorGearBackground: new _DynamicColor.default('#EDEEEF', 'rgba(255,255,255,0.20)'),
    iconViewPress: new _DynamicColor.default('#B0B6B8', '#52595B'),
    iconViewNor: new _DynamicColor.default('#F7F7F7', 'rgba(255,255,255,0.20)'),
    listUnderlayColor: new _DynamicColor.default('#ECECEC', 'rgba(255,255,255,0.20)'),
    barChartItem: new _DynamicColor.default('#FFE4BD', 'rgba(230,142,16,0.3)'),
    barChartItemSelected: new _DynamicColor.default('#FFA626', '#E68E10')
  };
  var _default = defaultTheme;
  exports.default = _default;
},22432,[14305,22435]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _check = _$$_REQUIRE(_dependencyMap[3]);

  var DynamicColor = function () {
    function DynamicColor(light, dark) {
      (0, _classCallCheck2.default)(this, DynamicColor);

      if (_check.isMiHome) {
        this.light = "xm" + light;
        this.dark = "xm" + dark;
      } else {
        this.light = light;
        this.dark = dark;
      }
    }

    (0, _createClass2.default)(DynamicColor, [{
      key: "color",
      value: function color() {
        var colorScheme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';
        return colorScheme === 'light' ? this.light : this.dark;
      }
    }]);
    return DynamicColor;
  }();

  var _default = DynamicColor;
  exports.default = _default;
},22435,[14305,14320,14323,22438]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.isAndroid = exports.isIOS = exports.isMiHome = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var MIOTPackage = _reactNative.NativeModules.MIOTPackage;
  var isMiHome = !!MIOTPackage;
  exports.isMiHome = isMiHome;
  var isIOS = _reactNative.Platform.OS === 'ios';
  exports.isIOS = isIOS;
  var isAndroid = _reactNative.Platform.OS === 'android';
  exports.isAndroid = isAndroid;
},22438,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  ;
},22441,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.language = exports.currentDarkMode = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var MIOTHost = _reactNative.Platform.OS === 'ios' ? _reactNative.NativeModules.MHPluginSDK : _reactNative.NativeModules.MIOTHost;
  var MIOTService = _reactNative.NativeModules.MIOTService;
  var LanguageNameMap = _reactNative.Platform.OS === 'ios' ? {
    zh: ['zh_CN', 'zh-CN', 'zh-Hans'],
    zh_tw: ['zh_TW', 'zh-TW', 'zh-Hant'],
    zh_hk: ['zh_HK', 'zh-HK', 'zh-Hant-HK'],
    zh_bo: /bo($|_)/,
    en: /^en($|_)/,
    es: /^es($|_)/,
    ko: /^ko($|_)/,
    ru: /^ru($|_)/,
    it: /^it($|_)/,
    fr: /^fr($|_)/,
    de: /^de($|_)/,
    id: /^id($|_)/,
    pl: /^pl($|_)/,
    vi: /^vi($|_)/,
    ja: /^ja($|_)/,
    th: /^th($|_)/,
    pt: /^pt($|_)/,
    nl: /^nl($|_)/,
    ar: /^ar($|_)/,
    tr: /^tr($|_)/
  } : {
    zh: ['zh', 'zh_CN'],
    zh_tw: 'zh_TW',
    zh_hk: 'zh_HK',
    zh_bo: /bo($|_)/,
    en: /^en($|_)/,
    es: /^es($|_)/,
    ko: /^ko($|_)/,
    ru: /^ru($|_)/,
    it: /^it($|_)/,
    fr: /^fr($|_)/,
    de: /^de($|_)/,
    id: /(^|_)id($|_)/,
    pl: /^pl($|_)/,
    vi: /^vi($|_)/,
    ja: /^ja($|_)/,
    th: /^th($|_)/,
    pt: /^pt($|_)/,
    nl: /^nl($|_)/,
    ar: /^ar($|_)/,
    tr: /^tr($|_)/
  };

  function getStandardLanguageName(name, nameMap) {
    if (!name) return 'en';

    var std = function std(n) {
      return n.toLowerCase().replace(/-/g, '_');
    };

    name = std(name);
    var ns = Object.keys(nameMap);

    for (var i = 0; i < ns.length; i++) {
      var lang = ns[i];
      var nm = nameMap[lang];
      if (!nm) continue;

      if (Array.isArray(nm)) {
        for (var j = 0; j < nm.length; j++) {
          if (typeof nm[j].test === 'function') {
            if (nm[j].test(name)) return lang;
          } else if (name == std(nm[j])) {
            return lang;
          }
        }
      } else if (typeof nm === 'function') {
        if (nm(name)) return lang;
      } else if (typeof nm.test === 'function') {
        if (nm.test(name)) return lang;
      } else if (name == std(nm)) {
        return lang;
      }
    }

    return 'en';
  }

  function getSystemLanguage() {
    return getStandardLanguageName((MIOTHost == null ? undefined : MIOTHost.language) || 'en', LanguageNameMap);
  }

  var currentDarkMode = (MIOTService == null ? undefined : MIOTService.currentDarkMode) || 'light';
  exports.currentDarkMode = currentDarkMode;
  var language = getSystemLanguage();
  exports.language = language;
},22444,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Switch", {
    enumerable: true,
    get: function get() {
      return _Switch.default;
    }
  });

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22447,[14305,22450]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[11]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[14]);

  var OFF_COLOR = '#f0f0f0';
  var BORDER_COLOR = 'rgba(0,0,0,0.1)';
  var BACK_WIDTH = 44;
  var BACK_HEIGHT = 24;
  var BORDER_WIDTH = _reactNative.StyleSheet.hairlineWidth;
  var ratio = 4;
  var minMargin = 2.5;

  var Switch = function (_React$Component) {
    (0, _inherits2.default)(Switch, _React$Component);

    function Switch(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Switch);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Switch).call(this, props));
      _this.colorSwitchCircle = new _DynamicColor.default('#ffffff', '#ebebeb');
      _this.colorSwitchOff = new _DynamicColor.default('#E5E5E5', '#333333');
      (0, _reportDecorator.referenceReport)('Switch');
      _this.state = {
        value: _this.props.value
      };
      var _this$props$style = _this.props.style,
          width = _this$props$style.width,
          height = _this$props$style.height;
      var backWidth = width || BACK_WIDTH;
      var backHeight = height || BACK_HEIGHT;
      var margin = backHeight / ratio < minMargin ? minMargin : Math.round(backHeight / ratio);
      var circleSize = backHeight / 2;
      _this.offsetXMax = backWidth - backHeight;
      var toValue = _this.props.value ? _this.offsetXMax : 0;
      _this.offsetX = new _reactNative.Animated.Value(toValue);
      _this.backStyle = {
        width: backWidth,
        height: backHeight,
        borderRadius: backHeight / 2
      };
      _this.circleStyle = {
        margin: margin,
        width: circleSize,
        height: circleSize,
        borderRadius: circleSize / 2
      };
      return _this;
    }

    (0, _createClass2.default)(Switch, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.value !== this.state.value) {
          this.setState({
            value: newProps.value
          }, this.animated);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$context = this.context,
            theme = _this$context.theme,
            colorScheme = _this$context.colorScheme;
        var onTintColor = this.props.onTintColor ? this.props.onTintColor : theme.colorPrimary;
        var tintColor = this.props.tintColor ? this.props.tintColor : this.colorSwitchOff.color(colorScheme);
        var backgroundColor = this.state.value ? onTintColor : tintColor;
        var opacity = this.props.disabled ? 0.3 : 1;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            opacity: opacity
          }]
        }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          style: [styles.back, this.backStyle, {
            backgroundColor: backgroundColor
          }],
          disabled: this.props.disabled,
          activeOpacity: 0.8,
          onPress: function onPress() {
            return _this2._onValueChange();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props, {
          accessibilityRole: this.props.accessibilityRole || _accessibilityHelper.AccessibilityRoles.switch,
          accessibilityState: this.props.accessibilityState || {
            disabled: this.props.disabled,
            checked: !!this.state.value
          }
        }))), this.context.colorScheme === 'dark' ? _react.default.createElement(_reactNative.Animated.Image, {
          style: [styles.circle, this.circleStyle, {
            backgroundColor: this.colorSwitchCircle.color(colorScheme),
            transform: [{
              translateX: this.offsetX
            }]
          }]
        }) : _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.circle, this.circleStyle, {
            backgroundColor: this.colorSwitchCircle.color(colorScheme),
            transform: [{
              translateX: this.offsetX
            }]
          }]
        })));
      }
    }, {
      key: "animated",
      value: function animated() {
        var toValue = this.state.value ? this.offsetXMax : 0;

        _reactNative.Animated.spring(this.offsetX, {
          toValue: toValue,
          bounciness: 9,
          speed: 9
        }).start();
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange() {
        var _this3 = this;

        var value = !this.state.value;
        this.setState({
          value: value
        }, function () {
          _this3.animated();

          if (typeof _this3.props.onValueChange === 'function') {
            _this3.props.onValueChange(value);
          }
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.animated();
      }
    }]);
    return Switch;
  }(_react.default.Component);

  Switch.contextType = _configProvider.ConfigContext;
  Switch.propTypes = (0, _objectSpread2.default)({
    value: _propTypes.default.bool.isRequired,
    style: _propTypes.default.object,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    disabled: _propTypes.default.bool,
    onValueChange: _propTypes.default.func.isRequired
  }, _accessibilityHelper.AccessibilityPropTypes);
  Switch.defaultProps = {
    value: false,
    style: {},
    disabled: false
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    back: {
      justifyContent: 'center'
    },
    circle: {
      position: 'absolute',
      backgroundColor: '#fff'
    }
  });

  var _default = Switch;
  exports.default = _default;
},22450,[14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22426,22435,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Images", {
    enumerable: true,
    get: function get() {
      return _Images.default;
    }
  });
  Object.defineProperty(exports, "Styles", {
    enumerable: true,
    get: function get() {
      return _Styles.default;
    }
  });

  var _Images = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _Styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
},22453,[14305,22456,22780]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    common: {
      right_arrow: _$$_REQUIRE(_dependencyMap[0]),
      close: _$$_REQUIRE(_dependencyMap[1]),
      mihome: _$$_REQUIRE(_dependencyMap[2]),
      selectIcon: _$$_REQUIRE(_dependencyMap[3]),
      tick: _$$_REQUIRE(_dependencyMap[4]),
      select: _$$_REQUIRE(_dependencyMap[5])
    },
    chart: {
      dark: {
        empty: _$$_REQUIRE(_dependencyMap[6])
      },
      light: {
        empty: _$$_REQUIRE(_dependencyMap[7])
      }
    },
    navigation: {
      dot: _$$_REQUIRE(_dependencyMap[8]),
      dark: {
        add: {
          normal: _$$_REQUIRE(_dependencyMap[9]),
          press: _$$_REQUIRE(_dependencyMap[10]),
          disable: _$$_REQUIRE(_dependencyMap[11])
        },
        back: {
          normal: _$$_REQUIRE(_dependencyMap[12]),
          press: _$$_REQUIRE(_dependencyMap[13]),
          disable: _$$_REQUIRE(_dependencyMap[14])
        },
        close: {
          normal: _$$_REQUIRE(_dependencyMap[15]),
          press: _$$_REQUIRE(_dependencyMap[16]),
          disable: _$$_REQUIRE(_dependencyMap[17])
        },
        collect: {
          normal: _$$_REQUIRE(_dependencyMap[18]),
          press: _$$_REQUIRE(_dependencyMap[19]),
          disable: _$$_REQUIRE(_dependencyMap[20])
        },
        complete: {
          normal: _$$_REQUIRE(_dependencyMap[21]),
          press: _$$_REQUIRE(_dependencyMap[22]),
          disable: _$$_REQUIRE(_dependencyMap[23])
        },
        delete: {
          normal: _$$_REQUIRE(_dependencyMap[24]),
          press: _$$_REQUIRE(_dependencyMap[25]),
          disable: _$$_REQUIRE(_dependencyMap[26])
        },
        detail: {
          normal: _$$_REQUIRE(_dependencyMap[27]),
          press: _$$_REQUIRE(_dependencyMap[28]),
          disable: _$$_REQUIRE(_dependencyMap[29])
        },
        more: {
          normal: _$$_REQUIRE(_dependencyMap[30]),
          press: _$$_REQUIRE(_dependencyMap[31]),
          disable: _$$_REQUIRE(_dependencyMap[32])
        },
        next: {
          normal: _$$_REQUIRE(_dependencyMap[33]),
          press: _$$_REQUIRE(_dependencyMap[34]),
          disable: _$$_REQUIRE(_dependencyMap[35])
        },
        profile: {
          normal: _$$_REQUIRE(_dependencyMap[36]),
          press: _$$_REQUIRE(_dependencyMap[37]),
          disable: _$$_REQUIRE(_dependencyMap[38])
        },
        qr: {
          normal: _$$_REQUIRE(_dependencyMap[39]),
          press: _$$_REQUIRE(_dependencyMap[40]),
          disable: _$$_REQUIRE(_dependencyMap[41])
        },
        search: {
          normal: _$$_REQUIRE(_dependencyMap[42]),
          press: _$$_REQUIRE(_dependencyMap[43]),
          disable: _$$_REQUIRE(_dependencyMap[44])
        },
        select_all: {
          normal: _$$_REQUIRE(_dependencyMap[45]),
          press: _$$_REQUIRE(_dependencyMap[46]),
          disable: _$$_REQUIRE(_dependencyMap[47])
        },
        selected_all: {
          normal: _$$_REQUIRE(_dependencyMap[48]),
          press: _$$_REQUIRE(_dependencyMap[49]),
          disable: _$$_REQUIRE(_dependencyMap[50])
        },
        setting: {
          normal: _$$_REQUIRE(_dependencyMap[51]),
          press: _$$_REQUIRE(_dependencyMap[52]),
          disable: _$$_REQUIRE(_dependencyMap[53])
        },
        share: {
          normal: _$$_REQUIRE(_dependencyMap[54]),
          press: _$$_REQUIRE(_dependencyMap[55]),
          disable: _$$_REQUIRE(_dependencyMap[56])
        },
        edit: {
          normal: _$$_REQUIRE(_dependencyMap[57]),
          press: _$$_REQUIRE(_dependencyMap[58]),
          disable: _$$_REQUIRE(_dependencyMap[59])
        },
        record: {
          normal: _$$_REQUIRE(_dependencyMap[60]),
          press: _$$_REQUIRE(_dependencyMap[61]),
          disable: _$$_REQUIRE(_dependencyMap[62])
        },
        orientation: {
          normal: _$$_REQUIRE(_dependencyMap[63]),
          press: _$$_REQUIRE(_dependencyMap[64]),
          disable: _$$_REQUIRE(_dependencyMap[65])
        },
        save: {
          normal: _$$_REQUIRE(_dependencyMap[66]),
          press: _$$_REQUIRE(_dependencyMap[67]),
          disable: _$$_REQUIRE(_dependencyMap[68])
        }
      },
      light: {
        add: {
          normal: _$$_REQUIRE(_dependencyMap[69]),
          press: _$$_REQUIRE(_dependencyMap[70]),
          disable: _$$_REQUIRE(_dependencyMap[71])
        },
        back: {
          normal: _$$_REQUIRE(_dependencyMap[72]),
          press: _$$_REQUIRE(_dependencyMap[73]),
          disable: _$$_REQUIRE(_dependencyMap[74])
        },
        close: {
          normal: _$$_REQUIRE(_dependencyMap[75]),
          press: _$$_REQUIRE(_dependencyMap[76]),
          disable: _$$_REQUIRE(_dependencyMap[77])
        },
        collect: {
          normal: _$$_REQUIRE(_dependencyMap[78]),
          press: _$$_REQUIRE(_dependencyMap[79]),
          disable: _$$_REQUIRE(_dependencyMap[80])
        },
        complete: {
          normal: _$$_REQUIRE(_dependencyMap[81]),
          press: _$$_REQUIRE(_dependencyMap[82]),
          disable: _$$_REQUIRE(_dependencyMap[83])
        },
        delete: {
          normal: _$$_REQUIRE(_dependencyMap[84]),
          press: _$$_REQUIRE(_dependencyMap[85]),
          disable: _$$_REQUIRE(_dependencyMap[86])
        },
        detail: {
          normal: _$$_REQUIRE(_dependencyMap[87]),
          press: _$$_REQUIRE(_dependencyMap[88]),
          disable: _$$_REQUIRE(_dependencyMap[89])
        },
        more: {
          normal: _$$_REQUIRE(_dependencyMap[90]),
          press: _$$_REQUIRE(_dependencyMap[91]),
          disable: _$$_REQUIRE(_dependencyMap[92])
        },
        next: {
          normal: _$$_REQUIRE(_dependencyMap[93]),
          press: _$$_REQUIRE(_dependencyMap[94]),
          disable: _$$_REQUIRE(_dependencyMap[95])
        },
        profile: {
          normal: _$$_REQUIRE(_dependencyMap[96]),
          press: _$$_REQUIRE(_dependencyMap[97]),
          disable: _$$_REQUIRE(_dependencyMap[98])
        },
        qr: {
          normal: _$$_REQUIRE(_dependencyMap[99]),
          press: _$$_REQUIRE(_dependencyMap[100]),
          disable: _$$_REQUIRE(_dependencyMap[101])
        },
        search: {
          normal: _$$_REQUIRE(_dependencyMap[102]),
          press: _$$_REQUIRE(_dependencyMap[103]),
          disable: _$$_REQUIRE(_dependencyMap[104])
        },
        select_all: {
          normal: _$$_REQUIRE(_dependencyMap[105]),
          press: _$$_REQUIRE(_dependencyMap[106]),
          disable: _$$_REQUIRE(_dependencyMap[107])
        },
        selected_all: {
          normal: _$$_REQUIRE(_dependencyMap[108]),
          press: _$$_REQUIRE(_dependencyMap[109]),
          disable: _$$_REQUIRE(_dependencyMap[110])
        },
        setting: {
          normal: _$$_REQUIRE(_dependencyMap[111]),
          press: _$$_REQUIRE(_dependencyMap[112]),
          disable: _$$_REQUIRE(_dependencyMap[113])
        },
        share: {
          normal: _$$_REQUIRE(_dependencyMap[114]),
          press: _$$_REQUIRE(_dependencyMap[115]),
          disable: _$$_REQUIRE(_dependencyMap[116])
        },
        edit: {
          normal: _$$_REQUIRE(_dependencyMap[117]),
          press: _$$_REQUIRE(_dependencyMap[118]),
          disable: _$$_REQUIRE(_dependencyMap[119])
        },
        record: {
          normal: _$$_REQUIRE(_dependencyMap[120]),
          press: _$$_REQUIRE(_dependencyMap[121]),
          disable: _$$_REQUIRE(_dependencyMap[122])
        },
        orientation: {
          normal: _$$_REQUIRE(_dependencyMap[123]),
          press: _$$_REQUIRE(_dependencyMap[124]),
          disable: _$$_REQUIRE(_dependencyMap[125])
        },
        save: {
          normal: _$$_REQUIRE(_dependencyMap[126]),
          press: _$$_REQUIRE(_dependencyMap[127]),
          disable: _$$_REQUIRE(_dependencyMap[128])
        }
      }
    },
    loading: {
      dark: {
        empty: _$$_REQUIRE(_dependencyMap[129])
      },
      light: {
        empty: _$$_REQUIRE(_dependencyMap[130])
      }
    },
    sort: {
      light: {
        normal: _$$_REQUIRE(_dependencyMap[131]),
        press: _$$_REQUIRE(_dependencyMap[132])
      },
      dark: {
        normal: _$$_REQUIRE(_dependencyMap[133]),
        press: _$$_REQUIRE(_dependencyMap[134])
      }
    }
  };
  exports.default = _default;
},22456,[22459,22462,22465,22468,23305,23308,23311,23314,22471,22474,22477,22480,22483,22486,22489,22492,22495,22498,22501,22504,22507,22510,22513,22516,22519,22522,22525,22528,22531,22534,22537,22540,22543,22546,22549,22552,22555,22558,22561,22564,22567,22570,22573,22576,22579,22582,22585,22588,22591,22594,22597,22600,22603,22606,22609,22612,22615,22618,22621,22624,23188,23191,23194,23251,23254,23257,23260,23263,23266,22627,22630,22633,22636,22639,22642,22645,22648,22651,22654,22657,22660,22663,22666,22669,22672,22675,22678,22681,22684,22687,22690,22693,22696,22699,22702,22705,22708,22711,22714,22717,22720,22723,22726,22729,22732,22735,22738,22741,22744,22747,22750,22753,22756,22759,22762,22765,22768,22771,22774,22777,23197,23200,23203,23269,23272,23275,23278,23281,23284,23206,23209,23287,23290,23293,23296]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 24,
    "height": 24,
    "scales": [1, 1.5, 2, 3, 4],
    "hash": "429182adb27a0752e9ed335169b6e7cd",
    "name": "right_arrow",
    "type": "png"
  });
},22459,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 20,
    "height": 20,
    "scales": [2, 3],
    "hash": "513efe08c931e5bdfb2d0fade0a99585",
    "name": "close",
    "type": "png"
  });
},22462,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 170,
    "height": 170,
    "scales": [1],
    "hash": "c749a1206e5e8038ce207871a9d3efdf",
    "name": "mihome",
    "type": "png"
  });
},22465,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 6,
    "height": 10,
    "scales": [2, 3],
    "hash": "0fa399f5d3ff3ccfa6349b4fadce3ec2",
    "name": "select_icon",
    "type": "png"
  });
},22468,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d64f463ebe229908246c9458f507dbf3",
    "name": "dot",
    "type": "png"
  });
},22471,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9bd423b230418efeb7f166e7d58ef6ba",
    "name": "add_n_dark",
    "type": "png"
  });
},22474,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "eadfcd6310ce848ab88c395d24515f67",
    "name": "add_p_dark",
    "type": "png"
  });
},22477,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "212ae3dd040f06a3b7275f07bac925ac",
    "name": "add_d_dark",
    "type": "png"
  });
},22480,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0d175986353189419a421f22df98236c",
    "name": "back_n_dark",
    "type": "png"
  });
},22483,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "61088f5ae4334497423ed4ba4d0efd57",
    "name": "back_p_dark",
    "type": "png"
  });
},22486,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d71a75220ff84f218dc74b8c9d643d9d",
    "name": "back_d_dark",
    "type": "png"
  });
},22489,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "3aa862c6c1a8e0d751e6c0060ec8e936",
    "name": "close_n_dark",
    "type": "png"
  });
},22492,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "67a1d09012ca0bf153eec6d399bdf8cb",
    "name": "close_p_dark",
    "type": "png"
  });
},22495,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "38396687cc2aed9e12a24f0e4d8d6d52",
    "name": "close_d_dark",
    "type": "png"
  });
},22498,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "c0aa419f7ab32a31ece8cbe06f3df918",
    "name": "collect_n_dark",
    "type": "png"
  });
},22501,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "92d1cf303e84b2f49636c7f1774bb117",
    "name": "collect_p_dark",
    "type": "png"
  });
},22504,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f63b4a7eadbd183ff6f0528a77f85fa9",
    "name": "collect_d_dark",
    "type": "png"
  });
},22507,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0a4bc632ff6618367f4a8268b94539e0",
    "name": "complete_n_dark",
    "type": "png"
  });
},22510,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "e1ce6460ed6bea45b04c8408365aeb55",
    "name": "complete_p_dark",
    "type": "png"
  });
},22513,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "aea57b6079a28e34f5cdf64aeefa9d10",
    "name": "complete_d_dark",
    "type": "png"
  });
},22516,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "5b4f878534e8df6f1db628336f7942a1",
    "name": "delete_n_dark",
    "type": "png"
  });
},22519,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "5fe3bd8bd680430c3c0893cd838509ac",
    "name": "delete_p_dark",
    "type": "png"
  });
},22522,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a62a8690a84ac16c06ddc49e2500035a",
    "name": "delete_d_dark",
    "type": "png"
  });
},22525,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "06d360cd217e890d502905d042d8ab70",
    "name": "detail_n_dark",
    "type": "png"
  });
},22528,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "36adf09873ef8f4cb8e9c3293a073b2c",
    "name": "detail_p_dark",
    "type": "png"
  });
},22531,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a6260dff61235a9308ccae6a43f6326c",
    "name": "detail_d_dark",
    "type": "png"
  });
},22534,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "01768feec61a58fedc099e1bce9944a1",
    "name": "more_n_dark",
    "type": "png"
  });
},22537,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "818473fe7ed624d1ef8a94b71fb44f85",
    "name": "more_p_dark",
    "type": "png"
  });
},22540,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bddb75affe70f164ce1e438f4409f17b",
    "name": "more_d_dark",
    "type": "png"
  });
},22543,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8ec7c38f272c0f55f23be22336145074",
    "name": "next_n_dark",
    "type": "png"
  });
},22546,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f0d7968b2b57b3029789298b23cfc17f",
    "name": "next_p_dark",
    "type": "png"
  });
},22549,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "46c88f2e3560d5b2d85fe2577eda345b",
    "name": "next_d_dark",
    "type": "png"
  });
},22552,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "3fc8a34d07b39ab0975eeea5513b8c29",
    "name": "profile_n_dark",
    "type": "png"
  });
},22555,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "4e4af3425de30ca74529cd83a5fa8cc4",
    "name": "profile_p_dark",
    "type": "png"
  });
},22558,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "1e146ef52c0cd2c2b1296453ae202c3b",
    "name": "profile_d_dark",
    "type": "png"
  });
},22561,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "43558cf6431c2a80d0996e83087ed74a",
    "name": "qr_n_dark",
    "type": "png"
  });
},22564,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ca67ebbf39a108d2051be0f43022b309",
    "name": "qr_p_dark",
    "type": "png"
  });
},22567,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bf1c3f93c8df793ac79b6fb7ae12b368",
    "name": "qr_d_dark",
    "type": "png"
  });
},22570,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ef8d45b7107fa1997a340a6cde17d846",
    "name": "search_n_dark",
    "type": "png"
  });
},22573,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9f3cbff8a37a52b57f9630e779cbbf50",
    "name": "search_p_dark",
    "type": "png"
  });
},22576,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9bc47c03cb46538e397812dbe9130779",
    "name": "search_d_dark",
    "type": "png"
  });
},22579,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ec06b11be77df9693ec1e8e5eee2584a",
    "name": "select_all_n_dark",
    "type": "png"
  });
},22582,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0d6d205ce85797276f1e56d9f3a69036",
    "name": "select_all_p_dark",
    "type": "png"
  });
},22585,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "af7f244b41795961799676b2bb03572b",
    "name": "select_all_d_dark",
    "type": "png"
  });
},22588,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "feb1e39bc2f9f74ffa3b5e43dd2576d0",
    "name": "selected_all_n_dark",
    "type": "png"
  });
},22591,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "1edf29ddf9b1bd821cb81f0545ae4213",
    "name": "selected_all_p_dark",
    "type": "png"
  });
},22594,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f332bb6a35b954c4b5a5a156b5a318cb",
    "name": "selected_all_d_dark",
    "type": "png"
  });
},22597,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ea3bcaa2adbb2e5c69d294c1a785f1ff",
    "name": "setting_n_dark",
    "type": "png"
  });
},22600,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0f4e2e5b336a3e6df2ee61b442d525f8",
    "name": "setting_p_dark",
    "type": "png"
  });
},22603,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "399e720ce64e830a32e655050ca9650c",
    "name": "setting_d_dark",
    "type": "png"
  });
},22606,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ac348a4120eb9a807f6f26de2d54ed6c",
    "name": "share_n_dark",
    "type": "png"
  });
},22609,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "48ccaaa711bb0765271a227810c0b2a5",
    "name": "share_p_dark",
    "type": "png"
  });
},22612,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "af7d9b9276788b5babab6dee0010718a",
    "name": "share_d_dark",
    "type": "png"
  });
},22615,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d0600233b9840af9fb9d2c886a2c1318",
    "name": "edit_n_dark",
    "type": "png"
  });
},22618,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "dfed43b3fb99a8a6f29255d2fcb85595",
    "name": "edit_p_dark",
    "type": "png"
  });
},22621,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "be2507d558cd74c7be64aa2d95701cd1",
    "name": "edit_d_dark",
    "type": "png"
  });
},22624,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8bafdbd4b0404adf0853ac00532b1e79",
    "name": "add_n_light",
    "type": "png"
  });
},22627,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0164cec94f8ec71e4e9adb97fc870ab3",
    "name": "add_p_light",
    "type": "png"
  });
},22630,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0ceb7837a4c9b50b2cc41ae511436394",
    "name": "add_d_light",
    "type": "png"
  });
},22633,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d35c428ca5b361dee0fc11c6ed857d85",
    "name": "back_n_light",
    "type": "png"
  });
},22636,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "40ac17d325f10a6d829ad1555800ce72",
    "name": "back_p_light",
    "type": "png"
  });
},22639,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "65d7cc395c9e1964da242475a5cf5463",
    "name": "back_d_light",
    "type": "png"
  });
},22642,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ea16ea01af17c8f1d5a1a75cfa0fa4da",
    "name": "close_n_light",
    "type": "png"
  });
},22645,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2],
    "hash": "120e386ff9e57f96b116f4a74926eec6",
    "name": "close_p_light",
    "type": "png"
  });
},22648,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "2b639ed6f188a166393c35cbebba5a98",
    "name": "close_d_light",
    "type": "png"
  });
},22651,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "dbb118618abcff775dce42a48115207d",
    "name": "collect_n_light",
    "type": "png"
  });
},22654,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "c191261b7355631ee834af49dc32685f",
    "name": "collect_p_light",
    "type": "png"
  });
},22657,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "18f9db9e4605e20d0fd44ca7d0f23fbd",
    "name": "collect_d_light",
    "type": "png"
  });
},22660,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "b1bd45768499eff55cc3d05773043ad9",
    "name": "complete_n_light",
    "type": "png"
  });
},22663,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "4eb8ac68188682e0cd6e1c8eeada1caf",
    "name": "complete_p_light",
    "type": "png"
  });
},22666,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7da108cda8573079daeea58daa1f9804",
    "name": "complete_d_light",
    "type": "png"
  });
},22669,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "276b44f481b127e60909bef6af54bec1",
    "name": "delete_n_light",
    "type": "png"
  });
},22672,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8506cca89f55c8cc2eed16cc74f56943",
    "name": "delete_p_light",
    "type": "png"
  });
},22675,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9da9b53b85d9dceca54de2cac5418b19",
    "name": "delete_d_light",
    "type": "png"
  });
},22678,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d1829d99bed03923f1b8f1ebf0010130",
    "name": "detail_n_light",
    "type": "png"
  });
},22681,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d50634fa85b7ae6995b9e3e87d5a4d4d",
    "name": "detail_p_light",
    "type": "png"
  });
},22684,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "64fe4c41e9f9e03cb43bdf9ef74c3b1d",
    "name": "detail_d_light",
    "type": "png"
  });
},22687,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7d796b935e6bc3314cb02944228d96ba",
    "name": "more_n_light",
    "type": "png"
  });
},22690,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f72680ce6545ce33ea92cd05d6d0b781",
    "name": "more_p_light",
    "type": "png"
  });
},22693,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "b1555c8200e8033bd520e486c62d50f6",
    "name": "more_d_light",
    "type": "png"
  });
},22696,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "b06e919c1aabe23c6b6204ed4c6be2f2",
    "name": "next_n_light",
    "type": "png"
  });
},22699,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d9e2fbca34f818935153d5cd14bfe308",
    "name": "next_p_light",
    "type": "png"
  });
},22702,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a83f2f4e7a6a06ec0aca2e5d9c2d6425",
    "name": "next_d_light",
    "type": "png"
  });
},22705,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "80df0a9c305f460e686305b20a4121e5",
    "name": "profile_n_light",
    "type": "png"
  });
},22708,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a324d91d85f4ebb75c79d149113d2986",
    "name": "profile_p_light",
    "type": "png"
  });
},22711,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a27828fbcbc4f32763f5b16003e77fda",
    "name": "profile_d_light",
    "type": "png"
  });
},22714,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bc698fecd6edf342a8abd9935a26c54f",
    "name": "qr_n_light",
    "type": "png"
  });
},22717,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7148f22f62b47295594876ac7e59b627",
    "name": "qr_p_light",
    "type": "png"
  });
},22720,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "1d5e61ff437c1fed89412bb1414b0e12",
    "name": "qr_d_light",
    "type": "png"
  });
},22723,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f51992416b82a3978180624bbcd3aa6b",
    "name": "search_n_light",
    "type": "png"
  });
},22726,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7343717d2172db8e7e809f333304bf18",
    "name": "search_p_light",
    "type": "png"
  });
},22729,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8ca380593445ff388dc5d46cc2f9372b",
    "name": "search_d_light",
    "type": "png"
  });
},22732,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9df30e16d642ba2f9208fe5fb6912941",
    "name": "select_all_n_light",
    "type": "png"
  });
},22735,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "e07a585ed15f6298ceda6c57d112af5a",
    "name": "select_all_p_light",
    "type": "png"
  });
},22738,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "79a9f622c8a14ca78e1c22fbb7552f93",
    "name": "select_all_d_light",
    "type": "png"
  });
},22741,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "31ceea4acc13d14db8013f4e9f285a5c",
    "name": "selected_all_n_light",
    "type": "png"
  });
},22744,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "6e5cd5f673df012ba88b127147b7fcf8",
    "name": "selected_all_p_light",
    "type": "png"
  });
},22747,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "efc658ab288e2a7a6812d5043c23101b",
    "name": "selected_all_d_light",
    "type": "png"
  });
},22750,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "84f010399151dba78c3632943d118f51",
    "name": "setting_n_light",
    "type": "png"
  });
},22753,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "3443dad864861e535b7069114e900875",
    "name": "setting_p_light",
    "type": "png"
  });
},22756,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "e8c9e0ccf400909f5fafc5876055be7c",
    "name": "setting_d_light",
    "type": "png"
  });
},22759,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d169ce4c6a497c942dc9e79158cb31d0",
    "name": "share_n_light",
    "type": "png"
  });
},22762,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "5267a30047ef07ac0f81f0d2c41eb9d4",
    "name": "share_p_light",
    "type": "png"
  });
},22765,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "2bbd5837d46a53fa4cfd901ff339721f",
    "name": "share_d_light",
    "type": "png"
  });
},22768,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "20eeed0f6e9ec17338bd85b45f839d5e",
    "name": "edit_n_light",
    "type": "png"
  });
},22771,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bcf1344a655071e586f35b03c192b126",
    "name": "edit_p_light",
    "type": "png"
  });
},22774,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7ba5916e8c4ce832feb18527d230fed6",
    "name": "edit_d_light",
    "type": "png"
  });
},22777,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var PADDING = 24;
  var SEPARATOR_HEIGHT = _reactNative.StyleSheet.hairlineWidth;
  var HAIRLINE_COLOR = 'rgba(0,0,0,0.15)';
  var MODAL_MARGIN = 0;
  var MODAL_WIDTH = width - 0;
  var _default = {
    MODAL_MARGIN: MODAL_MARGIN,
    common: {
      padding: PADDING,
      MHGreen: '#32BAC0',
      underlayColor: 'rgba(0,0,0,0.05)',
      hairlineColor: HAIRLINE_COLOR,
      backgroundColor: '#f7f7f7',
      separatorHeight: SEPARATOR_HEIGHT,
      title: {
        fontSize: 16,
        lineHeight: 20,
        color: '#000'
      },
      subtitle: {
        fontSize: 13,
        color: 'rgba(0,0,0,0.6)'
      },
      separator: {
        height: SEPARATOR_HEIGHT,
        backgroundColor: HAIRLINE_COLOR
      }
    },
    dialog: {
      background: {
        flex: 1,
        backgroundColor: 'rgba(0,0,0,0.4)'
      },
      modal: {
        position: 'absolute',
        bottom: 0,
        marginHorizontal: MODAL_MARGIN,
        width: MODAL_WIDTH,
        borderTopEndRadius: 20,
        borderTopStartRadius: 20,
        paddingBottom: 30,
        backgroundColor: '#fff'
      },
      padModal: {
        position: 'absolute',
        bottom: null,
        marginHorizontal: MODAL_MARGIN,
        width: MODAL_WIDTH * 0.75,
        borderRadius: 20,
        paddingBottom: 30
      },
      title: {
        titleHeightThin: 73,
        titleHeightFat: 83
      },
      subtitle: {
        width: MODAL_WIDTH * 0.75,
        textAlign: 'center',
        fontSize: 13,
        color: '#666'
      },
      buttons: {
        height: 46,
        flexDirection: 'row',
        backgroundColor: 'transparent',
        justifyContent: 'center',
        alignItems: 'center',
        marginHorizontal: 27
      },
      button: {
        flex: 1,
        backgroundColor: 'transparent',
        justifyContent: 'center',
        alignItems: 'center',
        marginHorizontal: 27
      },
      buttonText: {
        fontSize: 14,
        lineHeight: 19,
        color: '#666',
        fontFamily: 'D-DINCondensed-Bold'
      }
    }
  };
  exports.default = _default;
},22780,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Checkbox", {
    enumerable: true,
    get: function get() {
      return _Checkbox.default;
    }
  });

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22783,[14305,22786]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Checkable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var SIZE = 40;
  var UNCHECKED_BORDER_COLOR = 'rgba(0,0,0,0.1)';

  var Checkbox = function (_React$Component) {
    (0, _inherits2.default)(Checkbox, _React$Component);

    function Checkbox(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, Checkbox);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Checkbox).call(this, props, context));
      _this.UNCHECKED_BACKGROUNDCOLOR = new _DynamicColor.default('#F5F5F5', '#333333');
      _this.backgroundColor = new _reactNative.Animated.Value(0);
      (0, _reportDecorator.referenceReport)('Checkbox');
      _this.state = {
        checked: _this.props.checked
      };
      return _this;
    }

    (0, _createClass2.default)(Checkbox, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.checked !== this.state.checked) {
          this.setState({
            checked: newProps.checked
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var colorScheme = this.context.colorScheme;
        var toValue = this.state.checked ? 1 : 0;
        var backgroundColor = this.backgroundColor.interpolate({
          inputRange: [0, 1],
          outputRange: [this.UNCHECKED_BACKGROUNDCOLOR.color(colorScheme), this.props.checkedColor]
        });
        var _this$props$style = this.props.style,
            borderWidth = _this$props$style.borderWidth,
            borderColor = _this$props$style.borderColor,
            width = _this$props$style.width,
            height = _this$props$style.height;
        var size = Math.min(width || SIZE, height || SIZE);
        var borderStyle = this.state.checked ? {
          borderWidth: 0
        } : {
          borderWidth: borderWidth || 0,
          borderColor: borderColor || UNCHECKED_BORDER_COLOR
        };

        _reactNative.Animated.timing(this.backgroundColor, {
          toValue: toValue,
          duration: 200
        }).start();

        return _react.default.createElement(_reactNative.Animated.View, {
          opacity: this.props.disabled ? 0.3 : 1,
          style: [styles.container, this.props.style, borderStyle, {
            backgroundColor: backgroundColor
          }]
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          disabled: this.props.disabled,
          onPress: function onPress() {
            return _this2._onValueChange();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props, {
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
          accessibilityLabel: this.props.accessibilityLabel || this.props.label,
          accessibilityState: {
            disabled: !!this.props.disabled,
            checked: !!this.state.checked
          }
        }))), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            justifyContent: 'center',
            alignItems: 'center'
          }
        }, _react.default.createElement(_Checkable.default, {
          size: size,
          visible: this.state.checked
        }))));
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange() {
        var checked = !this.state.checked;

        if (this.props.onValueChange) {
          this.props.onValueChange(checked);
        }

        this.setState({
          checked: checked
        });
      }
    }]);
    return Checkbox;
  }(_react.default.Component);

  Checkbox.contextType = _configProvider.ConfigContext;
  Checkbox.propTypes = {
    style: _propTypes.default.object,
    disabled: _propTypes.default.bool,
    checked: _propTypes.default.bool,
    onValueChange: _propTypes.default.func,
    checkedColor: _propTypes.default.string,
    label: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Checkbox.defaultProps = {
    style: {},
    disabled: false,
    checked: false,
    checkedColor: _resources.Styles.common.MHGreen
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: SIZE,
      height: SIZE
    }
  });

  var _default = Checkbox;
  exports.default = _default;
},22786,[14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22453,22789,22435,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  var Surface = _reactNative.ART.Surface,
      Shape = _reactNative.ART.Shape,
      Path = _reactNative.ART.Path,
      Transform = _reactNative.ART.Transform;

  var Rectangle = function (_React$Component) {
    (0, _inherits2.default)(Rectangle, _React$Component);

    function Rectangle() {
      (0, _classCallCheck2.default)(this, Rectangle);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Rectangle).apply(this, arguments));
    }

    (0, _createClass2.default)(Rectangle, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            width = _this$props.width,
            height = _this$props.height;
        if (width < height) return null;
        var newWidth = width - height;
        var path = Path().moveTo(height / 2 - width / 2, height / 2).arc(0, -height, height / 2).line(newWidth, 0).arc(0, height, height / 2).line(-newWidth, 0).close();
        return _react.default.createElement(Shape, (0, _extends2.default)({
          transform: new Transform().rotate(this.props.degree)
        }, this.props, {
          d: path
        }));
      }
    }]);
    return Rectangle;
  }(_react.default.Component);

  Rectangle.propTypes = {
    width: _propTypes.default.number.isRequired,
    height: _propTypes.default.number.isRequired,
    degree: _propTypes.default.number.isRequired
  };

  var AnimatedRectangle = _reactNative.Animated.createAnimatedComponent(Rectangle);

  var degree = 45;

  var Checkable = function (_React$Component2) {
    (0, _inherits2.default)(Checkable, _React$Component2);

    function Checkable(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, Checkable);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Checkable).call(this, props, context));
      _this.state = {
        animatedWidth: new _reactNative.Animated.Value(0)
      };
      var size = _this.props.size;
      var containerHeight = size;
      var leftWidth = size * 0.43;
      var rightWidth = size - leftWidth;
      var intersectionHeight = Math.floor(size * 2 / 3);
      var leftRectangleWidth = intersectionHeight / 1.5;
      var rightRectangleWidth = size / 1.2;
      var rectangleHeight = size / 10;
      _this.animationConfig = {
        toValue: rightRectangleWidth,
        speed: 9,
        bounciness: 9
      };
      _this.containerHeight = containerHeight;
      _this.leftWidth = leftWidth;
      _this.rightWidth = rightWidth;
      _this.intersectionHeight = intersectionHeight;
      _this.leftRectangleWidth = leftRectangleWidth;
      _this.rightRectangleWidth = rightRectangleWidth;
      _this.rectangleHeight = rectangleHeight;
      return _this;
    }

    (0, _createClass2.default)(Checkable, [{
      key: "render",
      value: function render() {
        if (!this.props.visible) {
          this.preVisible = false;
          return _react.default.createElement(_reactNative.View, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          }));
        }

        if (!this.preVisible) {
          this.state.animatedWidth.setValue(0);

          _reactNative.Animated.spring(this.state.animatedWidth, this.animationConfig).start();
        }

        this.preVisible = true;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: {
            flexDirection: 'row'
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(Surface, {
          width: this.leftWidth,
          height: this.containerHeight,
          style: {
            backgroundColor: 'transparent'
          }
        }, _react.default.createElement(AnimatedRectangle, {
          degree: degree,
          fill: "#fff",
          width: this.leftRectangleWidth,
          height: this.rectangleHeight,
          y: this.intersectionHeight,
          x: this.leftWidth
        })), _react.default.createElement(Surface, {
          width: this.rightWidth,
          height: this.containerHeight,
          style: {
            backgroundColor: 'transparent',
            marginLeft: -0.5
          }
        }, _react.default.createElement(AnimatedRectangle, {
          degree: -45,
          fill: "#fff",
          width: this.state.animatedWidth,
          height: this.rectangleHeight,
          y: this.intersectionHeight,
          x: 0
        })));
      }
    }]);
    return Checkable;
  }(_react.default.Component);

  exports.default = Checkable;
  Checkable.propTypes = {
    size: _propTypes.default.number.isRequired,
    visible: _propTypes.default.bool.isRequired
  };
  Checkable.defaultProps = {
    size: 50,
    visible: false
  };
},22789,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "ImageButton", {
    enumerable: true,
    get: function get() {
      return _ImageButton.default;
    }
  });

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22792,[14305,22795]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[11]);

  var ImageButton = function (_React$Component) {
    (0, _inherits2.default)(ImageButton, _React$Component);

    function ImageButton(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ImageButton);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ImageButton).call(this, props));
      (0, _reportDecorator.referenceReport)('ImageButton');
      _this.state = {
        buttonPressed: false
      };
      return _this;
    }

    (0, _createClass2.default)(ImageButton, [{
      key: "_buttonPressIn",
      value: function _buttonPressIn() {
        this.setState({
          buttonPressed: true
        });
      }
    }, {
      key: "_buttonPressOut",
      value: function _buttonPressOut() {
        this.setState({
          buttonPressed: false
        });
      }
    }, {
      key: "_isButtonPressed",
      value: function _isButtonPressed() {
        return this.state.buttonPressed;
      }
    }, {
      key: "render",
      value: function render() {
        var source = this.props.source;

        if (this._isButtonPressed() && this.props.highlightedSource) {
          source = this.props.highlightedSource;
        }

        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          disabled: this.props.disabled,
          onPress: this.props.onPress,
          onPressIn: this._buttonPressIn.bind(this),
          onPressOut: this._buttonPressOut.bind(this)
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.imagebutton,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: !!this.props.disabled
          }
        })), _react.default.createElement(_reactNative.Image, {
          style: this.props.style,
          source: source
        }));
      }
    }]);
    return ImageButton;
  }(_react.default.Component);

  ImageButton.initialState = {
    buttonPressed: false
  };
  ImageButton.propTypes = {
    source: _propTypes.default.any,
    highlightedSource: _propTypes.default.any,
    onPress: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    style: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ImageButton.defaultProps = {
    source: null,
    highlightedSource: null,
    onPress: null
  };
  var _default = ImageButton;
  exports.default = _default;
},22795,[14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "TitleBar", {
    enumerable: true,
    get: function get() {
      return _TitleBar.default;
    }
  });

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22798,[14305,22801]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _reactNativeIphoneXHelper = _$$_REQUIRE(_dependencyMap[11]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[12]);

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[13]);

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

  var isIOS = _reactNative.Platform.OS === 'ios';

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var statusBarHeight = (0, _reactNativeIphoneXHelper.getStatusBarHeight)(true);
  var titleHeight = 55;
  var imgHeight = 28;
  var containerHeight = (_reactNative.StatusBar.currentHeight || 0) + titleHeight;
  var marginV = 13.5;
  var marginH = 14;
  var dotSize = 10;

  var TitleBar = function (_Component) {
    (0, _inherits2.default)(TitleBar, _Component);

    function TitleBar(props) {
      var _this;

      (0, _classCallCheck2.default)(this, TitleBar);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TitleBar).call(this, props));
      (0, _reportDecorator.referenceReport)('TitleBar');
      return _this;
    }

    (0, _createClass2.default)(TitleBar, [{
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        this.isDarkStyle = this.props.type === 'dark';

        if (_reactNative.Platform.OS == 'android') {
          _reactNative.StatusBar.setTranslucent(true);
        }
      }
    }, {
      key: "render",
      value: function render() {
        this.isDarkStyle = this.props.type === 'dark';

        if (this.context.colorScheme === 'dark') {
          if (this.isDarkStyle === false) {
            if (this.props.style !== undefined && this.props.style.backgroundColor !== undefined) {
              this.props.style.backgroundColor = "xm" + this.props.style.backgroundColor;
            }
          }

          this.isDarkStyle = false;
        } else if (this.context.colorScheme === 'dark') {
          this.isDarkStyle = false;
        }

        this.isDarkStyle ? _reactNative.StatusBar.setBarStyle('dark-content') : _reactNative.StatusBar.setBarStyle('light-content');
        var containerStyle = this.isDarkStyle ? styles.blackTitleBarContainer : styles.lightTitleBarContainer;
        var leftWidth = this.props.leftTextStyle ? this.props.leftTextStyle.width : 0;
        var rightWidth = this.props.rightTextStyle ? this.props.rightTextStyle.width : 0;
        var titleTextStyle = this.isDarkStyle ? styles.blackTitleText : styles.whiteTitleText;
        var subtitleTextStyle = this.isDarkStyle ? styles.blackSubtitleText : styles.whiteSubtitleText;
        var leftRightTextStyle = this.isDarkStyle ? styles.blackLeftRightText : styles.whiteLeftRightText;
        var back_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[18]) : _$$_REQUIRE(_dependencyMap[19]);
        var back_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[20]) : _$$_REQUIRE(_dependencyMap[21]);
        var set_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[22]) : _$$_REQUIRE(_dependencyMap[23]);
        var set_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[24]) : _$$_REQUIRE(_dependencyMap[25]);
        var share_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[26]) : _$$_REQUIRE(_dependencyMap[27]);
        var share_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[28]) : _$$_REQUIRE(_dependencyMap[29]);
        var more_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[30]) : _$$_REQUIRE(_dependencyMap[31]);
        var more_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[32]) : _$$_REQUIRE(_dependencyMap[33]);
        var message = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[34]) : _$$_REQUIRE(_dependencyMap[34]);

        var _ref = this.props.style || {},
            height = _ref.height;

        var containerHeight = {};
        var dotTop = {};
        var offset;

        if (height !== undefined) {
          containerHeight = {
            height: (_reactNative.StatusBar.currentHeight || 0) + height
          };
          offset = height - titleHeight;
          dotTop = {
            top: statusBarHeight + marginV + offset
          };
        }

        return _react.default.createElement(_reactNavigation.SafeAreaView, {
          style: [containerStyle, this.props.style, containerHeight]
        }, this.props.leftText ? _react.default.createElement(_reactNativeUiKitten.RkButton, (0, _extends2.default)({
          onPress: this.props.onPressLeft,
          contentStyle: [leftRightTextStyle, this.props.leftTextStyle],
          style: [leftRightTextStyle, {
            height: this.props.onPressLeft ? titleHeight : 0,
            width: leftWidth || 56
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressLeft ? this.props.accessible : false,
          accessibilityLabel: this.props.leftAccessibilityLabel || this.props.leftText,
          accessibilityHint: this.props.leftAccessibilityHint
        })), this.props.leftText) : _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
          onPress: this.props.onPressLeft,
          style: [styles.img, {
            height: this.props.onPressLeft ? imgHeight : 0
          }],
          source: back_n,
          highlightedSource: back_p
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressLeft ? this.props.accessible : false,
          accessibilityLabel: this.props.leftAccessibilityLabel,
          accessibilityHint: this.props.leftAccessibilityHint
        }))), _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
          onPress: this.props.onPressLeft2,
          style: [styles.img, {
            marginLeft: 0,
            height: this.props.onPressLeft2 ? imgHeight : 0
          }],
          source: set_n,
          highlightedSource: set_p
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressLeft2 ? this.props.accessible : false,
          accessibilityLabel: this.props.left2AccessibilityLabel,
          accessibilityHint: this.props.left2AccessibilityHint
        }))), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.textContainer]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.header
        })), _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: [titleTextStyle, this.props.titleStyle],
          allowFontScaling: this.props.allowFontScaling,
          onPress: this.props.onPressTitle
        }, this.props.title), this.props.subTitle ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: [subtitleTextStyle, this.props.subtitleStyle],
          allowFontScaling: this.props.allowFontScaling,
          onPress: this.props.onPressTitle
        }, this.props.subTitle) : null), _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
          onPress: this.props.onPressRight2,
          style: [styles.img, {
            marginRight: 0,
            height: this.props.onPressRight2 ? imgHeight : 0
          }],
          source: share_n,
          highlightedSource: share_p
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressRight2 ? this.props.accessible : false,
          accessibilityLabel: this.props.right2AccessibilityLabel,
          accessibilityHint: this.props.right2AccessibilityHint
        }))), this.props.rightText ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNativeUiKitten.RkButton, (0, _extends2.default)({
          onPress: this.props.onPressRight,
          contentStyle: [leftRightTextStyle, this.props.rightTextStyle],
          style: [leftRightTextStyle, {
            height: this.props.onPressRight ? titleHeight : 0,
            width: rightWidth || 56
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressRight ? this.props.accessible : false,
          accessibilityLabel: this.props.rightAccessibilityLabel || this.props.rightText,
          accessibilityHint: this.props.rightAccessibilityHint
        })), this.props.rightText), this.props.showDot && _react.default.createElement(_reactNative.Image, {
          style: [styles.dot],
          resizeMode: "contain",
          source: message
        })) : _react.default.createElement(_reactNative.View, null, _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
          onPress: this.props.onPressRight,
          style: [styles.img, {
            height: this.props.onPressRight ? imgHeight : 0
          }],
          source: more_n,
          highlightedSource: more_p
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressRight ? this.props.accessible : false,
          accessibilityLabel: this.props.rightAccessibilityLabel,
          accessibilityHint: this.props.rightAccessibilityHint
        }))), this.props.showDot && _react.default.createElement(_reactNative.Image, {
          style: [styles.dot],
          resizeMode: "contain",
          source: message
        })));
      }
    }]);
    return TitleBar;
  }(_react.Component);

  TitleBar.contextType = _configProvider.ConfigContext;
  TitleBar.propTypes = {
    type: _propTypes.default.oneOf(['dark', 'light']),
    leftTextStyle: _propTypes.default.any,
    rightTextStyle: _propTypes.default.any,
    style: _propTypes.default.any,
    leftText: _propTypes.default.string,
    rightText: _propTypes.default.string,
    onPressLeft: _propTypes.default.func,
    onPressLeft2: _propTypes.default.func,
    onPressRight: _propTypes.default.func,
    onPressRight2: _propTypes.default.func,
    onPressTitle: _propTypes.default.func,
    title: _propTypes.default.string,
    subTitle: _propTypes.default.string,
    titleStyle: _reactNative.Text.propTypes.style,
    subtitleStyle: _reactNative.Text.propTypes.style,
    allowFontScaling: _propTypes.default.bool,
    showDot: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    leftAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    leftAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    left2AccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    left2AccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    rightAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    rightAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    right2AccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    right2AccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  TitleBar.defaultProps = {
    type: 'light',
    allowFontScaling: true,
    titleStyle: {},
    subtitleStyle: {}
  };

  var styles = _reactNative.StyleSheet.create({
    lightTitleBarContainer: {
      flexDirection: 'row',
      width: width,
      alignItems: 'flex-end',
      height: containerHeight,
      backgroundColor: 'xmblack'
    },
    blackTitleBarContainer: {
      flexDirection: 'row',
      width: width,
      alignItems: 'flex-end',
      height: containerHeight,
      backgroundColor: 'xmwhite'
    },
    textContainer: {
      minHeight: titleHeight,
      flex: 1,
      alignItems: 'stretch',
      justifyContent: 'center'
    },
    blackTitleText: {
      color: 'xm#000000cc',
      fontSize: 15,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    whiteTitleText: {
      color: 'xm#ffffffcc',
      fontSize: 15,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    blackSubtitleText: {
      color: 'xm#00000088',
      fontSize: 12,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    whiteSubtitleText: {
      color: 'xm#ffffff88',
      fontSize: 12,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    blackLeftRightText: {
      backgroundColor: 'xm#0000',
      color: 'xm#00000088',
      fontSize: 14,
      alignItems: 'center',
      justifyContent: 'center',
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    whiteLeftRightText: {
      backgroundColor: 'xm#0000',
      color: 'xm#ffffff88',
      fontSize: 14,
      alignItems: 'center',
      justifyContent: 'center',
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    img: {
      width: imgHeight,
      height: imgHeight,
      resizeMode: 'contain',
      marginHorizontal: marginH,
      marginVertical: marginV
    },
    dot: {
      position: 'absolute',
      width: dotSize,
      height: dotSize,
      resizeMode: 'contain',
      right: marginH,
      top: marginV
    }
  });

  var _default = TitleBar;
  exports.default = _default;
},22801,[14308,14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13696,11251,10918,22795,22426,22420,22423,22804,22807,22810,22813,22816,22819,22822,22825,22828,22831,22834,22837,22840,22843,22846,22849,22852]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "3ac342e621b9ffa0c200ab5ec4651fd5",
    "name": "std_tittlebar_main_device_back_normal",
    "type": "png"
  });
},22804,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "3b5c33e031f042072bfd34104bdd2f0e",
    "name": "std_tittlebar_main_device_back_white_normal",
    "type": "png"
  });
},22807,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "03d2a427cd538718957f203472bb1909",
    "name": "std_tittlebar_main_device_back_press",
    "type": "png"
  });
},22810,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "e2cd9dae60d00bdaaf370d0ce935bcd1",
    "name": "std_tittlebar_main_device_back_white_press",
    "type": "png"
  });
},22813,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 87,
    "height": 87,
    "scales": [1],
    "hash": "1f87d21e189f8407cf2193f497a3009b",
    "name": "std_tittlebar_main_device_back2_normal",
    "type": "png"
  });
},22816,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 87,
    "height": 87,
    "scales": [1],
    "hash": "245580044e6fde980a40017d0a84b8a0",
    "name": "std_titlebar_setting_back_normal",
    "type": "png"
  });
},22819,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 87,
    "height": 87,
    "scales": [1],
    "hash": "58b0bbb3fe18c3f9f403a7462df13b16",
    "name": "std_tittlebar_main_device_back2_press",
    "type": "png"
  });
},22822,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 87,
    "height": 87,
    "scales": [1],
    "hash": "04afc8dcfd074448cf6df1dd0ccc1834",
    "name": "std_titlebar__setting_back_press",
    "type": "png"
  });
},22825,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "c1de7bdd3f696c32718913b813324785",
    "name": "std_tittlebar_main_device_share_normal",
    "type": "png"
  });
},22828,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "f7e6cada2c77978f5ba39df82526dbd4",
    "name": "std_tittlebar_main_device_share_white_normal",
    "type": "png"
  });
},22831,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "94f64d86d775616685fbd8d0551af687",
    "name": "std_tittlebar_main_device_share_press",
    "type": "png"
  });
},22834,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "44be9deb2614f593e6ef99df7db8de8e",
    "name": "std_tittlebar_main_device_share_white_press",
    "type": "png"
  });
},22837,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "a5bb68ab122b74c581fd2454e5218cea",
    "name": "std_tittlebar_main_device_more_normal",
    "type": "png"
  });
},22840,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "24d81d84c61d4181f21e615e4a6d3918",
    "name": "std_tittlebar_main_device_more_white_normal",
    "type": "png"
  });
},22843,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "1fe8ece2871c461ef1644d01f207c332",
    "name": "std_tittlebar_main_device_more_press",
    "type": "png"
  });
},22846,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "d6f11d70982f64f3a70d831f321355fe",
    "name": "std_tittlebar_main_device_more_white_press",
    "type": "png"
  });
},22849,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 30,
    "height": 30,
    "scales": [1],
    "hash": "522ed59eaa31441e8b11ae8bab872663",
    "name": "std_tittlebar_main_device_massage_point",
    "type": "png"
  });
},22852,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "NavigationBar", {
    enumerable: true,
    get: function get() {
      return _NavigationBar.default;
    }
  });

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22855,[14305,22858]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Images = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

  var _font = _$$_REQUIRE(_dependencyMap[18]);

  var _locale = _$$_REQUIRE(_dependencyMap[19]);

  var TYPE = {
    DARK: 'dark',
    LIGHT: 'light'
  };
  Object.freeze(TYPE);
  var ICON = {
    ADD: 'add',
    BACK: 'back',
    CLOSE: 'close',
    COLLECT: 'collect',
    COMPLETE: 'complete',
    DELETE: 'delete',
    DETAIL: 'detail',
    MORE: 'more',
    NEXT: 'next',
    PROFILE: 'profile',
    QR: 'qr',
    SEARCH: 'search',
    SELECT_ALL: 'select_all',
    SELECTED_ALL: 'selected_all',
    SETTING: 'setting',
    SHARE: 'share',
    EDIT: 'edit',
    RECORD: 'record',
    ORIENTATION: 'orientation',
    SAVE: 'save'
  };
  Object.freeze(ICON);
  var _Images$navigation = _Images.default.navigation,
      light = _Images$navigation.light,
      dark = _Images$navigation.dark,
      dot = _Images$navigation.dot;

  function getIconLabelKey(key) {
    return {
      select_all: 'selectAll',
      selected_all: 'selectedAll'
    }[key] || key;
  }

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var navigationBarHeightThin = 53;
  var navigationBarHeightFat = 65;
  var paddingHorizontal = 9;
  var iconSize = 40;
  var lightTitleColor = 'xm#000000';
  var darkTitleColor = 'xm#ffffff';
  var colorSubtitleNormal = new _DynamicColor.default('rgba(0,0,0,0.60)', 'rgba(255,255,255,0.50)');
  var colorSubtitleWarning = new _DynamicColor.default('#f43f31', '#d92719');
  var colorSubtitleException = new _DynamicColor.default('#f5a623', '#db8e0d');
  var COLOR_SUBTITLE = {
    normal: colorSubtitleNormal,
    warning: colorSubtitleWarning,
    exception: colorSubtitleException
  };

  var NavigationBar = function (_Component) {
    (0, _inherits2.default)(NavigationBar, _Component);

    function NavigationBar(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, NavigationBar);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NavigationBar).call(this, props, context));
      (0, _reportDecorator.referenceReport)('NavigationBar');
      return _this;
    }

    (0, _createClass2.default)(NavigationBar, [{
      key: "getIconsOfType",
      value: function getIconsOfType(arr) {
        var icons = this.isDarkStyle ? dark : light;
        return arr.map(function (item) {
          var key = item.key,
              disable = item.disable;

          if (disable) {
            item.source = icons[key] ? icons[key].disable : null;
            item.highlightedSource = null;
          } else {
            item.source = icons[key] ? icons[key].normal : null;
            item.highlightedSource = icons[key] ? icons[key].press : null;
          }

          return item;
        }).filter(function (item) {
          return item.source;
        });
      }
    }, {
      key: "renderIcons",
      value: function renderIcons(arr) {
        var _this2 = this;

        var icons = (arr || []).slice(0, 2);
        return icons.map(function (icon, i) {
          if (!icon.source) {
            return _react.default.createElement(_reactNative.View, {
              key: icon.key + i,
              style: {
                width: iconSize
              }
            });
          }

          return _react.default.createElement(_reactNative.View, {
            key: icon.key + i,
            style: {
              width: iconSize,
              height: iconSize
            }
          }, icon.showDot ? _react.default.createElement(_reactNative.Image, {
            style: styles.dot,
            resizeMode: "contain",
            source: dot
          }) : null, _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
            disabled: !!icon.disable,
            onPress: icon.onPress,
            style: styles.icon,
            source: icon.source,
            highlightedSource: icon.highlightedSource
          }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, icon, {
            accessible: icon.accessible || _this2.props.accessible,
            accessibilityLabel: icon.accessibilityLabel || _locale.Locale.of(_this2.context.language)[getIconLabelKey(icon.key)] || '',
            accessibilityHint: icon.accessibilityHint
          })))));
        });
      }
    }, {
      key: "renderTitle",
      value: function renderTitle() {
        var _this$props = this.props,
            title = _this$props.title,
            subtitle = _this$props.subtitle,
            subtitleStyle = _this$props.subtitleStyle,
            titleStyle = _this$props.titleStyle,
            onPressTitle = _this$props.onPressTitle;
        var titleColor = {
          color: this.isDarkStyle ? darkTitleColor : lightTitleColor
        };
        var newSubtitleStyle = (0, _objectSpread2.default)({
          colorType: 'normal',
          fontSize: 14,
          fontFamily: 'MI-LANTING--GBK1-Light'
        }, subtitleStyle);
        var customSubtitleStyle = {
          fontFamily: newSubtitleStyle.fontFamily,
          fontSize: newSubtitleStyle.fontSize,
          lineHeight: newSubtitleStyle.fontSize * 1.3,
          color: this.isDarkStyle ? COLOR_SUBTITLE[newSubtitleStyle.colorType].dark : COLOR_SUBTITLE[newSubtitleStyle.colorType][this.context.colorScheme]
        };
        var newTitleStyle = (0, _objectSpread2.default)({
          fontSize: 18
        }, titleStyle);
        var customTitleStyle = {
          fontSize: newTitleStyle.fontSize,
          lineHeight: newTitleStyle.fontSize * 1.3
        };
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.titleContainer]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.header
        })), _react.default.isValidElement(title) ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          numberOfLines: this.props.titleNumberOfLines,
          style: [styles.titleView, titleColor],
          onPress: onPressTitle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), title || '') : _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: this.props.titleNumberOfLines,
          allowFontScaling: this.props.allowFontScaling,
          style: [styles.title, titleColor, customTitleStyle],
          onPress: onPressTitle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), title || ''), subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.subtitle, customSubtitleStyle],
          numberOfLines: this.props.subtitleNumberOfLines,
          allowFontScaling: this.props.allowFontScaling,
          onPress: onPressTitle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), subtitle) : null);
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        this.updateStyleType(this.props, newProps);
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        this.updateStyleType(this.props, null);
      }
    }, {
      key: "updateStyleType",
      value: function updateStyleType(props, newProps) {
        var newIsDartStyle = (newProps ? newProps.type : props.type) === TYPE.DARK;
        this.shouldKeepColor = false;

        if (this.context.colorScheme === 'dark') {
          if (newIsDartStyle) {
            this.shouldKeepColor = true;
          }

          newIsDartStyle = true;
        } else {
          newIsDartStyle = this.context.colorScheme === 'dark' ? true : (newProps ? newProps.type : props.type) === TYPE.DARK;
        }

        if (newIsDartStyle !== this.isDarkStyle) {
          this.isDarkStyle = newIsDartStyle;

          _reactNative.StatusBar.setBarStyle(this.isDarkStyle ? 'light-content' : 'dark-content');

          if (_reactNative.Platform.OS == 'android') {
            _reactNative.StatusBar.setTranslucent(true);
          }
        }
      }
    }, {
      key: "render",
      value: function render() {
        var leftIcons = this.getIconsOfType(this.props.left);
        var rightIcons = this.getIconsOfType(this.props.right);
        leftIcons.length < rightIcons.length && leftIcons.push({});
        leftIcons.length > rightIcons.length && rightIcons.unshift({});
        var containerHeight = this.props.subtitle ? navigationBarHeightFat : navigationBarHeightThin;
        var backgroundColor = this.props.backgroundColor ? this.props.backgroundColor : this.isDarkStyle ? 'xm#000000' : 'xm#ffffff';

        if (this.shouldKeepColor && this.props.backgroundColor) {
          backgroundColor = "xm" + this.props.backgroundColor;
        }

        var containerStyle = {
          backgroundColor: backgroundColor
        };
        return _react.default.createElement(_reactNative.SafeAreaView, {
          style: [containerStyle, {
            paddingTop: _reactNative.StatusBar.currentHeight
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            minHeight: containerHeight
          }, this.props.useOrientation ? {} : {
            width: width
          }]
        }, this.renderIcons(leftIcons), this.renderTitle(), this.renderIcons(rightIcons)));
      }
    }]);
    return NavigationBar;
  }(_react.Component);

  NavigationBar.propTypes = {
    type: _propTypes.default.oneOf([TYPE.DARK, TYPE.LIGHT]),
    useOrientation: _propTypes.default.bool,
    style: _propTypes.default.object,
    left: _propTypes.default.arrayOf(_propTypes.default.shape({
      key: _propTypes.default.string,
      onPress: _propTypes.default.func,
      disable: _propTypes.default.bool,
      accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    right: _propTypes.default.array,
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    subtitleStyle: _propTypes.default.shape({
      fontFamily: _propTypes.default.string,
      fontSize: _propTypes.default.number,
      colorType: _propTypes.default.oneOf(['normal', 'warning', 'exception'])
    }),
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    titleStyle: _propTypes.default.shape({
      fontSize: _propTypes.default.number
    }),
    allowFontScaling: _propTypes.default.bool,
    backgroundColor: _propTypes.default.any,
    onPressTitle: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  NavigationBar.defaultProps = {
    type: TYPE.LIGHT,
    left: [],
    right: [],
    subtitleStyle: {
      fontFamily: 'sans-serif',
      colorType: 'normal',
      fontSize: 14
    },
    allowFontScaling: true,
    titleNumberOfLines: 1,
    subtitleNumberOfLines: 1,
    useOrientation: false,
    titleStyle: {
      fontSize: 18
    }
  };
  NavigationBar.TYPE = TYPE;
  NavigationBar.ICON = ICON;
  NavigationBar.contextType = _configProvider.ConfigContext;

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingHorizontal: paddingHorizontal,
      flexDirection: 'row',
      alignItems: 'center'
    },
    titleContainer: {
      flex: 1,
      alignSelf: 'center',
      justifyContent: 'center',
      alignItems: 'stretch',
      marginHorizontal: 5
    },
    title: (0, _objectSpread2.default)({
      fontSize: 18,
      lineHeight: 24,
      textAlignVertical: 'center',
      textAlign: 'center'
    }, _font.FontPrimary),
    titleView: (0, _objectSpread2.default)({
      fontSize: 16,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    }, _font.FontPrimary),
    subtitle: (0, _objectSpread2.default)({
      fontSize: 14,
      lineHeight: 18,
      textAlignVertical: 'center',
      textAlign: 'center'
    }, _font.FontSecondary),
    icon: {
      position: 'absolute',
      width: iconSize,
      height: iconSize
    },
    dot: {
      width: iconSize,
      height: iconSize
    }
  });

  var _default = NavigationBar;
  exports.default = _default;
},22858,[14308,14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22435,22456,22795,22426,22420,22423,23041,22933]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Card", {
    enumerable: true,
    get: function get() {
      return _Card.default;
    }
  });
  Object.defineProperty(exports, "CardProps", {
    enumerable: true,
    get: function get() {
      return _Card.CardProps;
    }
  });
  Object.defineProperty(exports, "MHCard", {
    enumerable: true,
    get: function get() {
      return _MHCard.default;
    }
  });
  Object.defineProperty(exports, "MHCardProps", {
    enumerable: true,
    get: function get() {
      return _MHCard.MHCardProps;
    }
  });
  Object.defineProperty(exports, "ModeCard", {
    enumerable: true,
    get: function get() {
      return _ModeCard.default;
    }
  });
  Object.defineProperty(exports, "ModeCardProps", {
    enumerable: true,
    get: function get() {
      return _ModeCard.ModeCardProps;
    }
  });
  Object.defineProperty(exports, "IndependentCard", {
    enumerable: true,
    get: function get() {
      return _IndependentCard.default;
    }
  });
  Object.defineProperty(exports, "GearCard", {
    enumerable: true,
    get: function get() {
      return _GearCard.default;
    }
  });
  Object.defineProperty(exports, "ListCard", {
    enumerable: true,
    get: function get() {
      return _ListCard.default;
    }
  });

  var _Card = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  var _MHCard = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));

  var _ModeCard = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var _IndependentCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _GearCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _ListCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
},22861,[14305,14308,22864,22870,22873,22876,23299,23302]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeShadow = _$$_REQUIRE(_dependencyMap[10]);

  var _CardBase = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var DURATION = 250;
  var DEFAULT_STYLE = {
    HEIGHT: 66,
    WIDTH: width - 30,
    RADIUS: 8,
    MARGIN_TOP: {
      marginTop: 15
    }
  };

  var Card = function (_React$Component) {
    (0, _inherits2.default)(Card, _React$Component);

    function Card(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, Card);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Card).call(this, props, context));
      (0, _reportDecorator.referenceReport)('Card');
      _this.state = {
        showShadow: _this.props.visible && _this.props.showShadow
      };
      return _this;
    }

    (0, _createClass2.default)(Card, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        var _this2 = this;

        if (newProps.showShadow === false) return;
        if (newProps.visible === this.props.visible) return;

        if (newProps.visible === false) {
          this.setState({
            showShadow: false
          });
        } else if (newProps.visible === true) {
          setTimeout(function () {
            return _this2.setState({
              showShadow: true
            });
          }, DURATION);
        }
      }
    }, {
      key: "renderCardIOS",
      value: function renderCardIOS() {
        var shadowIOS = this.props.showShadow ? {
          position: 'relative',
          shadowColor: this.props.shadowColor,
          shadowOpacity: this.props.shadowOpacity,
          shadowOffset: {
            width: 0,
            height: 8
          }
        } : {};

        var cardStyle = _reactNative.StyleSheet.flatten([{}, DEFAULT_STYLE.MARGIN_TOP, this.props.cardStyle, shadowIOS]);

        return _react.default.createElement(_CardBase.default, (0, _extends2.default)({}, this.props, {
          cardStyle: cardStyle
        }));
      }
    }, {
      key: "renderCardAndroid",
      value: function renderCardAndroid() {
        if (!this.state.showShadow) {
          var cardStyle = _reactNative.StyleSheet.flatten([{}, DEFAULT_STYLE.MARGIN_TOP, this.props.cardStyle]);

          return _react.default.createElement(_CardBase.default, (0, _extends2.default)({}, this.props, {
            cardStyle: cardStyle
          }));
        } else {
          var _this$props$cardStyle = this.props.cardStyle,
              _width = _this$props$cardStyle.width,
              height = _this$props$cardStyle.height,
              borderRadius = _this$props$cardStyle.borderRadius;

          var _this$getCorrectStyle = this.getCorrectStyle(),
              shadowAndroidStyle = _this$getCorrectStyle.shadowAndroidStyle,
              _cardStyle = _this$getCorrectStyle.cardStyle;

          var shadowAndroid = {
            width: _width || DEFAULT_STYLE.WIDTH,
            height: height || DEFAULT_STYLE.HEIGHT,
            radius: borderRadius || DEFAULT_STYLE.RADIUS,
            color: this.props.shadowColor,
            border: 10,
            opacity: this.props.shadowOpacity,
            x: 0,
            y: 6,
            style: shadowAndroidStyle
          };
          return _react.default.createElement(_reactNativeShadow.BoxShadow, {
            setting: shadowAndroid
          }, _react.default.createElement(_CardBase.default, (0, _extends2.default)({}, this.props, {
            cardStyle: _cardStyle
          })));
        }
      }
    }, {
      key: "getCorrectStyle",
      value: function getCorrectStyle() {
        var _this3 = this;

        var shadowAndroidStyle = (0, _extends2.default)({}, DEFAULT_STYLE.MARGIN_TOP);
        var cardStyle = {};
        Object.keys(this.props.cardStyle).forEach(function (key) {
          if (key.toString().startsWith('margin')) {
            shadowAndroidStyle[key] = _this3.props.cardStyle[key];
          } else {
            cardStyle[key] = _this3.props.cardStyle[key];
          }
        });
        return {
          shadowAndroidStyle: shadowAndroidStyle,
          cardStyle: cardStyle
        };
      }
    }, {
      key: "render",
      value: function render() {
        return _reactNative.Platform.select({
          android: this.renderCardAndroid(),
          ios: this.renderCardIOS()
        });
      }
    }]);
    return Card;
  }(_react.default.Component);

  Card.propTypes = {
    innerView: _propTypes.default.object,
    icon: _propTypes.default.number,
    text: _propTypes.default.string,
    visible: _propTypes.default.bool,
    showDismiss: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    dismiss: _propTypes.default.func,
    showShadow: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    cardStyle: _propTypes.default.object,
    iconStyle: _propTypes.default.object,
    textStyle: _propTypes.default.object,
    underlayColor: _propTypes.default.string,
    shadowColor: _propTypes.default.string,
    shadowOpacity: _propTypes.default.number,
    unlimitedHeightEnable: _propTypes.default.bool,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    dismissAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    dismissAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Card.defaultProps = {
    visible: true,
    showDismiss: false,
    disabled: false,
    showShadow: true,
    cardStyle: {},
    shadowColor: '#000',
    shadowOpacity: 0.03,
    unlimitedHeightEnable: false,
    allowFontScaling: true
  };
  var _default = Card;
  exports.default = _default;
},22864,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13699,22867,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var DURATION_OUT = 250;
  var DURATION_IN = 250;
  var DEFAULT_STYLE = {
    MARGIN_H: 15,
    HEIGHT: 66,
    WIDTH: width - 30,
    ICON_SIZE: 35,
    CLOSE_AREA: 30,
    CLOSE_SIZE: 20
  };

  var CardBase = function (_React$Component) {
    (0, _inherits2.default)(CardBase, _React$Component);

    function CardBase(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, CardBase);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CardBase).call(this, props, context));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onPress = _this$props.onPress;

        if (disabled) {
          return;
        }

        if (onPress && actionName === 'activate') {
          onPress();
        }
      };

      var _this$props$cardStyle = _this.props.cardStyle,
          height = _this$props$cardStyle.height,
          marginTop = _this$props$cardStyle.marginTop;
      _this.cardHeight = height || DEFAULT_STYLE.HEIGHT;
      var initValue = _this.props.visible ? 1 : 0;
      _this.height = new _reactNative.Animated.Value(initValue);
      _this.opacity = new _reactNative.Animated.Value(initValue);
      _this.marginTop = marginTop || 0;
      return _this;
    }

    (0, _createClass2.default)(CardBase, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.height.addListener(function (e) {
          _this2.refCard && _this2.refCard.setNativeProps({
            marginTop: _this2.marginTop * e.value
          });
        });
      }
    }, {
      key: "renderInner",
      value: function renderInner() {
        if (this.props.innerView === undefined) {
          var theme = this.context.theme;
          var _this$props2 = this.props,
              icon = _this$props2.icon,
              text = _this$props2.text,
              iconStyle = _this$props2.iconStyle,
              textStyle = _this$props2.textStyle;
          var textLine = this.props.numberOfLines == undefined ? 1 : this.props.numberOfLines;
          if (textLine < 0) textLine = 0;
          return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({
            style: [styles.innerContainer, {
              opacity: this.opacity
            }]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: this.props.onPress ? _accessibilityHelper.AccessibilityRoles.button : _accessibilityHelper.AccessibilityRoles.text,
            accessibilityHint: this.props.accessibilityHint || (this.props.onPress ? text : ''),
            accessibilityState: {
              disabled: !!this.props.disabled
            }
          }), {
            accessibilityActions: [{
              name: 'activate'
            }],
            onAccessibilityAction: this.onAccessibilityAction
          }), icon ? _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
            style: [styles.innerIcon, iconStyle],
            source: icon,
            resizeMode: "contain"
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          }))) : null, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: [styles.innerText, {
              color: theme.colorBlack
            }, textStyle],
            numberOfLines: textLine,
            ellipsizeMode: "tail",
            allowFontScaling: this.props.allowFontScaling
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: true
          })), text || ''));
        }

        return _react.default.createElement(_reactNative.Animated.View, {
          style: [{
            flex: 1
          }, {
            opacity: this.opacity
          }]
        }, this.props.innerView);
      }
    }, {
      key: "renderClose",
      value: function renderClose() {
        var _this3 = this;

        if (!this.props.showDismiss) return null;
        return _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: styles.closeArea,
          underlayColor: "transparent",
          onPress: function onPress() {
            return _this3.dismiss();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.dismissAccessibilityLabel || 'close',
          accessibilityHint: this.props.dismissAccessibilityHint || 'close'
        })), _react.default.createElement(_reactNative.Animated.Image, {
          style: [styles.close, {
            opacity: this.opacity
          }],
          source: _resources.Images.common.close
        }));
      }
    }, {
      key: "getCorrectStyle",
      value: function getCorrectStyle(cardStyle) {
        var animatedViewStyle = {};
        var containerStyle = {};
        Object.keys(cardStyle).forEach(function (key) {
          if (key.toString().startsWith('margin') || key.toString() === 'width') {
            animatedViewStyle[key] = cardStyle[key];
          } else {
            containerStyle[key] = cardStyle[key];
          }
        });
        return {
          animatedViewStyle: animatedViewStyle,
          containerStyle: containerStyle
        };
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var theme = this.context.theme;
        var toValue = this.props.visible ? 1 : 0;
        var underlayColor = theme == null ? undefined : theme.listUnderlayColor;
        if (this.props.underlayColor) underlayColor = this.props.underlayColor;

        if (!this.props.visible) {
          _reactNative.Animated.parallel([_reactNative.Animated.timing(this.height, {
            toValue: toValue,
            duration: DURATION_OUT,
            easing: _reactNative.Easing.ease
          }), _reactNative.Animated.timing(this.opacity, {
            toValue: toValue,
            duration: 100,
            easing: _reactNative.Easing.ease
          })], {
            stopTogether: false
          }).start();
        } else {
          _reactNative.Animated.parallel([_reactNative.Animated.timing(this.opacity, {
            toValue: toValue,
            duration: 125,
            easing: _reactNative.Easing.ease,
            delay: 125
          }), _reactNative.Animated.timing(this.height, {
            toValue: toValue,
            duration: DURATION_IN,
            easing: _reactNative.Easing.ease
          })]).start();
        }

        var cardStyle = _reactNative.StyleSheet.flatten([styles.container, this.props.cardStyle]);

        var _this$getCorrectStyle = this.getCorrectStyle(cardStyle),
            animatedViewStyle = _this$getCorrectStyle.animatedViewStyle,
            containerStyle = _this$getCorrectStyle.containerStyle;

        return _react.default.createElement(_reactNative.Animated.View, {
          ref: function ref(_ref2) {
            _this4.refCard = _ref2;
          },
          style: [animatedViewStyle, {
            opacity: this.opacity,
            height: this.props.unlimitedHeightEnable ? undefined : this.height.interpolate({
              inputRange: [0, 1],
              outputRange: [0, this.cardHeight]
            })
          }]
        }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: [{
            backgroundColor: theme.colorForeground
          }, containerStyle, {
            flex: 1
          }],
          underlayColor: underlayColor,
          disabled: this.props.disabled,
          onPress: this.props.onPress
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, this.renderInner(), this.renderClose())));
      }
    }, {
      key: "dismiss",
      value: function dismiss() {
        this.props.dismiss && this.props.dismiss();
      }
    }]);
    return CardBase;
  }(_react.default.Component);

  exports.default = CardBase;
  CardBase.contextType = _configProvider.ConfigContext;
  CardBase.propTypes = {
    innerView: _propTypes.default.object,
    icon: _propTypes.default.number,
    text: _propTypes.default.string,
    showDismiss: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    dismiss: _propTypes.default.func,
    visible: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    cardStyle: _propTypes.default.object,
    iconStyle: _propTypes.default.object,
    textStyle: _propTypes.default.object,
    underlayColor: _propTypes.default.string,
    unlimitedHeightEnable: _propTypes.default.bool,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    dismissAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    dismissAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  CardBase.defaultProps = {
    showDismiss: false,
    disabled: false,
    visible: true,
    unlimitedHeightEnable: false,
    allowFontScaling: true
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: DEFAULT_STYLE.WIDTH
    },
    innerContainer: {
      flex: 1,
      alignItems: 'center',
      flexDirection: 'row',
      paddingHorizontal: DEFAULT_STYLE.MARGIN_H
    },
    innerIcon: {
      width: DEFAULT_STYLE.ICON_SIZE,
      height: DEFAULT_STYLE.ICON_SIZE,
      marginRight: DEFAULT_STYLE.MARGIN_H
    },
    innerText: {
      flex: 1,
      fontSize: 14
    },
    closeArea: {
      width: DEFAULT_STYLE.CLOSE_AREA,
      height: DEFAULT_STYLE.CLOSE_AREA,
      position: 'absolute',
      top: 0,
      right: 0,
      justifyContent: 'center',
      alignItems: 'center'
    },
    close: {
      width: DEFAULT_STYLE.CLOSE_SIZE,
      height: DEFAULT_STYLE.CLOSE_SIZE
    }
  });
},22867,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22426,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var CARD_TYPE = {
    NORMAL: 'normal',
    SWITCH: 'switch'
  };
  Object.freeze(CARD_TYPE);
  var CARD_RADIUS_TYPE = {
    ALL: 'all',
    NONE: 'none',
    TOP: 'top',
    BOTTOM: 'bottom'
  };
  Object.freeze(CARD_RADIUS_TYPE);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var cardMargin = 10;
  var cardWidth = width - 20;
  var cardHeight = 80;
  var cardPadding = 20;
  var ICON_SIZE = 40;

  var ARROW_SIZE = _reactNative.Platform.select({
    android: 26,
    ios: 24
  });

  var disabledOpacity = 0.35;

  var MHCard = function (_React$Component) {
    (0, _inherits2.default)(MHCard, _React$Component);

    function MHCard(props) {
      var _CARD_RADIUS_TYPE$ALL;

      var _this;

      (0, _classCallCheck2.default)(this, MHCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MHCard).call(this, props));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            cardType = _this$props.cardType,
            onPress = _this$props.onPress,
            onValueChange = _this$props.onValueChange,
            switchValue = _this$props.switchValue;

        if (disabled) {
          return;
        }

        if (actionName === 'activate' && cardType === CARD_TYPE.SWITCH && typeof onValueChange === 'function') {
          onValueChange(!switchValue);
        }

        if (actionName === 'activate' && cardType === CARD_TYPE.NORMAL && typeof onPress === 'function') {
          onPress();
        }
      };

      (0, _reportDecorator.referenceReport)('MHCard');
      _this.radiusStyle = (_CARD_RADIUS_TYPE$ALL = {}, (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.ALL, {
        borderRadius: 10
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.NONE, {
        borderRadius: 0
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.TOP, {
        borderTopLeftRadius: 10,
        borderTopRightRadius: 10
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.BOTTOM, {
        borderBottomLeftRadius: 10,
        borderBottomRightRadius: 10
      }), _CARD_RADIUS_TYPE$ALL)[_this.props.cardRadiusType];
      _this.cardStyle = _reactNative.StyleSheet.flatten([_this.radiusStyle, {
        width: cardWidth,
        height: cardHeight,
        marginTop: _this.props.marginTop
      }]);
      return _this;
    }

    (0, _createClass2.default)(MHCard, [{
      key: "renderInnerView",
      value: function renderInnerView() {
        var theme = this.context.theme;
        var opacityStyle = {
          opacity: this.props.disabled ? disabledOpacity : 1
        };
        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 1 : this.props.subtitleNumberOfLines;
        if (subtitleLine < 0) subtitleLine = 0;
        var rightTextLine = this.props.rightTextNumberOfLines == undefined ? 2 : this.props.rightTextNumberOfLines;
        if (rightTextLine < 0) rightTextLine = 0;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, this.radiusStyle, opacityStyle, this.props.style]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: this.props.cardType === CARD_TYPE.SWITCH ? _accessibilityHelper.AccessibilityRoles.switch : this.props.onPress ? _accessibilityHelper.AccessibilityRoles.button : _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: this.props.cardType === CARD_TYPE.SWITCH ? {
            disabled: !!this.props.disabled,
            checked: this.props.switchValue
          } : {
            disabled: !!this.props.disabled
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.iconContainer, this.props.iconContainerStyle]
        }, _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
          style: [styles.icon, this.props.iconStyle],
          source: this.props.icon,
          resizeMode: "contain"
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })))), _react.default.createElement(_reactNative.View, {
          style: styles.textContainer
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [_resources.Styles.common.title, this.props.unlimitedHeightEnable ? {
            height: undefined,
            lineHeight: undefined
          } : {}, this.props.titleStyle],
          numberOfLines: titleLine
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title || ''), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.subtitle, {
            color: theme.colorGrayNormal
          }, this.props.unlimitedHeightEnable ? {
            height: undefined,
            lineHeight: undefined
          } : {}, this.props.subtitleStyle],
          numberOfLines: subtitleLine
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle) : null), this.props.rightText ? _react.default.createElement(_reactNative.View, {
          style: {
            maxWidth: '33%'
          }
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.rightText, {
            color: theme.colorBlack
          }, this.props.unlimitedHeightEnable ? {
            height: undefined,
            lineHeight: undefined
          } : {}, this.props.rightTextStyle],
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: rightTextLine
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.rightText || '')) : null), this.renderRight());
      }
    }, {
      key: "renderRight",
      value: function renderRight() {
        if (this.props.cardType === CARD_TYPE.NORMAL) {
          if (this.props.hideArrow) return null;
          return _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
            style: styles.arrow,
            source: _resources.Images.common.right_arrow,
            resizeMode: "contain"
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })));
        }

        if (this.props.cardType === CARD_TYPE.SWITCH) {
          return _react.default.createElement(_Switch.default, (0, _extends2.default)({
            value: this.props.switchValue
          }, this.props, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })));
        }
      }
    }, {
      key: "render",
      value: function render() {
        var cardStyle = _reactNative.StyleSheet.flatten([this.cardStyle, !this.props.allowFontScaling ? {
          height: undefined
        } : {}]);

        return _react.default.createElement(_Card.default, (0, _extends2.default)({
          innerView: this.renderInnerView(),
          cardStyle: cardStyle
        }, this.props));
      }
    }]);
    return MHCard;
  }(_react.default.Component);

  MHCard.contextType = _configProvider.ConfigContext;
  MHCard.propTypes = {
    cardType: _propTypes.default.oneOf([CARD_TYPE.NORMAL, CARD_TYPE.SWITCH]),
    cardRadiusType: _propTypes.default.oneOf([CARD_RADIUS_TYPE.ALL, CARD_RADIUS_TYPE.NONE, CARD_RADIUS_TYPE.TOP, CARD_RADIUS_TYPE.BOTTOM]),
    style: _propTypes.default.object,
    iconContainerStyle: _propTypes.default.object,
    icon: _propTypes.default.number.isRequired,
    iconStyle: _propTypes.default.object,
    title: _propTypes.default.string.isRequired,
    titleStyle: _propTypes.default.object,
    subtitle: _propTypes.default.string,
    subtitleStyle: _propTypes.default.object,
    rightText: _propTypes.default.string,
    rightTextStyle: _propTypes.default.object,
    hideArrow: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    switchValue: _propTypes.default.bool,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    onValueChange: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    visible: _propTypes.default.bool,
    showShadow: _propTypes.default.bool,
    marginTop: _propTypes.default.number,
    unlimitedHeightEnable: _propTypes.default.bool,
    allowFontScaling: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    rightTextNumberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  MHCard.defaultProps = {
    cardType: CARD_TYPE.NORMAL,
    cardRadiusType: CARD_RADIUS_TYPE.ALL,
    icon: _resources.Images.common.mihome,
    hideArrow: false,
    switchValue: false,
    disabled: false,
    visible: true,
    showShadow: false,
    marginTop: 0,
    unlimitedHeightEnable: false,
    allowFontScaling: true
  };
  MHCard.CARD_TYPE = CARD_TYPE;
  MHCard.CARD_RADIUS_TYPE = CARD_RADIUS_TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      paddingHorizontal: cardPadding,
      flexDirection: 'row',
      alignItems: 'center'
    },
    iconContainer: {
      width: ICON_SIZE,
      height: ICON_SIZE,
      justifyContent: 'center',
      alignItems: 'center'
    },
    icon: {
      width: ICON_SIZE,
      height: ICON_SIZE,
      borderRadius: 20
    },
    textContainer: {
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center',
      marginLeft: 14
    },
    titleContainer: {
      flex: 1,
      justifyContent: 'center'
    },
    subtitle: {
      fontSize: 12,
      lineHeight: 16
    },
    rightText: {
      paddingLeft: 10,
      textAlign: 'right',
      fontSize: 16
    },
    arrow: {
      width: ARROW_SIZE,
      height: ARROW_SIZE
    }
  });

  var _default = MHCard;
  exports.default = _default;
},22870,[14305,14344,14317,14320,14323,14371,14377,14386,10318,10297,10033,22453,22864,22450,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _resources = _$$_REQUIRE(_dependencyMap[13]);

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

  var radiusValue = 10;
  var iconLength = 56;
  var padding3 = 30;
  var padding4 = 28;
  var padding5 = 20;
  var CARD_RADIUS_TYPE = {
    ALL: 'all',
    NONE: 'none',
    TOP: 'top',
    BOTTOM: 'bottom'
  };

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var ModeCard = function (_Component) {
    (0, _inherits2.default)(ModeCard, _Component);

    function ModeCard(props) {
      var _CARD_RADIUS_TYPE$ALL;

      var _this;

      (0, _classCallCheck2.default)(this, ModeCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ModeCard).call(this, props));

      _this.createModesRN = function () {
        var _this$props = _this.props,
            modes = _this$props.modes,
            descriptionStyle = _this$props.descriptionStyle,
            activeDescriptionStyle = _this$props.activeDescriptionStyle,
            accessible = _this$props.accessible;
        var theme = _this.context.theme;
        var length = modes.length;
        var modeStyle = {};
        var iconStyle = {};

        if (length === 4) {
          iconLength = 50;
          modeStyle = {
            width: iconLength,
            marginRight: 33
          };
          iconStyle = {
            width: iconLength,
            height: iconLength
          };
        } else if (length === 5) {
          iconLength = 46;
          modeStyle = {
            width: iconLength,
            marginRight: 17
          };
          iconStyle = {
            width: iconLength,
            height: iconLength
          };
        }

        var modesRN = modes.map(function (mode, index) {
          var isDisabled = mode.isDisabled,
              isActive = mode.isActive,
              icon = mode.icon,
              description = mode.description,
              isPressing = mode.isPressing,
              accessibilityLabel = mode.accessibilityLabel,
              accessibilityHint = mode.accessibilityHint;
          var iconSource = -1;
          var iconOpacity = 1;
          var descriptionRN = null;
          var last = {};
          var activeDescription = {};
          var descriptionOpacity = 1;

          if (isDisabled && isActive) {
            iconSource = icon.activeDisabled;
          } else if (isDisabled) {
            iconSource = icon.normal;
            iconOpacity = 0.3;
          } else if (isActive) {
            iconSource = icon.active;
            activeDescription = {
              color: _resources.Styles.common.MHGreen
            };
            (0, _extends2.default)(activeDescription, activeDescriptionStyle);
          } else if (isPressing) {
            iconSource = icon.press;
          } else {
            iconSource = icon.normal;
          }

          if (isDisabled) {
            descriptionOpacity = 0.3;
          }

          if (description && length < 5) {
            var style = _reactNative.StyleSheet.flatten([styles.description, _this.props.unlimitedHeightEnable ? {
              fontSize: undefined,
              lineHeight: undefined
            } : {}]);

            var textLine = _this.props.numberOfLines == undefined ? 1 : _this.props.numberOfLines;
            if (textLine < 0) textLine = 0;
            descriptionRN = _react.default.createElement(_reactNative.Text, {
              style: [{
                color: theme.colorGrayLight
              }, style, descriptionStyle, activeDescription, {
                opacity: descriptionOpacity
              }],
              numberOfLines: textLine
            }, ' ', description);
          }

          if (index === length - 1) {
            last = {
              marginRight: 0
            };
          }

          return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
            key: index,
            onPressIn: function onPressIn() {
              _this.pressInIcon(index);
            },
            onPressOut: function onPressOut() {
              _this.pressOutIcon(index);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.radio,
            accessibilityLabel: accessibilityLabel || description,
            accessibilityHint: accessibilityHint,
            accessibilityState: {
              disabled: !!isDisabled,
              selected: !!isActive
            }
          })), _react.default.createElement(_reactNative.View, {
            style: [styles.mode, modeStyle, last]
          }, _react.default.createElement(_reactNative.Image, {
            style: [styles.icon, {
              opacity: iconOpacity
            }, iconStyle],
            resizeMode: "contain",
            source: iconSource
          }), descriptionRN));
        });
        return modesRN;
      };

      _this.pressInIcon = function (index) {
        var _this$props2 = _this.props,
            pressIn = _this$props2.pressIn,
            modesKey = _this$props2.modesKey;

        if (pressIn && modesKey) {
          pressIn(index, modesKey);
        }
      };

      _this.pressOutIcon = function (index) {
        var _this$props3 = _this.props,
            pressOut = _this$props3.pressOut,
            modesKey = _this$props3.modesKey;

        if (pressOut && modesKey) {
          pressOut(index, modesKey);
        }
      };

      _this.renderModeCard = function () {
        var theme = _this.context.theme;
        var modes = _this.props.modes;
        var length = modes.length;
        var cardPadding = {};

        if (length === 4) {
          cardPadding = {
            paddingTop: padding4,
            paddingBottom: padding4
          };
        } else if (length === 5) {
          cardPadding = {
            paddingTop: padding5,
            paddingBottom: padding5
          };
        }

        return _react.default.createElement(_reactNative.View, {
          style: [styles.card, {
            backgroundColor: theme.colorForeground
          }, _this.radius, cardPadding]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.main
        }, _this.createModesRN()));
      };

      (0, _reportDecorator.referenceReport)('ModeCard');
      _this.cardWrapStyle = {};
      var _modes = props.modes;
      var _length = _modes.length;
      var cardWrapStyle = {
        height: 116
      };

      var hasDescription = _modes.some(function (mode) {
        return mode.description;
      });

      if (_length === 3 && hasDescription) {
        cardWrapStyle = {
          height: 140
        };
      } else if (_length === 4 && !hasDescription) {
        cardWrapStyle = {
          height: 106
        };
      } else if (_length === 4 && hasDescription) {
        cardWrapStyle = {
          height: 130
        };
      } else if (_length === 5) {
        cardWrapStyle = {
          height: 86
        };
      }

      _this.cardWrapStyle = cardWrapStyle;
      _this.radius = (_CARD_RADIUS_TYPE$ALL = {}, (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.ALL, {
        borderRadius: radiusValue
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.NONE, {
        borderRadius: 0
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.TOP, {
        borderTopLeftRadius: radiusValue,
        borderTopRightRadius: radiusValue
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.BOTTOM, {
        borderBottomLeftRadius: radiusValue,
        borderBottomRightRadius: radiusValue
      }), _CARD_RADIUS_TYPE$ALL)[props.radiusType];
      return _this;
    }

    (0, _createClass2.default)(ModeCard, [{
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "render",
      value: function render() {
        var _this$props4 = this.props,
            showShadow = _this$props4.showShadow,
            modeCardStyle = _this$props4.modeCardStyle;
        var defaultCardStyle = {
          marginTop: 0,
          width: width - 20
        };
        var mixCardStyle = (0, _objectSpread2.default)({}, defaultCardStyle, modeCardStyle, this.cardWrapStyle, this.radius, !this.props.allowFontScaling ? {
          height: undefined
        } : {});
        return _react.default.createElement(_Card.default, {
          showShadow: showShadow,
          disabled: true,
          innerView: this.renderModeCard(),
          cardStyle: mixCardStyle,
          allowFontScaling: this.props.allowFontScaling,
          unlimitedHeightEnable: this.props.unlimitedHeightEnable,
          numberOfLines: this.props.numberOfLines
        });
      }
    }]);
    return ModeCard;
  }(_react.Component);

  ModeCard.contextType = _configProvider.ConfigContext;
  ModeCard.defaultProps = {
    radiusType: 'all',
    modes: [{
      description: '',
      icon: {},
      isDisabled: false,
      isActive: false,
      isPressing: false
    }],
    pressIn: function pressIn() {},
    pressOut: function pressOut() {},
    modesKey: '',
    descriptionStyle: {},
    activeDescriptionStyle: {},
    showShadow: true,
    modeCardStyle: {},
    unlimitedHeightEnable: false,
    allowFontScaling: true
  };
  ModeCard.propTypes = {
    radiusType: _propTypes.default.string,
    modesKey: _propTypes.default.string,
    modes: _propTypes.default.arrayOf(_propTypes.default.shape({
      isDisabled: _propTypes.default.bool,
      isActive: _propTypes.default.bool,
      icon: _propTypes.default.shape({
        normal: _propTypes.default.any,
        press: _propTypes.default.any,
        active: _propTypes.default.any,
        activeDisabled: _propTypes.default.any
      }),
      description: _propTypes.default.string,
      isPressing: _propTypes.default.bool,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    pressIn: _propTypes.default.func,
    pressOut: _propTypes.default.func,
    descriptionStyle: _propTypes.default.object,
    activeDescriptionStyle: _propTypes.default.object,
    showShadow: _propTypes.default.bool,
    modeCardStyle: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };

  var styles = _reactNative.StyleSheet.create({
    card: {
      paddingTop: padding3,
      paddingBottom: padding3
    },
    main: {
      flexDirection: 'row',
      justifyContent: 'center'
    },
    mode: {
      width: iconLength,
      marginRight: 40
    },
    icon: {
      width: iconLength,
      height: iconLength
    },
    description: {
      fontSize: 13,
      marginTop: 10,
      textAlign: 'center',
      lineHeight: 14
    }
  });

  var _default = ModeCard;
  exports.default = _default;
},22873,[14308,14305,14314,14317,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22864,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[14]);

  var radiusValue = 10;
  var pictureLength = 40;
  var OFF_COLOR = '#f0f0f0';

  var IndependentCard = function (_Component) {
    (0, _inherits2.default)(IndependentCard, _Component);

    function IndependentCard(props) {
      var _this;

      (0, _classCallCheck2.default)(this, IndependentCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(IndependentCard).call(this, props));

      _this.changeSwitchValue = function () {
        var _this$props = _this.props,
            value = _this$props.value,
            changeValue = _this$props.changeValue,
            switchKey = _this$props.switchKey;

        if (changeValue) {
          changeValue(value, switchKey);
        }
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props2 = _this.props,
            disabled = _this$props2.disabled,
            disabledCard = _this$props2.disabledCard,
            changeValue = _this$props2.changeValue,
            value = _this$props2.value,
            switchKey = _this$props2.switchKey;

        if (disabled || disabledCard) {
          return;
        }

        if (actionName === 'activate' && typeof changeValue === 'function') {
          changeValue(value, switchKey);
        }
      };

      (0, _reportDecorator.referenceReport)('IndependentCard');
      _this.state = {
        radius: {}
      };
      return _this;
    }

    (0, _createClass2.default)(IndependentCard, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var radius = {};
        this.setState(function (state, props) {
          var radiusType = props.radiusType;

          switch (radiusType) {
            case 'none':
              radius = {};
              break;

            case 'top':
              radius = {
                borderTopLeftRadius: radiusValue,
                borderTopRightRadius: radiusValue
              };
              break;

            case 'bottom':
              radius = {
                borderBottomLeftRadius: radiusValue,
                borderBottomRightRadius: radiusValue
              };
              break;

            default:
              radius = {
                borderRadius: radiusValue
              };
          }

          return {
            radius: radius
          };
        });
      }
    }, {
      key: "render",
      value: function render() {
        var theme = this.context.theme;
        var _this$props3 = this.props,
            picture = _this$props3.picture,
            title1 = _this$props3.title1,
            title2 = _this$props3.title2,
            value = _this$props3.value,
            onTintColor = _this$props3.onTintColor,
            tintColor = _this$props3.tintColor,
            switchStyle = _this$props3.switchStyle,
            disabled = _this$props3.disabled,
            disabledCard = _this$props3.disabledCard,
            accessible = _this$props3.accessible,
            accessibilityLabel = _this$props3.accessibilityLabel,
            accessibilityHint = _this$props3.accessibilityHint;

        var subTitleRN = _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.title2, {
            color: theme.colorGrayNormal
          }],
          numberOfLines: 1
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), title2);

        var subTitle = title2 ? subTitleRN : null;
        var opacity = disabledCard ? 0.3 : 1;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.card, {
            opacity: opacity
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.switch,
          accessibilityLabel: accessibilityLabel,
          accessibilityHint: accessibilityHint,
          accessibilityState: {
            disabled: disabled,
            checked: !!value
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
          source: picture,
          style: styles.picture
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }))), _react.default.createElement(_reactNative.View, {
          style: styles.title
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: 1,
          style: [styles.title1, {
            color: theme.colorBlack
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), title1), subTitle), _react.default.createElement(_reactNative.View, {
          style: styles.switchView
        }, _react.default.createElement(_Switch.default, (0, _extends2.default)({
          value: value,
          onValueChange: this.changeSwitchValue,
          onTintColor: onTintColor,
          tintColor: tintColor,
          style: switchStyle,
          disabled: disabled
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })))));
      }
    }]);
    return IndependentCard;
  }(_react.Component);

  IndependentCard.contextType = _configProvider.ConfigContext;
  IndependentCard.defaultProps = {
    radiusType: 'all',
    picture: -1,
    title1: '',
    title2: '',
    value: false,
    switchKey: '',
    changeValue: function changeValue() {},
    onTintColor: '',
    tintColor: '',
    switchStyle: {},
    disabled: false,
    disabledCard: false
  };
  IndependentCard.propTypes = {
    radiusType: _propTypes.default.string,
    picture: _propTypes.default.number,
    title1: _propTypes.default.string,
    title2: _propTypes.default.string,
    switchKey: _propTypes.default.string,
    value: _propTypes.default.bool,
    changeValue: _propTypes.default.func,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    switchStyle: _propTypes.default.object,
    disabled: _propTypes.default.bool,
    disabledCard: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };

  var styles = _reactNative.StyleSheet.create({
    card: {
      flex: 1,
      height: 80,
      paddingLeft: 20,
      paddingRight: 20,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-between'
    },
    picture: {
      width: pictureLength,
      height: pictureLength,
      borderRadius: 20,
      marginRight: 14
    },
    title: {
      flex: 1
    },
    title1: {
      fontSize: 15
    },
    title2: {
      fontSize: 12
    },
    switchView: {
      paddingLeft: 30
    }
  });

  var _default = IndependentCard;
  exports.default = _default;
},22876,[14308,14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22450,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "DragGear", {
    enumerable: true,
    get: function get() {
      return _DragGear.default;
    }
  });
  Object.defineProperty(exports, "NormalGear", {
    enumerable: true,
    get: function get() {
      return _NormalGear.default;
    }
  });
  Object.defineProperty(exports, "SlideGear", {
    enumerable: true,
    get: function get() {
      return _SlideGear.default;
    }
  });

  var _DragGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _NormalGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
},22879,[14305,22882,22894,22897]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _Block = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Clickable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      screenWidth = _Dimensions$get.width;

  var DEFAULT_SIZE = 50;
  var DEFAULT_MARGIN = 12;
  var BIGGER_SIZE = 1.35;
  var dragStartAnimationConfig = {
    toValue: BIGGER_SIZE,
    duration: 50,
    useNativeDriver: true
  };
  var releaseAnimationConfig = {
    toValue: 1,
    duration: _reactNative.Platform.select({
      ios: 160,
      android: 100
    }),
    useNativeDriver: true
  };

  var DragGear = function (_React$Component) {
    (0, _inherits2.default)(DragGear, _React$Component);

    function DragGear(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, DragGear);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DragGear).call(this, props, context));
      (0, _reportDecorator.referenceReport)('DragGear');

      if (_this.props.options.length === 0) {
        _this.showNothing = true;
        return (0, _possibleConstructorReturn2.default)(_this);
      }

      var _this$getCorrectLayou = _this.getCorrectLayout(),
          optionWidth = _this$getCorrectLayou.optionWidth,
          margin = _this$getCorrectLayou.margin,
          containerWidth = _this$getCorrectLayou.containerWidth;

      _this.optionWidth = optionWidth;
      _this.margin = margin;
      _this.containerWidth = containerWidth;

      if (_this.optionWidth < 20) {
        _this.showNothing = true;

        _Logger.default.warn('在目前maxWidth下显示不了这么多选项，请重新规划');

        return (0, _possibleConstructorReturn2.default)(_this);
      }

      _this.state = {
        pan: new _reactNative.Animated.Value(0),
        moveX: new _reactNative.Animated.Value(0),
        scale: new _reactNative.Animated.Value(1),
        selectIndex: _this.props.selectIndex,
        currentOption: _this.props.options[_this.props.selectIndex],
        dragToValueMin: 0,
        dragToValueMax: 0
      };
      _this.offset = 0;
      _this.panResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
          return true;
        },
        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
          return false;
        },
        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
          return true;
        },
        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
          return true;
        },
        onShouldBlockNativeResponder: function onShouldBlockNativeResponder() {
          return false;
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return false;
        },
        onPanResponderGrant: _this._onPanResponderGrant.bind((0, _assertThisInitialized2.default)(_this)),
        onPanResponderMove: _reactNative.Animated.event([null, {
          dx: _this.state.pan,
          moveX: _this.state.moveX
        }]),
        onPanResponderRelease: _this._onPanResponderRelease.bind((0, _assertThisInitialized2.default)(_this))
      });
      return _this;
    }

    (0, _createClass2.default)(DragGear, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (this.showNothing) return;
        var selectIndex = newProps.selectIndex;

        if (selectIndex !== this.props.selectIndex) {
          if (selectIndex < 0 || selectIndex >= this.props.options.length) return;
          this.onPress(selectIndex);
        }
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        var _this2 = this;

        this.state.pan.addListener(function (e) {
          if (_this2.pressToChoose && _reactNative.Platform.OS === 'ios') {
            var moveX = _this2.currentCoord + e.value;

            var index = _this2.getClosetIndex(moveX);

            _this2.setState({
              currentOption: _this2.props.options[index]
            });
          }
        });

        if (_reactNative.Platform.OS === 'ios') {
          this.state.moveX.addListener(function (e) {
            var index = _this2.getClosetIndex(e.value);

            _this2.setState({
              currentOption: _this2.props.options[index]
            });
          });
        }
      }
    }, {
      key: "getClosetIndex",
      value: function getClosetIndex(moveX) {
        var adjustCoord = moveX - this.offset;
        var diffs = this.coords.map(function (coord) {
          return Math.abs(coord - adjustCoord);
        });
        return diffs.indexOf(Math.min.apply(Math, (0, _toConsumableArray2.default)(diffs)));
      }
    }, {
      key: "_onPanResponderGrant",
      value: function _onPanResponderGrant(e) {
        _reactNative.Animated.timing(this.state.scale, dragStartAnimationConfig).start();

        var pageX = e.nativeEvent.pageX;
        this.offset = pageX - this.currentCoord;
        this.pressToChoose = false;
      }
    }, {
      key: "_onPanResponderRelease",
      value: function _onPanResponderRelease(e, gesture) {
        var index = this.getClosetIndex(gesture.moveX);
        this.animated2TargetIndex(index);

        if (this.props.onSelect) {
          this.props.onSelect(index);
        }
      }
    }, {
      key: "animated2TargetIndex",
      value: function animated2TargetIndex(index) {
        var _this3 = this;

        this.offset = 0;
        this.setState({
          selectIndex: index
        }, function () {
          _this3.getDragRange(function () {
            _this3.state.pan.setValue(0);

            _reactNative.Animated.timing(_this3.state.scale, releaseAnimationConfig).start(function () {
              if (_reactNative.Platform.OS == 'android') {
                _this3.setState({
                  currentOption: _this3.props.options[index]
                });
              }
            });
          });
        });
      }
    }, {
      key: "getCorrectLayout",
      value: function getCorrectLayout() {
        var optionWidth = this.props.normalStyle.width || DEFAULT_SIZE;
        var _this$props = this.props,
            margin = _this$props.margin,
            maxWidth = _this$props.maxWidth;
        var length = this.props.options.length;
        this.length = length;
        var containerWidth = (optionWidth + margin) * length + margin;
        if (containerWidth <= maxWidth) return {
          optionWidth: optionWidth,
          margin: margin,
          containerWidth: containerWidth
        };
        var newOptionWidth = Math.floor(maxWidth / (length + (length + 1) * 0.5));
        var newMargin = newOptionWidth / 2;
        var newContainerWidth = (3 * length + 1) * newMargin;
        return {
          optionWidth: newOptionWidth,
          margin: newMargin,
          containerWidth: newContainerWidth
        };
      }
    }, {
      key: "calculateCoord",
      value: function calculateCoord() {
        var _this4 = this;

        this._container.measure(function (x, y, w, h, px, py) {
          var startCoord = x - _this4.optionWidth / 2;
          _this4.coords = [];

          for (var i = 0; i < _this4.props.options.length; i++) {
            _this4.coords[i] = startCoord + (_this4.optionWidth + _this4.margin) * (i + 1);
          }

          _this4.getDragRange();
        });
      }
    }, {
      key: "getDragRange",
      value: function getDragRange(callback) {
        var _this5 = this;

        this.currentCoord = this.coords[this.state.selectIndex];
        this.dragToValueArray = this.coords.map(function (coord) {
          return coord - _this5.currentCoord;
        });
        this.setState({
          dragToValueMin: this.dragToValueArray[0] || 0,
          dragToValueMax: this.dragToValueArray[this.length - 1] || 0
        }, function () {
          callback && callback();
        });
      }
    }, {
      key: "renderOptions",
      value: function renderOptions() {
        var _this6 = this;

        var style = _reactNative.StyleSheet.flatten([this.props.normalStyle, {
          width: this.optionWidth,
          height: this.optionWidth,
          borderRadius: this.optionWidth / 2,
          borderWidth: 0
        }]);

        var selectIndex = this.state.selectIndex;
        return this.props.options.map(function (option, index) {
          return _react.default.createElement(_Clickable.default, (0, _extends2.default)({
            key: option,
            allowFontScaling: _this6.props.allowFontScaling,
            numberOfLines: _this6.props.numberOfLines,
            onPress: function onPress() {
              return _this6.onPress(index);
            },
            text: option,
            select: selectIndex === index,
            style: style,
            textStyle: _this6.props.textStyle
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this6.props.accessible,
            accessibilityLabel: _this6.props.clickAccessibilityLables[index] || option,
            accessibilityHint: _this6.props.clickAccessibilityHints[index]
          })));
        });
      }
    }, {
      key: "renderDraggable",
      value: function renderDraggable() {
        var _this$state = this.state,
            min = _this$state.dragToValueMin,
            max = _this$state.dragToValueMax;
        if (min === undefined) return null;
        var position = {
          position: 'absolute',
          left: -min
        };
        var innerCircle = {
          width: this.optionWidth,
          height: this.optionWidth,
          borderRadius: this.optionWidth / 2,
          backgroundColor: this.props.selectColor,
          alignItems: 'center',
          justifyContent: 'center'
        };
        var touchArea = {
          width: this.optionWidth + this.margin * 2,
          height: this.optionWidth * BIGGER_SIZE,
          backgroundColor: 'transparent',
          alignItems: 'center',
          justifyContent: 'center'
        };
        var panStyle = {
          transform: [{
            translateX: this.state.pan.interpolate({
              inputRange: [min - 1, min, max, max + 1],
              outputRange: [min, min, max, max]
            })
          }, {
            scale: this.state.scale
          }]
        };
        return _react.default.createElement(_Block.default, {
          panHandlers: this.panResponder.panHandlers,
          style: [position, panStyle]
        }, _react.default.createElement(_reactNative.View, {
          style: touchArea
        }, _react.default.createElement(_reactNative.View, {
          style: innerCircle
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [this.props.textStyle, {
            color: '#fff'
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }), {
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: this.props.numberOfLines
        }), this.state.currentOption))));
      }
    }, {
      key: "render",
      value: function render() {
        var _this7 = this;

        if (this.showNothing) return null;
        var container = {
          width: this.containerWidth,
          height: this.optionWidth * BIGGER_SIZE
        };
        return _react.default.createElement(_reactNative.View, {
          onLayout: function onLayout() {
            return _this7.calculateCoord();
          },
          ref: function ref(container) {
            return _this7._container = container;
          },
          style: [this.props.containerStyle, styles.container, container]
        }, this.renderOptions(), this.renderDraggable());
      }
    }, {
      key: "onPress",
      value: function onPress(index) {
        var _this8 = this;

        this.pressToChoose = true;

        _reactNative.Animated.sequence([_reactNative.Animated.timing(this.state.scale, dragStartAnimationConfig), _reactNative.Animated.timing(this.state.pan, {
          toValue: this.dragToValueArray[index],
          duration: 200,
          useNativeDriver: true
        })]).start(function () {
          return _this8.animated2TargetIndex(index);
        });

        if (this.props.onSelect) {
          this.props.onSelect(index);
        }
      }
    }]);
    return DragGear;
  }(_react.default.Component);

  DragGear.propTypes = {
    options: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])).isRequired,
    containerStyle: _propTypes.default.object,
    normalStyle: _propTypes.default.object,
    textStyle: _propTypes.default.object,
    margin: _propTypes.default.number,
    maxWidth: _propTypes.default.number,
    selectColor: _propTypes.default.string,
    selectIndex: _propTypes.default.number,
    onSelect: _propTypes.default.func.isRequired,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    clickAccessibilityLables: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityLabel),
    clickAccessibilityHints: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityHint)
  };
  DragGear.defaultProps = {
    options: [],
    normalStyle: {},
    margin: DEFAULT_MARGIN,
    maxWidth: screenWidth,
    selectColor: '#f0ac3d',
    selectIndex: 0,
    allowFontScaling: true,
    clickAccessibilityLables: [],
    clickAccessibilityHints: []
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-evenly'
    }
  });

  var _default = DragGear;
  exports.default = _default;
},22882,[14305,14344,14359,14320,14323,14371,14377,14374,14386,10318,10297,10033,22885,22888,22891,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  var Block = function (_React$Component) {
    (0, _inherits2.default)(Block, _React$Component);

    function Block() {
      (0, _classCallCheck2.default)(this, Block);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Block).apply(this, arguments));
    }

    (0, _createClass2.default)(Block, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({
          style: this.props.style
        }, this.props.panHandlers), _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          onLongPress: this.props.onLongPress
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.children));
      }
    }]);
    return Block;
  }(_react.default.Component);

  exports.default = Block;
  Block.propTypes = {
    style: _propTypes.default.any,
    panHandlers: _propTypes.default.object,
    onLongPress: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };
},22885,[14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  var SIZE = 40;
  var TEXT_COLOR = '#bbb';
  var BORDER_COLOR = '#ccc';

  var Clickable = function (_React$Component) {
    (0, _inherits2.default)(Clickable, _React$Component);

    function Clickable() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Clickable);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Clickable)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.animatedValue = new _reactNative.Animated.Value(0);
      return _this;
    }

    (0, _createClass2.default)(Clickable, [{
      key: "render",
      value: function render() {
        var color = this.props.select ? '#fff' : TEXT_COLOR;
        var boderStyle = this.props.select ? {
          borderWidth: 0
        } : {
          borderColor: BORDER_COLOR,
          borderWidth: 1
        };
        var backgroundColor = this.props.select ? this.props.selectColor : '#fff';
        return _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.animationContainer, boderStyle, this.props.style, {
            backgroundColor: backgroundColor
          }]
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          onPress: this.props.onPress
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.radio,
          accessibilityLabel: this.props.accessibilityLabel || this.props.text,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            checked: !!this.props.select
          }
        })), _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.text, this.props.textStyle, {
            color: color
          }],
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: this.props.numberOfLines
        }, this.props.text))));
      }
    }]);
    return Clickable;
  }(_react.default.Component);

  exports.default = Clickable;
  Clickable.propTypes = {
    select: _propTypes.default.bool,
    selectColor: _propTypes.default.string,
    style: _propTypes.default.object,
    onPress: _propTypes.default.func.isRequired,
    text: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]).isRequired,
    textStyle: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Clickable.defaultProps = {
    select: false,
    selectColor: '#f0ac3d',
    allowFontScaling: true
  };

  var styles = _reactNative.StyleSheet.create({
    animationContainer: {
      width: SIZE,
      height: SIZE,
      borderRadius: 20
    },
    container: {
      flex: 1,
      justifyContent: 'center',
      alignItems: 'center'
    },
    text: {
      fontSize: 11,
      textAlign: 'center'
    }
  });
},22888,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var Logger = function () {
    function Logger() {
      (0, _classCallCheck2.default)(this, Logger);
    }

    (0, _createClass2.default)(Logger, null, [{
      key: "warn",
      value: function warn(message) {
        var styles = ["color: " + Logger.theme.warning.color, "background: " + Logger.theme.warning.background, 'padding: 5px', 'font-size: 14px'].join(';');
      }
    }]);
    return Logger;
  }();

  Logger.theme = {
    ok: {
      background: 'purple',
      color: 'white'
    },
    error: {
      background: 'red',
      color: 'white'
    },
    warning: {
      background: 'darkorange',
      color: 'white'
    },
    attention: {
      background: '#ffdc00',
      color: 'black'
    },
    success: {
      background: '#bada55',
      color: 'black'
    },
    info: {
      background: '#abdcfb',
      color: 'black'
    },
    default: {
      background: 'white',
      color: 'black'
    }
  };
  var _default = Logger;
  exports.default = _default;
},22891,[14305,14320,14323]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _Clickable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[11]);

  var _Logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      screenWidth = _Dimensions$get.width;

  var DEFAULT_SIZE = 50;
  var DEFAULT_MARGIN = 12;

  var NormalGear = function (_React$Component) {
    (0, _inherits2.default)(NormalGear, _React$Component);

    function NormalGear(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, NormalGear);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NormalGear).call(this, props, context));
      (0, _reportDecorator.referenceReport)('NormalGear');

      if (_this.props.options.length === 0) {
        _this.showNothing = true;
        return (0, _possibleConstructorReturn2.default)(_this);
      }

      var _this$getCorrectLayou = _this.getCorrectLayout(),
          optionWidth = _this$getCorrectLayou.optionWidth,
          margin = _this$getCorrectLayou.margin,
          containerWidth = _this$getCorrectLayou.containerWidth;

      _this.optionWidth = optionWidth;
      _this.margin = margin;
      _this.containerWidth = containerWidth;

      if (_this.optionWidth < 20) {
        _this.showNothing = true;

        _Logger.default.warn('在目前maxWidth下显示不了这么多选项，请重新规划');

        return (0, _possibleConstructorReturn2.default)(_this);
      }

      _this.selectArray = Array.from({
        length: _this.props.options.length
      }, function () {
        return false;
      });
      var selectArray = Array.from(_this.selectArray);
      selectArray[_this.props.selectIndex] = true;
      _this.state = {
        selectArray: selectArray
      };
      return _this;
    }

    (0, _createClass2.default)(NormalGear, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (this.showNothing) return;
        var selectIndex = newProps.selectIndex;

        if (selectIndex !== this.props.selectIndex) {
          if (selectIndex < 0 || selectIndex >= this.props.options.length) return;
          this.onPress(selectIndex);
        }
      }
    }, {
      key: "renderOptions",
      value: function renderOptions() {
        var _this2 = this;

        var style = _reactNative.StyleSheet.flatten([this.props.normalStyle, {
          width: this.optionWidth,
          height: this.optionWidth,
          borderRadius: this.optionWidth / 2
        }]);

        return this.props.options.map(function (option, index) {
          return _react.default.createElement(_Clickable.default, (0, _extends2.default)({
            key: option,
            allowFontScaling: _this2.props.allowFontScaling,
            numberOfLines: _this2.props.numberOfLines,
            select: _this2.state.selectArray[index],
            selectColor: _this2.props.selectColor,
            onPress: function onPress() {
              return _this2.onPress(index);
            },
            text: option,
            style: style,
            textStyle: _this2.props.textStyle
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityLabel: _this2.props.clickAccessibilityLables[index] || option,
            accessibilityHint: _this2.props.clickAccessibilityHints[index]
          })));
        });
      }
    }, {
      key: "getCorrectLayout",
      value: function getCorrectLayout() {
        var optionWidth = this.props.normalStyle.width || DEFAULT_SIZE;
        var _this$props = this.props,
            margin = _this$props.margin,
            maxWidth = _this$props.maxWidth;
        var length = this.props.options.length;
        var containerWidth = (optionWidth + margin) * length + margin;
        if (containerWidth <= maxWidth) return {
          optionWidth: optionWidth,
          margin: margin,
          containerWidth: containerWidth
        };
        var newOptionWidth = Math.floor(maxWidth / (length + (length + 1) * 0.5));
        var newMargin = newOptionWidth / 2;
        var newContainerWidth = (3 * length + 1) * newMargin;
        return {
          optionWidth: newOptionWidth,
          margin: newMargin,
          containerWidth: newContainerWidth
        };
      }
    }, {
      key: "render",
      value: function render() {
        if (this.showNothing) return null;
        return _react.default.createElement(_reactNative.View, {
          style: [this.props.containerStyle, styles.container, {
            width: this.containerWidth
          }]
        }, this.renderOptions());
      }
    }, {
      key: "onPress",
      value: function onPress(index) {
        var selectArray = Array.from(this.selectArray);
        selectArray[index] = true;
        this.setState({
          selectArray: selectArray
        });

        if (this.props.onSelect) {
          this.props.onSelect(index);
        }
      }
    }]);
    return NormalGear;
  }(_react.default.Component);

  NormalGear.propTypes = {
    options: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])).isRequired,
    containerStyle: _propTypes.default.object,
    normalStyle: _propTypes.default.object,
    textStyle: _propTypes.default.object,
    margin: _propTypes.default.number,
    maxWidth: _propTypes.default.number,
    selectColor: _propTypes.default.string,
    selectIndex: _propTypes.default.number,
    onSelect: _propTypes.default.func.isRequired,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    clickAccessibilityLables: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityLabel),
    clickAccessibilityHints: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityHint)
  };
  NormalGear.defaultProps = {
    options: [],
    normalStyle: {},
    margin: DEFAULT_MARGIN,
    maxWidth: screenWidth,
    selectIndex: 0,
    allowFontScaling: true,
    clickAccessibilityLables: [],
    clickAccessibilityHints: []
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-evenly'
    }
  });

  var _default = NormalGear;
  exports.default = _default;
},22894,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22888,22420,22891,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _Styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Block = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _reactNativeLinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _color = _$$_REQUIRE(_dependencyMap[15]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[17]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[18]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[19]);

  var TYPE = {
    CIRCLE: 'circle',
    RECTANGLE: 'rectangle'
  };
  var CONTENTTYPE = {
    NUM: 'num',
    COLOR: 'color',
    COLORTEM: 'colorTem'
  };
  var COLORRANGE = {
    "0.00": '#FFA100',
    "0.10": '#FFFA00',
    "0.20": '#9AFF00',
    "0.30": '#01FF00',
    "0.40": '#00FDA4',
    "0.50": '#00EEFF',
    "0.60": '#007CFF',
    "0.70": '#0600F9',
    "0.80": '#BF00FC',
    "0.90": '#FF0081',
    "1.00": '#FF0000'
  };
  var COLORTEMRANGE = {
    "0.00": '#FFAE00',
    "0.50": '#F6EFD6',
    "1.00": '#8AB2D4'
  };
  Object.freeze(TYPE);
  Object.freeze(CONTENTTYPE);
  var DEFAULT_SIZE = 40;
  var MIN_MARGIN = 3;
  var MARGIN = 7.5;
  var MAX_MARGIN = 10;
  var DEFAULT_HEIGHT = 55;
  var DEFAULT_BLOCK_COLOR = '#FFFFFF';

  var SlideGear = function (_React$Component) {
    (0, _inherits2.default)(SlideGear, _React$Component);

    function SlideGear(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, SlideGear);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SlideGear).call(this, props, context));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;

        var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
            firstCoord = _assertThisInitialize.firstCoord,
            endCoord = _assertThisInitialize.endCoord,
            currentCoord = _assertThisInitialize.currentCoord,
            coords = _assertThisInitialize.coords,
            optionStep = _assertThisInitialize.optionStep,
            length = _assertThisInitialize.length;

        var everyCoord = (optionStep ? endCoord - firstCoord : coords[length - 1] - coords[0]) / 10;
        var moveX = 0;

        switch (actionName) {
          case 'increment':
            moveX = currentCoord + everyCoord;
            break;

          case 'decrement':
            moveX = currentCoord - everyCoord;
            break;
        }

        _this.accessbilittMockReleaseCallback({
          moveX: moveX
        });
      };

      _this.accessbilittMockReleaseCallback = function (gesture) {
        var coord = gesture.moveX - _this.offset;

        if (_this.optionStep) {
          if (coord >= _this.firstCoord && coord <= _this.endCoord) {
            _this.currentCoord = coord;
          } else {
            _this.currentCoord = coord < _this.firstCoord ? _this.firstCoord : _this.endCoord;
          }
        } else {
          var min = _this.coords[0];
          var max = _this.coords[_this.length - 1];

          if (coord >= min && coord <= max) {
            _this.currentCoord = coord;
          } else {
            _this.currentCoord = coord < min ? min : max;
          }
        }

        var index = _this.getClosetIndex(gesture.moveX);

        if (_this.props.contentType !== CONTENTTYPE.COLOR) {
          _this.value = Math.max(0, Math.min(_this.length - 1, index));
        }

        if (_this.props.onSlidingComplete) {
          if (_this.props.contentType === CONTENTTYPE.COLOR) {
            var colorValue = _this.getColorFromValue(index);

            _this.value = _this.props.value;

            _this.props.onSlidingComplete(colorValue);
          } else {
            _this.props.onSlidingComplete(index);

            _this.value = _this.props.value;
          }
        }
      };

      (0, _reportDecorator.referenceReport)('SlideGear');

      if (_this.props.options.length === 0) {
        if (!_this.props.optionStep) {
          _this.showNothing = true;
          return (0, _possibleConstructorReturn2.default)(_this);
        } else {
          _this.optionMin = _this.props.optionMin;
          _this.optionMax = _this.props.optionMax;
          _this.optionStep = _this.props.optionStep;
          _this.length = (_this.optionMax - _this.optionMin) / _this.optionStep + 1;
        }
      } else {
        _this.options = _this.props.options;
        _this.length = _this.props.options.length;
      }

      var _this$getCorrectLayou = _this.getCorrectLayout(),
          margin = _this$getCorrectLayou.margin,
          blockWidth = _this$getCorrectLayou.blockWidth,
          blockHeight = _this$getCorrectLayou.blockHeight,
          containerHeight = _this$getCorrectLayou.containerHeight;

      _this.margin = margin;
      _this.blockWidth = blockWidth;
      _this.blockHeight = blockHeight;
      _this.containerHeight = containerHeight;
      _this.value = _this.props.value;
      _this.state = {
        pan: new _reactNative.Animated.Value(0),
        moveX: new _reactNative.Animated.Value(0),
        value: _this.props.value,
        dragToValueMin: 0,
        dragToValueMax: 0
      };
      _this.translateX = 0;
      _this.offset = 0;

      _this.constructPanResponder(props);

      return _this;
    }

    (0, _createClass2.default)(SlideGear, [{
      key: "constructPanResponder",
      value: function constructPanResponder(props) {
        this.panResponder = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
            return true;
          },
          onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
            return false;
          },
          onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
            return !props.disabled;
          },
          onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
            return !props.disabled;
          },
          onShouldBlockNativeResponder: function onShouldBlockNativeResponder() {
            return true;
          },
          onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
            return false;
          },
          onPanResponderGrant: this._onPanResponderGrant.bind(this),
          onPanResponderMove: _reactNative.Animated.event([null, {
            dx: this.state.pan,
            moveX: this.state.moveX
          }]),
          onPanResponderRelease: this._onPanResponderRelease.bind(this),
          onPanResponderTerminate: this._onPanResponderRelease.bind(this)
        });
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (this.sliding) {
          return;
        }

        var value = newProps.value,
            disabled = newProps.disabled;

        if (disabled !== this.props.disabled) {
          this.constructPanResponder(newProps);
        }

        if (this.optionStep) {
          var optionMin = newProps.optionMin,
              optionMax = newProps.optionMax,
              optionStep = newProps.optionStep;

          if (optionMin === this.state.optionMin && optionMax === this.state.optionMax && optionStep === this.state.optionStep && value === this.props.value) {
            return;
          }

          this.optionMin = optionMin;
          this.optionMax = optionMax;
          this.optionStep = optionStep;
          this.length = (this.optionMax - this.optionMin) / this.optionStep + 1;

          if (value !== this.props.value) {
            this.value = value;
          }
        } else {
          var options = newProps.options;
          if (value === this.value && this.isSameArray(options, this.props.options)) return;

          if (!this.isSameArray(options, this.props.options)) {
            if (!(options instanceof Array) || options.length === 0) {
              this.showNothing = true;
              return;
            } else {
              this.showNothing = false;
              this.options = options;
              this.length = options.length;
            }
          }

          if (value !== this.props.value) {
            if (value < 0 || value >= this.length) {
              this.value = 0;
            } else {
              this.value = value;
            }
          }
        }

        this.calculateCoord(this.containerLayout);
      }
    }, {
      key: "isSameArray",
      value: function isSameArray(arr1, arr2) {
        if (!(arr1 instanceof Array) || !(arr2 instanceof Array)) return false;
        if (arr1.length !== arr2.length) return false;

        for (var i = 0; i < arr1.length; i++) {
          if (arr1[i] !== arr2[i]) return false;
        }

        return true;
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        var _this2 = this;

        this.state.pan.addListener(function (e) {
          var _this2$state = _this2.state,
              min = _this2$state.dragToValueMin,
              max = _this2$state.dragToValueMax;

          if (e.value >= min && e.value <= max) {
            _this2.translateX = e.value;
          } else {
            _this2.translateX = e.value < min ? min : max;
          }

          _this2._background.setNativeProps({
            width: _this2.translateX + _this2.margin * 2 + _this2.blockWidth - _this2.state.dragToValueMin
          });
        });
        this.state.moveX.addListener(function (e) {
          var index = _this2.getClosetIndex(e.value);

          if (_this2.props.onValueChange) {
            if (_this2.props.contentType === CONTENTTYPE.COLOR) {
              var colorValue = _this2.getColorFromValue(index);

              _this2.props.onValueChange(colorValue);
            } else {
              _this2.props.onValueChange(index);
            }
          }
        });
      }
    }, {
      key: "getClosetIndex",
      value: function getClosetIndex(moveX) {
        var adjustCoord = moveX - this.offset;

        if (this.optionStep) {
          var value;

          if (adjustCoord <= this.firstCoord) {
            value = this.optionMin;
          } else if (adjustCoord >= this.endCoord) {
            value = this.optionMax;
          } else {
            var index = Math.round((adjustCoord - this.firstCoord) / this.d);
            value = index * this.optionStep + this.optionMin;
            if (value > this.optionMax) value = this.optionMax;
          }

          return value;
        } else {
          var diffs = this.coords.map(function (coord) {
            return Math.abs(coord - adjustCoord);
          });
          return diffs.indexOf(Math.min.apply(Math, (0, _toConsumableArray2.default)(diffs)));
        }
      }
    }, {
      key: "getColorFromValue",
      value: function getColorFromValue(value) {
        var getter = (0, _color.colorGetterforRange)(this.props.colorRangeObject);
        var colorHex = getter.getColorFromPercent((value - this.props.optionMin) / (this.props.optionMax - this.props.optionMin) * 100);
        var colorValue = (0, _color.transformHexToDigtal)(colorHex);
        return colorValue;
      }
    }, {
      key: "getValueFromColor",
      value: function getValueFromColor(colorValue) {
        var getter = (0, _color.colorGetterforRange)(this.props.colorRangeObject);
        var percent = getter.getPercentFromColor((0, _color.transformDigtalToHex)(colorValue));
        var value = this.props.optionMin + (this.props.optionMax - this.props.optionMin) * (percent / 100);
        return value;
      }
    }, {
      key: "_onPanResponderGrant",
      value: function _onPanResponderGrant(e) {
        this.sliding = true;
        this.state.pan.setOffset(this.translateX);
        this.state.pan.setValue(0);
        var pageX = e.nativeEvent.pageX;
        this.offset = pageX - this.currentCoord;
      }
    }, {
      key: "_onPanResponderRelease",
      value: function _onPanResponderRelease(e, gesture) {
        var coord = gesture.moveX - this.offset;

        if (this.optionStep) {
          if (coord >= this.firstCoord && coord <= this.endCoord) {
            this.currentCoord = coord;
          } else {
            this.currentCoord = coord < this.firstCoord ? this.firstCoord : this.endCoord;
          }
        } else {
          var min = this.coords[0];
          var max = this.coords[this.length - 1];

          if (coord >= min && coord <= max) {
            this.currentCoord = coord;
          } else {
            this.currentCoord = coord < min ? min : max;
          }
        }

        var index = this.getClosetIndex(gesture.moveX);

        if (this.props.contentType !== CONTENTTYPE.COLOR) {
          this.value = index;
        }

        if (this.props.onSlidingComplete) {
          if (this.props.contentType === CONTENTTYPE.COLOR) {
            var colorValue = this.getColorFromValue(index);
            this.value = colorValue;
            this.props.onSlidingComplete(colorValue);
          } else {
            this.props.onSlidingComplete(index);
            this.value = index;
          }
        }

        this.offset = 0;
        this.sliding = false;
      }
    }, {
      key: "getCorrectLayout",
      value: function getCorrectLayout() {
        var containerHeight = this.props.containerStyle.height || DEFAULT_HEIGHT;
        var blockWidth = this.props.blockStyle.width || DEFAULT_SIZE;
        var margin = ~~(containerHeight / 10);
        margin = margin > MAX_MARGIN ? MAX_MARGIN : margin;
        margin = margin < MIN_MARGIN ? MIN_MARGIN : margin;
        var blockHeight = containerHeight - margin * 2;
        return {
          margin: margin,
          blockWidth: this.props.type === TYPE.CIRCLE ? blockHeight : blockWidth,
          blockHeight: blockHeight,
          containerHeight: containerHeight
        };
      }
    }, {
      key: "_onLayout",
      value: function _onLayout() {
        var _this3 = this;

        this._container.measure(function (x, y, w, h, px, py) {
          _this3.calculateCoord({
            x: x,
            y: y,
            w: w,
            h: h,
            px: px,
            py: py
          });
        });
      }
    }, {
      key: "calculateCoord",
      value: function calculateCoord(obj) {
        if (!obj) {
          return;
        }

        var x = obj.x,
            w = obj.w;
        this.containerLayout = obj;
        var offset = this.margin * 2 + this.blockWidth;
        var startCoord = x + offset / 2;
        var d = (w - offset) / (this.length - 1);
        this.d = d;

        if (d <= 0) {}

        if (!this.optionStep) {
          this.coords = this.options.map(function (v, i) {
            return d > 0 ? startCoord + d * i : 0;
          });
          this.currentCoord = this.coords[this.value];
        } else {
          this.firstCoord = startCoord;
          this.endCoord = startCoord + d * (this.length - 1);

          if (this.props.contentType !== CONTENTTYPE.COLOR) {
            this.currentCoord = startCoord + d * ((this.value - this.optionMin) / this.optionStep);
          } else {
            var value = this.getValueFromColor(this.value);
            this.currentCoord = startCoord + d * Math.round((value - this.optionMin) / this.optionStep);
          }
        }

        this.totalWidth = w;
        this.getDragRange();
      }
    }, {
      key: "getDragRange",
      value: function getDragRange(callback) {
        var _this4 = this;

        if (!this.optionStep) {
          this.setState({
            dragToValueMin: this.coords[0] - this.currentCoord || 0,
            dragToValueMax: this.coords[this.length - 1] - this.currentCoord || 0
          }, function () {
            callback && callback();

            _this4.state.pan.setOffset(0);

            _this4.state.pan.setValue(0);
          });
        } else {
          this.setState({
            dragToValueMin: this.firstCoord - this.currentCoord || 0,
            dragToValueMax: this.endCoord - this.currentCoord || 0
          }, function () {
            callback && callback();

            _this4.state.pan.setOffset(0);

            _this4.state.pan.setValue(0);
          });
        }
      }
    }, {
      key: "renderDraggable",
      value: function renderDraggable() {
        var _this$state = this.state,
            min = _this$state.dragToValueMin,
            max = _this$state.dragToValueMax;
        var colorScheme = this.context.colorScheme;
        if (min === undefined) return null;
        var position = {
          position: 'absolute',
          left: -min - this.margin,
          top: -this.margin
        };
        var innerCircle = this.props.type === TYPE.CIRCLE ? {
          width: this.blockHeight,
          height: this.blockHeight,
          borderRadius: this.blockHeight / 2
        } : {
          width: this.blockWidth,
          height: this.blockHeight,
          borderRadius: 0
        };
        var touchArea = {
          width: this.blockWidth + this.margin * 4,
          height: this.containerHeight + this.margin * 2,
          backgroundColor: 'transparent',
          alignItems: 'center',
          justifyContent: 'center'
        };
        var panStyle = {
          transform: [{
            translateX: this.state.pan.interpolate({
              inputRange: [min - 1, min, max, max + 1],
              outputRange: [min, min, max, max]
            })
          }]
        };
        var whiteNoDark = new _DynamicColor.default('#FFFFFF', 'rgba(255,255,255,1)');
        var greyNoDark = new _DynamicColor.default('rgba(255,255,255,1)', 'rgba(255,255,255,1)');
        return _react.default.createElement(_Block.default, {
          panHandlers: this.panResponder.panHandlers,
          style: [position, panStyle]
        }, _react.default.createElement(_reactNative.View, {
          style: touchArea
        }, _react.default.createElement(_reactNative.View, {
          style: [{
            backgroundColor: this.props.disabled ? greyNoDark.color(colorScheme) : whiteNoDark.color(colorScheme)
          }, this.props.blockStyle, innerCircle]
        })));
      }
    }, {
      key: "renderBackground",
      value: function renderBackground() {
        var _this$context$theme,
            _this5 = this;

        var opacityValue = this.props.disabled ? 0.3 : 1;
        var leftTextColorValue = this.props.disabled && this.props.leftTextOffColor ? this.props.leftTextOffColor : this.props.leftTextColor;
        var _this$state2 = this.state,
            min = _this$state2.dragToValueMin,
            max = _this$state2.dragToValueMax;
        if (min === undefined) return null;
        var minimumTrackTintColor = this.props.minimumTrackTintColor ? this.props.minimumTrackTintColor : (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBtnGreenNor;

        if (this.props.disabled) {
          var _this$context$theme2;

          minimumTrackTintColor = (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorSlideLeft;
        }

        return _react.default.createElement(_reactNative.Animated.View, {
          ref: function ref(background) {
            return _this5._background = background;
          },
          style: {
            position: 'absolute',
            width: this.state.pan.interpolate({
              inputRange: [min - 1, min, max, max + 1],
              outputRange: [this.margin * 2 + this.blockWidth, this.margin * 2 + this.blockWidth, this.totalWidth, this.totalWidth]
            }),
            height: this.containerHeight,
            borderRadius: this.props.type === TYPE.CIRCLE ? this.containerHeight / 2 : 0,
            backgroundColor: this.props.contentType === CONTENTTYPE.NUM ? minimumTrackTintColor : '',
            opacity: opacityValue
          }
        }, this.props.showEndText ? _react.default.createElement(_reactNative.View, {
          style: [styles.textContainer, {
            margin: this.margin,
            alignSelf: 'flex-start',
            minWidth: this.blockWidth + this.margin * 2,
            height: this.blockHeight
          }]
        }, _react.default.createElement(_reactNative.Text, {
          accessible: false,
          focusable: false,
          style: [styles.text, {
            color: leftTextColorValue
          }, this.props.leftTextStyle],
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: this.props.numberOfLines
        }, this.optionStep ? this.optionMin : this.options[0])) : null);
      }
    }, {
      key: "renderRightText",
      value: function renderRightText() {
        var opacityValue = this.props.disabled ? 0.3 : 1;
        var rightTextColorValue = this.props.disabled && this.props.rightTextOffColor ? this.props.rightTextOffColor : this.props.rightTextColor;
        var width = this.blockWidth + this.margin * 2;

        if (this.optionStep && this.optionMax > 999999) {
          width += 20;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [styles.textContainer, {
            margin: this.margin,
            alignSelf: 'flex-end',
            minWidth: width,
            height: this.blockHeight,
            opacity: opacityValue
          }]
        }, this.props.showEndText ? _react.default.createElement(_reactNative.Text, {
          accessible: false,
          style: [styles.text, {
            color: rightTextColorValue
          }, this.props.rightTextStyle],
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: this.props.numberOfLines
        }, this.optionStep ? this.optionMax : this.options[this.length - 1]) : null);
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme3,
            _this6 = this;

        if (this.showNothing) return null;
        var maximumTrackTintColor = this.props.maximumTrackTintColor ? this.props.maximumTrackTintColor : (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorBtnGrayNor;
        var containerStyle = {
          height: this.containerHeight,
          borderRadius: this.props.type === TYPE.CIRCLE ? this.containerHeight / 2 : 0,
          backgroundColor: this.props.contentType === CONTENTTYPE.NUM ? maximumTrackTintColor : ''
        };
        var opacityValue = this.props.disabled ? 0.3 : 1;
        var leftTextColorValue = this.props.disabled && this.props.leftTextOffColor ? this.props.leftTextOffColor : this.props.leftTextColor;
        var rightTextColorValue = this.props.disabled && this.props.rightTextOffColor ? this.props.rightTextOffColor : this.props.rightTextColor;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          onLayout: function onLayout() {
            return _this6._onLayout();
          },
          ref: function ref(container) {
            return _this6._container = container;
          },
          style: [this.props.containerStyle, containerStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: !!this.props.disabled
          },
          accessibilityValue: {
            min: this.state.dragToValueMin,
            max: this.state.dragToValueMax,
            now: this.value
          }
        }), {
          accessibilityActions: [{
            name: 'increment'
          }, {
            name: 'decrement'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), this.props.contentType === CONTENTTYPE.NUM ? _react.default.createElement(_reactNative.View, null, this.renderRightText(), this.renderBackground(), this.renderDraggable()) : _react.default.createElement(_reactNativeLinearGradient.default, {
          start: {
            x: 0,
            y: 0
          },
          end: {
            x: 1,
            y: 0
          },
          locations: this.props.contentType === CONTENTTYPE.COLOR ? Object.keys(this.props.colorRangeObject).map(function (value) {
            return Number(value);
          }) : Object.keys(this.props.colorTemRangeObject).map(function (value) {
            return Number(value);
          }),
          colors: this.props.contentType === CONTENTTYPE.COLOR ? Object.values(this.props.colorRangeObject) : Object.values(this.props.colorTemRangeObject),
          style: {
            borderRadius: this.props.type === TYPE.CIRCLE ? this.containerHeight / 2 : 0
          }
        }, this.renderRightText(), this.renderBackground(), this.renderDraggable()));
      }
    }]);
    return SlideGear;
  }(_react.default.Component);

  SlideGear.contextType = _configProvider.ConfigContext;
  SlideGear.propTypes = {
    type: _propTypes.default.oneOf([TYPE.CIRCLE, TYPE.RECTANGLE]),
    options: _propTypes.default.array.isRequired,
    showEndText: _propTypes.default.bool,
    containerStyle: _propTypes.default.object,
    blockStyle: _propTypes.default.object,
    minimumTrackTintColor: _propTypes.default.string,
    leftTextColor: _propTypes.default.string,
    leftTextOffColor: _propTypes.default.string,
    leftTextStyle: _reactNative.Text.propTypes.style,
    maximumTrackTintColor: _propTypes.default.string,
    rightTextColor: _propTypes.default.string,
    rightTextOffColor: _propTypes.default.string,
    rightTextStyle: _reactNative.Text.propTypes.style,
    value: _propTypes.default.number,
    disabled: _propTypes.default.bool,
    onValueChange: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func.isRequired,
    optionMin: _propTypes.default.number,
    optionMax: _propTypes.default.number,
    optionStep: _propTypes.default.number,
    contentType: _propTypes.default.oneOf([CONTENTTYPE.NUM, CONTENTTYPE.COLOR, CONTENTTYPE.COLORTEM]),
    colorRangeObject: _propTypes.default.object,
    colorTemRangeObject: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  SlideGear.defaultProps = {
    type: TYPE.CIRCLE,
    options: [],
    showEndText: true,
    containerStyle: {},
    blockStyle: {},
    minimumTrackTintColor: _Styles.default.common.MHGreen,
    leftTextColor: '#eee',
    leftTextOffColor: 'rgba(127, 127, 127, 0.3)',
    leftTextStyle: {},
    rightTextColor: '#999',
    rightTextOffColor: 'rgba(127, 127, 127, 0.3)',
    rightTextStyle: {},
    value: 0,
    disabled: false,
    optionMin: 0,
    optionMax: 0,
    optionStep: 0,
    contentType: CONTENTTYPE.NUM,
    colorRangeObject: COLORRANGE,
    colorTemRangeObject: COLORTEMRANGE,
    allowFontScaling: true
  };
  SlideGear.TYPE = TYPE;
  SlideGear.CONTENTTYPE = CONTENTTYPE;

  var styles = _reactNative.StyleSheet.create({
    textContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    text: {
      fontSize: 15,
      width: '100%',
      textAlign: 'center'
    }
  });

  var _default = SlideGear;
  exports.default = _default;
},22897,[14305,14344,14359,14320,14323,14371,14377,14374,14386,10318,10297,10033,22780,22885,14299,22900,22435,22420,22423,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.fixHex = fixHex;
  exports.transformHexToDigtal = transformHexToDigtal;
  exports.transformDigtalToHex = transformDigtalToHex;
  exports.colorGetterforRange = colorGetterforRange;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  function fixHex(hex) {
    hex = hex.replace(/[^0-9a-fA-F]/, '').split('');
    var length = hex.length;

    if (length < 6) {
      hex = [hex[0] || 0, hex[0] || 0, hex[1] || 0, hex[1] || 0, hex[2] || 0, hex[2] || 0];
    }

    hex = "#" + hex.slice(0, 6).join('');
    return hex.toUpperCase();
  }

  function transformHexToDigtal(hex) {
    hex = fixHex(hex).slice(1);
    return parseInt(hex, 16);
  }

  function transformDigtalToHex(digtal) {
    return ("#" + ("000000" + digtal.toString(16)).slice(-6)).toUpperCase();
  }

  function splitRgb(color) {
    color = fixHex(color);

    var _color$split = color.split(''),
        _color$split2 = (0, _slicedToArray2.default)(_color$split, 7),
        _1 = _color$split2[0],
        r1 = _color$split2[1],
        r2 = _color$split2[2],
        g1 = _color$split2[3],
        g2 = _color$split2[4],
        b1 = _color$split2[5],
        b2 = _color$split2[6];

    var r = parseInt(r1 + r2, 16);
    var g = parseInt(g1 + g2, 16);
    var b = parseInt(b1 + b2, 16);
    return {
      r: r,
      g: g,
      b: b
    };
  }

  function colorGetterforRange(range) {
    var colors = formatColors(range);

    function formatColors(range) {
      var colors = [];

      for (var k in range) {
        if (range.hasOwnProperty(k)) {
          var p = parseFloat(k);
          var c = fixHex(range[k]);

          if (typeof p === 'number' && p >= 0 && p <= 1) {
            colors.push([p, c]);
          }
        }
      }

      colors.sort(function (a, b) {
        return a[0] > b[0] ? 1 : -1;
      });

      if (colors.length < 1) {
        colors = [[0, '#000000'], [1, '#ffffff']];
      }

      if (colors[0][0] > 0) {
        colors[0] = [0, colors[0][1]];
      }

      if (colors[colors.length - 1][0] < 1) {
        colors[colors.length - 1] = [1, colors[colors.length - 1][1]];
      }

      return colors;
    }

    function getColorFromPercent(p) {
      p = Math.max(0, Math.min(1, p / 100));
      var s1 = null;
      var s2 = null;

      for (var i = 1, l = colors.length; i < l; i++) {
        var c = colors[i];
        var cp = colors[i - 1];

        if (cp[0] <= p && c[0] >= p) {
          s1 = cp;
          s2 = c;
          break;
        }
      }

      if (s1[0] >= s2[0]) {
        return s1[1];
      }

      var p0 = (p - s1[0]) / (s2[0] - s1[0]);

      var _splitRgb = splitRgb(s1[1]),
          r1 = _splitRgb.r,
          g1 = _splitRgb.g,
          b1 = _splitRgb.b;

      var _splitRgb2 = splitRgb(s2[1]),
          r2 = _splitRgb2.r,
          g2 = _splitRgb2.g,
          b2 = _splitRgb2.b;

      var r = parseInt(p0 * r2 + (1 - p0) * r1, 10);
      var g = parseInt(p0 * g2 + (1 - p0) * g1, 10);
      var b = parseInt(p0 * b2 + (1 - p0) * b1, 10);
      return "#" + ("00" + r.toString(16)).slice(-2) + ("00" + g.toString(16)).slice(-2) + ("00" + b.toString(16)).slice(-2);
    }

    function getPercentFromColor(color) {
      var _splitRgb3 = splitRgb(color),
          r = _splitRgb3.r,
          g = _splitRgb3.g,
          b = _splitRgb3.b;

      for (var i = 0, l = 1000; i < l; i++) {
        var c = getColorFromPercent(i / 10);

        var _splitRgb4 = splitRgb(c),
            rc = _splitRgb4.r,
            gc = _splitRgb4.g,
            bc = _splitRgb4.b;

        if (Math.abs(r - rc) <= 5 && Math.abs(g - gc) <= 5 && Math.abs(b - bc) <= 5) {
          return i / 10;
        }
      }

      return 50;
    }

    function getPercentFromColorV2(color) {
      var _splitRgb5 = splitRgb(color),
          r = _splitRgb5.r,
          g = _splitRgb5.g,
          b = _splitRgb5.b;

      for (var i = 0, l = 1000; i < l; i++) {
        var c = getColorFromPercent(i / 10);

        var _splitRgb6 = splitRgb(c),
            rc = _splitRgb6.r,
            gc = _splitRgb6.g,
            bc = _splitRgb6.b;

        if (Math.abs(r - rc) <= 5 && Math.abs(g - gc) <= 5 && Math.abs(b - bc) <= 5) {
          return i / 10;
        }
      }

      return -1;
    }

    return {
      getColorFromPercent: getColorFromPercent,
      getPercentFromColor: getPercentFromColor,
      getPercentFromColorV2: getPercentFromColorV2
    };
  }
},22900,[14305,14347]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Separator", {
    enumerable: true,
    get: function get() {
      return _Separator.default;
    }
  });

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22903,[14305,22906]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _resources = _$$_REQUIRE(_dependencyMap[9]);

  var TYPE = {
    ROW: 'row',
    COLUMN: 'column'
  };

  var Separator = function (_React$PureComponent) {
    (0, _inherits2.default)(Separator, _React$PureComponent);

    function Separator() {
      (0, _classCallCheck2.default)(this, Separator);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Separator).apply(this, arguments));
    }

    (0, _createClass2.default)(Separator, [{
      key: "render",
      value: function render() {
        var separatorContainer;
        var separatorStyle;

        if (this.props.type === TYPE.ROW) {
          var maxHeight = {};

          if (this.props.style && this.props.style.height) {
            if (this.props.style.height > 1) {
              maxHeight = {
                height: 1
              };
            }
          }

          separatorContainer = {
            backgroundColor: 'transparent',
            height: 1,
            justifyContent: 'center'
          };
          separatorStyle = _reactNative.StyleSheet.flatten([_resources.Styles.common.separator, this.props.style, maxHeight]);
        } else {
          var maxWidth = {};

          if (this.props.style && this.props.style.width) {
            if (this.props.style.width > 1) {
              maxWidth = {
                width: 1
              };
            }
          }

          separatorContainer = {
            backgroundColor: 'transparent',
            width: 1,
            alignItems: 'center'
          };
          separatorStyle = _reactNative.StyleSheet.flatten([{
            width: _reactNative.StyleSheet.hairlineWidth,
            backgroundColor: _resources.Styles.common.hairlineColor
          }, this.props.style, maxWidth]);
        }

        return _reactNative.Platform.select({
          android: _react.default.createElement(_reactNative.View, {
            style: separatorContainer
          }, _react.default.createElement(_reactNative.View, {
            style: separatorStyle
          })),
          ios: _react.default.createElement(_reactNative.View, {
            style: separatorStyle
          })
        });
      }
    }]);
    return Separator;
  }(_react.default.PureComponent);

  Separator.propTypes = {
    type: _propTypes.default.string,
    style: _propTypes.default.any
  };
  Separator.defaultProps = {
    type: TYPE.ROW
  };
  var _default = Separator;
  exports.default = _default;
},22906,[14305,14320,14323,14371,14377,14386,10297,10033,10318,22453]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "StringSpinner", {
    enumerable: true,
    get: function get() {
      return _StringSpinner.default;
    }
  });
  Object.defineProperty(exports, "NumberSpinner", {
    enumerable: true,
    get: function get() {
      return _NumberSpinner.default;
    }
  });

  var _StringSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _NumberSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
},22909,[14305,22912,22918]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[11]);

  var _nativeModules = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var StringSpinner = function (_React$Component) {
    (0, _inherits2.default)(StringSpinner, _React$Component);

    function StringSpinner(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, StringSpinner);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(StringSpinner).call(this, props, context));
      (0, _reportDecorator.referenceReport)('StringSpinner');
      _this.gestureHandlers = {};

      if (_this.props.onChangeStart && _reactNative.Platform.OS === 'ios') {
        _this.gestureHandlers = {
          onStartShouldSetResponder: function onStartShouldSetResponder() {
            return true;
          },
          onResponderStart: function onResponderStart() {
            _this.props.onChangeStart();
          }
        };
      }

      return _this;
    }

    (0, _createClass2.default)(StringSpinner, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var pickerStyle = this.props.pickerInnerStyle;

        if (pickerStyle && pickerStyle.textColor) {
          pickerStyle.textColor = pickerStyle.textColor + "text";
        }

        if (pickerStyle && pickerStyle.selectTextColor) {
          pickerStyle.selectTextColor = pickerStyle.selectTextColor + "text";
        }

        if (pickerStyle && pickerStyle.unitTextColor) {
          pickerStyle.unitTextColor = pickerStyle.unitTextColor + "text";
        }

        return _react.default.createElement(_nativeModules.MIOTStringPicker, (0, _extends2.default)({}, this.gestureHandlers, this.props, pickerStyle, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }), {
          onValueChanged: function onValueChanged(event) {
            if (_this2.props.onValueChanged) {
              _this2.props.onValueChanged((0, _objectSpread2.default)({}, event.nativeEvent));
            }
          }
        }));
      }
    }]);
    return StringSpinner;
  }(_react.default.Component);

  StringSpinner.propTypes = (0, _objectSpread2.default)({
    visible: _propTypes.default.bool,
    dataSource: _propTypes.default.array,
    defaultValue: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.array]),
    onValueChanged: _propTypes.default.func,
    pickerInnerStyle: _propTypes.default.object
  }, _reactNative.ViewPropTypes, {
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  });
  var _default = StringSpinner;
  exports.default = _default;
},22912,[14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22420,22915,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.MIOTStringPicker = exports.MIOTNumberPicker = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var MIOTNumberPicker = (0, _reactNative.requireNativeComponent)('MIOTNumberPicker');
  exports.MIOTNumberPicker = MIOTNumberPicker;
  var MIOTStringPicker = (0, _reactNative.requireNativeComponent)('MHStringPicker');
  exports.MIOTStringPicker = MIOTStringPicker;
},22915,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _StringSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _nativeModules = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var isAndroid = _reactNative.Platform.OS === 'android';
  var NumberPicker = isAndroid ? _nativeModules.MIOTNumberPicker : null;

  var NumberSpinner = function (_React$Component) {
    (0, _inherits2.default)(NumberSpinner, _React$Component);

    function NumberSpinner(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, NumberSpinner);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NumberSpinner).call(this, props, context));
      (0, _reportDecorator.referenceReport)('NumberSpinner');
      return _this;
    }

    (0, _createClass2.default)(NumberSpinner, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return isAndroid ? _react.default.createElement(NumberPicker, (0, _extends2.default)({}, this.props, this.props.pickerInnerStyle, {
          lineStyle: this.props.lineStyle || 'default',
          onValueChanged: function onValueChanged(event) {
            if (_this2.props.onNumberChanged) {
              var val = event.nativeEvent || {};
              var result = {
                newValue: parseFloat("" + val.newValue),
                oldValue: parseFloat("" + val.oldValue)
              };

              _this2.props.onNumberChanged(result);
            }
          }
        })) : _react.default.createElement(_StringSpinner.default, (0, _extends2.default)({
          type: 1
        }, this.props, {
          defaultValue: "" + this.props.defaultValue,
          onValueChanged: this.props.onNumberChanged
        }));
      }
    }]);
    return NumberSpinner;
  }(_react.default.Component);

  NumberSpinner.defaultProps = {
    valueFormat: _reactNative.Platform.select({
      ios: '%0.0f'
    })
  };
  NumberSpinner.propTypes = (0, _objectSpread2.default)({
    visible: _propTypes.default.bool,
    unit: _propTypes.default.string,
    maxValue: _propTypes.default.number,
    minValue: _propTypes.default.number,
    interval: _propTypes.default.number,
    defaultValue: _propTypes.default.number,
    valueFormat: _propTypes.default.string,
    onNumberChanged: _propTypes.default.func
  }, _reactNative.ViewPropTypes);
  var _default = NumberSpinner;
  exports.default = _default;
},22918,[14305,14314,14344,14320,14323,14371,14377,14386,10318,10297,10033,22912,22915,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "MHDatePicker", {
    enumerable: true,
    get: function get() {
      return _MHDatePicker.default;
    }
  });

  var _MHDatePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22921,[14305,22924]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[13]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _string = _$$_REQUIRE(_dependencyMap[16]);

  var _StringSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _utils = _$$_REQUIRE(_dependencyMap[18]);

  var _locale = _$$_REQUIRE(_dependencyMap[19]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[20]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[21]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[22]);

  var _popButton = _$$_REQUIRE(_dependencyMap[23]);

  var _font = _$$_REQUIRE(_dependencyMap[24]);

  var _singleDataSource;

  var TYPE = {
    SINGLE: 'single',
    TIME24: 'time24',
    TIME12: 'time12',
    DATE: 'date'
  };
  Object.freeze(TYPE);
  var SINGLE_TYPE = {
    MONTH: 'month',
    DAY: 'day',
    HOUR: 'hour',
    MINUTE: 'minute',
    SECOND: 'second'
  };
  Object.freeze(SINGLE_TYPE);
  var screenBackgroundColor = 'rgba(0,0,0,0.4)';
  var margin = 0;
  var borderRadius = 20;
  var titleHeightThin = 62;
  var titleHeightFat = 78;
  var rowHeight = 48;

  var pickerContainerHeight = _reactNative.Platform.select({
    android: 240,
    ios: 224
  });

  var buttonHeight = 46;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var modalWidth = width - 0;
  var months = (0, _utils.constructArray)(12, true, false);
  var days = (0, _utils.constructArray)(31, true, false);
  var hours24 = (0, _utils.constructArray)(24, true, true);
  var hours12 = hours24.slice(1, 13);
  var minutes = (0, _utils.constructArray)(60, true, true);
  var singleDataSource = (_singleDataSource = {}, (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.MONTH, months), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.DAY, days), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.HOUR, (0, _utils.constructArray)(24, true, false)), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.MINUTE, (0, _utils.constructArray)(60, true, false)), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.SECOND, (0, _utils.constructArray)(60, true, false)), _singleDataSource);
  Object.freeze(singleDataSource);
  var days31 = ['01', '03', '05', '07', '08', '10', '12'];
  var days30 = ['04', '06', '09', '11'];
  var defaultYearOffset = 15;

  var MHDatePicker = function (_React$Component) {
    (0, _inherits2.default)(MHDatePicker, _React$Component);

    function MHDatePicker(props, context) {
      var _context$media, _context$media2;

      var _this;

      (0, _classCallCheck2.default)(this, MHDatePicker);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MHDatePicker).call(this, props));
      _this.colorDatePickerSelectBg = new _DynamicColor.default('#f3f3f3', '#242424');
      (0, _reportDecorator.referenceReport)('MHDatePicker');

      var _this$init = _this.init(props, context),
          currentArray = _this$init.currentArray,
          dataSourceArray = _this$init.dataSourceArray;

      var subtitle = _this.getSubtitle(currentArray, context);

      _this.state = {
        visible: _this.props.visible,
        dataSourceArray: dataSourceArray,
        currentArray: currentArray,
        subtitle: subtitle
      };
      _this.responsiveDialogStyle = ((_context$media = context.media) == null ? undefined : _context$media.screenType) === 'tablet' ? {
        alignItems: 'center',
        justifyContent: 'center',
        flexDirection: 'column'
      } : {};
      _this.responsiveDialogModalStyle = ((_context$media2 = context.media) == null ? undefined : _context$media2.screenType) === 'tablet' ? _Styles.default.dialog.padModal : {};
      return _this;
    }

    (0, _createClass2.default)(MHDatePicker, [{
      key: "getSubtitle",
      value: function getSubtitle(arr, context) {
        var _TYPE$DATE$TYPE$TIME;

        if (this.props.type === TYPE.SINGLE) {
          var count = parseInt(arr[0], 10);
          var unit = count > 1 ? _locale.Locale.of(context.language)[this.props.singleType + "s"] : _locale.Locale.of(context.language)[this.props.singleType];
          return (0, _string.formatString)(_locale.Locale.of(context.language).singleSubTitle, count, unit);
        }

        return _string.formatString.apply(undefined, [(_TYPE$DATE$TYPE$TIME = {}, (0, _defineProperty2.default)(_TYPE$DATE$TYPE$TIME, TYPE.DATE, _locale.Locale.of(context.language).dateSubTitle), (0, _defineProperty2.default)(_TYPE$DATE$TYPE$TIME, TYPE.TIME24, _locale.Locale.of(context.language).time24SubTitle), (0, _defineProperty2.default)(_TYPE$DATE$TYPE$TIME, TYPE.TIME12, _locale.Locale.of(context.language).time12SubTitle), _TYPE$DATE$TYPE$TIME)[this.props.type]].concat((0, _toConsumableArray2.default)(arr)));
      }
    }, {
      key: "convert",
      value: function convert(cur, context) {
        var type = this.props.type;

        if (cur instanceof Date) {
          switch (type) {
            case TYPE.DATE:
              return this.convert([cur.getFullYear(), cur.getMonth() + 1, cur.getDate()], context);

            case TYPE.TIME24:
              return this.convert([cur.getHours(), cur.getMinutes()], context);

            case TYPE.TIME12:
              return this.convertTo12([cur.getHours(), cur.getMinutes()], context);

            case TYPE.SINGLE:
              return ['01'];

            default:
              return ['01'];
          }
        } else if (cur instanceof Array) {
          switch (type) {
            case TYPE.DATE:
              return cur.slice(0, 3).map(function (v, i) {
                return i === 0 ? "" + v : ("0" + v).slice(-2);
              });

            case TYPE.TIME24:
              return cur.slice(0, 2).map(function (v) {
                return ("0" + v).slice(-2);
              });

            case TYPE.TIME12:
              return this.convertTo12(cur, context);

            case TYPE.SINGLE:
              return cur.slice(0, 1).map(function (v) {
                return ("0" + v).slice(-2);
              });

            default:
              return ['01'];
          }
        } else if (typeof cur === 'string' || typeof cur === 'number') {
            return ["" + cur];
          } else {
              return ['01'];
            }
      }
    }, {
      key: "convertTo12",
      value: function convertTo12(arr, context) {
        if (arr.length === 2) {
          var newArr = arr.map(function (v) {
            return parseInt(v);
          });

          if (newArr.every(function (v) {
            return Number.isInteger;
          })) {
            var res;

            if (newArr[0] === 0) {
              res = [_locale.Locale.of(context.language).am, 12, newArr[1]];
            } else {
              var timeSystemString = newArr[0] > 11 ? _locale.Locale.of(context.language).pm : _locale.Locale.of(context.language).am;
              var hour = newArr[0] > 12 ? "" + (newArr[0] - 12) : "" + newArr[0];
              var minute = "" + newArr[1];
              res = [timeSystemString, hour, minute];
            }

            return res.map(function (v, i) {
              return i > 0 ? ("0" + v).slice(-2) : v;
            });
          }
        }

        return this.convert(new Date(), context);
      }
    }, {
      key: "slice",
      value: function slice(arr, head, tail) {
        if (head === undefined && tail === undefined) return arr;
        var index = arr.indexOf(("0" + head).slice(-2)) || 0;
        var lastIndex = arr.lastIndexOf(("0" + tail).slice(-2)) || arr.length - 1;
        return arr.slice(index, lastIndex + 1);
      }
    }, {
      key: "getYears",
      value: function getYears(min, max, context) {
        this.min = this.convert(min, context);
        this.max = this.convert(max, context);
        var minY = Number.parseInt(this.min[0]);
        var maxY = Number.parseInt(this.max[0]);
        return this.generateArray(minY, maxY);
      }
    }, {
      key: "generateArray",
      value: function generateArray(min, max) {
        if (min > max) {
          return [];
        }

        return Array.from({
          length: max - min + 1
        }, function (v, i) {
          return i + min;
        }).map(function (v) {
          return "" + v;
        });
      }
    }, {
      key: "init",
      value: function init(props, context) {
        var type = props.type,
            singleType = props.singleType,
            current = props.current,
            min = props.min,
            max = props.max;
        var currentArray = this.convert(current || new Date(), context);

        switch (type) {
          case TYPE.DATE:
            var yearNow = new Date().getFullYear();
            var minDefault = new Date();
            minDefault.setFullYear(yearNow - defaultYearOffset);
            var maxDefault = new Date();
            maxDefault.setFullYear(yearNow + defaultYearOffset);
            var years = this.getYears(min || minDefault, max || maxDefault, context);
            var dataSourceArray = [years, months, days];
            this.updateDays(currentArray, dataSourceArray);
            this.unitArray = [_locale.Locale.of(context.language).yearUnit, _locale.Locale.of(context.language).monthUnit, _locale.Locale.of(context.language).dayUnit];
            return {
              currentArray: currentArray,
              dataSourceArray: dataSourceArray
            };

          case TYPE.TIME24:
            this.unitArray = [_locale.Locale.of(context.language).hourUnit, _locale.Locale.of(context.language).minuteUnit];
            return {
              currentArray: currentArray,
              dataSourceArray: [hours24, minutes]
            };

          case TYPE.TIME12:
            this.unitArray = ['', _locale.Locale.of(context.language).hourUnit, _locale.Locale.of(context.language).minuteUnit];
            return {
              currentArray: currentArray,
              dataSourceArray: [[_locale.Locale.of(context.language).am, _locale.Locale.of(context.language).pm], hours12, minutes]
            };

          case TYPE.SINGLE:
          default:
            this.unitArray = [_locale.Locale.of(context.language)[singleType + "Unit"]];
            return {
              currentArray: currentArray,
              dataSourceArray: [this.slice(singleDataSource[singleType], min, max)]
            };
        }
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }

        if (newProps.current === undefined || newProps.current !== this.props.current) {
          var currentArray = this.convert(newProps.current || new Date(), this.context);
          this.setState({
            currentArray: currentArray,
            subtitle: this.getSubtitle(currentArray, this.context)
          });
        }
      }
    }, {
      key: "checkUnlimitedHeightEnable",
      value: function checkUnlimitedHeightEnable() {
        var result = false;

        if (this.props.datePickerStyle && this.props.datePickerStyle.hasOwnProperty('unlimitedHeightEnable')) {
          result = this.props.datePickerStyle.unlimitedHeightEnable;
        }

        return result;
      }
    }, {
      key: "renderTitle",
      value: function renderTitle() {
        var theme = this.context.theme;
        var styleHeight = {
          height: this.props.showSubtitle ? titleHeightFat : titleHeightThin
        };
        var heightStyle = {
          height: styleHeight.height,
          minHeight: styleHeight.height
        };

        if (this.checkUnlimitedHeightEnable()) {
          heightStyle.height = null;
        }

        var numberOfLines = {
          titleNumberOfLines: 1,
          subTitleNumberOfLines: 1
        };

        if (this.props.datePickerStyle) {
          if (this.props.datePickerStyle.hasOwnProperty('titleNumberOfLines')) {
            numberOfLines.titleNumberOfLines = this.props.datePickerStyle.titleNumberOfLines;
          }

          if (this.props.datePickerStyle.hasOwnProperty('subTitleNumberOfLines')) {
            numberOfLines.subTitleNumberOfLines = this.props.datePickerStyle.subTitleNumberOfLines;
          }
        }

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.titleContainer, heightStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel
        })), _react.default.createElement(_reactNative.Text, {
          numberOfLines: numberOfLines.titleNumberOfLines,
          allowFontScaling: this.props.datePickerStyle.allowFontScaling,
          style: [styles.title, {
            color: theme == null ? undefined : theme.colorBlack
          }, this.props.datePickerStyle.titleStyle]
        }, this.props.title || ''), this.props.showSubtitle ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: numberOfLines.subTitleNumberOfLines,
          allowFontScaling: this.props.datePickerStyle.allowFontScaling,
          style: [styles.subtitle, {
            color: theme == null ? undefined : theme.colorGrayNormal
          }, this.props.datePickerStyle.subTitleStyle]
        }, this.state.subtitle) : null);
      }
    }, {
      key: "renderContent",
      value: function renderContent() {
        var _this2 = this;

        var _this$context = this.context,
            theme = _this$context.theme,
            colorScheme = _this$context.colorScheme,
            media = _this$context.media;
        var _this$state = this.state,
            currentArray = _this$state.currentArray,
            dataSourceArray = _this$state.dataSourceArray;
        var length = currentArray.length;
        var actualWidth = (media == null ? undefined : media.screenType) === 'tablet' ? _Styles.default.dialog.padModal.width : this.modalWidth;
        var normalWidth = actualWidth / length;
        var yearWidth = normalWidth + 10;
        var monthWidth = (actualWidth - yearWidth) / 2;
        var tempPickerInnerStyle = {
          lineColor: 'transparent',
          textColor: theme.colorGrayLighter,
          fontSize: 17,
          selectTextColor: theme.colorPrimary,
          selectFontSize: 19,
          unitTextColor: theme.colorPrimary,
          unitFontSize: 10,
          rowHeight: rowHeight,
          selectBgColor: 'transparent'
        };

        if (this.props.datePickerStyle && this.props.datePickerStyle.hasOwnProperty('pickerInnerStyle')) {
          tempPickerInnerStyle = this.props.datePickerStyle.pickerInnerStyle;
        }

        tempPickerInnerStyle.allowFontScaling = this.props.datePickerStyle.allowFontScaling;
        return _react.default.createElement(_reactNative.View, {
          style: styles.pickerContainer
        }, dataSourceArray.map(function (dataSource, index) {
          var style = {
            width: normalWidth
          };

          if (_this2.props.type === TYPE.DATE) {
            if (index === 0) style = {
              width: yearWidth
            };else style = {
              width: monthWidth
            };
          }

          return _react.default.createElement(_reactNative.View, {
            key: index + _this2.unitArray[index],
            style: [{
              flexDirection: 'row'
            }, style]
          }, _react.default.createElement(_StringSpinner.default, (0, _extends2.default)({
            key: index + _this2.unitArray[index],
            style: style,
            unit: _this2.unitArray[index],
            dataSource: dataSource,
            defaultValue: currentArray[index],
            pickerInnerStyle: tempPickerInnerStyle,
            onValueChanged: function onValueChanged(data) {
              return _this2._onValueChanged(index, data);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
            accessibilityLabel: _this2.props.accessibilityLabel,
            accessibilityHint: _this2.props.accessibilityHint,
            accessibilityValue: {
              min: Array.isArray(_this2.min) ? _this2.min[index] : 0,
              max: Array.isArray(_this2.max) ? _this2.max[index] : 0,
              now: _this2.state.currentArray[index]
            }
          }))));
        }));
      }
    }, {
      key: "renderButton",
      value: function renderButton() {
        var _this$props$datePicke,
            _this3 = this,
            _this$props$datePicke2;

        var heightStyle = {
          height: styles.buttons.minHeight,
          minHeight: styles.buttons.minHeight
        };

        if (this.checkUnlimitedHeightEnable()) {
          heightStyle.height = null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [styles.buttons, heightStyle]
        }, _react.default.createElement(_popButton.PopButton, {
          sizeLevel: "medium",
          style: {
            marginRight: 6
          },
          title: _locale.Locale.of(this.context.language).cancel,
          titleStyle: this.props.datePickerStyle.leftButtonStyle,
          titleColor: (_this$props$datePicke = this.props.datePickerStyle.leftButtonStyle) == null ? undefined : _this$props$datePicke.color,
          backgroundColor: this.props.datePickerStyle.leftButtonBgStyle,
          colorType: "grayLayerBlack",
          onPress: function onPress() {
            return _this3.dismiss();
          },
          allowFontScaling: this.props.datePickerStyle.allowFontScaling
        }), _react.default.createElement(_popButton.PopButton, {
          sizeLevel: "medium",
          style: {
            marginLeft: 6
          },
          title: _locale.Locale.of(this.context.language).ok,
          titleStyle: this.props.datePickerStyle.rightButtonStyle,
          titleColor: (_this$props$datePicke2 = this.props.datePickerStyle.rightButtonStyle) == null ? undefined : _this$props$datePicke2.color,
          backgroundColor: this.props.datePickerStyle.rightButtonBgStyle,
          colorType: "grayLayerBlue",
          onPress: function onPress() {
            return _this3.confirm();
          },
          allowFontScaling: this.props.datePickerStyle.allowFontScaling
        }));
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var theme = this.context.theme;

        var _Dimensions$get2 = _reactNative.Dimensions.get('window'),
            width = _Dimensions$get2.width,
            height = _Dimensions$get2.height;

        this.modalWidth = width - 0;
        return _react.default.createElement(_reactNative.Modal, {
          animationType: this.props.animationType,
          transparent: true,
          visible: this.state.visible,
          onRequestClose: function onRequestClose() {
            return _this4.dismiss();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.background, this.responsiveDialogStyle]
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: function onPress() {
            return _this4.dismiss();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            width: width,
            height: height
          }
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.modal, {
            backgroundColor: theme == null ? undefined : theme.colorForeground,
            width: this.modalWidth
          }, this.responsiveDialogModalStyle]
        }, this.renderTitle(), this.renderContent(), this.renderButton())));
      }
    }, {
      key: "updateDays",
      value: function updateDays(newCurrentArray, newDataSourceArray) {
        var _newCurrentArray = (0, _slicedToArray2.default)(newCurrentArray, 3),
            year = _newCurrentArray[0],
            month = _newCurrentArray[1],
            day = _newCurrentArray[2];

        if (days31.includes(month)) {
          newDataSourceArray[2] = days;
        } else if (days30.includes(month)) {
          newDataSourceArray[2] = days.slice(0, 30);
        } else {
          if ((0, _utils.isLeapYear)(parseInt(year))) {
            newDataSourceArray[2] = days.slice(0, 29);
          } else {
            newDataSourceArray[2] = days.slice(0, 28);
          }
        }

        if (!newDataSourceArray[2].includes(day)) {
          newCurrentArray[2] = newDataSourceArray[2][newDataSourceArray[2].length - 1];
        }
      }
    }, {
      key: "_onValueChanged",
      value: function _onValueChanged(index, data) {
        var _this5 = this;

        var newCurrentArray = (0, _toConsumableArray2.default)(this.state.currentArray);
        newCurrentArray[index] = data.newValue;
        var newDataSourceArray = (0, _toConsumableArray2.default)(this.state.dataSourceArray);
        this.setState({
          currentArray: newCurrentArray,
          subtitle: this.getSubtitle(newCurrentArray, this.context)
        }, function (_) {
          _this5.props.onValueChange && _this5.props.onValueChange({
            rawArray: _this5.state.currentArray,
            rawString: _this5.state.subtitle,
            date: _this5.array2Date()
          });

          if (_this5.props.type === TYPE.DATE) {
            var needUpdate = false;

            if ((0, _utils.compareDateArray)(newCurrentArray, _this5.max) > 0) {
              newCurrentArray = _this5.max;
              needUpdate = true;
            }

            if ((0, _utils.compareDateArray)(newCurrentArray, _this5.min) < 0) {
              newCurrentArray = _this5.min;
              needUpdate = true;
            }

            _this5.updateDays(newCurrentArray, newDataSourceArray);

            if (newDataSourceArray[2].length !== _this5.state.dataSourceArray[2].length) {
              needUpdate = true;
            }

            needUpdate && _this5.setState({
              subtitle: _this5.getSubtitle(newCurrentArray, _this5.context),
              currentArray: newCurrentArray,
              dataSourceArray: newDataSourceArray
            });
          }
        });
      }
    }, {
      key: "dismiss",
      value: function dismiss() {
        this.setState({
          visible: false
        });
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "array2Date",
      value: function array2Date() {
        var currentArray = this.state.currentArray;
        var date = new Date();

        switch (this.props.type) {
          case TYPE.DATE:
            date.setFullYear(currentArray[0]);
            date.setMonth(parseInt(currentArray[1], 10) - 1, parseInt(currentArray[2], 10));
            date.setDate(parseInt(currentArray[2], 10));
            break;

          case TYPE.TIME24:
            date.setHours(currentArray[0]);
            date.setMinutes(currentArray[1]);
            break;

          case TYPE.TIME12:
            var hour = parseInt(currentArray[1], 10);

            if (currentArray[0] === _locale.Locale.of(this.context.language).am) {
              hour = hour === 12 ? 0 : hour;
            } else {
              hour = hour < 12 ? hour + 12 : hour;
            }

            date.setHours(hour);
            date.setMinutes(currentArray[2]);
            break;

          case TYPE.SINGLE:
          default:
            return null;
        }

        return date;
      }
    }, {
      key: "confirm",
      value: function confirm() {
        if (this.props.onSelect) {
          this.props.onSelect({
            rawArray: this.state.currentArray,
            rawString: this.state.subtitle,
            date: this.array2Date()
          });
        }

        this.dismiss();
      }
    }]);
    return MHDatePicker;
  }(_react.default.Component);

  MHDatePicker.contextType = _configProvider.ConfigContext;
  MHDatePicker.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    title: _propTypes.default.string,
    showSubtitle: _propTypes.default.bool,
    confirmColor: _propTypes.default.string,
    type: _propTypes.default.oneOf([TYPE.DATE, TYPE.SINGLE, TYPE.TIME12, TYPE.TIME24]),
    singleType: _propTypes.default.oneOf([SINGLE_TYPE.MONTH, SINGLE_TYPE.DAY, SINGLE_TYPE.HOUR, SINGLE_TYPE.MINUTE, SINGLE_TYPE.SECOND]),
    current: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.instanceOf(Date)]).isRequired,
    min: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.instanceOf(Date)]),
    max: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.instanceOf(Date)]),
    datePickerStyle: _propTypes.default.object,
    onSelect: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  MHDatePicker.defaultProps = {
    animationType: 'fade',
    visible: false,
    title: '开启时间',
    showSubtitle: true,
    confirmColor: _Styles.default.common.MHGreen,
    type: TYPE.TIME24,
    singleType: SINGLE_TYPE.MINUTE,
    datePickerStyle: {
      unlimitedHeightEnable: false,
      allowFontScaling: true,
      titleNumberOfLines: 1,
      subTitleNumberOfLines: 1,
      titleStyle: null,
      subTitleStyle: null,
      leftButtonNumberOfLines: 1,
      rightButtonNumberOfLines: 1,
      leftButtonStyle: null,
      rightButtonStyle: null,
      rightButtonBgStyle: null,
      leftButtonBgStyle: null
    },
    onSelect: function onSelect() {},
    accessible: true
  };
  MHDatePicker.TYPE = TYPE;
  MHDatePicker.SINGLE_TYPE = SINGLE_TYPE;

  var styles = _reactNative.StyleSheet.create({
    background: {
      flex: 1,
      backgroundColor: screenBackgroundColor
    },
    modal: {
      position: 'absolute',
      bottom: 0,
      paddingBottom: 20,
      width: modalWidth,
      marginHorizontal: margin,
      borderTopLeftRadius: borderRadius,
      borderTopRightRadius: borderRadius
    },
    titleContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    title: (0, _objectSpread2.default)({
      lineHeight: 22,
      marginTop: 25,
      fontSize: 16
    }, _font.FontPrimary),
    subtitle: (0, _objectSpread2.default)({
      width: modalWidth,
      textAlign: 'center',
      fontSize: 14,
      marginTop: 5
    }, _font.FontPrimary),
    pickerContainer: {
      flexDirection: 'row',
      height: pickerContainerHeight,
      justifyContent: 'space-between'
    },
    buttons: {
      minHeight: buttonHeight,
      flexDirection: 'row',
      backgroundColor: 'transparent',
      justifyContent: 'space-around',
      marginHorizontal: 27
    }
  });

  var _default = MHDatePicker;
  exports.default = _default;
},22924,[14305,14314,14347,14344,14359,14320,14323,14371,14377,14386,14317,10318,10297,10033,22435,22780,22927,22912,22930,22933,22426,22420,22423,23212,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.formatString = undefined;
  var placeholderRegex = /(\{[\d|\w]+\})/;

  var formatString = function formatString(str) {
    for (var _len = arguments.length, valuesForPlaceholders = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      valuesForPlaceholders[_key - 1] = arguments[_key];
    }

    return (str || '').split(placeholderRegex).filter(function (textPart) {
      return !!textPart;
    }).map(function (textPart) {
      if (textPart.match(placeholderRegex)) {
        var matchedKey = textPart.slice(1, -1);
        var valueForPlaceholder = valuesForPlaceholders[matchedKey];

        if (valueForPlaceholder == undefined) {
          var valueFromObjectPlaceholder = valuesForPlaceholders[0][matchedKey];

          if (valueFromObjectPlaceholder !== undefined) {
            valueForPlaceholder = valueFromObjectPlaceholder;
          } else {
            return valueForPlaceholder;
          }
        }

        return valueForPlaceholder;
      }

      return textPart;
    }).join('');
  };

  exports.formatString = formatString;
},22927,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.constructArray = constructArray;
  exports.isLeapYear = isLeapYear;
  exports.compareDateArray = compareDateArray;

  function constructArray(length) {
    var zeroPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    var fromZero = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var maxLength = (length - (fromZero ? 1 : 0)).toString().length;
    return Array.from({
      length: length
    }, function (v, i) {
      return ((zeroPrefix ? '0000000000000' : '') + (i + (fromZero ? 0 : 1))).slice(-maxLength);
    });
  }

  function isLeapYear(year) {
    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0 && year % 3200 !== 0;
  }

  function compareDateArray(arrA, arrB) {
    return Number(arrA.join('')) - Number(arrB.join(''));
  }
},22930,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Locale = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var langs = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var Locale = function () {
    function Locale() {
      (0, _classCallCheck2.default)(this, Locale);
    }

    (0, _createClass2.default)(Locale, null, [{
      key: "of",
      value: function of() {
        var lang = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'zh';
        return langs[lang];
      }
    }]);
    return Locale;
  }();

  exports.Locale = Locale;
},22933,[14308,14305,14320,14323,22936]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "zh", {
    enumerable: true,
    get: function get() {
      return _zh.zh;
    }
  });
  Object.defineProperty(exports, "zh_tw", {
    enumerable: true,
    get: function get() {
      return _zh_tw.zh_tw;
    }
  });
  Object.defineProperty(exports, "zh_hk", {
    enumerable: true,
    get: function get() {
      return _zh_hk.zh_hk;
    }
  });
  Object.defineProperty(exports, "en", {
    enumerable: true,
    get: function get() {
      return _en.en;
    }
  });
  Object.defineProperty(exports, "ko", {
    enumerable: true,
    get: function get() {
      return _ko.ko;
    }
  });
  Object.defineProperty(exports, "ru", {
    enumerable: true,
    get: function get() {
      return _ru.ru;
    }
  });
  Object.defineProperty(exports, "es", {
    enumerable: true,
    get: function get() {
      return _es.es;
    }
  });
  Object.defineProperty(exports, "fr", {
    enumerable: true,
    get: function get() {
      return _fr.fr;
    }
  });
  Object.defineProperty(exports, "it", {
    enumerable: true,
    get: function get() {
      return _it.it;
    }
  });
  Object.defineProperty(exports, "de", {
    enumerable: true,
    get: function get() {
      return _de.de;
    }
  });
  Object.defineProperty(exports, "id", {
    enumerable: true,
    get: function get() {
      return _id.id;
    }
  });
  Object.defineProperty(exports, "pl", {
    enumerable: true,
    get: function get() {
      return _pl.pl;
    }
  });
  Object.defineProperty(exports, "vi", {
    enumerable: true,
    get: function get() {
      return _vi.vi;
    }
  });
  Object.defineProperty(exports, "ja", {
    enumerable: true,
    get: function get() {
      return _ja.ja;
    }
  });
  Object.defineProperty(exports, "th", {
    enumerable: true,
    get: function get() {
      return _th.th;
    }
  });
  Object.defineProperty(exports, "tr", {
    enumerable: true,
    get: function get() {
      return _tr.tr;
    }
  });
  Object.defineProperty(exports, "nl", {
    enumerable: true,
    get: function get() {
      return _nl.nl;
    }
  });
  Object.defineProperty(exports, "pt", {
    enumerable: true,
    get: function get() {
      return _pt.pt;
    }
  });

  var _zh = _$$_REQUIRE(_dependencyMap[0]);

  var _zh_tw = _$$_REQUIRE(_dependencyMap[1]);

  var _zh_hk = _$$_REQUIRE(_dependencyMap[2]);

  var _en = _$$_REQUIRE(_dependencyMap[3]);

  var _ko = _$$_REQUIRE(_dependencyMap[4]);

  var _ru = _$$_REQUIRE(_dependencyMap[5]);

  var _es = _$$_REQUIRE(_dependencyMap[6]);

  var _fr = _$$_REQUIRE(_dependencyMap[7]);

  var _it = _$$_REQUIRE(_dependencyMap[8]);

  var _de = _$$_REQUIRE(_dependencyMap[9]);

  var _id = _$$_REQUIRE(_dependencyMap[10]);

  var _pl = _$$_REQUIRE(_dependencyMap[11]);

  var _vi = _$$_REQUIRE(_dependencyMap[12]);

  var _ja = _$$_REQUIRE(_dependencyMap[13]);

  var _th = _$$_REQUIRE(_dependencyMap[14]);

  var _tr = _$$_REQUIRE(_dependencyMap[15]);

  var _nl = _$$_REQUIRE(_dependencyMap[16]);

  var _pt = _$$_REQUIRE(_dependencyMap[17]);
},22936,[22939,22942,22945,22948,22951,22954,22957,22960,22963,22966,22969,22972,22975,22978,22981,22984,22987,22990]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.zh = undefined;
  var zh = {
    setting: '设置',
    featureSetting: '功能设置',
    commonSetting: '通用设置',
    name: '设备名称',
    location: '位置管理',
    memberSet: '按键设置',
    share: '设备共享',
    btGateway: '蓝牙网关',
    voiceAuth: '语音授权',
    ifttt: '智能场景',
    firmwareUpgrade: '固件升级',
    more: '更多设置',
    help: '使用帮助',
    legalInfo: '法律信息',
    deleteDevice: '删除设备',
    autoUpgrade: '固件自动升级',
    checkUpgrade: '检查固件升级',
    security: '安全设置',
    networkInfo: '网络信息',
    feedback: '反馈问题',
    timezone: '设备时区',
    addToDesktop: '添加桌面快捷方式',
    cancel: '取消',
    ok: '确定',
    am: '上午',
    pm: '下午',
    months: '个月',
    days: '天',
    hours: '小时',
    minutes: '分钟',
    seconds: '秒钟',
    month: '个月',
    day: '天',
    hour: '小时',
    minute: '分钟',
    second: '秒钟',
    yearUnit: '年',
    monthUnit: '月',
    dayUnit: '日',
    hourUnit: '时',
    minuteUnit: '分',
    secondUnit: '秒',
    dateSubTitle: '{0}年{1}月{2}日',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{0} {1}:{2}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '退出',
    firmwareUpgradeUpdate: '升级',
    firmwareUpgradeLook: '去看看',
    firmwareUpgradeForceUpdate: '由于您当前的设备固件版本过低，一些功能可能无法正常使用。请升级至最新版本，以体验更丰富的功能',
    firmwareUpgradeForceUpdating: '您的设备正在升级，请稍后，以体验更丰富的功能',
    firmwareUpgradeNewPre: '检测到设备有最新固件版本',
    firmwareUpgradeNewSub: '，是否升级',
    handling: '操作中...',
    error: '处理失败，请稍后再试',
    createLightGroup: '创建灯组（新）',
    manageLightGroup: '灯组管理（新）',
    deleteLightGroup: '解散灯组',
    selectPlugin: '请选择喜欢的插件样式使用',
    traditionalPlugin: '传统插件',
    standardPlugin: '标准插件',
    recommended: '（推荐使用）',
    changeSteps: '如需更改插件样式，可按照如下步骤操作',
    stepOne: '第一步：点击插件右上角进入更多设置',
    stepTwo: '第二步：在通用设置里找到“标准插件”，\n操作开关即可切换标准插件/传统插件',
    starting: '开始体验',
    switching: '切换中…',
    switchedSucess: '切换成功',
    switchedfail: '切换失败',
    guideFeedback: '意见反馈',
    next: '下一步',
    percentage: '{0}%',
    add: '添加',
    back: '返回',
    close: '关闭',
    collect: '收藏',
    complete: '完成',
    delete: '刪除',
    detail: '详情',
    profile: '个人中心',
    qr: '二维码',
    search: '搜索',
    selectAll: '全选',
    selectedAll: '全部选中',
    edit: '编辑',
    record: '记录',
    orientation: '切换横屏',
    save: '保存'
  };
  exports.zh = zh;
},22939,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.zh_tw = undefined;
  var zh_tw = {
    setting: '設定',
    featureSetting: '裝置設定',
    commonSetting: '一般設定',
    name: '裝置名稱',
    location: '位置管理',
    memberSet: '按鍵設定',
    share: '裝置共用',
    btGateway: '藍牙網關',
    voiceAuth: '語音授權',
    ifttt: '智能場景',
    firmwareUpgrade: '韌體更新',
    more: '更多設定',
    help: '使用説明',
    legalInfo: '法律資訊',
    deleteDevice: '刪除裝置',
    autoUpgrade: '韌體自动更新',
    checkUpgrade: '檢查韌體更新',
    security: '安全設定',
    networkInfo: '網路資訊',
    feedback: '反饋問題',
    timezone: '裝置時區',
    addToDesktop: '新増捷徑至桌面',
    cancel: '取消',
    ok: '確認',
    am: '上午',
    pm: '下午',
    months: '個月',
    days: '天',
    hours: '小時',
    minutes: '分鐘',
    seconds: '秒鐘',
    month: '個月',
    day: '天',
    hour: '小時',
    minute: '分鐘',
    second: '秒鐘',
    yearUnit: '年',
    monthUnit: '月',
    dayUnit: '日',
    hourUnit: '時',
    minuteUnit: '分',
    secondUnit: '秒',
    dateSubTitle: '{0}年{1}月{2}日',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{0} {1}:{2}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '退出',
    firmwareUpgradeUpdate: '升級',
    firmwareUpgradeLook: '看看',
    firmwareUpgradeForceUpdate: '由於您目前的用戶端版本過低，一些功能可能無法正常使用。 請升級最新版本，以體驗更豐富的功能',
    firmwareUpgradeForceUpdating: '您的裝置正在升級，請稍後，以體驗更豐富的功能',
    firmwareUpgradeNewPre: '檢測到裝置有最新韌體版本',
    firmwareUpgradeNewSub: '，是否升級？',
    handling: '執行中...',
    error: '處理失敗，請重試',
    createLightGroup: '建立燈組 (新)',
    manageLightGroup: '燈組管理 (新)',
    deleteLightGroup: '解散燈組',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%',
    add: '新增',
    back: '返回',
    close: '關閉',
    collect: '收藏',
    complete: '完成',
    delete: '刪除',
    detail: '詳細資料',
    profile: '個人中心',
    qr: 'QR 碼',
    search: '搜尋',
    selectAll: '全選',
    selectedAll: '全選',
    edit: '編輯',
    record: '記錄',
    orientation: '切換橫向螢幕',
    save: '儲存'
  };
  exports.zh_tw = zh_tw;
},22942,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.zh_hk = undefined;
  var zh_hk = {
    setting: '設定',
    featureSetting: '裝置設定',
    commonSetting: '一般設定',
    name: '裝置名稱',
    location: '位置管理',
    memberSet: '按鍵設定',
    share: '裝置共用',
    btGateway: '藍牙網關',
    voiceAuth: '語音授權',
    ifttt: '智慧場景',
    firmwareUpgrade: '韌體更新',
    more: '更多設定',
    help: '使用説明',
    legalInfo: '法律資訊',
    deleteDevice: '刪除裝置',
    autoUpgrade: '韌體自动更新',
    checkUpgrade: '檢查韌體更新',
    security: '安全設定',
    networkInfo: '網路資訊',
    feedback: '反饋問題',
    timezone: '裝置時區',
    addToDesktop: '新增捷徑到桌面',
    cancel: '取消',
    ok: '確認',
    am: '上午',
    pm: '下午',
    months: '個月',
    days: '天',
    hours: '小時',
    minutes: '分鐘',
    seconds: '秒鐘',
    month: '個月',
    day: '天',
    hour: '小時',
    minute: '分鐘',
    second: '秒鐘',
    yearUnit: '年',
    monthUnit: '月',
    dayUnit: '日',
    hourUnit: '時',
    minuteUnit: '分',
    secondUnit: '秒',
    dateSubTitle: '{0}年{1}月{2}日',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{0} {1}:{2}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '退出',
    firmwareUpgradeUpdate: '升級',
    firmwareUpgradeLook: '去看看',
    firmwareUpgradeForceUpdate: '由於您目前的用戶端版本過低，一些功能可能無法正常使用。 請升級最新版本，以體驗更豐富的功能',
    firmwareUpgradeForceUpdating: '您的裝置正在升級，請稍後，以體驗更豐富的功能',
    firmwareUpgradeNewPre: '檢測到裝置有最新韌體版本',
    firmwareUpgradeNewSub: '，是否升級？',
    handling: '執行中...',
    error: '處理失敗，請重試',
    createLightGroup: '建立燈組（新）',
    manageLightGroup: '燈組管理（新）',
    deleteLightGroup: '解散燈組',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%',
    add: '新增',
    back: '返回',
    close: '關閉',
    collect: '收藏',
    complete: '完成',
    delete: '刪除',
    detail: '詳情',
    profile: '個人中心',
    qr: 'QR 碼',
    search: '搜尋',
    selectAll: '全選',
    selectedAll: '全部選中',
    edit: '編輯',
    record: '記錄',
    orientation: '切換橫向畫面',
    save: '儲存'
  };
  exports.zh_hk = zh_hk;
},22945,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.en = undefined;
  var en = {
    setting: 'Settings',
    featureSetting: 'Device settings',
    commonSetting: 'General settings',
    name: 'Device name',
    location: 'Manage location',
    memberSet: 'Key settings',
    share: 'Share device',
    btGateway: 'BLE Gateway',
    voiceAuth: 'Voice authorization',
    ifttt: 'Automation',
    firmwareUpgrade: 'Firmware update',
    more: 'Additional settings',
    help: 'Help',
    legalInfo: 'Legal information',
    deleteDevice: 'Delete device',
    autoUpgrade: 'Automatically update firmware',
    checkUpgrade: 'Check for firmware update',
    security: 'Security settings',
    networkInfo: 'Network info',
    feedback: 'Feedback',
    timezone: 'Device time zone',
    addToDesktop: 'Add to Home screen',
    cancel: 'Cancel',
    ok: 'Confirm',
    am: 'AM',
    pm: 'PM',
    months: 'months',
    days: 'days',
    hours: 'hours',
    minutes: 'minutes',
    seconds: 'seconds',
    month: 'month',
    day: 'day',
    hour: 'hour',
    minute: 'minute',
    second: 'second',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Exit',
    firmwareUpgradeUpdate: 'Update',
    firmwareUpgradeLook: 'Take a look',
    firmwareUpgradeForceUpdate: 'Current firmware may be too old to run some features. Update to the latest version for better experience.',
    firmwareUpgradeForceUpdating: 'Your device is updating, try again later',
    firmwareUpgradeNewPre: 'Firmware update ',
    firmwareUpgradeNewSub: ' available. Update now?',
    handling: 'Running…',
    error: 'Could not operate, please try again later',
    createLightGroup: 'Create light group(new)',
    manageLightGroup: 'Manage devices(new)',
    deleteLightGroup: 'Disband light group',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%',
    add: 'Add',
    back: 'Back',
    close: 'Turn Off',
    collect: 'Add to favorites',
    complete: 'Completed',
    delete: 'Delete',
    detail: 'Details',
    profile: 'Profile',
    qr: 'QR code',
    search: 'Search',
    selectAll: 'Select all',
    selectedAll: 'All selected',
    edit: 'Edit',
    record: 'Record',
    orientation: 'Switch to landscape mode',
    save: 'Save'
  };
  exports.en = en;
},22948,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ko = undefined;
  var ko = {
    setting: '설정',
    featureSetting: '기기 설정',
    commonSetting: '일반 설정',
    name: '기기 이름',
    location: '위치 관리',
    memberSet: '버튼 설정',
    share: '기기 공유',
    btGateway: 'BLE 게이트웨이',
    voiceAuth: '음성 권한',
    ifttt: '자동화',
    firmwareUpgrade: '펌웨어 업데이트',
    more: '추가 설정',
    help: '도움말',
    legalInfo: '법률 정보',
    deleteDevice: '기기 제거',
    autoUpgrade: '펌웨어 자동 업데이트',
    checkUpgrade: '펌웨어 업데이트 확인',
    security: '보안 설정',
    networkInfo: '네트워크 정보',
    feedback: '피드백',
    timezone: '디바이스 시간대',
    addToDesktop: '홈 화면에 추가',
    cancel: '취소',
    ok: '정보 확인',
    am: '오전',
    pm: '오후',
    months: '달',
    days: '일',
    hours: '시간',
    minutes: '분',
    seconds: '초',
    month: '월',
    day: '일',
    hour: '시',
    minute: '분',
    second: '초',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '나가기',
    firmwareUpgradeUpdate: '업데이트',
    firmwareUpgradeLook: '확인해보세요',
    firmwareUpgradeForceUpdate: '현재 펌웨어 버전이 너무 오래되었습니다. 몇몇 기능이 정상적으로 작동하지 않을 수 있습니다. 더 나은 사용을 위해 최신 버전으로 업데이트 하십시오.',
    firmwareUpgradeForceUpdating: '기기를 업데이트 중입니다. 나중에 다시 시도하십시오.',
    firmwareUpgradeNewPre: '펌웨어 업데이트 ',
    firmwareUpgradeNewSub: ' 가능, 지금 업데이트 하시겠습니까?',
    handling: '실행 중...',
    error: '다시 시도',
    createLightGroup: '전등 그룹 생성(신규)',
    manageLightGroup: '전등 그룹 관리(신규)',
    deleteLightGroup: '전등 그룹 해제',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%',
    add: '추가',
    back: '돌아가기',
    close: '전원 끄기',
    collect: '즐겨찾기에 추가',
    complete: '완료',
    delete: '삭제',
    detail: '상세 내용',
    profile: '프로필',
    qr: 'QR 코드',
    search: '검색',
    selectAll: '모두 선택',
    selectedAll: '모두 선택됨',
    edit: '편집',
    record: '녹음',
    orientation: '가로 모드로 전환',
    save: '저장'
  };
  exports.ko = ko;
},22951,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ru = undefined;
  var ru = {
    setting: 'Настройки',
    featureSetting: 'Настройки устройств',
    commonSetting: 'Общие настройки',
    name: 'Имя устройства',
    location: 'Управление местами',
    memberSet: 'Настройка кнопок',
    share: 'Поделиться устройством',
    btGateway: 'BLE шлюз',
    voiceAuth: 'Голосовая авторизация',
    ifttt: 'Автоматизация',
    firmwareUpgrade: 'Проверить наличие обновлений',
    more: 'Дополнительные настройки',
    help: 'Справка',
    legalInfo: 'Легальная информация',
    deleteDevice: 'Удалить устройство',
    autoUpgrade: 'Автоматическое обновление встроенного ПО',
    checkUpgrade: 'Проверить наличие обновлений',
    security: 'Параметры безопасности',
    networkInfo: 'Информация о сети',
    feedback: 'Отзыв',
    timezone: 'Часовой пояс устройства',
    addToDesktop: 'Добавить на главный экран',
    cancel: 'Отменить',
    ok: 'Подтвердить',
    am: 'ДП',
    pm: 'ПП',
    months: 'месяцы',
    days: 'дни',
    hours: 'часы',
    minutes: 'минуты',
    seconds: 'секунды',
    month: 'месяц ',
    day: 'день',
    hour: 'час ',
    minute: 'минута',
    second: 'сеунда',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Выход',
    firmwareUpgradeUpdate: 'Обновление',
    firmwareUpgradeLook: 'Посмотреть',
    firmwareUpgradeForceUpdate: 'Текущая версия ПО устарела, некоторые возможности могут быть недоступны. Обновите до последней версии ПО.',
    firmwareUpgradeForceUpdating: 'Устройство обновляется, попробуйте позже',
    firmwareUpgradeNewPre: 'Доступно обновление ПО ',
    firmwareUpgradeNewSub: ', обновить сейчас?',
    handling: 'Загрузка...',
    error: 'Попробовать снова',
    createLightGroup: 'Создать группу светильников (новинка)',
    manageLightGroup: 'Управление устройствами (новинка)',
    deleteLightGroup: 'Расформировать группу светильников',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%',
    add: 'Добавить',
    back: 'Назад',
    close: 'Выключить',
    collect: 'Добавить в избранное',
    complete: 'Завершено',
    delete: 'Удалить',
    detail: 'Подробности',
    profile: 'Профиль',
    qr: 'QR-код',
    search: 'Поиск',
    selectAll: 'Выбрать все',
    selectedAll: 'Все выбрано',
    edit: 'Изменить',
    record: 'Запись',
    orientation: 'Переключиться в альбомный режим',
    save: 'Сохранить'
  };
  exports.ru = ru;
},22954,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.es = undefined;
  var es = {
    setting: 'Ajustes',
    featureSetting: 'Ajustes de dispositivo',
    commonSetting: 'Ajustes generales',
    name: 'Nombre del dispositivo',
    location: 'Gestionar ubicaciones',
    memberSet: 'Ajustes de los botones',
    share: 'Compartir dispositivo',
    btGateway: 'Entrada BLE',
    voiceAuth: 'Autorización de voz',
    ifttt: 'Automatización',
    firmwareUpgrade: 'Actualizaciones de firmware',
    more: 'Ajustes adicionales',
    help: 'Ayuda',
    legalInfo: 'Información legal',
    deleteDevice: 'Eliminar dispositivo',
    autoUpgrade: 'Actualizar automáticamente el firmware',
    checkUpgrade: 'Buscar actualizaciones de firmware',
    security: 'Ajustes de seguridad',
    networkInfo: 'Información de red',
    feedback: 'Comentario',
    timezone: 'Zona horaria del dispositivo',
    addToDesktop: 'Añadir a la pantalla de Inicio',
    cancel: 'Cancelar',
    ok: 'Confirmar',
    am: 'AM',
    pm: 'PM',
    months: 'meses',
    days: 'días',
    hours: 'horas',
    minutes: 'minutos',
    seconds: 'segundos',
    month: 'meses',
    day: 'día',
    hour: 'hora',
    minute: 'minuto',
    second: 'segundo ',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Salir',
    firmwareUpgradeUpdate: 'Actualizar',
    firmwareUpgradeLook: 'Echa un vistazo',
    firmwareUpgradeForceUpdate: 'La versión de firmware actual es demasiado antigua, puede que algunas características no funcionen correctamente. Actualiza a la última versión para una mejor experiencia.',
    firmwareUpgradeForceUpdating: 'Tu dispositivo se está actualizando, inténtalo más tarde',
    firmwareUpgradeNewPre: 'Actualización ',
    firmwareUpgradeNewSub: ' de firmware disponible, ¿actualizar ahora?',
    handling: 'Ejecutándose...',
    error: 'Reintentar',
    createLightGroup: 'Crear grupo de luces (nuevo)',
    manageLightGroup: 'Administrar dispositivos (nuevo)',
    deleteLightGroup: 'Deshacer grupo de luces',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%',
    add: 'Añadir',
    back: 'Volver',
    close: 'Apagar',
    collect: 'Añadir a favoritos',
    complete: 'Completado',
    delete: 'Eliminar',
    detail: 'Detalles',
    profile: 'Perfil',
    qr: 'Código QR',
    search: 'Búsqueda',
    selectAll: 'Seleccionar todo',
    selectedAll: 'Todo seleccionado',
    edit: 'Editar',
    record: 'Grabar',
    orientation: 'Cambiar a modo horizontal',
    save: 'Guardar'
  };
  exports.es = es;
},22957,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.fr = undefined;
  var fr = {
    setting: 'Paramètres',
    featureSetting: "Paramètres de l'appareil",
    commonSetting: 'Paramètres généraux',
    name: "Nom de l'appareil",
    location: 'Gérer emplacement',
    memberSet: 'Paramètres des boutons',
    share: "Partager l'appareil",
    btGateway: 'Passerelle BLE',
    voiceAuth: 'Autorisation vocale',
    ifttt: 'Automatisation',
    firmwareUpgrade: 'Mise à jour logiciel',
    more: 'Paramètres supplémentaires',
    help: 'Aide',
    legalInfo: 'Information légale',
    deleteDevice: "Supprimer l'appareil",
    autoUpgrade: 'Mettre à jour le logiciel automatiquement',
    checkUpgrade: 'Vérifier les mises à jour du micrologiciel',
    security: 'Paramètres de sécurité',
    networkInfo: 'Informations sur le réseau',
    feedback: 'Commentaire',
    timezone: 'Fuseau horaire de l’appareil',
    addToDesktop: "Ajouter à l'écran d'accueil",
    cancel: 'Annuler',
    ok: 'Confirmer',
    am: 'AM',
    pm: 'PM',
    months: 'mois',
    days: 'jours',
    hours: 'heures',
    minutes: 'minutes',
    seconds: 'secondes',
    month: 'mois',
    day: 'jours',
    hour: 'heure',
    minute: 'minute',
    second: 'seconde',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Quitter',
    firmwareUpgradeUpdate: 'Mettre à jour',
    firmwareUpgradeLook: 'Jeter un coup d\'œil',
    firmwareUpgradeForceUpdate: 'La version actuelle du micrologiciel est trop ancienne. Certaines fonctionnalités peuvent ne pas fonctionner correctement. Mettez à jour la dernière version pour une meilleure expérience',
    firmwareUpgradeForceUpdating: 'Votre appareil est en cours de mise à jour. Réessayez plus tard',
    firmwareUpgradeNewPre: 'Mise à jour du micrologiciel ',
    firmwareUpgradeNewSub: ' disponible. Mettre à jour maintenant ?',
    handling: 'En cours d’exécution…',
    error: "Échec de l'opération, veuillez réessayer plus tard",
    createLightGroup: 'Créer un groupe d’éclairage (nouveau)',
    manageLightGroup: 'Gérer les appareils (nouveau)',
    deleteLightGroup: 'Supprimer un groupe d’éclairage',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%',
    add: 'Ajouter',
    back: 'Retour',
    close: 'Éteindre',
    collect: 'Ajouter aux favoris',
    complete: 'Terminé',
    delete: 'Supprimer',
    detail: 'Détails',
    profile: 'Profil',
    qr: 'Code QR',
    search: 'Recherche',
    selectAll: 'Tout sélectionner',
    selectedAll: 'Tous sélectionnés',
    edit: 'Modifier',
    record: 'Enregistrement',
    orientation: 'Passer en mode Paysage',
    save: 'Enregistrer'
  };
  exports.fr = fr;
},22960,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.it = undefined;
  var it = {
    setting: 'Impostazioni',
    featureSetting: 'Impostazioni dispositivo',
    commonSetting: 'Impostazioni generali',
    name: 'Nome dispositivo',
    location: 'Gestisci posizione',
    memberSet: 'Impostazioni pulsante',
    share: 'Condividi dispositivo',
    btGateway: 'Gateway BLE',
    voiceAuth: 'Autorizzazione vocale',
    ifttt: 'Automazione',
    firmwareUpgrade: 'Aggiornamento firmware',
    more: 'Impostazioni aggiuntive',
    help: 'Guida',
    legalInfo: 'Informazioni legali',
    deleteDevice: 'Rimuovi dispositivo',
    autoUpgrade: 'Aggiorna automaticamente il firmware',
    checkUpgrade: 'Controlla aggiornamento firmware',
    security: 'Impostazioni di sicurezza',
    networkInfo: 'Informazioni di rete',
    feedback: 'Feedback',
    timezone: 'Fuso orario del dispositivo',
    addToDesktop: 'Aggiungi a schermata iniziale',
    cancel: 'Annulla',
    ok: 'Conferma',
    am: 'AM',
    pm: 'PM',
    months: 'Mesi',
    days: 'Giorni',
    hours: 'Ore',
    minutes: 'Minuti',
    seconds: 'Secondi',
    month: 'Mese',
    day: 'Giorno',
    hour: 'Ora',
    minute: 'Minuto',
    second: 'Secondo',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Esci',
    firmwareUpgradeUpdate: 'Aggiorna',
    firmwareUpgradeLook: 'Guarda',
    firmwareUpgradeForceUpdate: "La versione firmware in uso è obsoleta. Alcune funzioni potrebbero non funzionare correttamente. Aggiorna all'ultima versione per una migliore esperienza.",
    firmwareUpgradeForceUpdating: 'Il dispositivo è in fase di aggiornamento. Riprova più tardi',
    firmwareUpgradeNewPre: 'Aggiornamento firmware ',
    firmwareUpgradeNewSub: ' disponibile. Aggiornare adesso?',
    handling: 'In esecuzione…',
    error: 'Potrebbe non funzionare, riprova più tardi',
    createLightGroup: 'Crea gruppo luci(nuovo)',
    manageLightGroup: 'Gestisci dispositivi(nuovo)',
    deleteLightGroup: 'Elimina gruppo luci',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%',
    add: 'Aggiungi',
    back: 'Indietro',
    close: 'Disattiva',
    collect: 'Aggiungi ai Preferiti',
    complete: 'Operazione completata',
    delete: 'Elimina',
    detail: 'Dettagli',
    profile: 'Profilo',
    qr: 'Codice QR',
    search: 'Cerca',
    selectAll: 'Seleziona tutto',
    selectedAll: 'Tutte le selezioni',
    edit: 'Modifica',
    record: 'Registra',
    orientation: 'Passa a modalità orizzontale',
    save: 'Salva'
  };
  exports.it = it;
},22963,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.de = undefined;
  var de = {
    setting: 'Einstellungen',
    featureSetting: 'Geräteinstellungen',
    commonSetting: 'Allgemeine einstellungen',
    name: 'Gerätename',
    location: 'Standort verwalten',
    memberSet: 'Schaltflächen-Einstellungen',
    share: 'Gerät teilen',
    btGateway: 'BLE-Gateway',
    voiceAuth: 'Sprachautorisierung',
    ifttt: 'Automatisierung',
    firmwareUpgrade: 'Firmware-Aktualisierung',
    more: 'Zusätzliche Einstellungen',
    help: 'Hilfe',
    legalInfo: 'Rechtsinformation',
    deleteDevice: 'Gerät entfernen',
    autoUpgrade: 'Firmware automatisch aktualisieren',
    checkUpgrade: 'Nach Firmware-Aktualisierung suchen.',
    security: 'Sicherheitseinstellungen',
    networkInfo: 'Netzwerk-Info',
    feedback: 'Feedback',
    timezone: 'Gerätezeitzone',
    addToDesktop: 'Zum Startbildschirm hinzufügen',
    cancel: 'Abbrechen',
    ok: 'Bestätigen',
    am: 'AM',
    pm: 'PM',
    months: 'Monate',
    days: 'Tage',
    hours: 'Stunden',
    minutes: 'Minuten',
    seconds: 'Sekunden',
    month: 'Monat ',
    day: 'Tag ',
    hour: 'Stunde ',
    minute: 'Minute ',
    second: 'Sekunde ',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Beenden',
    firmwareUpgradeUpdate: 'Aktualisieren',
    firmwareUpgradeLook: 'Ansehen',
    firmwareUpgradeForceUpdate: 'Die aktuelle Firmware ist möglicherweise zu alt, um einige Funktionen auszuführen. Aktualisieren Sie auf die neueste Version, um eine verbesserte Funktionsausführung zu erzielen.',
    firmwareUpgradeForceUpdating: 'Ihr Gerät wird aktualisiert, versuchen Sie es später erneut',
    firmwareUpgradeNewPre: 'Firmware-Aktualisierung ',
    firmwareUpgradeNewSub: ' verfügbar, jetzt aktualisieren?',
    handling: 'Wird ausgeführt...',
    error: 'Funktionierte nicht, bitte versuchen Sie es später erneut.',
    createLightGroup: 'Lichtgruppe erstellen (neu)',
    manageLightGroup: 'Geräte verwalten (neu)',
    deleteLightGroup: 'Lichtgruppe auflösen',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%',
    add: 'Hinzufügen',
    back: 'Zurück',
    close: 'Ausschalten',
    collect: 'Zu Favoriten hinzufügen',
    complete: 'Ausgeführt',
    delete: 'Löschen',
    detail: 'Details',
    profile: 'Profil',
    qr: 'QR-Code',
    search: 'Suchen',
    selectAll: 'Alle auswählen',
    selectedAll: 'Alle ausgewählt',
    edit: 'Bearbeiten',
    record: 'Aufzeichnen',
    orientation: 'Zu Querformat wechseln',
    save: 'Speichern'
  };
  exports.de = de;
},22966,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.id = undefined;
  var id = {
    setting: 'Pengaturan',
    featureSetting: 'Pengaturan perangkat',
    commonSetting: 'Pengaturan umum',
    name: 'Nama perangkat',
    location: 'Kelola lokasi',
    memberSet: 'Pengaturan tombol',
    share: 'Bagikan perangkat',
    btGateway: 'Gerbang BLE',
    voiceAuth: 'Otorisasi suara',
    ifttt: 'Otomatisasi',
    firmwareUpgrade: 'Pembaruan firmware',
    more: 'Pengaturan tambahan',
    help: 'Bantuan',
    legalInfo: 'Informasi hukum',
    deleteDevice: 'Hapus perangkat',
    autoUpgrade: 'Perbarui firmware secara otomatis',
    checkUpgrade: 'Periksa pembaruan firmware',
    security: 'Pengaturan keamanan',
    networkInfo: 'Pengaturan jaringan',
    feedback: 'Umpan balik',
    timezone: 'Zona waktu perangkat',
    addToDesktop: 'Tambahkan ke layar Beranda',
    cancel: 'Batal',
    ok: 'Konfirmasi',
    am: 'AM',
    pm: 'PM',
    months: 'bulan',
    days: 'hari',
    hours: 'jam',
    minutes: 'menit',
    seconds: 'detik',
    month: 'bulan',
    day: 'hari ',
    hour: 'jam',
    minute: 'menit',
    second: 'detik',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Keluar',
    firmwareUpgradeUpdate: 'Perbarui',
    firmwareUpgradeLook: 'Lihat',
    firmwareUpgradeForceUpdate: 'Versi firmware saat ini sudah terlalu lama. Beberapa fitur mungkin tidak berfungsi dengan benar. Perbarui ke versi terbaru untuk menikmati pengalaman yang lebih baik.',
    firmwareUpgradeForceUpdating: 'Perangkat sedang diperbarui, coba lagi nanti',
    firmwareUpgradeNewPre: 'Pembaruan firmware ',
    firmwareUpgradeNewSub: ' tersedia, perbarui sekarang?',
    handling: 'Menjalankan...',
    error: 'Tidak dapat beroperasi, coba lagi nanti',
    createLightGroup: 'Buat grup lampu(baru)',
    manageLightGroup: 'Kelola perangkat(baru)',
    deleteLightGroup: 'Hapus grup lampu',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%',
    add: 'Tambahkan',
    back: 'Kembali',
    close: 'Matikan',
    collect: 'Tambahkan ke favorit',
    complete: 'Selesai',
    delete: 'Hapus',
    detail: 'Detail',
    profile: 'Profil',
    qr: 'Kode QR',
    search: 'Cari',
    selectAll: 'Pilih semua',
    selectedAll: 'Semua dipilih',
    edit: 'Edit',
    record: 'Rekam',
    orientation: 'Beralih ke mode lanskap',
    save: 'Simpan'
  };
  exports.id = id;
},22969,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.pl = undefined;
  var pl = {
    setting: 'Ustawienia',
    featureSetting: 'Ustawienia urządzenia',
    commonSetting: 'Ustawienia ogólne',
    name: 'Nazwa urządzenia',
    location: 'Zarządzaj lokalizacją',
    memberSet: 'Ustawienia przycisku',
    share: 'Udostępnij urządzenie',
    btGateway: 'Bramka BLE',
    voiceAuth: 'Autoryzacja głosu',
    ifttt: 'Automatyzacja',
    firmwareUpgrade: 'Aktualizacja oprogramowania sprzętowego',
    more: 'Dodatkowe ustawienia',
    help: 'Pomoc',
    legalInfo: 'Informacje prawne',
    deleteDevice: 'Usuń urządzenie',
    autoUpgrade: 'Automatyczna aktualizacja oprogramowania sprzętowego',
    checkUpgrade: 'Sprawdź aktualizacje oprogramowania sprzętowego',
    security: 'Ustawienia bezpieczeństwa',
    networkInfo: 'Informacje o sieci',
    feedback: 'Informacje zwrotne',
    timezone: 'Strefa czasowa urządzenia',
    addToDesktop: 'Dodaj do ekranu głównego',
    cancel: 'Anuluj',
    ok: 'Potwierdź',
    am: 'AM ',
    pm: 'PM',
    months: 'miesiące',
    days: 'dni',
    hours: 'godziny',
    minutes: 'minuty',
    seconds: 'sekundy',
    month: 'miesiąc',
    day: 'dzień',
    hour: 'godzina',
    minute: 'minuta',
    second: 'sekunda',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Wyjdź',
    firmwareUpgradeUpdate: 'Aktualizuj',
    firmwareUpgradeLook: 'Przeglądaj',
    firmwareUpgradeForceUpdate: 'Aktualna wersja oprogramowania sprzętowego jest zbyt stara, aby niektóre funkcje działały poprawnie. Zaktualizuj do najnowszej wersji, aby działo sprawniej.',
    firmwareUpgradeForceUpdating: 'Urządzenie jest aktualizowane, spróbuj ponownie później.',
    firmwareUpgradeNewPre: 'Dostępna jest aktualizacja oprogramowania sprzętowego',
    firmwareUpgradeNewSub: '. Zaktualizować teraz?',
    handling: 'Pracuje…',
    error: 'Spróbuj ponownie',
    createLightGroup: 'Utwórz grupę oświetleniową (nowość)',
    manageLightGroup: 'Zarządzaj urządzeniami (nowość)',
    deleteLightGroup: 'Rozgrupuj grupę oświetleniową',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%',
    add: 'Dodaj',
    back: 'Wstecz',
    close: 'Wyłącz',
    collect: 'Dodaj do ulubionych',
    complete: 'Zakończono',
    delete: 'Usuń',
    detail: 'Szczegóły',
    profile: 'Profil',
    qr: 'Kod QR',
    search: 'Szukaj',
    selectAll: 'Wybierz wszystko',
    selectedAll: 'Wszystkie zaznaczone',
    edit: 'Edytuj',
    record: 'Rejestruj',
    orientation: 'Przełącz w tryb poziomy',
    save: 'Zapisz'
  };
  exports.pl = pl;
},22972,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.vi = undefined;
  var vi = {
    setting: 'Cài đặt',
    featureSetting: 'Cài đặt thiết bị',
    commonSetting: 'Cài đặt chung',
    name: 'Tên thiết bị',
    location: 'Quản lí vị trí',
    memberSet: 'Cài đặt nút',
    share: 'Chia sẻ thiết bị',
    btGateway: 'Cổng BLE',
    voiceAuth: 'Cấp quyền bằng giọng nói',
    ifttt: 'Tự động',
    firmwareUpgrade: 'Kiểm tra bản cập nhật chương trình cơ sở',
    more: 'Cài đặt khác',
    help: 'Trợ giúp',
    legalInfo: 'Thông tin hợp pháp',
    deleteDevice: 'Xóa thiết bị',
    autoUpgrade: 'Tự động cập nhật chương trình cơ sở',
    checkUpgrade: 'Kiểm tra bản cập nhật chương trình cơ sở',
    security: 'Cài đặt bảo mật',
    networkInfo: 'Thiết lập mạng',
    feedback: 'Phản hồi',
    timezone: 'Múi giờ thiết bị',
    addToDesktop: 'Thêm vào Màn hình chính',
    cancel: 'Huỷ bỏ',
    ok: 'Xác nhận',
    am: 'Sáng',
    pm: 'Tối',
    months: 'Tháng',
    days: 'Ngày',
    hours: 'Giờ',
    minutes: 'Phút',
    seconds: 'Giây',
    month: 'Tháng',
    day: 'Ngày',
    hour: 'Giờ',
    minute: 'Phút',
    second: 'Giây',
    yearUnit: 'Năm',
    monthUnit: 'Tháng',
    dayUnit: 'Ngày',
    hourUnit: 'Giờ',
    minuteUnit: 'Phút',
    secondUnit: 'Giây',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Thoát',
    firmwareUpgradeUpdate: 'Cập nhật',
    firmwareUpgradeLook: 'Xem xét',
    firmwareUpgradeForceUpdate: 'Phiên bản chương trình cơ sở hiện tại quá cũ, một số tính năng có thể không hoạt động bình thường. Cập nhật lên phiên bản mới nhất để có trải nghiệm tốt hơn.',
    firmwareUpgradeForceUpdating: 'Thiết bị của bạn đang cập nhật, hãy thử lại sau',
    firmwareUpgradeNewPre: 'Đã có bản cập nhật chương trình cơ sở ',
    firmwareUpgradeNewSub: ', cập nhật ngay bây giờ?',
    handling: 'Đang thực hiện',
    error: 'Thử lại',
    createLightGroup: 'Tạo nhóm đèn (mới)',
    manageLightGroup: 'Quản lý thiết bị (mới)',
    deleteLightGroup: 'Hủy nhóm đèn',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%',
    add: 'Thêm',
    back: 'Quay lại',
    close: 'Tắt',
    collect: 'Thêm vào mục yêu thích',
    complete: 'Đã hoàn tất',
    delete: 'Xóa',
    detail: 'Chi tiết',
    profile: 'Hồ sơ',
    qr: 'Mã QR',
    search: 'Tìm kiếm',
    selectAll: 'Chọn tất cả',
    selectedAll: 'Đã chọn tất cả',
    edit: 'Chỉnh sửa',
    record: 'Ghi âm',
    orientation: 'Chuyển sang chế độ ngang',
    save: 'Lưu'
  };
  exports.vi = vi;
},22975,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ja = undefined;
  var ja = {
    setting: '設定',
    featureSetting: 'デバイス設定',
    commonSetting: '全般設定',
    name: 'デバイス名',
    location: '位置を管理する',
    memberSet: 'ボタン設定',
    share: 'デバイスを共有する',
    btGateway: 'BLE ゲートウェイ',
    voiceAuth: '音声承認',
    ifttt: '自動化',
    firmwareUpgrade: 'ファームウェア更新する',
    more: '詳細設定',
    help: 'ヘルプ',
    legalInfo: '法情報',
    deleteDevice: 'デバイスを削除する',
    autoUpgrade: 'ファームウェアの自動アップグレード',
    checkUpgrade: 'ファームウェア更新プログラムの有無を確認する',
    security: 'セキュリティ設定',
    networkInfo: 'ネットワーク情報',
    feedback: 'フィードバック',
    timezone: 'デバイスタイムゾーン',
    addToDesktop: 'ホーム画面に追加する',
    cancel: 'キャンセル',
    ok: '確定',
    am: '午前',
    pm: '午後',
    months: '月',
    days: '日',
    hours: '時間',
    minutes: '分',
    seconds: '秒',
    month: '月',
    day: '日',
    hour: '時間',
    minute: '分',
    second: '秒',
    yearUnit: '年',
    monthUnit: '月',
    dayUnit: '日',
    hourUnit: '時',
    minuteUnit: '分',
    secondUnit: '秒',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '終了',
    firmwareUpgradeUpdate: '更新',
    firmwareUpgradeLook: '調べる',
    firmwareUpgradeForceUpdate: '現在ご使用のファームウェアは旧バージョンのため、一部の機能が正しく作動しない場合があります。より良いエクスペリエンスのために、最新バージョンに更新してください。',
    firmwareUpgradeForceUpdating: 'デバイス更新中です。後ほど再試行してください。',
    firmwareUpgradeNewPre: 'ファームウェア更新',
    firmwareUpgradeNewSub: '使用可能です。今すぐ更新しますか？',
    handling: '実行中',
    error: '再試行する',
    createLightGroup: '照明グループ作成（新）',
    manageLightGroup: '照明グループ管理（新）',
    deleteLightGroup: '照明グループ解除',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%',
    add: '追加',
    back: '戻る',
    close: 'オフにする',
    collect: 'お気に入りに追加',
    complete: '完了しました',
    delete: '削除',
    detail: '詳細情報',
    profile: 'プロフィール',
    qr: 'QRコード',
    search: '検索',
    selectAll: 'すべて選択',
    selectedAll: 'すべて選択済み',
    edit: '編集',
    record: '録画',
    orientation: '横向きモードに切り替えます',
    save: '保存'
  };
  exports.ja = ja;
},22978,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.th = undefined;
  var th = {
    setting: 'การตั้งค่า',
    featureSetting: 'การตั้งค่าอุปกรณ์',
    commonSetting: 'การตั้งค่าทั่วไป',
    name: 'ชื่ออุปกรณ์',
    location: 'จัดการตำแหน่งที่ตั้ง',
    memberSet: 'การตั้งค่าปุ่ม',
    share: 'แชร์อุปกรณ์',
    btGateway: 'เกตเวย์ BLE',
    voiceAuth: 'การอนุญาตด้วยเสียง',
    ifttt: 'ระบบอัตโนมัติ',
    firmwareUpgrade: 'การอัปเดตเฟิร์มแวร์',
    more: 'การตั้งค่าเพิ่มเติม',
    help: 'ความช่วยเหลือ',
    legalInfo: 'ข้อมูลทางกฎหมาย',
    deleteDevice: 'ลบอุปกรณ์ออก',
    autoUpgrade: 'อัปเดตเฟิร์มแวร์โดยอัตโนมัติ',
    checkUpgrade: 'ตรวจสอบหาการอัปเดตเฟิร์มแวร์',
    security: 'การตั้งค่าความปลอดภัย',
    networkInfo: 'การตั้งค่าเครือข่าย',
    feedback: 'คำติชม',
    timezone: 'โซนเวลาของอุปกรณ์',
    addToDesktop: 'เพิ่มไปยังหน้าโฮม',
    cancel: 'ยกเลิก',
    ok: 'ตกลง',
    am: 'AM',
    pm: 'PM',
    months: 'เดือน',
    days: 'วัน',
    hours: 'ชั่วโมง',
    minutes: 'นาที',
    seconds: 'วินาที',
    month: 'เดือน',
    day: 'วัน',
    hour: 'ชั่วโมง',
    minute: 'นาที',
    second: 'วินาที',
    yearUnit: 'ปี',
    monthUnit: 'เดือน',
    dayUnit: 'วัน',
    hourUnit: 'ชั่วโมง',
    minuteUnit: 'นาที',
    secondUnit: 'วินาที',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'ออก',
    firmwareUpgradeUpdate: 'อัปเดต',
    firmwareUpgradeLook: 'ลองดู',
    firmwareUpgradeForceUpdate: 'เวอร์ชั่นเฟิร์มแวร์ปัจจุบันเก่าไป ฟีเจอร์บางอย่างอาจทำงานไม่ถูกต้อง อัปเดตเป็นเวอร์ชั่นล่าสุดเพื่อประสบการณ์การใช้งานที่ดีขึ้น',
    firmwareUpgradeForceUpdating: 'อุปกรณ์กำลังอัปเดต ลองอีกครั้งในภายหลัง',
    firmwareUpgradeNewPre: 'เฟิร์มแวร์อัปเดต ',
    firmwareUpgradeNewSub: ' ใช้ได้แล้ว อัปเดตตอนนี้หรือไม่',
    handling: 'ในการดำเนินการ',
    error: 'ลองอีกครั้ง',
    createLightGroup: 'สร้างกลุ่มแสงไฟ(ใหม่)',
    manageLightGroup: 'จัดการอุปกรณ์(ใหม่)',
    deleteLightGroup: 'สลายกลุ่มแสงไฟ',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%',
    add: 'เพิ่ม',
    back: 'ย้อนกลับ',
    close: 'ปิด',
    collect: 'เพิ่มไปยังรายการโปรด',
    complete: 'เสร็จสิ้น',
    delete: 'ลบ',
    detail: 'รายละเอียด',
    profile: 'โปรไฟล์',
    qr: 'รหัส QR',
    search: 'ค้นหา',
    selectAll: 'เลือกทั้งหมด',
    selectedAll: 'เลือกทั้งหมดแล้ว',
    edit: 'แก้ไข',
    record: 'บันทึก',
    orientation: 'เปลี่ยนเป็นโหมดแนวนอน',
    save: 'บันทึก'
  };
  exports.th = th;
},22981,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.tr = undefined;
  var tr = {
    setting: 'Ayarlar',
    featureSetting: 'Cihaz ayarları',
    commonSetting: 'Genel ayarlar',
    name: 'Cihaz adı',
    location: 'Konum yönetimi',
    memberSet: 'Tuş ayarları',
    share: 'Cihazı paylaş',
    btGateway: 'BLE ağ geçidi',
    voiceAuth: 'Sesli yetkilendirme',
    ifttt: 'Otomasyon',
    firmwareUpgrade: 'Cihaz güncelleştirmeleri',
    more: 'Ek ayarlar',
    help: 'Yardım',
    legalInfo: 'Yasal bilgi',
    deleteDevice: 'Cihazı sil',
    autoUpgrade: 'Ürün yazılımını otomatik olarak güncelle',
    checkUpgrade: 'Üretici yazılımı güncelleştirmelerini denetle',
    security: 'Güvenlik ayarları',
    networkInfo: 'Ağ bilgileri',
    feedback: 'Geri bildirimlerim',
    timezone: 'Cihazın saat dilimi',
    addToDesktop: 'Ana ekrana ekleyin',
    cancel: 'İptal ',
    ok: 'Onayla',
    am: 'AM',
    pm: 'PM',
    months: 'aylar',
    days: 'günler',
    hours: 'saatler',
    minutes: 'dakikalar',
    seconds: 'saniyeler',
    month: 'ay',
    day: 'gün',
    hour: 'saat',
    minute: 'dakika',
    second: 'saniye',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: 'sa. ',
    minuteUnit: 'dk.',
    secondUnit: 'sn.',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Çıkış',
    firmwareUpgradeUpdate: 'Şimdi güncelleştir',
    firmwareUpgradeLook: 'Şimdi göz atın',
    firmwareUpgradeForceUpdate: 'Mevcut ürün yazılımı bazı özellikleri çalıştırmak için çok eski olabilir. Daha iyi bir deneyim için en son sürüme güncelleyin.',
    firmwareUpgradeForceUpdating: 'Cihazınız güncelleştiriliyor, daha sonra yeniden deneyin',
    firmwareUpgradeNewPre: 'Üretici yazılımı güncelleştirmesi',
    firmwareUpgradeNewSub: 'kullanılabilir. Şimdi güncelleştir',
    handling: 'İşleniyor…',
    error: 'Kon niet werken, probeer het later opnieuw.',
    createLightGroup: 'Işık grubu oluştur (yeni)',
    manageLightGroup: 'Cihazları yönet (yeni)',
    deleteLightGroup: 'Işık grubunu kaldır',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '%{0}',
    add: 'Ekle',
    back: 'Geri',
    close: 'Kapat',
    collect: 'Favorilere ekle',
    complete: 'Tamamlandı',
    delete: 'Sil',
    detail: 'Ayrıntılar',
    profile: 'Profil',
    qr: 'QR kodu',
    search: 'Ara',
    selectAll: 'Tümünü seç',
    selectedAll: 'Tümü seçildi',
    edit: 'Düzenle',
    record: 'Kayıt',
    orientation: 'Yatay moda geç',
    save: 'Kaydet'
  };
  exports.tr = tr;
},22984,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.nl = undefined;
  var nl = {
    setting: 'Instellingen',
    featureSetting: 'Apparaatinstellingen',
    commonSetting: 'Algemene instellingen',
    name: 'Apparaatnaam',
    location: 'Locatiebeheer',
    memberSet: 'Toetsinstellingen',
    share: 'Apparaat delen',
    btGateway: 'BLE-gateway',
    voiceAuth: 'Autorisatie via spraak',
    ifttt: 'Automatisering',
    firmwareUpgrade: 'Updates van het apparaat',
    more: 'Extra instellingen',
    help: 'Help',
    legalInfo: 'Legale informatie',
    deleteDevice: 'Apparaat verwijderen',
    autoUpgrade: 'Firmware automatisch bijwerken',
    checkUpgrade: 'Controleren op firmware-updates',
    security: 'Beveiligingsinstellingen',
    networkInfo: 'Netwerkgegevens',
    feedback: 'Mijn feedback',
    timezone: 'Tijdzone van het apparaat',
    addToDesktop: 'Toevoegen aan het startscherm',
    cancel: 'Annuleren',
    ok: 'Bevestigen',
    am: 'AM',
    pm: 'PM',
    months: 'Maanden',
    days: 'Dagen',
    hours: 'Uren',
    minutes: 'Minuten',
    seconds: 'Seconden',
    month: 'Maand ',
    day: 'Dag ',
    hour: 'Uur',
    minute: 'Minuut',
    second: 'Seconde ',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Afsluiten',
    firmwareUpgradeUpdate: 'Nu updaten',
    firmwareUpgradeLook: 'Nu rondkijken',
    firmwareUpgradeForceUpdate: 'De huidige firmware is mogelijk te oud om bepaalde functies uit te voeren. Update naar de nieuwste versie voor een betere ervaring.',
    firmwareUpgradeForceUpdating: 'Uw toestel is aan het updaten, probeer het later nog eens',
    firmwareUpgradeNewPre: 'Firmware-update',
    firmwareUpgradeNewSub: 'beschikbaar. Nu updaten',
    handling: 'Verwerken...',
    error: 'Kon niet werken, probeer het later opnieuw',
    createLightGroup: 'Lichtgroep aanmaken (nieuw)',
    manageLightGroup: 'Apparaten beheren (nieuw)',
    deleteLightGroup: 'Lichtgroep opheffen',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%',
    add: 'Toevoegen',
    back: 'Terug',
    close: 'Uitschakelen',
    collect: 'Aan favorieten toevoegen',
    complete: 'Voltooid',
    delete: 'Verwijderen',
    detail: 'Details',
    profile: 'Profiel',
    qr: 'QR-code',
    search: 'Zoeken',
    selectAll: 'Alles selecteren',
    selectedAll: 'Alles geselecteerd',
    edit: 'Bewerken',
    record: 'Opnemen',
    orientation: 'Overschakelen naar liggende modus',
    save: 'Opslaan'
  };
  exports.nl = nl;
},22987,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.pt = undefined;
  var pt = {
    setting: 'Configurações',
    featureSetting: 'Configurações do dispositivo',
    commonSetting: 'Configurações gerais',
    name: 'Nome do dispositivo',
    location: 'Gerenciamento de localização',
    memberSet: 'Configurações do teclado',
    share: 'Compartilhar dispositivo',
    btGateway: 'Gateway BLE',
    voiceAuth: 'Autorização de voz',
    ifttt: 'Automação',
    firmwareUpgrade: 'Atualizações de dispositivo',
    more: 'Configurações adicionais',
    help: 'Ajuda',
    legalInfo: 'Informação legal',
    deleteDevice: 'Excluir dispositivo',
    autoUpgrade: 'Atualizar automaticamente o firmware',
    checkUpgrade: 'Verificar se há atualizações de firmware',
    security: 'Configurações de segurança',
    networkInfo: 'Informações de rede',
    feedback: 'Meu feedback',
    timezone: 'Fuso horário do dispositivo',
    addToDesktop: 'Adicionar à tela de início',
    cancel: 'Cancelar',
    ok: 'Confirmar',
    am: 'Manhã',
    pm: 'Tarde',
    months: 'meses',
    days: 'dias',
    hours: 'horas',
    minutes: 'minutos',
    seconds: 'segundos',
    month: 'mês',
    day: 'dia',
    hour: 'hora',
    minute: 'minuto',
    second: 'segundo',
    yearUnit: 'a',
    monthUnit: 'm',
    dayUnit: 'd',
    hourUnit: 'h',
    minuteUnit: 'min',
    secondUnit: 's',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Sair',
    firmwareUpgradeUpdate: 'Atualizar agora',
    firmwareUpgradeLook: 'Ver agora',
    firmwareUpgradeForceUpdate: 'O firmware atual pode ser muito antigo para executar alguns recursos. Atualize para a versão mais recente para obter uma melhor experiência.',
    firmwareUpgradeForceUpdating: 'Seu dispositivo está sendo atualizado. Tente novamente mais tarde',
    firmwareUpgradeNewPre: 'Atualização de firmware',
    firmwareUpgradeNewSub: 'disponível. Atualizar agora',
    handling: 'Processando...',
    error: 'Não foi possível operar, tente novamente mais tarde',
    createLightGroup: 'Criar grupo de lâmpadas (novo)',
    manageLightGroup: 'Gerenciar dispositivos (novo)',
    deleteLightGroup: 'Desfazer grupo de lâmpadas',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%',
    add: 'Adicionar',
    back: 'Voltar',
    close: 'Desligar',
    collect: 'Adicionar aos favoritos',
    complete: 'Concluído',
    delete: 'Excluir',
    detail: 'Detalhes',
    profile: 'Perfil',
    qr: 'Código QR',
    search: 'Pesquisar',
    selectAll: 'Selecionar tudo',
    selectedAll: 'Tudo selecionado',
    edit: 'Editar',
    record: 'Gravar',
    orientation: 'Alternar para modo paisagem',
    save: 'Salvar'
  };
  exports.pt = pt;
},22990,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "AbstractDialog", {
    enumerable: true,
    get: function get() {
      return _AbstractDialog.default;
    }
  });
  Object.defineProperty(exports, "ActionSheet", {
    enumerable: true,
    get: function get() {
      return _ActionSheet.default;
    }
  });
  Object.defineProperty(exports, "ChoiceDialog", {
    enumerable: true,
    get: function get() {
      return _ChoiceDialog.default;
    }
  });
  Object.defineProperty(exports, "InputDialog", {
    enumerable: true,
    get: function get() {
      return _InputDialog.default;
    }
  });
  Object.defineProperty(exports, "LoadingDialog", {
    enumerable: true,
    get: function get() {
      return _LoadingDialog.default;
    }
  });
  Object.defineProperty(exports, "MessageDialog", {
    enumerable: true,
    get: function get() {
      return _MessageDialog.default;
    }
  });
  Object.defineProperty(exports, "PinCodeDialog", {
    enumerable: true,
    get: function get() {
      return _PinCodeDialog.default;
    }
  });
  Object.defineProperty(exports, "ProgressDialog", {
    enumerable: true,
    get: function get() {
      return _ProgressDialog.default;
    }
  });
  Object.defineProperty(exports, "ShareDialog", {
    enumerable: true,
    get: function get() {
      return _ShareDialog.default;
    }
  });
  Object.defineProperty(exports, "InputView", {
    enumerable: true,
    get: function get() {
      return _InputView.default;
    }
  });
  Object.defineProperty(exports, "ModalDialog", {
    enumerable: true,
    get: function get() {
      return _ModalDialog.default;
    }
  });

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _ActionSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _ChoiceDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _InputDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _MessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _PinCodeDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _ProgressDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _ShareDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _InputView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _ModalDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));
},22993,[14305,22996,22999,23005,23008,23011,23014,23017,23020,23023,23221,23335]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _resources = _$$_REQUIRE(_dependencyMap[9]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[11]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[12]);

  var _locale = _$$_REQUIRE(_dependencyMap[13]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _Logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _PopButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _font = _$$_REQUIRE(_dependencyMap[17]);

  var MODAL_MARGIN = _resources.Styles.MODAL_MARGIN;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var underlayColor = 'rgba(0,0,0,.05)';

  var AbstractDialog = function (_React$Component) {
    (0, _inherits2.default)(AbstractDialog, _React$Component);

    function AbstractDialog(props, context) {
      var _this$context$media, _this$context$media2, _this$context$media3;

      var _this;

      (0, _classCallCheck2.default)(this, AbstractDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AbstractDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('AbstractDialog');
      _this.state = {
        visible: _this.props.visible
      };
      _this.MARGIN_MODAL = _this.props.useNewTheme ? 0 : 10;
      _this.responsiveContentStyle = ((_this$context$media = _this.context.media) == null ? undefined : _this$context$media.screenType) === 'tablet' ? {
        width: width * 0.75
      } : {};
      _this.responsiveDialogStyle = ((_this$context$media2 = _this.context.media) == null ? undefined : _this$context$media2.screenType) === 'tablet' ? {
        alignItems: 'center',
        justifyContent: 'center',
        flexDirection: 'column'
      } : {};
      _this.responsiveDialogModalStyle = ((_this$context$media3 = _this.context.media) == null ? undefined : _this$context$media3.screenType) === 'tablet' ? _resources.Styles.dialog.padModal : {};
      return _this;
    }

    (0, _createClass2.default)(AbstractDialog, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (this.state.visible === true) {
          var onModalShow = this.props.onModalShow;

          if (typeof onModalShow === 'function') {
            onModalShow();
          }
        }
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps, prevState) {
        if (prevState.visible === false && this.state.visible === true) {
          var onModalShow = this.props.onModalShow;

          if (typeof onModalShow === 'function') {
            onModalShow();
          }
        }

        if (prevState.visible === true && this.state.visible === false) {
          var onModalHide = this.props.onModalHide;

          if (typeof onModalHide === 'function') {
            onModalHide();
          }
        }
      }
    }, {
      key: "_checkUnlimitedHeightEnable",
      value: function _checkUnlimitedHeightEnable() {
        var result = false;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('unlimitedHeightEnable')) {
          result = this.props.dialogStyle.unlimitedHeightEnable;
        }

        return result;
      }
    }, {
      key: "renderTitle",
      value: function renderTitle() {
        if (!this.props.showTitle) return null;
        var _Styles$dialog$title = _resources.Styles.dialog.title,
            titleHeightFat = _Styles$dialog$title.titleHeightFat,
            titleHeightThin = _Styles$dialog$title.titleHeightThin;
        var theme = this.context.theme;
        var height = {
          height: this.props.showSubtitle ? titleHeightFat : titleHeightThin
        };
        var marginBottom = this.props.showSubtitle ? {
          marginBottom: 0
        } : {};
        var language = this.context.language;
        var titleLines = 1;

        if (language !== 'zh') {
          titleLines = 3;
          height.maxHeight = 86;
        }

        var fontFamily = {};

        if (_reactNative.Platform.OS === 'android') {
          fontFamily.fontFamily = '';
        }

        var titleNumberOfLines = titleLines;
        var subTitleNumberOfLines = 1;

        if (this.props.dialogStyle) {
          if (this.props.dialogStyle.hasOwnProperty('titleNumberOfLines') && this.props.dialogStyle.titleNumberOfLines > 1) {
            titleNumberOfLines = this.props.dialogStyle.titleNumberOfLines;
            height = null;
          }

          if (this.props.dialogStyle.hasOwnProperty('subTitleNumberOfLines') && this.props.dialogStyle.subTitleNumberOfLines > 1) {
            subTitleNumberOfLines = this.props.dialogStyle.subTitleNumberOfLines;
            height = null;
          }

          if (this._checkUnlimitedHeightEnable()) {
            height = null;
          }
        }

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.titleContainer, height, {
            backgroundColor: 'transparent'
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), _react.default.createElement(_reactNative.Text, {
          numberOfLines: titleNumberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          style: [{
            width: _resources.Styles.dialog.modal.width * 0.75,
            textAlign: 'center',
            fontSize: 16,
            color: theme.colorBlack,
            marginTop: height ? 7 : 10
          }, marginBottom, _font.FontPrimary, this.props.dialogStyle.titleStyle]
        }, this.props.title || ''), this.props.showSubtitle ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: subTitleNumberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          style: [_resources.Styles.dialog.subtitle, {
            color: theme.colorGrayNormal,
            marginTop: 5
          }, this.props.dialogStyle.subTitleStyle]
        }, this.props.subtitle) : null);
      }
    }, {
      key: "renderContent",
      value: function renderContent() {
        if (this.props.children) return this.props.children;
        return _react.default.createElement(_reactNative.View, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        }), this.props.useNewTheme ? null : _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
          style: [styles.content, this.responsiveContentStyle]
        }, _react.default.createElement(_reactNative.Text, null, "\u2B06\uFE0F\u53EF\u81EA\u5B9A\u4E49\u6807\u9898\u548C\u526F\u6807\u9898\u2B06\uFE0F"), _react.default.createElement(_reactNative.Text, null, "\u53EF\u81EA\u5B9A\u4E49\u5185\u5BB9"), _react.default.createElement(_reactNative.Text, null, "\u2B07\uFE0F\u53EF\u81EA\u5B9A\u4E49\u6309\u94AE\u6587\u5B57\u548C\u6837\u5F0F\u2B07\uFE0F")), this.props.useNewTheme ? null : _react.default.createElement(_Separator.default, null));
      }
    }, {
      key: "renderButtonGroup",
      value: function renderButtonGroup() {
        if (!this.props.showButton) return null;
        var buttons = this.props.buttons;

        if (!buttons) {
          buttons = [{
            text: _locale.Locale.of(this.context.language).cancel
          }, {
            text: _locale.Locale.of(this.context.language).ok
          }];
        }

        if (this.props.useNewTheme) {
          if (buttons.length === 1) return this.renderOneButton(buttons);
          if (buttons.length === 2) return this.renderTwoButtons(buttons);
        } else {
          if (buttons.length === 1) return this.renderOneButtonDeprecated(buttons);
          if (buttons.length === 2) return this.renderTwoButtonsDeprecated(buttons);
        }

        _Logger.default.warn('只允许设置1～2个按钮');

        return null;
      }
    }, {
      key: "renderOneButton",
      value: function renderOneButton(buttons) {
        var _this2 = this;

        var button0 = buttons[0];
        if (typeof button0 !== 'object') return null;
        var callback = button0.callback;

        if (callback === undefined || !(callback instanceof Function)) {
          callback = function callback() {
            return _this2.dismiss();
          };
        }

        var height = _resources.Styles.dialog.buttons.height;
        var buttonNumberOfLines;

        if (button0.hasOwnProperty('numberOfLines')) {
          buttonNumberOfLines = button0.numberOfLines;

          if (buttonNumberOfLines > 1) {
            height = null;
          }
        }

        var allowFontScaling = this.props.dialogStyle.allowFontScaling;

        if (button0.hasOwnProperty('allowFontScaling')) {
          allowFontScaling = button0.allowFontScaling;
        }

        if (this._checkUnlimitedHeightEnable()) {
          height = null;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [_resources.Styles.dialog.button, {
            height: height
          }]
        }, _react.default.createElement(_PopButton.default, (0, _extends2.default)({
          sizeLevel: "regular",
          title: button0.text || _locale.Locale.of(this.context.language).cancel,
          titleStyle: button0.style,
          titleColor: button0.titleColor,
          onPress: callback,
          colorType: button0.colorType || 'blueLayerWhite',
          disabled: button0.disabled,
          backgroundColor: button0.backgroundColor,
          allowFontScaling: allowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button0.accessibilityHint
        }))));
      }
    }, {
      key: "renderTwoButtons",
      value: function renderTwoButtons(buttons) {
        var _this3 = this;

        var button0 = buttons[0];
        var button1 = buttons[1];
        if (typeof button0 !== 'object' || typeof button1 !== 'object') return null;
        var callback0 = button0.callback;
        var callback1 = button1.callback;

        if (callback0 === undefined || !(callback0 instanceof Function)) {
          callback0 = function callback0() {
            return _this3.dismiss();
          };
        }

        if (callback1 === undefined || !(callback1 instanceof Function)) {
          callback1 = function callback1() {
            return _this3.dismiss();
          };
        }

        var height = _resources.Styles.dialog.buttons.height;
        var button0NumberOfLines;
        var button1NumberOfLines;

        if (button0.hasOwnProperty('numberOfLines')) {
          button0NumberOfLines = button0.numberOfLines;

          if (button0NumberOfLines > 1) {
            height = null;
          }
        }

        if (button1.hasOwnProperty('numberOfLines')) {
          button1NumberOfLines = button1.numberOfLines;

          if (button1NumberOfLines > 1) {
            height = null;
          }
        }

        if (this._checkUnlimitedHeightEnable()) {
          height = null;
        }

        var button0AllowFontScaling = this.props.dialogStyle.allowFontScaling;
        var button1AllowFontScaling = button0AllowFontScaling;

        if (button0.hasOwnProperty('allowFontScaling')) {
          button0AllowFontScaling = button0.allowFontScaling;
        }

        if (button1.hasOwnProperty('allowFontScaling')) {
          button1AllowFontScaling = button0.allowFontScaling;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [_resources.Styles.dialog.buttons, {
            height: height
          }]
        }, _react.default.createElement(_PopButton.default, (0, _extends2.default)({
          sizeLevel: "medium",
          style: {
            marginRight: 8
          },
          title: button0.text || _locale.Locale.of(this.context.language).cancel,
          titleStyle: button0.style,
          titleColor: button0.titleColor,
          onPress: callback0,
          colorType: button0.colorType,
          disabled: button0.disabled,
          backgroundColor: button0.backgroundColor,
          allowFontScaling: button0AllowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button0.accessibilityHint
        }))), _react.default.createElement(_PopButton.default, (0, _extends2.default)({
          sizeLevel: "medium",
          style: {
            marginLeft: 8
          },
          title: button1.text || _locale.Locale.of(this.context.language).ok,
          titleStyle: button1.style,
          titleColor: button1.titleColor,
          onPress: callback1,
          colorType: button1.colorType || 'blueLayerWhite',
          disabled: button1.disabled,
          backgroundColor: button1.backgroundColor,
          allowFontScaling: button1AllowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button1.accessibilityHint
        }))));
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var theme = this.context.theme;

        var _Dimensions$get2 = _reactNative.Dimensions.get('window'),
            width = _Dimensions$get2.width,
            height = _Dimensions$get2.height;

        return _react.default.createElement(_reactNative.Modal, (0, _extends2.default)({
          animationType: this.props.animationType,
          transparent: true,
          visible: this.state.visible,
          onRequestClose: function onRequestClose() {
            return _this4.dismiss();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [_resources.Styles.dialog.background, {
            backgroundColor: this.props.hasShade ? theme.colorOverLayerBlack : 'transparent'
          }, this.responsiveDialogStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          onPress: function onPress() {
            return _this4.layerDismiss();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.layerDismissAccessibilityHint || _locale.Locale.of(this.context.language).cancel
        }), {
          onAccessibilityTap: function onAccessibilityTap() {
            return _this4.layerDismiss();
          }
        }), _react.default.createElement(_reactNative.View, {
          style: {
            width: width,
            height: height
          }
        })), _react.default.createElement(_reactNative.View, {
          style: [_resources.Styles.dialog.modal, {
            backgroundColor: theme.colorForeground,
            width: width - this.MARGIN_MODAL * 2,
            marginHorizontal: this.MARGIN_MODAL
          }, this.props.useNewTheme ? null : styles.modalDeprecated, this.props.style, this.responsiveDialogModalStyle]
        }, this.renderTitle(), this.renderContent(), this.renderButtonGroup())));
      }
    }, {
      key: "dismiss",
      value: function dismiss() {
        this.setState({
          visible: false
        });
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "layerDismiss",
      value: function layerDismiss() {
        if (this.props.canDismiss) {
          this.setState({
            visible: false
          });
          this.props.onDismiss && this.props.onDismiss();
        }
      }
    }, {
      key: "renderOneButtonDeprecated",
      value: function renderOneButtonDeprecated(buttons) {
        var _this5 = this;

        var button0 = buttons[0];
        if (typeof button0 !== 'object') return null;
        var callback = button0.callback;

        if (callback === undefined || !(callback instanceof Function)) {
          callback = function callback() {
            return _this5.dismiss();
          };
        }

        var height = _resources.Styles.dialog.buttons.height;
        var buttonNumberOfLines;

        if (button0.hasOwnProperty('numberOfLines')) {
          buttonNumberOfLines = button0.numberOfLines;

          if (buttonNumberOfLines > 1) {
            height = null;
          }
        }

        var allowFontScaling = this.props.dialogStyle.allowFontScaling;

        if (button0.hasOwnProperty('allowFontScaling')) {
          allowFontScaling = button0.allowFontScaling;
        }

        if (this._checkUnlimitedHeightEnable()) {
          height = null;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.buttons, {
            height: height
          }]
        }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: {
            flex: 1
          },
          onPress: callback,
          underlayColor: underlayColor
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button0.accessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: _resources.Styles.dialog.button
        }, _react.default.createElement(_reactNative.Text, {
          style: [_resources.Styles.dialog.buttonText, {
            color: theme.colorGrayNormal
          }, button0.style],
          numberOfLines: buttonNumberOfLines,
          allowFontScaling: allowFontScaling
        }, button0.text || _locale.Locale.of(this.context.language).ok))));
      }
    }, {
      key: "renderTwoButtonsDeprecated",
      value: function renderTwoButtonsDeprecated(buttons) {
        var _this6 = this;

        var button0 = buttons[0];
        var button1 = buttons[1];
        if (typeof button0 !== 'object' || typeof button1 !== 'object') return null;
        var callback0 = button0.callback;
        var callback1 = button1.callback;

        if (callback0 === undefined || !(callback0 instanceof Function)) {
          callback0 = function callback0() {
            return _this6.dismiss();
          };
        }

        if (callback1 === undefined || !(callback1 instanceof Function)) {
          callback1 = function callback1() {
            return _this6.dismiss();
          };
        }

        var height = _resources.Styles.dialog.buttons.height;
        var button0NumberOfLines;
        var button1NumberOfLines;

        if (button0.hasOwnProperty('numberOfLines')) {
          button0NumberOfLines = button0.numberOfLines;

          if (button0NumberOfLines > 1) {
            height = null;
          }
        }

        if (button1.hasOwnProperty('numberOfLines')) {
          button1NumberOfLines = button1.numberOfLines;

          if (button1NumberOfLines > 1) {
            height = null;
          }
        }

        if (this._checkUnlimitedHeightEnable()) {
          height = null;
        }

        var button0AllowFontScaling = this.props.dialogStyle.allowFontScaling;
        var button1AllowFontScaling = button0AllowFontScaling;

        if (button0.hasOwnProperty('allowFontScaling')) {
          button0AllowFontScaling = button0.allowFontScaling;
        }

        if (button1.hasOwnProperty('allowFontScaling')) {
          button1AllowFontScaling = button0.allowFontScaling;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.buttons, {
            height: height
          }]
        }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: {
            flex: 1
          },
          onPress: callback0,
          underlayColor: underlayColor
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button0.accessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: _resources.Styles.dialog.button
        }, _react.default.createElement(_reactNative.Text, {
          style: [_resources.Styles.dialog.buttonText, {
            color: theme.colorGrayNormal
          }, button0.style],
          numberOfLines: button0NumberOfLines,
          allowFontScaling: button0AllowFontScaling
        }, button0.text || _locale.Locale.of(this.context.language).cancel))), _reactNative.Platform.select({
          android: _react.default.createElement(_Separator.default, {
            type: "column",
            style: {
              flex: 1
            }
          }),
          ios: _react.default.createElement(_Separator.default, {
            type: "column",
            style: {
              height: '100%'
            }
          })
        }), _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: {
            flex: 1
          },
          onPress: callback1,
          underlayColor: underlayColor
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button1.accessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: _resources.Styles.dialog.button
        }, _react.default.createElement(_reactNative.Text, {
          style: [_resources.Styles.dialog.buttonText, {
            color: theme.colorPrimary
          }, button1.style],
          numberOfLines: button1NumberOfLines,
          allowFontScaling: button1AllowFontScaling
        }, button1.text || _locale.Locale.of(this.context.language).ok))));
      }
    }]);
    return AbstractDialog;
  }(_react.default.Component);

  AbstractDialog.contextType = _configProvider.ConfigContext;
  AbstractDialog.defaultProps = {
    animationType: 'fade',
    visible: false,
    showTitle: true,
    showSubtitle: false,
    dialogStyle: {
      unlimitedHeightEnable: false,
      allowFontScaling: true,
      titleNumberOfLines: 1,
      subTitleNumberOfLines: 1,
      titleStyle: {},
      subTitleStyle: {}
    },
    canDismiss: true,
    buttons: null,
    showButton: true,
    hasShade: true,
    useNewTheme: false
  };

  var styles = _reactNative.StyleSheet.create({
    titleContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    content: {
      width: width - 20,
      height: 150,
      justifyContent: 'center',
      alignItems: 'center'
    },
    modalDeprecated: {
      bottom: 20,
      paddingBottom: 0,
      borderRadius: 20
    },
    buttons: {
      height: 46,
      flexDirection: 'row',
      backgroundColor: 'transparent',
      justifyContent: 'center',
      alignItems: 'center',
      flex: 1
    }
  });

  var _default = AbstractDialog;
  exports.default = _default;
},22996,[14305,14344,14320,14323,14371,14377,14386,10297,10033,22453,22906,22420,22423,22933,22426,22891,23215,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _ChoiceItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[14]);

  var _font = _$$_REQUIRE(_dependencyMap[15]);

  var ActionSheet = function (_React$Component) {
    (0, _inherits2.default)(ActionSheet, _React$Component);
    (0, _createClass2.default)(ActionSheet, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }]);

    function ActionSheet(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ActionSheet);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ActionSheet).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ActionSheet');
      _this.state = {
        visible: props.visible
      };
      return _this;
    }

    (0, _createClass2.default)(ActionSheet, [{
      key: "renderItem",
      value: function renderItem(item) {
        var _this2 = this;

        return _react.default.createElement(_ChoiceItem.default, (0, _extends2.default)({
          title: item.title || '',
          titleStyle: [(0, _objectSpread2.default)({
            textAlign: 'left',
            fontSize: 16,
            lineHeight: 22,
            marginLeft: 30
          }, _font.FontPrimary), this.props.dialogStyle.itemTitleStyle],
          subtitle: item.subtitle || '',
          subtitleStyle: [{
            textAlign: 'left',
            marginLeft: 30
          }, this.props.dialogStyle.itemSubtitleStyle],
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          unlimitedHeightEnable: this.props.dialogStyle.unlimitedHeightEnable,
          titleNumberOfLines: this.props.dialogStyle.itemTitleNumberOfLines,
          subtitleNumberOfLines: this.props.dialogStyle.itemSubtitleNumberOfLines,
          onPress: function onPress() {
            return _this2._onPress(item.onPress);
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: item.accessibilityLabel,
          accessibilityHint: item.accessibilityHint
        })));
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var showTitle = !!this.props.title;
        var paddingTop = showTitle ? 0 : 14;
        var maxHeight = this.props.options && this.props.options[0] && this.props.options[0].subtitle ? 576 : 594;
        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.state.visible,
          dialogStyle: this.props.dialogStyle,
          showTitle: showTitle,
          title: this.props.title,
          buttons: this.props.buttons,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          onDismiss: function onDismiss() {
            return _this3._onDismiss();
          },
          useNewTheme: true,
          style: this.props.modalStyle,
          canDismiss: this.props.canDismiss
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible
        })), _react.default.createElement(_reactNative.FlatList, {
          style: {
            marginBottom: 16,
            paddingTop: paddingTop,
            maxHeight: maxHeight
          },
          data: this.props.options,
          renderItem: function renderItem(_ref) {
            var item = _ref.item;
            return _this3.renderItem(item);
          },
          keyExtractor: function keyExtractor(item, index) {
            return (item.title || '') + index;
          }
        }));
      }
    }, {
      key: "_onPress",
      value: function _onPress(callback) {
        callback && callback();
        this.setState({
          visible: false
        });

        this._onDismiss();
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }]);
    return ActionSheet;
  }(_react.default.Component);

  ActionSheet.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    dialogStyle: _propTypes.default.object,
    options: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      subtitle: _propTypes.default.string,
      onPress: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    canDismiss: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  ActionSheet.defaultProps = {
    options: [],
    canDismiss: true,
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      itemTitleStyle: {},
      itemSubtitleStyle: {},
      itemTitleNumberOfLines: 1,
      itemSubtitleNumberOfLines: 1
    }
  };
  var _default = ActionSheet;
  exports.default = _default;
},22999,[14305,14344,14314,14320,14371,14377,14323,14386,10318,10297,10033,23002,22996,22420,22423,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _font = _$$_REQUIRE(_dependencyMap[14]);

  var thinHeight = 54;
  var fatHeight = 72;
  var checkboxSize = 22;
  var TYPE = {
    STATELESS: 'stateless',
    SINGLE: 'single',
    MULTIPLE: 'multiple'
  };
  Object.freeze(TYPE);

  var ChoiceItem = function (_React$Component) {
    (0, _inherits2.default)(ChoiceItem, _React$Component);

    function ChoiceItem(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ChoiceItem);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ChoiceItem).call(this, props, context));
      _this.state = {
        selected: props.selected
      };
      return _this;
    }

    (0, _createClass2.default)(ChoiceItem, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.selected !== this.state.selected) {
          this.setState({
            selected: newProps.selected
          });
        }
      }
    }, {
      key: "renderIcon",
      value: function renderIcon() {
        if (this.props.type === TYPE.STATELESS) return null;

        if (!this.state.selected || this.props.type === TYPE.MULTIPLE) {
          return _react.default.createElement(_reactNative.View, {
            style: {
              width: 38,
              height: fatHeight
            }
          });
        }

        var paddingTop = {
          paddingTop: 22
        };
        if (this.props.subtitle) paddingTop.paddingTop = 31;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.iconContainer, paddingTop]
        }, _react.default.createElement(_reactNative.Image, {
          source: this.props.icon,
          resizeMode: "contain",
          style: styles.icon
        }));
      }
    }, {
      key: "renderText",
      value: function renderText() {
        var theme = this.context.theme;
        var color = {};
        var textAlign = {};
        if (this.state.selected) color.color = this.props.color;
        if (this.props.type === TYPE.STATELESS) textAlign.textAlign = 'center';
        var adaptedFontStyle = {};

        if (!this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined,
            lineHeight: undefined
          };
        }

        return _react.default.createElement(_reactNative.View, {
          style: styles.textContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.title, {
            color: theme.colorBlack
          }, _font.FontPrimary, color, textAlign, adaptedFontStyle, this.props.titleStyle],
          numberOfLines: this.props.titleNumberOfLines,
          allowFontScaling: this.props.allowFontScaling
        }, this.props.title), this.props.subtitle ? _react.default.createElement(_reactNative.Text, {
          style: [styles.subtitle, {
            color: theme.colorGrayNormal
          }, _font.FontSecondary, color, textAlign, adaptedFontStyle, this.props.subtitleStyle],
          numberOfLines: this.props.subtitleNumberOfLines,
          allowFontScaling: this.props.allowFontScaling
        }, this.props.subtitle) : null);
      }
    }, {
      key: "renderCheckbox",
      value: function renderCheckbox() {
        var _this2 = this;

        if (this.props.type !== TYPE.MULTIPLE) return null;
        return _react.default.createElement(_Checkbox.default, {
          style: {
            width: checkboxSize,
            height: checkboxSize,
            borderRadius: 11,
            marginRight: 30
          },
          checked: this.state.selected,
          checkedColor: this.props.color,
          onValueChange: function onValueChange(selected) {
            return _this2._onValueChange(selected);
          }
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme,
            _this3 = this;

        var height = {
          height: thinHeight
        };

        if (this.props.subtitle) {
          height.height = fatHeight;
        }

        var heightStyle = {
          minHeight: height.height,
          height: height.height
        };

        if (this.props.unlimitedHeightEnable) {
          heightStyle.height = null;
        }

        return _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          underlayColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.listUnderlayColor,
          onPress: function onPress() {
            return _this3._onPress();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.radio,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            selected: this.state.selected,
            checked: this.state.selected
          }
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.container, heightStyle]
        }, this.renderIcon(), this.renderText(), this.renderCheckbox()));
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange(selected) {
        this.setState({
          selected: selected
        });

        if (this.props.onPress) {
          this.props.onPress(selected);
        }
      }
    }, {
      key: "_onPress",
      value: function _onPress() {
        var type = this.props.type;
        var selected = this.state.selected;

        if (type !== TYPE.STATELESS) {
          if (type === TYPE.MULTIPLE) selected = !selected;
          if (type === TYPE.SINGLE) selected = true;
          this.setState({
            selected: selected
          });
        }

        if (this.props.onPress) {
          this.props.onPress(selected);
        }
      }
    }]);
    return ChoiceItem;
  }(_react.default.Component);

  exports.default = ChoiceItem;
  ChoiceItem.contextType = _configProvider.ConfigContext;
  ChoiceItem.propTypes = {
    type: _propTypes.default.oneOf([TYPE.STATELESS, TYPE.SINGLE, TYPE.MULTIPLE]),
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    selected: _propTypes.default.bool,
    color: _propTypes.default.string,
    icon: _propTypes.default.number,
    onPress: _propTypes.default.func,
    unlimitedHeightEnable: _propTypes.default.bool,
    allowFontScaling: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    titleStyle: _reactNative.Text.propTypes.style,
    subtitleStyle: _reactNative.Text.propTypes.style,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ChoiceItem.defaultProps = {
    type: TYPE.STATELESS,
    selected: false,
    color: _resources.Styles.common.MHGreen,
    icon: _resources.Images.common.selectIcon,
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    titleNumberOfLines: 1,
    subtitleNumberOfLines: 1,
    titleStyle: {},
    subtitleStyle: {}
  };
  ChoiceItem.TYPE = TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    iconContainer: {
      width: 38,
      alignSelf: 'stretch',
      alignItems: 'center'
    },
    icon: {
      width: 10,
      height: 10
    },
    textContainer: {
      flex: 1,
      justifyContent: 'center'
    },
    title: {
      alignSelf: 'stretch',
      fontSize: 16,
      lineHeight: 22
    },
    subtitle: {
      alignSelf: 'stretch',
      fontSize: 13,
      lineHeight: 18
    }
  });
},23002,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22786,22426,22420,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _ChoiceItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var TYPE = {
    SINGLE: 'single',
    MULTIPLE: 'multiple'
  };
  Object.freeze(TYPE);

  var ChoiceDialog = function (_React$Component) {
    (0, _inherits2.default)(ChoiceDialog, _React$Component);

    function ChoiceDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ChoiceDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ChoiceDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ChoiceDialog');
      var buttons = props.buttons;

      if (buttons instanceof Array) {
        var button = buttons[buttons.length - 1];

        if (button && button.callback) {
          var callbackOrigin = button.callback;

          button.callback = function () {
            var selectedIndexArray = [];
            var selectedIndex;

            for (var i = 0; i < _this.state.selectedArray.length; i++) {
              var item = _this.state.selectedArray[i];

              if (item) {
                selectedIndexArray.push(i);
                selectedIndex = i;
              }
            }

            if (_this.props.type === TYPE.SINGLE) _this.props.onSelect && _this.props.onSelect([selectedIndex]);
            callbackOrigin(selectedIndexArray);
          };
        }
      }

      _this.buttons = buttons;
      var selectedArray = Array.from({
        length: props.options.length
      }, function (v, i) {
        return props.selectedIndexArray.includes(i);
      });
      _this.state = {
        visible: props.visible,
        selectedArray: selectedArray
      };
      return _this;
    }

    (0, _createClass2.default)(ChoiceDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }

        var selectedArray = Array.from({
          length: newProps.options.length
        }, function (v, i) {
          return newProps.selectedIndexArray.includes(i);
        });
        this.setState({
          selectedArray: selectedArray
        });
      }
    }, {
      key: "_onPress",
      value: function _onPress(selected, index) {
        if (selected) {} else {}

        if (this.props.type === TYPE.SINGLE) {
          var selectedArray = Array.from({
            length: this.props.options.length
          }, function () {
            return false;
          });
          selectedArray[index] = selected;

          if (this.props.useNewType) {
            this.setState({
              selectedArray: selectedArray
            });
          } else {
            this.setState({
              selectedArray: selectedArray,
              visible: false
            });

            this._onDismiss();

            this.props.onSelect && this.props.onSelect([index]);
          }
        } else {
          var _selectedArray = this.state.selectedArray;
          _selectedArray[index] = selected;
          this.setState({
            selectedArray: _selectedArray
          });
        }
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var showButton = this.props.type === TYPE.MULTIPLE || this.props.useNewType;
        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.state.visible,
          title: this.props.title,
          dialogStyle: this.props.dialogStyle,
          showButton: showButton,
          buttons: this.buttons,
          style: this.props.modalStyle,
          useNewTheme: true,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          onDismiss: function onDismiss() {
            return _this2._onDismiss();
          },
          canDismiss: this.props.canDismiss
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessibilityLabel: this.props.accessible
        })), _react.default.createElement(_reactNative.View, {
          style: {
            marginBottom: 16
          }
        }, this.props.options.map(function (option, index) {
          return _react.default.createElement(_reactNative.View, {
            key: (option.title || '') + index
          }, _react.default.createElement(_ChoiceItem.default, (0, _extends2.default)({
            type: _this2.props.type,
            title: option.title || '',
            titleStyle: _this2.props.dialogStyle.itemTitleStyle,
            subtitleStyle: _this2.props.dialogStyle.itemSubtitleStyle,
            allowFontScaling: _this2.props.dialogStyle.allowFontScaling,
            unlimitedHeightEnable: _this2.props.dialogStyle.unlimitedHeightEnable,
            titleNumberOfLines: _this2.props.dialogStyle.itemTitleNumberOfLines,
            subtitleNumberOfLines: _this2.props.dialogStyle.itemSubtitleNumberOfLines,
            subtitle: option.subtitle || '',
            selected: _this2.state.selectedArray[index],
            color: _this2.props.color,
            icon: _this2.props.icon,
            onPress: function onPress(selected) {
              return _this2._onPress(selected, index);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityLabel: option.accessibilityLabel,
            accessibilityHint: option.accessibilityHint
          }))));
        })));
      }
    }]);
    return ChoiceDialog;
  }(_react.default.Component);

  ChoiceDialog.propTypes = {
    animationType: _propTypes.default.string,
    type: _propTypes.default.oneOf([TYPE.STATELESS, TYPE.SINGLE, TYPE.MULTIPLE]),
    visible: _propTypes.default.bool,
    options: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      subtitle: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    selectedIndexArray: _propTypes.default.arrayOf(_propTypes.default.number),
    color: _propTypes.default.string,
    icon: _propTypes.default.number,
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func
    })),
    title: _propTypes.default.string,
    dialogStyle: _propTypes.default.object,
    onSelect: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    canDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  ChoiceDialog.defaultProps = {
    useNewType: false,
    type: TYPE.SINGLE,
    options: [],
    selectedIndexArray: [],
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      titleStyle: {},
      itemTitleStyle: {},
      itemSubtitleStyle: {},
      itemTitleNumberOfLines: 1,
      itemSubtitleNumberOfLines: 1
    },
    canDismiss: true
  };
  ChoiceDialog.TYPE = TYPE;
  var _default = ChoiceDialog;
  exports.default = _default;
},23005,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,23002,22996,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _InputView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var paddingHorizontal = 27;
  var paddingVertical = 28;
  var paddingTop = 9;
  var paddingBottom = 6;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      height = _Dimensions$get.height,
      width = _Dimensions$get.width;

  var TYPE = {
    SIMPLE: 'simple',
    UNDERLINE: 'underline',
    CHECKBOX: 'checkbox',
    BOTH: 'both'
  };
  Object.freeze(TYPE);

  var InputDialog = function (_React$Component) {
    (0, _inherits2.default)(InputDialog, _React$Component);

    function InputDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, InputDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InputDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('InputDialog');
      _this.state = {
        checked: props.checkboxData.checked || false,
        disButton: props.noInputDisButton
      };
      _this.textInputArray = [];

      _this.process(props);

      return _this;
    }

    (0, _createClass2.default)(InputDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(props) {
        this.setState({
          checked: props.checkboxData.checked || false
        });
        this.processButton(props);
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        if (prevProps.visible && !this.props.visible) {
          this.textInputArray = [];
          this.setState({
            disButton: this.props.noInputDisButton
          });
        } else if (!prevProps.visible && this.props.visible) {
          this.textInputArray = [];

          for (var i = 0; i < ((_this$props$inputs = this.props.inputs) == null ? undefined : _this$props$inputs.length) || 0; i++) {
            var _this$props$inputs;

            var input = this.props.inputs[i];

            if (input !== undefined) {
              this.textInputArray.push(input.defaultValue || '');
            }
          }

          if (this.props.noInputDisButton) {
            var result = this.isInputArrayEmpty(this.textInputArray);
            if (result !== this.state.disButton) this.setState({
              disButton: result
            });
          }
        }
      }
    }, {
      key: "processButton",
      value: function processButton(props) {
        var _this2 = this;

        var buttons = props.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];

          if (button && button.callback) {
            var callbackOrigin = button.callback;

            button.callback = function () {
              callbackOrigin({
                hasPressUnderlineText: _this2.hasPressUnderlineText,
                checked: _this2.state.checked,
                textInputArray: _this2.textInputArray
              });
            };
          }
        }

        this.buttons = buttons;
        this.hasPressUnderlineText = false;
      }
    }, {
      key: "process",
      value: function process(props) {
        var _this3 = this;

        var inputs = props.inputs;

        if (props.inputs === null || props.inputs === undefined) {
          inputs = [{
            defaultValue: '',
            textInputProps: {
              autoFocus: true
            }
          }];
        }

        var _loop = function _loop(i) {
          var input = inputs[i];

          if (input !== undefined) {
            _this3.textInputArray.push(input.defaultValue || '');

            var onChangeTextOrigin = input.onChangeText;

            input.onChangeText = function (text) {
              _this3._onChangeText(text, i);

              if (onChangeTextOrigin instanceof Function) {
                onChangeTextOrigin(text);
              }
            };
          }
        };

        for (var i = 0; i < inputs.length; i++) {
          _loop(i);
        }

        this.inputs = inputs;
        this.processButton(props);
      }
    }, {
      key: "isInputArrayEmpty",
      value: function isInputArrayEmpty(arr) {
        for (var _iterator = arr, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
          var _ref;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
          }

          var _element = _ref;
          if (_element === '' || typeof _element === undefined || _element === null) return true;
        }

        return false;
      }
    }, {
      key: "_onChangeText",
      value: function _onChangeText(text, index) {
        this.textInputArray[index] = text;

        if (this.props.noInputDisButton) {
          var result = this.isInputArrayEmpty(this.textInputArray);
          if (result !== this.state.disButton) this.setState({
            disButton: result
          });
        }
      }
    }, {
      key: "renderUpExtra",
      value: function renderUpExtra() {
        var _this4 = this;

        if ((this.props.type === TYPE.BOTH || this.props.type === TYPE.UNDERLINE) && !this.props.underlineData.useNewTheme) {
          var _this$props$underline = this.props.underlineData,
              leftText = _this$props$underline.leftText,
              underlineText = _this$props$underline.underlineText,
              accessibilityLabel = _this$props$underline.accessibilityLabel,
              accessibilityHint = _this$props$underline.accessibilityHint;
          var leftTextNumberOfLines = 1;
          var underlineTextNumberOfLines = 1;

          if (this.props.underlineData && this.props.underlineData.hasOwnProperty('leftTextNumberOfLines')) {
            leftTextNumberOfLines = this.props.underlineData.leftTextNumberOfLines;
          }

          if (this.props.underlineData && this.props.underlineData.hasOwnProperty('underlineTextNumberOfLines')) {
            underlineTextNumberOfLines = this.props.underlineData.underlineTextNumberOfLines;
          }

          return _react.default.createElement(_reactNative.View, {
            style: [styles.underlineContainer, {
              paddingBottom: 5,
              paddingTop: 0
            }]
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            numberOfLines: leftTextNumberOfLines,
            allowFontScaling: this.props.dialogStyle.allowFontScaling,
            style: [styles.label, this.props.underlineData.leftTextStyle]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
          })), leftText || ''), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: [styles.underlineText, {
              color: this.props.color
            }, this.props.underlineData.underlineTextStyle],
            numberOfLines: underlineTextNumberOfLines,
            allowFontScaling: this.props.dialogStyle.allowFontScaling,
            onPress: function onPress() {
              return _this4.onPressUnderlineText();
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
            accessibilityLabel: accessibilityLabel,
            accessibilityHint: accessibilityHint
          })), underlineText || ''));
        }

        return null;
      }
    }, {
      key: "renderDownUnderline",
      value: function renderDownUnderline() {
        var _this5 = this;

        if ((this.props.type === TYPE.BOTH || this.props.type === TYPE.UNDERLINE) && this.props.underlineData.useNewTheme) {
          var _this$props$underline2 = this.props.underlineData,
              underlineText = _this$props$underline2.underlineText,
              accessibilityLabel = _this$props$underline2.accessibilityLabel,
              accessibilityHint = _this$props$underline2.accessibilityHint;
          var underlineTextNumberOfLines = 1;

          if (this.props.underlineData && this.props.underlineData.hasOwnProperty('underlineTextNumberOfLines')) {
            underlineTextNumberOfLines = this.props.underlineData.underlineTextNumberOfLines;
          }

          return _react.default.createElement(_reactNative.View, {
            style: [styles.underlineContainer]
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: [styles.underlineText, {
              color: this.props.color,
              textAlign: 'left'
            }, this.props.underlineData.underlineTextStyle],
            numberOfLines: underlineTextNumberOfLines,
            allowFontScaling: this.props.dialogStyle.allowFontScaling,
            onPress: function onPress() {
              return _this5.onPressUnderlineText();
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
            accessibilityLabel: accessibilityLabel,
            accessibilityHint: accessibilityHint
          })), underlineText || ''));
        }

        return null;
      }
    }, {
      key: "renderWarnText",
      value: function renderWarnText() {
        var _this$context$theme;

        return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.inputWarnText, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorWarn
          }],
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), this.props.inputWarnText);
      }
    }, {
      key: "renderInputView",
      value: function renderInputView(input, index) {
        var _this6 = this;

        if (input === undefined) return null;
        var accessibilityLabel = input.accessibilityLabel,
            accessibilityHint = input.accessibilityHint;
        var marginTop = index === 0 ? 0 : 7;
        var onChangeTextOrigin = input.onChangeText;

        input.onChangeText = function (text) {
          _this6._onChangeText(text, index);

          if (onChangeTextOrigin instanceof Function) {
            onChangeTextOrigin(text);
          }
        };

        return _react.default.createElement(_InputView.default, (0, _extends2.default)({
          key: index + (input.placeholder || ''),
          style: {
            marginTop: marginTop
          },
          placeholder: input.placeholder || '',
          onChangeText: input.onChangeText,
          defaultValue: input.defaultValue || '',
          textInputProps: input.textInputProps || {},
          type: input.type,
          borderColor: input.borderColor,
          isCorrect: input.isCorrect
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: accessibilityLabel,
          accessibilityHint: accessibilityHint
        })));
      }
    }, {
      key: "renderInputGroup",
      value: function renderInputGroup() {
        var input0 = this.props.inputs ? this.props.inputs[0] : [{
          defaultValue: '',
          textInputProps: {
            autoFocus: true
          }
        }];
        var input1 = this.props.inputs ? this.props.inputs.length > 1 ? this.props.inputs[1] : undefined : undefined;
        return _react.default.createElement(_reactNative.View, {
          flexDirection: 'column',
          alignItems: 'center',
          justifyContent: 'center'
        }, this.renderInputView(input0, 0), input0.hasOwnProperty('isCorrect') && !input0.isCorrect ? this.renderWarnText() : null, this.renderInputView(input1, 1));
      }
    }, {
      key: "renderDownExtra",
      value: function renderDownExtra() {
        var _this7 = this;

        if (this.props.type === TYPE.BOTH || this.props.type === TYPE.CHECKBOX) {
          var _this$context$theme2;

          var _this$props$checkboxD = this.props.checkboxData,
              text = _this$props$checkboxD.text,
              accessibilityLabel = _this$props$checkboxD.accessibilityLabel,
              accessibilityHint = _this$props$checkboxD.accessibilityHint;
          var numberOfLines = 1;

          if (this.props.checkboxData && this.props.checkboxData.hasOwnProperty('numberOfLines')) {
            numberOfLines = this.props.checkboxData.numberOfLines;
          }

          return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            onPress: function onPress() {
              return _this7.onPressCheckbox();
            },
            activeOpacity: 1,
            style: {
              paddingTop: paddingTop,
              marginHorizontal: 13
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
            accessibilityLabel: accessibilityLabel || text,
            accessibilityHint: accessibilityHint,
            accessibilityState: {
              disabled: false,
              checked: this.state.checked
            }
          })), _react.default.createElement(_reactNative.View, {
            style: [styles.checkboxContainer]
          }, _react.default.createElement(_Checkbox.default, {
            checked: this.state.checked,
            checkedColor: this.props.color,
            style: {
              width: 22,
              height: 22,
              borderRadius: 11
            },
            onValueChange: function onValueChange(checked) {
              _this7.setState({
                checked: checked
              });
            }
          }), _react.default.createElement(_reactNative.Text, {
            style: [styles.checkboxText, {
              color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayHeavier
            }, this.props.checkboxData.textStyle],
            numberOfLines: numberOfLines,
            allowFontScaling: this.props.dialogStyle.allowFontScaling
          }, text || '')));
        }

        return null;
      }
    }, {
      key: "render",
      value: function render() {
        var _this8 = this;

        var buttons = this.buttons;

        if (this.props.noInputDisButton && buttons instanceof Array) {
          var button = buttons[buttons.length - 1];
          button.disabled = this.state.disButton;
          button.colorType = this.state.disButton ? 'grayLayerBlack' : 'blueLayerWhite';
        }

        var absDialogStyle = _reactNative.Platform.OS === 'ios' ? {
          bottom: ~~(height * 0.45),
          borderRadius: 20,
          marginHorizontal: 10,
          width: width - 20
        } : {};
        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.props.visible,
          title: this.props.title,
          buttons: this.buttons,
          dialogStyle: this.props.dialogStyle,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          onDismiss: function onDismiss() {
            return _this8._onDismiss();
          },
          showSubtitle: !this.props.isCorrect,
          subtitle: this.props.warnText,
          canDismiss: this.props.canDismiss,
          useNewTheme: true,
          dialogStyle: {
            subTitleStyle: {
              color: '#F43F31',
              fontSize: 14,
              lineHeight: 19
            }
          },
          style: absDialogStyle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.container]
        }, this.renderUpExtra(), this.renderInputGroup(), this.renderDownUnderline(), this.renderDownExtra()));
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
        this.setState({
          disButton: this.props.noInputDisButton
        });
      }
    }, {
      key: "onPressUnderlineText",
      value: function onPressUnderlineText() {
        this.hasPressUnderlineText = true;
        var onPress = this.props.underlineData.onPress;
        onPress && onPress();
      }
    }, {
      key: "onPressCheckbox",
      value: function onPressCheckbox() {
        this.setState({
          checked: !this.state.checked
        });
      }
    }]);
    return InputDialog;
  }(_react.default.Component);

  InputDialog.contextType = _configProvider.ConfigContext;
  InputDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    type: _propTypes.default.oneOf([TYPE.SIMPLE, TYPE.UNDERLINE, TYPE.CHECKBOX, TYPE.BOTH]),
    color: _propTypes.default.string,
    title: _propTypes.default.string,
    dialogStyle: _propTypes.default.object,
    extra: _propTypes.default.object,
    underlineData: _propTypes.default.shape({
      useNewTheme: _propTypes.default.bool,
      leftText: _propTypes.default.string,
      underlineText: _propTypes.default.string,
      onPress: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    }),
    inputs: _propTypes.default.arrayOf(_propTypes.default.shape({
      placeholder: _propTypes.default.string,
      defaultValue: _propTypes.default.string,
      onChangeText: _propTypes.default.func,
      textInputProps: _propTypes.default.object,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    checkboxData: _propTypes.default.shape({
      checked: _propTypes.default.bool,
      text: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    }),
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    isCorrect: _propTypes.default.bool,
    inputWarnText: _propTypes.default.string,
    warnText: _propTypes.default.string,
    noInputDisButton: _propTypes.default.bool,
    canDismiss: _propTypes.default.bool
  };
  InputDialog.defaultProps = {
    type: TYPE.SIMPLE,
    color: _resources.Styles.common.MHGreen,
    underlineData: {},
    checkboxData: {},
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      titleNumberOfLines: 1,
      titleStyle: {}
    },
    buttons: [{
      text: '取消'
    }, {
      text: '确定'
    }],
    inputs: [{
      placeholder: '自定义占位字符',
      defaultValue: '',
      textInputProps: {
        autoFocus: true
      }
    }],
    isCorrect: true,
    inputWarnText: '输入错误',
    warnText: '结果错误',
    noInputDisButton: false,
    canDismiss: true
  };
  InputDialog.TYPE = TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingHorizontal: paddingHorizontal,
      paddingBottom: paddingVertical,
      backgroundColor: 'transparent',
      borderRadius: _resources.Styles.dialog.modal.borderRadius
    },
    underlineContainer: {
      marginHorizontal: 13,
      paddingTop: paddingTop,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-around'
    },
    label: {
      fontSize: 14,
      lineHeight: 19,
      color: 'rgba(0,0,0,0.8)',
      flex: 1
    },
    underlineText: {
      flex: 1,
      textAlign: 'right',
      lineHeight: 19,
      textDecorationLine: 'underline',
      fontSize: 14
    },
    checkboxContainer: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    checkboxText: {
      flex: 1,
      marginLeft: 7,
      fontSize: 14,
      lineHeight: 19
    },
    inputWarnText: {
      alignSelf: 'flex-start',
      marginHorizontal: 19,
      marginTop: 9,
      fontSize: 14,
      lineHeight: 19,
      flex: 1
    }
  });

  var _default = InputDialog;
  exports.default = _default;
},23008,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22786,22996,22426,23221,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeIndicators = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var _Icons = _$$_REQUIRE(_dependencyMap[16]);

  var LoadingDialog = function (_React$Component) {
    (0, _inherits2.default)(LoadingDialog, _React$Component);

    function LoadingDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LoadingDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LoadingDialog).call(this, props, context));

      _this.onShowView = function () {
        _this.state.rotate.setValue(0);

        _reactNative.Animated.timing(_this.state.rotate, {
          toValue: 1,
          useNativeDriver: true,
          duration: 1000
        }).start(function () {
          return _this.onShowView();
        });
      };

      (0, _reportDecorator.referenceReport)('LoadingDialog');
      _this.state = {
        visible: _this.props.visible,
        rotate: new _reactNative.Animated.Value(0)
      };
      _this.uselesscode = _reactNativeIndicators.BallIndicator;
      return _this;
    }

    (0, _createClass2.default)(LoadingDialog, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.onShowView();
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this,
            _this$context$theme;

        var timeout = this.props.timeout;
        var paddingTop = 25;

        if (timeout && typeof parseInt(timeout) === 'number') {
          if (!this.state.visible) {
            clearTimeout(this.timer);
            this.timer = null;
          } else if (!this.timer) {
            this.timer = setTimeout(function () {
              _this2.setState({
                visible: false
              });

              _this2.props.onDismiss && _this2.props.onDismiss();
            }, parseInt(timeout));
          }
        }

        var pic = this.context.colorScheme === 'dark' ? _Icons.Icons.loadingPicDark : _Icons.Icons.loadingPicLight;

        var imageView = _react.default.createElement(_reactNative.Animated.Image, {
          source: pic,
          style: {
            marginLeft: 1,
            backgroundColor: 'transparent',
            width: 20,
            height: 20,
            transform: [{
              rotate: this.state.rotate.interpolate({
                inputRange: [0, 1],
                outputRange: ['0deg', '360deg']
              })
            }]
          }
        });

        var heightStyle = {
          height: styles.container.height,
          minHeight: styles.container.height
        };

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('textNumberOfLines')) {
          if (this.props.dialogStyle.textNumberOfLines > 1) {
            heightStyle.height = null;
          }
        }

        if (this.props.dialogStyle && this.props.dialogStyle.unlimitedHeightEnable) {
          heightStyle.height = null;
        }

        return _react.default.createElement(_AbstractDialog.default, {
          animationType: this.props.animationType,
          visible: this.state.visible,
          showTitle: false,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          canDismiss: false,
          showButton: false,
          accessible: this.props.accessible,
          useNewTheme: true
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, heightStyle, {
            paddingTop: paddingTop
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), imageView, _react.default.createElement(_reactNative.Text, {
          style: [styles.message, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorGrayHeavier
          }, this.props.dialogStyle.messageStyle],
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          numberOfLines: this.props.dialogStyle.textNumberOfLines
        }, this.props.message || '')));
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        clearTimeout(this.timer);
      }
    }]);
    return LoadingDialog;
  }(_react.default.Component);

  LoadingDialog.contextType = _configProvider.ConfigContext;
  LoadingDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    message: _propTypes.default.string,
    timeout: _propTypes.default.number,
    dialogStyle: _propTypes.default.object,
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  LoadingDialog.defaultProps = {
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      messageStyle: {}
    }
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      height: 65,
      flexDirection: 'row',
      alignItems: 'center',
      paddingHorizontal: 27,
      borderTopEndRadius: _resources.Styles.dialog.modal.borderTopEndRadius,
      borderTopStartRadius: _resources.Styles.dialog.modal.borderTopStartRadius
    },
    message: {
      marginLeft: 15,
      flex: 1,
      fontSize: 16
    }
  });

  var _default = LoadingDialog;
  exports.default = _default;
},23011,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13711,22453,22996,22426,22420,22423,23080]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[16]);

  var _font = _$$_REQUIRE(_dependencyMap[17]);

  var paddingHorizontal = 40;
  var paddingVertical = 28;
  var paddingTop = 17;
  var TYPE = {
    SIMPLE: 'simple',
    UNDERLINE: 'underline',
    CHECKBOX: 'checkbox',
    SUBTEXT: 'subtext'
  };
  Object.freeze(TYPE);

  var MessageDialog = function (_React$Component) {
    (0, _inherits2.default)(MessageDialog, _React$Component);

    function MessageDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, MessageDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MessageDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('MessageDialog');
      _this.state = {
        checked: props.extra.checked || false
      };

      _this.process(props);

      return _this;
    }

    (0, _createClass2.default)(MessageDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(props) {
        this.setState({
          checked: props.extra.checked || false
        });
        this.process(props);
      }
    }, {
      key: "process",
      value: function process(props) {
        var _this2 = this;

        this.hasPressUnderlineText = false;
        var buttons = props.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];

          if (button && button.callback) {
            var callbackOrigin = button.callback;

            button.callback = function () {
              if (props.type === TYPE.UNDERLINE) {
                callbackOrigin({
                  hasPressUnderlineText: _this2.hasPressUnderlineText
                });
              } else if (props.type === TYPE.CHECKBOX) {
                callbackOrigin({
                  checked: _this2.state.checked
                });
              } else {
                callbackOrigin({});
              }
            };
          }
        }

        this.buttons = buttons;
      }
    }, {
      key: "renderExtra",
      value: function renderExtra() {
        var _this3 = this,
            _this$context$theme,
            _this$context$theme2;

        var extraTextNumberOfLines = 1;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('extraTextNumberOfLines')) {
          extraTextNumberOfLines = this.props.dialogStyle.extraTextNumberOfLines;
        }

        switch (this.props.type) {
          case TYPE.SIMPLE:
            return null;

          case TYPE.UNDERLINE:
            return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
              style: [styles.extraContainer, {
                paddingTop: paddingTop
              }]
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
              accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
              accessibilityHint: this.props.accessibilityHint
            })), _react.default.createElement(_reactNative.Text, {
              numberOfLines: extraTextNumberOfLines,
              allowFontScaling: this.props.dialogStyle.allowFontScaling,
              style: [styles.underlineText, {
                color: this.props.color
              }, this.props.dialogStyle.extraTextStyle],
              onPress: function onPress() {
                return _this3.onPressUnderlineText();
              }
            }, this.props.extraText || ''));

          case TYPE.CHECKBOX:
            return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
              onPress: function onPress() {
                return _this3.onPressCheckbox();
              },
              activeOpacity: 1,
              style: {
                paddingTop: paddingTop
              }
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: false
            })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
              style: styles.extraContainer
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
              accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
              accessibilityHint: this.props.accessibilityHint,
              accessibilityState: {
                disabled: false,
                checked: this.state.checked
              }
            })), _react.default.createElement(_Checkbox.default, {
              checked: this.state.checked,
              checkedColor: this.props.color,
              style: {
                width: 22,
                height: 22,
                borderRadius: 11
              },
              onValueChange: function onValueChange(checked) {
                _this3.setState({
                  checked: checked
                });
              }
            }), _react.default.createElement(_reactNative.Text, {
              style: [styles.checkboxText, {
                color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorGrayHeavier
              }, this.props.dialogStyle.extraTextStyle],
              numberOfLines: extraTextNumberOfLines,
              allowFontScaling: this.props.dialogStyle.allowFontScaling
            }, this.props.extraText || '')));

          case TYPE.SUBTEXT:
            extraTextNumberOfLines = 15;

            if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('extraTextNumberOfLines')) {
              extraTextNumberOfLines = this.props.dialogStyle.extraTextNumberOfLines;
            }

            return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
              style: {
                paddingTop: 10
              }
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
              accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
              accessibilityHint: this.props.accessibilityHint
            })), _react.default.createElement(_reactNative.Text, {
              numberOfLines: extraTextNumberOfLines,
              allowFontScaling: this.props.dialogStyle.allowFontScaling,
              style: [styles.subText, {
                color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayLighter
              }, this.props.dialogStyle.extraTextStyle]
            }, this.props.extraText || ''));

          default:
            return null;
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this,
            _this$context$theme3;

        var showTitle = !!this.props.title;
        var paddingTop = showTitle ? {
          paddingTop: 8
        } : {};
        var messageNumberOfLines = 15;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('messageNumberOfLines')) {
          messageNumberOfLines = this.props.dialogStyle.messageNumberOfLines;
        }

        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.props.visible,
          title: this.props.title,
          showTitle: showTitle,
          buttons: this.buttons,
          dialogStyle: this.props.dialogStyle,
          onModalShow: this.props.onModalShow,
          style: this.props.modalStyle,
          onModalHide: this.props.onModalHide,
          canDismiss: this.props.canDismiss,
          onDismiss: function onDismiss() {
            return _this4._onDismiss();
          },
          useNewTheme: true
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.container, paddingTop]
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: messageNumberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          style: [styles.message, {
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayHeavier
          }, this.props.messageStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), this.props.message || ''), this.renderExtra()));
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "onPressUnderlineText",
      value: function onPressUnderlineText() {
        this.hasPressUnderlineText = true;
        var onPress = this.props.extra.onPress;
        onPress && onPress();
      }
    }, {
      key: "onPressCheckbox",
      value: function onPressCheckbox() {
        this.setState({
          checked: !this.state.checked
        });
      }
    }]);
    return MessageDialog;
  }(_react.default.Component);

  MessageDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    type: _propTypes.default.oneOf([TYPE.SIMPLE, TYPE.UNDERLINE, TYPE.CHECKBOX]),
    color: _propTypes.default.string,
    title: _propTypes.default.string,
    message: _propTypes.default.string,
    messageStyle: _reactNative.Text.propTypes.style,
    extraText: _propTypes.default.string,
    extra: _propTypes.default.object,
    buttons: _propTypes.default.arrayOf(_propTypes.default.object),
    dialogStyle: _propTypes.default.object,
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    modalStyle: _propTypes.default.object,
    canDismiss: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  MessageDialog.defaultProps = {
    type: TYPE.SIMPLE,
    color: _resources.Styles.common.MHGreen,
    message: '请自定义提示文案',
    messageStyle: {},
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      titleNumberOfLines: 1,
      messageNumberOfLines: 15,
      titleStyle: {},
      extraTextStyle: {}
    },
    canDismiss: true,
    extra: {}
  };
  MessageDialog.TYPE = TYPE;
  MessageDialog.contextType = _configProvider.ConfigContext;

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingHorizontal: paddingHorizontal,
      paddingVertical: paddingVertical,
      borderTopEndRadius: _resources.Styles.dialog.modal.borderTopEndRadius,
      borderTopStartRadius: _resources.Styles.dialog.modal.borderTopStartRadius
    },
    message: (0, _objectSpread2.default)({
      fontSize: 16,
      lineHeight: 22
    }, _font.FontSecondary),
    subText: (0, _objectSpread2.default)({
      fontSize: 12,
      lineHeight: 16
    }, _font.FontSecondary),
    underlineText: {
      flex: 1,
      textDecorationLine: 'underline',
      fontSize: 14
    },
    extraContainer: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    checkboxText: {
      flex: 1,
      marginLeft: 7,
      fontSize: 14
    }
  });

  var _default = MessageDialog;
  exports.default = _default;
},23014,[14305,14314,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22786,22996,22420,22423,22426,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var paddingHorizontal = 25;
  var paddingVertical = 28;
  var marginVertical = 26;
  var blockSize = 48;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      height = _Dimensions$get.height,
      width = _Dimensions$get.width;

  var PinCodeDialog = function (_React$Component) {
    (0, _inherits2.default)(PinCodeDialog, _React$Component);
    (0, _createClass2.default)(PinCodeDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(props) {
        if (props.visible === true) {
          this.setState({
            numArr: Array.from({
              length: this.digit
            }, function () {
              return undefined;
            }),
            value: ''
          });
        }

        this.setState({
          checked: (props.checkboxData || {})['checked'] || false
        });
        this.process(props);
      }
    }]);

    function PinCodeDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, PinCodeDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PinCodeDialog).call(this, props, context));

      _this.fadeInView = function () {
        var animationSequence = _reactNative.Animated.sequence([_reactNative.Animated.timing(_this.state.fadeAnim, {
          toValue: 1,
          duration: 490,
          easing: _reactNative.Easing.exp,
          useNativeDriver: true
        }), _reactNative.Animated.timing(_this.state.fadeAnim, {
          toValue: 0,
          duration: 490,
          easing: _reactNative.Easing.exp,
          useNativeDriver: true
        })]);

        _reactNative.Animated.loop(animationSequence).start();

        return _react.default.createElement(_reactNative.Animated.View, {
          style: {
            width: 2,
            height: 18,
            borderRadius: 0.5,
            backgroundColor: '#32BAC0',
            opacity: _this.state.fadeAnim
          }
        });
      };

      (0, _reportDecorator.referenceReport)('PinCodeDialog');
      _this.digit = _this.props.digit;

      if (_this.digit > 6 || _this.digit < 3) {
        _this.digit = 6;
      }

      var numArr = Array.from({
        length: _this.digit
      }, function () {
        return undefined;
      });
      _this.state = {
        numArr: numArr,
        value: '',
        checked: (props.checkboxData || {})['checked'] || false,
        fadeAnim: new _reactNative.Animated.Value(0)
      };

      _this.process(props);

      return _this;
    }

    (0, _createClass2.default)(PinCodeDialog, [{
      key: "process",
      value: function process(props) {
        var _this2 = this;

        var buttons = props.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];

          if (button && button.callback) {
            var callbackOrigin = button.callback;

            button.callback = function () {
              callbackOrigin({
                checked: _this2.state.checked,
                numArr: _this2.state.numArr
              });
            };
          }
        }

        this.buttons = buttons;
      }
    }, {
      key: "_onChangeText",
      value: function _onChangeText(text) {
        if (/^\d*$/.test(text)) {
          if (text.length <= this.digit) {
            var numArr = this.state.numArr.map(function (v, i) {
              return text[i];
            });
            this.setState({
              numArr: numArr
            });
          }

          this.setState({
            value: text.slice(0, this.digit)
          });
        } else {
          var value = text.match(/\d*/)[0];
          this.setState({
            value: value
          });
        }
      }
    }, {
      key: "renderUpExtra",
      value: function renderUpExtra() {
        var _this$context$theme;

        if (!this.props.message) return null;
        var numberOfLines = 15;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('messageNumberOfLines')) {
          numberOfLines = this.props.dialogStyle.messageNumberOfLines;
        }

        return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.message, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorGrayHeavier
          }, this.props.dialogStyle.messageStyle],
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          numberOfLines: numberOfLines
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), this.props.message || '');
      }
    }, {
      key: "renderTextGroup",
      value: function renderTextGroup() {
        var _this3 = this;

        var focusIndex = this.state.numArr.indexOf(undefined);
        return Array.from({
          length: this.digit
        }, function (v, i) {
          return i;
        }).map(function (v, i) {
          var _this3$context$theme3, _this3$context$theme4;

          var marginLeft = i === 0 ? {} : {
            marginLeft: 66 / _this3.digit
          };
          var borderColor = {};
          var boxView;

          if (i < focusIndex - 1 || focusIndex === -1) {
            var _this3$context$theme;

            boxView = _react.default.createElement(_reactNative.View, {
              style: {
                width: 8,
                height: 8,
                backgroundColor: (_this3$context$theme = _this3.context.theme) == null ? undefined : _this3$context$theme.colorBlack1,
                borderRadius: 4
              }
            });
          } else if (i === focusIndex) {
            boxView = _this3.fadeInView();
          } else {
            var _this3$context$theme2;

            boxView = _react.default.createElement(_reactNative.Text, {
              style: [styles.blockText, {
                color: (_this3$context$theme2 = _this3.context.theme) == null ? undefined : _this3$context$theme2.colorBlack1
              }, _this3.props.dialogStyle.digitStyle],
              selectionColor: 'green',
              allowFontScaling: _this3.props.dialogStyle.allowFontScaling
            }, _this3.state.numArr[i] || '');
          }

          return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            key: i,
            style: [styles.blockContainer, {
              backgroundColor: (_this3$context$theme3 = _this3.context.theme) == null ? undefined : _this3$context$theme3.colorBtnGrayNor,
              borderColor: (_this3$context$theme4 = _this3.context.theme) == null ? undefined : _this3$context$theme4.colorBtnGrayNor
            }, marginLeft, borderColor]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this3.props.accessible
          })), boxView);
        });
      }
    }, {
      key: "renderDownExtra",
      value: function renderDownExtra() {
        var _this4 = this,
            _this$context$theme2;

        if (!(this.props.checkboxData instanceof Object)) return null;
        var numberOfLines = 1;

        if (this.props.checkboxData && this.props.checkboxData.hasOwnProperty('numberOfLines')) {
          numberOfLines = this.props.checkboxData.numberOfLines;
        }

        var _this$props$checkboxD = this.props.checkboxData,
            text = _this$props$checkboxD.text,
            accessibilityLabel = _this$props$checkboxD.accessibilityLabel,
            accessibilityHint = _this$props$checkboxD.accessibilityHint;
        return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          onPress: function onPress() {
            return _this4.onPressCheckbox();
          },
          activeOpacity: 1
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
          accessibilityLabel: accessibilityLabel,
          accessibilityHint: accessibilityHint,
          accessibilityState: {
            disabled: false,
            checked: this.state.checked
          }
        })), _react.default.createElement(_reactNative.View, {
          style: styles.checkboxContainer
        }, _react.default.createElement(_Checkbox.default, {
          checked: this.state.checked,
          checkedColor: this.props.color,
          style: {
            width: 22,
            height: 22,
            borderRadius: 11
          },
          onValueChange: function onValueChange(checked) {
            _this4.setState({
              checked: checked
            });
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: [styles.checkboxText, {
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayHeavier
          }, this.props.checkboxData.textStyle],
          numberOfLines: numberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, text || '')));
      }
    }, {
      key: "render",
      value: function render() {
        var _this5 = this;

        var buttons = this.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];
          button.disabled = this.state.value === '';
          button.colorType = this.state.value === '' ? 'grayLayerBlack' : 'blueLayerWhite';
        }

        var absDialogStyle = _reactNative.Platform.OS === 'ios' ? {
          bottom: ~~(height * 0.4),
          borderRadius: 20,
          marginHorizontal: 10,
          width: width - 20
        } : {};
        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.props.visible,
          title: this.props.title,
          buttons: this.buttons,
          dialogStyle: this.props.dialogStyle,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          style: this.props.modalStyle,
          onDismiss: function onDismiss() {
            return _this5._onDismiss();
          },
          useNewTheme: true,
          canDismiss: this.props.canDismiss,
          style: absDialogStyle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.container]
        }, this.renderUpExtra(), _react.default.createElement(_reactNative.View, {
          style: styles.pinCodeContainer
        }, _react.default.createElement(_reactNative.View, {
          style: styles.textGroup
        }, this.renderTextGroup()), _react.default.createElement(_reactNative.TextInput, {
          autoFocus: true,
          caretHidden: true,
          style: styles.textinput,
          value: this.state.value,
          underlineColorAndroid: "transparent",
          onChangeText: function onChangeText(text) {
            return _this5._onChangeText(text);
          },
          keyboardType: "numeric"
        })), this.renderDownExtra()));
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "onPressCheckbox",
      value: function onPressCheckbox() {
        this.setState({
          checked: !this.state.checked
        });
      }
    }]);
    return PinCodeDialog;
  }(_react.default.Component);

  PinCodeDialog.contextType = _configProvider.ConfigContext;
  PinCodeDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    title: _propTypes.default.string,
    message: _propTypes.default.string,
    digit: _propTypes.default.oneOf([3, 4, 5, 6]),
    color: _propTypes.default.any,
    dialogStyle: _propTypes.default.object,
    checkboxData: _propTypes.default.shape({
      checked: _propTypes.default.bool,
      text: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    }),
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    modalStyle: _propTypes.default.object,
    canDismiss: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  PinCodeDialog.defaultProps = {
    digit: 6,
    color: _resources.Styles.common.MHGreen,
    checkboxData: {},
    dialogStyle: {
      unlimitedHeightEnable: false,
      allowFontScaling: true,
      titleNumberOfLines: 1,
      messageNumberOfLines: 15,
      titleStyle: {},
      messageStyle: {},
      digitStyle: {}
    },
    canDismiss: true
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingHorizontal: paddingHorizontal,
      paddingBottom: paddingVertical,
      borderRadius: _resources.Styles.dialog.modal.borderRadius
    },
    message: {
      fontSize: 16,
      lineHeight: 22,
      flex: 1,
      marginHorizontal: 15
    },
    pinCodeContainer: {
      marginVertical: marginVertical,
      marginBottom: 12,
      alignItems: 'center',
      justifyContent: 'center'
    },
    textinput: {
      position: 'absolute',
      width: _resources.Styles.dialog.modal.width - 50,
      height: 50,
      backgroundColor: 'transparent',
      color: 'transparent'
    },
    textGroup: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    blockContainer: {
      height: blockSize,
      width: blockSize,
      borderRadius: 10,
      borderWidth: 2,
      alignItems: 'center',
      justifyContent: 'center'
    },
    blockText: {
      fontSize: 20
    },
    checkboxContainer: {
      flexDirection: 'row',
      alignItems: 'center',
      marginHorizontal: 15
    },
    checkboxText: {
      flex: 1,
      marginLeft: 7,
      fontSize: 14,
      lineHeight: 19
    }
  });

  var _default = PinCodeDialog;
  exports.default = _default;
},23017,[14305,14344,14320,14371,14377,14323,14386,10318,10297,10033,22453,22786,22996,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var Progress = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _resources = _$$_REQUIRE(_dependencyMap[12]);

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var _index = _$$_REQUIRE(_dependencyMap[17]);

  var _string = _$$_REQUIRE(_dependencyMap[18]);

  var padding = 27;

  var ProgressDialog = function (_React$Component) {
    (0, _inherits2.default)(ProgressDialog, _React$Component);

    function ProgressDialog(props, context) {
      var _this$context$media;

      var _this;

      (0, _classCallCheck2.default)(this, ProgressDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ProgressDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ProgressDialog');
      _this.state = {
        visible: _this.props.visible
      };
      _this.responsiveProgressWidth = (((_this$context$media = _this.context.media) == null ? undefined : _this$context$media.screenType) === 'tablet' ? _resources.Styles.dialog.padModal.width : _resources.Styles.dialog.modal.width) - 54;
      return _this;
    }

    (0, _createClass2.default)(ProgressDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this,
            _this$context$theme,
            _this$context$theme2,
            _this$context$theme3;

        if (this.props.autoDismiss && this.state.visible === true && this.props.progress >= 1) {
          this.timer = setTimeout(function () {
            _this2.setState({
              visible: false
            });

            _this2.props.onDismiss && _this2.props.onDismiss();
          }, 350);
        }

        var progressText = (0, _string.formatString)(_index.Locale.of(this.context.language).percentage, Math.round(this.props.progress * 100));
        var messageNumberOfLines = 1;

        if (this.props.dialogStyle) {
          if (this.props.dialogStyle.hasOwnProperty('messageNumberOfLines') && this.props.dialogStyle.messageNumberOfLines > 1) {
            messageNumberOfLines = this.props.dialogStyle.messageNumberOfLines;
          }
        }

        var unfilledColor = (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBtnGrayNor;

        if (this.props.unfilledColor) {
          unfilledColor = this.props.unfilledColor;
        }

        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.state.visible,
          showTitle: false,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          canDismiss: false,
          showButton: false,
          useNewTheme: true
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, {
            backgroundColor: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorForeground
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.progressbar,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityValue: this.props.accessibilityValue || {
            text: progressText
          }
        })), _react.default.createElement(_reactNative.View, {
          style: styles.messageContainer
        }, _react.default.createElement(_reactNative.Text, {
          numberOfLines: messageNumberOfLines,
          style: [styles.message, {
            flex: 1,
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayHeavier
          }, this.props.dialogStyle.messageStyle],
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, this.props.message || ''), _react.default.createElement(_reactNative.Text, {
          style: [styles.message, {
            minWidth: 45,
            textAlign: 'right'
          }, {
            color: this.props.textColor
          }, this.props.dialogStyle.progressTextStyle],
          numberOfLines: 1,
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, progressText)), _react.default.createElement(Progress.Bar, {
          style: {
            marginBottom: messageNumberOfLines > 1 ? 10 : 0
          },
          progress: this.props.progress,
          color: this.props.color,
          unfilledColor: unfilledColor,
          width: this.responsiveProgressWidth,
          height: 6,
          borderRadius: 5.5,
          borderWidth: 0,
          borderColor: "#e5e5e5",
          useNativeDriver: true
        })));
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        clearTimeout(this.timer);
      }
    }]);
    return ProgressDialog;
  }(_react.default.Component);

  ProgressDialog.contextType = _configProvider.ConfigContext;
  ProgressDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    message: _propTypes.default.string,
    progress: _propTypes.default.number,
    color: _propTypes.default.string,
    unfilledColor: _propTypes.default.string,
    textColor: _propTypes.default.string,
    autoDismiss: _propTypes.default.bool,
    dialogStyle: _propTypes.default.object,
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityValue: _accessibilityHelper.AccessibilityPropTypes.accessibilityValue
  };
  ProgressDialog.defaultProps = {
    progress: 0,
    color: _resources.Styles.common.MHGreen,
    textColor: _resources.Styles.common.MHGreen,
    autoDismiss: false,
    dialogStyle: {
      allowFontScaling: true,
      messageNumberOfLines: 1,
      messageStyle: {},
      progressTextStyle: {}
    }
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      minHeight: 86,
      paddingHorizontal: padding,
      justifyContent: 'center',
      paddingTop: 20,
      borderTopEndRadius: _resources.Styles.dialog.modal.borderTopEndRadius,
      borderTopStartRadius: _resources.Styles.dialog.modal.borderTopStartRadius
    },
    messageContainer: {
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center',
      marginBottom: 12
    },
    message: {
      fontSize: 16
    }
  });

  var _default = ProgressDialog;
  exports.default = _default;
},23020,[14308,14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13636,22453,22996,22426,22420,22423,22933,22927]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeSwiper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[16]);

  var paddingHorizontal = 40;
  var paddingBottomSmall = 20;
  var paddingBottomLarge = 28;
  var iconSize = 48;
  var optionHeight = 80;
  var testIcon = _resources.Images.common.mihome;

  var ShareDialog = function (_React$Component) {
    (0, _inherits2.default)(ShareDialog, _React$Component);

    function ShareDialog(props, context) {
      var _this$context$media;

      var _this;

      (0, _classCallCheck2.default)(this, ShareDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ShareDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ShareDialog');
      _this.state = {
        swiperVisible: false,
        pressed: -1,
        checked: props.checked || false
      };
      _this.pages = Array.from({
        length: Math.ceil(props.options.length / 8)
      }, function (v, i) {
        return props.options.slice(8 * i, 8 * i + 8);
      });
      _this.iconMargin = ~~(((((_this$context$media = _this.context.media) == null ? undefined : _this$context$media.screenType) === 'tablet' ? _resources.Styles.dialog.padModal.width : _resources.Styles.dialog.modal.width) - 80 - 192) / 3);
      return _this;
    }

    (0, _createClass2.default)(ShareDialog, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.setState({
          swiperVisible: true
        });
      }
    }, {
      key: "renderCheckBox",
      value: function renderCheckBox() {
        var _this2 = this,
            _this$context$theme;

        var extraTextNumberOfLines = 1;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('extraTextNumberOfLines')) {
          extraTextNumberOfLines = this.props.dialogStyle.extraTextNumberOfLines;
        }

        return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          onPress: function onPress() {
            return _this2.onPressCheckbox();
          },
          activeOpacity: 1,
          style: {
            paddingTop: 10,
            paddingHorizontal: paddingHorizontal
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: styles.extraContainer
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
          accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: false,
            checked: this.state.checked
          }
        })), _react.default.createElement(_Checkbox.default, {
          checked: this.state.checked,
          checkedColor: this.props.checkColor,
          style: {
            width: 22,
            height: 22,
            borderRadius: 11
          },
          onValueChange: function onValueChange(checked) {
            _this2.setState({
              checked: checked
            });
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: [styles.checkboxText, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorGrayHeavier
          }, this.props.dialogStyle.extraTextStyle],
          numberOfLines: extraTextNumberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, this.props.extraText || '')));
      }
    }, {
      key: "renderIcons",
      value: function renderIcons(options, index) {
        var _this3 = this;

        var numberOfLines = 1;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('itemTextNumberOfLines')) {
          numberOfLines = this.props.dialogStyle.itemTextNumberOfLines;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          key: index + "0",
          style: styles.optionsPage
        }, options.map(function (option, index) {
          if (option === undefined) return null;
          var marginLeft = index % 4 === 0 ? {} : {
            marginLeft: _this3.iconMargin
          };
          var scale = _this3.state.pressed === index ? 0.95 : 1;
          var opacity = _this3.state.pressed === index ? 0.88 : 1;
          return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
            key: index + (option.text || ''),
            onPress: option.callback,
            onPressIn: function onPressIn() {
              return _this3.setState({
                pressed: index
              });
            },
            onPressOut: function onPressOut() {
              return _this3.setState({
                pressed: -1
              });
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this3.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityLabel: option.accessibilityLabel || option.text || '',
            accessibilityHint: option.accessibilityHint
          })), _react.default.createElement(_reactNative.View, {
            style: [styles.optionContainer, marginLeft]
          }, _react.default.createElement(_reactNative.Image, {
            style: [styles.icon, {
              transform: [{
                scale: scale
              }]
            }],
            source: option.icon,
            resizeMode: "center"
          }), _react.default.createElement(_reactNative.Text, {
            style: [styles.optionText, {
              opacity: opacity,
              color: theme.colorGrayHeavier
            }, _this3.props.dialogStyle.itemTextStyle],
            numberOfLines: numberOfLines,
            allowFontScaling: _this3.props.dialogStyle.allowFontScaling
          }, option.text || '')));
        }));
      }
    }, {
      key: "renderIconsPages",
      value: function renderIconsPages(options) {
        var _this4 = this;

        if (options.length < 9) return this.renderIcons(options, 0);
        if (!this.state.swiperVisible) return _react.default.createElement(_reactNative.View, {
          style: styles.swiper
        });
        var theme = this.context.theme;
        return _react.default.createElement(_reactNativeSwiper.default, (0, _extends2.default)({
          style: styles.swiper,
          autoplay: false,
          loop: false,
          paginationStyle: styles.paginationStyle,
          dotColor: "rgba(0,0,0,0.2)",
          activeDotColor: theme.colorPrimary,
          dotStyle: styles.dot,
          activeDotStyle: styles.dot
        }, {
          accessibilityLabel: '',
          accessibilityHint: _reactNative.Platform.OS === 'ios' ? '' : ' '
        }), this.pages.map(function (options, index) {
          return _this4.renderIcons(options, index);
        }));
      }
    }, {
      key: "render",
      value: function render() {
        var _this5 = this;

        var theme = this.context.theme;
        var paddingBottom = this.props.options.length > 8 ? {
          paddingBottom: paddingBottomLarge
        } : {
          paddingBottom: paddingBottomSmall
        };
        var hasCheckBox = !!this.props.extraText;
        return _react.default.createElement(_AbstractDialog.default, {
          animationType: this.props.animationType,
          visible: this.props.visible,
          title: this.props.title,
          dialogStyle: this.props.dialogStyle,
          buttons: this.props.buttons,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          onDismiss: function onDismiss() {
            return _this5._onDismiss();
          },
          style: this.props.modalStyle,
          canDismiss: this.props.canDismiss,
          useNewTheme: true
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            backgroundColor: theme.colorForeground
          }, paddingBottom]
        }, this.renderIconsPages(this.props.options), hasCheckBox && this.renderCheckBox()));
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "onPressCheckbox",
      value: function onPressCheckbox() {
        this.setState({
          checked: !this.state.checked
        });
      }
    }]);
    return ShareDialog;
  }(_react.default.Component);

  ShareDialog.contextType = _configProvider.ConfigContext;
  ShareDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    title: _propTypes.default.string,
    dialogStyle: _propTypes.default.object,
    modalStyle: _propTypes.default.object,
    canDismiss: _propTypes.default.bool,
    options: _propTypes.default.arrayOf(_propTypes.default.shape({
      icon: _propTypes.default.any,
      text: _propTypes.default.string,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    checked: _propTypes.default.bool,
    checkColor: _propTypes.default.string,
    extraText: _propTypes.default.string,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ShareDialog.defaultProps = {
    options: Array.from({
      length: 6
    }, function () {
      return {
        icon: testIcon,
        text: ['米家', '微信', 'QQ', '微博', '朋友圈', '收藏', '即刻'][~~(Math.random() * 7)],
        callback: function callback() {
          return undefined;
        }
      };
    }),
    dialogStyle: {
      unlimitedHeightEnable: false,
      allowFontScaling: true,
      titleNumberOfLines: 1,
      itemTextNumberOfLines: 1
    },
    canDismiss: true,
    checkColor: _resources.Styles.common.MHGreen
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      borderRadius: _resources.Styles.dialog.modal.borderRadius
    },
    extraContainer: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    swiper: {
      height: 173,
      marginTop: 9
    },
    optionsPage: {
      flexDirection: 'row',
      flexWrap: 'wrap',
      paddingHorizontal: paddingHorizontal
    },
    optionContainer: {
      minHeight: optionHeight,
      alignItems: 'center'
    },
    icon: {
      width: iconSize,
      height: iconSize
    },
    optionText: {
      marginTop: 4,
      marginBottom: 10,
      width: iconSize,
      textAlign: 'center',
      fontSize: 12
    },
    paginationStyle: {
      position: 'absolute',
      bottom: 0
    },
    dot: {
      width: 6,
      height: 6
    },
    checkboxText: {
      flex: 1,
      marginLeft: 7,
      fontSize: 14,
      color: '#333333'
    }
  });

  var _default = ShareDialog;
  exports.default = _default;
},23023,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13663,22453,22786,22996,22420,22423,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "ChoiceItem", {
    enumerable: true,
    get: function get() {
      return _ChoiceItem.default;
    }
  });
  Object.defineProperty(exports, "ListItem", {
    enumerable: true,
    get: function get() {
      return _ListItem.default;
    }
  });
  Object.defineProperty(exports, "ListItemWithSlider", {
    enumerable: true,
    get: function get() {
      return _ListItemWithSlider.default;
    }
  });
  Object.defineProperty(exports, "ListItemWithSwitch", {
    enumerable: true,
    get: function get() {
      return _ListItemWithSwitch.default;
    }
  });

  var _ChoiceItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _ListItemWithSlider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _ListItemWithSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
},23026,[14305,23002,23029,23038,23044]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _TouchableView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _resources = _$$_REQUIRE(_dependencyMap[12]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var _font = _$$_REQUIRE(_dependencyMap[17]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var dot = _$$_REQUIRE(_dependencyMap[18]);

  var THIN_HEIGHT = 58;
  var PADDING = 29;
  var dotSize = 8;

  var ICON_SIZE = _reactNative.Platform.select({
    android: 26,
    ios: 24
  });

  var ListItem = function (_React$Component) {
    (0, _inherits2.default)(ListItem, _React$Component);

    function ListItem(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ListItem);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItem).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ListItem');
      return _this;
    }

    (0, _createClass2.default)(ListItem, [{
      key: "render",
      value: function render() {
        var _this$context$theme, _this$context$theme2, _this$context$theme3, _this$context$theme4;

        var extraContainerStyle = {};

        if (this.props.subtitle) {
          extraContainerStyle = {
            paddingVertical: this.props.leftIcon ? 8 : 15,
            height: 77
          };
        }

        var leftIconContainerStyle = {};

        if (this.props.leftIcon) {
          leftIconContainerStyle = {
            height: 70,
            paddingLeft: 22
          };
        }

        var extraRightStyle = {};

        if (!this.props.hideArrow) {
          extraRightStyle = {
            maxWidth: this.props.valueMaxWidth || '30%'
          };
        } else {
          extraRightStyle = {
            maxWidth: this.props.valueMaxWidth || '35%'
          };
        }

        var valueStyle = {
          marginRight: 7,
          textAlignVertical: 'center',
          textAlign: 'right'
        };
        var adaptedFontStyle = {};

        if (this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined
          };
        }

        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 2 : this.props.subtitleNumberOfLines;
        var valueLine = this.props.valueNumberOfLines == undefined ? 2 : this.props.valueNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        if (subtitleLine < 0) subtitleLine = 0;
        if (valueLine < 0) valueLine = 0;

        if (_reactNative.Platform.OS === 'android') {
          valueStyle.height = THIN_HEIGHT;
        }

        var titleHeight, subtitleHeight;

        if (this.props.titleStyle) {
          titleHeight = this.props.titleStyle.fontSize ? this.props.titleStyle.fontSize + 6 : 22;
        }

        if (this.props.subtitleStyle) {
          subtitleHeight = this.props.subtitleStyle.fontSize ? this.props.titleStyle.fontSize + 5 : 18;
        }

        return _react.default.createElement(_reactNative.View, {
          style: {
            opacity: this.props.disabled ? 0.3 : 1
          }
        }, _react.default.createElement(_TouchableView.default, (0, _extends2.default)({
          disabled: this.props.disabled,
          underlayColor: this.props.underlayColor,
          onPress: this.props.onPress,
          onLongPress: this.props.onLongPress,
          delayLongPress: this.props.delayLongPress,
          viewStyle: [styles.container, {
            backgroundColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorWhite
          }, this.props.containerStyle, leftIconContainerStyle, extraContainerStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: this.props.disabled
          }
        })), this.props.leftIcon ? _react.default.createElement(_reactNative.Image, {
          style: styles.leftIcon,
          source: this.props.leftIcon
        }) : null, _react.default.createElement(_reactNative.View, {
          style: [styles.left]
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            paddingBottom: 1
          }
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: titleLine,
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.title, this.props.useNewType ? (0, _objectSpread2.default)({}, _font.FontPrimary) : (0, _objectSpread2.default)({}, _font.FontPrimary), {
            lineHeight: titleHeight,
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorBlack,
            flex: 1
          }, this.props.titleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title)), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: subtitleLine,
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.subtitle, (0, _objectSpread2.default)({
            lineHeight: subtitleHeight,
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayLighter
          }, _font.FontSecondary), this.props.subtitleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle) : null), _react.default.createElement(_reactNative.View, {
          style: {
            width: 10
          }
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.right, extraRightStyle]
        }, this.props.value ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: valueLine,
          allowFontScaling: this.props.allowFontScaling,
          ellipsizeMode: "tail",
          style: [_resources.Styles.common.subtitle, (0, _objectSpread2.default)({
            color: (_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorGrayLighter
          }, _font.FontSecondary), this.props.valueStyle, valueStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.value) : null), this.props.showDot ? _react.default.createElement(_reactNative.Image, {
          style: [styles.dot, this.props.dotStyle],
          resizeMode: "contain",
          source: dot
        }) : null, !this.props.hideArrow ? _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _resources.Images.common.right_arrow
        }) : null), this.renderSeparator());
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator() {
        if (!this.props.showSeparator || this.props.useNewType) return null;
        return this.props.separator || _react.default.createElement(_Separator.default, {
          style: {
            marginLeft: _resources.Styles.common.padding
          }
        });
      }
    }]);
    return ListItem;
  }(_react.default.Component);

  ListItem.contextType = _configProvider.ConfigContext;
  ListItem.propTypes = {
    title: _propTypes.default.string.isRequired,
    subtitle: _propTypes.default.string,
    value: _propTypes.default.string,
    onPress: _propTypes.default.func.isRequired,
    onLongPress: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    showSeparator: _propTypes.default.bool,
    hideArrow: _propTypes.default.bool,
    showDot: _propTypes.default.bool,
    separator: _propTypes.default.element,
    containerStyle: _propTypes.default.object,
    titleStyle: _propTypes.default.object,
    subtitleStyle: _propTypes.default.object,
    valueStyle: _propTypes.default.object,
    dotStyle: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    valueNumberOfLines: _propTypes.default.number,
    underlayColor: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ListItem.defaultProps = {
    title: '',
    subtitle: '',
    value: '',
    onPress: function onPress() {},
    onLongPress: function onLongPress() {},
    disabled: false,
    showSeparator: true,
    hideArrow: false,
    showDot: false,
    containerStyle: {},
    titleStyle: {},
    subtitleStyle: {},
    valueStyle: {},
    dotStyle: {},
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    leftIcon: null,
    useNewType: false,
    underlayColor: _resources.Styles.common.underlayColor
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width,
      height: THIN_HEIGHT,
      paddingHorizontal: PADDING,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    },
    left: {
      flex: 1
    },
    right: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'flex-start'
    },
    icon: {
      width: ICON_SIZE,
      height: ICON_SIZE
    },
    dot: {
      width: dotSize,
      height: dotSize
    },
    leftIcon: {
      resizeMode: 'contain',
      width: 56,
      height: 56,
      marginRight: 2
    }
  });

  var _default = ListItem;
  exports.default = _default;
},23029,[14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,23032,22453,22906,22426,22420,22423,23041,23035]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[11]);

  var TouchableView = function (_React$Component) {
    (0, _inherits2.default)(TouchableView, _React$Component);

    function TouchableView(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, TouchableView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TouchableView).call(this, props, context));
      _this.state = {
        inPress: false
      };
      return _this;
    }

    (0, _createClass2.default)(TouchableView, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({}, this.props, {
          delayLongPress: this.props.delayLongPress,
          delayPressIn: this.props.delayPressIn,
          delayPressOut: this.props.delayPressOut,
          disabled: this.props.disabled,
          onLongPress: this.props.onLongPress,
          onPress: this.props.onPress,
          onPressIn: function onPressIn() {
            _this2.setState({
              inPress: true
            });
          },
          onPressOut: function onPressOut() {
            _this2.setState({
              inPress: false
            });
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: [{
            backgroundColor: '#fff'
          }, this.props.viewStyle, this.state.inPress ? {
            backgroundColor: this.props.underlayColor
          } : {}]
        }, this.props.children));
      }
    }]);
    return TouchableView;
  }(_react.default.Component);

  exports.default = TouchableView;
  TouchableView.propTypes = {
    delayLongPress: _propTypes.default.number,
    delayPressIn: _propTypes.default.number,
    delayPressOut: _propTypes.default.number,
    disabled: _propTypes.default.bool,
    onLongPress: _propTypes.default.func,
    onPress: _propTypes.default.func,
    viewStyle: _reactNative.ViewPropTypes.style,
    underlayColor: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };
  TouchableView.defaultProps = {
    delayLongPress: 100,
    delayPressIn: 100,
    delayPressOut: 100,
    disabled: false,
    viewStyle: {},
    underlayColor: _resources.Styles.common.underlayColor
  };
},23032,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 30,
    "height": 30,
    "scales": [1],
    "hash": "522ed59eaa31441e8b11ae8bab872663",
    "name": "dot",
    "type": "png"
  });
},23035,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeSlider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _font = _$$_REQUIRE(_dependencyMap[13]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var HEIGHT = 104;
  var PADDING = 29;
  var THUMB_SIZE = 24;
  var THUMB_TOUCH_SIZE = {
    width: 50,
    height: 50
  };

  var ListItemWithSlider = function (_React$Component) {
    (0, _inherits2.default)(ListItemWithSlider, _React$Component);

    function ListItemWithSlider(props, context) {
      var _this$context$theme, _this$context$theme2, _this$context$theme3;

      var _this;

      (0, _classCallCheck2.default)(this, ListItemWithSlider);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItemWithSlider).call(this, props, context));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$sliderProps = _this.sliderProps,
            minimumValue = _this$sliderProps.minimumValue,
            maximumValue = _this$sliderProps.maximumValue,
            step = _this$sliderProps.step;
        var disabled = _this.props.disabled;

        if (disabled) {
          return;
        }

        var value = _this.state.value;
        var totalSteps = (maximumValue - minimumValue) / step;
        var everyStep = totalSteps >= 10 ? Math.floor(totalSteps / 10) : 1;
        var currentStep = (value - minimumValue) / step;
        var actionStep = currentStep;

        switch (actionName) {
          case 'increment':
            actionStep += everyStep;
            break;

          case 'decrement':
            actionStep -= everyStep;
            break;
        }

        var targetValue = Math.min(maximumValue, Math.max(minimumValue, actionStep * step + minimumValue));

        _this._onValueChange(targetValue, function () {
          _this._onSlidingComplete(targetValue);
        });
      };

      (0, _reportDecorator.referenceReport)('ListItemWithSlider');
      _this.sliderProps = (0, _extends2.default)({
        minimumValue: 0,
        maximumValue: 100,
        step: 1,
        value: 50
      }, _this.props.sliderProps);
      _this.sliderStyle = (0, _extends2.default)({
        minimumTrackTintColor: (_this$context$theme = _this.context.theme) == null ? undefined : _this$context$theme.colorPrimary,
        maximumTrackTintColor: (_this$context$theme2 = _this.context.theme) == null ? undefined : _this$context$theme2.colorBtnGrayNor,
        thumbTintColor: (_this$context$theme3 = _this.context.theme) == null ? undefined : _this$context$theme3.colorPrimary
      }, _this.props.sliderStyle);
      _this.state = {
        value: _this.sliderProps.value,
        valueStr: _this.format(_this.sliderProps.value)
      };
      return _this;
    }

    (0, _createClass2.default)(ListItemWithSlider, [{
      key: "renderGear",
      value: function renderGear() {
        var _this2 = this;

        var gear;

        if (this.props.useNewType) {
          gear = _react.default.createElement(_SlideGear.default, (0, _extends2.default)({
            value: this.state.value,
            containerStyle: {
              height: 26
            },
            showEndText: false,
            optionMin: this.sliderProps.minimumValue,
            optionMax: this.sliderProps.maximumValue,
            optionStep: this.sliderProps.step,
            onValueChange: function onValueChange(value) {
              return _this2._onValueChange(value);
            },
            onSlidingComplete: function onSlidingComplete(value) {
              return _this2._onSlidingComplete(value);
            },
            minimumTrackTintColor: this.sliderStyle.minimumTrackTintColor,
            maximumTrackTintColor: this.sliderStyle.maximumTrackTintColor,
            disabled: this.props.disabled
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })));
        } else {
          gear = _react.default.createElement(_reactNativeSlider.default, (0, _extends2.default)({
            disabled: this.props.disabled,
            style: [this.sliderStyle.style],
            maximumValue: this.sliderProps.maximumValue,
            minimumValue: this.sliderProps.minimumValue,
            step: this.sliderProps.step,
            minimumTrackTintColor: this.sliderStyle.minimumTrackTintColor,
            maximumTrackTintColor: this.sliderStyle.maximumTrackTintColor,
            thumbTintColor: this.sliderStyle.thumbTintColor,
            thumbTouchSize: THUMB_TOUCH_SIZE,
            trackStyle: [styles.trackStyle, this.sliderStyle.trackStyle],
            thumbStyle: [styles.thumbStyle, this.sliderStyle.thumbStyle],
            value: this.state.value,
            onValueChange: function onValueChange(value) {
              return _this2._onValueChange(value);
            },
            onSlidingComplete: function onSlidingComplete(value) {
              return _this2._onSlidingComplete(value);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })));
        }

        return gear;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme4, _this$context$theme5, _this$context$theme6;

        var extraStyle = {
          maxWidth: (width - 58) * 0.7
        };

        if (this.props.containerStyle.width) {
          extraStyle = {
            maxWidth: (this.props.containerStyle.width - 58) * 0.7
          };
        }

        var adaptedFontStyle = {};

        if (this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined
          };
        }

        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        var valueLine = this.props.valueNumberOfLines == undefined ? 1 : this.props.valueNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        if (valueLine < 0) valueLine = 0;
        var titleHeight, subtitleHeight;

        if (this.props.titleStyle) {
          titleHeight = this.props.titleStyle.fontSize ? this.props.titleStyle.fontSize + 6 : 22;
        }

        if (this.props.subtitleStyle) {
          subtitleHeight = this.props.valueStyle.fontSize ? this.props.valueStyle.fontSize + 5 : 18;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [{
            backgroundColor: '#fff'
          }, {
            opacity: this.props.disabled ? 0.3 : 1
          }]
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, {
            backgroundColor: (_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorWhite
          }, this.props.containerStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: !!this.props.disabled
          },
          accessibilityValue: {
            min: this.sliderProps.minimumValue,
            max: this.sliderProps.maximumValue,
            now: this.state.value
          }
        }), {
          accessibilityActions: [{
            name: 'increment'
          }, {
            name: 'decrement'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.up]
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: titleLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.title, {
            lineHeight: titleHeight,
            color: (_this$context$theme5 = this.context.theme) == null ? undefined : _this$context$theme5.colorBlack
          }, _font.FontPrimary, this.props.titleStyle, extraStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title), _react.default.createElement(_reactNative.View, {
          style: [styles.separatorCol, this.props.unlimitedHeightEnable ? {
            height: '80%'
          } : {}]
        }), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.value, {
            color: (_this$context$theme6 = this.context.theme) == null ? undefined : _this$context$theme6.colorGrayLighter,
            lineHeight: subtitleHeight
          }, _font.FontSecondary, this.props.valueStyle, adaptedFontStyle],
          numberOfLines: valueLine,
          allowFontScaling: this.props.allowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle || this.state.valueStr)), _react.default.createElement(_reactNative.View, {
          style: styles.down
        }, this.renderGear())), this.renderSeparator());
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator() {
        if (!this.props.showSeparator) return null;
        return this.props.separator || _react.default.createElement(_Separator.default, null);
      }
    }, {
      key: "format",
      value: function format(val) {
        if (this.props.showWithPercent) {
          var _this$sliderProps2 = this.sliderProps,
              min = _this$sliderProps2.minimumValue,
              max = _this$sliderProps2.maximumValue;
          return Math.round((val - min) / (max - min) * 100) + " %";
        }

        return val + " " + this.props.unit;
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var _this3 = this;

        if (nextProps.sliderProps === undefined) return;

        if (typeof nextProps.sliderProps.value !== 'number') {
          return;
        }

        var _nextProps$sliderProp = nextProps.sliderProps,
            value = _nextProps$sliderProp.value,
            minimumValue = _nextProps$sliderProp.minimumValue,
            maximumValue = _nextProps$sliderProp.maximumValue;

        if (minimumValue !== undefined && minimumValue !== this.sliderProps.minimumValue) {
          this.sliderProps.minimumValue = minimumValue;
        }

        if (maximumValue !== undefined && maximumValue !== this.sliderProps.maximumValue) {
          this.sliderProps.maximumValue = maximumValue;
        }

        if (value !== this.state.value) {
          setTimeout(function () {
            _this3.setState({
              value: value,
              valueStr: _this3.format(value)
            });
          }, 0);
        }
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange(value) {
        this.setState({
          value: value,
          valueStr: this.format(value)
        });

        if (this.props.onValueChange) {
          this.props.onValueChange(value);
        }
      }
    }, {
      key: "_onSlidingComplete",
      value: function _onSlidingComplete(value) {
        if (this.props.onSlidingComplete) {
          this.props.onSlidingComplete(value);
        }
      }
    }]);
    return ListItemWithSlider;
  }(_react.default.Component);

  ListItemWithSlider.propTypes = {
    title: _propTypes.default.string.isRequired,
    subtitle: _propTypes.default.string,
    sliderProps: _propTypes.default.object,
    showWithPercent: _propTypes.default.bool,
    unit: _propTypes.default.string,
    sliderStyle: _propTypes.default.object,
    onValueChange: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func.isRequired,
    disabled: _propTypes.default.bool,
    containerStyle: _propTypes.default.object,
    titleStyle: _propTypes.default.object,
    valueStyle: _propTypes.default.object,
    showSeparator: _propTypes.default.bool,
    separator: _propTypes.default.element,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    valueNumberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    useNewType: _propTypes.default.bool
  };
  ListItemWithSlider.defaultProps = {
    title: '',
    subtitle: '',
    showWithPercent: true,
    unit: '',
    disabled: false,
    containerStyle: {},
    titleStyle: {},
    valueStyle: {},
    showSeparator: false,
    onSlidingComplete: function onSlidingComplete() {},
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    useNewType: false
  };
  ListItemWithSlider.contextType = _configProvider.ConfigContext;

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width,
      backgroundColor: '#fff',
      paddingHorizontal: PADDING,
      height: HEIGHT
    },
    up: {
      marginTop: 13,
      flexDirection: 'row',
      alignItems: 'center'
    },
    down: {
      flex: 1,
      justifyContent: 'center',
      marginTop: 15,
      marginBottom: 21
    },
    separatorCol: {
      height: 14,
      width: 0.5,
      marginHorizontal: 8,
      backgroundColor: 'rgba(0,0,0,0.2)'
    },
    value: {
      fontSize: 13,
      color: '#999999',
      lineHeight: 16,
      flex: 1
    },
    trackStyle: {
      height: 2,
      borderRadius: 1
    },
    thumbStyle: {
      width: THUMB_SIZE,
      height: THUMB_SIZE,
      borderRadius: 12
    }
  });

  var _default = ListItemWithSlider;
  exports.default = _default;
},23038,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13687,22453,22906,23041,22426,22897,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.FontDefault = exports.FontSecondary = exports.FontPrimary = exports.FontDsDigital = exports.FontLantingProNormal = exports.FontLantingProMedium = exports.FontLantingLight = exports.FontKmedium = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var FontKmedium = 'KMedium';
  exports.FontKmedium = FontKmedium;
  var FontLantingLight = 'MI-LANTING--GBK1-Light';
  exports.FontLantingLight = FontLantingLight;
  var FontLantingProMedium = 'MILanPro_MEDIUM--GB1-4';
  exports.FontLantingProMedium = FontLantingProMedium;
  var FontLantingProNormal = 'MILanPro_NORMAL--GB1-4';
  exports.FontLantingProNormal = FontLantingProNormal;
  var FontDsDigital = 'DS-Digital';
  exports.FontDsDigital = FontDsDigital;
  var FontPrimary = {
    fontFamily: 'sans-serif-medium',
    fontWeight: _reactNative.Platform.OS === 'ios' ? '500' : 'normal'
  };
  exports.FontPrimary = FontPrimary;
  var FontSecondary = {
    fontFamily: 'sans-serif',
    fontWeight: 'normal'
  };
  exports.FontSecondary = FontSecondary;
  var FontDefault = _reactNative.Platform.OS === 'ios' ? null : FontKmedium;
  exports.FontDefault = FontDefault;
},23041,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _TouchableView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _popButton = _$$_REQUIRE(_dependencyMap[14]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _Images = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[17]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[19]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[20]);

  var _font = _$$_REQUIRE(_dependencyMap[21]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var THIN_HEIGHT = 58;
  var PADDING = 29;
  var checkboxSize = 22;
  var Line_Height = 24;
  var TYPE = {
    SWITCH: 'switch',
    CHOICE: 'choice',
    BUTTON: 'button',
    SORT: 'sort'
  };
  Object.freeze(TYPE);

  var ListItemWithSwitch = function (_React$Component) {
    (0, _inherits2.default)(ListItemWithSwitch, _React$Component);

    function ListItemWithSwitch(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ListItemWithSwitch);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItemWithSwitch).call(this, props, context));
      _this.colorForVerticalLine = new _DynamicColor.default('#E5E5E5', 'rgba(255,255,255,0.15)');

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onValueChange = _this$props.onValueChange,
            onPress = _this$props.onPress,
            value = _this$props.value;

        if (disabled) {
          return;
        }

        if (actionName === 'activate' && typeof onValueChange === 'function') {
          onValueChange(!value);
        }

        if (actionName === 'activate' && typeof onPress === 'function') {
          onPress();
        }
      };

      (0, _reportDecorator.referenceReport)('ListItemWithSwitch');
      return _this;
    }

    (0, _createClass2.default)(ListItemWithSwitch, [{
      key: "renderRight",
      value: function renderRight() {
        var _this2 = this,
            _this$props$buttonOpt,
            _this$props$buttonOpt2,
            _this$props$buttonOpt3,
            _this$props$buttonOpt4,
            _this$props$buttonOpt5,
            _this$props$buttonOpt6,
            _this$props$choiceOpt,
            _this$props$choiceOpt2,
            _this$props$choiceOpt3;

        var rightView;
        var rightSortView;

        if (this.props.type === TYPE.SORT) {
          var _this$props$sortOptio, _this$props$sortOptio2;

          var source = this.context.colorScheme === 'dark' ? _Images.default.sort.dark.normal : _Images.default.sort.light.normal;
          rightSortView = _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            disabled: this.props.disabled,
            activeOpacity: 0.8,
            style: {
              width: 35,
              height: 40,
              justifyContent: 'center',
              alignItems: 'flex-end'
            },
            onPress: (_this$props$sortOptio = this.props.sortOption) == null ? undefined : _this$props$sortOptio.onPress,
            onLongPress: (_this$props$sortOptio2 = this.props.sortOption) == null ? undefined : _this$props$sortOptio2.onLongPress
          }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityLabel: this.props.accessibilityLabel || this.props.title,
            accessibilityHint: this.props.accessibilityHint
          })), _react.default.createElement(_reactNative.Image, {
            source: source
          }));
        }

        switch (this.props.type) {
          case TYPE.SWITCH:
            rightView = _react.default.createElement(_Switch.default, (0, _extends2.default)({
              style: this.props.switchStyle,
              value: this.props.value,
              disabled: this.props.disabled,
              tintColor: this.props.tintColor,
              onTintColor: this.props.onTintColor,
              onValueChange: function onValueChange(value) {
                return _this2._onValueChange(value);
              }
            }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityLabel: this.props.accessibilityLabel || this.props.title,
              accessibilityHint: this.props.accessibilityHint
            })));
            break;

          case TYPE.BUTTON:
            rightView = _react.default.createElement(_popButton.PopButton, (0, _extends2.default)({
              sizeLevel: 'small',
              title: (_this$props$buttonOpt = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt.title,
              disabled: this.props.disabled,
              backgroundColor: (_this$props$buttonOpt2 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt2.backgroundColor,
              titleStyle: (_this$props$buttonOpt3 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt3.titleStyle,
              titleColor: (_this$props$buttonOpt4 = this.props.buttonOption) == null ? undefined : (_this$props$buttonOpt5 = _this$props$buttonOpt4.titleStyle) == null ? undefined : _this$props$buttonOpt5.color,
              allowFontScaling: this.props.allowFontScaling,
              onPress: (_this$props$buttonOpt6 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt6.onPress
            }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityLabel: this.props.accessibilityLabel || this.props.title,
              accessibilityHint: this.props.accessibilityHint
            })));
            break;

          case TYPE.CHOICE:
            rightView = _react.default.createElement(_Checkbox.default, (0, _extends2.default)({
              style: {
                width: checkboxSize,
                height: checkboxSize,
                borderRadius: 11
              },
              disabled: this.props.disabled,
              checked: (_this$props$choiceOpt = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt.checked,
              checkedColor: (_this$props$choiceOpt2 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt2.checkedColor,
              onValueChange: (_this$props$choiceOpt3 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt3.onValueChange
            }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityLabel: this.props.accessibilityLabel || this.props.title,
              accessibilityHint: this.props.accessibilityHint
            })));
            break;

          case TYPE.SORT:
            rightView = rightSortView;
            break;

          default:
            rightView = null;
            break;
        }

        return rightView;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme, _this$context$theme2, _this$context$theme3, _this$context$theme4;

        var extraContainerStyle = {};

        if (this.props.subtitle) {
          extraContainerStyle = {
            paddingVertical: this.props.leftIcon ? 8 : 15,
            height: 77
          };
        }

        var leftIconContainerStyle = {};

        if (this.props.leftIcon) {
          leftIconContainerStyle = {
            height: 70,
            paddingLeft: 22
          };
        }

        var extraStyle = {};

        if (this.props.valueText) {
          extraStyle.maxWidth = (width - 58) * 0.4;

          if (this.props.containerStyle.width) {
            extraStyle.maxWidth = (this.props.containerStyle.width - 58) * 0.4;
          }
        }

        var adaptedFontStyle = {};
        var adaptedContainerStyle = {};

        if (this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined
          };
          adaptedContainerStyle = {
            height: undefined,
            paddingVertical: 10
          };
        }

        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 2 : this.props.subtitleNumberOfLines;
        var valueLine = this.props.valueNumberOfLines == undefined ? 1 : this.props.valueNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        if (subtitleLine < 0) subtitleLine = 0;
        if (valueLine < 0) valueLine = 0;
        var titleHeight, subtitleHeight;

        if (this.props.titleStyle) {
          titleHeight = this.props.titleStyle.fontSize ? this.props.titleStyle.fontSize + 6 : 22;
        }

        if (this.props.subtitleStyle) {
          subtitleHeight = this.props.subtitleStyle.fontSize ? this.props.titleStyle.fontSize + 5 : 18;
        }

        var showVerticalLine = false;

        if (this.props.type == TYPE.SWITCH && this.props.showVerticalLine) {
          showVerticalLine = true;
        }

        return _react.default.createElement(_reactNative.View, {
          style: {
            opacity: this.props.disabled ? 0.3 : 1
          }
        }, _react.default.createElement(_TouchableView.default, (0, _extends2.default)({
          disabled: !this.props.onPress ? true : this.props.disabled,
          underlayColor: _resources.Styles.common.underlayColor,
          onPress: this.props.onPress,
          viewStyle: [styles.container, {
            backgroundColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorWhite
          }, this.props.containerStyle, leftIconContainerStyle, extraContainerStyle, adaptedContainerStyle]
        }, this.props.onPress ? (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }) : (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.switch,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: this.props.disabled,
            checked: this.props.value
          }
        }), {
          accessibilityActions: this.props.onPress ? [] : [{
            name: 'activate'
          }],
          onAccessibilityAction: this.props.onPress ? null : this.onAccessibilityAction
        }), this.props.leftIcon ? _react.default.createElement(_reactNative.Image, {
          style: styles.leftIcon,
          source: this.props.leftIcon
        }) : null, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: styles.left
        }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: this.props.disabled
          }
        }), {
          accessibilityActions: !this.props.onPress ? [] : [{
            name: 'activate'
          }],
          onAccessibilityAction: !this.props.onPress ? null : this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.up]
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: titleLine,
          allowFontScaling: this.props.allowFontScaling,
          ellipsizeMode: "tail",
          style: [_resources.Styles.common.title, _font.FontPrimary, {
            lineHeight: titleHeight,
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorBlack
          }, extraStyle, this.props.titleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title), this.props.valueText ? _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            flex: 1
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.separatorCol]
        }), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: valueLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.subtitle, {
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayLighter
          }, _font.FontSecondary, this.props.valueTextStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.valueText)) : null), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: subtitleLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.subtitle, {
            lineHeight: subtitleHeight,
            color: (_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorGrayLighter
          }, this.props.subtitleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle) : null), _react.default.createElement(_reactNative.View, {
          style: [styles.right, showVerticalLine ? {
            flexDirection: 'row',
            justifyContent: 'space-between'
          } : {}]
        }, showVerticalLine ? _react.default.createElement(_reactNative.View, {
          style: [styles.verticalLine, {
            backgroundColor: this.colorForVerticalLine[this.context.colorScheme]
          }]
        }) : null, this.renderRight())), this.renderSeparator());
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator() {
        if (!this.props.showSeparator || this.props.useNewType) return null;
        return this.props.separator || _react.default.createElement(_Separator.default, {
          style: {
            marginLeft: _resources.Styles.common.padding
          }
        });
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange(value) {
        if (this.props.onValueChange) {
          this.props.onValueChange(value);
        }
      }
    }]);
    return ListItemWithSwitch;
  }(_react.default.Component);

  ListItemWithSwitch.contextType = _configProvider.ConfigContext;
  ListItemWithSwitch.propTypes = {
    type: _propTypes.default.oneOf([TYPE.SWITCH, TYPE.BUTTON, TYPE.CHOICE, TYPE.SORT]),
    title: _propTypes.default.string.isRequired,
    subtitle: _propTypes.default.string,
    valueText: _propTypes.default.string,
    value: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    onValueChange: _propTypes.default.func.isRequired,
    showSeparator: _propTypes.default.bool,
    separator: _propTypes.default.element,
    containerStyle: _propTypes.default.object,
    titleStyle: _propTypes.default.object,
    subtitleStyle: _propTypes.default.object,
    valueTextStyle: _propTypes.default.object,
    switchStyle: _propTypes.default.object,
    tintColor: _propTypes.default.string,
    onTintColor: _propTypes.default.string,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    valueNumberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    buttonOption: _propTypes.default.object,
    choiceOption: _propTypes.default.object,
    sortOption: _propTypes.default.object,
    showVerticalLine: _propTypes.default.bool
  };
  ListItemWithSwitch.defaultProps = {
    type: TYPE.SWITCH,
    title: '',
    subtitle: '',
    valueText: '',
    value: false,
    disabled: false,
    showSeparator: true,
    containerStyle: {},
    titleStyle: {},
    subtitleStyle: {},
    valueTextStyle: {},
    switchStyle: {},
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    leftIcon: null,
    useNewType: false,
    showVerticalLine: false
  };
  ListItemWithSwitch.TYPE = TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width,
      height: THIN_HEIGHT,
      paddingHorizontal: PADDING,
      flexDirection: 'row',
      alignItems: 'center'
    },
    left: {
      flex: 3
    },
    right: {
      flex: 1,
      alignItems: 'flex-end',
      maxWidth: 80
    },
    up: {
      flexDirection: 'row',
      alignItems: 'center',
      paddingVertical: 2
    },
    separatorCol: {
      height: 14,
      width: 0.5,
      marginHorizontal: 5,
      backgroundColor: 'rgba(0,0,0,0.2)'
    },
    leftIcon: {
      resizeMode: 'contain',
      width: 56,
      height: 56,
      marginRight: 2
    },
    verticalLine: {
      height: Line_Height,
      width: 0.5,
      marginLeft: 15,
      marginRight: 5
    }
  });

  var _default = ListItemWithSwitch;
  exports.default = _default;
},23044,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,23032,22906,22450,23212,22786,22456,22426,22435,22420,22423,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "FadeSlide", {
    enumerable: true,
    get: function get() {
      return _FadeSlide.default;
    }
  });

  var _FadeSlide = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23047,[14305,23050]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[10]);

  var FadeSlide = function (_Component) {
    (0, _inherits2.default)(FadeSlide, _Component);

    function FadeSlide(props) {
      var _this;

      (0, _classCallCheck2.default)(this, FadeSlide);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(FadeSlide).call(this, props));

      _this.changeStatus = function (heightTo, opacityTo) {
        var _this$state = _this.state,
            height = _this$state.height,
            opacity = _this$state.opacity;

        _reactNative.Animated.parallel([_reactNative.Animated.timing(height, {
          toValue: heightTo,
          duration: 250
        }), _reactNative.Animated.timing(opacity, {
          toValue: opacityTo,
          duration: 250
        })]).start();
      };

      (0, _reportDecorator.referenceReport)('FadeSlide');
      var isShown = props.isShown,
          childrenHeight = props.childrenHeight;
      var blockOpacity = isShown ? 1 : 0;
      var blockHeight = isShown ? childrenHeight : 0;
      _this.state = {
        height: new _reactNative.Animated.Value(blockHeight),
        opacity: new _reactNative.Animated.Value(blockOpacity)
      };
      return _this;
    }

    (0, _createClass2.default)(FadeSlide, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var isShown = nextProps.isShown,
            childrenHeight = nextProps.childrenHeight;

        if (isShown) {
          this.changeStatus(childrenHeight, 1);
        } else {
          this.changeStatus(0, 0);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$state2 = this.state,
            opacity = _this$state2.opacity,
            height = _this$state2.height;
        return _react.default.createElement(_reactNative.Animated.View, {
          style: {
            opacity: opacity,
            height: height
          }
        }, this.props.children);
      }
    }]);
    return FadeSlide;
  }(_react.Component);

  FadeSlide.defaultProps = {
    isShown: false,
    childrenHeight: 0
  };
  FadeSlide.propTypes = {
    isShown: _propTypes.default.bool,
    childrenHeight: _propTypes.default.number
  };
  var _default = FadeSlide;
  exports.default = _default;
},23050,[14308,14305,14320,14323,14371,14377,14386,10318,10297,10033,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "BlankPage", {
    enumerable: true,
    get: function get() {
      return _BlankPage.default;
    }
  });

  var _BlankPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23053,[14305,23056]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _font = _$$_REQUIRE(_dependencyMap[15]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var ratio = 0.2;
  var imageMarginTop = height * ratio;
  var imageContainerSize = 138;
  var imageWidth = 84;
  var imageHeight = 114;

  var imageSource = _$$_REQUIRE(_dependencyMap[16]);

  var padding = 40;
  var safeBottom = 20;
  var TYPE = {
    BUTTON: 'button',
    UNDERLINE: 'underline'
  };
  Object.freeze(TYPE);

  var BlankPage = function (_React$Component) {
    (0, _inherits2.default)(BlankPage, _React$Component);

    function BlankPage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, BlankPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BlankPage).call(this, props));
      (0, _reportDecorator.referenceReport)('BlankPage');
      return _this;
    }

    (0, _createClass2.default)(BlankPage, [{
      key: "renderCenter",
      value: function renderCenter() {
        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: styles.center
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: styles.imageContainer
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel || this.props.message,
          accessibilityHint: this.props.accessibilityHint
        })), _react.default.createElement(_reactNative.Image, {
          source: this.props.icon,
          style: [styles.image, this.props.iconStyle],
          resizeMode: "contain"
        })), _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: [styles.message, {
            color: theme.colorGrayLighter
          }]
        }, this.props.message), this.props.desc ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: 3,
          style: [styles.desc, {
            marginTop: 10,
            color: theme.colorGrayLighter
          }]
        }, this.props.desc || '') : null);
      }
    }, {
      key: "renderBottom",
      value: function renderBottom() {
        var _this2 = this;

        var theme = this.context.theme;

        if (this.props.type === TYPE.UNDERLINE) {
          var _this$props$underline = this.props.underline,
              _text = _this$props$underline.text,
              _callback = _this$props$underline.callback,
              _textStyle = _this$props$underline.textStyle;
          return _react.default.createElement(_reactNative.View, {
            style: [styles.bottom, {
              marginBottom: 40
            }]
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            onPress: function onPress() {
              return _this2.onPress(_callback);
            },
            numberOfLines: 1,
            style: [styles.desc, {
              textDecorationLine: 'underline',
              color: theme.colorPrimary,
              textAlign: 'center'
            }, _textStyle]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
            accessibilityLabel: _text,
            accessibilityHint: this.props.accessibilityHint
          })), _text));
        }

        var _this$props$button = this.props.button,
            text = _this$props$button.text,
            callback = _this$props$button.callback,
            buttonStyle = _this$props$button.buttonStyle,
            textStyle = _this$props$button.textStyle;
        return _react.default.createElement(_reactNative.View, {
          style: styles.bottom
        }, this.props.extraInfo ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: 2,
          style: [styles.desc, {
            color: theme.colorGrayLighter
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.extraInfo,
          accessibilityHint: this.props.accessibilityHint
        })), this.props.extraInfo) : null, _react.default.createElement(_reactNativeUiKitten.RkButton, (0, _extends2.default)({
          style: [styles.buttonContainer, {
            backgroundColor: theme.colorPrimary
          }, buttonStyle],
          onPress: function onPress() {
            return _this2.onPress(callback);
          },
          activeOpacity: 0.8
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: text,
          accessibilityHint: this.props.accessibilityHint
        })), _react.default.createElement(_reactNative.Text, {
          style: [styles.buttonText, _font.FontPrimary, textStyle]
        }, text)));
      }
    }, {
      key: "onPress",
      value: function onPress(callback) {
        if (typeof callback === 'function') {
          callback();
        } else {}
      }
    }, {
      key: "render",
      value: function render() {
        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.container, theme.colorBackground]
        }, this.renderCenter(), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), this.renderBottom());
      }
    }]);
    return BlankPage;
  }(_react.default.Component);

  BlankPage.contextType = _configProvider.ConfigContext;
  BlankPage.propTypes = {
    type: _propTypes.default.oneOf([TYPE.BUTTON, TYPE.UNDERLINE]),
    icon: _propTypes.default.any,
    underline: _propTypes.default.object,
    button: _propTypes.default.object,
    iconStyle: _reactNative.ViewPropTypes.style,
    message: _propTypes.default.string.isRequired,
    desc: _propTypes.default.string,
    extraInfo: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };
  BlankPage.defaultProps = {
    type: TYPE.BUTTON,
    underline: {},
    button: {},
    icon: imageSource
  };
  BlankPage.TYPE = TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      width: width
    },
    center: {
      marginTop: imageMarginTop,
      width: width,
      alignItems: 'center'
    },
    imageContainer: {
      width: imageContainerSize,
      height: imageContainerSize,
      alignItems: 'center'
    },
    image: {
      width: imageWidth,
      height: imageHeight,
      marginTop: 5
    },
    message: {
      width: width,
      fontSize: 15,
      color: '#999',
      textAlign: 'center'
    },
    desc: {
      width: width,
      paddingHorizontal: padding,
      fontSize: 13,
      color: '#999',
      lineHeight: 18
    },
    bottom: {
      width: width,
      marginBottom: safeBottom
    },
    buttonContainer: {
      width: width - _resources.Styles.common.padding * 2,
      height: 42,
      borderRadius: 5,
      marginTop: 21,
      marginHorizontal: _resources.Styles.common.padding
    },
    buttonText: {
      flex: 1,
      fontSize: 13,
      fontWeight: 'bold',
      textAlign: 'center',
      color: '#ffffff',
      lineHeight: 18
    }
  });

  var _default = BlankPage;
  exports.default = _default;
},23056,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,11251,22453,22420,22423,22426,23041,23059]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 84,
    "height": 114,
    "scales": [2, 3],
    "hash": "9fa4438dffed7ccf84357debec9c8e5d",
    "name": "blank_page_icon",
    "type": "png"
  });
},23059,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "TouchableView", {
    enumerable: true,
    get: function get() {
      return _TouchableView.default;
    }
  });

  var _TouchableView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23062,[14305,23032]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _colors = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var BigNumber = function (_PureComponent) {
    (0, _inherits2.default)(BigNumber, _PureComponent);

    function BigNumber() {
      (0, _classCallCheck2.default)(this, BigNumber);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BigNumber).apply(this, arguments));
    }

    (0, _createClass2.default)(BigNumber, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            title = _this$props.title,
            number = _this$props.number,
            themeColor = _this$props.themeColor;

        if (title === undefined || number === undefined) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint
        })), _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title), _react.default.createElement(_reactNative.Text, {
          style: [Styles.number, themeColor ? {
            color: themeColor
          } : null]
        }, number));
      }
    }]);
    return BigNumber;
  }(_react.PureComponent);

  exports.default = BigNumber;
  BigNumber.propTypes = {
    title: _propTypes.default.string,
    number: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
    themeColor: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: 'rgba(0, 0, 0, 0.9)'
    },
    number: {
      fontSize: (0, _sizes.adjustSize)(196),
      fontFamily: _fonts.FontKmedium,
      color: _colors.ColorGreen
    }
  });
},23065,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,23074,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.adjustSize = adjustSize;
  exports.window = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      windowWidth = _Dimensions$get.width,
      windowHeight = _Dimensions$get.height;

  var window = {
    get width() {
      return windowWidth;
    },

    get height() {
      if (_reactNative.Platform.OS === 'android') {
        return windowHeight / windowWidth > 1.8 ? windowHeight + _reactNative.NativeModules.StatusBarManager.HEIGHT : windowHeight;
      }

      return windowHeight;
    }

  };
  exports.window = window;

  function adjustSize(n) {
    return n / 1080 * window.width;
  }
},23068,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.FontDefault = exports.FontDsDigital = exports.FontLantingLight = exports.FontKmedium = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var FontKmedium = 'KMedium';
  exports.FontKmedium = FontKmedium;
  var FontLantingLight = 'MI-LANTING--GBK1-Light';
  exports.FontLantingLight = FontLantingLight;
  var FontDsDigital = 'DS-Digital';
  exports.FontDsDigital = FontDsDigital;
  var FontDefault = _reactNative.Platform.OS === 'ios' ? undefined : FontKmedium;
  exports.FontDefault = FontDefault;
},23071,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.fixHex = fixHex;
  exports.transformHexToDigtal = transformHexToDigtal;
  exports.transformDigtalToHex = transformDigtalToHex;
  exports.colorGetterforRange = colorGetterforRange;
  exports.ColorRed = exports.ColorOrange = exports.ColorGreen = undefined;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var ColorGreen = '#00B7A2';
  exports.ColorGreen = ColorGreen;
  var ColorOrange = '#FFA943';
  exports.ColorOrange = ColorOrange;
  var ColorRed = '#FC675F';
  exports.ColorRed = ColorRed;

  function fixHex(hex) {
    hex = hex.replace(/[^0-9a-fA-F]/, '').split('');
    var length = hex.length;

    if (length < 6) {
      hex = [hex[0] || 0, hex[0] || 0, hex[1] || 0, hex[1] || 0, hex[2] || 0, hex[2] || 0];
    }

    hex = "#" + hex.slice(0, 6).join('');
    return hex.toUpperCase();
  }

  function transformHexToDigtal(hex) {
    hex = fixHex(hex).slice(1);
    return parseInt(hex, 16);
  }

  function transformDigtalToHex(digtal) {
    return ("#" + ("000000" + digtal.toString(16)).slice(-6)).toUpperCase();
  }

  function splitRgb(color) {
    color = fixHex(color);

    var _color$slice$split = color.slice(1).split(''),
        _color$slice$split2 = (0, _slicedToArray2.default)(_color$slice$split, 6),
        r1 = _color$slice$split2[0],
        r2 = _color$slice$split2[1],
        g1 = _color$slice$split2[2],
        g2 = _color$slice$split2[3],
        b1 = _color$slice$split2[4],
        b2 = _color$slice$split2[5];

    var r = parseInt(r1 + r2, 16);
    var g = parseInt(g1 + g2, 16);
    var b = parseInt(b1 + b2, 16);
    return {
      r: r,
      g: g,
      b: b
    };
  }

  function colorGetterforRange(range) {
    var colors = formatColors(range);

    function formatColors(range) {
      var colors = [];

      for (var k in range) {
        if (range.hasOwnProperty(k)) {
          var p = parseFloat(k);
          var c = fixHex(range[k]);

          if (typeof p === 'number' && p >= 0 && p <= 1) {
            colors.push([p, c]);
          }
        }
      }

      colors.sort(function (a, b) {
        return a[0] > b[0] ? 1 : -1;
      });

      if (colors.length < 1) {
        colors = [[0, '#000000'], [1, '#ffffff']];
      }

      if (colors[0][0] > 0) {
        colors[0] = [0, colors[0][1]];
      }

      if (colors[colors.length - 1][0] < 1) {
        colors[colors.length - 1] = [1, colors[colors.length - 1][1]];
      }

      return colors;
    }

    function getColorFromPercent(p) {
      p = Math.max(0, Math.min(1, p / 100));
      var s1 = null;
      var s2 = null;

      for (var i = 1, l = colors.length; i < l; i++) {
        var c = colors[i];
        var cp = colors[i - 1];

        if (cp[0] <= p && c[0] >= p) {
          s1 = cp;
          s2 = c;
          break;
        }
      }

      if (s1[0] >= s2[0]) {
        return s1[1];
      }

      var p0 = (p - s1[0]) / (s2[0] - s1[0]);

      var _splitRgb = splitRgb(s1[1]),
          r1 = _splitRgb.r,
          g1 = _splitRgb.g,
          b1 = _splitRgb.b;

      var _splitRgb2 = splitRgb(s2[1]),
          r2 = _splitRgb2.r,
          g2 = _splitRgb2.g,
          b2 = _splitRgb2.b;

      var r = parseInt(p0 * r2 + (1 - p0) * r1, 10);
      var g = parseInt(p0 * g2 + (1 - p0) * g1, 10);
      var b = parseInt(p0 * b2 + (1 - p0) * b1, 10);
      return "#" + ("00" + r.toString(16)).slice(-2) + ("00" + g.toString(16)).slice(-2) + ("00" + b.toString(16)).slice(-2);
    }

    function getPercentFromColor(color) {
      var _splitRgb3 = splitRgb(color),
          r = _splitRgb3.r,
          g = _splitRgb3.g,
          b = _splitRgb3.b;

      for (var i = 0, l = 1000; i < l; i++) {
        var c = getColorFromPercent(i / 10);

        var _splitRgb4 = splitRgb(c),
            rc = _splitRgb4.r,
            gc = _splitRgb4.g,
            bc = _splitRgb4.b;

        if (Math.abs(r - rc) <= 5 && Math.abs(g - gc) <= 5 && Math.abs(b - bc) <= 5) {
          return i / 10;
        }
      }

      return 50;
    }

    function getPercentFromColorV2(color) {
      var _splitRgb5 = splitRgb(color),
          r = _splitRgb5.r,
          g = _splitRgb5.g,
          b = _splitRgb5.b;

      for (var i = 0, l = 1000; i < l; i++) {
        var c = getColorFromPercent(i / 10);

        var _splitRgb6 = splitRgb(c),
            rc = _splitRgb6.r,
            gc = _splitRgb6.g,
            bc = _splitRgb6.b;

        if (Math.abs(r - rc) <= 5 && Math.abs(g - gc) <= 5 && Math.abs(b - bc) <= 5) {
          return i / 10;
        }
      }

      return -1;
    }

    return {
      getColorFromPercent: getColorFromPercent,
      getPercentFromColor: getPercentFromColor,
      getPercentFromColorV2: getPercentFromColorV2
    };
  }
},23074,[14305,14347]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _Icons = _$$_REQUIRE(_dependencyMap[11]);

  var _Colors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _switch = _$$_REQUIRE(_dependencyMap[13]);

  var _containerWithShadowAndSeparator = _$$_REQUIRE(_dependencyMap[14]);

  var _sizes = _$$_REQUIRE(_dependencyMap[15]);

  var _font = _$$_REQUIRE(_dependencyMap[16]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[17]);

  var CardButton = function (_PureComponent) {
    (0, _inherits2.default)(CardButton, _PureComponent);

    function CardButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, CardButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CardButton)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onPress = function () {
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onPress = _this$props.onPress;

        if (typeof onPress === 'function' && !disabled) {
          onPress();
        }
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props2 = _this.props,
            disabled = _this$props2.disabled,
            onSwitch = _this$props2.onSwitch,
            switchOn = _this$props2.switchOn,
            onPress = _this$props2.onPress;

        if (disabled || !onSwitch && !onPress || actionName !== 'activate') {
          return;
        }

        if (onSwitch) {
          onSwitch(!switchOn);
          return;
        }

        onPress();
      };

      return _this;
    }

    (0, _createClass2.default)(CardButton, [{
      key: "render",
      value: function render() {
        var _this$props3 = this.props,
            containerStyle = _this$props3.containerStyle,
            themeColor = _this$props3.themeColor,
            themeBackgroundColor = _this$props3.themeBackgroundColor,
            underlayColor = _this$props3.underlayColor,
            hasShadow = _this$props3.hasShadow,
            iconContainerStyle = _this$props3.iconContainerStyle,
            iconStyle = _this$props3.iconStyle,
            icon = _this$props3.icon,
            iconText = _this$props3.iconText,
            title = _this$props3.title,
            subtitle = _this$props3.subtitle,
            onSwitch = _this$props3.onSwitch,
            switchOn = _this$props3.switchOn,
            disabled = _this$props3.disabled,
            onPress = _this$props3.onPress,
            rightText = _this$props3.rightText,
            rightArrow = _this$props3.rightArrow,
            offColor = _this$props3.offColor,
            iconDisabled = _this$props3.iconDisabled,
            invisible = _this$props3.invisible;
        var opacity = disabled ? 0.3 : 1;
        var finalIcon = icon;

        if (disabled && iconDisabled) {
          finalIcon = iconDisabled;
        }

        if (!finalIcon && !iconText && !title && !subtitle && !onSwitch) {
          return null;
        }

        var Wrap = hasShadow ? _containerWithShadowAndSeparator.ContainerWithShadowAndSeparator : _react.Fragment;
        return _react.default.createElement(Wrap, {
          invisible: invisible
        }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: [Styles.container, containerStyle, themeBackgroundColor ? {
            backgroundColor: themeBackgroundColor
          } : null],
          underlayColor: disabled || !onPress ? themeBackgroundColor || '#fff' : underlayColor,
          onPress: this.onPress
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: onSwitch ? _accessibilityHelper.AccessibilityRoles.switch : _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: disabled,
            checked: onSwitch && !!switchOn
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_react.Fragment, null, finalIcon || iconText ? _react.default.createElement(_reactNative.View, {
          style: [Styles.iconContainer, iconContainerStyle, {
            backgroundColor: (!switchOn && offColor ? offColor : themeColor) || _Colors.default.green,
            opacity: opacity
          }]
        }, finalIcon ? _react.default.createElement(_reactNative.Image, {
          style: [Styles.icon, iconStyle],
          source: finalIcon
        }) : _react.default.createElement(_reactNative.Text, {
          style: Styles.iconText
        }, iconText)) : null, _react.default.createElement(_reactNative.View, {
          style: [Styles.titleContainer, {
            opacity: opacity
          }]
        }, title ? _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.subtitle
        }, subtitle) : null), onSwitch ? _react.default.createElement(_reactNative.View, {
          style: Styles.switchContainer
        }, _react.default.createElement(_switch.Switch, (0, _extends2.default)({
          value: switchOn,
          onValueChange: onSwitch,
          onTintColor: themeColor || _Colors.default.green,
          disabled: disabled
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })))) : rightText || rightArrow ? _react.default.createElement(_react.Fragment, null, rightText ? _react.default.createElement(_reactNative.Text, {
          style: Styles.rightText
        }, rightText) : null, rightArrow ? _react.default.createElement(_reactNative.Image, {
          style: [Styles.rightArrow, {
            opacity: opacity
          }],
          source: _Icons.Icons.rightArrow
        }) : null) : null)));
      }
    }]);
    return CardButton;
  }(_react.PureComponent);

  exports.default = CardButton;
  CardButton.defaultProps = {
    underlayColor: 'rgba(0, 0, 0, 0.05)',
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      height: (0, _sizes.adjustSize)(240),
      paddingHorizontal: (0, _sizes.adjustSize)(60),
      flexDirection: 'row',
      alignItems: 'center',
      backgroundColor: '#fff'
    },
    iconContainer: {
      marginRight: (0, _sizes.adjustSize)(39),
      width: (0, _sizes.adjustSize)(120),
      height: (0, _sizes.adjustSize)(120),
      borderRadius: (0, _sizes.adjustSize)(60),
      justifyContent: 'center',
      alignItems: 'center'
    },
    icon: {
      width: (0, _sizes.adjustSize)(72),
      height: (0, _sizes.adjustSize)(72),
      resizeMode: 'contain'
    },
    iconText: (0, _objectSpread2.default)({
      fontSize: (0, _sizes.adjustSize)(60),
      color: '#fff'
    }, _font.FontSecondary),
    titleContainer: {
      flex: 1
    },
    title: (0, _objectSpread2.default)({
      fontSize: (0, _sizes.adjustSize)(45),
      color: '#000'
    }, _font.FontPrimary),
    subtitle: (0, _objectSpread2.default)({
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(42),
      color: '#999',
      marginTop: (0, _sizes.adjustSize)(12)
    }, _font.FontSecondary),
    switchContainer: {
      marginLeft: (0, _sizes.adjustSize)(30)
    },
    rightText: (0, _objectSpread2.default)({
      fontSize: (0, _sizes.adjustSize)(36),
      color: '#999',
      marginLeft: (0, _sizes.adjustSize)(30)
    }, _font.FontSecondary),
    rightArrow: {
      height: (0, _sizes.adjustSize)(72),
      width: (0, _sizes.adjustSize)(72),
      resizeMode: 'contain'
    }
  });
},23077,[14308,14305,14314,14344,14320,14323,14371,14377,14386,10297,10033,23080,23083,22447,23086,23068,23041,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Icons = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var Icons = function Icons() {
    (0, _classCallCheck2.default)(this, Icons);
  };

  exports.Icons = Icons;
  Icons.rightArrow = _$$_REQUIRE(_dependencyMap[2]);
  Icons.inputDelete = _$$_REQUIRE(_dependencyMap[3]);
  Icons.inputEyeSecure = _$$_REQUIRE(_dependencyMap[4]);
  Icons.inputEye = _$$_REQUIRE(_dependencyMap[5]);
  Icons.loadingPicLight = _$$_REQUIRE(_dependencyMap[6]);
  Icons.loadingPicDark = _$$_REQUIRE(_dependencyMap[7]);
},23080,[14305,14320,22459,23224,23227,23230,23233,23236]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var Colors = function Colors() {
    (0, _classCallCheck2.default)(this, Colors);
  };

  Colors.green = '#00B7A2';
  Colors.range = '#FFA943';
  Colors.red = '#FC675F';
  var _default = Colors;
  exports.default = _default;
},23083,[14305,14320]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "ContainerWithShadowAndSeparator", {
    enumerable: true,
    get: function get() {
      return _ContainerWithShadowAndSeparator.default;
    }
  });

  var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23086,[14305,23089]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNativeShadow = _$$_REQUIRE(_dependencyMap[10]);

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _GapWrap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var ContainerWithShadowAndSeparator = function (_Component) {
    (0, _inherits2.default)(ContainerWithShadowAndSeparator, _Component);

    function ContainerWithShadowAndSeparator() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, ContainerWithShadowAndSeparator);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ContainerWithShadowAndSeparator)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        width: (0, _sizes.adjustSize)(1020),
        height: (0, _sizes.adjustSize)(240)
      };

      _this.onLayout = function (e) {
        var _e$nativeEvent$layout = e.nativeEvent.layout,
            width = _e$nativeEvent$layout.width,
            height = _e$nativeEvent$layout.height;

        _this.setState({
          width: width,
          height: height
        });
      };

      return _this;
    }

    (0, _createClass2.default)(ContainerWithShadowAndSeparator, [{
      key: "getContents",
      value: function getContents() {
        var _this$props = this.props,
            children = _this$props.children,
            separatorStyle = _this$props.separatorStyle,
            horizontal = _this$props.horizontal;

        if (!children) {
          return null;
        }

        return (Array.isArray(children) ? children : [children]).filter(function (child) {
          return !!child;
        }).map(function (child, index) {
          return _react.default.createElement(_GapWrap.default, {
            key: "" + index,
            hasSeparator: index > 0,
            horizontal: horizontal,
            separatorStyle: separatorStyle
          }, child);
        });
      }
    }, {
      key: "render",
      value: function render() {
        var contents = this.getContents();
        var _this$props2 = this.props,
            containerStyle = _this$props2.containerStyle,
            horizontal = _this$props2.horizontal,
            invisible = _this$props2.invisible;
        var _this$state = this.state,
            width = _this$state.width,
            height = _this$state.height;

        if (!contents) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [Styles.box, {
            height: height <= 1 ? 0 : height + (0, _sizes.adjustSize)(9),
            overflow: 'visible',
            opacity: invisible ? 0 : 1
          }]
        }, _react.default.createElement(_reactNativeShadow.BoxShadow, {
          setting: {
            width: width,
            height: height,
            color: '#000',
            border: (0, _sizes.adjustSize)(9),
            radius: (0, _sizes.adjustSize)(30),
            opacity: 0.015,
            x: 0,
            y: (0, _sizes.adjustSize)(9),
            style: {
              position: 'absolute',
              top: 0,
              left: 0
            }
          }
        }), _react.default.createElement(_reactNative.View, {
          style: [Styles.container, horizontal ? Styles.containerHorizontal : Styles.containerVertical, containerStyle],
          onLayout: this.onLayout
        }, contents));
      }
    }]);
    return ContainerWithShadowAndSeparator;
  }(_react.Component);

  exports.default = ContainerWithShadowAndSeparator;
  ContainerWithShadowAndSeparator.propTypes = {
    containerStyle: _propTypes.default.any,
    separatorStyle: _propTypes.default.any,
    horizontal: _propTypes.default.bool,
    invisible: _propTypes.default.bool
  };
  ContainerWithShadowAndSeparator.defaultProps = {
    containerStyle: {},
    separatorStyle: {},
    horizontal: false,
    invisible: false
  };

  var Styles = _reactNative.StyleSheet.create({
    box: {
      position: 'relative'
    },
    container: {
      borderRadius: (0, _sizes.adjustSize)(33),
      overflow: 'hidden',
      backgroundColor: '#fff'
    },
    containerHorizontal: {
      flexDirection: 'row'
    }
  });
},23089,[14308,14305,14320,14323,14371,14377,14386,10297,10033,10318,13699,23068,23092]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _separator = _$$_REQUIRE(_dependencyMap[9]);

  var _sizes = _$$_REQUIRE(_dependencyMap[10]);

  var GapWrap = function (_Component) {
    (0, _inherits2.default)(GapWrap, _Component);

    function GapWrap() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, GapWrap);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(GapWrap)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        shown: true
      };

      _this.onLayout = function (e) {
        _this.setState({
          shown: e.nativeEvent.layout.height > (0, _sizes.adjustSize)(3.1)
        });
      };

      return _this;
    }

    (0, _createClass2.default)(GapWrap, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            hasSeparator = _this$props.hasSeparator,
            separatorStyle = _this$props.separatorStyle,
            children = _this$props.children;
        var shown = this.state.shown;

        if (!children) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          onLayout: this.onLayout
        }, hasSeparator && shown ? _react.default.createElement(_separator.Separator, {
          style: [{
            height: Math.min((0, _sizes.adjustSize)(3), 1),
            opacity: 0.35,
            marginHorizontal: (0, _sizes.adjustSize)(60)
          }, separatorStyle]
        }) : null, children);
      }
    }]);
    return GapWrap;
  }(_react.Component);

  exports.default = GapWrap;
},23092,[14308,14305,14320,14323,14371,14377,14386,10297,10033,22903,23068]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _colors = _$$_REQUIRE(_dependencyMap[11]);

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fns = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _styles = _$$_REQUIRE(_dependencyMap[15]);

  var Size72 = (0, _sizes.adjustSize)(72);
  var Size120 = (0, _sizes.adjustSize)(120);
  var Size168 = (0, _sizes.adjustSize)(168);
  var Size150 = (0, _sizes.adjustSize)(150);
  var Size138 = (0, _sizes.adjustSize)(138);

  var CircleButton = function (_Component) {
    (0, _inherits2.default)(CircleButton, _Component);

    function CircleButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, CircleButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CircleButton)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        isPressing: false
      };

      _this.onPress = function () {
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onPress = _this$props.onPress;

        if (disabled) {
          return;
        }

        onPress();
      };

      _this.onPressIn = function () {
        var showHighlight = _this.props.showHighlight;

        if (showHighlight) {
          _this.setState({
            isPressing: true
          });
        }
      };

      _this.onPressOut = function () {
        _this.setState({
          isPressing: false
        });
      };

      return _this;
    }

    (0, _createClass2.default)(CircleButton, [{
      key: "renderTouchableList",
      value: function renderTouchableList() {
        var _this$props2 = this.props,
            sizeLevel = _this$props2.sizeLevel,
            selected = _this$props2.selected,
            title = _this$props2.title,
            icon = _this$props2.icon,
            iconSelected = _this$props2.iconSelected,
            iconText = _this$props2.iconText,
            themeColor = _this$props2.themeColor,
            disabled = _this$props2.disabled,
            horizontal = _this$props2.horizontal,
            offColor = _this$props2.offColor,
            titleIsTouchable = _this$props2.titleIsTouchable;
        var isPressing = this.state.isPressing;
        var containerSizeStyle = _styles.Styles[['container0', 'container1', 'container2', 'container3'][sizeLevel || 0]] || _styles.Styles.container0;
        var iconContainerSizeStyle = _styles.Styles[['iconContainer0', 'iconContainer1', 'iconContainer2', 'iconContainer3'][sizeLevel || 0]] || _styles.Styles.iconContainer0;
        selected = selected || isPressing;

        if (titleIsTouchable) {
          return _react.default.createElement(_reactNative.View, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.container, containerSizeStyle, horizontal ? _styles.Styles.containerHorizontal : null, disabled ? {
              opacity: 0.3
            } : null])
          }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            disabled: disabled,
            style: [horizontal ? _styles.Styles.containerHorizontal : null, _styles.Styles.listContainer],
            activeOpacity: 1,
            onPress: this.onPress,
            onPressIn: this.onPressIn,
            onPressOut: this.onPressOut
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityLabel: this.props.accessibilityLabel || title || iconText,
            accessibilityHint: this.props.accessibilityHint,
            accessibilityState: {
              disabled: disabled,
              checked: selected,
              selected: selected
            }
          })), _react.default.createElement(_reactNative.View, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.iconContainer, iconContainerSizeStyle, selected ? {
              backgroundColor: themeColor || _colors.ColorGreen
            } : offColor ? {
              backgroundColor: offColor
            } : null, disabled ? _styles.Styles.iconContainerDisabled : null, disabled && selected ? _styles.Styles.iconContainerDisabledSelected : null])
          }, icon ? _react.default.createElement(_reactNative.Image, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.icon]),
            source: selected && !disabled ? iconSelected || iconSelected : icon
          }) : _react.default.createElement(_reactNative.Text, {
            style: [_styles.Styles.iconText, selected && !disabled ? _styles.Styles.iconTextSelected : null]
          }, iconText)), title ? _react.default.createElement(_reactNative.Text, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.title, selected ? {
              color: themeColor || _colors.ColorGreen
            } : null, disabled ? _styles.Styles.titleDisabled : null, horizontal ? _styles.Styles.titleHorizontal : null]),
            numberOfLines: horizontal ? 2 : 1
          }, title) : null));
        } else {
          return _react.default.createElement(_reactNative.View, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.container, containerSizeStyle, horizontal ? _styles.Styles.containerHorizontal : null, disabled ? {
              opacity: 0.3
            } : null])
          }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            disabled: disabled,
            style: _reactNative.StyleSheet.flatten([_styles.Styles.iconContainer, iconContainerSizeStyle, selected ? {
              backgroundColor: themeColor || _colors.ColorGreen
            } : offColor ? {
              backgroundColor: offColor
            } : null, disabled ? _styles.Styles.iconContainerDisabled : null, disabled && selected ? _styles.Styles.iconContainerDisabledSelected : null]),
            activeOpacity: 1,
            onPress: this.onPress,
            onPressIn: this.onPressIn,
            onPressOut: this.onPressOut
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityLabel: this.props.accessibilityLabel || title || iconText,
            accessibilityHint: this.props.accessibilityHint,
            accessibilityState: {
              disabled: disabled,
              checked: selected,
              selected: selected
            }
          })), icon ? _react.default.createElement(_reactNative.Image, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.icon]),
            source: selected && !disabled ? iconSelected || iconSelected : icon
          }) : _react.default.createElement(_reactNative.Text, {
            style: [_styles.Styles.iconText, selected && !disabled ? _styles.Styles.iconTextSelected : null]
          }, iconText)), title ? _react.default.createElement(_reactNative.Text, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.title, selected ? {
              color: themeColor || _colors.ColorGreen
            } : null, disabled ? _styles.Styles.titleDisabled : null, horizontal ? _styles.Styles.titleHorizontal : null]),
            numberOfLines: horizontal ? 2 : 1
          }, title) : null);
        }
      }
    }, {
      key: "render",
      value: function render() {
        return this.renderTouchableList();
      }
    }]);
    return CircleButton;
  }(_react.Component);

  exports.default = CircleButton;
  CircleButton.propTypes = {
    sizeLevel: _propTypes.default.oneOf([0, 1, 2, 3]),
    themeColor: _propTypes.default.any,
    offColor: _propTypes.default.any,
    disabled: _propTypes.default.bool,
    showHighlight: _propTypes.default.bool,
    selected: _propTypes.default.bool,
    horizontal: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    title: _propTypes.default.string,
    titleIsTouchable: _propTypes.default.bool,
    icon: _propTypes.default.any,
    iconSelected: _propTypes.default.any,
    iconText: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  CircleButton.defaultProps = {
    sizeLevel: 0,
    themeColor: '',
    offColor: '#F7F7F7',
    disabled: false,
    showHighlight: false,
    selected: false,
    horizontal: false,
    onPress: _fns.NOOP,
    title: '',
    titleIsTouchable: false,
    icon: null,
    iconSelected: null,
    iconText: ''
  };
},23095,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23074,23068,23137,22420,23098]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Styles = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _sizes = _$$_REQUIRE(_dependencyMap[1]);

  var _fonts = _$$_REQUIRE(_dependencyMap[2]);

  var Styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center'
    },
    container0: {
      width: (0, _sizes.adjustSize)(120)
    },
    container1: {
      width: (0, _sizes.adjustSize)(168)
    },
    container2: {
      width: (0, _sizes.adjustSize)(150)
    },
    container3: {
      width: (0, _sizes.adjustSize)(138)
    },
    containerHorizontal: {
      width: 'auto',
      flex: 1,
      flexDirection: 'row'
    },
    iconContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    iconContainer0: {
      width: (0, _sizes.adjustSize)(120),
      height: (0, _sizes.adjustSize)(120),
      borderRadius: (0, _sizes.adjustSize)(120) / 2
    },
    iconContainer1: {
      width: (0, _sizes.adjustSize)(168),
      height: (0, _sizes.adjustSize)(168),
      borderRadius: (0, _sizes.adjustSize)(168) / 2
    },
    iconContainer2: {
      width: (0, _sizes.adjustSize)(150),
      height: (0, _sizes.adjustSize)(150),
      borderRadius: (0, _sizes.adjustSize)(150) / 2
    },
    iconContainer3: {
      width: (0, _sizes.adjustSize)(138),
      height: (0, _sizes.adjustSize)(138),
      borderRadius: (0, _sizes.adjustSize)(138) / 2
    },
    iconContainerDisabled: {
      backgroundColor: 'rgba(197, 201, 203, 0.3)'
    },
    iconContainerDisabledSelected: {
      backgroundColor: 'rgba(197, 201, 203, 0.3)'
    },
    icon: {
      resizeMode: 'contain',
      width: (0, _sizes.adjustSize)(72),
      height: (0, _sizes.adjustSize)(72)
    },
    iconText: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      color: '#000'
    },
    iconTextSelected: {
      color: '#FFF'
    },
    title: {
      marginTop: (0, _sizes.adjustSize)(27),
      textAlign: 'center',
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: '#999999'
    },
    title3: {
      display: 'none'
    },
    titleDisabled: {
      color: '#999999'
    },
    titleHorizontal: {
      marginTop: 0,
      flex: 1,
      textAlign: 'left',
      marginLeft: (0, _sizes.adjustSize)(39)
    },
    listContainer: {
      alignItems: 'center'
    }
  });

  exports.Styles = Styles;
},23098,[10033,23068,23071]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var GapWrap = function (_PureComponent) {
    (0, _inherits2.default)(GapWrap, _PureComponent);

    function GapWrap() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, GapWrap);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(GapWrap)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        shown: true
      };

      _this.onLayout = function (e) {
        _this.setState({
          shown: e.nativeEvent.layout.height > 0
        });
      };

      return _this;
    }

    (0, _createClass2.default)(GapWrap, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            gap = _this$props.gap,
            horizontal = _this$props.horizontal,
            children = _this$props.children;
        var shown = this.state.shown;

        if (!children) {
          return null;
        }

        var gapSize = shown ? gap : 0;
        return _react.default.createElement(_react.Fragment, null, _react.default.createElement(_reactNative.View, {
          style: horizontal ? {
            flex: 1
          } : null,
          onLayout: this.onLayout
        }, children), _react.default.createElement(_reactNative.View, {
          style: [StylesGap.gap, (0, _defineProperty2.default)({}, horizontal ? 'width' : 'height', gapSize)]
        }));
      }
    }]);
    return GapWrap;
  }(_react.PureComponent);

  var ContainerWithGap = function (_PureComponent2) {
    (0, _inherits2.default)(ContainerWithGap, _PureComponent2);

    function ContainerWithGap() {
      (0, _classCallCheck2.default)(this, ContainerWithGap);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(ContainerWithGap).apply(this, arguments));
    }

    (0, _createClass2.default)(ContainerWithGap, [{
      key: "getContents",
      value: function getContents() {
        var _this$props2 = this.props,
            children = _this$props2.children,
            horizontal = _this$props2.horizontal,
            gap = _this$props2.gap;

        if (!children) {
          return null;
        }

        var length = children.length;
        var lengtEdge = length - 1;
        return children.map(function (child, index) {
          return _react.default.createElement(GapWrap, {
            key: index,
            gap: index < lengtEdge ? gap : 0,
            horizontal: horizontal
          }, child);
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props3 = this.props,
            containerStyle = _this$props3.containerStyle,
            horizontal = _this$props3.horizontal,
            outerGap = _this$props3.outerGap,
            _this$props3$useChild = _this$props3.useChildGap,
            useChildGap = _this$props3$useChild === undefined ? true : _this$props3$useChild,
            children = _this$props3.children;
        var contents = useChildGap ? this.getContents() : children;

        if (!contents) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [Styles.container, (0, _defineProperty2.default)({}, horizontal ? 'marginVertical' : 'marginHorizontal', outerGap), horizontal ? {
            flexDirection: 'row'
          } : null, containerStyle]
        }, contents);
      }
    }]);
    return ContainerWithGap;
  }(_react.PureComponent);

  exports.default = ContainerWithGap;
  ContainerWithGap.propTypes = {
    containerStyle: _propTypes.default.any,
    horizontal: _propTypes.default.bool,
    gap: _propTypes.default.number,
    outerGap: _propTypes.default.number
  };
  ContainerWithGap.defaultProps = {
    containerStyle: {},
    horizontal: false,
    gap: 7,
    outerGap: 0
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {}
  });

  var StylesGap = _reactNative.StyleSheet.create({
    gap: {
      alignSelf: 'stretch'
    }
  });
},23101,[14308,14305,14317,14320,14323,14371,14377,14386,10297,10033,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _colors = _$$_REQUIRE(_dependencyMap[11]);

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fonts = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var Surface = _reactNative.ART.Surface,
      Group = _reactNative.ART.Group,
      Shape = _reactNative.ART.Shape,
      Path = _reactNative.ART.Path;
  var PI = Math.PI;

  var DeviceWithInfo = function (_PureComponent) {
    (0, _inherits2.default)(DeviceWithInfo, _PureComponent);

    function DeviceWithInfo() {
      (0, _classCallCheck2.default)(this, DeviceWithInfo);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DeviceWithInfo).apply(this, arguments));
    }

    (0, _createClass2.default)(DeviceWithInfo, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            icon = _this$props.icon,
            title = _this$props.title,
            subtitle = _this$props.subtitle,
            holdPlace = _this$props.holdPlace,
            progress = _this$props.progress,
            themeColor = _this$props.themeColor;

        if (!progress) {
          progress = 0;
        }

        progress = Math.min(1, Math.max(0, progress));
        var r = (0, _sizes.adjustSize)(324);
        var rDot = (0, _sizes.adjustSize)(7.5);
        var startX = r + Math.cos(-0.5 * PI) * r;
        var startY = r + Math.sin(-0.5 * PI) * r;
        var halfX = r + Math.cos(0.5 * PI) * r;
        var halfY = r + Math.sin(0.5 * PI) * r;
        var endX = r + Math.cos(progress * 2 * PI - 0.5 * PI) * r;
        var endY = r + Math.sin(progress * 2 * PI - 0.5 * PI) * r;
        var PathCircleBase = new Path().moveTo(startX, startY).arcTo(halfX, halfY, r, r, false, false).arcTo(startX, startY, r, r, false, false);
        var PathCircle = new Path().moveTo(startX, startY);

        if (progress >= 0.5) {
          PathCircle.arcTo(halfX, halfY, r, r, false, false);
        }

        PathCircle.arcTo(endX, endY, r, r, false, false);
        var PathDot = new Path().moveTo(endX, endY - rDot).arcTo(endX, endY + rDot, rDot, rDot, false, false).arcTo(endX, endY - rDot, rDot, rDot, false, false);
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityLabel: this.props.accessibilityLabel || progress
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.deviceContainer
        }, _react.default.createElement(Surface, {
          width: r * 2,
          height: r * 2,
          style: {
            position: 'absolute',
            left: 0,
            top: (0, _sizes.adjustSize)(7.5)
          }
        }, _react.default.createElement(Shape, {
          d: PathCircleBase,
          strokeWidth: 1,
          stroke: themeColor ? ((0, _colors.fixHex)(themeColor) + "33").slice(0, 9) : '#33ABF233'
        }), progress > 0 ? _react.default.createElement(Group, null, _react.default.createElement(Shape, {
          d: PathCircle,
          strokeWidth: 1,
          stroke: themeColor || '#33ABF2'
        }), _react.default.createElement(Shape, {
          d: PathDot,
          strokeWidth: 1,
          fill: themeColor || '#33ABF2'
        })) : null), _react.default.createElement(_reactNative.View, {
          style: [Styles.deviceInner, themeColor ? {
            backgroundColor: themeColor
          } : null]
        }, _react.default.createElement(_reactNative.Image, {
          style: Styles.deviceIcon,
          source: icon
        }))), _react.default.createElement(_reactNative.View, {
          style: Styles.infoContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.infoTitle
        }, title || (holdPlace ? ' ' : '')), _react.default.createElement(_reactNative.Text, {
          style: Styles.infoSubtitle
        }, subtitle || (holdPlace ? ' ' : ''))));
      }
    }]);
    return DeviceWithInfo;
  }(_react.PureComponent);

  exports.default = DeviceWithInfo;
  DeviceWithInfo.propTypes = {
    icon: _propTypes.default.any,
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    holdPlace: _propTypes.default.bool,
    progress: _propTypes.default.number,
    themeColor: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center',
      marginTop: (0, _sizes.adjustSize)(300)
    },
    deviceContainer: {
      width: (0, _sizes.adjustSize)(663),
      height: (0, _sizes.adjustSize)(663),
      justifyContent: 'center',
      alignItems: 'center'
    },
    deviceInner: {
      width: (0, _sizes.adjustSize)(558),
      height: (0, _sizes.adjustSize)(558),
      borderRadius: (0, _sizes.adjustSize)(279),
      justifyContent: 'center',
      alignItems: 'center',
      backgroundColor: '#43C2FA'
    },
    deviceIcon: {
      width: (0, _sizes.adjustSize)(264),
      height: (0, _sizes.adjustSize)(228)
    },
    infoContainer: {
      marginTop: (0, _sizes.adjustSize)(33),
      alignItems: 'center'
    },
    infoTitle: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(45),
      lineHeight: (0, _sizes.adjustSize)(60),
      color: '#000'
    },
    infoSubtitle: {
      marginTop: (0, _sizes.adjustSize)(9),
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#B2B2B2'
    }
  });
},23104,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23074,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeSvg = _$$_REQUIRE(_dependencyMap[10]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var Size708 = (0, _sizes.adjustSize)(708);

  function getCircleCenter(type, index) {
    switch (type) {
      case 0:
      case 1:
        return {
          x: 0,
          y: 0
        };

      case 2:
        return {
          x: [3, -2, -1, 2][index] || 0,
          y: 0
        };

      case 3:
        return {
          x: [2, -2, -1, 0][index] || 0,
          y: 0
        };

      case -1:
      default:
        return {
          x: 0,
          y: 0
        };
    }
  }

  function getCircleColors(type, index) {
    switch (type) {
      case 0:
        return [['#475154'], ['#475154', '#4A5867'], ['#2D3947'], ['#F7F7F7']][index] || '#475154';

      case 1:
        return [['#00AEFF'], ['#00AEFF', '#5BCCFF'], ['#007DFF'], ['#F7F7F7']][index] || '#00AEFF';

      case 2:
        return [['#00B7AF'], ['#00B7AF', '#0BCEB7'], ['#05CFC6'], ['#F7F7F7']][index] || '#00B7AF';

      case 3:
        return [['#7538F7'], ['#7538F7', '#B88CFF'], ['#7231FB'], ['#F7F7F7']][index] || '#7538F7';

      case 4:
        return [['#5067F9'], ['#5067F9', '#589BFB'], ['#2240F7'], ['#F7F7F7']][index] || '#5067F9';

      default:
        return [['#FFFFFF'], ['#FFFFFF', '#FFFFFF'], ['#FFFFFF'], ['#F7F7F7']][index] || '#FFFFFF';
    }
  }

  function getCircleOpacity(type, index) {
    switch (type) {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
        return [0.2, 1, 1, 1][index] || 1;

      case -1:
      default:
        return [0.2, 0.6, 1, 1][index] || 1;
    }
  }

  var Circle = function (_Component) {
    (0, _inherits2.default)(Circle, _Component);

    function Circle() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Circle);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Circle)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        rotation: new _reactNative.Animated.Value(0)
      };
      _this.inited = false;
      _this.currentValue = 0;
      return _this;
    }

    (0, _createClass2.default)(Circle, [{
      key: "rotate",
      value: function rotate(_ref) {
        var disabled = _ref.disabled,
            _ref$duration = _ref.duration,
            duration = _ref$duration === undefined ? 4000 : _ref$duration;

        if (!this.inited) {
          return;
        }

        if (disabled) {
          this.stopRotation();
          return;
        }

        this.startRotation(duration);
      }
    }, {
      key: "startRotation",
      value: function startRotation() {
        var _this2 = this;

        var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 4000;
        var isReset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        this.stopRotation();
        this.aniRotation = _reactNative.Animated.timing(this.state.rotation, {
          toValue: 1,
          duration: isReset ? duration : duration * (1 - this.currentValue || 0.01),
          easing: _reactNative.Easing.inOut(_reactNative.Easing.linear)
        }).start(function (_ref2) {
          var finished = _ref2.finished;

          if (finished) {
            if (_this2.props.disabled) {
              return;
            }

            _this2.state.rotation.setValue(0);

            _this2.startRotation(_this2.props.duration, true);
          }
        });
      }
    }, {
      key: "stopRotation",
      value: function stopRotation() {
        var _this3 = this;

        this.state.rotation.stopAnimation(function (v) {
          _this3.currentValue = v;
        });
        this.aniRotation = null;
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        if (nextProps && nextProps.disabled) {
          this.stopRotation();
          return;
        }

        if (nextProps && this.props && nextProps.duration === this.props.duration && nextProps.disabled === this.props.disabled) {
          return;
        }

        this.rotate(nextProps || {});
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.inited = true;
        this.rotate(this.props);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.stopRotation();
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            color = _this$props.color,
            opacity = _this$props.opacity,
            rx = _this$props.rx,
            ry = _this$props.ry,
            _this$props$center = _this$props.center,
            x = _this$props$center.x,
            y = _this$props$center.y,
            counterClock = _this$props.counterClock,
            _this$props$centerInn = _this$props.centerInner,
            ix = _this$props$centerInn.x,
            iy = _this$props$centerInn.y,
            rxInner = _this$props.rxInner,
            ryInner = _this$props.ryInner;
        var rotation = this.state.rotation;
        var r = rotation.interpolate({
          inputRange: [0, 1],
          outputRange: !counterClock ? ['0deg', '360deg'] : ['360deg', '0deg']
        });
        var d = "\n      M" + (118 + x - rx) + " " + (118 + y) + "\n      A" + rx + " " + ry + " 0 0 1 " + (118 + x + rx) + " " + (118 + y) + "\n      L" + (118 + ix + rxInner) + " " + (118 + iy) + "\n      A" + rxInner + " " + ryInner + " 0 0 0 " + (118 + ix - rxInner) + " " + (118 + iy) + "\n      A" + rxInner + " " + ryInner + " 0 0 0 " + (118 + ix + rxInner) + " " + (118 + iy) + "\n      L" + (118 + x + rx) + " " + (118 + y) + "\n      A" + rx + " " + ry + " 0 0 1 " + (118 + x - rx) + " " + (118 + y) + "\n    ";
        return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({
          style: [Styles.circleWrap, {
            transform: [{
              rotate: r
            }]
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNativeSvg.Svg, {
          width: Size708,
          height: Size708,
          viewBox: "0 0 236 236"
        }, _react.default.createElement(_reactNativeSvg.Defs, null, _react.default.createElement(_reactNativeSvg.LinearGradient, {
          id: "circleGradient",
          x1: "0",
          y1: "0",
          x2: "236",
          y2: "236"
        }, _react.default.createElement(_reactNativeSvg.Stop, {
          offset: "0",
          stopColor: color[1] || color[0],
          stopOpacity: opacity
        }), _react.default.createElement(_reactNativeSvg.Stop, {
          offset: "1",
          stopColor: color[0],
          stopOpacity: opacity
        }))), _react.default.createElement(_reactNativeSvg.Path, {
          rotation: 0,
          origin: (118, 118),
          d: d,
          fill: "url(#circleGradient)"
        })));
      }
    }]);
    return Circle;
  }(_react.Component);

  Circle.propTypes = {
    disabled: _propTypes.default.bool,
    duration: _propTypes.default.number,
    color: _propTypes.default.string,
    opacity: _propTypes.default.number,
    rx: _propTypes.default.number,
    ry: _propTypes.default.number,
    center: _propTypes.default.shape({
      x: _propTypes.default.number,
      y: _propTypes.default.number
    }),
    centerInner: _propTypes.default.shape({
      x: _propTypes.default.number,
      y: _propTypes.default.number
    }),
    counterClock: _propTypes.default.bool,
    rxInner: _propTypes.default.number,
    ryInner: _propTypes.default.number
  };

  var Fan = function (_Component2) {
    (0, _inherits2.default)(Fan, _Component2);

    function Fan() {
      (0, _classCallCheck2.default)(this, Fan);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Fan).apply(this, arguments));
    }

    (0, _createClass2.default)(Fan, [{
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            disabled = _this$props2.disabled,
            type = _this$props2.type,
            speedLevel = _this$props2.speedLevel,
            noDisableColor = _this$props2.noDisableColor;
        var centerInner = getCircleCenter(type, 3);
        var rxInner = 91;
        var ryInner = 91;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.image,
          accessibilityLabel: this.props.accessibilityLabel || speedLevel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: disabled
          }
        })), _react.default.createElement(Circle, {
          disabled: disabled,
          initRotation: -15,
          counterClock: true,
          opacity: getCircleOpacity(disabled ? 0 : type, 0),
          color: getCircleColors(disabled && !noDisableColor ? 0 : type, 0),
          duration: 6000 / speedLevel,
          type: type,
          rx: 113,
          ry: 107,
          center: getCircleCenter(type, 0),
          centerInner: centerInner,
          rxInner: rxInner,
          ryInner: ryInner
        }), _react.default.createElement(Circle, {
          disabled: disabled,
          initRotation: 0,
          counterClock: false,
          opacity: getCircleOpacity(disabled ? 0 : type, 1),
          color: getCircleColors(disabled && !noDisableColor ? 0 : type, 1),
          duration: 5200 / speedLevel,
          type: type,
          rx: 105,
          ry: 105,
          center: getCircleCenter(type, 1),
          centerInner: centerInner,
          rxInner: rxInner,
          ryInner: ryInner
        }), _react.default.createElement(Circle, {
          disabled: disabled,
          initRotation: 45,
          counterClock: false,
          opacity: getCircleOpacity(disabled ? 0 : type, 2),
          color: getCircleColors(disabled && !noDisableColor ? 0 : type, 2),
          duration: 4000 / speedLevel,
          type: type,
          rx: 102,
          ry: 95,
          center: getCircleCenter(type, 2),
          centerInner: centerInner,
          rxInner: rxInner,
          ryInner: ryInner
        }));
      }
    }]);
    return Fan;
  }(_react.Component);

  exports.default = Fan;
  Fan.propTypes = {
    disabled: _propTypes.default.bool,
    noDisableColor: _propTypes.default.bool,
    speedLevel: _propTypes.default.number,
    type: _propTypes.default.oneOf([-1, 0, 1, 2, 3, 4]),
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Fan.defaultProps = {
    disabled: false,
    noDisableColor: false,
    speedLevel: 1,
    type: -1
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginVertical: (0, _sizes.adjustSize)(165),
      width: Size708,
      height: Size708,
      alignSelf: 'center'
    },
    circleWrap: {
      position: 'absolute',
      width: '100%',
      height: '100%',
      left: 0,
      top: 0
    }
  });
},23107,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,11485,10318,23068,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Background = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _reactNativeLinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var Source0 = _$$_REQUIRE(_dependencyMap[15]);

  var Source1 = _$$_REQUIRE(_dependencyMap[16]);

  var Source2 = _$$_REQUIRE(_dependencyMap[17]);

  var Source3 = _$$_REQUIRE(_dependencyMap[18]);

  var Source4 = _$$_REQUIRE(_dependencyMap[19]);

  var Source5 = _$$_REQUIRE(_dependencyMap[20]);

  var Source6 = _$$_REQUIRE(_dependencyMap[21]);

  function getRandomBetween(min, max) {
    return Math.random() * (max - min) + min;
  }

  var HeaterHeader = function (_PureComponent) {
    (0, _inherits2.default)(HeaterHeader, _PureComponent);

    function HeaterHeader() {
      (0, _classCallCheck2.default)(this, HeaterHeader);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(HeaterHeader).apply(this, arguments));
    }

    (0, _createClass2.default)(HeaterHeader, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            title = _this$props.title,
            showLargeTitle = _this$props.showLargeTitle,
            subtitle = _this$props.subtitle,
            showSubtitle = _this$props.showSubtitle,
            unit = _this$props.unit,
            disabled = _this$props.disabled,
            themeColor = _this$props.themeColor;

        if (!title) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.container1
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.titlesContainerHeightHolder
        }, ' '), unit ? _react.default.createElement(_reactNative.Text, {
          style: Styles.unitTransparent
        }, "" + unit) : null, _react.default.createElement(_reactNative.View, {
          style: Styles.titlesContainer
        }, showLargeTitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.titleLarge
        }, title) : null, showLargeTitle ? null : _react.default.createElement(_reactNative.Text, {
          style: Styles.titleSmall
        }, title), showSubtitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.subtitle
        }, subtitle) : null), unit ? _react.default.createElement(_reactNative.Text, {
          style: Styles.unit
        }, "" + unit) : null, _react.default.createElement(_reactNative.Text, {
          style: Styles.titlesContainerHeightHolder
        }, ' ')));
      }
    }]);
    return HeaterHeader;
  }(_react.PureComponent);

  exports.default = HeaterHeader;
  HeaterHeader.propTypes = {
    title: _propTypes.default.string,
    showLargeTitle: _propTypes.default.bool,
    subtitle: _propTypes.default.string,
    showSubtitle: _propTypes.default.bool,
    unit: _propTypes.default.string,
    disabled: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };

  var Dot = function (_Component) {
    (0, _inherits2.default)(Dot, _Component);

    function Dot() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Dot);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Dot)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        progress: new _reactNative.Animated.Value(0),
        isLoading: true
      };

      _this.onLayout = function () {
        _this.setState({
          isLoading: false
        });
      };

      return _this;
    }

    (0, _createClass2.default)(Dot, [{
      key: "startAnimation",
      value: function startAnimation() {
        this.ani && this.ani.stop();
        this.ani = _reactNative.Animated.loop(_reactNative.Animated.timing(this.state.progress, {
          toValue: 1,
          duration: getRandomBetween(12000, 24000),
          useNativeDriver: true
        })).start();
      }
    }, {
      key: "stopAnimation",
      value: function stopAnimation() {
        this.ani && this.ani.stop();
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.timer = setTimeout(function () {
          _this2.startAnimation();
        }, 2000);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        clearTimeout(this.timer);
        this.stopAnimation();
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            width = _this$props2.width,
            height = _this$props2.height,
            source = _this$props2.source;
        var progress = this.state.progress;
        var originLeft = getRandomBetween(20, 350);
        var opacity = progress.interpolate({
          inputRange: [0, 1],
          outputRange: [1, 0]
        });
        var translateX = progress.interpolate({
          inputRange: [0, 1],
          outputRange: [originLeft - 3, originLeft + 3]
        });
        var randomTranslateY = getRandomBetween(_sizes.window.height * 0.8, _sizes.window.height);
        var translateY = progress.interpolate({
          inputRange: [0, 1],
          outputRange: [randomTranslateY, 0]
        });

        if (this.state.isLoading) {
          return _react.default.createElement(_reactNative.View, {
            onLayout: this.onLayout,
            style: [StylesDot.container, {
              width: width,
              height: height
            }]
          });
        }

        return _react.default.createElement(_reactNative.Animated.Image, {
          style: [StylesDot.container, {
            width: width,
            height: height,
            opacity: opacity,
            transform: [{
              translateX: translateX
            }, {
              translateY: translateY
            }]
          }],
          source: source
        });
      }
    }]);
    return Dot;
  }(_react.Component);

  Dot.propTypes = {
    width: _propTypes.default.number,
    height: _propTypes.default.height,
    source: _propTypes.default.any
  };

  var Dot0 = function (_Component2) {
    (0, _inherits2.default)(Dot0, _Component2);

    function Dot0() {
      (0, _classCallCheck2.default)(this, Dot0);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot0).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot0, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 26,
          height: 28,
          source: Source0
        });
      }
    }]);
    return Dot0;
  }(_react.Component);

  var Dot1 = function (_Component3) {
    (0, _inherits2.default)(Dot1, _Component3);

    function Dot1() {
      (0, _classCallCheck2.default)(this, Dot1);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot1).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot1, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 4,
          height: 4,
          source: Source1
        });
      }
    }]);
    return Dot1;
  }(_react.Component);

  var Dot2 = function (_Component4) {
    (0, _inherits2.default)(Dot2, _Component4);

    function Dot2() {
      (0, _classCallCheck2.default)(this, Dot2);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot2).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot2, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 3,
          height: 3,
          source: Source2
        });
      }
    }]);
    return Dot2;
  }(_react.Component);

  var Dot3 = function (_Component5) {
    (0, _inherits2.default)(Dot3, _Component5);

    function Dot3() {
      (0, _classCallCheck2.default)(this, Dot3);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot3).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot3, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 16,
          height: 16,
          source: Source3
        });
      }
    }]);
    return Dot3;
  }(_react.Component);

  var Dot4 = function (_Component6) {
    (0, _inherits2.default)(Dot4, _Component6);

    function Dot4() {
      (0, _classCallCheck2.default)(this, Dot4);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot4).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot4, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 8,
          height: 8,
          source: Source4
        });
      }
    }]);
    return Dot4;
  }(_react.Component);

  var Dot5 = function (_Component7) {
    (0, _inherits2.default)(Dot5, _Component7);

    function Dot5() {
      (0, _classCallCheck2.default)(this, Dot5);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot5).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot5, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 22,
          height: 22,
          source: Source5
        });
      }
    }]);
    return Dot5;
  }(_react.Component);

  var Dot6 = function (_Component8) {
    (0, _inherits2.default)(Dot6, _Component8);

    function Dot6() {
      (0, _classCallCheck2.default)(this, Dot6);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot6).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot6, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 83,
          height: 83,
          source: Source6
        });
      }
    }]);
    return Dot6;
  }(_react.Component);

  var Background = function (_Component9) {
    (0, _inherits2.default)(Background, _Component9);

    function Background() {
      (0, _classCallCheck2.default)(this, Background);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Background).apply(this, arguments));
    }

    (0, _createClass2.default)(Background, [{
      key: "getDots",
      value: function getDots() {
        var dots = [];
        var Dots = [Dot0, Dot1, Dot2, Dot3, Dot4, Dot5, Dot6].reverse();
        var dotCount = [14, 11, 18, 10, 11, 10, 11].reverse();
        dotCount.forEach(function (c, index) {
          var DotN = Dots[index];

          for (var i = 0; i < c; i++) {
            dots.push(_react.default.createElement(DotN, {
              key: String(index) + String(i)
            }));
          }
        });
        return dots;
      }
    }, {
      key: "render",
      value: function render() {
        var on = this.props.on;
        var gradientProps = {
          useAngel: this.props.useAngel,
          angel: this.props.angel,
          angelCenter: this.props.angelCenter,
          locations: this.props.locations,
          colors: this.props.colors
        };

        if (!on) {
          return _react.default.createElement(_reactNativeLinearGradient.default, (0, _extends2.default)({
            style: StylesBackground.container
          }, gradientProps));
        } else {
          var dots = this.getDots();
          return _react.default.createElement(_reactNativeLinearGradient.default, (0, _extends2.default)({
            style: StylesBackground.container
          }, gradientProps), dots);
        }
      }
    }]);
    return Background;
  }(_react.Component);

  exports.Background = Background;
  Background.propTypes = {
    on: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    useAngel: _propTypes.default.bool,
    angel: _propTypes.default.number,
    angelCenter: _propTypes.default.object,
    locations: _propTypes.default.array,
    colors: _propTypes.default.array
  };
  Background.defaultProps = {
    on: false,
    themeColor: null,
    useAngel: true,
    angel: 180,
    angelCenter: {
      x: 0.5,
      y: 0.5
    },
    locations: [0, 1],
    colors: ["#FFAC6A", "rgba(247,247,247,0.25)"]
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      paddingVertical: (0, _sizes.adjustSize)(195),
      flexDirection: 'column',
      justifyContent: 'center'
    },
    container1: {
      flexDirection: 'row',
      justifyContent: 'center'
    },
    titleLarge: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(240),
      textAlign: 'center',
      color: '#000000'
    },
    titlesContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    titlesContainerHeightHolder: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(282),
      textAlign: 'center',
      color: 'transparent'
    },
    titleSmall: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(120),
      textAlign: 'center',
      color: '#000000'
    },
    unitTransparent: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(54),
      color: 'transparent'
    },
    unit: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(54),
      color: '#000000'
    },
    subtitle: {
      fontFamily: _fonts.FontDefault,
      textAlign: 'center',
      fontSize: (0, _sizes.adjustSize)(42),
      color: '#000000'
    },
    subtitlePlaceHolder: {
      fontFamily: _fonts.FontDefault,
      textAlign: 'center',
      fontSize: (0, _sizes.adjustSize)(42),
      color: 'transparent'
    }
  });

  var StylesDot = _reactNative.StyleSheet.create({
    container: {
      position: 'absolute',
      resizeMode: 'contain'
    }
  });

  var StylesBackground = _reactNative.StyleSheet.create({
    container: {
      height: "100%",
      position: 'absolute',
      left: 0,
      top: 0,
      right: 0,
      bottom: 0
    }
  });
},23110,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,22420,14299,23113,23116,23119,23122,23125,23128,23131]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 26,
    "height": 28,
    "scales": [1],
    "hash": "e437a57822191991fca0f7568e3c4cd8",
    "name": "heater-dot0",
    "type": "png"
  });
},23113,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 4,
    "height": 4,
    "scales": [1],
    "hash": "c94e9e5660e90a16d10ddf030db99992",
    "name": "heater-dot1",
    "type": "png"
  });
},23116,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 3,
    "height": 3,
    "scales": [1],
    "hash": "8075bed0a415b161aa351bf95108e0e2",
    "name": "heater-dot2",
    "type": "png"
  });
},23119,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 16,
    "height": 16,
    "scales": [1],
    "hash": "f2b5b67cd2695b07bb24f7293526a495",
    "name": "heater-dot3",
    "type": "png"
  });
},23122,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 8,
    "height": 8,
    "scales": [1],
    "hash": "224724549f1506eb56b7cabd953ab33e",
    "name": "heater-dot4",
    "type": "png"
  });
},23125,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 22,
    "height": 22,
    "scales": [1],
    "hash": "7ee7506ecc080d92634d4f285aff3210",
    "name": "heater-dot5",
    "type": "png"
  });
},23128,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 83,
    "height": 83,
    "scales": [1],
    "hash": "76d5b015b10d6e50eb919f8ece03c611",
    "name": "heater-dot6",
    "type": "png"
  });
},23131,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[12]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _CircleButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _sizes = _$$_REQUIRE(_dependencyMap[16]);

  var _fns = _$$_REQUIRE(_dependencyMap[17]);

  var _fonts = _$$_REQUIRE(_dependencyMap[18]);

  var _colors = _$$_REQUIRE(_dependencyMap[19]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[20]);

  var SelectorWithButton = function (_Component) {
    (0, _inherits2.default)(SelectorWithButton, _Component);

    function SelectorWithButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, SelectorWithButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SelectorWithButton)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        selectedIndexs: [0]
      };

      _this.select = function (index) {
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            switchDisabled = _this$props.switchDisabled,
            multiple = _this$props.multiple,
            onSelected = _this$props.onSelected,
            minSelected = _this$props.minSelected,
            maxSelected = _this$props.maxSelected;

        if (disabled || switchDisabled) {
          return;
        }

        var selectedIndexs = (0, _toConsumableArray2.default)(_this.state.selectedIndexs);
        var selectedIndex = selectedIndexs.indexOf(index);
        var hasChanged = false;

        if (multiple) {
          if (selectedIndex === -1) {
            if (selectedIndexs.length >= maxSelected) {
              selectedIndexs.shift();
            }

            selectedIndexs.push(index);
            hasChanged = true;
          } else {
            if (selectedIndexs.length > minSelected) {
              selectedIndexs.splice(selectedIndex, 1);
              hasChanged = true;
            }
          }
        } else {
          if (selectedIndex === -1) {
            hasChanged = true;
            selectedIndexs = [index];
          }
        }

        if (hasChanged) {
          onSelected(selectedIndexs);
        }

        return null;
      };

      _this.getSelectors = function () {
        var _this$props2 = _this.props,
            items = _this$props2.items,
            themeColor = _this$props2.themeColor,
            disabled = _this$props2.disabled,
            switchDisabled = _this$props2.switchDisabled,
            maxNumberInRow = _this$props2.maxNumberInRow,
            hideTitleLeastNumber = _this$props2.hideTitleLeastNumber;
        var selectedIndexs = _this.state.selectedIndexs;
        var itemCount = items.length;

        var sizeLevel = _this.getSizeLevel(items);

        var isHorizontal = itemCount === 2 ? _this.props.isHorizontal : false;
        var hasSeparator = itemCount === 2;
        var newArray = [];
        var index = 0;

        while (index < items.length) {
          newArray.push(items.slice(index, index += maxNumberInRow));
        }

        return newArray.map(function (array, index1) {
          return _react.default.createElement(_reactNative.View, {
            key: index1,
            style: [Styles.selectors, itemCount === 2 && !isHorizontal ? {
              justifyContent: 'space-evenly'
            } : {}]
          }, array.map(function (item, index2) {
            var realIndex = index2 + maxNumberInRow * index1;
            var selected = selectedIndexs.indexOf(realIndex) !== -1;
            var numInOneRow = itemCount > maxNumberInRow ? maxNumberInRow : itemCount;
            var hideTitle = items.findIndex(function (item) {
              return item;
            }) === -1 || numInOneRow >= 5 && _this.context.language !== 'zh' || itemCount >= hideTitleLeastNumber;
            return _react.default.createElement(_react.Fragment, {
              key: index2 + maxNumberInRow * index1
            }, hasSeparator && realIndex > 0 ? _react.default.createElement(_reactNative.View, {
              style: Styles.separator
            }) : null, _react.default.createElement(_CircleButton.default, (0, _extends2.default)({
              sizeLevel: sizeLevel,
              horizontal: isHorizontal,
              themeColor: themeColor,
              disabled: disabled || switchDisabled,
              selected: selected,
              title: hideTitle ? '' : item.title,
              icon: item.icon,
              iconSelected: item.iconSelected,
              iconText: item.title || '',
              onPress: function onPress() {
                _this.select(realIndex);
              }
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: _this.props.accessible,
              accessibilityLabel: item.accessibilityLabel,
              accessibilityHint: item.accessibilityHint
            }))));
          }), itemCount > maxNumberInRow && itemCount % maxNumberInRow !== 0 && index1 === parseInt(itemCount / maxNumberInRow) ? Array.apply(null, Array(maxNumberInRow - itemCount % maxNumberInRow)).map(function (item, index) {
            return _react.default.createElement(_reactNative.View, {
              style: {
                opacity: 0
              },
              key: index
            }, _react.default.createElement(_CircleButton.default, (0, _extends2.default)({
              sizeLevel: sizeLevel,
              disabled: true
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: false
            }))));
          }) : null);
        });
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props3 = _this.props,
            disabled = _this$props3.disabled,
            showSwitch = _this$props3.showSwitch,
            switchOn = _this$props3.switchOn,
            onSwitch = _this$props3.onSwitch;

        if (disabled || !showSwitch || !onSwitch || actionName !== 'activate') {
          return;
        }

        onSwitch(!switchOn);
      };

      return _this;
    }

    (0, _createClass2.default)(SelectorWithButton, [{
      key: "getSizeLevel",
      value: function getSizeLevel(items) {
        var itemCount = items.length;
        return itemCount <= 2 ? 0 : itemCount === 3 ? 1 : 2;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props4 = this.props,
            title = _this$props4.title,
            subtitle = _this$props4.subtitle,
            items = _this$props4.items,
            hasShadow = _this$props4.hasShadow,
            showSwitch = _this$props4.showSwitch,
            disabled = _this$props4.disabled,
            switchOn = _this$props4.switchOn,
            themeColor = _this$props4.themeColor,
            onSwitch = _this$props4.onSwitch,
            maxNumberInRow = _this$props4.maxNumberInRow,
            alwaysShowSelectors = _this$props4.alwaysShowSelectors;

        if (!items || !items.length) {
          return null;
        }

        var Wrap = hasShadow ? _ContainerWithShadowAndSeparator.default : _react.Fragment;
        var sizeLevel = this.getSizeLevel(items);
        var opacity = disabled ? 0.3 : 1;
        return _react.default.createElement(Wrap, null, _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, title || subtitle || showSwitch ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [Styles.header]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: showSwitch ? _accessibilityHelper.AccessibilityRoles.switch : _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: showSwitch ? this.props.accessibilityHint : '',
          accessibilityState: showSwitch ? {
            disabled: disabled,
            checked: switchOn
          } : {
            disabled: disabled
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), title || subtitle ? _react.default.createElement(_reactNative.View, {
          style: [Styles.titleContainer, {
            opacity: opacity
          }]
        }, title ? _react.default.createElement(_reactNative.Text, {
          style: Styles.title,
          ellipsizeMode: "tail",
          numberOfLines: 1
        }, title) : null, title && subtitle ? _react.default.createElement(_reactNative.View, {
          style: Styles.titleSeparator
        }) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.subtitle,
          ellipsizeMode: "tail",
          numberOfLines: 1
        }, subtitle) : null) : null, showSwitch ? _react.default.createElement(_Switch.default, {
          disabled: disabled,
          value: switchOn,
          onTintColor: themeColor || _colors.ColorGreen,
          onValueChange: onSwitch
        }) : null) : null, showSwitch && !switchOn ? alwaysShowSelectors ? _react.default.createElement(_reactNative.View, {
          style: [title || subtitle || showSwitch ? Styles.selectorsWithHeader : null, items.length >= maxNumberInRow ? null : [Styles.selectorsPadding0, Styles.selectorsPadding1, Styles.selectorsPadding2, Styles.selectorsPadding3][sizeLevel]]
        }, this.getSelectors()) : null : _react.default.createElement(_reactNative.View, {
          style: [title || subtitle || showSwitch ? Styles.selectorsWithHeader : null, items.length >= maxNumberInRow ? null : [Styles.selectorsPadding0, Styles.selectorsPadding1, Styles.selectorsPadding2, Styles.selectorsPadding3][sizeLevel]]
        }, this.getSelectors())));
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(nextProps, prevState) {
        var selectedIndexsProp = nextProps.initSelectedIndexs;
        var selectedIndexsState = prevState.initSelectedIndexs;

        if ((0, _fns.isSameArrayElements)(selectedIndexsProp, selectedIndexsState)) {
          return null;
        }

        return {
          selectedIndexs: selectedIndexsProp
        };
      }
    }]);
    return SelectorWithButton;
  }(_react.Component);

  exports.default = SelectorWithButton;
  SelectorWithButton.contextType = _configProvider.ConfigContext;
  SelectorWithButton.propTypes = {
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    items: _propTypes.default.arrayOf(_propTypes.default.shape({
      icon: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
      iconSelected: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
      title: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    initSelectedIndexs: _propTypes.default.array,
    onSelected: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    switchDisabled: _propTypes.default.bool,
    alwaysShowSelectors: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    multiple: _propTypes.default.bool,
    minSelected: _propTypes.default.number,
    maxSelected: _propTypes.default.number,
    showSwitch: _propTypes.default.bool,
    switchOn: _propTypes.default.bool,
    onSwitch: _propTypes.default.func,
    hasShadow: _propTypes.default.bool,
    maxNumberInRow: _propTypes.default.number,
    hideTitleLeastNumber: _propTypes.default.number,
    isHorizontal: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  SelectorWithButton.defaultProps = {
    title: '',
    subtitle: '',
    items: [],
    initSelectedIndexs: [0],
    onSelected: _fns.NOOP,
    disabled: false,
    switchDisabled: false,
    alwaysShowSelectors: false,
    themeColor: '',
    offColor: '',
    multiple: false,
    minSelected: 1,
    maxSelected: Infinity,
    showSwitch: false,
    switchOn: true,
    onSwitch: _fns.log,
    hasShadow: true,
    maxNumberInRow: 4,
    isHorizontal: true,
    hideTitleLeastNumber: 1000
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      paddingHorizontal: (0, _sizes.adjustSize)(60)
    },
    header: {
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    titleContainer: {
      flex: 1,
      height: (0, _sizes.adjustSize)(156),
      flexDirection: 'row',
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: '#000'
    },
    titleSeparator: {
      width: 1,
      height: (0, _sizes.adjustSize)(42),
      backgroundColor: 'rgba(0, 0, 0, 0.3)',
      marginHorizontal: (0, _sizes.adjustSize)(18)
    },
    subtitle: {
      fontSize: (0, _sizes.adjustSize)(36),
      fontFamily: _fonts.FontDefault,
      color: 'rgba(0, 0, 0, 0.6)',
      flex: 1
    },
    selectors: {
      paddingVertical: (0, _sizes.adjustSize)(60),
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'flex-start'
    },
    selectorsWithHeader: {
      paddingTop: 0
    },
    selectorsPadding0: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorsPadding1: {
      paddingHorizontal: (0, _sizes.adjustSize)(78)
    },
    selectorsPadding2: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorsPadding3: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorWithHeader: {
      paddingTop: 0
    },
    separator: {
      width: 1,
      height: (0, _sizes.adjustSize)(120),
      backgroundColor: 'rgba(0, 0, 0, 0.15)',
      marginHorizontal: (0, _sizes.adjustSize)(60)
    }
  });
},23134,[14308,14305,14344,14359,14320,14323,14371,14377,14386,10297,10033,10318,22426,22450,23095,23089,23068,23137,23071,23074,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.NOOP = NOOP;
  exports.log = log;
  exports.isSameArrayElements = isSameArrayElements;
  exports.getType = getType;

  function NOOP() {}

  function log() {}

  function isSameArrayElements(a, b) {
    if (a === b) {
      return true;
    }

    if (!a && b || a && !b) {
      return false;
    }

    if (a && b && a.length !== b.length) {
      return false;
    }

    var _loop = function _loop(i, l) {
      var item = a[i];

      if (b.find(function (n) {
        return n === item;
      }) === undefined) {
        return {
          v: false
        };
      }
    };

    for (var i = 0, l = a.length; i < l; i++) {
      var _ret = _loop(i, l);

      if (typeof _ret === "object") return _ret.v;
    }

    return true;
  }

  function getType(o) {
    return Object.prototype.toString.call(o).slice(8, -1);
  }
},23137,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _containerWithShadowAndSeparator = _$$_REQUIRE(_dependencyMap[13]);

  var _fns = _$$_REQUIRE(_dependencyMap[14]);

  var _sizes = _$$_REQUIRE(_dependencyMap[15]);

  var _fonts = _$$_REQUIRE(_dependencyMap[16]);

  var _colors = _$$_REQUIRE(_dependencyMap[17]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[18]);

  var SliderWithHeader = function (_Component) {
    (0, _inherits2.default)(SliderWithHeader, _Component);

    function SliderWithHeader() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, SliderWithHeader);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SliderWithHeader)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onSlidingChange = function (v) {
        var _this$props = _this.props,
            onSlidingChange = _this$props.onSlidingChange,
            options = _this$props.options,
            min = _this$props.min,
            max = _this$props.max,
            step = _this$props.step;
        var isRange = min !== max && step !== 0;
        onSlidingChange(isRange ? v : options[v]);
      };

      _this.onSlidingComplete = function (v) {
        var _this$props2 = _this.props,
            onSlidingComplete = _this$props2.onSlidingComplete,
            options = _this$props2.options,
            min = _this$props2.min,
            max = _this$props2.max,
            step = _this$props2.step;
        var isRange = min !== max && step !== 0;
        onSlidingComplete(isRange ? v : options[v]);
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props3 = _this.props,
            disabled = _this$props3.disabled,
            showSwitch = _this$props3.showSwitch,
            switchOn = _this$props3.switchOn,
            onSwitch = _this$props3.onSwitch;

        if (disabled || !showSwitch || !onSwitch || actionName !== 'activate') {
          return;
        }

        onSwitch(!switchOn);
      };

      return _this;
    }

    (0, _createClass2.default)(SliderWithHeader, [{
      key: "showSelector",
      value: function showSelector() {
        var _this$props4 = this.props,
            showSwitch = _this$props4.showSwitch,
            switchOn = _this$props4.switchOn,
            alwaysShowSelectors = _this$props4.alwaysShowSelectors;

        if (showSwitch && !switchOn) {
          return !!alwaysShowSelectors;
        } else {
          return true;
        }
      }
    }, {
      key: "minimumTrackTintColor",
      value: function minimumTrackTintColor() {
        var _this$props5 = this.props,
            showSwitch = _this$props5.showSwitch,
            switchOn = _this$props5.switchOn,
            disabled = _this$props5.disabled,
            themeColor = _this$props5.themeColor,
            offColor = _this$props5.offColor;

        if (showSwitch && !switchOn) {
          return (offColor ? offColor : themeColor) || _colors.ColorGreen;
        } else {
          return (disabled && offColor ? offColor : themeColor) || _colors.ColorGreen;
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props6 = this.props,
            options = _this$props6.options,
            disabled = _this$props6.disabled,
            switchDisabled = _this$props6.switchDisabled,
            themeColor = _this$props6.themeColor,
            offColor = _this$props6.offColor,
            showSwitch = _this$props6.showSwitch,
            switchOn = _this$props6.switchOn,
            onSwitch = _this$props6.onSwitch,
            initValue = _this$props6.initValue,
            title = _this$props6.title,
            subtitle = _this$props6.subtitle,
            hasShadow = _this$props6.hasShadow,
            min = _this$props6.min,
            max = _this$props6.max,
            step = _this$props6.step,
            contentType = _this$props6.contentType,
            showEndText = _this$props6.showEndText,
            alwaysShowSelectors = _this$props6.alwaysShowSelectors;
        var isRange = min !== max && step !== 0;

        if ((!options || !options.length) && !isRange) {
          return null;
        }

        var initSelectedIndex = options.findIndex(function (option) {
          return option === initValue;
        });
        var Wrap = hasShadow ? _containerWithShadowAndSeparator.ContainerWithShadowAndSeparator : _react.Fragment;
        var opacity = disabled ? 0.3 : 1;
        return _react.default.createElement(Wrap, null, _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, title || subtitle || showSwitch ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [Styles.header]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: showSwitch ? _accessibilityHelper.AccessibilityRoles.switch : _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: showSwitch ? this.props.accessibilityHint : '',
          accessibilityState: showSwitch ? {
            disabled: disabled,
            checked: switchOn
          } : {
            disabled: disabled
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), title || subtitle ? _react.default.createElement(_reactNative.View, {
          style: [Styles.titleContainer, {
            opacity: opacity
          }]
        }, title ? _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title) : null, title && subtitle ? _react.default.createElement(_reactNative.View, {
          style: Styles.titleSeparator
        }) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.subtitle
        }, subtitle) : null) : null, showSwitch ? _react.default.createElement(_Switch.default, (0, _extends2.default)({
          disabled: disabled,
          value: switchOn,
          onTintColor: themeColor || _colors.ColorGreen,
          onValueChange: onSwitch
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }))) : null) : null, this.showSelector() ? _react.default.createElement(_reactNative.View, {
          style: [Styles.sliderContainer, title || subtitle || showSwitch ? Styles.sliderContainerWithHeader : null]
        }, _react.default.createElement(_SlideGear.default, (0, _extends2.default)({
          disabled: disabled || showSwitch && switchDisabled,
          containerStyle: Styles.slider,
          options: isRange ? [] : options,
          minimumTrackTintColor: this.minimumTrackTintColor(),
          contentType: contentType,
          showEndText: showEndText,
          value: isRange ? initValue : Math.max(0, initSelectedIndex),
          optionMin: min,
          optionMax: max,
          optionStep: step,
          onValueChange: this.onSlidingChange,
          onSlidingComplete: this.onSlidingComplete
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: this.props.sliderAccessibilityLabel,
          accessibilityHint: this.props.sliderAccessibilityHint
        })))) : null));
      }
    }]);
    return SliderWithHeader;
  }(_react.Component);

  exports.default = SliderWithHeader;
  SliderWithHeader.propTypes = {
    options: _propTypes.default.array,
    min: _propTypes.default.number,
    max: _propTypes.default.number,
    step: _propTypes.default.number,
    initValue: _propTypes.default.number,
    onSlidingChange: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    switchDisabled: _propTypes.default.bool,
    alwaysShowSelectors: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    offColor: _propTypes.default.any,
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    contentType: _propTypes.default.string,
    showEndText: _propTypes.default.bool,
    showSwitch: _propTypes.default.bool,
    switchOn: _propTypes.default.bool,
    onSwitch: _propTypes.default.func,
    hasShadow: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    sliderAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    sliderAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  SliderWithHeader.defaultProps = {
    options: [],
    min: 0,
    max: 0,
    step: 0,
    initValue: 0,
    onSlidingChange: _fns.log,
    onSlidingComplete: _fns.log,
    disabled: false,
    switchDisabled: false,
    alwaysShowSelectors: false,
    themeColor: '',
    offColor: '#EDEEEF',
    title: '',
    subtitle: '',
    contentType: '',
    showEndText: true,
    showSwitch: false,
    switchOn: true,
    onSwitch: _fns.log,
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      paddingHorizontal: (0, _sizes.adjustSize)(60)
    },
    header: {
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    titleContainer: {
      flex: 1,
      height: (0, _sizes.adjustSize)(156),
      flexDirection: 'row',
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: '#000'
    },
    titleSeparator: {
      width: 1,
      height: (0, _sizes.adjustSize)(42),
      backgroundColor: 'rgba(0, 0, 0, 0.3)',
      marginHorizontal: (0, _sizes.adjustSize)(18)
    },
    subtitle: {
      fontSize: (0, _sizes.adjustSize)(36),
      fontFamily: _fonts.FontDefault,
      color: 'rgba(0, 0, 0, 0.6)'
    },
    sliderContainer: {
      paddingVertical: (0, _sizes.adjustSize)(60)
    },
    sliderContainerWithHeader: {
      paddingTop: 0
    }
  });
},23140,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22450,22897,23086,23137,23068,23071,23074,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var SmallNumber = function (_PureComponent) {
    (0, _inherits2.default)(SmallNumber, _PureComponent);

    function SmallNumber() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, SmallNumber);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SmallNumber)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.offsetX = new _reactNative.Animated.Value(0);
      _this.containerWidth = 0;
      _this.centerWidth = 0;
      _this.centerX = 0;

      _this.onLayoutContainer = function (e) {
        var width = e.nativeEvent.layout.width;
        _this.containerWidth = width;

        if (width && _this.centerWidth) {
          _this.offsetX.setValue(width / 2 - _this.centerWidth / 2 - _this.centerX);
        }
      };

      _this.onLayoutCenter = function (e) {
        var _e$nativeEvent$layout = e.nativeEvent.layout,
            width = _e$nativeEvent$layout.width,
            x = _e$nativeEvent$layout.x;
        _this.centerWidth = width;
        _this.centerX = x;

        if (width && _this.containerWidth) {
          _this.offsetX.setValue(_this.containerWidth / 2 - width / 2 - x);
        }
      };

      _this.getItems = function () {
        var _this$props = _this.props,
            list = _this$props.list,
            themeColor = _this$props.themeColor,
            titleThemeColor = _this$props.titleThemeColor;
        var filtered = list.filter(function (item) {
          return item && item.title !== undefined && item.number !== undefined;
        });
        var total = filtered.length;
        var isOdd = total % 2 === 1;
        var centerIndex = total <= 0 ? 0 : isOdd ? total / 2 - 0.5 : total / 2;
        return filtered.map(function (item, index) {
          var title = item.title,
              number = item.number;
          var theme = item.themeColor || themeColor;
          var titleTheme = item.titleThemeColor || titleThemeColor;
          return _react.default.createElement(_react.Fragment, {
            key: index
          }, index > 0 ? _react.default.createElement(_reactNative.View, {
            style: [Styles.separator, titleTheme ? {
              backgroundColor: titleTheme
            } : null],
            onLayout: centerIndex === index && !isOdd ? _this.onLayoutCenter : null
          }) : null, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            style: Styles.item,
            onLayout: centerIndex === index && isOdd ? _this.onLayoutCenter : null
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
            accessibilityLabel: item.accessibilityLabel
          })), _react.default.createElement(_reactNative.Text, {
            style: [Styles.number, theme ? {
              color: theme
            } : null, isNaN(number) ? {
              fontSize: (0, _sizes.adjustSize)(88)
            } : null]
          }, number), _react.default.createElement(_reactNative.Text, {
            style: [Styles.title, titleTheme ? {
              color: titleTheme
            } : null]
          }, title)));
        });
      };

      return _this;
    }

    (0, _createClass2.default)(SmallNumber, [{
      key: "render",
      value: function render() {
        var list = this.props.list;

        if (!list || !list.length) {
          return null;
        }

        var items = this.getItems();
        var offsetX = this.offsetX;
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container,
          onLayout: this.onLayoutContainer
        }, _react.default.createElement(_reactNative.Animated.View, {
          style: [Styles.containerInner, {
            transform: [{
              translateX: offsetX
            }]
          }]
        }, items));
      }
    }]);
    return SmallNumber;
  }(_react.PureComponent);

  exports.default = SmallNumber;
  SmallNumber.propTypes = {
    list: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      number: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
      themeColor: _propTypes.default.any,
      titleThemeColor: _propTypes.default.any,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
    })),
    themeColor: _propTypes.default.any,
    titleThemeColor: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };

  var Styles = _reactNative.StyleSheet.create({
    containerInner: {
      alignItems: 'center',
      flexDirection: 'row',
      justifyContent: 'center'
    },
    separator: {
      width: (0, _sizes.adjustSize)(2.1),
      height: (0, _sizes.adjustSize)(135),
      marginHorizontal: (0, _sizes.adjustSize)(33),
      marginTop: (0, _sizes.adjustSize)(12),
      backgroundColor: 'rgba(0, 0, 0, 1)',
      opacity: 0.2
    },
    item: {
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(36),
      fontFamily: _fonts.FontDefault,
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#1C2229',
      opacity: 1
    },
    number: {
      fontSize: (0, _sizes.adjustSize)(102),
      fontFamily: 'Helvetica',
      lineHeight: (0, _sizes.adjustSize)(123),
      color: '#1C2229',
      opacity: 0.8
    }
  });
},23143,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNativeLinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fns = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var SwitchBgColorsOn = ["#fff", "#f1f1f2"];
  var SwitchBgColorsOff = ["#f1f1f2", "#fff"];
  var MarginTops = [0, (0, _sizes.adjustSize)(240), (0, _sizes.adjustSize)(180), (0, _sizes.adjustSize)(105), (0, _sizes.adjustSize)(90)];
  var Heights = [0, (0, _sizes.adjustSize)(990), (0, _sizes.adjustSize)(852), (0, _sizes.adjustSize)(720), (0, _sizes.adjustSize)(516)];

  var WallSwitch = function (_Component) {
    (0, _inherits2.default)(WallSwitch, _Component);

    function WallSwitch() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, WallSwitch);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(WallSwitch)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.switch = function (index) {
        var onSwitch = _this.props.onSwitch;

        if (typeof onSwitch === 'function') {
          onSwitch(index);
        }
      };

      _this.getItems = function (items) {
        var length = items.length;
        return items.map(function (item, index) {
          var isFirst = index === 0;
          var isLast = index === length - 1;
          var isOn = item.isOn;
          return _react.default.createElement(_reactNativeLinearGradient.default, (0, _extends2.default)({
            key: index,
            style: [Styles.item, isOn ? Styles.itemOn : Styles.itemOff, isFirst ? Styles.itemFirst : null, isLast ? Styles.itemLast : null],
            colors: isOn ? SwitchBgColorsOn : SwitchBgColorsOff
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityLabel: item.accessibilityLabel,
            accessibilityHint: item.accessibilityHint,
            accessibilityState: {
              selected: isOn,
              checked: isOn
            }
          })), _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            style: {
              width: '100%',
              height: '100%'
            },
            activeOpacity: 0.8,
            onPress: function onPress() {
              _this.switch(index);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })), _react.default.createElement(_reactNative.View, {
            style: Styles.upper
          }, _react.default.createElement(_reactNative.View, {
            style: [Styles.indicator, isOn ? Styles.indicatorOn : Styles.indicatorOff]
          }))));
        });
      };

      return _this;
    }

    (0, _createClass2.default)(WallSwitch, [{
      key: "render",
      value: function render() {
        var items = this.props.items;

        if (!items || !items.length) {
          return null;
        }

        var length = items.length;
        return _react.default.createElement(_reactNative.View, {
          style: [Styles.container, {
            height: Heights[length],
            marginTop: MarginTops[length]
          }]
        }, this.getItems(items));
      }
    }]);
    return WallSwitch;
  }(_react.Component);

  exports.default = WallSwitch;
  WallSwitch.propTypes = {
    items: _propTypes.default.arrayOf(_propTypes.default.shape({
      isOn: _propTypes.default.bool,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onSwitch: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  WallSwitch.defaultProps = {
    items: [],
    onSwitch: _fns.log
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginHorizontal: (0, _sizes.adjustSize)(30),
      flexDirection: 'row',
      backgroundColor: '#CDCED0',
      borderRadius: (0, _sizes.adjustSize)(30),
      borderWidth: (0, _sizes.adjustSize)(6),
      borderColor: '#CDCED0',
      overflow: 'hidden'
    },
    item: {
      flex: 1,
      backgroundColor: '#F7F7F7',
      marginHorizontal: (0, _sizes.adjustSize)(3),
      alignItems: 'center'
    },
    itemOn: {
      marginTop: (0, _sizes.adjustSize)(30),
      paddingTop: (0, _sizes.adjustSize)(90),
      marginBottom: 0,
      paddingBottom: (0, _sizes.adjustSize)(60)
    },
    itemOff: {
      marginTop: 0,
      paddingTop: (0, _sizes.adjustSize)(120),
      marginBottom: (0, _sizes.adjustSize)(30),
      paddingBottom: (0, _sizes.adjustSize)(30)
    },
    itemFirst: {
      borderTopLeftRadius: (0, _sizes.adjustSize)(30),
      borderBottomLeftRadius: (0, _sizes.adjustSize)(30),
      borderTopRightRadius: 1,
      borderBottomRightRadius: 1
    },
    itemLast: {
      borderTopLeftRadius: 1,
      borderBottomLeftRadius: 1,
      borderTopRightRadius: (0, _sizes.adjustSize)(30),
      borderBottomRightRadius: (0, _sizes.adjustSize)(30)
    },
    upper: {
      flex: 1,
      marginTop: (0, _sizes.adjustSize)(30),
      alignItems: 'center'
    },
    indicator: {
      width: (0, _sizes.adjustSize)(84),
      height: (0, _sizes.adjustSize)(6),
      marginTop: (0, _sizes.adjustSize)(60)
    },
    indicatorOn: {
      backgroundColor: '#3CB3F7'
    },
    indicatorOff: {
      backgroundColor: '#A2AFC1'
    }
  });
},23146,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,14299,23068,23137,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _sizes = _$$_REQUIRE(_dependencyMap[10]);

  var _selectorWithButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _containerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var DoubleSelectors = function (_Component) {
    (0, _inherits2.default)(DoubleSelectors, _Component);

    function DoubleSelectors() {
      (0, _classCallCheck2.default)(this, DoubleSelectors);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DoubleSelectors).apply(this, arguments));
    }

    (0, _createClass2.default)(DoubleSelectors, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            title = _this$props.title,
            subtitle = _this$props.subtitle,
            themeColor = _this$props.themeColor,
            disabled = _this$props.disabled,
            secondShow = _this$props.secondShow,
            secondDisabled = _this$props.secondDisabled,
            first = _this$props.first,
            second = _this$props.second,
            hasShadow = _this$props.hasShadow;
        var Wrap = hasShadow ? _containerWithShadowAndSeparator.default : _react.Fragment;
        return _react.default.createElement(Wrap, {
          separatorStyle: Styles.separator
        }, _react.default.createElement(_selectorWithButton.default, (0, _extends2.default)({
          hasShadow: false,
          themeColor: themeColor,
          title: title,
          subtitle: subtitle,
          disabled: disabled
        }, first)), secondShow ? _react.default.createElement(_selectorWithButton.default, (0, _extends2.default)({
          hasShadow: false,
          themeColor: themeColor,
          disabled: secondDisabled || disabled
        }, second)) : null);
      }
    }]);
    return DoubleSelectors;
  }(_react.Component);

  exports.default = DoubleSelectors;
  DoubleSelectors.defaultProps = {
    title: '',
    subtitle: '',
    disabled: false,
    secondShow: true,
    secondDisabled: true,
    first: {
      items: []
    },
    second: {
      items: []
    },
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    separator: {
      marginHorizontal: (0, _sizes.adjustSize)(60)
    }
  });
},23149,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,23068,23152,23086]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "SelectorWithButton", {
    enumerable: true,
    get: function get() {
      return _SelectorWithButton.default;
    }
  });

  var _SelectorWithButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23152,[14305,23134]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fns = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var SourceCurtainPole = _$$_REQUIRE(_dependencyMap[14]);

  var SourceCurtainLight = _$$_REQUIRE(_dependencyMap[15]);

  var SourceCurtainDark = _$$_REQUIRE(_dependencyMap[16]);

  var SourceCurtainBg = _$$_REQUIRE(_dependencyMap[17]);

  var Width858 = (0, _sizes.adjustSize)(858);
  var Width429 = (0, _sizes.adjustSize)(429);
  var Width108 = (0, _sizes.adjustSize)(108);

  function getCurrentValue(type, isLeft, lastValue, moveX) {
    var min = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
    var max = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 100;
    var diffValue = 100 / (type === 0 ? Width429 : Width858) * moveX;
    var value = lastValue + (isLeft ? -1 : 1) * diffValue;
    return Math.min(max, Math.max(min, value));
  }

  var Curtain = function (_Component) {
    (0, _inherits2.default)(Curtain, _Component);

    function Curtain() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Curtain);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Curtain)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.currValue = 0;
      _this.lastValue = 0;
      _this.value = new _reactNative.Animated.Value(0);
      _this.leftX = new _reactNative.Animated.Value(0);
      _this.rightX = new _reactNative.Animated.Value(0);

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var onValueChange = _this.props.onValueChange;
        var targetValue = _this.lastValue;

        switch (actionName) {
          case 'increment':
            targetValue += 10;
            break;

          case 'decrement':
            targetValue -= 10;
            break;
        }

        targetValue = Math.min(100, Math.max(0, targetValue));

        _this.value.setValue(targetValue);

        _this.lastValue = targetValue;
        onValueChange(targetValue);
      };

      return _this;
    }

    (0, _createClass2.default)(Curtain, [{
      key: "animateToPosition",
      value: function animateToPosition(position) {
        var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 30;

        if (isNaN(position) || !isFinite(position)) {
          return;
        }

        this.stopAnimation();
        var currValue = this.currValue;
        this.aniPosition = _reactNative.Animated.timing(this.value, {
          toValue: position,
          duration: Math.abs(currValue - position) * duration,
          easing: _reactNative.Easing.inOut(_reactNative.Easing.linear)
        }).start();
      }
    }, {
      key: "stopAnimation",
      value: function stopAnimation() {
        this.aniPosition && this.aniPosition.stop();
      }
    }, {
      key: "initPanResponder",
      value: function initPanResponder() {
        this.panResponderLeft = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
            return true;
          },
          onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
            return true;
          },
          onPanResponderGrant: _fns.log,
          onPanResponderMove: _reactNative.Animated.event([null, {
            dx: this.leftX
          }]),
          onPanResponderRelease: this.touchEnd.bind(this),
          onPanResponderTerminate: this.touchEnd.bind(this)
        });
        this.panResponderRight = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
            return true;
          },
          onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
            return true;
          },
          onPanResponderGrant: _fns.log,
          onPanResponderMove: _reactNative.Animated.event([null, {
            dx: this.rightX
          }]),
          onPanResponderRelease: this.touchEnd.bind(this),
          onPanResponderTerminate: this.touchEnd.bind(this)
        });
      }
    }, {
      key: "touchEnd",
      value: function touchEnd() {
        this.lastValue = this.currValue;
        this.props.onValueChange(this.lastValue);
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var props = this.props;
        this.lastValue = nextProps.position;

        if (nextProps.type !== props.type) {
          this.initPanResponder(nextProps.type);
        }

        if (nextProps.position !== props.position) {
          this.animateToPosition(nextProps.position);
        }
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        var _this2 = this;

        this.leftX.addListener(function (e) {
          var currValue = getCurrentValue(_this2.props.type, true, _this2.lastValue, e.value);

          _this2.animateToPosition(currValue, 0);

          _this2.props.onValueChanging(currValue);
        });
        this.rightX.addListener(function (e) {
          var currValue = getCurrentValue(_this2.props.type, false, _this2.lastValue, e.value);

          _this2.animateToPosition(currValue, 0);

          _this2.props.onValueChanging(currValue);
        });
        this.initPanResponder(this.props.type);
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this3 = this;

        this.value.addListener(function (_ref2) {
          var value = _ref2.value;
          _this3.currValue = value;
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.stopAnimation();
      }
    }, {
      key: "getCurtains",
      value: function getCurtains() {
        var type = this.props.type;
        var ret = [];
        var l = type === 0 ? 7 : 13;

        for (var i = 0; i < l; i++) {
          ret.push(_react.default.createElement(_reactNative.Image, {
            key: String(i),
            style: Styles.curtainSingle,
            source: i % 2 === 0 ? SourceCurtainDark : SourceCurtainLight
          }));
        }

        return ret;
      }
    }, {
      key: "render",
      value: function render() {
        var type = this.props.type;
        var value = this.value;
        var curtains = this.getCurtains();
        var width = value.interpolate({
          inputRange: [0, 100],
          outputRange: type === 0 ? [Width429, Width108] : [Width858, Width108]
        });
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
          accessibilityLabel: this.props.accessibilityLabel || this.props.position + "%",
          accessibilityHint: this.props.accessibilityHint
        }), {
          accessibilityActions: [{
            name: 'increment'
          }, {
            name: 'decrement'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.Image, {
          style: Styles.bg,
          source: SourceCurtainBg
        }), _react.default.createElement(_reactNative.Image, {
          style: Styles.pole,
          source: SourceCurtainPole
        }), _react.default.createElement(_reactNative.View, {
          style: Styles.curtains
        }, [0, 1].indexOf(type) === -1 ? null : _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.curtainWrap
        }, this.panResponderLeft.panHandlers, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.Animated.View, {
          style: [Styles.curtain, Styles.curtainLeft, {
            width: width
          }]
        }, curtains, _react.default.createElement(_reactNative.View, {
          style: Styles.curtainBtn
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.curtainBtnInner
        })))), [0, 2].indexOf(type) === -1 ? null : _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.curtainWrap
        }, this.panResponderRight.panHandlers, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.Animated.View, {
          style: [Styles.curtain, Styles.curtainRight, {
            width: width
          }]
        }, curtains, _react.default.createElement(_reactNative.View, {
          style: Styles.curtainBtn
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.curtainBtnInner
        }))))));
      }
    }]);
    return Curtain;
  }(_react.Component);

  exports.default = Curtain;
  Curtain.propTypes = {
    type: _propTypes.default.oneOf([0, 1, 2]),
    position: _propTypes.default.number,
    onValueChanging: _propTypes.default.func,
    onValueChange: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Curtain.defaultProps = {
    type: 0,
    position: 0,
    onValueChanging: _fns.log,
    onValueChange: _fns.log
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center',
      marginTop: (0, _sizes.adjustSize)(249),
      paddingBottom: (0, _sizes.adjustSize)(60)
    },
    bg: {
      position: 'absolute',
      left: '50%',
      marginLeft: (0, _sizes.adjustSize)(-540),
      width: (0, _sizes.adjustSize)(1080),
      height: (0, _sizes.adjustSize)(879),
      resizeMode: 'contain'
    },
    pole: {
      width: (0, _sizes.adjustSize)(882),
      height: (0, _sizes.adjustSize)(21),
      resizeMode: 'contain'
    },
    curtains: {
      flexDirection: 'row',
      justifyContent: 'space-between',
      width: (0, _sizes.adjustSize)(858)
    },
    curtainWrap: {
      flex: 1,
      height: (0, _sizes.adjustSize)(858)
    },
    curtain: {
      position: 'absolute',
      height: (0, _sizes.adjustSize)(858),
      flexDirection: 'row',
      overflow: 'hidden'
    },
    curtainSingle: {
      flex: 1,
      height: (0, _sizes.adjustSize)(858)
    },
    curtainLeft: {
      left: 0
    },
    curtainRight: {
      right: 0,
      transform: [{
        scaleX: -1
      }]
    },
    curtainBtn: {
      position: 'absolute',
      width: (0, _sizes.adjustSize)(120),
      height: (0, _sizes.adjustSize)(120),
      top: '50%',
      marginTop: (0, _sizes.adjustSize)(-60),
      borderRadius: (0, _sizes.adjustSize)(60),
      right: 0,
      marginRight: (0, _sizes.adjustSize)(-60),
      justifyContent: 'center',
      backgroundColor: '#fff'
    },
    curtainBtnInner: {
      width: (0, _sizes.adjustSize)(9),
      height: (0, _sizes.adjustSize)(48),
      borderRadius: (0, _sizes.adjustSize)(6),
      backgroundColor: '#5898FF',
      marginLeft: (0, _sizes.adjustSize)(30)
    }
  });
},23155,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23137,22420,23158,23161,23164,23167]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 294,
    "height": 7,
    "scales": [2, 3],
    "hash": "5c656ab1687db8936983a7210b3a4118",
    "name": "curtain-pole",
    "type": "png"
  });
},23158,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 22,
    "height": 286,
    "scales": [2, 3],
    "hash": "2219fcc0db10734da3173b657bcc7764",
    "name": "curtain-light",
    "type": "png"
  });
},23161,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 22,
    "height": 286,
    "scales": [2, 3],
    "hash": "11212d789dc6f34a86845319d96fa8db",
    "name": "curtain-dark",
    "type": "png"
  });
},23164,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 360,
    "height": 293,
    "scales": [2, 3],
    "hash": "0267ff3dcfca2c2caf9e5a5d3b30c1f4",
    "name": "curtain-bg",
    "type": "png"
  });
},23167,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Radio = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fonts = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var CurtainStyle = function (_Component) {
    (0, _inherits2.default)(CurtainStyle, _Component);

    function CurtainStyle() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, CurtainStyle);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CurtainStyle)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onAccessibilityAction = function (_ref, id) {
        var actionName = _ref.nativeEvent.actionName;

        switch (actionName) {
          case 'activate':
            _this.onCheckChange(id);

            break;
        }
      };

      _this.onCheckChange = function (id) {
        var onValueChange = _this.props.onValueChange;

        if (typeof onValueChange === 'function') {
          onValueChange(id);
        }
      };

      return _this;
    }

    (0, _createClass2.default)(CurtainStyle, [{
      key: "getItems",
      value: function getItems() {
        var _this2 = this;

        var _this$props = this.props,
            _this$props$icons = _this$props.icons,
            icons = _this$props$icons === undefined ? [] : _this$props$icons,
            _this$props$titles = _this$props.titles,
            titles = _this$props$titles === undefined ? [] : _this$props$titles,
            _this$props$ids = _this$props.ids,
            ids = _this$props$ids === undefined ? [] : _this$props$ids,
            checkedId = _this$props.checkedId,
            disabled = _this$props.disabled,
            _this$props$accessibi = _this$props.accessibilityLabels,
            accessibilityLabels = _this$props$accessibi === undefined ? [] : _this$props$accessibi,
            _this$props$accessibi2 = _this$props.accessibilityHints,
            accessibilityHints = _this$props$accessibi2 === undefined ? [] : _this$props$accessibi2;
        return titles.map(function (_, index) {
          var title = titles[index];
          var icon = icons[index];
          var id = ids[index];
          return title && icon ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            key: index,
            style: Styles.item
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
            accessibilityLabel: accessibilityLabels[index],
            accessibilityHint: accessibilityHints[index],
            accessibilityState: {
              selected: checkedId === id,
              checked: checkedId === id,
              disabled: disabled
            }
          }), {
            accessibilityActions: [{
              name: 'activate'
            }],
            onAccessibilityAction: function onAccessibilityAction(e) {
              _this2.onAccessibilityAction(e, id);
            }
          }), _react.default.createElement(_reactNative.Image, {
            style: Styles.icon,
            source: icon
          }), _react.default.createElement(_reactNative.Text, {
            style: Styles.title
          }, title), _react.default.createElement(_Radio.default, {
            id: Number(id),
            disabled: disabled,
            isChecked: checkedId === id,
            changeCheck: _this2.onCheckChange,
            bigCircleStyle: {
              width: (0, _sizes.adjustSize)(60),
              height: (0, _sizes.adjustSize)(60),
              borderWidth: (0, _sizes.adjustSize)(12)
            },
            checkedBigCircleStyle: {
              borderColor: '#f0f0f0',
              borderColorChecked: '#32BAC0'
            },
            smallCircleBg: "#fff"
          })) : null;
        });
      }
    }, {
      key: "render",
      value: function render() {
        var items = this.getItems();
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, items);
      }
    }]);
    return CurtainStyle;
  }(_react.Component);

  exports.default = CurtainStyle;
  CurtainStyle.propTypes = {
    icons: _propTypes.default.array,
    titles: _propTypes.default.arrayOf(_propTypes.default.string),
    ids: _propTypes.default.array,
    checkedId: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    disabled: _propTypes.default.bool,
    onValueChange: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabels: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityLabel),
    accessibilityHints: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityHint)
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {},
    item: {
      marginTop: (0, _sizes.adjustSize)(30),
      marginHorizontal: (0, _sizes.adjustSize)(30),
      paddingLeft: (0, _sizes.adjustSize)(57),
      paddingRight: (0, _sizes.adjustSize)(60),
      paddingVertical: (0, _sizes.adjustSize)(54),
      flexDirection: 'row',
      alignItems: 'center',
      backgroundColor: '#fff'
    },
    icon: {
      width: (0, _sizes.adjustSize)(312),
      height: (0, _sizes.adjustSize)(306),
      resizeMode: 'contain',
      marginRight: (0, _sizes.adjustSize)(57)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(45),
      color: '#000',
      flex: 1
    }
  });
},23170,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22417,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _fns = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var PrimeButton = function (_Component) {
    (0, _inherits2.default)(PrimeButton, _Component);

    function PrimeButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, PrimeButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(PrimeButton)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onPress = function () {
        var onClick = _this.props.onClick;

        if (typeof onClick === 'function') {
          onClick();
        }
      };

      return _this;
    }

    (0, _createClass2.default)(PrimeButton, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            title = _this$props.title,
            themeColor = _this$props.themeColor,
            textColor = _this$props.textColor,
            disabled = _this$props.disabled;

        if (!title) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          style: [Styles.btn, themeColor ? {
            backgroundColor: themeColor,
            borderColor: themeColor
          } : null],
          onPress: this.onPress,
          disabled: disabled
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: disabled
          }
        })), _react.default.createElement(_reactNative.Text, {
          style: [Styles.title, textColor ? {
            color: textColor
          } : null]
        }, title)));
      }
    }]);
    return PrimeButton;
  }(_react.Component);

  exports.default = PrimeButton;
  PrimeButton.propTypes = {
    title: _propTypes.default.string,
    themeColor: _propTypes.default.any,
    textColor: _propTypes.default.any,
    onClick: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  PrimeButton.defaultProps = {
    title: '',
    themeColor: '',
    textColor: '',
    onClick: _fns.NOOP,
    disabled: false
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    btn: {
      height: (0, _sizes.adjustSize)(126),
      justifyContent: 'center',
      borderWidth: Math.min(1, (0, _sizes.adjustSize)(1.5)),
      borderColor: 'rgba(0, 0, 0, 0.15)',
      borderRadius: (0, _sizes.adjustSize)(15)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(39),
      textAlign: 'center',
      color: '#000'
    }
  });
},23173,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,23137,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var isAndroid = _reactNative.Platform.OS === 'android';

  var QAList = function (_Component) {
    (0, _inherits2.default)(QAList, _Component);

    function QAList() {
      (0, _classCallCheck2.default)(this, QAList);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(QAList).apply(this, arguments));
    }

    (0, _createClass2.default)(QAList, [{
      key: "getList",
      value: function getList() {
        var _this = this;

        var list = this.props.list;

        if (!list || !list.length) {
          return [];
        }

        return list.map(function (item, index) {
          var title = item.title,
              text = item.text;
          return _react.default.createElement(_reactNative.View, {
            key: String(index),
            style: Styles.item
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: Styles.title
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityLabel: item.titleAccessibilityLabel || title,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
          })), title || ''), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: Styles.text
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityLabel: item.textAccessibilityLabel || text,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
          })), text || '', isAndroid ? '\n' : ''));
        });
      }
    }, {
      key: "render",
      value: function render() {
        var list = this.getList();

        if (!list || !list.length) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, list);
      }
    }]);
    return QAList;
  }(_react.Component);

  exports.default = QAList;
  QAList.propTypes = {
    list: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      text: _propTypes.default.string,
      textAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      titleAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
    })),
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  QAList.defaultProps = {
    list: []
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    item: {
      marginBottom: (0, _sizes.adjustSize)(45)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      fontWeight: '600',
      color: '#4C4C4C'
    },
    text: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(42),
      lineHeight: (0, _sizes.adjustSize)(78),
      color: '#7F7F7F',
      marginTop: (0, _sizes.adjustSize)(9)
    }
  });
},23176,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[11]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _CircleButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _sizes = _$$_REQUIRE(_dependencyMap[15]);

  var _fns = _$$_REQUIRE(_dependencyMap[16]);

  var _fonts = _$$_REQUIRE(_dependencyMap[17]);

  var _colors = _$$_REQUIRE(_dependencyMap[18]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[19]);

  var MultiButtons = function (_Component) {
    (0, _inherits2.default)(MultiButtons, _Component);

    function MultiButtons() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, MultiButtons);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(MultiButtons)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        activeIndex: -1
      };

      _this.onClick = function (index) {
        var onClick = _this.props.onClick;

        if (typeof onClick === 'function') {
          onClick(index);
        }
      };

      _this.getSelectors = function () {
        var _this$props = _this.props,
            items = _this$props.items,
            themeColor = _this$props.themeColor,
            disabled = _this$props.disabled,
            switchDisabled = _this$props.switchDisabled;
        var itemCount = items.length;

        var sizeLevel = _this.getSizeLevel(items);

        return items.map(function (item, index) {
          var isHorizontal = itemCount === 2;
          var hasSeparator = isHorizontal;
          var hideTitle = itemCount >= 5 || items.findIndex(function (item) {
            return item && item.icon;
          }) === -1 || itemCount >= 3 && _this.context.language !== 'zh';
          return _react.default.createElement(_react.Fragment, {
            key: index
          }, hasSeparator && index > 0 ? _react.default.createElement(_reactNative.View, {
            style: Styles.separator
          }) : null, _react.default.createElement(_CircleButton.default, (0, _extends2.default)({
            titleIsTouchable: _this.props.titleIsTouchable,
            selected: _this.props.activeIndex === index,
            showHighlight: _this.props.activeIndex === -1,
            sizeLevel: sizeLevel,
            horizontal: isHorizontal,
            themeColor: themeColor,
            disabled: disabled || switchDisabled,
            title: hideTitle ? '' : item.title,
            icon: item.icon,
            iconSelected: item.iconSelected,
            iconText: item.title || '',
            onPress: function onPress() {
              _this.onClick(index);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityLabel: item.accessibilityLabel,
            accessibilityHint: item.accessibilityHint
          }))));
        });
      };

      return _this;
    }

    (0, _createClass2.default)(MultiButtons, [{
      key: "getSizeLevel",
      value: function getSizeLevel(items) {
        var itemCount = items.length;
        return itemCount <= 2 ? 0 : itemCount === 3 ? 1 : itemCount === 4 ? 2 : 3;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            title = _this$props2.title,
            items = _this$props2.items,
            hasShadow = _this$props2.hasShadow,
            showSwitch = _this$props2.showSwitch,
            disabled = _this$props2.disabled,
            switchOn = _this$props2.switchOn,
            themeColor = _this$props2.themeColor,
            onSwitch = _this$props2.onSwitch;

        if (!items || !items.length) {
          return null;
        }

        var Wrap = hasShadow ? _ContainerWithShadowAndSeparator.default : _react.Fragment;
        var sizeLevel = this.getSizeLevel(items);
        return _react.default.createElement(Wrap, null, _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, title || showSwitch ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [Styles.header, disabled ? {
            opacity: 0.3
          } : null]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: showSwitch ? _accessibilityHelper.AccessibilityRoles.switch : _accessibilityHelper.AccessibilityPropTypes.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: showSwitch ? {
            disabled: disabled,
            checked: switchOn
          } : {
            disabled: disabled
          }
        })), title ? _react.default.createElement(_reactNative.View, {
          style: Styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title)) : null, showSwitch ? _react.default.createElement(_Switch.default, (0, _extends2.default)({
          disabled: disabled,
          value: switchOn,
          onTintColor: themeColor || _colors.ColorGreen,
          onValueChange: onSwitch
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }))) : null) : null, _react.default.createElement(_reactNative.View, {
          style: [Styles.selectors, title || showSwitch ? Styles.selectorsWithHeader : null, items.length >= 4 ? null : [Styles.selectorsPadding0, Styles.selectorsPadding1, Styles.selectorsPadding2, Styles.selectorsPadding3][sizeLevel]]
        }, this.getSelectors())));
      }
    }]);
    return MultiButtons;
  }(_react.Component);

  exports.default = MultiButtons;
  MultiButtons.contextType = _configProvider.ConfigContext;
  MultiButtons.propTypes = {
    title: _propTypes.default.string,
    activeIndex: _propTypes.default.number,
    items: _propTypes.default.arrayOf(_propTypes.default.shape({
      icon: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
      iconSelected: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
      title: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onClick: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    switchDisabled: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    showSwitch: _propTypes.default.bool,
    switchOn: _propTypes.default.bool,
    titleIsTouchable: _propTypes.default.bool,
    onSwitch: _propTypes.default.func,
    hasShadow: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  MultiButtons.defaultProps = {
    title: '',
    activeIndex: -1,
    items: [],
    onClick: _fns.NOOP,
    disabled: false,
    switchDisabled: false,
    themeColor: '',
    showSwitch: false,
    switchOn: true,
    titleIsTouchable: false,
    onSwitch: _fns.log,
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      paddingHorizontal: (0, _sizes.adjustSize)(60)
    },
    header: {
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    titleContainer: {
      flex: 1,
      height: (0, _sizes.adjustSize)(156),
      flexDirection: 'row',
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: '#000'
    },
    selectors: {
      paddingVertical: (0, _sizes.adjustSize)(60),
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center'
    },
    selectorsWithHeader: {
      paddingTop: 0
    },
    selectorsPadding0: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorsPadding1: {
      paddingHorizontal: (0, _sizes.adjustSize)(78)
    },
    selectorsPadding2: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorsPadding3: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorWithHeader: {
      paddingTop: 0
    },
    separator: {
      width: 1,
      height: (0, _sizes.adjustSize)(120),
      backgroundColor: 'rgba(0, 0, 0, 0.15)',
      marginHorizontal: (0, _sizes.adjustSize)(60)
    }
  });
},23179,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22426,22450,23095,23089,23068,23137,23071,23074,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Consumable;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _PrimeButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _colors = _$$_REQUIRE(_dependencyMap[6]);

  var _fonts = _$$_REQUIRE(_dependencyMap[7]);

  var _sizes = _$$_REQUIRE(_dependencyMap[8]);

  var _fns = _$$_REQUIRE(_dependencyMap[9]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  function Consumable(props) {
    var title = props.title,
        titleColor = props.titleColor,
        subtitle = props.subtitle,
        subtitleColor = props.subtitleColor,
        reset = props.reset,
        buy = props.buy,
        icon = props.icon,
        onBuy = props.onBuy,
        onReset = props.onReset;
    return _react.default.createElement(_reactNative.View, {
      style: Styles.container
    }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
      style: Styles.content
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
    })), icon ? _react.default.createElement(_reactNative.Image, {
      style: Styles.imageWrap,
      source: icon
    }) : null, title ? _react.default.createElement(_reactNative.Text, {
      style: [Styles.title, titleColor ? {
        color: titleColor
      } : null]
    }, title) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
      style: [Styles.subtitle, subtitleColor ? {
        color: subtitleColor
      } : null]
    }, subtitle) : null), buy && reset ? _react.default.createElement(_reactNative.View, {
      style: Styles.buttons
    }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
      style: Styles.buttonWrap,
      activeOpacity: 0.8,
      onPress: onBuy
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
      accessibilityHint: props.buyAccessibilityHint
    })), _react.default.createElement(_reactNative.Text, {
      style: Styles.button
    }, buy)), _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
      style: [Styles.buttonWrap, {
        borderLeftWidth: _reactNative.StyleSheet.hairlineWidth
      }],
      activeOpacity: 0.8,
      onPress: onReset
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
      accessibilityHint: props.resetAccessibilityHint
    })), _react.default.createElement(_reactNative.Text, {
      style: Styles.button
    }, reset))) : buy ? _react.default.createElement(_PrimeButton.default, (0, _extends2.default)({
      title: buy,
      themeColor: _colors.ColorGreen,
      textColor: "#fff",
      onClick: onBuy
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
      accessibilityHint: props.buyAccessibilityHint
    }))) : reset ? _react.default.createElement(_PrimeButton.default, (0, _extends2.default)({
      title: reset,
      themeColor: _colors.ColorGreen,
      textColor: "#fff",
      onClick: onReset
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
      accessibilityHint: props.resetAccessibilityHint
    }))) : null);
  }

  Consumable.propTypes = {
    title: _propTypes.default.string,
    titleColor: _propTypes.default.any,
    subtitle: _propTypes.default.string,
    subtitleColor: _propTypes.default.any,
    reset: _propTypes.default.string,
    buy: _propTypes.default.string,
    icon: _propTypes.default.any,
    onBuy: _propTypes.default.func,
    onReset: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    resetAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    buyAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Consumable.defaultProps = {
    title: '',
    titleColor: '',
    subtitle: '',
    subtitleColor: '',
    reset: '',
    buy: '',
    icon: null,
    onBuy: _fns.NOOP,
    onReset: _fns.NOOP
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1
    },
    content: {
      flex: 1,
      marginTop: (0, _sizes.adjustSize)(144)
    },
    imageWrap: {
      width: (0, _sizes.adjustSize)(684),
      height: (0, _sizes.adjustSize)(1056),
      alignSelf: 'center',
      resizeMode: 'contain',
      marginBottom: (0, _sizes.adjustSize)(75)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(60),
      fontWeight: '700',
      color: '#000',
      alignSelf: 'center',
      marginHorizontal: (0, _sizes.adjustSize)(72),
      marginBottom: (0, _sizes.adjustSize)(6)
    },
    subtitle: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(54),
      color: '#000',
      alignSelf: 'center',
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    buttons: {
      flexDirection: 'row',
      marginHorizontal: (0, _sizes.adjustSize)(72),
      borderWidth: _reactNative.StyleSheet.hairlineWidth,
      borderColor: 'rgba(0, 0, 0, 0.2)',
      borderRadius: (0, _sizes.adjustSize)(15)
    },
    buttonWrap: {
      flex: 1,
      height: (0, _sizes.adjustSize)(144),
      justifyContent: 'center',
      alignItems: 'center',
      borderWidth: 0,
      borderColor: 'rgba(0, 0, 0, 0.2)'
    },
    button: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(39),
      color: '#4C4C4C'
    },
    normalButton: {
      marginHorizontal: 0,
      flex: 1
    }
  });
},23182,[14305,14344,10297,10033,10318,23173,23074,23071,23068,23137,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var ImageHeader = function (_Component) {
    (0, _inherits2.default)(ImageHeader, _Component);

    function ImageHeader() {
      (0, _classCallCheck2.default)(this, ImageHeader);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ImageHeader).apply(this, arguments));
    }

    (0, _createClass2.default)(ImageHeader, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            icon = _this$props.icon,
            iconStyle = _this$props.iconStyle,
            containerStyle = _this$props.containerStyle;

        if (!icon) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [Styles.container, containerStyle]
        }, _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
          style: [Styles.icon, iconStyle],
          source: icon
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.image,
          accessibilityLabel: this.props.accessibilityLabel
        }))));
      }
    }]);
    return ImageHeader;
  }(_react.Component);

  exports.default = ImageHeader;
  ImageHeader.propTypes = {
    icon: _propTypes.default.any,
    iconStyle: _propTypes.default.any,
    containerStyle: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      paddingTop: (0, _sizes.adjustSize)(210),
      paddingBottom: (0, _sizes.adjustSize)(63),
      alignSelf: 'center',
      alignItems: 'center'
    },
    icon: {
      width: (0, _sizes.adjustSize)(540),
      height: (0, _sizes.adjustSize)(540)
    }
  });
},23185,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "91d5bce9ca8be225bb2b053f4dc68ae6",
    "name": "record_n_dark",
    "type": "png"
  });
},23188,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "16f376276d72894454290db6b390e48b",
    "name": "record_p_dark",
    "type": "png"
  });
},23191,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "1b31138db705ad4f249356650ef77801",
    "name": "record_d_dark",
    "type": "png"
  });
},23194,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7086650f0de3e98e4bbe2ffe92d605b7",
    "name": "record_n_light",
    "type": "png"
  });
},23197,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8839aec54e1ba9da8b316b117dcb4957",
    "name": "record_p_light",
    "type": "png"
  });
},23200,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a510dc8a461e519c73a775bf00221200",
    "name": "record_d_light",
    "type": "png"
  });
},23203,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/dark",
    "width": 86,
    "height": 86,
    "scales": [2, 3],
    "hash": "799ff3d06b999ba716d765af25f4e91a",
    "name": "loading_empty_dark",
    "type": "png"
  });
},23206,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/light",
    "width": 86,
    "height": 86,
    "scales": [2, 3],
    "hash": "799ff3d06b999ba716d765af25f4e91a",
    "name": "loading_empty_light",
    "type": "png"
  });
},23209,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "PopButton", {
    enumerable: true,
    get: function get() {
      return _PopButton.PopButton;
    }
  });
  Object.defineProperty(exports, "ProgressButton", {
    enumerable: true,
    get: function get() {
      return _ProgressButton.default;
    }
  });

  var _PopButton = _$$_REQUIRE(_dependencyMap[1]);

  var _ProgressButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
},23212,[14305,23215,23218]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PopButton = PopButton;
  exports.default = exports.COLORTYPE = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[6]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[7]);

  var _font = _$$_REQUIRE(_dependencyMap[8]);

  var COLORTYPE = {
    BLUELAYERWHITE: 'blueLayerWhite',
    GRAYLAYERBLACK: 'grayLayerBlack',
    GRAYLAYERBLUE: 'grayLayerBlue'
  };
  exports.COLORTYPE = COLORTYPE;
  Object.freeze(COLORTYPE);

  function PopButton(props) {
    var _context$theme, _context$theme2, _context$theme3, _context$theme4, _context$theme5, _context$theme6, _context$theme7, _context$theme8, _context$theme9, _context$theme10, _context$theme11, _context$theme12, _context$theme13, _context$theme14, _context$theme15, _context$theme16, _context$theme17, _context$theme18;

    var context = (0, _react.useContext)(_configProvider.ConfigContext);
    var buttonStyle;
    var bgColorNormal;
    var bgColorPressed;
    var titleS;
    var titleC;

    switch (props.sizeLevel) {
      case 'small':
        buttonStyle = styles.smallButton;
        titleS = styles.smallTitle;
        titleC = (_context$theme = context.theme) == null ? undefined : _context$theme.colorPrimary;
        bgColorNormal = (_context$theme2 = context.theme) == null ? undefined : _context$theme2.colorBtnGreenOpaNor;
        bgColorPressed = (_context$theme3 = context.theme) == null ? undefined : _context$theme3.colorBtnGreenOpaPres;
        break;

      case 'medium':
        buttonStyle = styles.mediumButton;
        titleS = styles.mediumTitle;
        titleC = (_context$theme4 = context.theme) == null ? undefined : _context$theme4.colorToast;
        bgColorNormal = (_context$theme5 = context.theme) == null ? undefined : _context$theme5.colorBtnGrayNor;
        bgColorPressed = (_context$theme6 = context.theme) == null ? undefined : _context$theme6.colorBtnGrayPres;
        break;

      default:
        buttonStyle = styles.regularButton;
        titleS = styles.regularTitle;
        titleC = (_context$theme7 = context.theme) == null ? undefined : _context$theme7.colorWhite2;
        bgColorNormal = (_context$theme8 = context.theme) == null ? undefined : _context$theme8.colorBtnGreenNor;
        bgColorPressed = (_context$theme9 = context.theme) == null ? undefined : _context$theme9.colorBtnGreenPres;
        break;
    }

    if (props.colorType) {
      switch (props.colorType) {
        case COLORTYPE.BLUELAYERWHITE:
          titleC = (_context$theme10 = context.theme) == null ? undefined : _context$theme10.colorWhite2;
          bgColorNormal = (_context$theme11 = context.theme) == null ? undefined : _context$theme11.colorBtnGreenNor;
          bgColorPressed = (_context$theme12 = context.theme) == null ? undefined : _context$theme12.colorBtnGreenPres;
          break;

        case COLORTYPE.GRAYLAYERBLACK:
          titleC = (_context$theme13 = context.theme) == null ? undefined : _context$theme13.colorToast;
          bgColorNormal = (_context$theme14 = context.theme) == null ? undefined : _context$theme14.colorBtnGrayNor;
          bgColorPressed = (_context$theme15 = context.theme) == null ? undefined : _context$theme15.colorBtnGrayPres;
          break;

        case COLORTYPE.GRAYLAYERBLUE:
          titleC = (_context$theme16 = context.theme) == null ? undefined : _context$theme16.colorPrimary;
          bgColorNormal = (_context$theme17 = context.theme) == null ? undefined : _context$theme17.colorBtnGrayNor;
          bgColorPressed = (_context$theme18 = context.theme) == null ? undefined : _context$theme18.colorBtnGrayPres;
          break;

        default:
          break;
      }
    }

    if (props.backgroundColor) {
      bgColorNormal = props.backgroundColor.bgColorNormal;
      bgColorPressed = props.backgroundColor.bgColorPressed;
    }

    if (props.titleColor) {
      titleC = props.titleColor;
    }

    var disabled = props.disabled;
    var opacity = disabled ? 0.3 : 1;

    function sub6string(str) {
      var len = 0;
      var resStr = '';

      for (var i = 0; i < (str == null ? undefined : str.length); i++) {
        if (str.charCodeAt(i) > 127 || str.charCodeAt(i) === 94) {
          len += 2;
        } else {
          len += 1;
        }

        if (len <= 12) {
          resStr += str.charAt(i);
        } else {
          return resStr;
        }
      }

      return resStr;
    }

    return _react.default.createElement(_reactNative.View, {
      style: [styles.container, {
        opacity: opacity
      }]
    }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
      style: [buttonStyle, {
        backgroundColor: String(bgColorNormal),
        alignItems: 'center',
        justifyContent: 'center',
        flex: 1
      }, props.style],
      underlayColor: String(bgColorPressed),
      disabled: disabled,
      onPress: props.onPress,
      onLongPress: props.onLongPress
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: 'button',
      accessibilityHint: props.accessibilityHint,
      accessibilityLabel: props.accessibilityLabel,
      accessibilityValue: props.accessibilityValue,
      accessibilityState: {
        disabled: disabled
      }
    })), _react.default.createElement(_reactNative.View, {
      style: styles.titleContainer
    }, _react.default.createElement(_reactNative.Text, {
      style: [titleS, props.titleStyle, {
        color: String(titleC)
      }],
      adjustsFontSizeToFit: props.sizeLevel === 'small',
      allowFontScaling: props.allowFontScaling,
      numberOfLines: 1
    }, props.sizeLevel === 'small' ? sub6string(props.title) : props.title))));
  }

  PopButton.defaultProps = {
    sizeLevel: 'regular',
    title: '按钮文字',
    disabled: false,
    allowFontScaling: true
  };
  PopButton.COLORTYPE = COLORTYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      flex: 1
    },
    regularButton: {
      height: 46,
      width: 306,
      borderRadius: 23
    },
    mediumButton: {
      height: 46,
      width: 147,
      borderRadius: 23
    },
    smallButton: {
      height: 34,
      width: 80,
      borderRadius: 17
    },
    titleContainer: {
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center'
    },
    regularTitle: (0, _objectSpread2.default)({
      textAlign: 'center',
      maxWidth: 306,
      fontSize: 16,
      textAlignVertical: 'center'
    }, _font.FontPrimary),
    mediumTitle: (0, _objectSpread2.default)({
      textAlign: 'center',
      maxWidth: 147,
      fontSize: 16,
      textAlignVertical: 'center'
    }, _font.FontPrimary),
    smallTitle: (0, _objectSpread2.default)({
      textAlign: 'center',
      maxWidth: 80,
      fontSize: 13,
      textAlignVertical: 'center'
    }, _font.FontPrimary)
  });

  var _default = PopButton;
  exports.default = _default;
},23215,[14308,14305,14314,14344,10297,10033,22420,22426,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = ProgressButton;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[6]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[7]);

  var Progress = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _font = _$$_REQUIRE(_dependencyMap[10]);

  function ProgressButton(props) {
    var _context$theme, _context$theme2, _context$theme3, _context$theme4;

    var context = (0, _react.useContext)(_configProvider.ConfigContext);
    var colorScheme = context.colorScheme;
    var disabled = props.disabled,
        progress = props.progress,
        animated = props.animated;
    var buttonStyle;
    var titleStyle;
    var filledBgColor = (_context$theme = context.theme) == null ? undefined : _context$theme.colorBtnGreenNor;
    var unfilledBgColor;

    switch (props.sizeLevel) {
      case 'small':
        buttonStyle = styles.smallButton;
        unfilledBgColor = (_context$theme2 = context.theme) == null ? undefined : _context$theme2.colorBtnGreenOpaNor;
        titleStyle = styles.smallTitle;
        break;

      case 'medium':
        buttonStyle = styles.mediumButton;
        unfilledBgColor = (_context$theme3 = context.theme) == null ? undefined : _context$theme3.colorBtnGrayNor;
        titleStyle = styles.mediumTitle;
        break;

      default:
        buttonStyle = styles.regularButton;
        unfilledBgColor = (_context$theme4 = context.theme) == null ? undefined : _context$theme4.colorBtnGrayNor;
        titleStyle = styles.regularTitle;
        break;
    }

    var textColor = new _DynamicColor.default('#ffffff', 'rgba(255,255,255,0.90)');
    var color = progress > 0.48 ? textColor.color(colorScheme) : '#32BAC0';
    var disabledColor = new _DynamicColor.default('rgba(76,76,76,0.3)', 'rgba(255,255,255,0.3)').color(colorScheme);

    if (disabled) {
      var _context$theme5, _context$theme6;

      unfilledBgColor = (_context$theme5 = context.theme) == null ? undefined : _context$theme5.colorBtnGrayNor;
      filledBgColor = (_context$theme6 = context.theme) == null ? undefined : _context$theme6.colorBtnGrayPres;
    }

    if (props.style) {
      buttonStyle = props.style;
    }

    var textView = disabled ? _react.default.createElement(_reactNative.Text, {
      style: [titleStyle, {
        color: disabledColor
      }]
    }, "\u7B49\u5F85") : _react.default.createElement(_reactNative.Text, {
      style: [titleStyle, {
        color: color
      }]
    }, Math.floor(progress * 10000) / 100, "%");
    return _react.default.createElement(Progress.Bar, (0, _extends2.default)({
      progress: progress,
      style: [buttonStyle, {
        justifyContent: 'center'
      }],
      height: buttonStyle.height,
      width: buttonStyle.width,
      borderRadius: buttonStyle.borderRadius,
      useNativeDriver: true,
      color: String(filledBgColor),
      unfilledColor: String(unfilledBgColor),
      borderWidth: 0,
      animated: animated
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: 'progressbar',
      accessibilityHint: props.accessibilityHint,
      accessibilityLabel: props.accessibilityLabel,
      accessibilityValue: props.accessibilityValue,
      accessibilityState: {
        disabled: disabled
      }
    })), _react.default.createElement(_reactNative.View, {
      style: [styles.container]
    }, textView));
  }

  ProgressButton.defaultProps = {
    sizeLevel: 'regular',
    animated: true,
    disabled: false,
    progress: 0
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      position: 'absolute',
      backgroundColor: 'transparent',
      alignSelf: 'center'
    },
    regularButton: {
      height: 46,
      width: 306,
      borderRadius: 23
    },
    mediumButton: {
      height: 46,
      width: 147,
      borderRadius: 23
    },
    smallButton: {
      height: 34,
      width: 80,
      borderRadius: 17
    },
    regularTitle: (0, _objectSpread2.default)({
      fontSize: 16,
      lineHeight: 22
    }, _font.FontPrimary),
    mediumTitle: (0, _objectSpread2.default)({
      fontSize: 16,
      lineHeight: 22
    }, _font.FontPrimary),
    smallTitle: (0, _objectSpread2.default)({
      fontSize: 13,
      lineHeight: 18
    }, _font.FontPrimary)
  });
},23218,[14308,14305,14314,14344,10297,10033,22420,22426,13636,22435,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.TYPE = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _Icons = _$$_REQUIRE(_dependencyMap[13]);

  var _font = _$$_REQUIRE(_dependencyMap[14]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

  var TYPE = {
    DELETE: 'DELETE',
    SECURE: 'SECURE',
    NONE: 'NONE'
  };
  exports.TYPE = TYPE;
  Object.freeze(TYPE);

  var InputView = function (_React$Component) {
    (0, _inherits2.default)(InputView, _React$Component);

    function InputView(props) {
      var _this;

      (0, _classCallCheck2.default)(this, InputView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InputView).call(this, props));
      _this.state = {
        inputValue: _this.props.defaultValue || '',
        secureState: props.type === TYPE.SECURE,
        isFocused: false
      };
      _this._onChange = _this._onChange.bind((0, _assertThisInitialized2.default)(_this));
      _this._onFocus = _this._onFocus.bind((0, _assertThisInitialized2.default)(_this));
      return _this;
    }

    (0, _createClass2.default)(InputView, [{
      key: "_onChange",
      value: function _onChange(changeText) {
        var _this$props, _this$props$textInput;

        this.setState({
          inputValue: changeText
        });

        if (this.props.onChangeText) {
          var onChangeTextOrigin = this.props.onChangeText;

          if (onChangeTextOrigin instanceof Function) {
            onChangeTextOrigin(changeText);
          }
        }

        if ((_this$props = this.props) == null ? undefined : (_this$props$textInput = _this$props.textInputProps) == null ? undefined : _this$props$textInput.onChangeText) {
          var _onChangeTextOrigin = this.props.textInputProps.onChangeText;

          if (_onChangeTextOrigin instanceof Function) {
            _onChangeTextOrigin(changeText);
          }
        }
      }
    }, {
      key: "_onFocus",
      value: function _onFocus() {
        this.setState(function (prevState) {
          return {
            isFocused: !prevState.isFocused
          };
        });
      }
    }, {
      key: "_renderRightDeleteButtonView",
      value: function _renderRightDeleteButtonView() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.touchStyle,
          onPress: function onPress() {
            _this2._onChange('');
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            height: 25,
            width: 25
          },
          source: _Icons.Icons.inputDelete
        }));
      }
    }, {
      key: "_renderRightSecureButtonView",
      value: function _renderRightSecureButtonView() {
        var _this3 = this;

        var source = this.state.secureState ? _Icons.Icons.inputEyeSecure : _Icons.Icons.inputEye;
        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.touchStyle,
          activeOpacity: 1,
          onPress: function onPress() {
            _this3.setState(function (prevState) {
              return {
                secureState: !prevState.secureState
              };
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            height: 20,
            width: 20
          },
          source: source
        }));
      }
    }, {
      key: "_notNull",
      value: function _notNull(str) {
        var result = false;

        if (str === '' || str === undefined) {
          result = false;
        }

        if (str.length > 0) {
          result = true;
        }

        return result;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme, _this$context$theme2, _this$props$textInput2, _this$context$theme3, _this$context$theme5, _this$context$theme6, _this$context$theme7;

        var _this$state = this.state,
            inputValue = _this$state.inputValue,
            secureState = _this$state.secureState,
            isFocused = _this$state.isFocused;
        var _this$props2 = this.props,
            type = _this$props2.type,
            isCorrect = _this$props2.isCorrect;
        var greenBorder = this.props.borderColor ? this.props.borderColor : String((_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBtnGreenNor);
        var borderColor = isFocused && this._notNull(inputValue) ? greenBorder : 'transparent';

        _reactNativeUiKitten.RkTheme.setType('RkTextInput', 'textinput', {
          input: (0, _objectSpread2.default)({
            marginVertical: 0,
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorBlack,
            marginLeft: 0,
            fontSize: 16
          }, _font.FontPrimary),
          marginLeft: 16,
          flex: 1,
          underlineWidth: 0,
          marginVertical: 0,
          placeholderTextColor: ((_this$props$textInput2 = this.props.textInputProps) == null ? undefined : _this$props$textInput2.placeholderTextColor) || ((_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorPlaceHolder),
          minHeight: 40,
          borderRadius: 10
        });

        if (!isCorrect) {
          var _this$context$theme4;

          borderColor = String((_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorWarn);
        }

        if (type === TYPE.DELETE) {
          this.renderRight = this._renderRightDeleteButtonView();
        } else if (type === TYPE.SECURE) {
          this.renderRight = this._renderRightSecureButtonView();
        } else {
          this.renderRight = null;
        }

        var textInput = _react.default.createElement(_reactNativeUiKitten.RkTextInput, (0, _extends2.default)({
          placeholder: this.props.placeholder,
          value: inputValue
        }, this.props.textInputProps || {}, {
          onChangeText: this._onChange,
          secureTextEntry: secureState,
          onFocus: this._onFocus,
          onBlur: this._onFocus,
          selectionColor: String((_this$context$theme5 = this.context.theme) == null ? undefined : _this$context$theme5.colorBtnGreenNor),
          rkType: "textinput"
        }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props))));

        return _react.default.createElement(_reactNative.View, {
          style: [styles.containerPink, this.props.style, {
            borderColor: !isCorrect ? String((_this$context$theme6 = this.context.theme) == null ? undefined : _this$context$theme6.colorInputBorder) : 'transparent'
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            borderColor: borderColor,
            flex: 1,
            backgroundColor: String((_this$context$theme7 = this.context.theme) == null ? undefined : _this$context$theme7.colorInputBackground)
          }]
        }, textInput, this.renderRight));
      }
    }]);
    return InputView;
  }(_react.default.Component);

  InputView.TYPE = TYPE;
  InputView.contextType = _configProvider.ConfigContext;
  InputView.defaultProps = {
    type: TYPE.NONE,
    placeholder: '自定义占位字符',
    defaultValue: '自定义默认值',
    textInputProps: {
      autoFocus: true
    },
    isCorrect: true
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      height: 48,
      alignItems: 'center',
      justifyContent: 'flex-start',
      borderRadius: 10,
      borderWidth: 2
    },
    containerPink: {
      flexDirection: 'row',
      height: 54,
      alignItems: 'center',
      justifyContent: 'center',
      borderRadius: 12,
      borderWidth: 3
    },
    touchStyle: {
      marginHorizontal: 10,
      height: 22,
      width: 22,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    }
  });

  var _default = InputView;
  exports.default = _default;
},23221,[14305,14344,14314,14320,14323,14371,14377,14374,14386,10297,10033,11251,22420,23080,23041,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "796359b54e6ebf09c60cc97942c69dcf",
    "name": "delete-nor",
    "type": "png"
  });
},23224,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "81767e65ea332203ab28f5fc32f11695",
    "name": "eyeSecure_light",
    "type": "png"
  });
},23227,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "e8e6ac4aa47886abacbaafcc738edee7",
    "name": "eye_light",
    "type": "png"
  });
},23230,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "53f864756e8fabd4e6e89380ceba4454",
    "name": "L-loading",
    "type": "png"
  });
},23233,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "f22150a1c224dd7147d337586d7cfb0f",
    "name": "D-loading",
    "type": "png"
  });
},23236,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var json_stringify = _$$_REQUIRE(_dependencyMap[0]).stringify;

  var json_parse = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = function (options) {
    return {
      parse: json_parse(options),
      stringify: json_stringify
    };
  };

  module.exports.parse = json_parse();
  module.exports.stringify = json_stringify;
},23239,[23242,23248]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var BigNumber = _$$_REQUIRE(_dependencyMap[0]);

  var JSON = module.exports;

  (function () {
    'use strict';

    var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        gap,
        indent,
        meta = {
      '\b': '\\b',
      '\t': '\\t',
      '\n': '\\n',
      '\f': '\\f',
      '\r': '\\r',
      '"': '\\"',
      '\\': '\\\\'
    },
        rep;

    function quote(string) {
      escapable.lastIndex = 0;
      return escapable.test(string) ? '"' + string.replace(escapable, function (a) {
        var c = meta[a];
        return typeof c === 'string' ? c : "\\u" + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
      }) + '"' : '"' + string + '"';
    }

    function str(key, holder) {
      var i,
          k,
          v,
          length,
          mind = gap,
          partial,
          value = holder[key],
          isBigNumber = value != null && (value instanceof BigNumber || BigNumber.isBigNumber(value));

      if (value && typeof value === 'object' && typeof value.toJSON === 'function') {
        value = value.toJSON(key);
      }

      if (typeof rep === 'function') {
        value = rep.call(holder, key, value);
      }

      switch (typeof value) {
        case 'string':
          if (isBigNumber) {
            return value;
          } else {
            return quote(value);
          }

        case 'number':
          return isFinite(value) ? String(value) : 'null';

        case 'boolean':
        case 'null':
        case 'bigint':
          return String(value);

        case 'object':
          if (!value) {
            return 'null';
          }

          gap += indent;
          partial = [];

          if (Object.prototype.toString.apply(value) === '[object Array]') {
            length = value.length;

            for (i = 0; i < length; i += 1) {
              partial[i] = str(i, value) || 'null';
            }

            v = partial.length === 0 ? '[]' : gap ? '[\n' + gap + partial.join(',\n' + gap) + '\n' + mind + ']' : '[' + partial.join(',') + ']';
            gap = mind;
            return v;
          }

          if (rep && typeof rep === 'object') {
            length = rep.length;

            for (i = 0; i < length; i += 1) {
              if (typeof rep[i] === 'string') {
                k = rep[i];
                v = str(k, value);

                if (v) {
                  partial.push(quote(k) + (gap ? ': ' : ':') + v);
                }
              }
            }
          } else {
            Object.keys(value).forEach(function (k) {
              var v = str(k, value);

              if (v) {
                partial.push(quote(k) + (gap ? ': ' : ':') + v);
              }
            });
          }

          v = partial.length === 0 ? '{}' : gap ? '{\n' + gap + partial.join(',\n' + gap) + '\n' + mind + '}' : '{' + partial.join(',') + '}';
          gap = mind;
          return v;
      }
    }

    if (typeof JSON.stringify !== 'function') {
      JSON.stringify = function (value, replacer, space) {
        var i;
        gap = '';
        indent = '';

        if (typeof space === 'number') {
          for (i = 0; i < space; i += 1) {
            indent += ' ';
          }
        } else if (typeof space === 'string') {
          indent = space;
        }

        rep = replacer;

        if (replacer && typeof replacer !== 'function' && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {
          throw new Error('JSON.stringify');
        }

        return str('', {
          '': value
        });
      };
    }
  })();
},23242,[23245]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  ;

  (function (globalObject) {
    'use strict';

    var BigNumber,
        isNumeric = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
        mathceil = Math.ceil,
        mathfloor = Math.floor,
        bignumberError = '[BigNumber Error] ',
        tooManyDigits = "[BigNumber Error] Number primitive has more than 15 significant digits: ",
        BASE = 1e14,
        LOG_BASE = 14,
        MAX_SAFE_INTEGER = 0x1fffffffffffff,
        POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],
        SQRT_BASE = 1e7,
        MAX = 1E9;

    function clone(configObject) {
      var div,
          convertBase,
          parseNumeric,
          P = BigNumber.prototype = {
        constructor: BigNumber,
        toString: null,
        valueOf: null
      },
          ONE = new BigNumber(1),
          DECIMAL_PLACES = 20,
          ROUNDING_MODE = 4,
          TO_EXP_NEG = -7,
          TO_EXP_POS = 21,
          MIN_EXP = -10000000,
          MAX_EXP = 1e7,
          CRYPTO = false,
          MODULO_MODE = 1,
          POW_PRECISION = 0,
          FORMAT = {
        prefix: '',
        groupSize: 3,
        secondaryGroupSize: 0,
        groupSeparator: ',',
        decimalSeparator: '.',
        fractionGroupSize: 0,
        fractionGroupSeparator: '\xA0',
        suffix: ''
      },
          ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';

      function BigNumber(v, b) {
        var alphabet,
            c,
            caseChanged,
            e,
            i,
            isNum,
            len,
            str,
            x = this;
        if (!(x instanceof BigNumber)) return new BigNumber(v, b);

        if (b == null) {
          if (v && v._isBigNumber === true) {
            x.s = v.s;

            if (!v.c || v.e > MAX_EXP) {
              x.c = x.e = null;
            } else if (v.e < MIN_EXP) {
              x.c = [x.e = 0];
            } else {
              x.e = v.e;
              x.c = v.c.slice();
            }

            return;
          }

          if ((isNum = typeof v == 'number') && v * 0 == 0) {
            x.s = 1 / v < 0 ? (v = -v, -1) : 1;

            if (v === ~~v) {
              for (e = 0, i = v; i >= 10; i /= 10, e++) {
                ;
              }

              if (e > MAX_EXP) {
                x.c = x.e = null;
              } else {
                x.e = e;
                x.c = [v];
              }

              return;
            }

            str = String(v);
          } else {
            if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);
            x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;
          }

          if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');

          if ((i = str.search(/e/i)) > 0) {
            if (e < 0) e = i;
            e += +str.slice(i + 1);
            str = str.substring(0, i);
          } else if (e < 0) {
            e = str.length;
          }
        } else {
          intCheck(b, 2, ALPHABET.length, 'Base');

          if (b == 10) {
            x = new BigNumber(v);
            return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);
          }

          str = String(v);

          if (isNum = typeof v == 'number') {
            if (v * 0 != 0) return parseNumeric(x, str, isNum, b);
            x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;

            if (BigNumber.DEBUG && str.replace(/^0\.0*|\./, '').length > 15) {
              throw Error(tooManyDigits + v);
            }
          } else {
            x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;
          }

          alphabet = ALPHABET.slice(0, b);
          e = i = 0;

          for (len = str.length; i < len; i++) {
            if (alphabet.indexOf(c = str.charAt(i)) < 0) {
              if (c == '.') {
                if (i > e) {
                  e = len;
                  continue;
                }
              } else if (!caseChanged) {
                if (str == str.toUpperCase() && (str = str.toLowerCase()) || str == str.toLowerCase() && (str = str.toUpperCase())) {
                  caseChanged = true;
                  i = -1;
                  e = 0;
                  continue;
                }
              }

              return parseNumeric(x, String(v), isNum, b);
            }
          }

          isNum = false;
          str = convertBase(str, b, 10, x.s);
          if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');else e = str.length;
        }

        for (i = 0; str.charCodeAt(i) === 48; i++) {
          ;
        }

        for (len = str.length; str.charCodeAt(--len) === 48;) {
          ;
        }

        if (str = str.slice(i, ++len)) {
          len -= i;

          if (isNum && BigNumber.DEBUG && len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {
            throw Error(tooManyDigits + x.s * v);
          }

          if ((e = e - i - 1) > MAX_EXP) {
            x.c = x.e = null;
          } else if (e < MIN_EXP) {
            x.c = [x.e = 0];
          } else {
            x.e = e;
            x.c = [];
            i = (e + 1) % LOG_BASE;
            if (e < 0) i += LOG_BASE;

            if (i < len) {
              if (i) x.c.push(+str.slice(0, i));

              for (len -= LOG_BASE; i < len;) {
                x.c.push(+str.slice(i, i += LOG_BASE));
              }

              i = LOG_BASE - (str = str.slice(i)).length;
            } else {
              i -= len;
            }

            for (; i--; str += '0') {
              ;
            }

            x.c.push(+str);
          }
        } else {
          x.c = [x.e = 0];
        }
      }

      BigNumber.clone = clone;
      BigNumber.ROUND_UP = 0;
      BigNumber.ROUND_DOWN = 1;
      BigNumber.ROUND_CEIL = 2;
      BigNumber.ROUND_FLOOR = 3;
      BigNumber.ROUND_HALF_UP = 4;
      BigNumber.ROUND_HALF_DOWN = 5;
      BigNumber.ROUND_HALF_EVEN = 6;
      BigNumber.ROUND_HALF_CEIL = 7;
      BigNumber.ROUND_HALF_FLOOR = 8;
      BigNumber.EUCLID = 9;

      BigNumber.config = BigNumber.set = function (obj) {
        var p, v;

        if (obj != null) {
          if (typeof obj == 'object') {
            if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {
              v = obj[p];
              intCheck(v, 0, MAX, p);
              DECIMAL_PLACES = v;
            }

            if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {
              v = obj[p];
              intCheck(v, 0, 8, p);
              ROUNDING_MODE = v;
            }

            if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {
              v = obj[p];

              if (v && v.pop) {
                intCheck(v[0], -1000000000, 0, p);
                intCheck(v[1], 0, MAX, p);
                TO_EXP_NEG = v[0];
                TO_EXP_POS = v[1];
              } else {
                intCheck(v, -1000000000, MAX, p);
                TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);
              }
            }

            if (obj.hasOwnProperty(p = 'RANGE')) {
              v = obj[p];

              if (v && v.pop) {
                intCheck(v[0], -1000000000, -1, p);
                intCheck(v[1], 1, MAX, p);
                MIN_EXP = v[0];
                MAX_EXP = v[1];
              } else {
                intCheck(v, -1000000000, MAX, p);

                if (v) {
                  MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);
                } else {
                  throw Error(bignumberError + p + ' cannot be zero: ' + v);
                }
              }
            }

            if (obj.hasOwnProperty(p = 'CRYPTO')) {
              v = obj[p];

              if (v === !!v) {
                if (v) {
                  if (typeof crypto != 'undefined' && crypto && (crypto.getRandomValues || crypto.randomBytes)) {
                    CRYPTO = v;
                  } else {
                    CRYPTO = !v;
                    throw Error("[BigNumber Error] crypto unavailable");
                  }
                } else {
                  CRYPTO = v;
                }
              } else {
                throw Error(bignumberError + p + ' not true or false: ' + v);
              }
            }

            if (obj.hasOwnProperty(p = 'MODULO_MODE')) {
              v = obj[p];
              intCheck(v, 0, 9, p);
              MODULO_MODE = v;
            }

            if (obj.hasOwnProperty(p = 'POW_PRECISION')) {
              v = obj[p];
              intCheck(v, 0, MAX, p);
              POW_PRECISION = v;
            }

            if (obj.hasOwnProperty(p = 'FORMAT')) {
              v = obj[p];
              if (typeof v == 'object') FORMAT = v;else throw Error(bignumberError + p + ' not an object: ' + v);
            }

            if (obj.hasOwnProperty(p = 'ALPHABET')) {
              v = obj[p];

              if (typeof v == 'string' && !/^.$|[+-.\s]|(.).*\1/.test(v)) {
                ALPHABET = v;
              } else {
                throw Error(bignumberError + p + ' invalid: ' + v);
              }
            }
          } else {
            throw Error("[BigNumber Error] Object expected: " + obj);
          }
        }

        return {
          DECIMAL_PLACES: DECIMAL_PLACES,
          ROUNDING_MODE: ROUNDING_MODE,
          EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],
          RANGE: [MIN_EXP, MAX_EXP],
          CRYPTO: CRYPTO,
          MODULO_MODE: MODULO_MODE,
          POW_PRECISION: POW_PRECISION,
          FORMAT: FORMAT,
          ALPHABET: ALPHABET
        };
      };

      BigNumber.isBigNumber = function (v) {
        if (!v || v._isBigNumber !== true) return false;
        if (!BigNumber.DEBUG) return true;
        var i,
            n,
            c = v.c,
            e = v.e,
            s = v.s;

        out: if ({}.toString.call(c) == '[object Array]') {
          if ((s === 1 || s === -1) && e >= -1000000000 && e <= MAX && e === mathfloor(e)) {
            if (c[0] === 0) {
              if (e === 0 && c.length === 1) return true;
              break out;
            }

            i = (e + 1) % LOG_BASE;
            if (i < 1) i += LOG_BASE;

            if (String(c[0]).length == i) {
              for (i = 0; i < c.length; i++) {
                n = c[i];
                if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;
              }

              if (n !== 0) return true;
            }
          }
        } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {
          return true;
        }

        throw Error("[BigNumber Error] Invalid BigNumber: " + v);
      };

      BigNumber.maximum = BigNumber.max = function () {
        return maxOrMin(arguments, P.lt);
      };

      BigNumber.minimum = BigNumber.min = function () {
        return maxOrMin(arguments, P.gt);
      };

      BigNumber.random = function () {
        var pow2_53 = 0x20000000000000;
        var random53bitInt = Math.random() * pow2_53 & 0x1fffff ? function () {
          return mathfloor(Math.random() * pow2_53);
        } : function () {
          return (Math.random() * 0x40000000 | 0) * 0x800000 + (Math.random() * 0x800000 | 0);
        };
        return function (dp) {
          var a,
              b,
              e,
              k,
              v,
              i = 0,
              c = [],
              rand = new BigNumber(ONE);
          if (dp == null) dp = DECIMAL_PLACES;else intCheck(dp, 0, MAX);
          k = mathceil(dp / LOG_BASE);

          if (CRYPTO) {
            if (crypto.getRandomValues) {
              a = crypto.getRandomValues(new Uint32Array(k *= 2));

              for (; i < k;) {
                v = a[i] * 0x20000 + (a[i + 1] >>> 11);

                if (v >= 9e15) {
                  b = crypto.getRandomValues(new Uint32Array(2));
                  a[i] = b[0];
                  a[i + 1] = b[1];
                } else {
                  c.push(v % 1e14);
                  i += 2;
                }
              }

              i = k / 2;
            } else if (crypto.randomBytes) {
              a = crypto.randomBytes(k *= 7);

              for (; i < k;) {
                v = (a[i] & 31) * 0x1000000000000 + a[i + 1] * 0x10000000000 + a[i + 2] * 0x100000000 + a[i + 3] * 0x1000000 + (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];

                if (v >= 9e15) {
                  crypto.randomBytes(7).copy(a, i);
                } else {
                  c.push(v % 1e14);
                  i += 7;
                }
              }

              i = k / 7;
            } else {
              CRYPTO = false;
              throw Error("[BigNumber Error] crypto unavailable");
            }
          }

          if (!CRYPTO) {
            for (; i < k;) {
              v = random53bitInt();
              if (v < 9e15) c[i++] = v % 1e14;
            }
          }

          k = c[--i];
          dp %= LOG_BASE;

          if (k && dp) {
            v = POWS_TEN[LOG_BASE - dp];
            c[i] = mathfloor(k / v) * v;
          }

          for (; c[i] === 0; c.pop(), i--) {
            ;
          }

          if (i < 0) {
            c = [e = 0];
          } else {
            for (e = -1; c[0] === 0; c.splice(0, 1), e -= LOG_BASE) {
              ;
            }

            for (i = 1, v = c[0]; v >= 10; v /= 10, i++) {
              ;
            }

            if (i < LOG_BASE) e -= LOG_BASE - i;
          }

          rand.e = e;
          rand.c = c;
          return rand;
        };
      }();

      BigNumber.sum = function () {
        var i = 1,
            args = arguments,
            sum = new BigNumber(args[0]);

        for (; i < args.length;) {
          sum = sum.plus(args[i++]);
        }

        return sum;
      };

      convertBase = function () {
        var decimal = '0123456789';

        function toBaseOut(str, baseIn, baseOut, alphabet) {
          var j,
              arr = [0],
              arrL,
              i = 0,
              len = str.length;

          for (; i < len;) {
            for (arrL = arr.length; arrL--; arr[arrL] *= baseIn) {
              ;
            }

            arr[0] += alphabet.indexOf(str.charAt(i++));

            for (j = 0; j < arr.length; j++) {
              if (arr[j] > baseOut - 1) {
                if (arr[j + 1] == null) arr[j + 1] = 0;
                arr[j + 1] += arr[j] / baseOut | 0;
                arr[j] %= baseOut;
              }
            }
          }

          return arr.reverse();
        }

        return function (str, baseIn, baseOut, sign, callerIsToString) {
          var alphabet,
              d,
              e,
              k,
              r,
              x,
              xc,
              y,
              i = str.indexOf('.'),
              dp = DECIMAL_PLACES,
              rm = ROUNDING_MODE;

          if (i >= 0) {
            k = POW_PRECISION;
            POW_PRECISION = 0;
            str = str.replace('.', '');
            y = new BigNumber(baseIn);
            x = y.pow(str.length - i);
            POW_PRECISION = k;
            y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'), 10, baseOut, decimal);
            y.e = y.c.length;
          }

          xc = toBaseOut(str, baseIn, baseOut, callerIsToString ? (alphabet = ALPHABET, decimal) : (alphabet = decimal, ALPHABET));
          e = k = xc.length;

          for (; xc[--k] == 0; xc.pop()) {
            ;
          }

          if (!xc[0]) return alphabet.charAt(0);

          if (i < 0) {
            --e;
          } else {
            x.c = xc;
            x.e = e;
            x.s = sign;
            x = div(x, y, dp, rm, baseOut);
            xc = x.c;
            r = x.r;
            e = x.e;
          }

          d = e + dp + 1;
          i = xc[d];
          k = baseOut / 2;
          r = r || d < 0 || xc[d + 1] != null;
          r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : i > k || i == k && (rm == 4 || r || rm == 6 && xc[d - 1] & 1 || rm == (x.s < 0 ? 8 : 7));

          if (d < 1 || !xc[0]) {
            str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);
          } else {
            xc.length = d;

            if (r) {
              for (--baseOut; ++xc[--d] > baseOut;) {
                xc[d] = 0;

                if (!d) {
                  ++e;
                  xc = [1].concat(xc);
                }
              }
            }

            for (k = xc.length; !xc[--k];) {
              ;
            }

            for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++])) {
              ;
            }

            str = toFixedPoint(str, e, alphabet.charAt(0));
          }

          return str;
        };
      }();

      div = function () {
        function multiply(x, k, base) {
          var m,
              temp,
              xlo,
              xhi,
              carry = 0,
              i = x.length,
              klo = k % SQRT_BASE,
              khi = k / SQRT_BASE | 0;

          for (x = x.slice(); i--;) {
            xlo = x[i] % SQRT_BASE;
            xhi = x[i] / SQRT_BASE | 0;
            m = khi * xlo + xhi * klo;
            temp = klo * xlo + m % SQRT_BASE * SQRT_BASE + carry;
            carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;
            x[i] = temp % base;
          }

          if (carry) x = [carry].concat(x);
          return x;
        }

        function compare(a, b, aL, bL) {
          var i, cmp;

          if (aL != bL) {
            cmp = aL > bL ? 1 : -1;
          } else {
            for (i = cmp = 0; i < aL; i++) {
              if (a[i] != b[i]) {
                cmp = a[i] > b[i] ? 1 : -1;
                break;
              }
            }
          }

          return cmp;
        }

        function subtract(a, b, aL, base) {
          var i = 0;

          for (; aL--;) {
            a[aL] -= i;
            i = a[aL] < b[aL] ? 1 : 0;
            a[aL] = i * base + a[aL] - b[aL];
          }

          for (; !a[0] && a.length > 1; a.splice(0, 1)) {
            ;
          }
        }

        return function (x, y, dp, rm, base) {
          var cmp,
              e,
              i,
              more,
              n,
              prod,
              prodL,
              q,
              qc,
              rem,
              remL,
              rem0,
              xi,
              xL,
              yc0,
              yL,
              yz,
              s = x.s == y.s ? 1 : -1,
              xc = x.c,
              yc = y.c;

          if (!xc || !xc[0] || !yc || !yc[0]) {
            return new BigNumber(!x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN : xc && xc[0] == 0 || !yc ? s * 0 : s / 0);
          }

          q = new BigNumber(s);
          qc = q.c = [];
          e = x.e - y.e;
          s = dp + e + 1;

          if (!base) {
            base = BASE;
            e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);
            s = s / LOG_BASE | 0;
          }

          for (i = 0; yc[i] == (xc[i] || 0); i++) {
            ;
          }

          if (yc[i] > (xc[i] || 0)) e--;

          if (s < 0) {
            qc.push(1);
            more = true;
          } else {
            xL = xc.length;
            yL = yc.length;
            i = 0;
            s += 2;
            n = mathfloor(base / (yc[0] + 1));

            if (n > 1) {
              yc = multiply(yc, n, base);
              xc = multiply(xc, n, base);
              yL = yc.length;
              xL = xc.length;
            }

            xi = yL;
            rem = xc.slice(0, yL);
            remL = rem.length;

            for (; remL < yL; rem[remL++] = 0) {
              ;
            }

            yz = yc.slice();
            yz = [0].concat(yz);
            yc0 = yc[0];
            if (yc[1] >= base / 2) yc0++;

            do {
              n = 0;
              cmp = compare(yc, rem, yL, remL);

              if (cmp < 0) {
                rem0 = rem[0];
                if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);
                n = mathfloor(rem0 / yc0);

                if (n > 1) {
                  if (n >= base) n = base - 1;
                  prod = multiply(yc, n, base);
                  prodL = prod.length;
                  remL = rem.length;

                  while (compare(prod, rem, prodL, remL) == 1) {
                    n--;
                    subtract(prod, yL < prodL ? yz : yc, prodL, base);
                    prodL = prod.length;
                    cmp = 1;
                  }
                } else {
                  if (n == 0) {
                    cmp = n = 1;
                  }

                  prod = yc.slice();
                  prodL = prod.length;
                }

                if (prodL < remL) prod = [0].concat(prod);
                subtract(rem, prod, remL, base);
                remL = rem.length;

                if (cmp == -1) {
                  while (compare(yc, rem, yL, remL) < 1) {
                    n++;
                    subtract(rem, yL < remL ? yz : yc, remL, base);
                    remL = rem.length;
                  }
                }
              } else if (cmp === 0) {
                n++;
                rem = [0];
              }

              qc[i++] = n;

              if (rem[0]) {
                rem[remL++] = xc[xi] || 0;
              } else {
                rem = [xc[xi]];
                remL = 1;
              }
            } while ((xi++ < xL || rem[0] != null) && s--);

            more = rem[0] != null;
            if (!qc[0]) qc.splice(0, 1);
          }

          if (base == BASE) {
            for (i = 1, s = qc[0]; s >= 10; s /= 10, i++) {
              ;
            }

            round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);
          } else {
            q.e = e;
            q.r = +more;
          }

          return q;
        };
      }();

      function format(n, i, rm, id) {
        var c0, e, ne, len, str;
        if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
        if (!n.c) return n.toString();
        c0 = n.c[0];
        ne = n.e;

        if (i == null) {
          str = coeffToString(n.c);
          str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS) ? toExponential(str, ne) : toFixedPoint(str, ne, '0');
        } else {
          n = round(new BigNumber(n), i, rm);
          e = n.e;
          str = coeffToString(n.c);
          len = str.length;

          if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {
            for (; len < i; str += '0', len++) {
              ;
            }

            str = toExponential(str, e);
          } else {
            i -= ne;
            str = toFixedPoint(str, e, '0');

            if (e + 1 > len) {
              if (--i > 0) for (str += '.'; i--; str += '0') {
                ;
              }
            } else {
              i += e - len;

              if (i > 0) {
                if (e + 1 == len) str += '.';

                for (; i--; str += '0') {
                  ;
                }
              }
            }
          }
        }

        return n.s < 0 && c0 ? '-' + str : str;
      }

      function maxOrMin(args, method) {
        var n,
            i = 1,
            m = new BigNumber(args[0]);

        for (; i < args.length; i++) {
          n = new BigNumber(args[i]);

          if (!n.s) {
            m = n;
            break;
          } else if (method.call(m, n)) {
            m = n;
          }
        }

        return m;
      }

      function normalise(n, c, e) {
        var i = 1,
            j = c.length;

        for (; !c[--j]; c.pop()) {
          ;
        }

        for (j = c[0]; j >= 10; j /= 10, i++) {
          ;
        }

        if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {
          n.c = n.e = null;
        } else if (e < MIN_EXP) {
          n.c = [n.e = 0];
        } else {
          n.e = e;
          n.c = c;
        }

        return n;
      }

      parseNumeric = function () {
        var basePrefix = /^(-?)0([xbo])(?=\w[\w.]*$)/i,
            dotAfter = /^([^.]+)\.$/,
            dotBefore = /^\.([^.]+)$/,
            isInfinityOrNaN = /^-?(Infinity|NaN)$/,
            whitespaceOrPlus = /^\s*\+(?=[\w.])|^\s+|\s+$/g;
        return function (x, str, isNum, b) {
          var base,
              s = isNum ? str : str.replace(whitespaceOrPlus, '');

          if (isInfinityOrNaN.test(s)) {
            x.s = isNaN(s) ? null : s < 0 ? -1 : 1;
          } else {
            if (!isNum) {
              s = s.replace(basePrefix, function (m, p1, p2) {
                base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;
                return !b || b == base ? p1 : m;
              });

              if (b) {
                base = b;
                s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');
              }

              if (str != s) return new BigNumber(s, base);
            }

            if (BigNumber.DEBUG) {
              throw Error("[BigNumber Error] Not a" + (b ? ' base ' + b : '') + ' number: ' + str);
            }

            x.s = null;
          }

          x.c = x.e = null;
        };
      }();

      function round(x, sd, rm, r) {
        var d,
            i,
            j,
            k,
            n,
            ni,
            rd,
            xc = x.c,
            pows10 = POWS_TEN;

        if (xc) {
          out: {
            for (d = 1, k = xc[0]; k >= 10; k /= 10, d++) {
              ;
            }

            i = sd - d;

            if (i < 0) {
              i += LOG_BASE;
              j = sd;
              n = xc[ni = 0];
              rd = n / pows10[d - j - 1] % 10 | 0;
            } else {
              ni = mathceil((i + 1) / LOG_BASE);

              if (ni >= xc.length) {
                if (r) {
                  for (; xc.length <= ni; xc.push(0)) {
                    ;
                  }

                  n = rd = 0;
                  d = 1;
                  i %= LOG_BASE;
                  j = i - LOG_BASE + 1;
                } else {
                  break out;
                }
              } else {
                n = k = xc[ni];

                for (d = 1; k >= 10; k /= 10, d++) {
                  ;
                }

                i %= LOG_BASE;
                j = i - LOG_BASE + d;
                rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;
              }
            }

            r = r || sd < 0 || xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);
            r = rm < 4 ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 && (i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10 & 1 || rm == (x.s < 0 ? 8 : 7));

            if (sd < 1 || !xc[0]) {
              xc.length = 0;

              if (r) {
                sd -= x.e + 1;
                xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];
                x.e = -sd || 0;
              } else {
                xc[0] = x.e = 0;
              }

              return x;
            }

            if (i == 0) {
              xc.length = ni;
              k = 1;
              ni--;
            } else {
              xc.length = ni + 1;
              k = pows10[LOG_BASE - i];
              xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;
            }

            if (r) {
              for (;;) {
                if (ni == 0) {
                  for (i = 1, j = xc[0]; j >= 10; j /= 10, i++) {
                    ;
                  }

                  j = xc[0] += k;

                  for (k = 1; j >= 10; j /= 10, k++) {
                    ;
                  }

                  if (i != k) {
                    x.e++;
                    if (xc[0] == BASE) xc[0] = 1;
                  }

                  break;
                } else {
                  xc[ni] += k;
                  if (xc[ni] != BASE) break;
                  xc[ni--] = 0;
                  k = 1;
                }
              }
            }

            for (i = xc.length; xc[--i] === 0; xc.pop()) {
              ;
            }
          }

          if (x.e > MAX_EXP) {
            x.c = x.e = null;
          } else if (x.e < MIN_EXP) {
            x.c = [x.e = 0];
          }
        }

        return x;
      }

      function valueOf(n) {
        var str,
            e = n.e;
        if (e === null) return n.toString();
        str = coeffToString(n.c);
        str = e <= TO_EXP_NEG || e >= TO_EXP_POS ? toExponential(str, e) : toFixedPoint(str, e, '0');
        return n.s < 0 ? '-' + str : str;
      }

      P.absoluteValue = P.abs = function () {
        var x = new BigNumber(this);
        if (x.s < 0) x.s = 1;
        return x;
      };

      P.comparedTo = function (y, b) {
        return compare(this, new BigNumber(y, b));
      };

      P.decimalPlaces = P.dp = function (dp, rm) {
        var c,
            n,
            v,
            x = this;

        if (dp != null) {
          intCheck(dp, 0, MAX);
          if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
          return round(new BigNumber(x), dp + x.e + 1, rm);
        }

        if (!(c = x.c)) return null;
        n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;
        if (v = c[v]) for (; v % 10 == 0; v /= 10, n--) {
          ;
        }
        if (n < 0) n = 0;
        return n;
      };

      P.dividedBy = P.div = function (y, b) {
        return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);
      };

      P.dividedToIntegerBy = P.idiv = function (y, b) {
        return div(this, new BigNumber(y, b), 0, 1);
      };

      P.exponentiatedBy = P.pow = function (n, m) {
        var half,
            isModExp,
            i,
            k,
            more,
            nIsBig,
            nIsNeg,
            nIsOdd,
            y,
            x = this;
        n = new BigNumber(n);

        if (n.c && !n.isInteger()) {
          throw Error("[BigNumber Error] Exponent not an integer: " + valueOf(n));
        }

        if (m != null) m = new BigNumber(m);
        nIsBig = n.e > 14;

        if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {
          y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));
          return m ? y.mod(m) : y;
        }

        nIsNeg = n.s < 0;

        if (m) {
          if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);
          isModExp = !nIsNeg && x.isInteger() && m.isInteger();
          if (isModExp) x = x.mod(m);
        } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0 ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7 : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {
          k = x.s < 0 && isOdd(n) ? -0 : 0;
          if (x.e > -1) k = 1 / k;
          return new BigNumber(nIsNeg ? 1 / k : k);
        } else if (POW_PRECISION) {
          k = mathceil(POW_PRECISION / LOG_BASE + 2);
        }

        if (nIsBig) {
          half = new BigNumber(0.5);
          if (nIsNeg) n.s = 1;
          nIsOdd = isOdd(n);
        } else {
          i = Math.abs(+valueOf(n));
          nIsOdd = i % 2;
        }

        y = new BigNumber(ONE);

        for (;;) {
          if (nIsOdd) {
            y = y.times(x);
            if (!y.c) break;

            if (k) {
              if (y.c.length > k) y.c.length = k;
            } else if (isModExp) {
              y = y.mod(m);
            }
          }

          if (i) {
            i = mathfloor(i / 2);
            if (i === 0) break;
            nIsOdd = i % 2;
          } else {
            n = n.times(half);
            round(n, n.e + 1, 1);

            if (n.e > 14) {
              nIsOdd = isOdd(n);
            } else {
              i = +valueOf(n);
              if (i === 0) break;
              nIsOdd = i % 2;
            }
          }

          x = x.times(x);

          if (k) {
            if (x.c && x.c.length > k) x.c.length = k;
          } else if (isModExp) {
            x = x.mod(m);
          }
        }

        if (isModExp) return y;
        if (nIsNeg) y = ONE.div(y);
        return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;
      };

      P.integerValue = function (rm) {
        var n = new BigNumber(this);
        if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
        return round(n, n.e + 1, rm);
      };

      P.isEqualTo = P.eq = function (y, b) {
        return compare(this, new BigNumber(y, b)) === 0;
      };

      P.isFinite = function () {
        return !!this.c;
      };

      P.isGreaterThan = P.gt = function (y, b) {
        return compare(this, new BigNumber(y, b)) > 0;
      };

      P.isGreaterThanOrEqualTo = P.gte = function (y, b) {
        return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;
      };

      P.isInteger = function () {
        return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;
      };

      P.isLessThan = P.lt = function (y, b) {
        return compare(this, new BigNumber(y, b)) < 0;
      };

      P.isLessThanOrEqualTo = P.lte = function (y, b) {
        return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;
      };

      P.isNaN = function () {
        return !this.s;
      };

      P.isNegative = function () {
        return this.s < 0;
      };

      P.isPositive = function () {
        return this.s > 0;
      };

      P.isZero = function () {
        return !!this.c && this.c[0] == 0;
      };

      P.minus = function (y, b) {
        var i,
            j,
            t,
            xLTy,
            x = this,
            a = x.s;
        y = new BigNumber(y, b);
        b = y.s;
        if (!a || !b) return new BigNumber(NaN);

        if (a != b) {
          y.s = -b;
          return x.plus(y);
        }

        var xe = x.e / LOG_BASE,
            ye = y.e / LOG_BASE,
            xc = x.c,
            yc = y.c;

        if (!xe || !ye) {
          if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);

          if (!xc[0] || !yc[0]) {
            return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x : ROUNDING_MODE == 3 ? -0 : 0);
          }
        }

        xe = bitFloor(xe);
        ye = bitFloor(ye);
        xc = xc.slice();

        if (a = xe - ye) {
          if (xLTy = a < 0) {
            a = -a;
            t = xc;
          } else {
            ye = xe;
            t = yc;
          }

          t.reverse();

          for (b = a; b--; t.push(0)) {
            ;
          }

          t.reverse();
        } else {
          j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;

          for (a = b = 0; b < j; b++) {
            if (xc[b] != yc[b]) {
              xLTy = xc[b] < yc[b];
              break;
            }
          }
        }

        if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;
        b = (j = yc.length) - (i = xc.length);
        if (b > 0) for (; b--; xc[i++] = 0) {
          ;
        }
        b = 99999999999999;

        for (; j > a;) {
          if (xc[--j] < yc[j]) {
            for (i = j; i && !xc[--i]; xc[i] = b) {
              ;
            }

            --xc[i];
            xc[j] += BASE;
          }

          xc[j] -= yc[j];
        }

        for (; xc[0] == 0; xc.splice(0, 1), --ye) {
          ;
        }

        if (!xc[0]) {
          y.s = ROUNDING_MODE == 3 ? -1 : 1;
          y.c = [y.e = 0];
          return y;
        }

        return normalise(y, xc, ye);
      };

      P.modulo = P.mod = function (y, b) {
        var q,
            s,
            x = this;
        y = new BigNumber(y, b);

        if (!x.c || !y.s || y.c && !y.c[0]) {
          return new BigNumber(NaN);
        } else if (!y.c || x.c && !x.c[0]) {
          return new BigNumber(x);
        }

        if (MODULO_MODE == 9) {
          s = y.s;
          y.s = 1;
          q = div(x, y, 0, 3);
          y.s = s;
          q.s *= s;
        } else {
          q = div(x, y, 0, MODULO_MODE);
        }

        y = x.minus(q.times(y));
        if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;
        return y;
      };

      P.multipliedBy = P.times = function (y, b) {
        var c,
            e,
            i,
            j,
            k,
            m,
            xcL,
            xlo,
            xhi,
            ycL,
            ylo,
            yhi,
            zc,
            base,
            sqrtBase,
            x = this,
            xc = x.c,
            yc = (y = new BigNumber(y, b)).c;

        if (!xc || !yc || !xc[0] || !yc[0]) {
          if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {
            y.c = y.e = y.s = null;
          } else {
            y.s *= x.s;

            if (!xc || !yc) {
              y.c = y.e = null;
            } else {
              y.c = [0];
              y.e = 0;
            }
          }

          return y;
        }

        e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);
        y.s *= x.s;
        xcL = xc.length;
        ycL = yc.length;
        if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;

        for (i = xcL + ycL, zc = []; i--; zc.push(0)) {
          ;
        }

        base = BASE;
        sqrtBase = SQRT_BASE;

        for (i = ycL; --i >= 0;) {
          c = 0;
          ylo = yc[i] % sqrtBase;
          yhi = yc[i] / sqrtBase | 0;

          for (k = xcL, j = i + k; j > i;) {
            xlo = xc[--k] % sqrtBase;
            xhi = xc[k] / sqrtBase | 0;
            m = yhi * xlo + xhi * ylo;
            xlo = ylo * xlo + m % sqrtBase * sqrtBase + zc[j] + c;
            c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;
            zc[j--] = xlo % base;
          }

          zc[j] = c;
        }

        if (c) {
          ++e;
        } else {
          zc.splice(0, 1);
        }

        return normalise(y, zc, e);
      };

      P.negated = function () {
        var x = new BigNumber(this);
        x.s = -x.s || null;
        return x;
      };

      P.plus = function (y, b) {
        var t,
            x = this,
            a = x.s;
        y = new BigNumber(y, b);
        b = y.s;
        if (!a || !b) return new BigNumber(NaN);

        if (a != b) {
          y.s = -b;
          return x.minus(y);
        }

        var xe = x.e / LOG_BASE,
            ye = y.e / LOG_BASE,
            xc = x.c,
            yc = y.c;

        if (!xe || !ye) {
          if (!xc || !yc) return new BigNumber(a / 0);
          if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);
        }

        xe = bitFloor(xe);
        ye = bitFloor(ye);
        xc = xc.slice();

        if (a = xe - ye) {
          if (a > 0) {
            ye = xe;
            t = yc;
          } else {
            a = -a;
            t = xc;
          }

          t.reverse();

          for (; a--; t.push(0)) {
            ;
          }

          t.reverse();
        }

        a = xc.length;
        b = yc.length;
        if (a - b < 0) t = yc, yc = xc, xc = t, b = a;

        for (a = 0; b;) {
          a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;
          xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;
        }

        if (a) {
          xc = [a].concat(xc);
          ++ye;
        }

        return normalise(y, xc, ye);
      };

      P.precision = P.sd = function (sd, rm) {
        var c,
            n,
            v,
            x = this;

        if (sd != null && sd !== !!sd) {
          intCheck(sd, 1, MAX);
          if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
          return round(new BigNumber(x), sd, rm);
        }

        if (!(c = x.c)) return null;
        v = c.length - 1;
        n = v * LOG_BASE + 1;

        if (v = c[v]) {
          for (; v % 10 == 0; v /= 10, n--) {
            ;
          }

          for (v = c[0]; v >= 10; v /= 10, n++) {
            ;
          }
        }

        if (sd && x.e + 1 > n) n = x.e + 1;
        return n;
      };

      P.shiftedBy = function (k) {
        intCheck(k, -9007199254740991, MAX_SAFE_INTEGER);
        return this.times('1e' + k);
      };

      P.squareRoot = P.sqrt = function () {
        var m,
            n,
            r,
            rep,
            t,
            x = this,
            c = x.c,
            s = x.s,
            e = x.e,
            dp = DECIMAL_PLACES + 4,
            half = new BigNumber('0.5');

        if (s !== 1 || !c || !c[0]) {
          return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);
        }

        s = Math.sqrt(+valueOf(x));

        if (s == 0 || s == 1 / 0) {
          n = coeffToString(c);
          if ((n.length + e) % 2 == 0) n += '0';
          s = Math.sqrt(+n);
          e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);

          if (s == 1 / 0) {
            n = '1e' + e;
          } else {
            n = s.toExponential();
            n = n.slice(0, n.indexOf('e') + 1) + e;
          }

          r = new BigNumber(n);
        } else {
          r = new BigNumber(s + '');
        }

        if (r.c[0]) {
          e = r.e;
          s = e + dp;
          if (s < 3) s = 0;

          for (;;) {
            t = r;
            r = half.times(t.plus(div(x, t, dp, 1)));

            if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {
              if (r.e < e) --s;
              n = n.slice(s - 3, s + 1);

              if (n == '9999' || !rep && n == '4999') {
                if (!rep) {
                  round(t, t.e + DECIMAL_PLACES + 2, 0);

                  if (t.times(t).eq(x)) {
                    r = t;
                    break;
                  }
                }

                dp += 4;
                s += 4;
                rep = 1;
              } else {
                if (!+n || !+n.slice(1) && n.charAt(0) == '5') {
                  round(r, r.e + DECIMAL_PLACES + 2, 1);
                  m = !r.times(r).eq(x);
                }

                break;
              }
            }
          }
        }

        return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);
      };

      P.toExponential = function (dp, rm) {
        if (dp != null) {
          intCheck(dp, 0, MAX);
          dp++;
        }

        return format(this, dp, rm, 1);
      };

      P.toFixed = function (dp, rm) {
        if (dp != null) {
          intCheck(dp, 0, MAX);
          dp = dp + this.e + 1;
        }

        return format(this, dp, rm);
      };

      P.toFormat = function (dp, rm, format) {
        var str,
            x = this;

        if (format == null) {
          if (dp != null && rm && typeof rm == 'object') {
            format = rm;
            rm = null;
          } else if (dp && typeof dp == 'object') {
            format = dp;
            dp = rm = null;
          } else {
            format = FORMAT;
          }
        } else if (typeof format != 'object') {
          throw Error("[BigNumber Error] Argument not an object: " + format);
        }

        str = x.toFixed(dp, rm);

        if (x.c) {
          var i,
              arr = str.split('.'),
              g1 = +format.groupSize,
              g2 = +format.secondaryGroupSize,
              groupSeparator = format.groupSeparator || '',
              intPart = arr[0],
              fractionPart = arr[1],
              isNeg = x.s < 0,
              intDigits = isNeg ? intPart.slice(1) : intPart,
              len = intDigits.length;
          if (g2) i = g1, g1 = g2, g2 = i, len -= i;

          if (g1 > 0 && len > 0) {
            i = len % g1 || g1;
            intPart = intDigits.substr(0, i);

            for (; i < len; i += g1) {
              intPart += groupSeparator + intDigits.substr(i, g1);
            }

            if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);
            if (isNeg) intPart = '-' + intPart;
          }

          str = fractionPart ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize) ? fractionPart.replace(new RegExp('\\d{' + g2 + '}\\B', 'g'), '$&' + (format.fractionGroupSeparator || '')) : fractionPart) : intPart;
        }

        return (format.prefix || '') + str + (format.suffix || '');
      };

      P.toFraction = function (md) {
        var d,
            d0,
            d1,
            d2,
            e,
            exp,
            n,
            n0,
            n1,
            q,
            r,
            s,
            x = this,
            xc = x.c;

        if (md != null) {
          n = new BigNumber(md);

          if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {
            throw Error("[BigNumber Error] Argument " + (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));
          }
        }

        if (!xc) return new BigNumber(x);
        d = new BigNumber(ONE);
        n1 = d0 = new BigNumber(ONE);
        d1 = n0 = new BigNumber(ONE);
        s = coeffToString(xc);
        e = d.e = s.length - x.e - 1;
        d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];
        md = !md || n.comparedTo(d) > 0 ? e > 0 ? d : n1 : n;
        exp = MAX_EXP;
        MAX_EXP = 1 / 0;
        n = new BigNumber(s);
        n0.c[0] = 0;

        for (;;) {
          q = div(n, d, 0, 1);
          d2 = d0.plus(q.times(d1));
          if (d2.comparedTo(md) == 1) break;
          d0 = d1;
          d1 = d2;
          n1 = n0.plus(q.times(d2 = n1));
          n0 = d2;
          d = n.minus(q.times(d2 = d));
          n = d2;
        }

        d2 = div(md.minus(d0), d1, 0, 1);
        n0 = n0.plus(d2.times(n1));
        d0 = d0.plus(d2.times(d1));
        n0.s = n1.s = x.s;
        e = e * 2;
        r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];
        MAX_EXP = exp;
        return r;
      };

      P.toNumber = function () {
        return +valueOf(this);
      };

      P.toPrecision = function (sd, rm) {
        if (sd != null) intCheck(sd, 1, MAX);
        return format(this, sd, rm, 2);
      };

      P.toString = function (b) {
        var str,
            n = this,
            s = n.s,
            e = n.e;

        if (e === null) {
          if (s) {
            str = 'Infinity';
            if (s < 0) str = '-' + str;
          } else {
            str = 'NaN';
          }
        } else {
          if (b == null) {
            str = e <= TO_EXP_NEG || e >= TO_EXP_POS ? toExponential(coeffToString(n.c), e) : toFixedPoint(coeffToString(n.c), e, '0');
          } else if (b === 10) {
            n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);
            str = toFixedPoint(coeffToString(n.c), n.e, '0');
          } else {
            intCheck(b, 2, ALPHABET.length, 'Base');
            str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);
          }

          if (s < 0 && n.c[0]) str = '-' + str;
        }

        return str;
      };

      P.valueOf = P.toJSON = function () {
        return valueOf(this);
      };

      P._isBigNumber = true;
      if (configObject != null) BigNumber.set(configObject);
      return BigNumber;
    }

    function bitFloor(n) {
      var i = n | 0;
      return n > 0 || n === i ? i : i - 1;
    }

    function coeffToString(a) {
      var s,
          z,
          i = 1,
          j = a.length,
          r = a[0] + '';

      for (; i < j;) {
        s = a[i++] + '';
        z = LOG_BASE - s.length;

        for (; z--; s = '0' + s) {
          ;
        }

        r += s;
      }

      for (j = r.length; r.charCodeAt(--j) === 48;) {
        ;
      }

      return r.slice(0, j + 1 || 1);
    }

    function compare(x, y) {
      var a,
          b,
          xc = x.c,
          yc = y.c,
          i = x.s,
          j = y.s,
          k = x.e,
          l = y.e;
      if (!i || !j) return null;
      a = xc && !xc[0];
      b = yc && !yc[0];
      if (a || b) return a ? b ? 0 : -j : i;
      if (i != j) return i;
      a = i < 0;
      b = k == l;
      if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;
      if (!b) return k > l ^ a ? 1 : -1;
      j = (k = xc.length) < (l = yc.length) ? k : l;

      for (i = 0; i < j; i++) {
        if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;
      }

      return k == l ? 0 : k > l ^ a ? 1 : -1;
    }

    function intCheck(n, min, max, name) {
      if (n < min || n > max || n !== mathfloor(n)) {
        throw Error(bignumberError + (name || 'Argument') + (typeof n == 'number' ? n < min || n > max ? ' out of range: ' : ' not an integer: ' : ' not a primitive number: ') + String(n));
      }
    }

    function isOdd(n) {
      var k = n.c.length - 1;
      return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;
    }

    function toExponential(str, e) {
      return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) + (e < 0 ? 'e' : 'e+') + e;
    }

    function toFixedPoint(str, e, z) {
      var len, zs;

      if (e < 0) {
        for (zs = z + '.'; ++e; zs += z) {
          ;
        }

        str = zs + str;
      } else {
        len = str.length;

        if (++e > len) {
          for (zs = z, e -= len; --e; zs += z) {
            ;
          }

          str += zs;
        } else if (e < len) {
          str = str.slice(0, e) + '.' + str.slice(e);
        }
      }

      return str;
    }

    BigNumber = clone();
    BigNumber['default'] = BigNumber.BigNumber = BigNumber;

    if (typeof define == 'function' && define.amd) {
      define(function () {
        return BigNumber;
      });
    } else if (typeof module != 'undefined' && module.exports) {
      module.exports = BigNumber;
    } else {
      if (!globalObject) {
        globalObject = typeof self != 'undefined' && self ? self : window;
      }

      globalObject.BigNumber = BigNumber;
    }
  })(this);
},23245,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var BigNumber = null;
  var suspectProtoRx = /(?:_|\\u005[Ff])(?:_|\\u005[Ff])(?:p|\\u0070)(?:r|\\u0072)(?:o|\\u006[Ff])(?:t|\\u0074)(?:o|\\u006[Ff])(?:_|\\u005[Ff])(?:_|\\u005[Ff])/;
  var suspectConstructorRx = /(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)/;

  var json_parse = function json_parse(options) {
    'use strict';

    var _options = {
      strict: false,
      storeAsString: false,
      alwaysParseAsBig: false,
      useNativeBigInt: false,
      protoAction: 'error',
      constructorAction: 'error'
    };

    if (options !== undefined && options !== null) {
      if (options.strict === true) {
        _options.strict = true;
      }

      if (options.storeAsString === true) {
        _options.storeAsString = true;
      }

      _options.alwaysParseAsBig = options.alwaysParseAsBig === true ? options.alwaysParseAsBig : false;
      _options.useNativeBigInt = options.useNativeBigInt === true ? options.useNativeBigInt : false;

      if (typeof options.constructorAction !== 'undefined') {
        if (options.constructorAction === 'error' || options.constructorAction === 'ignore' || options.constructorAction === 'preserve') {
          _options.constructorAction = options.constructorAction;
        } else {
          throw new Error("Incorrect value for constructorAction option, must be \"error\", \"ignore\" or undefined but passed " + options.constructorAction);
        }
      }

      if (typeof options.protoAction !== 'undefined') {
        if (options.protoAction === 'error' || options.protoAction === 'ignore' || options.protoAction === 'preserve') {
          _options.protoAction = options.protoAction;
        } else {
          throw new Error("Incorrect value for protoAction option, must be \"error\", \"ignore\" or undefined but passed " + options.protoAction);
        }
      }
    }

    var at,
        ch,
        escapee = {
      '"': '"',
      '\\': '\\',
      '/': '/',
      b: '\b',
      f: '\f',
      n: '\n',
      r: '\r',
      t: '\t'
    },
        text,
        error = function error(m) {
      throw {
        name: 'SyntaxError',
        message: m,
        at: at,
        text: text
      };
    },
        next = function next(c) {
      if (c && c !== ch) {
        error("Expected '" + c + "' instead of '" + ch + "'");
      }

      ch = text.charAt(at);
      at += 1;
      return ch;
    },
        number = function number() {
      var number,
          string = '';

      if (ch === '-') {
        string = '-';
        next('-');
      }

      while (ch >= '0' && ch <= '9') {
        string += ch;
        next();
      }

      if (ch === '.') {
        string += '.';

        while (next() && ch >= '0' && ch <= '9') {
          string += ch;
        }
      }

      if (ch === 'e' || ch === 'E') {
        string += ch;
        next();

        if (ch === '-' || ch === '+') {
          string += ch;
          next();
        }

        while (ch >= '0' && ch <= '9') {
          string += ch;
          next();
        }
      }

      number = +string;

      if (!isFinite(number)) {
        error('Bad number');
      } else {
        if (BigNumber == null) BigNumber = _$$_REQUIRE(_dependencyMap[0]);
        if (string.length > 15) return _options.storeAsString ? string : _options.useNativeBigInt ? BigInt(string) : new BigNumber(string);else return !_options.alwaysParseAsBig ? number : _options.useNativeBigInt ? BigInt(number) : new BigNumber(number);
      }
    },
        string = function string() {
      var hex,
          i,
          string = '',
          uffff;

      if (ch === '"') {
        var startAt = at;

        while (next()) {
          if (ch === '"') {
            if (at - 1 > startAt) string += text.substring(startAt, at - 1);
            next();
            return string;
          }

          if (ch === '\\') {
            if (at - 1 > startAt) string += text.substring(startAt, at - 1);
            next();

            if (ch === 'u') {
              uffff = 0;

              for (i = 0; i < 4; i += 1) {
                hex = parseInt(next(), 16);

                if (!isFinite(hex)) {
                  break;
                }

                uffff = uffff * 16 + hex;
              }

              string += String.fromCharCode(uffff);
            } else if (typeof escapee[ch] === 'string') {
              string += escapee[ch];
            } else {
              break;
            }

            startAt = at;
          }
        }
      }

      error('Bad string');
    },
        white = function white() {
      while (ch && ch <= ' ') {
        next();
      }
    },
        word = function word() {
      switch (ch) {
        case 't':
          next('t');
          next('r');
          next('u');
          next('e');
          return true;

        case 'f':
          next('f');
          next('a');
          next('l');
          next('s');
          next('e');
          return false;

        case 'n':
          next('n');
          next('u');
          next('l');
          next('l');
          return null;
      }

      error("Unexpected '" + ch + "'");
    },
        value,
        array = function array() {
      var array = [];

      if (ch === '[') {
        next('[');
        white();

        if (ch === ']') {
          next(']');
          return array;
        }

        while (ch) {
          array.push(value());
          white();

          if (ch === ']') {
            next(']');
            return array;
          }

          next(',');
          white();
        }
      }

      error('Bad array');
    },
        object = function object() {
      var key,
          object = Object.create(null);

      if (ch === '{') {
        next('{');
        white();

        if (ch === '}') {
          next('}');
          return object;
        }

        while (ch) {
          key = string();
          white();
          next(':');

          if (_options.strict === true && Object.hasOwnProperty.call(object, key)) {
            error('Duplicate key "' + key + '"');
          }

          if (suspectProtoRx.test(key) === true) {
            if (_options.protoAction === 'error') {
              error('Object contains forbidden prototype property');
            } else if (_options.protoAction === 'ignore') {
              value();
            } else {
              object[key] = value();
            }
          } else if (suspectConstructorRx.test(key) === true) {
            if (_options.constructorAction === 'error') {
              error('Object contains forbidden constructor property');
            } else if (_options.constructorAction === 'ignore') {
              value();
            } else {
              object[key] = value();
            }
          } else {
            object[key] = value();
          }

          white();

          if (ch === '}') {
            next('}');
            return object;
          }

          next(',');
          white();
        }
      }

      error('Bad object');
    };

    value = function value() {
      white();

      switch (ch) {
        case '{':
          return object();

        case '[':
          return array();

        case '"':
          return string();

        case '-':
          return number();

        default:
          return ch >= '0' && ch <= '9' ? number() : word();
      }
    };

    return function (source, reviver) {
      var result;
      text = source + '';
      at = 0;
      ch = ' ';
      result = value();
      white();

      if (ch) {
        error('Syntax error');
      }

      return typeof reviver === 'function' ? function walk(holder, key) {
        var k,
            v,
            value = holder[key];

        if (value && typeof value === 'object') {
          Object.keys(value).forEach(function (k) {
            v = walk(value, k);

            if (v !== undefined) {
              value[k] = v;
            } else {
              delete value[k];
            }
          });
        }

        return reviver.call(holder, key, value);
      }({
        '': result
      }, '') : result;
    };
  };

  module.exports = json_parse;
},23248,[23245]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "c0c1a2c8287a20030e20c26350811688",
    "name": "orientation_n_dark",
    "type": "png"
  });
},23251,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "fc298c8501990d875df4a6b937ad9591",
    "name": "orientation_p_dark",
    "type": "png"
  });
},23254,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "efb4f84e005c31f56186fde68e17aae9",
    "name": "orientation_d_dark",
    "type": "png"
  });
},23257,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f13fb08b174c97de0f063b5406edcd19",
    "name": "save_n_dark",
    "type": "png"
  });
},23260,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a997ade362625254db11517feb4b57cd",
    "name": "save_p_dark",
    "type": "png"
  });
},23263,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7db694f5552517986af48ade14af5dee",
    "name": "save_d_dark",
    "type": "png"
  });
},23266,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "82363159dc3191db49504a2be0bc1b70",
    "name": "orientation_n_light",
    "type": "png"
  });
},23269,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "54941d4a547ad957ef4f3a08b4c78eb6",
    "name": "orientation_p_light",
    "type": "png"
  });
},23272,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8defaf1d8235ebb098fa04bcf12ed5ad",
    "name": "orientation_d_light",
    "type": "png"
  });
},23275,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "5ec1f8035bdf49848568663eab32f910",
    "name": "save_n_light",
    "type": "png"
  });
},23278,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "dc06f34ea6451e550d102bfb79af7f49",
    "name": "save_p_light",
    "type": "png"
  });
},23281,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9e9264292f6e90aa0a56465fe7227563",
    "name": "save_d_light",
    "type": "png"
  });
},23284,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/light",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "fc3543c773e475858fc7376b28eb58f7",
    "name": "sort_n_light",
    "type": "png"
  });
},23287,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/light",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "ed487fb6c76e248a78da223d29a7df33",
    "name": "sort_p_light",
    "type": "png"
  });
},23290,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/dark",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "a086d85121f6a4f64b59edcc4063b425",
    "name": "sort_n_dark",
    "type": "png"
  });
},23293,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/dark",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "1243c79fd61adc9fae869b00eaa7c09a",
    "name": "sort_p_dark",
    "type": "png"
  });
},23296,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _font = _$$_REQUIRE(_dependencyMap[17]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var cardMargin = 12;
  var cardWidth = width - 24;
  var radiusValue = 12;
  var cardPadding = 20;
  var tabHeight = 46;
  var dotSize = 39;
  var CARD_EXCESS_PADDING = 6;
  var MAX_TAB_SHOW_COUNT = 5;
  var CARD_TYPE = {
    TAB: 'tab',
    SLIDER: 'slider',
    DOT: 'dot'
  };
  Object.freeze(CARD_TYPE);

  var GearCard = function (_Component) {
    (0, _inherits2.default)(GearCard, _Component);

    function GearCard(props) {
      var _this;

      (0, _classCallCheck2.default)(this, GearCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(GearCard).call(this, props));

      _this.onPressButton = function (index) {
        var _this$props = _this.props,
            onPress = _this$props.onPress,
            onValueChange = _this$props.onValueChange;

        _this.setState({
          gearValue: index
        }, function () {
          _this.AnimatedMoveGreenTab(index);

          if (onPress) {
            onPress(index);
          }

          if (typeof onValueChange === 'function') {
            onValueChange(index);
          }
        });
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props2 = _this.props,
            disabledSwitch = _this$props2.disabledSwitch,
            switchValue = _this$props2.switchValue;

        if (disabledSwitch) {
          return;
        }

        var gearValue = _this.state.gearValue;
        var toValue = gearValue;

        if (actionName === 'activate' && _this.props.onSwitchValueChange) {
          _this.props.onSwitchValueChange(!switchValue);

          return;
        }

        if (actionName === 'increment') {
          toValue++;
        }

        if (actionName === 'decrement') {
          toValue--;
        }

        _this._onSliderValueChange(toValue, function () {
          _this.props.onSlidingComplete(toValue);
        });
      };

      if (!props.options || !(props.options instanceof Array) || props.options.length < 2) {
        _this.showNothing = true;
        return (0, _possibleConstructorReturn2.default)(_this);
      }

      if (props.maxDotShowCount > 9) {
        throw new Error('maxDotShowCount cannot exceed 9');
      }

      _this.getCorrectLayout(props);

      _this.state = {
        gearValue: _this.props.sliderProps.value
      };
      _this.currentIndex = new _reactNative.Animated.Value(props.currentIndex);
      return _this;
    }

    (0, _createClass2.default)(GearCard, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.AnimatedMoveGreenTab(this.props.currentIndex);
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        if (nextProps.options !== this.props.options) {
          this.getCorrectLayout(nextProps);
        }
      }
    }, {
      key: "getCorrectLayout",
      value: function getCorrectLayout(props) {
        var cardType = props.cardType,
            maxDotShowCount = props.maxDotShowCount;
        var maxShowCount = cardType === CARD_TYPE.TAB ? MAX_TAB_SHOW_COUNT : maxDotShowCount;
        var length = Math.min(props.options.length, maxShowCount);
        var cardLength = cardWidth - 40 - CARD_EXCESS_PADDING;

        if (props.cardType === CARD_TYPE.DOT) {
          cardLength += CARD_EXCESS_PADDING;
          this.buttonWidth = Math.floor(cardLength / length) > dotSize ? dotSize : Math.floor(cardLength / length);
          this.dotSize = this.buttonWidth === dotSize ? dotSize : this.buttonWidth;
          this.leftMargin = 0;
          this.margin = (cardLength - this.buttonWidth * length) / (length - 1);
          return;
        }

        this.buttonWidth = Math.floor(cardLength / length) - 10;
        this.tabWidth = this.buttonWidth;
        this.leftMargin = Math.abs(this.tabWidth - this.buttonWidth) / 2 + 3;
        this.margin = (cardLength - this.buttonWidth * length) / (length - 1);

        if (length === maxShowCount) {
          this.tabWidth = this.buttonWidth > 72 ? this.buttonWidth : 72;
          this.leftMargin = Math.abs(this.tabWidth - this.buttonWidth) / 2 + 3;
          this.margin = (cardLength - this.buttonWidth * length - this.leftMargin * 2 + CARD_EXCESS_PADDING) / (length - 1);
        }
      }
    }, {
      key: "renderUpView",
      value: function renderUpView() {
        if (!!this.props.title || this.props.showSwitch) {
          var _this$context$theme, _this$context$theme2;

          var unlimitedHeightEnable = this.props.unlimitedHeightEnable;
          return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            style: [styles.upViewContainer, unlimitedHeightEnable || !this.props.allowFontScaling ? {
              height: undefined
            } : {}]
          }, !this.props.onSwitchValueChange ? (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
            accessibilityLabel: this.props.accessibilityLabel || this.props.title,
            accessibilityHint: this.props.accessibilityHint
          }) : (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.switch,
            accessibilityLabel: this.props.accessibilityLabel || this.props.title,
            accessibilityHint: this.props.accessibilityHint,
            accessibilityState: {
              disabled: this.props.disabledSwitch,
              checked: this.props.switchValue
            }
          }), {
            accessibilityActions: !this.props.onSwitchValueChange ? [] : [{
              name: 'activate'
            }],
            onAccessibilityAction: !this.props.onSwitchValueChange ? null : this.onAccessibilityAction
          }), _react.default.createElement(_reactNative.View, {
            style: styles.titleViewStyle
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            allowFontScaling: this.props.allowFontScaling,
            numberOfLines: this.props.titleNumberOfLines,
            ellipsizeMode: "tail",
            style: [styles.titleStyle, unlimitedHeightEnable ? {
              lineHeight: undefined
            } : {}, {
              color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBlack
            }, this.props.titleStyle]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })), this.props.title), this.props.subtitle ? _react.default.createElement(_reactNative.View, {
            style: styles.gearStyle
          }, _react.default.createElement(_reactNative.View, {
            style: [styles.separatorCol]
          }), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            numberOfLines: this.props.subtitleNumberOfLines,
            ellipsizeMode: "tail",
            allowFontScaling: this.props.allowFontScaling,
            style: [unlimitedHeightEnable ? {
              lineHeight: undefined
            } : {}, (0, _objectSpread2.default)({
              fontSize: 12,
              color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayLighter
            }, _font.FontSecondary), this.props.subtitleStyle]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })), this.props.subtitle)) : null), this.props.showSwitch ? _react.default.createElement(_reactNative.View, {
            style: styles.right
          }, _react.default.createElement(_Switch.default, (0, _extends2.default)({
            style: this.props.switchStyle,
            value: this.props.switchValue,
            disabled: this.props.disabledSwitch,
            tintColor: this.props.tintColor,
            onTintColor: this.props.onTintColor,
            onValueChange: this.props.onSwitchValueChange
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })))) : null);
        }

        return null;
      }
    }, {
      key: "renderAnimatedView",
      value: function renderAnimatedView() {
        var _this$props$options, _this$props$options2;

        var isTab;
        if (this.props.cardType === CARD_TYPE.TAB) isTab = true;else if (this.props.cardType === CARD_TYPE.DOT && ((_this$props$options = this.props.options) == null ? undefined : _this$props$options.length) < 10 && ((_this$props$options2 = this.props.options) == null ? undefined : _this$props$options2.length) > 1) isTab = false;
        return _react.default.createElement(_reactNative.Animated.View, {
          style: {
            height: isTab ? tabHeight : this.dotSize,
            borderRadius: isTab ? 23 : this.dotSize / 2,
            width: isTab ? this.tabWidth : this.dotSize,
            backgroundColor: this.props.animatedGearBackgroundColor || this.context.theme.colorPrimary,
            position: 'absolute',
            transform: [{
              translateX: this.currentIndex.interpolate(this.getLeftInterpolate())
            }],
            opacity: this.props.disabledGear ? 0.3 : 1,
            top: isTab ? 3 : 23 - this.dotSize / 2
          }
        });
      }
    }, {
      key: "renderGear",
      value: function renderGear() {
        var _this2 = this;

        if (this.props.cardType === CARD_TYPE.SLIDER) {
          var _this$context$theme3, _this$context$theme4, _this$context$theme5;

          var sliderProps = this.props.sliderProps;
          var sliderStyle = this.props.sliderStyle || {
            minimumTrackTintColor: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorPrimary,
            maximumTrackTintColor: (_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorGearBackground,
            thumbTintColor: (_this$context$theme5 = this.context.theme) == null ? undefined : _this$context$theme5.colorWhite2
          };
          return _react.default.createElement(_SlideGear.default, (0, _extends2.default)({
            options: this.props.options,
            value: this.state.gearValue,
            containerStyle: {
              height: 46,
              marginTop: 8
            },
            showEndText: sliderProps.showEndText,
            onValueChange: function onValueChange(value) {
              return _this2._onSliderValueChange(value);
            },
            onSlidingComplete: function onSlidingComplete(value) {
              return _this2.props.onSlidingComplete(value);
            },
            minimumTrackTintColor: sliderStyle.minimumTrackTintColor,
            maximumTrackTintColor: sliderStyle.maximumTrackTintColor,
            blockStyle: {
              backgroundColor: sliderStyle.thumbTintColor
            },
            disabled: this.props.disabledGear
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
            accessibilityLabel: this.props.accessibilityLabel,
            accessibilityHint: this.props.accessibilityHint,
            accessibilityState: {
              disabled: this.props.disabledGear
            },
            accessibilityValue: {
              value: this.state.gearValue
            }
          }), {
            accessibilityActions: [{
              name: 'increment'
            }, {
              name: 'decrement'
            }],
            onAccessibilityAction: this.onAccessibilityAction
          }));
        }

        var _this$props3 = this.props,
            cardType = _this$props3.cardType,
            maxDotShowCount = _this$props3.maxDotShowCount,
            optionGearBackgroundColor = _this$props3.optionGearBackgroundColor;
        var viewStyle = {};

        if (this.props.cardType === CARD_TYPE.TAB) {
          viewStyle = [styles.gearTabContainer, {
            backgroundColor: optionGearBackgroundColor || this.context.theme.colorGearBackground
          }];
        } else {
          viewStyle = [styles.gearDotContainer, {
            backgroundColor: optionGearBackgroundColor || 'transparent'
          }];
        }

        var _this$context$theme6 = this.context.theme,
            colorGrayLight = _this$context$theme6.colorGrayLight,
            colorWhite2 = _this$context$theme6.colorWhite2;
        var scrollViewWidth = this.props.options.length * (this.buttonWidth + this.margin) + 2 * this.leftMargin;
        var newScrollViewWidth = cardType === CARD_TYPE.TAB ? scrollViewWidth - CARD_EXCESS_PADDING : scrollViewWidth;
        var maxShowCount = cardType === CARD_TYPE.TAB ? MAX_TAB_SHOW_COUNT : maxDotShowCount;
        var gearTabContainerStyle = this.props.options.length <= maxShowCount ? {
          flex: 1
        } : {
          width: newScrollViewWidth
        };
        return _react.default.createElement(_reactNative.ScrollView, {
          alwaysBounceHorizontal: false,
          contentContainerStyle: gearTabContainerStyle,
          horizontal: true,
          showsHorizontalScrollIndicator: false
        }, _react.default.createElement(_reactNative.View, {
          style: [viewStyle, gearTabContainerStyle]
        }, this.renderAnimatedView(), _react.default.createElement(_reactNative.View, {
          style: [this.props.disabledGear ? {
            opacity: 0.3
          } : {}, styles.gearStyle]
        }, this.props.options.map(function (option, index) {
          return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            key: option,
            onPress: function onPress() {
              return _this2.onPressButton(index);
            },
            activeOpacity: 1,
            disabled: _this2.props.disabledGear,
            style: [styles.textContainer, {
              width: _this2.buttonWidth
            }, index == 0 ? {
              marginLeft: _this2.leftMargin
            } : {
              marginLeft: _this2.margin
            }]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.tab,
            accessibilityLabel: option,
            accessibilityHint: option,
            accessibilityState: {
              disabled: _this2.props.disabledGear,
              selected: index === _this2.state.gearValue
            }
          })), _react.default.createElement(_reactNative.Animated.Text, {
            ellipsizeMode: "tail",
            style: [styles.gearText, _this2.props.gearTextStyle, {
              color: _this2.state.gearValue === index ? colorWhite2 : colorGrayLight
            }]
          }, option));
        }))));
      }
    }, {
      key: "AnimatedMoveGreenTab",
      value: function AnimatedMoveGreenTab(index) {
        _reactNative.Animated.timing(this.currentIndex, {
          toValue: index,
          duration: this.props.duration,
          useNativeDriver: true
        }).start();
      }
    }, {
      key: "getLeftInterpolate",
      value: function getLeftInterpolate() {
        var _this3 = this;

        var _this$props4 = this.props,
            cardType = _this$props4.cardType,
            maxDotShowCount = _this$props4.maxDotShowCount,
            options = _this$props4.options;
        var maxShowCount = cardType === CARD_TYPE.TAB ? MAX_TAB_SHOW_COUNT : maxDotShowCount;
        var length = Math.min(options.length, maxShowCount);
        var inputRange = Array.from({
          length: length
        }).map(function (_value, idx) {
          return idx;
        });
        var outputRange = inputRange.map(function (i) {
          var value = i * (_this3.buttonWidth + _this3.margin) + _this3.leftMargin;

          if (_this3.props.cardType === CARD_TYPE.TAB && length === 5) {
            value -= (_this3.tabWidth - _this3.buttonWidth) / 2;
          }

          return value;
        });
        return {
          inputRange: inputRange,
          outputRange: outputRange
        };
      }
    }, {
      key: "renderInnerView",
      value: function renderInnerView() {
        return _react.default.createElement(_reactNative.View, {
          style: styles.innerView
        }, this.renderUpView(), this.renderGear());
      }
    }, {
      key: "render",
      value: function render() {
        if (this.showNothing) return null;
        var cardHeight = 143;
        if (!this.props.title && !this.props.showSwitch) cardHeight = 95;
        if (this.props.unlimitedHeightEnable) cardHeight = undefined;

        var cardStyle = _reactNative.StyleSheet.flatten([{
          width: cardWidth,
          height: cardHeight,
          borderRadius: radiusValue
        }, this.props.cardStyle]);

        return _react.default.createElement(_Card.default, {
          innerView: this.renderInnerView(),
          cardStyle: cardStyle,
          showShadow: false,
          allowFontScaling: this.props.allowFontScaling,
          unlimitedHeightEnable: this.props.unlimitedHeightEnable
        });
      }
    }, {
      key: "_onSliderValueChange",
      value: function _onSliderValueChange(value) {
        var _this4 = this;

        this.setState({
          gearValue: value
        }, function () {
          if (typeof _this4.props.onValueChange === 'function') {
            _this4.props.onValueChange(value);
          }
        });

        if (this.props.onSliderValueChange) {
          this.props.onSliderValueChange(value);
        }
      }
    }]);
    return GearCard;
  }(_react.Component);

  GearCard.propTypes = {
    cardType: _propTypes.default.oneOf([CARD_TYPE.DOT, CARD_TYPE.SLIDER, CARD_TYPE.TAB]),
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    titleStyle: _propTypes.default.object,
    subtitleStyle: _propTypes.default.object,
    gearTextStyle: _propTypes.default.object,
    cardStyle: _propTypes.default.object,
    showSwitch: _propTypes.default.bool,
    switchStyle: _propTypes.default.object,
    disabledSwitch: _propTypes.default.bool,
    disabledGear: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    options: _propTypes.default.array,
    onSwitchValueChange: _propTypes.default.func,
    switchValue: _propTypes.default.bool,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    onPress: _propTypes.default.func,
    duration: _propTypes.default.number,
    currentIndex: _propTypes.default.number,
    sliderProps: _propTypes.default.object,
    sliderStyle: _propTypes.default.object,
    onSliderValueChange: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    maxDotShowCount: _propTypes.default.number,
    onValueChange: _propTypes.default.func,
    optionGearBackgroundColor: _propTypes.default.string,
    animatedGearBackgroundColor: _propTypes.default.string
  };
  GearCard.defaultProps = {
    cardType: CARD_TYPE.TAB,
    duration: 200,
    currentIndex: 0,
    showSwitch: false,
    titleNumberOfLines: 1,
    subtitleNumberOfLines: 1,
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    disabledSwitch: false,
    disabledGear: false,
    sliderProps: {
      value: 0,
      showDots: 0,
      showEndText: true
    },
    maxDotShowCount: 9
  };
  GearCard.contextType = _configProvider.ConfigContext;
  GearCard.CARD_TYPE = CARD_TYPE;

  var styles = _reactNative.StyleSheet.create({
    innerView: {
      marginHorizontal: cardPadding,
      marginTop: 14,
      marginBottom: 17,
      flex: 1
    },
    upViewContainer: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      height: 24,
      marginBottom: 18
    },
    gearTabContainer: {
      height: 52,
      flexDirection: 'row',
      borderRadius: 26,
      marginBottom: 13,
      marginTop: 8
    },
    gearDotContainer: {
      height: 46,
      flexDirection: 'row',
      alignItems: 'center',
      marginTop: 8,
      marginBottom: 13
    },
    titleStyle: (0, _objectSpread2.default)({
      fontSize: 14,
      lineHeight: 19
    }, _font.FontPrimary),
    textContainer: {
      height: tabHeight,
      justifyContent: 'center',
      alignItems: 'center'
    },
    gearText: (0, _objectSpread2.default)({
      fontSize: 13
    }, _font.FontSecondary),
    right: {
      alignItems: 'flex-end',
      maxWidth: 70,
      marginLeft: 20
    },
    separatorCol: {
      height: 14,
      width: 0.5,
      marginHorizontal: 10,
      backgroundColor: 'rgba(0,0,0,0.2)'
    },
    dotView: {
      top: 21,
      height: 4,
      width: 4,
      borderRadius: 2,
      backgroundColor: '#999999',
      position: 'absolute'
    },
    gearStyle: {
      flexDirection: 'row',
      flex: 1,
      alignItems: 'center'
    },
    titleViewStyle: {
      flexDirection: 'row',
      flex: 1,
      marginRight: 10
    }
  });

  var _default = GearCard;
  exports.default = _default;
},23299,[14308,14305,14314,14344,14320,14323,14371,14377,14386,10318,10297,10033,22450,22426,22864,22897,22420,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _resources = _$$_REQUIRE(_dependencyMap[12]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _popButton = _$$_REQUIRE(_dependencyMap[16]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[18]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[19]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var radiusValue = 12;
  var cardHeight = 89;
  var marginHor = 20;
  var iconViewLength = 43;
  var TYPE = {
    SWITCH: 'switch',
    CHOICE: 'choice',
    BUTTON: 'button',
    ARROW: 'arrow',
    NONE: 'none'
  };
  Object.freeze(TYPE);
  var CARD_RADIUS_TYPE = {
    ALL: 'all',
    NONE: 'none',
    TOP: 'top',
    BOTTOM: 'bottom'
  };

  var ListCard = function (_React$Component) {
    (0, _inherits2.default)(ListCard, _React$Component);

    function ListCard(props) {
      var _CARD_RADIUS_TYPE$ALL;

      var _this;

      (0, _classCallCheck2.default)(this, ListCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListCard).call(this, props));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;

        if (_this.props.disabled) {
          return;
        }

        if (actionName === 'activate') {
          var _this$props$switchOpt, _this$props$switchOpt2, _this$props$choiceOpt, _this$props$choiceOpt2, _this$props$buttonOpt;

          if (_this.props.type === TYPE.SWITCH) (_this$props$switchOpt = _this.props.switchOption) == null ? undefined : _this$props$switchOpt.onSwitchValueChange(!((_this$props$switchOpt2 = _this.props.switchOption) == null ? undefined : _this$props$switchOpt2.switchValue));else if (_this.props.type === TYPE.CHOICE) (_this$props$choiceOpt = _this.props.choiceOption) == null ? undefined : _this$props$choiceOpt.onValueChange(!((_this$props$choiceOpt2 = _this.props.choiceOption) == null ? undefined : _this$props$choiceOpt2.checked));else if (_this.props.type === TYPE.BUTTON) (_this$props$buttonOpt = _this.props.buttonOption) == null ? undefined : _this$props$buttonOpt.onPress();
        }
      };

      _this.radius = (_CARD_RADIUS_TYPE$ALL = {}, (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.ALL, {
        borderRadius: radiusValue
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.NONE, {
        borderRadius: 0
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.TOP, {
        borderTopLeftRadius: radiusValue,
        borderTopRightRadius: radiusValue
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.BOTTOM, {
        borderBottomLeftRadius: radiusValue,
        borderBottomRightRadius: radiusValue
      }), _CARD_RADIUS_TYPE$ALL)[props.radiusType];
      return _this;
    }

    (0, _createClass2.default)(ListCard, [{
      key: "renderIcon",
      value: function renderIcon() {
        return this.props.icon ? _react.default.createElement(_reactNative.View, {
          style: [styles.iconViewStyle, {
            backgroundColor: this.props.themeColor,
            opacity: this.props.disabled ? 0.3 : 1
          }]
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.iconStyle,
          source: this.props.icon
        })) : null;
      }
    }, {
      key: "renderText",
      value: function renderText() {
        var _this$context$theme, _this$context$theme2, _this$context$theme3;

        var adaptedFontStyle = {};

        if (this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            lineHeight: undefined
          };
        }

        var valueStyle = {
          textAlignVertical: 'center',
          textAlign: 'right'
        };
        var textViewStyle = {
          flex: 1,
          flexDirection: 'row'
        };
        var fontFamily = {};

        if (_reactNative.Platform.OS === 'android') {
          fontFamily = {
            fontFamily: 'KMedium'
          };
        }

        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 1 : this.props.subtitleNumberOfLines;
        var valueLine = this.props.valueNumberOfLines == undefined ? 2 : this.props.valueNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        if (subtitleLine < 0) subtitleLine = 0;
        if (valueLine < 0) valueLine = 0;
        return _react.default.createElement(_reactNative.View, {
          style: [textViewStyle, {
            opacity: this.props.disabled ? 0.3 : 1
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleView
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: titleLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [styles.title, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBlack
          }, fontFamily, adaptedFontStyle, this.props.titleStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: subtitleLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [styles.subtitle, {
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayLighter
          }, adaptedFontStyle, this.props.subtitleStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle) : null), this.props.value && (this.props.type === TYPE.NONE || this.props.type === TYPE.ARROW) ? _react.default.createElement(_reactNative.View, {
          style: styles.valueText
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: valueLine,
          allowFontScaling: this.props.allowFontScaling,
          ellipsizeMode: "tail",
          style: [styles.subtitle, {
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayLighter
          }, valueStyle, adaptedFontStyle, this.props.valueStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.value)) : null);
      }
    }, {
      key: "renderRight",
      value: function renderRight() {
        var _this$props$buttonOpt2, _this$props$buttonOpt3, _this$props$buttonOpt4, _this$props$buttonOpt5, _this$props$buttonOpt6, _this$props$buttonOpt7, _this$props$choiceOpt3, _this$props$choiceOpt4, _this$props$choiceOpt5, _this$props$switchOpt3, _this$props$switchOpt4, _this$props$switchOpt5, _this$props$switchOpt6, _this$props$switchOpt7;

        var component = {};
        if (this.props.type === TYPE.NONE) return null;else if (this.props.type === TYPE.ARROW) component = _react.default.createElement(_reactNative.Image, {
          style: styles.arrowIcon,
          source: _resources.Images.common.right_arrow
        });else if (this.props.type === TYPE.BUTTON) component = _react.default.createElement(_popButton.PopButton, {
          sizeLevel: 'small',
          title: (_this$props$buttonOpt2 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt2.title,
          backgroundColor: (_this$props$buttonOpt3 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt3.backgroundColor,
          titleStyle: (_this$props$buttonOpt4 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt4.titleStyle,
          titleColor: (_this$props$buttonOpt5 = this.props.buttonOption) == null ? undefined : (_this$props$buttonOpt6 = _this$props$buttonOpt5.titleStyle) == null ? undefined : _this$props$buttonOpt6.color,
          disabled: this.props.disabled,
          allowFontScaling: this.props.allowFontScaling,
          onPress: (_this$props$buttonOpt7 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt7.onPress
        });else if (this.props.type === TYPE.CHOICE) component = _react.default.createElement(_Checkbox.default, {
          style: {
            width: 22,
            height: 22,
            borderRadius: 11
          },
          disabled: this.props.disabled,
          checked: (_this$props$choiceOpt3 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt3.checked,
          checkedColor: (_this$props$choiceOpt4 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt4.checkedColor,
          onValueChange: (_this$props$choiceOpt5 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt5.onValueChange
        });else if (this.props.type === TYPE.SWITCH) component = _react.default.createElement(_Switch.default, {
          style: (_this$props$switchOpt3 = this.props.switchOption) == null ? undefined : _this$props$switchOpt3.switchStyle,
          value: (_this$props$switchOpt4 = this.props.switchOption) == null ? undefined : _this$props$switchOpt4.switchValue,
          disabled: this.props.disabled,
          tintColor: (_this$props$switchOpt5 = this.props.switchOption) == null ? undefined : _this$props$switchOpt5.tintColor,
          onTintColor: (_this$props$switchOpt6 = this.props.switchOption) == null ? undefined : _this$props$switchOpt6.onTintColor,
          onValueChange: (_this$props$switchOpt7 = this.props.switchOption) == null ? undefined : _this$props$switchOpt7.onSwitchValueChange
        });
        return _react.default.createElement(_reactNative.View, {
          style: [styles.right, this.props.type === TYPE.BUTTON ? {
            flex: 1,
            maxWidth: 80
          } : {}]
        }, component);
      }
    }, {
      key: "renderListCard",
      value: function renderListCard() {
        var _this$props$choiceOpt6, _this$props$switchOpt8;

        return _react.default.createElement(_reactNative.View, {
          style: styles.cardView
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: styles.innerView
        }, this.props.onPress ? (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: this.props.accessibilityLabel || this.props.title,
          accessibilityHint: this.props.accessibilityHint
        }) : (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: this.props.accessibilityLabel || this.props.title,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: this.props.disabled,
            checked: (_this$props$choiceOpt6 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt6.checked,
            value: (_this$props$switchOpt8 = this.props.switchOption) == null ? undefined : _this$props$switchOpt8.switchValue
          }
        }), {
          accessibilityActions: this.props.onPress ? [] : [{
            name: 'activate'
          }],
          onAccessibilityAction: this.props.onPress ? null : this.onAccessibilityAction
        }), this.renderIcon(), this.renderText(), this.renderRight()), this.renderSeparator());
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme4;

        var cardStyle = this.props.cardStyle;
        var defaultCardStyle = {
          height: cardHeight,
          marginTop: 0,
          width: width - 20
        };
        var mixCardStyle = (0, _objectSpread2.default)({}, defaultCardStyle, cardStyle, this.radius, !this.props.allowFontScaling || this.props.unlimitedHeightEnable ? {
          height: undefined
        } : {});
        return _react.default.createElement(_Card.default, {
          showShadow: false,
          onPress: this.props.onPress,
          innerView: this.renderListCard(),
          cardStyle: mixCardStyle,
          disabled: this.props.disabled,
          underlayColor: this.props.cardUnderlayColor || ((_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.listUnderlayColor),
          allowFontScaling: this.props.allowFontScaling,
          unlimitedHeightEnable: this.props.unlimitedHeightEnable
        });
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator() {
        if (!this.props.showSeparator) return null;
        return this.props.separator || _react.default.createElement(_Separator.default, {
          style: {
            marginHorizontal: _resources.Styles.common.padding
          }
        });
      }
    }]);
    return ListCard;
  }(_react.default.Component);

  ListCard.contextType = _configProvider.ConfigContext;
  ListCard.TYPE = TYPE;
  ListCard.CARD_RADIUS_TYPE = CARD_RADIUS_TYPE;
  ListCard.propTypes = {
    radiusType: _propTypes.default.oneOf([CARD_RADIUS_TYPE.ALL, CARD_RADIUS_TYPE.TOP, CARD_RADIUS_TYPE.NONE, CARD_RADIUS_TYPE.BOTTOM]),
    type: _propTypes.default.oneOf([TYPE.SWITCH, TYPE.CHOICE, TYPE.BUTTON, TYPE.ARROW, TYPE.NONE]),
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    value: _propTypes.default.string,
    titleStyle: _propTypes.default.object,
    subtitleStyle: _propTypes.default.object,
    valueStyle: _propTypes.default.object,
    cardStyle: _propTypes.default.object,
    titleNumberOfLines: _propTypes.default.number,
    valueNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    themeColor: _propTypes.default.string,
    onPress: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    showSeparator: _propTypes.default.bool,
    separator: _propTypes.default.element,
    buttonOption: _propTypes.default.object,
    choiceOption: _propTypes.default.object,
    onSwitchValueChange: _propTypes.default.func,
    switchValue: _propTypes.default.bool,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    switchStyle: _propTypes.default.object,
    cardUnderlayColor: _propTypes.default.string
  };
  ListCard.defaultProps = {
    type: TYPE.NONE,
    radiusType: CARD_RADIUS_TYPE.ALL,
    themeColor: _resources.Styles.common.MHGreen,
    titleNumberOfLines: 1,
    subtitleNumberOfLines: 2,
    valueNumberOfLines: 1,
    allowFontScaling: true,
    unlimitedHeightEnable: false,
    showSeparator: true,
    disabled: false
  };

  var styles = _reactNative.StyleSheet.create({
    cardView: {
      flex: 1,
      justifyContent: 'center'
    },
    innerView: {
      flexDirection: 'row',
      marginHorizontal: marginHor,
      flex: 1,
      alignItems: 'center',
      marginTop: 20,
      marginBottom: 20
    },
    title: {
      fontSize: 16,
      lineHeight: 22,
      fontWeight: 'bold'
    },
    subtitle: {
      fontSize: 13,
      lineHeight: 18,
      marginTop: 1
    },
    valueText: {
      marginLeft: 6,
      justifyContent: 'flex-end',
      flexDirection: 'row',
      alignItems: 'center',
      flex: 1
    },
    titleView: {
      justifyContent: 'center',
      paddingRight: 10
    },
    iconViewStyle: {
      width: iconViewLength,
      height: iconViewLength,
      borderRadius: 21.5,
      alignItems: 'center',
      justifyContent: 'center',
      marginRight: 13
    },
    iconStyle: {
      width: 24,
      height: 24
    },
    arrowIcon: {
      width: 22,
      height: 22
    },
    right: {
      alignItems: 'flex-end'
    }
  });

  var _default = ListCard;
  exports.default = _default;
},23302,[14305,14314,14344,14317,14320,14323,14371,14377,14386,10318,10297,10033,22453,22906,22450,22864,23212,22786,22426,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "89fa8d6cf15dfd21d927e4b987a1fe30",
    "name": "tick",
    "type": "png"
  });
},23305,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 24,
    "height": 36,
    "scales": [1],
    "hash": "0614f6a327335cac2159e6c7632b3a41",
    "name": "select",
    "type": "png"
  });
},23308,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/chart",
    "width": 36,
    "height": 40,
    "scales": [2, 3],
    "hash": "0f9ea999fc3712a45589b4b9b704b59d",
    "name": "empty_dark",
    "type": "png"
  });
},23311,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/chart",
    "width": 36,
    "height": 40,
    "scales": [2, 3],
    "hash": "a142f3495a3879b3f401e7385246d091",
    "name": "empty_light",
    "type": "png"
  });
},23314,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  var ModalDialog = _react.default.memo(function (props) {
    var children = props.children,
        visible = props.visible,
        animationType = props.animationType,
        onRequestClose = props.onRequestClose;
    return _react.default.createElement(_reactNative.Modal, {
      visible: visible,
      animationType: animationType,
      onRequestClose: onRequestClose,
      transparent: true
    }, children);
  });

  var _default = ModalDialog;
  exports.default = _default;
},23335,[14305,10297,10033]);
__r(10120);
__r(10001);